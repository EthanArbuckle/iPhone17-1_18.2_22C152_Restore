unint64_t *sub_784F0(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5;
  int64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  unint64_t v10;
  int64_t v11;
  unint64_t v13;
  unint64_t v14;
  uint64_t v15;
  int64_t v16;
  unint64_t v17;
  int64_t v18;
  uint64_t v19;
  uint64_t v20;
  uint64_t v21;

  v5 = 0;
  v6 = 0;
  v7 = a3 + 64;
  v8 = 1 << *(unsigned char *)(a3 + 32);
  v9 = -1;
  if (v8 < 64) {
    v9 = ~(-1 << v8);
  }
  v10 = v9 & *(void *)(a3 + 64);
  v11 = (unint64_t)(v8 + 63) >> 6;
  do
  {
    while (1)
    {
      do
      {
LABEL_5:
        while (v10)
        {
          v13 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
          v14 = v13 | (v6 << 6);
          v15 = *(void *)(a4 + 16);
          if (v15) {
            goto LABEL_22;
          }
        }
        v16 = v6 + 1;
        if (__OFADD__(v6, 1)) {
          goto LABEL_31;
        }
        if (v16 >= v11) {
          return (unint64_t *)sub_72558(result, a2, v5, a3);
        }
        v17 = *(void *)(v7 + 8 * v16);
        ++v6;
        if (!v17)
        {
          v6 = v16 + 1;
          if (v16 + 1 >= v11) {
            return (unint64_t *)sub_72558(result, a2, v5, a3);
          }
          v17 = *(void *)(v7 + 8 * v6);
          if (!v17)
          {
            v6 = v16 + 2;
            if (v16 + 2 >= v11) {
              return (unint64_t *)sub_72558(result, a2, v5, a3);
            }
            v17 = *(void *)(v7 + 8 * v6);
            if (!v17)
            {
              v18 = v16 + 3;
              if (v18 >= v11) {
                return (unint64_t *)sub_72558(result, a2, v5, a3);
              }
              v17 = *(void *)(v7 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  v6 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_33;
                  }
                  if (v6 >= v11) {
                    return (unint64_t *)sub_72558(result, a2, v5, a3);
                  }
                  v17 = *(void *)(v7 + 8 * v6);
                  ++v18;
                  if (v17) {
                    goto LABEL_21;
                  }
                }
              }
              v6 = v18;
            }
          }
        }
LABEL_21:
        v10 = (v17 - 1) & v17;
        v14 = __clz(__rbit64(v17)) + (v6 << 6);
        v15 = *(void *)(a4 + 16);
      }
      while (!v15);
LABEL_22:
      v19 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
      if (*(void *)(a4 + 32) != v19) {
        break;
      }
LABEL_4:
      *(unint64_t *)((char *)result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v5++, 1)) {
        goto LABEL_32;
      }
    }
  }
  while (v15 == 1);
  v20 = 5;
  while (1)
  {
    v21 = v20 - 3;
    if (__OFADD__(v20 - 4, 1)) {
      break;
    }
    if (*(void *)(a4 + 8 * v20) == v19) {
      goto LABEL_4;
    }
    ++v20;
    if (v21 == v15) {
      goto LABEL_5;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void *sub_78690(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void), uint64_t a6, void (*a7)(char *), uint64_t a8)
{
  uint64_t v108 = a8;
  v109 = a7;
  uint64_t v110 = a6;
  v111 = a5;
  uint64_t v112 = sub_12124(&qword_26D938);
  uint64_t v116 = *(void *)(v112 - 8);
  uint64_t v10 = __chkstk_darwin(v112);
  v12 = (char *)&v103 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v10);
  v105 = (char *)&v103 - v14;
  __chkstk_darwin(v13);
  v104 = (char *)&v103 - v15;
  uint64_t v16 = sub_12124(&qword_26D958);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  v19 = (char *)&v103 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = __chkstk_darwin(v17);
  uint64_t v107 = (uint64_t)&v103 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v106 = (uint64_t)&v103 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v114 = (char *)&v103 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v118 = (uint64_t)&v103 - v27;
  __chkstk_darwin(v26);
  v29 = (char *)&v103 - v28;
  v30 = _swiftEmptyArrayStorage;
  v130 = _swiftEmptyArrayStorage;
  *(void *)&long long v119 = a1;
  swift_bridgeObjectRetain();
  uint64_t v31 = sub_12124(&qword_26D960);
  uint64_t v32 = sub_52CC0(&qword_26D968, &qword_26D960);
  v115 = v29;
  uint64_t v113 = v31;
  uint64_t v117 = v32;
  sub_1FB3D0();
  if (!*(void *)(a4 + 16)
    || (sub_1FC7E0(),
        sub_1FB8C0(),
        Swift::Int v33 = sub_1FC830(),
        uint64_t v34 = -1 << *(unsigned char *)(a4 + 32),
        unint64_t v35 = v33 & ~v34,
        ((*(void *)(a4 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0))
  {
LABEL_8:
    uint64_t v38 = *(void *)(a1 + 16);
    if (!v38)
    {
LABEL_37:
      *(void *)&long long v119 = _swiftEmptyArrayStorage;
      sub_1FB3D0();
LABEL_38:
      *(void *)&long long v119 = v30;
      uint64_t v79 = (uint64_t)v114;
      sub_1FB3D0();
      uint64_t v80 = v116;
      uint64_t v76 = (uint64_t)v115;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      sub_1FC7E0();
      sub_1FB8C0();
      Swift::Int v81 = sub_1FC830();
      uint64_t v82 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v83 = v81 & ~v82;
      uint64_t v84 = a4 + 56;
      if ((*(void *)(a4 + 56 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83))
      {
        uint64_t v85 = ~v82;
        while (1)
        {
          int v86 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v83);
          if (v86 != 1 && v86 != 2) {
            break;
          }
          char v87 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v87) {
            goto LABEL_48;
          }
          unint64_t v83 = (v83 + 1) & v85;
          if (((*(void *)(v84 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v83) & 1) == 0) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        uint64_t v89 = v107;
        sub_5606C(v118, v107, &qword_26D958);
        uint64_t v90 = v112;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v89, 1, v112) != 1)
        {
          v96 = v105;
          (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v105, v89, v90);
          v109(v96);
          uint64_t v97 = v111();
          swift_bridgeObjectRelease();
          sub_A9BBC(v97);
          (*(void (**)(char *, uint64_t))(v80 + 8))(v96, v90);
          if (!*(void *)(a4 + 16)) {
            goto LABEL_64;
          }
LABEL_51:
          sub_1FC7E0();
          sub_1FB8C0();
          Swift::Int v91 = sub_1FC830();
          uint64_t v92 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v93 = v91 & ~v92;
          if ((*(void *)(v84 + ((v93 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v93))
          {
            uint64_t v94 = ~v92;
            while (!*(unsigned char *)(*(void *)(a4 + 48) + v93) || *(unsigned char *)(*(void *)(a4 + 48) + v93) == 2)
            {
              char v95 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              if (v95) {
                goto LABEL_61;
              }
              unint64_t v93 = (v93 + 1) & v94;
              if (((*(void *)(v84 + ((v93 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v93) & 1) == 0) {
                goto LABEL_64;
              }
            }
            swift_bridgeObjectRelease();
LABEL_61:
            uint64_t v98 = v106;
            sub_5606C(v79, v106, &qword_26D958);
            uint64_t v99 = v112;
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v80 + 48))(v98, 1, v112) == 1)
            {
              sub_55F38(v79, &qword_26D958);
              sub_55F38(v118, &qword_26D958);
              sub_55F38(v76, &qword_26D958);
              uint64_t v76 = v98;
              goto LABEL_65;
            }
            v100 = v104;
            (*(void (**)(char *, uint64_t, uint64_t))(v80 + 32))(v104, v98, v99);
            v109(v100);
            uint64_t v101 = v111();
            swift_bridgeObjectRelease();
            sub_A9BBC(v101);
            (*(void (**)(char *, uint64_t))(v80 + 8))(v100, v99);
          }
LABEL_64:
          sub_55F38(v79, &qword_26D958);
          sub_55F38(v118, &qword_26D958);
          goto LABEL_65;
        }
        sub_55F38(v89, &qword_26D958);
      }
LABEL_50:
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_51;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v39 = v38 - 1;
    v40 = _swiftEmptyArrayStorage;
    uint64_t v41 = 32;
    for (uint64_t i = v38 - 1; ; --i)
    {
      long long v43 = *(_OWORD *)(a1 + v41 + 112);
      long long v125 = *(_OWORD *)(a1 + v41 + 96);
      long long v126 = v43;
      long long v127 = *(_OWORD *)(a1 + v41 + 128);
      char v128 = *(unsigned char *)(a1 + v41 + 144);
      long long v44 = *(_OWORD *)(a1 + v41 + 48);
      long long v121 = *(_OWORD *)(a1 + v41 + 32);
      long long v122 = v44;
      long long v45 = *(_OWORD *)(a1 + v41 + 80);
      long long v123 = *(_OWORD *)(a1 + v41 + 64);
      long long v124 = v45;
      long long v46 = *(_OWORD *)(a1 + v41 + 16);
      long long v119 = *(_OWORD *)(a1 + v41);
      long long v120 = v46;
      if ((BYTE8(v119) & 1) == 0) {
        break;
      }
      char v47 = sub_1FC5F0();
      sub_54834((uint64_t)&v119);
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_15;
      }
      sub_7A018((uint64_t)&v119);
      if (!i) {
        goto LABEL_21;
      }
LABEL_20:
      v41 += 152;
    }
    sub_54834((uint64_t)&v119);
    swift_bridgeObjectRelease();
LABEL_15:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    v129 = v40;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_467D8(0, v40[2] + 1, 1);
      v40 = v129;
    }
    unint64_t v50 = v40[2];
    unint64_t v49 = v40[3];
    if (v50 >= v49 >> 1)
    {
      sub_467D8(v49 > 1, v50 + 1, 1);
      v40 = v129;
    }
    v40[2] = v50 + 1;
    v51 = &v40[19 * v50];
    long long v52 = v120;
    *((_OWORD *)v51 + 2) = v119;
    *((_OWORD *)v51 + 3) = v52;
    long long v53 = v121;
    long long v54 = v122;
    long long v55 = v124;
    *((_OWORD *)v51 + 6) = v123;
    *((_OWORD *)v51 + 7) = v55;
    *((_OWORD *)v51 + 4) = v53;
    *((_OWORD *)v51 + 5) = v54;
    long long v56 = v125;
    long long v57 = v126;
    long long v58 = v127;
    *((unsigned char *)v51 + 176) = v128;
    *((_OWORD *)v51 + 9) = v57;
    *((_OWORD *)v51 + 10) = v58;
    *((_OWORD *)v51 + 8) = v56;
    if (i) {
      goto LABEL_20;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v119 = v40;
    sub_1FB3D0();
    swift_bridgeObjectRetain();
    v30 = _swiftEmptyArrayStorage;
    for (uint64_t j = 32; ; j += 152)
    {
      long long v60 = *(_OWORD *)(a1 + j + 112);
      long long v125 = *(_OWORD *)(a1 + j + 96);
      long long v126 = v60;
      long long v127 = *(_OWORD *)(a1 + j + 128);
      char v128 = *(unsigned char *)(a1 + j + 144);
      long long v61 = *(_OWORD *)(a1 + j + 48);
      long long v121 = *(_OWORD *)(a1 + j + 32);
      long long v122 = v61;
      long long v62 = *(_OWORD *)(a1 + j + 80);
      long long v123 = *(_OWORD *)(a1 + j + 64);
      long long v124 = v62;
      long long v63 = *(_OWORD *)(a1 + j + 16);
      long long v119 = *(_OWORD *)(a1 + j);
      long long v120 = v63;
      if (BYTE8(v119) == 1)
      {
        sub_54834((uint64_t)&v119);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v64 = sub_1FC5F0();
        sub_54834((uint64_t)&v119);
        swift_bridgeObjectRelease();
        if ((v64 & 1) == 0)
        {
          sub_7A018((uint64_t)&v119);
          if (!v39) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
      char v65 = swift_isUniquelyReferenced_nonNull_native();
      v129 = v30;
      if ((v65 & 1) == 0)
      {
        sub_467D8(0, v30[2] + 1, 1);
        v30 = v129;
      }
      unint64_t v67 = v30[2];
      unint64_t v66 = v30[3];
      if (v67 >= v66 >> 1)
      {
        sub_467D8(v66 > 1, v67 + 1, 1);
        v30 = v129;
      }
      v30[2] = v67 + 1;
      v68 = &v30[19 * v67];
      long long v69 = v120;
      *((_OWORD *)v68 + 2) = v119;
      *((_OWORD *)v68 + 3) = v69;
      long long v70 = v121;
      long long v71 = v122;
      long long v72 = v124;
      *((_OWORD *)v68 + 6) = v123;
      *((_OWORD *)v68 + 7) = v72;
      *((_OWORD *)v68 + 4) = v70;
      *((_OWORD *)v68 + 5) = v71;
      long long v73 = v125;
      long long v74 = v126;
      long long v75 = v127;
      *((unsigned char *)v68 + 176) = v128;
      *((_OWORD *)v68 + 9) = v74;
      *((_OWORD *)v68 + 10) = v75;
      *((_OWORD *)v68 + 8) = v73;
      if (!v39)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_32:
      --v39;
    }
  }
  uint64_t v36 = ~v34;
  while (!*(unsigned char *)(*(void *)(a4 + 48) + v35) || *(unsigned char *)(*(void *)(a4 + 48) + v35) == 1)
  {
    char v37 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v37) {
      goto LABEL_35;
    }
    unint64_t v35 = (v35 + 1) & v36;
    if (((*(void *)(a4 + 56 + ((v35 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v35) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_35:
  uint64_t v76 = (uint64_t)v115;
  sub_5606C((uint64_t)v115, (uint64_t)v19, &qword_26D958);
  uint64_t v77 = v116;
  uint64_t v78 = v112;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v116 + 48))(v19, 1, v112) == 1)
  {
    sub_55F38((uint64_t)v19, &qword_26D958);
    uint64_t v38 = *(void *)(a1 + 16);
    if (!v38) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v77 + 32))(v12, v19, v78);
  v109(v12);
  uint64_t v88 = v111();
  swift_bridgeObjectRelease();
  sub_A9BBC(v88);
  (*(void (**)(char *, uint64_t))(v77 + 8))(v12, v78);
LABEL_65:
  sub_55F38(v76, &qword_26D958);
  return v130;
}

void *sub_792EC(uint64_t a1, unsigned char *a2, uint64_t a3)
{
  uint64_t v3 = *(void *)a3;
  uint64_t v4 = *(unsigned __int8 *)(a3 + 8);
  uint64_t v5 = *(void *)(a3 + 16);
  switch(*a2)
  {
    case 2:
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v3;
      *(unsigned char *)(v7 + 24) = v4;
      *(void *)(v7 + 32) = v5;
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v8 = swift_bridgeObjectRetain();
      v9 = sub_4B3D0(v8);
      swift_bridgeObjectRelease();
      uint64_t v10 = (uint64_t (*)(void))sub_7BA80;
      uint64_t v11 = (void (*)(char *))sub_695B0;
      goto LABEL_6;
    case 3:
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v3;
      *(unsigned char *)(v7 + 24) = v4;
      *(void *)(v7 + 32) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v9 = sub_4B3D0(a1);
      swift_bridgeObjectRelease();
      uint64_t v10 = (uint64_t (*)(void))sub_7BA30;
      uint64_t v11 = (void (*)(char *))sub_6A0AC;
      goto LABEL_6;
    case 4:
      uint64_t v12 = swift_bridgeObjectRetain();
      uint64_t v13 = sub_4B3D0(v12);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_65BD0((uint64_t)v13, v3, v4, v5);
      goto LABEL_10;
    case 5:
      uint64_t v7 = swift_allocObject();
      *(void *)(v7 + 16) = v3;
      *(unsigned char *)(v7 + 24) = v4;
      *(void *)(v7 + 32) = v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      v9 = sub_4B3D0(a1);
      swift_bridgeObjectRelease();
      uint64_t v10 = (uint64_t (*)(void))sub_7B9DC;
      uint64_t v11 = (void (*)(char *))sub_6AB3C;
LABEL_6:
      uint64_t v15 = sub_78690((uint64_t)v9, v3, v4, v5, v10, v7, v11, 0);
      swift_release();
      sub_A9BBC((uint64_t)v15);
      swift_release_n();
      return _swiftEmptyArrayStorage;
    case 6:
      uint64_t v16 = swift_bridgeObjectRetain();
      uint64_t v17 = sub_4B3D0(v16);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_66A48((uint64_t)v17, v3, v4, v5);
      goto LABEL_10;
    case 7:
      uint64_t v18 = swift_bridgeObjectRetain();
      v19 = sub_4B3D0(v18);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_678C0((uint64_t)v19, v3, v4, v5);
      goto LABEL_10;
    case 8:
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_4B3D0(v20);
      swift_bridgeObjectRelease();
      uint64_t v14 = sub_68738((uint64_t)v21, v3, v4, v5);
LABEL_10:
      uint64_t v22 = (uint64_t)v14;
      swift_release();
      sub_A9BBC(v22);
      break;
    default:
      return _swiftEmptyArrayStorage;
  }
  return _swiftEmptyArrayStorage;
}

unint64_t *sub_7960C(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  do
  {
LABEL_5:
    while (!v10)
    {
      BOOL v12 = __OFADD__(v6++, 1);
      if (v12) {
        goto LABEL_32;
      }
      if (v6 >= v11) {
        return (unint64_t *)sub_72558(result, a2, v5, a3);
      }
      unint64_t v16 = *(void *)(v7 + 8 * v6);
      if (!v16)
      {
        int64_t v17 = v6 + 1;
        if (v6 + 1 >= v11) {
          return (unint64_t *)sub_72558(result, a2, v5, a3);
        }
        unint64_t v16 = *(void *)(v7 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v6 + 2;
          if (v6 + 2 >= v11) {
            return (unint64_t *)sub_72558(result, a2, v5, a3);
          }
          unint64_t v16 = *(void *)(v7 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v6 + 3;
            if (v6 + 3 >= v11) {
              return (unint64_t *)sub_72558(result, a2, v5, a3);
            }
            unint64_t v16 = *(void *)(v7 + 8 * v17);
            if (!v16)
            {
              while (1)
              {
                int64_t v6 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_34;
                }
                if (v6 >= v11) {
                  return (unint64_t *)sub_72558(result, a2, v5, a3);
                }
                unint64_t v16 = *(void *)(v7 + 8 * v6);
                ++v17;
                if (v16) {
                  goto LABEL_18;
                }
              }
            }
          }
        }
        int64_t v6 = v17;
      }
LABEL_18:
      unint64_t v18 = __clz(__rbit64(v16));
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = v18 + (v6 << 6);
      uint64_t v15 = *(void *)(a4 + 16);
      if (v15) {
        goto LABEL_19;
      }
LABEL_4:
      *(unint64_t *)((char *)result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      BOOL v12 = __OFADD__(v5++, 1);
      if (v12) {
        goto LABEL_33;
      }
    }
    unint64_t v13 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v14 = v13 | (v6 << 6);
    uint64_t v15 = *(void *)(a4 + 16);
    if (!v15) {
      goto LABEL_4;
    }
LABEL_19:
    uint64_t v19 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
  }
  while (*(void *)(a4 + 32) == v19);
  if (v15 == 1) {
    goto LABEL_4;
  }
  uint64_t v20 = 5;
  while (1)
  {
    uint64_t v21 = v20 - 3;
    if (__OFADD__(v20 - 4, 1)) {
      break;
    }
    if (*(void *)(a4 + 8 * v20) == v19) {
      goto LABEL_5;
    }
    ++v20;
    if (v21 == v15) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

void *sub_797A8(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = sub_12124(&qword_26D088);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v80 = (char *)&v65 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v65 = *(void *)(v79 - 8);
  uint64_t v7 = __chkstk_darwin(v79);
  uint64_t v9 = (char *)&v65 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v85 = (uint64_t)&v65 - v10;
  uint64_t v67 = *a2;
  uint64_t v11 = a2[2];
  uint64_t v12 = 0;
  unint64_t v13 = sub_61EB8(a1);
  if (v13[2])
  {
    sub_12124(&qword_26D970);
    unint64_t v14 = (void *)sub_1FC2A0();
  }
  else
  {
    unint64_t v14 = _swiftEmptyDictionarySingleton;
  }
  *(void *)int v86 = v14;
  sub_74F38((uint64_t)v13, 1, (uint64_t *)v86);
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)v86;
  unint64_t v16 = 0;
  uint64_t v89 = _swiftEmptyArrayStorage;
  uint64_t v88 = &_swiftEmptySetSingleton;
  uint64_t v76 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v77 = (void (**)(char *, char *, uint64_t))(v5 + 32);
  long long v75 = xmmword_1FD2A0;
  uint64_t v78 = v4;
  int64_t v17 = v80;
  uint64_t v66 = v11;
  do
  {
    if (v16 >= 7)
    {
LABEL_49:
      __break(1u);
LABEL_50:
      sub_1FC2B0();
      __break(1u);
      swift_release();
      __break(1u);
      JUMPOUT(0x79F8CLL);
    }
    if (*(void *)(v11 + 16))
    {
      unint64_t v74 = v16;
      unsigned __int8 v21 = *((unsigned char *)&off_254178 + v16 + 32);
      unint64_t v22 = sub_4C7F4(v21);
      if (v23)
      {
        uint64_t v24 = *(void *)(v11 + 56) + 24 * v22;
        uint64_t v84 = *(void *)v24;
        char v25 = *(unsigned char *)(v24 + 8);
        uint64_t v26 = *(void *)(v24 + 16);
        v86[0] = v21;
        swift_bridgeObjectRetain();
        uint64_t v27 = sub_76FF0(v15, v86, v67);
        swift_bridgeObjectRetain();
        uint64_t v28 = swift_bridgeObjectRetain();
        long long v70 = v27;
        uint64_t v29 = sub_71D78(v28, (uint64_t)v27, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_784F0);
        uint64_t v30 = v15;
        uint64_t v31 = v29;
        uint64_t v69 = v12;
        uint64_t v71 = v30;
        swift_bridgeObjectRelease();
        unsigned __int8 v87 = v21;
        *(void *)int v86 = v84;
        v86[8] = v25;
        *(void *)&v86[16] = v26;
        unint64_t v18 = sub_792EC(v31, &v87, (uint64_t)v86);
        swift_bridgeObjectRelease();
        swift_release();
        uint64_t v83 = v18[2];
        if (v83)
        {
          uint64_t v32 = v65;
          uint64_t v82 = (char *)v18
              + ((*(unsigned __int8 *)(v65 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v65 + 80));
          v68 = v18;
          swift_bridgeObjectRetain();
          uint64_t v33 = 0;
          uint64_t v81 = *(void *)(v32 + 72);
          uint64_t v34 = _swiftEmptyArrayStorage;
          while (2)
          {
            uint64_t v84 = v33 + 1;
            uint64_t v35 = v85;
            sub_7D4C8((uint64_t)&v82[v81 * v33], v85, type metadata accessor for CollectionRecommendation);
            sub_7D4C8(v35, (uint64_t)v9, type metadata accessor for CollectionRecommendation);
            switch(swift_getEnumCaseMultiPayload())
            {
              case 1u:
              case 3u:
              case 4u:
              case 5u:
              case 6u:
              case 7u:
              case 8u:
                goto LABEL_17;
              case 2u:
                uint64_t v50 = sub_12124(&qword_26D090);
                memcpy(v86, &v9[*(int *)(v50 + 48)], sizeof(v86));
                sub_124B4(v86);
                swift_bridgeObjectRelease();
LABEL_17:
                (*v77)(v17, v9, v4);
                sub_1FB3A0();
                (*v76)(v17, v4);
                uint64_t v36 = *(void **)v86;
                int64_t v37 = *(void *)(*(void *)v86 + 16);
                if (!v37) {
                  goto LABEL_27;
                }
                goto LABEL_20;
              case 9u:
                sub_7B974(*((void *)v9 + 2), *((void *)v9 + 3), *((void *)v9 + 4), *((void *)v9 + 5), *((void *)v9 + 6), *((void *)v9 + 7), *((void *)v9 + 8));
                uint64_t v36 = _swiftEmptyArrayStorage;
                int64_t v37 = _swiftEmptyArrayStorage[2];
                if (!v37) {
                  goto LABEL_27;
                }
                goto LABEL_20;
              default:
                uint64_t v38 = *(void *)v9;
                char v39 = v9[8];
                uint64_t v40 = *((void *)v9 + 2);
                char v41 = v9[24];
                uint64_t v42 = *((void *)v9 + 4);
                char v43 = v9[40];
                long long v73 = *((_OWORD *)v9 + 3);
                uint64_t v72 = *((void *)v9 + 8);
                uint64_t v44 = *((void *)v9 + 9);
                sub_12124(&qword_26D3B8);
                uint64_t v36 = (void *)swift_allocObject();
                *((_OWORD *)v36 + 1) = v75;
                v36[4] = v38;
                *((unsigned char *)v36 + 40) = v39;
                v36[6] = v40;
                *((unsigned char *)v36 + 56) = v41;
                v36[8] = v42;
                *((unsigned char *)v36 + 72) = v43;
                uint64_t v4 = v78;
                *((_OWORD *)v36 + 5) = v73;
                v36[12] = v72;
                v36[13] = v44;
                int64_t v37 = v36[2];
                if (v37)
                {
LABEL_20:
                  *(void *)int v86 = _swiftEmptyArrayStorage;
                  sub_46538(0, v37, 0);
                  long long v45 = *(void **)v86;
                  unint64_t v46 = *(void *)(*(void *)v86 + 16);
                  uint64_t v47 = 4;
                  do
                  {
                    uint64_t v48 = v36[v47];
                    *(void *)int v86 = v45;
                    unint64_t v49 = v45[3];
                    if (v46 >= v49 >> 1)
                    {
                      sub_46538(v49 > 1, v46 + 1, 1);
                      long long v45 = *(void **)v86;
                    }
                    v45[2] = v46 + 1;
                    v45[v46 + 4] = v48;
                    v47 += 10;
                    ++v46;
                    --v37;
                  }
                  while (v37);
                  swift_bridgeObjectRelease();
                  uint64_t v4 = v78;
                }
                else
                {
LABEL_27:
                  swift_bridgeObjectRelease();
                  long long v45 = _swiftEmptyArrayStorage;
                }
                sub_7B918(v85);
                uint64_t v51 = v45[2];
                int64_t v52 = v34[2];
                int64_t v53 = v52 + v51;
                int64_t v17 = v80;
                if (__OFADD__(v52, v51))
                {
                  __break(1u);
LABEL_46:
                  __break(1u);
LABEL_47:
                  __break(1u);
LABEL_48:
                  __break(1u);
                  goto LABEL_49;
                }
                uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                if ((isUniquelyReferenced_nonNull_native & 1) != 0 && v53 <= v34[3] >> 1)
                {
                  if (!v45[2]) {
                    goto LABEL_14;
                  }
                }
                else
                {
                  if (v52 <= v53) {
                    int64_t v55 = v52 + v51;
                  }
                  else {
                    int64_t v55 = v52;
                  }
                  uint64_t v34 = sub_41858((void *)isUniquelyReferenced_nonNull_native, v55, 1, v34);
                  if (!v45[2])
                  {
LABEL_14:
                    if (v51) {
                      goto LABEL_46;
                    }
                    goto LABEL_15;
                  }
                }
                uint64_t v56 = v34[2];
                if ((v34[3] >> 1) - v56 < v51) {
                  goto LABEL_47;
                }
                long long v57 = (char *)&v34[v56 + 4];
                long long v58 = (char *)(v45 + 4);
                size_t v59 = 8 * v51;
                if (v45 + 4 < (void *)&v57[8 * v51] && v57 < &v58[v59]) {
                  goto LABEL_50;
                }
                memcpy(v57, v58, v59);
                if (v51)
                {
                  uint64_t v60 = v34[2];
                  BOOL v61 = __OFADD__(v60, v51);
                  uint64_t v62 = v60 + v51;
                  if (v61) {
                    goto LABEL_48;
                  }
                  v34[2] = v62;
                }
LABEL_15:
                swift_bridgeObjectRelease();
                uint64_t v33 = v84;
                if (v84 != v83) {
                  continue;
                }
                unint64_t v18 = v68;
                swift_bridgeObjectRelease();
                break;
            }
            break;
          }
        }
        else
        {
          uint64_t v34 = _swiftEmptyArrayStorage;
        }
        uint64_t v19 = sub_50A6C((uint64_t)v34);
        swift_bridgeObjectRelease();
        sub_65040(v19);
        sub_A9BBC((uint64_t)v18);
        uint64_t v20 = (uint64_t)v70;
        swift_bridgeObjectRetain();
        uint64_t v12 = v69;
        uint64_t v15 = sub_71D78(v71, v20, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_7960C);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v11 = v66;
      }
      unint64_t v16 = v74;
    }
    ++v16;
  }
  while (v16 != 7);
  long long v63 = v89;
  sub_4B3D0(v15);
  swift_bridgeObjectRelease();
  return v63;
}

uint64_t sub_79FBC(char *a1)
{
  v2 = *(void ***)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  char v4 = *a1;
  long long v5 = *(_OWORD *)(v3 + 112);
  v10[6] = *(_OWORD *)(v3 + 96);
  v10[7] = v5;
  v10[8] = *(_OWORD *)(v3 + 128);
  char v11 = *(unsigned char *)(v3 + 144);
  long long v6 = *(_OWORD *)(v3 + 48);
  v10[2] = *(_OWORD *)(v3 + 32);
  v10[3] = v6;
  long long v7 = *(_OWORD *)(v3 + 80);
  v10[4] = *(_OWORD *)(v3 + 64);
  v10[5] = v7;
  long long v8 = *(_OWORD *)(v3 + 16);
  v10[0] = *(_OWORD *)v3;
  v10[1] = v8;
  return sub_6CF7C(v4, v2, (uint64_t)v10);
}

uint64_t sub_7A018(uint64_t a1)
{
  return a1;
}

uint64_t sub_7A0A0(void *a1, unsigned char *a2, void *a3, unsigned char *a4, uint64_t a5, unint64_t a6)
{
  long long v6 = a3;
  long long v7 = a1;
  if (a1[2] >= (int64_t)a6 || a3[2] <= a6)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return (uint64_t)v7;
  }
  uint64_t v10 = 0x6B6F6F6265;
  if (*a2) {
    uint64_t v11 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v11 = 0x6B6F6F6265;
  }
  if (*a2) {
    unint64_t v12 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v12 = 0xE500000000000000;
  }
  if (*a4)
  {
    uint64_t v10 = 0x6F6F626F69647561;
    unint64_t v13 = 0xE90000000000006BLL;
  }
  else
  {
    unint64_t v13 = 0xE500000000000000;
  }
  BOOL v15 = v11 == v10 && v12 == v13;
  BOOL v41 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  unint64_t v40 = a6;
  while (1)
  {
    if (v41)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v16 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v16 & 1) == 0)
      {
        unint64_t v32 = v6[2];
        if (!v32) {
          return (uint64_t)v7;
        }
        unint64_t v22 = 0;
        uint64_t v33 = *(void *)(a5 + 16);
        for (uint64_t i = 4; ; i += 10)
        {
          if (v33)
          {
            sub_56168(v6[i]);
            if (v35) {
              break;
            }
          }
          if (v32 == ++v22) {
            return (uint64_t)v7;
          }
        }
        if (v22 >= v32) {
          goto LABEL_46;
        }
        uint64_t v36 = sub_56168(v6[i]);
        if ((v37 & 1) == 0) {
          return (uint64_t)v7;
        }
        uint64_t v38 = *(void *)(a5 + 56) + 80 * v36;
        uint64_t v46 = *(void *)v38;
        char v45 = *(unsigned char *)(v38 + 8);
        uint64_t v44 = *(void *)(v38 + 16);
        char v43 = *(unsigned char *)(v38 + 24);
        uint64_t v17 = *(void *)(v38 + 32);
        char v18 = *(unsigned char *)(v38 + 40);
        uint64_t v19 = *(void *)(v38 + 48);
        uint64_t v42 = *(void *)(v38 + 56);
        uint64_t v20 = *(void *)(v38 + 64);
        uint64_t v21 = *(void *)(v38 + 72);
        sub_5480C(v17, v18);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          goto LABEL_41;
        }
        goto LABEL_24;
      }
    }
    if (!v6[2]) {
      goto LABEL_45;
    }
    uint64_t v46 = v6[4];
    char v45 = *((unsigned char *)v6 + 40);
    uint64_t v44 = v6[6];
    char v43 = *((unsigned char *)v6 + 56);
    uint64_t v17 = v6[8];
    char v18 = *((unsigned char *)v6 + 72);
    uint64_t v19 = v6[10];
    uint64_t v42 = v6[11];
    uint64_t v20 = v6[12];
    uint64_t v21 = v6[13];
    sub_5480C(v17, v18);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v22 = 0;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_41:
    }
      long long v7 = sub_41CBC(0, v7[2] + 1, 1, v7);
LABEL_24:
    unint64_t v24 = v7[2];
    unint64_t v23 = v7[3];
    if (v24 >= v23 >> 1) {
      long long v7 = sub_41CBC((void *)(v23 > 1), v24 + 1, 1, v7);
    }
    v7[2] = v24 + 1;
    char v25 = &v7[10 * v24];
    v25[4] = v46;
    *((unsigned char *)v25 + 40) = v45;
    v25[6] = v44;
    *((unsigned char *)v25 + 56) = v43;
    v25[8] = v17;
    *((unsigned char *)v25 + 72) = v18;
    v25[10] = v19;
    v25[11] = v42;
    v25[12] = v20;
    v25[13] = v21;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v6 = sub_98494(v6);
    }
    unint64_t v26 = v6[2];
    if (v22 >= v26) {
      break;
    }
    unint64_t v27 = v26 - 1;
    uint64_t v28 = v26 - 1 - v22;
    if (v28 < 0) {
      goto LABEL_47;
    }
    uint64_t v29 = &v6[10 * v22];
    uint64_t v30 = v29[8];
    char v31 = *((unsigned char *)v29 + 72);
    memmove(v29 + 4, v29 + 14, 80 * v28);
    v6[2] = v27;
    sub_54820(v30, v31);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v7[2] >= (int64_t)v40 || v6[2] <= v40) {
      return (uint64_t)v7;
    }
  }
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_7A49C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v48 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v6 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  long long v8 = (char *)&v46 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(a2 + 16);
  unsigned __int8 v10 = *a3;
  if (*(void *)(v9 + 16) && (unint64_t v11 = sub_4C7F4(0), (v12 & 1) != 0))
  {
    uint64_t v13 = *(void *)(v9 + 56) + 24 * v11;
    unint64_t v14 = *(void **)(v13 + 16);
    if (*(unsigned char *)(v13 + 8)) {
      uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v15 = *(void *)v13;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v14 = &_swiftEmptySetSingleton;
    uint64_t v15 = 0x7FFFFFFFFFFFFFFFLL;
  }
  if ((sub_39800(v10, (uint64_t)v14) & 1) == 0)
  {
    if (!v14[2]
      || (sub_1FC7E0(),
          sub_1FB8C0(),
          Swift::Int v30 = sub_1FC830(),
          uint64_t v31 = -1 << *((unsigned char *)v14 + 32),
          unint64_t v32 = v30 & ~v31,
          ((*(void *)((char *)v14 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v32) & 1) == 0))
    {
LABEL_22:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    uint64_t v33 = ~v31;
    while (!*(unsigned char *)(v14[6] + v32) || *(unsigned char *)(v14[6] + v32) == 1)
    {
      char v34 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v34) {
        goto LABEL_9;
      }
      unint64_t v32 = (v32 + 1) & v33;
      if (((*(void *)((char *)v14 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v32) & 1) == 0) {
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
  }
LABEL_9:
  swift_bridgeObjectRelease();
  int64_t v16 = *(void *)(a1 + 16);
  uint64_t v17 = _swiftEmptyArrayStorage;
  if (v16)
  {
    uint64_t v47 = v15;
    unint64_t v49 = _swiftEmptyArrayStorage;
    sub_46818(0, v16, 0);
    uint64_t v17 = v49;
    char v18 = (void *)(a1 + 104);
    do
    {
      char v19 = *((unsigned char *)v18 - 64);
      uint64_t v20 = *(v18 - 7);
      char v21 = *((unsigned char *)v18 - 48);
      uint64_t v22 = *(v18 - 5);
      uint64_t v24 = *(v18 - 3);
      uint64_t v23 = *(v18 - 2);
      uint64_t v25 = *(v18 - 1);
      uint64_t v26 = *v18;
      *(void *)long long v8 = *(v18 - 9);
      v8[8] = v19;
      *((void *)v8 + 2) = v20;
      v8[24] = v21;
      *((void *)v8 + 4) = v22;
      char v27 = *((unsigned char *)v18 - 32);
      v8[40] = v27;
      *((void *)v8 + 6) = v24;
      *((void *)v8 + 7) = v23;
      *((void *)v8 + 8) = v25;
      *((void *)v8 + 9) = v26;
      swift_storeEnumTagMultiPayload();
      sub_5480C(v22, v27);
      unint64_t v49 = v17;
      unint64_t v29 = v17[2];
      unint64_t v28 = v17[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v29 >= v28 >> 1)
      {
        sub_46818(v28 > 1, v29 + 1, 1);
        uint64_t v17 = v49;
      }
      v17[2] = v29 + 1;
      sub_7D530((uint64_t)v8, (uint64_t)v17+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v29, type metadata accessor for CollectionRecommendation);
      v18 += 10;
      --v16;
    }
    while (v16);
    uint64_t v15 = v47;
  }
  uint64_t v35 = sub_3E3AC(v15, (uint64_t)v17);
  uint64_t v37 = v36;
  uint64_t v39 = v38;
  unint64_t v41 = v40;
  if ((v40 & 1) == 0) {
    goto LABEL_24;
  }
  sub_1FC730();
  swift_unknownObjectRetain_n();
  char v43 = (void *)swift_dynamicCastClass();
  if (!v43)
  {
    swift_unknownObjectRelease();
    char v43 = _swiftEmptyArrayStorage;
  }
  uint64_t v44 = v43[2];
  swift_release();
  if (__OFSUB__(v41 >> 1, v39))
  {
    __break(1u);
  }
  else if (v44 == (v41 >> 1) - v39)
  {
    uint64_t v42 = swift_dynamicCastClass();
    swift_unknownObjectRelease();
    if (v42) {
      return (void *)v42;
    }
    swift_unknownObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  swift_unknownObjectRelease();
LABEL_24:
  uint64_t v42 = (uint64_t)sub_4B4CC(v35, v37, v39, v41);
  swift_unknownObjectRelease();
  return (void *)v42;
}

_OWORD *sub_7A8D0(uint64_t a1)
{
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  *(void *)(a1 + 80) = 254;
  *(_OWORD *)(a1 + 104) = 0u;
  *(_OWORD *)(a1 + 120) = 0u;
  *(_OWORD *)(a1 + 136) = 0u;
  *(_OWORD *)(a1 + 152) = 0u;
  *(_OWORD *)(a1 + 168) = 0u;
  *(_OWORD *)(a1 + 184) = 0u;
  *(_OWORD *)(a1 + 200) = 0u;
  *(_OWORD *)(a1 + 216) = 0u;
  *(_OWORD *)(a1 + 232) = 0u;
  *(_OWORD *)(a1 + 248) = 0u;
  *(unsigned char *)(a1 + 376) = 0;
  *(_OWORD *)(a1 + 88) = 0u;
  uint64_t result = (_OWORD *)(a1 + 88);
  result[11] = 0u;
  result[12] = 0u;
  result[13] = 0u;
  result[14] = 0u;
  result[15] = 0u;
  result[16] = 0u;
  result[17] = 0u;
  return result;
}

void *sub_7A92C(uint64_t a1, uint64_t a2, unsigned __int8 *a3)
{
  uint64_t v6 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v61 = (uint64_t)&v55 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  unint64_t v11 = (char *)&v55 - v10;
  __chkstk_darwin(v9);
  long long v58 = (char *)&v55 - v12;
  uint64_t v13 = *(void *)(a2 + 16);
  unsigned __int8 v14 = *a3;
  if (*(void *)(v13 + 16) && (unint64_t v15 = sub_4C7F4(9u), (v16 & 1) != 0))
  {
    uint64_t v17 = *(void *)(v13 + 56) + 24 * v15;
    char v18 = *(void **)(v17 + 16);
    if (*(unsigned char *)(v17 + 8)) {
      uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
    }
    else {
      uint64_t v19 = *(void *)v17;
    }
    swift_bridgeObjectRetain();
  }
  else
  {
    char v18 = &_swiftEmptySetSingleton;
    uint64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
  }
  if ((sub_39800(v14, (uint64_t)v18) & 1) == 0)
  {
    if (!v18[2]
      || (sub_1FC7E0(),
          sub_1FB8C0(),
          Swift::Int v37 = sub_1FC830(),
          uint64_t v38 = -1 << *((unsigned char *)v18 + 32),
          unint64_t v39 = v37 & ~v38,
          ((*(void *)((char *)v18 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v39) & 1) == 0))
    {
LABEL_27:
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    uint64_t v40 = v19;
    uint64_t v41 = a1;
    uint64_t v42 = ~v38;
    while (!*(unsigned char *)(v18[6] + v39) || *(unsigned char *)(v18[6] + v39) == 1)
    {
      char v43 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_31;
      }
      unint64_t v39 = (v39 + 1) & v42;
      if (((*(void *)((char *)v18 + ((v39 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v39) & 1) == 0) {
        goto LABEL_27;
      }
    }
    swift_bridgeObjectRelease();
LABEL_31:
    swift_bridgeObjectRelease();
    a1 = v41;
    uint64_t v19 = v40;
    uint64_t v20 = *(void *)(a1 + 16);
    if (v20) {
      goto LABEL_10;
    }
LABEL_32:
    uint64_t v22 = _swiftEmptyArrayStorage;
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a1 + 16);
  if (!v20) {
    goto LABEL_32;
  }
LABEL_10:
  uint64_t v56 = v19;
  swift_bridgeObjectRetain();
  uint64_t v21 = 0;
  uint64_t v22 = _swiftEmptyArrayStorage;
  uint64_t v57 = a1;
  uint64_t v23 = (uint64_t)v58;
  do
  {
    uint64_t v24 = a1 + v21;
    if ((*(unsigned char *)(a1 + v21 + 56) & 1) == 0)
    {
      uint64_t v25 = *(void *)(v24 + 104);
      uint64_t v26 = *(void *)(v24 + 88);
      uint64_t v27 = *(void *)(v24 + 96);
      uint64_t v28 = *(void *)(v24 + 80);
      uint64_t v29 = *(void *)(v24 + 64);
      uint64_t v30 = *(void *)(v24 + 48);
      uint64_t v31 = *(unsigned __int8 *)(v24 + 40);
      uint64_t v32 = *(void *)(v24 + 32);
      unsigned __int8 v33 = *(unsigned char *)(v24 + 72);
      char v34 = _swiftEmptyDictionarySingleton;
      if (v27) {
        char v34 = *(void **)(v24 + 96);
      }
      *(void *)unint64_t v11 = v30;
      v11[8] = v31;
      *((void *)v11 + 2) = v32;
      *((void *)v11 + 3) = v31;
      *((void *)v11 + 4) = v30;
      *((void *)v11 + 5) = 0;
      *((void *)v11 + 6) = v29;
      *((void *)v11 + 7) = v33;
      *((void *)v11 + 8) = v28;
      *((void *)v11 + 9) = v26;
      *((void *)v11 + 10) = v27;
      *((void *)v11 + 11) = v25;
      *((void *)v11 + 12) = v34;
      *((void *)v11 + 13) = v25;
      swift_storeEnumTagMultiPayload();
      sub_7D530((uint64_t)v11, v23, type metadata accessor for CollectionRecommendation);
      sub_7D530(v23, v61, type metadata accessor for CollectionRecommendation);
      sub_5480C(v29, v33);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v22 = (void *)sub_41F08(0, v22[2] + 1, 1, (unint64_t)v22);
      }
      unint64_t v36 = v22[2];
      unint64_t v35 = v22[3];
      a1 = v57;
      if (v36 >= v35 >> 1) {
        uint64_t v22 = (void *)sub_41F08(v35 > 1, v36 + 1, 1, (unint64_t)v22);
      }
      v22[2] = v36 + 1;
      sub_7D530(v61, (uint64_t)v22+ ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80))+ *(void *)(v59 + 72) * v36, type metadata accessor for CollectionRecommendation);
    }
    v21 += 80;
    --v20;
  }
  while (v20);
  swift_bridgeObjectRelease();
  uint64_t v19 = v56;
LABEL_33:
  uint64_t v44 = sub_3E3AC(v19, (uint64_t)v22);
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  unint64_t v50 = v49;
  if (v49)
  {
    sub_1FC730();
    swift_unknownObjectRetain_n();
    int64_t v52 = (void *)swift_dynamicCastClass();
    if (!v52)
    {
      swift_unknownObjectRelease();
      int64_t v52 = _swiftEmptyArrayStorage;
    }
    uint64_t v53 = v52[2];
    swift_release();
    if (__OFSUB__(v50 >> 1, v48))
    {
      __break(1u);
    }
    else if (v53 == (v50 >> 1) - v48)
    {
      uint64_t v51 = swift_dynamicCastClass();
      swift_unknownObjectRelease();
      if (v51) {
        return (void *)v51;
      }
      swift_unknownObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v51 = (uint64_t)sub_4B4CC(v44, v46, v48, v50);
  swift_unknownObjectRelease();
  return (void *)v51;
}

void *sub_7AE54(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v80 = a2;
  uint64_t v81 = a1;
  uint64_t v4 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v70 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v76 = (char *)&v70 - v10;
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v70 - v11;
  uint64_t v13 = sub_12124(&qword_26D928);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v77 = (char *)&v70 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  char v18 = (char *)&v70 - v17;
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v70 - v19;
  uint64_t v21 = sub_12124(&qword_26D088);
  uint64_t v22 = *(void *)(v21 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  long long v73 = (char *)&v70 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = __chkstk_darwin(v23);
  long long v75 = (char *)&v70 - v26;
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v70 - v27;
  uint64_t v29 = *(void *)(a3 + 16);
  uint64_t v30 = *(void *)(v29 + 16);
  unint64_t v74 = v8;
  if (v30 && (unint64_t v31 = sub_4C7F4(1u), (v32 & 1) != 0))
  {
    unsigned __int8 v33 = *(void **)(*(void *)(v29 + 56) + 24 * v31 + 16);
    swift_bridgeObjectRetain();
    if (!v33[2]) {
      goto LABEL_21;
    }
  }
  else
  {
    unsigned __int8 v33 = _swiftEmptySetSingleton;
    if (!_swiftEmptySetSingleton[2]) {
      goto LABEL_21;
    }
  }
  uint64_t v71 = v5;
  uint64_t v72 = v4;
  uint64_t v78 = v22;
  uint64_t v79 = v21;
  sub_1FC7E0();
  sub_1FB8C0();
  Swift::Int v34 = sub_1FC830();
  uint64_t v35 = -1 << *((unsigned char *)v33 + 32);
  unint64_t v36 = v34 & ~v35;
  Swift::Int v37 = (char *)(v33 + 7);
  if ((*(void *)((char *)v33 + ((v36 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v36))
  {
    uint64_t v38 = ~v35;
    while (!*(unsigned char *)(v33[6] + v36) || *(unsigned char *)(v33[6] + v36) == 1)
    {
      char v39 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v39) {
        goto LABEL_27;
      }
      unint64_t v36 = (v36 + 1) & v38;
      if (((*(void *)&v37[(v36 >> 3) & 0xFFFFFFFFFFFFFF8] >> v36) & 1) == 0) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
LABEL_27:
    swift_bridgeObjectRelease();
    uint64_t v82 = v81;
    swift_bridgeObjectRetain();
    uint64_t v49 = swift_bridgeObjectRetain();
    sub_A9A60(v49);
    sub_12124(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    sub_1FB3D0();
    uint64_t v51 = v78;
    uint64_t v50 = v79;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v20, 1, v79) == 1)
    {
      sub_55F38((uint64_t)v20, &qword_26D928);
      return _swiftEmptyArrayStorage;
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v51 + 32))(v28, v20, v50);
      (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v12, v28, v50);
      swift_storeEnumTagMultiPayload();
      uint64_t v44 = (void *)sub_41F08(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
      unint64_t v53 = v44[2];
      unint64_t v52 = v44[3];
      if (v53 >= v52 >> 1) {
        uint64_t v44 = (void *)sub_41F08(v52 > 1, v53 + 1, 1, (unint64_t)v44);
      }
      v44[2] = v53 + 1;
      sub_7D530((uint64_t)v12, (uint64_t)v44+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v53, type metadata accessor for CollectionRecommendation);
      (*(void (**)(char *, uint64_t))(v51 + 8))(v28, v50);
    }
    return v44;
  }
LABEL_12:
  if (!v33[2])
  {
LABEL_21:
    uint64_t v44 = _swiftEmptyArrayStorage;
    goto LABEL_22;
  }
  sub_1FC7E0();
  sub_1FB8C0();
  Swift::Int v40 = sub_1FC830();
  uint64_t v41 = -1 << *((unsigned char *)v33 + 32);
  unint64_t v42 = v40 & ~v41;
  if ((*(void *)&v37[(v42 >> 3) & 0xFFFFFFFFFFFFFF8] >> v42))
  {
    uint64_t v43 = ~v41;
    uint64_t v44 = _swiftEmptyArrayStorage;
    uint64_t v45 = v79;
    while (1)
    {
      int v46 = *(unsigned __int8 *)(v33[6] + v42);
      if (v46 != 1 && v46 != 2) {
        break;
      }
      char v47 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v47) {
        goto LABEL_33;
      }
      unint64_t v42 = (v42 + 1) & v43;
      if (((*(void *)&v37[(v42 >> 3) & 0xFFFFFFFFFFFFFF8] >> v42) & 1) == 0)
      {
        if (v33[2]) {
          goto LABEL_39;
        }
        goto LABEL_22;
      }
    }
    swift_bridgeObjectRelease();
LABEL_33:
    uint64_t v82 = v81;
    swift_bridgeObjectRetain();
    sub_12124(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    sub_1FB3D0();
    uint64_t v54 = v78;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v78 + 48))(v18, 1, v45) == 1)
    {
      sub_55F38((uint64_t)v18, &qword_26D928);
      uint64_t v44 = _swiftEmptyArrayStorage;
      if (v33[2]) {
        goto LABEL_39;
      }
      goto LABEL_22;
    }
    uint64_t v55 = v75;
    (*(void (**)(char *, char *, uint64_t))(v54 + 32))(v75, v18, v45);
    uint64_t v56 = (uint64_t)v76;
    (*(void (**)(char *, char *, uint64_t))(v54 + 16))(v76, v55, v45);
    swift_storeEnumTagMultiPayload();
    uint64_t v44 = (void *)sub_41F08(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
    unint64_t v58 = v44[2];
    unint64_t v57 = v44[3];
    if (v58 >= v57 >> 1) {
      uint64_t v44 = (void *)sub_41F08(v57 > 1, v58 + 1, 1, (unint64_t)v44);
    }
    v44[2] = v58 + 1;
    sub_7D530(v56, (uint64_t)v44+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v58, type metadata accessor for CollectionRecommendation);
    (*(void (**)(char *, uint64_t))(v78 + 8))(v55, v45);
    if (!v33[2]) {
      goto LABEL_22;
    }
  }
  else
  {
    uint64_t v44 = _swiftEmptyArrayStorage;
    uint64_t v45 = v79;
    if (!v33[2]) {
      goto LABEL_22;
    }
  }
LABEL_39:
  sub_1FC7E0();
  sub_1FB8C0();
  Swift::Int v59 = sub_1FC830();
  uint64_t v60 = -1 << *((unsigned char *)v33 + 32);
  unint64_t v61 = v59 & ~v60;
  if (((*(void *)&v37[(v61 >> 3) & 0xFFFFFFFFFFFFFF8] >> v61) & 1) == 0)
  {
LABEL_22:
    swift_bridgeObjectRelease();
    return v44;
  }
  uint64_t v62 = ~v60;
  while (!*(unsigned char *)(v33[6] + v61) || *(unsigned char *)(v33[6] + v61) == 2)
  {
    char v63 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v63) {
      goto LABEL_47;
    }
    unint64_t v61 = (v61 + 1) & v62;
    if (((*(void *)&v37[(v61 >> 3) & 0xFFFFFFFFFFFFFF8] >> v61) & 1) == 0) {
      goto LABEL_22;
    }
  }
  swift_bridgeObjectRelease();
LABEL_47:
  swift_bridgeObjectRelease();
  uint64_t v82 = v80;
  swift_bridgeObjectRetain();
  sub_12124(&qword_26D6A0);
  sub_52CC0(&qword_26D930, &qword_26D6A0);
  uint64_t v64 = (uint64_t)v77;
  sub_1FB3D0();
  uint64_t v65 = v78;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v78 + 48))(v64, 1, v45) == 1)
  {
    sub_55F38(v64, &qword_26D928);
  }
  else
  {
    uint64_t v66 = v73;
    (*(void (**)(char *, uint64_t, uint64_t))(v65 + 32))(v73, v64, v45);
    uint64_t v67 = (uint64_t)v74;
    (*(void (**)(char *, char *, uint64_t))(v65 + 16))(v74, v66, v45);
    swift_storeEnumTagMultiPayload();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v44 = (void *)sub_41F08(0, v44[2] + 1, 1, (unint64_t)v44);
    }
    unint64_t v69 = v44[2];
    unint64_t v68 = v44[3];
    if (v69 >= v68 >> 1) {
      uint64_t v44 = (void *)sub_41F08(v68 > 1, v69 + 1, 1, (unint64_t)v44);
    }
    v44[2] = v69 + 1;
    sub_7D530(v67, (uint64_t)v44+ ((*(unsigned __int8 *)(v71 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v71 + 80))+ *(void *)(v71 + 72) * v69, type metadata accessor for CollectionRecommendation);
    (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v45);
  }
  return v44;
}

uint64_t sub_7B918(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionRecommendation(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_7B974(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_54820(a5, a6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_7B9DC(uint64_t a1)
{
  return sub_7BA4C(a1, (uint64_t)sub_6B614, 5);
}

uint64_t sub_7B9F8()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 40, 7);
}

void *sub_7BA30(uint64_t a1)
{
  return sub_7BA4C(a1, (uint64_t)sub_6B614, 3);
}

void *sub_7BA4C(uint64_t a1, uint64_t a2, int a3)
{
  return sub_6B808(a1, *(void *)(v3 + 16), *(unsigned char *)(v3 + 24), *(void *)(v3 + 32), a2, a3);
}

uint64_t sub_7BA80(uint64_t a1)
{
  return sub_6B398(a1, *(void *)(v1 + 16), *(unsigned char *)(v1 + 24));
}

void *sub_7BA98(unint64_t *a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v149 = a2;
  v150 = a1;
  uint64_t v161 = sub_12124(&qword_26D978);
  __chkstk_darwin(v161);
  uint64_t v7 = (char *)&v148 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26D980);
  uint64_t v159 = *(void *)(v8 - 8);
  uint64_t v160 = v8;
  __chkstk_darwin(v8);
  uint64_t v10 = (uint64_t *)((char *)&v148 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  int64_t v11 = 0;
  v162 = a3;
  uint64_t v14 = a3[8];
  uint64_t v13 = a3 + 8;
  uint64_t v12 = v14;
  uint64_t v15 = 1 << *((unsigned char *)v13 - 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v12;
  v156 = v13;
  int64_t v157 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v18 = a4 + 32;
  uint64_t v151 = 0;
  v152 = &v215[20];
  uint64_t v167 = a4 + 32;
  uint64_t v153 = a4;
  v154 = v7;
  v155 = v10;
  if (!v17) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v163 = (v17 - 1) & v17;
  int64_t v164 = v11;
  unint64_t v19 = __clz(__rbit64(v17)) | (v11 << 6);
LABEL_16:
  memcpy(v215, (const void *)(v162[6] + 560 * v19), 0x229uLL);
  uint64_t v24 = v162[7];
  uint64_t v25 = *(void *)(v159 + 72);
  unint64_t v158 = v19;
  sub_5606C(v24 + v25 * v19, (uint64_t)v10, &qword_26D980);
  memcpy(v7, v215, 0x229uLL);
  uint64_t v26 = &v7[*(int *)(v161 + 48)];
  uint64_t v27 = *(int *)(v160 + 48);
  uint64_t v28 = &v26[v27];
  uint64_t v29 = (char *)v10 + v27;
  *(void *)uint64_t v26 = *v10;
  uint64_t v30 = sub_12124(&qword_26D938);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
  uint64_t v31 = *(void *)(a4 + 16);
  sub_12384(v215);
  sub_12384(v215);
  swift_bridgeObjectRetain();
  uint64_t v216 = v31;
  if (!v31) {
    goto LABEL_201;
  }
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  uint64_t v191 = v215[0];
  while (2)
  {
    unsigned __int8 v33 = (double *)(v18 + 560 * v32);
    double v34 = *v33;
    int v35 = *((unsigned __int8 *)v33 + 8);
    uint64_t v36 = *((void *)v33 + 2);
    uint64_t v37 = *((void *)v33 + 3);
    double v38 = v33[4];
    char v39 = *((unsigned char *)v33 + 40);
    uint64_t v40 = *((uint64_t *)v33 + 6);
    uint64_t v178 = *((uint64_t *)v33 + 7);
    uint64_t v179 = v40;
    uint64_t v41 = *((unsigned __int8 *)v33 + 64);
    double v189 = v38;
    double v190 = *(double *)&v41;
    uint64_t v176 = *((void *)v33 + 9);
    LODWORD(v177) = *((unsigned __int8 *)v33 + 80);
    uint64_t v42 = *((void *)v33 + 11);
    uint64_t v43 = *((void *)v33 + 12);
    double v186 = v33[13];
    uint64_t v187 = v42;
    uint64_t v44 = *((uint64_t *)v33 + 14);
    uint64_t v45 = *((uint64_t *)v33 + 15);
    uint64_t v184 = *((uint64_t *)v33 + 16);
    uint64_t v185 = v43;
    unint64_t v188 = *((void *)v33 + 17);
    double v46 = v33[18];
    double v182 = *(double *)&v44;
    double v183 = v46;
    double v47 = v33[19];
    uint64_t v180 = v45;
    double v181 = v47;
    sub_55844((uint64_t)(v33 + 20), (uint64_t)v214, &qword_26C518);
    if (*(void *)&v34 != v191) {
      goto LABEL_19;
    }
    uint64_t v166 = *((void *)v33 + 68);
    int v165 = *((unsigned __int8 *)v33 + 552);
    if (v35) {
      uint64_t v48 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v48 = 0x6B6F6F6265;
    }
    if (v35) {
      unint64_t v49 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v49 = 0xE500000000000000;
    }
    uint64_t v50 = v215[2];
    uint64_t v175 = v215[3];
    LODWORD(v174) = LOBYTE(v215[5]);
    uint64_t v171 = v215[6];
    uint64_t v172 = v215[4];
    uint64_t v170 = v215[7];
    uint64_t v173 = LOBYTE(v215[8]);
    uint64_t v168 = v215[9];
    int v169 = LOBYTE(v215[10]);
    if (LOBYTE(v215[1])) {
      uint64_t v51 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v51 = 0x6B6F6F6265;
    }
    if (LOBYTE(v215[1])) {
      unint64_t v52 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v52 = 0xE500000000000000;
    }
    if (v48 == v51 && v49 == v52)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v53 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v53 & 1) == 0) {
        goto LABEL_18;
      }
    }
    uint64_t v54 = *(void *)(v36 + 16);
    if (v54 != *(void *)(v50 + 16))
    {
LABEL_18:
      uint64_t v18 = v167;
      goto LABEL_19;
    }
    uint64_t v18 = v167;
    if (v54 && v36 != v50)
    {
      for (uint64_t i = 0; i != v54; ++i)
      {
        uint64_t v56 = (void *)(v36 + 32 + 16 * i);
        unint64_t v57 = (void *)(v50 + 32 + 16 * i);
        if (*v56 != *v57) {
          goto LABEL_19;
        }
        unint64_t v58 = (void *)v56[1];
        Swift::Int v59 = (void *)v57[1];
        uint64_t v60 = v58[2];
        if (v60 != v59[2]) {
          goto LABEL_19;
        }
        if (v60) {
          BOOL v61 = v58 == v59;
        }
        else {
          BOOL v61 = 1;
        }
        if (!v61)
        {
          if (v58[4] != v59[4]) {
            goto LABEL_19;
          }
          if (v60 != 1)
          {
            if (v58[5] != v59[5]) {
              goto LABEL_19;
            }
            uint64_t v62 = v58 + 6;
            char v63 = v59 + 6;
            uint64_t v64 = v60 - 2;
            while (v64)
            {
              uint64_t v66 = *v62++;
              uint64_t v65 = v66;
              uint64_t v67 = *v63++;
              --v64;
              if (v65 != v67) {
                goto LABEL_19;
              }
            }
          }
        }
      }
    }
    if ((sub_3C6B4(v37, v175) & 1) == 0) {
      goto LABEL_19;
    }
    if (v39)
    {
      if (!v174) {
        goto LABEL_19;
      }
    }
    else
    {
      char v68 = v174;
      if (*(void *)&v189 != v172) {
        char v68 = 1;
      }
      if (v68) {
        goto LABEL_19;
      }
    }
    if (*(void *)&v190 == 2)
    {
      if (v173 != 2) {
        goto LABEL_19;
      }
    }
    else
    {
      if (v173 == 2 || v179 != v171 || v178 != v170 || ((((v173 & 1) == 0) ^ LODWORD(v190)) & 1) == 0) {
        goto LABEL_19;
      }
      if (v177)
      {
        if ((v169 & 1) == 0) {
          goto LABEL_19;
        }
      }
      else if ((v169 & 1) != 0 || v176 != v168)
      {
        goto LABEL_19;
      }
    }
    uint64_t v69 = v215[11];
    uint64_t v70 = v215[12];
    uint64_t v71 = v215[16];
    unint64_t v72 = v215[17];
    double v189 = *(double *)&v215[18];
    double v190 = *(double *)&v215[13];
    double v73 = *(double *)&v215[19];
    unint64_t v74 = v215[17] & 0xFFFFFFFFFFFFFFFELL;
    if (v188 >> 1 == 0xFFFFFFFF)
    {
      if (v74 != 0x1FFFFFFFELL)
      {
LABEL_78:
        uint64_t v196 = v187;
        uint64_t v197 = v185;
        uint64_t v198 = *(void *)&v186;
        uint64_t v199 = *(void *)&v182;
        uint64_t v200 = v180;
        uint64_t v201 = v184;
        unint64_t v202 = v188;
        double v203 = v183;
        double v204 = v181;
        uint64_t v205 = v215[11];
        uint64_t v206 = v215[12];
        uint64_t v207 = *(void *)&v190;
        uint64_t v208 = v215[14];
        uint64_t v209 = v215[15];
        uint64_t v210 = v215[16];
        uint64_t v211 = v215[17];
        uint64_t v179 = v215[15];
        double v212 = v189;
        uint64_t v213 = v215[19];
        unint64_t v177 = v215[17];
        uint64_t v178 = v215[16];
        uint64_t v75 = *(void *)&v190;
        uint64_t v76 = v215[14];
        sub_12430(v187, v185, *(uint64_t *)&v186, *(uint64_t *)&v182, v180, v184, v188);
        sub_12430(v69, v70, v75, v76, v179, v178, v177);
        uint64_t v77 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1255C;
        goto LABEL_188;
      }
LABEL_66:
      sub_55844((uint64_t)v214, (uint64_t)&v196, &qword_26C518);
      if (sub_125F0((uint64_t)&v196) == 1)
      {
        sub_55844((uint64_t)v152, (uint64_t)v195, &qword_26C518);
        if (sub_125F0((uint64_t)v195) != 1) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_55844((uint64_t)v214, (uint64_t)v194, &qword_26C518);
        uint64_t v88 = v152;
        sub_55844((uint64_t)v152, (uint64_t)v195, &qword_26C518);
        if (sub_125F0((uint64_t)v195) == 1) {
          goto LABEL_19;
        }
        sub_55844((uint64_t)v88, (uint64_t)v193, &qword_26C518);
        memcpy(v192, v193, 0x179uLL);
        if (!_s20BooksPersonalization11BookHistoryV2eeoiySbAC_ACtFZ_0((uint64_t)v194, (uint64_t)v192)) {
          goto LABEL_19;
        }
      }
      if ((sub_6CDD4(v166, v215[68]) & 1) == 0) {
        goto LABEL_19;
      }
      uint64_t v10 = v155;
      unint64_t v89 = v158;
      if (v165 == 12)
      {
        if (LOBYTE(v215[69]) != 12) {
          goto LABEL_19;
        }
LABEL_208:
        a4 = v153;
        swift_bridgeObjectRelease();
      }
      else
      {
        if (LOBYTE(v215[69]) == 12) {
          goto LABEL_19;
        }
        switch(v165)
        {
          case 3:
            if (LOBYTE(v215[69]) == 3) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 4:
            if (LOBYTE(v215[69]) == 4) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 5:
            if (LOBYTE(v215[69]) == 5) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 6:
            if (LOBYTE(v215[69]) == 6) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 7:
            if (LOBYTE(v215[69]) == 7) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 8:
            if (LOBYTE(v215[69]) == 8) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 9:
            if (LOBYTE(v215[69]) == 9) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 10:
            if (LOBYTE(v215[69]) == 10) {
              goto LABEL_208;
            }
            goto LABEL_19;
          case 11:
            if (LOBYTE(v215[69]) == 11) {
              goto LABEL_208;
            }
            goto LABEL_19;
          default:
            if (LOBYTE(v215[69]) - 3 < 9) {
              goto LABEL_19;
            }
            uint64_t v142 = 0x6565726874;
            if (v165)
            {
              unint64_t v143 = 0xE400000000000000;
              if (v165 == 1) {
                uint64_t v144 = 1920298854;
              }
              else {
                uint64_t v144 = 1702259046;
              }
            }
            else
            {
              unint64_t v143 = 0xE500000000000000;
              uint64_t v144 = 0x6565726874;
            }
            if (LOBYTE(v215[69]))
            {
              unint64_t v145 = 0xE400000000000000;
              if (LOBYTE(v215[69]) == 1) {
                uint64_t v142 = 1920298854;
              }
              else {
                uint64_t v142 = 1702259046;
              }
            }
            else
            {
              unint64_t v145 = 0xE500000000000000;
            }
            if (v144 == v142 && v143 == v145)
            {
              a4 = v153;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v146 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v146 & 1) == 0) {
                goto LABEL_19;
              }
              a4 = v153;
              swift_bridgeObjectRelease();
              unint64_t v89 = v158;
            }
            break;
        }
      }
      uint64_t v7 = v154;
      sub_55F38((uint64_t)v154, &qword_26D978);
      sub_55F38((uint64_t)v10, &qword_26D980);
      sub_124B4(v215);
      *(unint64_t *)((char *)v150 + ((v89 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v89;
      BOOL v20 = __OFADD__(v151++, 1);
      if (!v20) {
        goto LABEL_202;
      }
      goto LABEL_216;
    }
    if (v74 == 0x1FFFFFFFELL) {
      goto LABEL_78;
    }
    uint64_t v196 = v187;
    uint64_t v78 = v184;
    uint64_t v197 = v185;
    uint64_t v198 = *(void *)&v186;
    uint64_t v80 = *(void *)&v182;
    double v79 = v183;
    uint64_t v199 = *(void *)&v182;
    uint64_t v81 = v180;
    double v82 = v181;
    uint64_t v200 = v180;
    uint64_t v201 = v184;
    unint64_t v202 = v188;
    double v203 = v183;
    double v204 = v181;
    uint64_t v205 = v215[11];
    uint64_t v206 = v215[12];
    uint64_t v207 = *(void *)&v190;
    uint64_t v208 = v215[14];
    uint64_t v209 = v215[15];
    uint64_t v210 = v215[16];
    uint64_t v211 = v215[17];
    double v212 = v189;
    uint64_t v213 = v215[19];
    uint64_t v179 = v215[15];
    switch(v188 >> 62)
    {
      case 1uLL:
        if (v215[17] >> 62 != 1) {
          goto LABEL_108;
        }
        double v90 = v186;
        double v91 = v182;
        double v92 = v190;
        uint64_t v175 = v215[12];
        uint64_t v176 = v215[14];
        double v93 = *(double *)&v215[14];
        if (v187 == v215[11] && v185 == v215[12])
        {
          uint64_t v87 = v179;
          if (v186 != v190) {
            goto LABEL_186;
          }
        }
        else
        {
          char v125 = sub_1FC5F0();
          uint64_t v80 = *(void *)&v182;
          uint64_t v87 = v179;
          uint64_t v81 = v180;
          uint64_t v78 = v184;
          if ((v125 & 1) == 0 || v90 != v92) {
            goto LABEL_186;
          }
        }
        if (v91 != v93) {
          goto LABEL_186;
        }
        if ((v188 & 1) == 0) {
          goto LABEL_145;
        }
        goto LABEL_139;
      case 2uLL:
        if (v215[17] >> 62 != 2) {
          goto LABEL_108;
        }
        double v94 = v186;
        double v95 = v182;
        double v96 = v190;
        uint64_t v175 = v215[12];
        uint64_t v176 = v215[14];
        double v97 = *(double *)&v215[14];
        if (v187 == v215[11] && v185 == v215[12])
        {
          uint64_t v98 = v179;
          if (v186 != v190) {
            goto LABEL_163;
          }
        }
        else
        {
          char v126 = sub_1FC5F0();
          double v82 = v181;
          uint64_t v80 = *(void *)&v182;
          uint64_t v98 = v179;
          uint64_t v81 = v180;
          double v79 = v183;
          uint64_t v78 = v184;
          if ((v126 & 1) == 0 || v94 != v96) {
            goto LABEL_163;
          }
        }
        if (v95 != v97) {
          goto LABEL_163;
        }
        if (v188)
        {
          if ((v72 & 1) == 0)
          {
LABEL_163:
            sub_12430(v187, v185, *(uint64_t *)&v186, v80, v81, v78, v188);
            uint64_t v103 = v69;
            uint64_t v104 = v175;
            uint64_t v106 = v176;
            uint64_t v105 = *(void *)&v190;
            uint64_t v107 = v98;
            goto LABEL_187;
          }
        }
        else if ((v72 & 1) != 0 || *(double *)&v81 != *(double *)&v98 || *(double *)&v78 != *(double *)&v71)
        {
          goto LABEL_163;
        }
        double v127 = v79;
        double v128 = v189;
        uint64_t v178 = v71;
        double v129 = v82;
        sub_12430(v187, v185, *(uint64_t *)&v186, v80, v81, v78, v188);
        sub_12430(v69, v175, *(uint64_t *)&v190, v176, v98, v178, v72);
        sub_7CC28(&v196, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
        if (v127 != v128 || v129 != v73) {
          goto LABEL_19;
        }
        goto LABEL_66;
      case 3uLL:
        if (v215[17] >> 62 != 3) {
          goto LABEL_108;
        }
        uint64_t v175 = v215[12];
        uint64_t v176 = v215[14];
        uint64_t v99 = *(void *)(v187 + 16);
        if (v99 != *(void *)(v215[11] + 16))
        {
          uint64_t v71 = v215[16];
          uint64_t v87 = v179;
          goto LABEL_186;
        }
        unint64_t v177 = v215[17];
        uint64_t v178 = v215[16];
        uint64_t v174 = v215[19];
        if (!v99 || v187 == v215[11])
        {
LABEL_160:
          uint64_t v173 = v69;
          uint64_t v130 = v185;
          uint64_t v131 = v81;
          uint64_t v132 = v80;
          sub_12430(v187, v185, *(uint64_t *)&v186, v80, v81, v78, v188);
          uint64_t v133 = v130;
          uint64_t v134 = v131;
          uint64_t v135 = v131;
          uint64_t v136 = v184;
          unint64_t v137 = v188;
          sub_12430(v187, v133, *(uint64_t *)&v186, v132, v134, v184, v188);
          uint64_t v138 = v185;
          uint64_t v139 = v136;
          unint64_t v140 = v137;
          sub_12430(v187, v185, *(uint64_t *)&v186, v132, v135, v139, v137);
          LOBYTE(v137) = v175;
          sub_12430(v173, v175, *(uint64_t *)&v190, v176, v179, v178, v177);
          LODWORD(v190) = sub_1D99A4(v138, v137);
          sub_7CC28(&v196, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
          uint64_t v141 = v184;
          sub_1255C(v187, v138, *(uint64_t *)&v186, v132, v135, v184, v140);
          sub_1255C(v187, v138, *(uint64_t *)&v186, *(uint64_t *)&v182, v135, v141, v140);
          if ((LOBYTE(v190) & 1) == 0) {
            goto LABEL_19;
          }
          goto LABEL_66;
        }
        uint64_t v100 = 0;
        while (2)
        {
          double v109 = *(double *)(v187 + v100 + 48);
          double v108 = *(double *)(v187 + v100 + 56);
          double v110 = *(double *)(v187 + v100 + 64);
          double v111 = *(double *)(v187 + v100 + 72);
          char v112 = *(unsigned char *)(v187 + v100 + 80);
          uint64_t v113 = v69;
          uint64_t v114 = *(void *)(v69 + v100 + 32);
          uint64_t v115 = *(void *)(v69 + v100 + 40);
          double v117 = *(double *)(v69 + v100 + 48);
          double v116 = *(double *)(v69 + v100 + 56);
          double v118 = *(double *)(v69 + v100 + 64);
          double v119 = *(double *)(v69 + v100 + 72);
          int v120 = *(unsigned __int8 *)(v69 + v100 + 80);
          if (*(void *)(v187 + v100 + 32) == v114 && *(void *)(v187 + v100 + 40) == v115)
          {
            if (v109 != v117 || v108 != v116) {
              goto LABEL_185;
            }
LABEL_124:
            if (v112)
            {
              if (!v120) {
                goto LABEL_185;
              }
            }
            else
            {
              if (v120) {
                goto LABEL_185;
              }
              if (v110 != v118 || v111 != v119) {
                goto LABEL_185;
              }
            }
            v100 += 56;
            --v99;
            uint64_t v69 = v113;
            if (!v99) {
              goto LABEL_160;
            }
            continue;
          }
          break;
        }
        if (sub_1FC5F0())
        {
          BOOL v122 = v109 == v117 && v108 == v116;
          uint64_t v78 = v184;
          uint64_t v81 = v180;
          uint64_t v80 = *(void *)&v182;
          if (!v122) {
            goto LABEL_185;
          }
          goto LABEL_124;
        }
        uint64_t v78 = v184;
        uint64_t v81 = v180;
        uint64_t v80 = *(void *)&v182;
LABEL_185:
        unint64_t v72 = v177;
        uint64_t v71 = v178;
        uint64_t v69 = v113;
        uint64_t v87 = v179;
LABEL_186:
        sub_12430(v187, v185, *(uint64_t *)&v186, v80, v81, v78, v188);
        uint64_t v103 = v69;
        uint64_t v104 = v175;
        uint64_t v106 = v176;
        uint64_t v105 = *(void *)&v190;
        uint64_t v107 = v87;
LABEL_187:
        sub_12430(v103, v104, v105, v106, v107, v71, v72);
        uint64_t v77 = (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578;
LABEL_188:
        sub_7CC28(&v196, v77);
LABEL_19:
        if (++v32 != v216) {
          continue;
        }
        a4 = v153;
        swift_bridgeObjectRelease();
        uint64_t v7 = v154;
        uint64_t v10 = v155;
LABEL_201:
        sub_55F38((uint64_t)v7, &qword_26D978);
        sub_55F38((uint64_t)v10, &qword_26D980);
        sub_124B4(v215);
LABEL_202:
        unint64_t v17 = v163;
        int64_t v11 = v164;
        if (v163) {
          goto LABEL_4;
        }
LABEL_5:
        BOOL v20 = __OFADD__(v11, 1);
        int64_t v21 = v11 + 1;
        if (v20)
        {
          __break(1u);
          goto LABEL_215;
        }
        if (v21 < v157)
        {
          unint64_t v22 = v156[v21];
          if (v22) {
            goto LABEL_15;
          }
          int64_t v23 = v21 + 1;
          if (v21 + 1 < v157)
          {
            unint64_t v22 = v156[v23];
            if (v22) {
              goto LABEL_14;
            }
            int64_t v23 = v21 + 2;
            if (v21 + 2 < v157)
            {
              unint64_t v22 = v156[v23];
              if (v22) {
                goto LABEL_14;
              }
              int64_t v23 = v21 + 3;
              if (v21 + 3 < v157)
              {
                unint64_t v22 = v156[v23];
                if (v22)
                {
LABEL_14:
                  int64_t v21 = v23;
LABEL_15:
                  uint64_t v163 = (v22 - 1) & v22;
                  int64_t v164 = v21;
                  unint64_t v19 = __clz(__rbit64(v22)) + (v21 << 6);
                  goto LABEL_16;
                }
                while (1)
                {
                  int64_t v21 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    break;
                  }
                  if (v21 >= v157) {
                    return sub_7282C(v150, v149, v151, v162);
                  }
                  unint64_t v22 = v156[v21];
                  ++v23;
                  if (v22) {
                    goto LABEL_15;
                  }
                }
LABEL_215:
                __break(1u);
LABEL_216:
                __break(1u);
                JUMPOUT(0x7CBF4);
              }
            }
          }
        }
        return sub_7282C(v150, v149, v151, v162);
      default:
        if (v215[17] >> 62)
        {
LABEL_108:
          uint64_t v101 = v215[12];
          uint64_t v102 = v215[14];
          sub_12430(v187, v185, *(uint64_t *)&v186, *(uint64_t *)&v182, v180, v184, v188);
          uint64_t v103 = v69;
          uint64_t v104 = v101;
          uint64_t v105 = *(void *)&v190;
          uint64_t v106 = v102;
          uint64_t v107 = v179;
          goto LABEL_187;
        }
        double v83 = v186;
        double v84 = v182;
        double v85 = v190;
        uint64_t v175 = v215[12];
        uint64_t v176 = v215[14];
        double v86 = *(double *)&v215[14];
        if (v187 == v215[11] && v185 == v215[12])
        {
          uint64_t v87 = v179;
          if (v186 != v190) {
            goto LABEL_186;
          }
        }
        else
        {
          char v124 = sub_1FC5F0();
          uint64_t v80 = *(void *)&v182;
          uint64_t v87 = v179;
          uint64_t v81 = v180;
          uint64_t v78 = v184;
          if ((v124 & 1) == 0 || v83 != v85) {
            goto LABEL_186;
          }
        }
        if (v84 != v86) {
          goto LABEL_186;
        }
        if (v188)
        {
LABEL_139:
          if ((v72 & 1) == 0) {
            goto LABEL_186;
          }
        }
        else
        {
LABEL_145:
          if ((v72 & 1) != 0 || *(double *)&v81 != *(double *)&v87 || *(double *)&v78 != *(double *)&v71) {
            goto LABEL_186;
          }
        }
        sub_12430(v187, v185, *(uint64_t *)&v186, v80, v81, v78, v188);
        sub_12430(v69, v175, *(uint64_t *)&v190, v176, v87, v71, v72);
        sub_7CC28(&v196, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
        goto LABEL_66;
    }
  }
}

uint64_t *sub_7CC28(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  uint64_t v9 = a1[15];
  uint64_t v10 = a1[16];
  uint64_t v11 = a1[17];
  uint64_t v13 = a1[9];
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  a2(v13, v4, v5, v6, v7, v8, v9, v10, v11);
  return a1;
}

uint64_t sub_7CCD8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  uint64_t v38 = sub_12124(&qword_26D990);
  __chkstk_darwin(v38);
  uint64_t v40 = (uint64_t *)((char *)&v29 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v7 = sub_12124(&qword_26D938);
  uint64_t result = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v29 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = 0;
  char v39 = (void *)a3;
  uint64_t v13 = *(void *)(a3 + 64);
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 64;
  uint64_t v14 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v15 = -1;
  if (v14 < 64) {
    uint64_t v15 = ~(-1 << v14);
  }
  unint64_t v16 = v15 & v13;
  uint64_t v36 = v9 + 16;
  uint64_t v37 = v9;
  int64_t v34 = (unint64_t)(v14 + 63) >> 6;
  int v35 = (uint64_t (**)(char *, uint64_t))(v9 + 8);
  while (1)
  {
    while (1)
    {
      if (v16)
      {
        unint64_t v17 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v18 = v17 | (v12 << 6);
      }
      else
      {
        int64_t v19 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_34;
        }
        if (v19 >= v34) {
          return sub_72B54(v31, v30, v32, v39);
        }
        unint64_t v20 = *(void *)(v33 + 8 * v19);
        ++v12;
        if (!v20)
        {
          int64_t v12 = v19 + 1;
          if (v19 + 1 >= v34) {
            return sub_72B54(v31, v30, v32, v39);
          }
          unint64_t v20 = *(void *)(v33 + 8 * v12);
          if (!v20)
          {
            int64_t v12 = v19 + 2;
            if (v19 + 2 >= v34) {
              return sub_72B54(v31, v30, v32, v39);
            }
            unint64_t v20 = *(void *)(v33 + 8 * v12);
            if (!v20)
            {
              int64_t v21 = v19 + 3;
              if (v21 >= v34) {
                return sub_72B54(v31, v30, v32, v39);
              }
              unint64_t v20 = *(void *)(v33 + 8 * v21);
              if (!v20)
              {
                while (1)
                {
                  int64_t v12 = v21 + 1;
                  if (__OFADD__(v21, 1)) {
                    goto LABEL_35;
                  }
                  if (v12 >= v34) {
                    return sub_72B54(v31, v30, v32, v39);
                  }
                  unint64_t v20 = *(void *)(v33 + 8 * v12);
                  ++v21;
                  if (v20) {
                    goto LABEL_20;
                  }
                }
              }
              int64_t v12 = v21;
            }
          }
        }
LABEL_20:
        unint64_t v16 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v12 << 6);
      }
      uint64_t v22 = *(void *)(v39[6] + 8 * v18);
      int64_t v23 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
      v23(v11, v39[7] + *(void *)(v37 + 72) * v18, v7);
      uint64_t v24 = v40;
      void *v40 = v22;
      uint64_t result = ((uint64_t (*)(char *, char *, uint64_t))v23)((char *)v24 + *(int *)(v38 + 48), v11, v7);
      uint64_t v25 = *(void *)(a4 + 16);
      if (v25) {
        break;
      }
LABEL_4:
      sub_55F38((uint64_t)v40, &qword_26D990);
      uint64_t result = (*v35)(v11, v7);
    }
    if (*(void *)(a4 + 32) != v22) {
      break;
    }
LABEL_29:
    sub_55F38((uint64_t)v40, &qword_26D990);
    uint64_t result = (*v35)(v11, v7);
    *(unint64_t *)((char *)v31 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    if (__OFADD__(v32++, 1))
    {
      __break(1u);
      return sub_72B54(v31, v30, v32, v39);
    }
  }
  if (v25 == 1) {
    goto LABEL_4;
  }
  uint64_t v26 = 5;
  while (1)
  {
    uint64_t v27 = v26 - 3;
    if (__OFADD__(v26 - 4, 1)) {
      break;
    }
    if (*(void *)(a4 + 8 * v26) == v22) {
      goto LABEL_29;
    }
    ++v26;
    if (v27 == v25) {
      goto LABEL_4;
    }
  }
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
  return result;
}

uint64_t sub_7D06C(uint64_t a1, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  char v7 = *(unsigned char *)(a1 + 32);
  unsigned int v8 = v7 & 0x3F;
  unint64_t v9 = (unint64_t)((1 << v7) + 63) >> 6;
  size_t v10 = 8 * v9;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v8 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)&v15 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, a1, a2);
    swift_bridgeObjectRelease();
    if (v3) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    uint64_t v13 = (void *)swift_slowAlloc();
    bzero(v13, v10);
    swift_bridgeObjectRetain();
    uint64_t v12 = a3((char *)v13, v9, a1, a2);
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v12;
}

uint64_t sub_7D234(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D980);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_7D29C(uint64_t *a1)
{
  return sub_7D2B4(a1);
}

uint64_t sub_7D2B4(uint64_t *a1)
{
  uint64_t v2 = *(void ***)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *a1;
  long long v5 = *(_OWORD *)(v3 + 112);
  v10[6] = *(_OWORD *)(v3 + 96);
  v10[7] = v5;
  v10[8] = *(_OWORD *)(v3 + 128);
  char v11 = *(unsigned char *)(v3 + 144);
  long long v6 = *(_OWORD *)(v3 + 48);
  v10[2] = *(_OWORD *)(v3 + 32);
  v10[3] = v6;
  long long v7 = *(_OWORD *)(v3 + 80);
  v10[4] = *(_OWORD *)(v3 + 64);
  v10[5] = v7;
  long long v8 = *(_OWORD *)(v3 + 16);
  v10[0] = *(_OWORD *)v3;
  v10[1] = v8;
  return sub_6D324(v4, v2, (uint64_t)v10);
}

uint64_t sub_7D310(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 48);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_7D328(uint64_t a1)
{
  *(unsigned char *)(a1 + 144) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

uint64_t sub_7D348(uint64_t a1)
{
  return a1;
}

uint64_t sub_7D3D0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

double sub_7D3E8(_OWORD *a1)
{
  double result = 0.0;
  *(_OWORD *)((char *)a1 + 137) = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t *sub_7D408(uint64_t a1, uint64_t *a2)
{
  if ((*(_DWORD *)(*(void *)(a1 - 8) + 80) & 0x20000) != 0)
  {
    uint64_t v3 = swift_slowAlloc();
    *a2 = v3;
    return (uint64_t *)v3;
  }
  return a2;
}

uint64_t sub_7D46C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_7D4C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_7D530(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_7D598(uint64_t a1, uint64_t a2)
{
  return a2;
}

Swift::Int sub_7D5FC()
{
  return sub_1FC830();
}

Swift::Int sub_7D710()
{
  return sub_1FC830();
}

Swift::Int sub_7D808()
{
  return sub_1FC830();
}

Swift::Int sub_7D948()
{
  return sub_1FC830();
}

Swift::Int sub_7DA60()
{
  return sub_1FC830();
}

Swift::Int sub_7DB48()
{
  return sub_1FC830();
}

Swift::Int sub_7DBFC()
{
  return sub_1FC830();
}

Swift::Int sub_7DCF8()
{
  return sub_1FC830();
}

Swift::Int sub_7DDE4()
{
  return sub_1FC830();
}

Swift::Int sub_7DEE4()
{
  return sub_1FC830();
}

Swift::Int sub_7DFDC()
{
  return sub_1FC830();
}

Swift::Int sub_7E0E4()
{
  return sub_1FC830();
}

Swift::Int sub_7E1E4()
{
  return sub_1FC830();
}

uint64_t Configuration.MediaTypeConfiguration.supportsFreeTopCharts.getter()
{
  return *(unsigned __int8 *)(v0 + 8);
}

uint64_t Configuration.MediaTypeConfiguration.supportsPaidTopCharts.getter()
{
  return *(unsigned __int8 *)(v0 + 9);
}

void sub_7E2FC()
{
  qword_2A5BA0 = (uint64_t)&off_2541A0;
  word_2A5BA8 = 257;
}

void sub_7E31C()
{
  qword_2A5BB0 = (uint64_t)&off_255188;
  word_2A5BB8 = 256;
}

uint64_t sub_7E344()
{
  if (*v0) {
    return 0xD000000000000015;
  }
  else {
    return 0x73444965726E6567;
  }
}

uint64_t sub_7E3A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92B6C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_7E3D0(uint64_t a1)
{
  unint64_t v2 = sub_7E628();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7E40C(uint64_t a1)
{
  unint64_t v2 = sub_7E628();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.MediaTypeConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26DA20);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  int v9 = *((unsigned __int8 *)v1 + 8);
  v11[1] = *((unsigned __int8 *)v1 + 9);
  v11[2] = v9;
  sub_5D64(a1, a1[3]);
  sub_7E628();
  sub_1FC870();
  uint64_t v15 = v8;
  char v14 = 0;
  sub_12124(&qword_26DA30);
  sub_7E8D8(&qword_26DA38);
  sub_1FC530();
  if (!v2)
  {
    char v13 = 1;
    sub_1FC4F0();
    char v12 = 2;
    sub_1FC4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_7E628()
{
  unint64_t result = qword_26DA28;
  if (!qword_26DA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA28);
  }
  return result;
}

uint64_t Configuration.MediaTypeConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DA40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_7E628();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  sub_12124(&qword_26DA30);
  v13[15] = 0;
  sub_7E8D8(&qword_26DA48);
  sub_1FC3F0();
  uint64_t v9 = v14;
  v13[14] = 1;
  swift_bridgeObjectRetain();
  char v10 = sub_1FC3B0();
  v13[13] = 2;
  char v12 = sub_1FC3B0();
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v10 & 1;
  *(unsigned char *)(a2 + 9) = v12 & 1;
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_7E8D8(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26DA30);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_7E93C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.MediaTypeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_7E954(void *a1)
{
  return Configuration.MediaTypeConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::GenreRecommendationConfiguration::Source_optional __swiftcall Configuration.GenreRecommendationConfiguration.Source.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Configuration::GenreRecommendationConfiguration::Source_optional)sub_800D4(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_255280, v1);
}

unint64_t Configuration.GenreRecommendationConfiguration.Source.rawValue.getter()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x747369486B6F6F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000021;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 1768055156;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_7EA20(unsigned __int8 *a1, char *a2)
{
  return sub_1DA718(*a1, *a2);
}

Swift::Int sub_7EA2C()
{
  return sub_7DDE4();
}

uint64_t sub_7EA34()
{
  return sub_16079C();
}

Swift::Int sub_7EA3C()
{
  return sub_11509C();
}

BooksPersonalization::Configuration::GenreRecommendationConfiguration::Source_optional sub_7EA44(Swift::String *a1)
{
  return Configuration.GenreRecommendationConfiguration.Source.init(rawValue:)(*a1);
}

unint64_t sub_7EA50@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Configuration.GenreRecommendationConfiguration.Source.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_7EA78()
{
  return sub_1FBA60();
}

uint64_t sub_7EAD8()
{
  return sub_1FBA40();
}

BooksPersonalization::Configuration::GenreRecommendationConfiguration::GenreDepth_optional __swiftcall Configuration.GenreRecommendationConfiguration.GenreDepth.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Configuration::GenreRecommendationConfiguration::GenreDepth_optional)sub_256D4(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_255318, v1);
}

_UNKNOWN **static Configuration.GenreRecommendationConfiguration.GenreDepth.allCases.getter()
{
  return &off_255380;
}

uint64_t Configuration.GenreRecommendationConfiguration.GenreDepth.rawValue.getter()
{
  uint64_t v1 = 0x656E4F6C6576656CLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6F77546C6576656CLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x73657661656CLL;
  }
}

uint64_t sub_7EB98(char *a1, unsigned __int8 *a2)
{
  return sub_1D9BEC(*a1, *a2);
}

Swift::Int sub_7EBA4()
{
  return sub_1FC830();
}

uint64_t sub_7EC44()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_7ECD0()
{
  return sub_1FC830();
}

BooksPersonalization::Configuration::GenreRecommendationConfiguration::GenreDepth_optional sub_7ED6C(Swift::String *a1)
{
  return Configuration.GenreRecommendationConfiguration.GenreDepth.init(rawValue:)(*a1);
}

void sub_7ED78(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = 0x656E4F6C6576656CLL;
  if (v2 != 1) {
    uint64_t v4 = 0x6F77546C6576656CLL;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x73657661656CLL;
  }
  if (!v5) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_7EDD4()
{
  return sub_1FBA60();
}

uint64_t sub_7EE34()
{
  return sub_1FBA40();
}

void sub_7EE84(void *a1@<X8>)
{
  *a1 = &off_2553A8;
}

uint64_t sub_7EE94(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_93994();

  return RawRepresentable<>.codingKey.getter(a1, a2, v4);
}

uint64_t sub_7EEE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_93994();

  return RawRepresentable<>.init<A>(codingKey:)(a1, a4, a2, a5, v10, a3);
}

unint64_t sub_7EF64(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x32656372756F73;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_7F008(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x32656372756F73;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_7F0AC(unsigned __int8 *a1, char *a2)
{
  return sub_1DA8C8(*a1, *a2);
}

Swift::Int sub_7F0B8()
{
  return sub_7DEE4();
}

uint64_t sub_7F0C0()
{
  return sub_16087C();
}

Swift::Int sub_7F0C8()
{
  return sub_115198();
}

uint64_t sub_7F0D0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_92CB8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_7F100@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_7EF64(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_7F12C()
{
  return sub_7F008(*v0);
}

uint64_t sub_7F134@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92CB8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_7F15C(uint64_t a1)
{
  unint64_t v2 = sub_7F500();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7F198(uint64_t a1)
{
  unint64_t v2 = sub_7F500();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Series.mediaType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 8);
}

void Configuration.GenreRecommendationConfiguration.source.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 9);
}

double FeatureAffinityInfo.weight.getter()
{
  return *(double *)(v0 + 16);
}

uint64_t Configuration.GenreRecommendationConfiguration.preferSaleTypeToGenreOrder.getter()
{
  return *(unsigned __int8 *)(v0 + 24);
}

BooksPersonalization::Configuration::GenreRecommendationConfiguration __swiftcall Configuration.GenreRecommendationConfiguration.init(source:combinedScorerBookHistoryWeight:bookHistoryLimit:bookHistoryGenreDepth:preferSaleTypeToGenreOrder:)(BooksPersonalization::Configuration::GenreRecommendationConfiguration::Source_optional source, Swift::Double_optional combinedScorerBookHistoryWeight, Swift::Int_optional bookHistoryLimit, BooksPersonalization::Configuration::GenreRecommendationConfiguration::GenreDepth_optional bookHistoryGenreDepth, Swift::Bool_optional preferSaleTypeToGenreOrder)
{
  int v7 = *(unsigned __int8 *)source.value;
  int v8 = *(unsigned __int8 *)preferSaleTypeToGenreOrder.value;
  if (v7 == 5) {
    LOBYTE(v7) = 1;
  }
  double v9 = *(double *)&combinedScorerBookHistoryWeight.is_nil;
  if (bookHistoryLimit.value) {
    double v9 = 0.7;
  }
  uint64_t v10 = 1000;
  if ((bookHistoryGenreDepth.value & 1) == 0) {
    uint64_t v10 = *(void *)&bookHistoryLimit.is_nil;
  }
  *(void *)uint64_t v6 = v10;
  if (v8 == 3) {
    LOBYTE(v8) = 1;
  }
  *(unsigned char *)(v6 + 8) = v8;
  *(unsigned char *)(v6 + 9) = v7;
  *(double *)(v6 + 16) = v9;
  *(unsigned char *)(v6 + 24) = v5 & 1;
  result.preferSaleTypeToGenreOrder = bookHistoryLimit.value;
  result.bookHistoryGenreDepth = combinedScorerBookHistoryWeight.is_nil;
  result.combinedScorerBookHistoryWeight = v9;
  LOBYTE(result.bookHistoryLimit) = source;
  return result;
}

uint64_t Configuration.GenreRecommendationConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DA50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_7F500();
  sub_1FC850();
  if (!v2)
  {
    char v31 = 2;
    sub_7F554();
    sub_1FC360();
    int v9 = v32;
    char v30 = 3;
    uint64_t v10 = sub_1FC330();
    char v12 = v11;
    double v24 = *(double *)&v10;
    int v25 = v9;
    char v29 = 0;
    uint64_t v13 = sub_1FC350();
    int v23 = v14;
    char v27 = 1;
    sub_7F5A8();
    sub_1FC360();
    int v22 = v28;
    char v26 = 4;
    char v16 = sub_1FC320();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v17 = v25;
    if (v25 == 5) {
      char v17 = 1;
    }
    double v18 = v24;
    if (v12) {
      double v18 = 0.7;
    }
    uint64_t v19 = 1000;
    if ((v23 & 1) == 0) {
      uint64_t v19 = v13;
    }
    *(void *)a2 = v19;
    char v20 = v22;
    if (v22 == 3) {
      char v20 = 1;
    }
    *(unsigned char *)(a2 + 8) = v20;
    *(unsigned char *)(a2 + 9) = v17;
    *(double *)(a2 + 16) = v18;
    *(unsigned char *)(a2 + 24) = v16 & 1;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_7F500()
{
  unint64_t result = qword_26DA58;
  if (!qword_26DA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA58);
  }
  return result;
}

unint64_t sub_7F554()
{
  unint64_t result = qword_26DA60;
  if (!qword_26DA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA60);
  }
  return result;
}

unint64_t sub_7F5A8()
{
  unint64_t result = qword_26DA68;
  if (!qword_26DA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA68);
  }
  return result;
}

uint64_t Configuration.GenreRecommendationConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26DA70);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v8 = v1[8];
  int v12 = v1[9];
  int v13 = v8;
  _DWORD v11[3] = v1[24];
  sub_5D64(a1, a1[3]);
  sub_7F500();
  sub_1FC870();
  char v20 = 0;
  sub_1FC520();
  if (!v2)
  {
    char v9 = v12;
    char v19 = v13;
    char v18 = 1;
    sub_7F82C();
    sub_1FC530();
    char v17 = v9;
    char v16 = 2;
    sub_7F880();
    sub_1FC530();
    char v15 = 3;
    sub_1FC500();
    char v14 = 4;
    sub_1FC4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_7F82C()
{
  unint64_t result = qword_26DA78;
  if (!qword_26DA78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA78);
  }
  return result;
}

unint64_t sub_7F880()
{
  unint64_t result = qword_26DA80;
  if (!qword_26DA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA80);
  }
  return result;
}

uint64_t sub_7F8D4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.GenreRecommendationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_7F8EC(void *a1)
{
  return Configuration.GenreRecommendationConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::SeedBasedRecommendationConfiguration::Source_optional __swiftcall Configuration.SeedBasedRecommendationConfiguration.Source.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Configuration::SeedBasedRecommendationConfiguration::Source_optional)sub_256D4(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_255468, v1);
}

uint64_t SeedBasedRecommendationSource.rawValue.getter()
{
  uint64_t v1 = 12918;
  if (*v0 != 1) {
    uint64_t v1 = 1768055156;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 12662;
  }
}

uint64_t sub_7F94C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D96FC(*a1, *a2);
}

Swift::Int sub_7F958()
{
  return sub_1FC830();
}

uint64_t sub_7F9DC()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_7FA4C()
{
  return sub_1FC830();
}

BooksPersonalization::Configuration::SeedBasedRecommendationConfiguration::Source_optional sub_7FACC(Swift::String *a1)
{
  return Configuration.SeedBasedRecommendationConfiguration.Source.init(rawValue:)(*a1);
}

void sub_7FAD8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE200000000000000;
  unint64_t v4 = 0xE200000000000000;
  uint64_t v5 = 12918;
  if (v2 != 1)
  {
    uint64_t v5 = 1768055156;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 12662;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_7FB18()
{
  return sub_1FBA60();
}

uint64_t sub_7FB78()
{
  return sub_1FBA40();
}

uint64_t sub_7FBD0()
{
  return 0x656372756F73;
}

uint64_t sub_7FBE4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x656372756F73 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_7FC74(uint64_t a1)
{
  unint64_t v2 = sub_7FE34();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_7FCB0(uint64_t a1)
{
  unint64_t v2 = sub_7FE34();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.SeedBasedRecommendationConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DA88);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  BOOL v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_7FE34();
  sub_1FC870();
  char v10 = v7;
  sub_7FE88();
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_7FE34()
{
  unint64_t result = qword_26DA90;
  if (!qword_26DA90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA90);
  }
  return result;
}

unint64_t sub_7FE88()
{
  unint64_t result = qword_26DA98;
  if (!qword_26DA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DA98);
  }
  return result;
}

uint64_t Configuration.SeedBasedRecommendationConfiguration.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DAA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_7FE34();
  sub_1FC850();
  if (!v2)
  {
    sub_80044();
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_80044()
{
  unint64_t result = qword_26DAA8;
  if (!qword_26DAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAA8);
  }
  return result;
}

uint64_t sub_80098@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Configuration.SeedBasedRecommendationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_800B0(void *a1)
{
  return Configuration.SeedBasedRecommendationConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::CollectionsConfiguration::Source_optional __swiftcall Configuration.CollectionsConfiguration.Source.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Configuration::CollectionsConfiguration::Source_optional)sub_800D4(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_2554D0, v1);
}

uint64_t sub_800D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  unint64_t v7 = sub_1FC2D0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  char v9 = 5;
  if (v7 < 5) {
    char v9 = v7;
  }
  *a4 = v9;
  return result;
}

unint64_t Configuration.CollectionsConfiguration.Source.rawValue.getter()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x747369486B6F6F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0x495041616964656DLL;
      break;
    case 4:
      unint64_t result = 1768055156;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_801DC(unsigned __int8 *a1, char *a2)
{
  return sub_1DAA5C(*a1, *a2);
}

Swift::Int sub_801E8()
{
  return sub_7DFDC();
}

uint64_t sub_801F0()
{
  return sub_160954();
}

Swift::Int sub_801F8()
{
  return sub_11528C();
}

BooksPersonalization::Configuration::CollectionsConfiguration::Source_optional sub_80200(Swift::String *a1)
{
  return Configuration.CollectionsConfiguration.Source.init(rawValue:)(*a1);
}

unint64_t sub_8020C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Configuration.CollectionsConfiguration.Source.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_80234()
{
  return sub_1FBA60();
}

uint64_t sub_80294()
{
  return sub_1FBA40();
}

BooksPersonalization::Configuration::CollectionsConfiguration::BooksConfiguration __swiftcall Configuration.CollectionsConfiguration.BooksConfiguration.init(rescorer:)(BooksPersonalization::Configuration::CollectionsConfiguration::BooksConfiguration rescorer)
{
  int v2 = *(unsigned __int8 *)rescorer.rescorer;
  if (v2 == 3) {
    LOBYTE(v2) = 1;
  }
  *uint64_t v1 = v2;
  return rescorer;
}

uint64_t Configuration.CollectionsConfiguration.BooksConfiguration.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DAB0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_80468();
  sub_1FC850();
  if (!v2)
  {
    sub_804BC();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v9 = v12;
    if (v12 == 3) {
      char v9 = 1;
    }
    *a2 = v9;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_80468()
{
  unint64_t result = qword_26DAB8;
  if (!qword_26DAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAB8);
  }
  return result;
}

unint64_t sub_804BC()
{
  unint64_t result = qword_26DAC0;
  if (!qword_26DAC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAC0);
  }
  return result;
}

uint64_t sub_80510()
{
  return 0x7265726F63736572;
}

uint64_t sub_80528@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x7265726F63736572 && a2 == 0xE800000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_805C0(uint64_t a1)
{
  unint64_t v2 = sub_80468();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_805FC(uint64_t a1)
{
  unint64_t v2 = sub_80468();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.BooksConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DAC8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_80468();
  sub_1FC870();
  char v10 = v7;
  sub_80780();
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_80780()
{
  unint64_t result = qword_26DAD0;
  if (!qword_26DAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAD0);
  }
  return result;
}

uint64_t sub_807D4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.BooksConfiguration.init(from:)(a1, a2);
}

uint64_t sub_807EC(void *a1)
{
  return Configuration.CollectionsConfiguration.BooksConfiguration.encode(to:)(a1);
}

uint64_t Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_80F0C(a1, &qword_26DAD8, (void (*)(void))sub_80840, a2);
}

unint64_t sub_80840()
{
  unint64_t result = qword_26DAE0;
  if (!qword_26DAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAE0);
  }
  return result;
}

unint64_t sub_80894()
{
  unint64_t result = qword_26DAE8;
  if (!qword_26DAE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAE8);
  }
  return result;
}

uint64_t sub_808E8(uint64_t a1)
{
  unint64_t v2 = sub_80840();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_80924(uint64_t a1)
{
  unint64_t v2 = sub_80840();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.encode(to:)(void *a1)
{
  return sub_81B6C(a1, &qword_26DAF0, (uint64_t)sub_80840);
}

unint64_t sub_8099C()
{
  unint64_t result = qword_26DAF8;
  if (!qword_26DAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DAF8);
  }
  return result;
}

uint64_t sub_809F0@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_80A08(void *a1)
{
  return Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.encode(to:)(a1);
}

uint64_t Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_80F0C(a1, &qword_26DB00, (void (*)(void))sub_80A5C, a2);
}

unint64_t sub_80A5C()
{
  unint64_t result = qword_26DB08;
  if (!qword_26DB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB08);
  }
  return result;
}

uint64_t sub_80AB0(uint64_t a1)
{
  unint64_t v2 = sub_80A5C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_80AEC(uint64_t a1)
{
  unint64_t v2 = sub_80A5C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.encode(to:)(void *a1)
{
  return sub_81B6C(a1, &qword_26DB10, (uint64_t)sub_80A5C);
}

uint64_t sub_80B64@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_80B7C(void *a1)
{
  return Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.encode(to:)(a1);
}

uint64_t Configuration.CollectionsConfiguration.ForYouConfiguration.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DB18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_80D70();
  sub_1FC850();
  if (!v2)
  {
    char v16 = 0;
    sub_80894();
    sub_1FC360();
    int v9 = v17;
    char v14 = 1;
    sub_804BC();
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v15;
    if (v9 == 5) {
      char v11 = 3;
    }
    else {
      char v11 = v9;
    }
    *a2 = v11;
    a2[1] = v10;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_80D70()
{
  unint64_t result = qword_26DB20;
  if (!qword_26DB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB20);
  }
  return result;
}

uint64_t sub_80DC4(uint64_t a1)
{
  unint64_t v2 = sub_80D70();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_80E00(uint64_t a1)
{
  unint64_t v2 = sub_80D70();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.ForYouConfiguration.encode(to:)(void *a1)
{
  return sub_81B6C(a1, &qword_26DB28, (uint64_t)sub_80D70);
}

uint64_t sub_80E78@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.ForYouConfiguration.init(from:)(a1, a2);
}

uint64_t sub_80E90(void *a1)
{
  return Configuration.CollectionsConfiguration.ForYouConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::CollectionsConfiguration::MangaYouMightLikeConfiguration __swiftcall Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.init(source:rescorer:)(BooksPersonalization::Configuration::CollectionsConfiguration::Source_optional source, BooksPersonalization::Scorer_optional rescorer)
{
  int v3 = *(unsigned __int8 *)source.value;
  int v4 = *(unsigned __int8 *)rescorer.value;
  if (v3 == 5) {
    LOBYTE(v3) = 3;
  }
  if (v4 == 3) {
    LOBYTE(v4) = 1;
  }
  *unint64_t v2 = v3;
  v2[1] = v4;
  result.source = source.value;
  return result;
}

uint64_t Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return sub_80F0C(a1, &qword_26DB30, (void (*)(void))sub_810FC, a2);
}

uint64_t sub_80F0C@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, char *a4@<X8>)
{
  unsigned __int8 v17 = a4;
  uint64_t v7 = sub_12124(a2);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  int v9 = (char *)&v16 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  a3();
  sub_1FC850();
  if (!v4)
  {
    uint64_t v11 = v16;
    char v10 = v17;
    char v20 = 0;
    sub_80894();
    sub_1FC360();
    int v12 = v21;
    char v18 = 1;
    sub_804BC();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
    char v13 = v19;
    if (v12 == 5) {
      char v14 = 3;
    }
    else {
      char v14 = v12;
    }
    if (v19 == 3) {
      char v13 = 1;
    }
    *char v10 = v14;
    v10[1] = v13;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_810FC()
{
  unint64_t result = qword_26DB38;
  if (!qword_26DB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB38);
  }
  return result;
}

uint64_t sub_81150(uint64_t a1)
{
  unint64_t v2 = sub_810FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8118C(uint64_t a1)
{
  unint64_t v2 = sub_810FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.encode(to:)(void *a1)
{
  return sub_81B6C(a1, &qword_26DB40, (uint64_t)sub_810FC);
}

uint64_t sub_81204@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.init(from:)(a1, a2);
}

uint64_t sub_8121C(void *a1)
{
  return Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.encode(to:)(a1);
}

void GenreRecommendationRequest.overrideSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 1);
}

uint64_t Book.Metadata.SeriesMembership.seriesID.getter()
{
  return *(void *)(v0 + 8);
}

BooksPersonalization::Configuration::CollectionsConfiguration::MoreFromYourAuthorsConfiguration __swiftcall Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.init(source:rescorer:bookHistoryAuthorFetchMaxCount:)(BooksPersonalization::Configuration::CollectionsConfiguration::Source_optional source, BooksPersonalization::Scorer_optional rescorer, Swift::Int_optional bookHistoryAuthorFetchMaxCount)
{
  int v4 = *(unsigned __int8 *)source.value;
  int v5 = *(unsigned __int8 *)rescorer.value;
  if (v4 == 5) {
    LOBYTE(v4) = 3;
  }
  if (v5 == 3) {
    LOBYTE(v5) = 1;
  }
  *(unsigned char *)uint64_t v3 = v4;
  if (bookHistoryAuthorFetchMaxCount.is_nil) {
    Swift::Int value = 50;
  }
  else {
    Swift::Int value = bookHistoryAuthorFetchMaxCount.value;
  }
  *(unsigned char *)(v3 + 1) = v5;
  *(void *)(v3 + 8) = value;
  LOBYTE(result.bookHistoryAuthorFetchMaxCount) = rescorer;
  result.source = source.value;
  return result;
}

uint64_t Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DB48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_814A8();
  sub_1FC850();
  if (!v2)
  {
    char v24 = 0;
    sub_80894();
    sub_1FC360();
    int v9 = v25;
    char v22 = 1;
    sub_804BC();
    sub_1FC360();
    int v10 = v23;
    char v21 = 2;
    uint64_t v11 = sub_1FC350();
    char v14 = v13;
    char v15 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v20 = v11;
    v15(v8, v5);
    if (v9 == 5) {
      char v16 = 3;
    }
    else {
      char v16 = v9;
    }
    if (v10 == 3) {
      char v17 = 1;
    }
    else {
      char v17 = v10;
    }
    *(unsigned char *)a2 = v16;
    uint64_t v18 = v20;
    if (v14) {
      uint64_t v18 = 50;
    }
    *(unsigned char *)(a2 + 1) = v17;
    *(void *)(a2 + 8) = v18;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_814A8()
{
  unint64_t result = qword_26DB50;
  if (!qword_26DB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB50);
  }
  return result;
}

uint64_t sub_814FC()
{
  unint64_t v1 = 0x7265726F63736572;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_81558@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92D04(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_81580(uint64_t a1)
{
  unint64_t v2 = sub_814A8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_815BC(uint64_t a1)
{
  unint64_t v2 = sub_814A8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26DB58);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  int v11 = v1[1];
  uint64_t v10 = *((void *)v1 + 1);
  sub_5D64(a1, a1[3]);
  sub_814A8();
  sub_1FC870();
  char v16 = v8;
  char v15 = 0;
  sub_8099C();
  sub_1FC530();
  if (!v2)
  {
    char v14 = v11;
    char v13 = 1;
    sub_80780();
    sub_1FC530();
    char v12 = 2;
    sub_1FC520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_817C8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_817E0(void *a1)
{
  return Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::CollectionsConfiguration::SuggestionsConfiguration __swiftcall Configuration.CollectionsConfiguration.SuggestionsConfiguration.init(source:rescorer:)(BooksPersonalization::Configuration::CollectionsConfiguration::Source_optional source, BooksPersonalization::Scorer_optional rescorer)
{
  int v3 = *(unsigned __int8 *)source.value;
  int v4 = *(unsigned __int8 *)rescorer.value;
  if (v3 == 5) {
    LOBYTE(v3) = 2;
  }
  if (v4 == 3) {
    LOBYTE(v4) = 1;
  }
  *uint64_t v2 = v3;
  v2[1] = v4;
  result.source = source.value;
  return result;
}

uint64_t Configuration.CollectionsConfiguration.SuggestionsConfiguration.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DB60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_81A04();
  sub_1FC850();
  if (!v2)
  {
    char v16 = 0;
    sub_80894();
    sub_1FC360();
    int v9 = v17;
    char v14 = 1;
    sub_804BC();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v15;
    if (v9 == 5) {
      char v11 = 2;
    }
    else {
      char v11 = v9;
    }
    if (v15 == 3) {
      char v10 = 1;
    }
    *a2 = v11;
    a2[1] = v10;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_81A04()
{
  unint64_t result = qword_26DB68;
  if (!qword_26DB68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB68);
  }
  return result;
}

uint64_t sub_81A58()
{
  if (*v0) {
    return 0x7265726F63736572;
  }
  else {
    return 0x656372756F73;
  }
}

uint64_t sub_81A90@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92E50(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_81AB8(uint64_t a1)
{
  unint64_t v2 = sub_81A04();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_81AF4(uint64_t a1)
{
  unint64_t v2 = sub_81A04();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.SuggestionsConfiguration.encode(to:)(void *a1)
{
  return sub_81B6C(a1, &qword_26DB70, (uint64_t)sub_81A04);
}

uint64_t sub_81B6C(void *a1, uint64_t *a2, uint64_t a3)
{
  v12[0] = a3;
  uint64_t v5 = sub_12124(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v9 = *v3;
  int v13 = v3[1];
  sub_5D64(a1, a1[3]);
  ((void (*)(void))v12[0])();
  sub_1FC870();
  char v17 = v9;
  char v16 = 0;
  sub_8099C();
  uint64_t v10 = v12[1];
  sub_1FC530();
  if (!v10)
  {
    char v15 = v13;
    char v14 = 1;
    sub_80780();
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

uint64_t sub_81D0C@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.SuggestionsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_81D24(void *a1)
{
  return Configuration.CollectionsConfiguration.SuggestionsConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::CollectionsConfiguration::PostHydrationFilteringConfiguration __swiftcall Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration.init(genericArtworkRegex:)(BooksPersonalization::Configuration::CollectionsConfiguration::PostHydrationFilteringConfiguration genericArtworkRegex)
{
  uint64_t countAndFlagsBits = 0xD000000000000056;
  if (genericArtworkRegex.genericArtworkRegex._object) {
    uint64_t countAndFlagsBits = genericArtworkRegex.genericArtworkRegex._countAndFlagsBits;
  }
  object = (void *)0x8000000000217650;
  if (genericArtworkRegex.genericArtworkRegex._object) {
    object = genericArtworkRegex.genericArtworkRegex._object;
  }
  *unint64_t v1 = countAndFlagsBits;
  v1[1] = (uint64_t)object;
  return genericArtworkRegex;
}

uint64_t Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration.init(from:)@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DB78);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_81EF4();
  sub_1FC850();
  if (!v2)
  {
    uint64_t v9 = sub_1FC310();
    if (v10) {
      unint64_t v11 = v9;
    }
    else {
      unint64_t v11 = 0xD000000000000056;
    }
    if (v10) {
      unint64_t v12 = v10;
    }
    else {
      unint64_t v12 = 0x8000000000217650;
    }
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
    a2[1] = v12;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_81EF4()
{
  unint64_t result = qword_26DB80;
  if (!qword_26DB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB80);
  }
  return result;
}

void sub_81F48()
{
}

unint64_t sub_81F70()
{
  return 0xD000000000000013;
}

uint64_t sub_81F8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92F3C(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_81FB8(uint64_t a1)
{
  unint64_t v2 = sub_81EF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_81FF4(uint64_t a1)
{
  unint64_t v2 = sub_81EF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration.encode(to:)(void *a1)
{
  uint64_t v2 = sub_12124(&qword_26DB88);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_81EF4();
  sub_1FC870();
  sub_1FC4E0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_82168(char a1)
{
  unint64_t result = 0x736B6F6F62;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x756F59726F66;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6974736567677573;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_8226C(char a1)
{
  unint64_t result = 0x736B6F6F62;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x756F59726F66;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6974736567677573;
      break;
    case 7:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_82370@<X0>(void *a1@<X0>, unint64_t *a2@<X8>)
{
  return Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration.init(from:)(a1, a2);
}

uint64_t sub_82388(unsigned __int8 *a1, char *a2)
{
  return sub_1DAC24(*a1, *a2);
}

Swift::Int sub_82394()
{
  return sub_115390();
}

uint64_t sub_823A0()
{
  return sub_160A3C();
}

Swift::Int sub_823A8()
{
  return sub_115390();
}

uint64_t sub_823B0@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_92FC4(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_823E0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_82168(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_8240C()
{
  return sub_8226C(*v0);
}

uint64_t sub_82414@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_92FC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_8243C(uint64_t a1)
{
  unint64_t v2 = sub_829F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_82478(uint64_t a1)
{
  unint64_t v2 = sub_829F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Configuration.CollectionsConfiguration.booksBySuggestedAuthorsConfiguration.getter(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

void Configuration.CollectionsConfiguration.booksConfiguration.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 2);
}

void Configuration.CollectionsConfiguration.booksYouMightLikeConfiguration.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 3);
}

void Configuration.CollectionsConfiguration.forYouConfiguration.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 5);
}

void Configuration.CollectionsConfiguration.mangaYouMightLikeConfiguration.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 7);
}

void Configuration.CollectionsConfiguration.moreFromYourAuthorsConfiguration.getter(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(_WORD *)a1 = *(_WORD *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
}

void Configuration.CollectionsConfiguration.suggestionsConfiguration.getter(_WORD *a1@<X8>)
{
  *a1 = *(_WORD *)(v1 + 32);
}

uint64_t Configuration.CollectionsConfiguration.postHydrationFilteringConfiguration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 48);
  *a1 = *(void *)(v1 + 40);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Configuration.CollectionsConfiguration.init(booksBySuggestedAuthorsConfiguration:booksConfiguration:booksYouMightLikeConfiguration:forYouConfiguration:mangaYouMightLikeConfiguration:moreFromYourAuthorsConfiguration:suggestionsConfiguration:postHydrationFilteringConfiguration:)@<X0>(unsigned __int16 *a1@<X0>, unsigned __int8 *a2@<X1>, __int16 *a3@<X2>, __int16 *a4@<X3>, __int16 *a5@<X4>, uint64_t *a6@<X5>, unsigned __int16 *a7@<X6>, unint64_t *a8@<X7>, uint64_t a9@<X8>)
{
  unsigned int v9 = *a1;
  int v10 = *a2;
  __int16 v11 = *a3;
  __int16 v12 = *a4;
  __int16 v13 = *a5;
  unsigned int v14 = v9 >> 8;
  uint64_t v15 = *a6;
  uint64_t v16 = a6[1];
  unsigned int v17 = *a7;
  if ((v9 & 0xFF00) == 0x300)
  {
    LOBYTE(v9) = 3;
    LOBYTE(v14) = 1;
  }
  int v18 = v11 & 0xFF00;
  unint64_t v19 = *a8;
  unint64_t v20 = a8[1];
  if (v18 == 768)
  {
    LOBYTE(v11) = 3;
    char v21 = 1;
  }
  else
  {
    char v21 = HIBYTE(*a3);
  }
  int v22 = v12 & 0xFF00;
  if (v22 == 768)
  {
    LOBYTE(v12) = 3;
    char v23 = 1;
  }
  else
  {
    char v23 = HIBYTE(v12);
  }
  *(unsigned char *)a9 = v9;
  *(unsigned char *)(a9 + 1) = v14;
  if ((v13 & 0xFF00) == 0x300) {
    char v24 = 3;
  }
  else {
    char v24 = v13;
  }
  if ((v13 & 0xFF00) == 0x300) {
    char v25 = 1;
  }
  else {
    char v25 = HIBYTE(v13);
  }
  BOOL v26 = (v15 & 0xFF00) == 768;
  if ((v15 & 0xFF00) == 0x300) {
    char v27 = 3;
  }
  else {
    char v27 = v15;
  }
  if ((v15 & 0xFF00) == 0x300) {
    char v28 = 1;
  }
  else {
    char v28 = BYTE1(v15);
  }
  uint64_t v29 = 50;
  if (!v26) {
    uint64_t v29 = v16;
  }
  if ((v17 & 0xFF00) == 0x300) {
    char v30 = 2;
  }
  else {
    char v30 = v17;
  }
  if ((v17 & 0xFF00) == 0x300) {
    uint64_t result = 1;
  }
  else {
    uint64_t result = v17 >> 8;
  }
  if (!v20)
  {
    unint64_t v19 = 0xD000000000000056;
    unint64_t v20 = 0x8000000000217650;
  }
  if (v10 == 3) {
    LOBYTE(v10) = 1;
  }
  *(unsigned char *)(a9 + 2) = v10;
  *(unsigned char *)(a9 + 3) = v11;
  *(unsigned char *)(a9 + 4) = v21;
  *(unsigned char *)(a9 + 5) = v12;
  *(unsigned char *)(a9 + 6) = v23;
  *(unsigned char *)(a9 + 7) = v24;
  *(unsigned char *)(a9 + 8) = v25;
  *(unsigned char *)(a9 + 16) = v27;
  *(unsigned char *)(a9 + 17) = v28;
  *(void *)(a9 + 24) = v29;
  *(unsigned char *)(a9 + 32) = v30;
  *(unsigned char *)(a9 + 33) = result;
  *(void *)(a9 + 40) = v19;
  *(void *)(a9 + 48) = v20;
  return result;
}

uint64_t Configuration.CollectionsConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DB90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_829F4();
  sub_1FC850();
  if (!v2)
  {
    LOBYTE(v20) = 1;
    sub_82A48();
    sub_1FC360();
    v33[0] = v33[1];
    LOBYTE(v20) = 0;
    sub_82A9C();
    sub_1FC360();
    v32[0] = v32[1];
    LOBYTE(v20) = 2;
    sub_82AF0();
    sub_1FC360();
    __int16 v23 = v31;
    LOBYTE(v20) = 3;
    sub_82B44();
    sub_1FC360();
    v22[0] = v22[1];
    LOBYTE(v20) = 4;
    sub_82B98();
    sub_1FC360();
    v21[0] = v21[1];
    LOBYTE(v19) = 5;
    sub_82BEC();
    sub_1FC360();
    long long v19 = v20;
    LOBYTE(v17) = 6;
    sub_82C40();
    sub_1FC360();
    v18[0] = v18[1];
    LOBYTE(v16) = 7;
    sub_82C94();
    sub_1FC360();
    long long v16 = v17;
    Configuration.CollectionsConfiguration.init(booksBySuggestedAuthorsConfiguration:booksConfiguration:booksYouMightLikeConfiguration:forYouConfiguration:mangaYouMightLikeConfiguration:moreFromYourAuthorsConfiguration:suggestionsConfiguration:postHydrationFilteringConfiguration:)(v33, v32, &v23, v22, v21, (uint64_t *)&v19, v18, (unint64_t *)&v16, (uint64_t)&v24);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v25;
    __int16 v11 = v26;
    uint64_t v12 = v27;
    __int16 v13 = v28;
    uint64_t v14 = v29;
    uint64_t v15 = v30;
    *(void *)a2 = v24;
    *(unsigned char *)(a2 + 8) = v10;
    *(_WORD *)(a2 + 16) = v11;
    *(void *)(a2 + 24) = v12;
    *(_WORD *)(a2 + 32) = v13;
    *(void *)(a2 + 40) = v14;
    *(void *)(a2 + 48) = v15;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_829F4()
{
  unint64_t result = qword_26DB98;
  if (!qword_26DB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DB98);
  }
  return result;
}

unint64_t sub_82A48()
{
  unint64_t result = qword_26DBA0;
  if (!qword_26DBA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBA0);
  }
  return result;
}

unint64_t sub_82A9C()
{
  unint64_t result = qword_26DBA8;
  if (!qword_26DBA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBA8);
  }
  return result;
}

unint64_t sub_82AF0()
{
  unint64_t result = qword_26DBB0;
  if (!qword_26DBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBB0);
  }
  return result;
}

unint64_t sub_82B44()
{
  unint64_t result = qword_26DBB8;
  if (!qword_26DBB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBB8);
  }
  return result;
}

unint64_t sub_82B98()
{
  unint64_t result = qword_26DBC0;
  if (!qword_26DBC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBC0);
  }
  return result;
}

unint64_t sub_82BEC()
{
  unint64_t result = qword_26DBC8;
  if (!qword_26DBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBC8);
  }
  return result;
}

unint64_t sub_82C40()
{
  unint64_t result = qword_26DBD0;
  if (!qword_26DBD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBD0);
  }
  return result;
}

unint64_t sub_82C94()
{
  unint64_t result = qword_26DBD8;
  if (!qword_26DBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBD8);
  }
  return result;
}

uint64_t Configuration.CollectionsConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DBE0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v38 = *v1;
  int v7 = v1[1];
  unsigned __int8 v8 = v1[2];
  int v33 = v1[3];
  int v34 = v7;
  int v9 = v1[4];
  int v31 = v1[5];
  int v32 = v9;
  int v10 = v1[6];
  int v28 = v1[7];
  int v29 = v1[8];
  int v30 = v10;
  LODWORD(v5) = v1[17];
  int v25 = v1[16];
  int v26 = v5;
  uint64_t v27 = *((void *)v1 + 3);
  LODWORD(v5) = v1[33];
  int v23 = v1[32];
  int v24 = v5;
  uint64_t v12 = *((void *)v1 + 5);
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v13 = a1[3];
  uint64_t v14 = a1;
  uint64_t v16 = v15;
  sub_5D64(v14, v13);
  sub_829F4();
  sub_1FC870();
  LOBYTE(v36) = v8;
  long long v17 = v6;
  char v39 = 0;
  sub_83090();
  int v18 = v35;
  sub_1FC530();
  if (!v18)
  {
    char v20 = v32;
    char v19 = v33;
    char v21 = v31;
    LOBYTE(v36) = v38;
    BYTE1(v36) = v34;
    char v39 = 1;
    sub_830E4();
    sub_1FC530();
    LOBYTE(v36) = v19;
    BYTE1(v36) = v20;
    char v39 = 2;
    sub_83138();
    sub_1FC530();
    LOBYTE(v36) = v21;
    BYTE1(v36) = v30;
    char v39 = 3;
    sub_8318C();
    int v35 = v6;
    sub_1FC530();
    LOBYTE(v36) = v28;
    BYTE1(v36) = v29;
    char v39 = 4;
    sub_831E0();
    sub_1FC530();
    LOBYTE(v36) = v25;
    BYTE1(v36) = v26;
    uint64_t v37 = v27;
    char v39 = 5;
    sub_83234();
    sub_1FC530();
    LOBYTE(v36) = v23;
    BYTE1(v36) = v24;
    char v39 = 6;
    sub_83288();
    sub_1FC530();
    uint64_t v36 = v12;
    uint64_t v37 = v11;
    char v39 = 7;
    sub_832DC();
    long long v17 = v35;
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v17, v16);
}

unint64_t sub_83090()
{
  unint64_t result = qword_26DBE8;
  if (!qword_26DBE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBE8);
  }
  return result;
}

unint64_t sub_830E4()
{
  unint64_t result = qword_26DBF0;
  if (!qword_26DBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBF0);
  }
  return result;
}

unint64_t sub_83138()
{
  unint64_t result = qword_26DBF8;
  if (!qword_26DBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DBF8);
  }
  return result;
}

unint64_t sub_8318C()
{
  unint64_t result = qword_26DC00;
  if (!qword_26DC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC00);
  }
  return result;
}

unint64_t sub_831E0()
{
  unint64_t result = qword_26DC08;
  if (!qword_26DC08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC08);
  }
  return result;
}

unint64_t sub_83234()
{
  unint64_t result = qword_26DC10;
  if (!qword_26DC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC10);
  }
  return result;
}

unint64_t sub_83288()
{
  unint64_t result = qword_26DC18;
  if (!qword_26DC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC18);
  }
  return result;
}

unint64_t sub_832DC()
{
  unint64_t result = qword_26DC20;
  if (!qword_26DC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC20);
  }
  return result;
}

uint64_t sub_83330@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.CollectionsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_83348(void *a1)
{
  return Configuration.CollectionsConfiguration.encode(to:)(a1);
}

unint64_t Configuration.MediaTypesRecommendationServiceConfiguration.init(interestBasedMinimumBooksPerMediaType:interestBasedMinimumBooksPerGenre:interestBasedMinimumPurity:equivalentGenresMap:)@<X0>(unint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, double a5@<X4>, char a6@<W5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v11 = result;
  if ((a6 & 1) != 0 || (uint64_t v13 = *(void *)&a5, a5 < 0.5)) {
    uint64_t v13 = 0x3FE999999999999ALL;
  }
  if (!a7)
  {
    unint64_t result = sub_16B8F8((uint64_t)&off_255648);
    a7 = result;
  }
  uint64_t v14 = 2;
  if (a3 >= 0) {
    uint64_t v15 = a3;
  }
  else {
    uint64_t v15 = 2;
  }
  if (a4) {
    uint64_t v15 = 2;
  }
  if (v11 >= 0) {
    uint64_t v16 = v11;
  }
  else {
    uint64_t v16 = 2;
  }
  if ((a2 & 1) == 0) {
    uint64_t v14 = v16;
  }
  *a8 = v14;
  a8[1] = v15;
  a8[2] = v13;
  a8[3] = a7;
  return result;
}

unint64_t sub_8340C(char a1)
{
  unint64_t result = 0xD000000000000025;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_834A4()
{
  return sub_8340C(*v0);
}

uint64_t sub_834AC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_93010(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_834D4(uint64_t a1)
{
  unint64_t v2 = sub_8C798();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_83510(uint64_t a1)
{
  unint64_t v2 = sub_8C798();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.MediaTypesRecommendationServiceConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26DC28);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  uint64_t v12 = *(void *)(v1 + 24);
  uint64_t v13 = v8;
  sub_5D64(a1, a1[3]);
  sub_8C798();
  sub_1FC870();
  char v18 = 0;
  sub_1FC520();
  if (!v2)
  {
    uint64_t v9 = v12;
    char v17 = 1;
    sub_1FC520();
    char v16 = 2;
    sub_1FC500();
    uint64_t v15 = v9;
    char v14 = 3;
    sub_12124(&qword_26DC38);
    sub_8C7EC(&qword_26DC40);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Configuration.MediaTypesRecommendationServiceConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DC48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v15[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_8C798();
  sub_1FC850();
  if (!v2)
  {
    char v19 = 0;
    uint64_t v9 = sub_1FC3E0();
    char v18 = 1;
    uint64_t v10 = sub_1FC3E0();
    char v17 = 2;
    sub_1FC3C0();
    uint64_t v13 = v12;
    sub_12124(&qword_26DC38);
    v15[15] = 3;
    sub_8C7EC(&qword_26DC50);
    sub_1FC3F0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v16;
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v13;
    a2[3] = v14;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_839A4(char a1)
{
  unint64_t result = 0xD000000000000027;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6F687365726874;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000031;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
    case 13:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x657A69536D616562;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_83B1C(char a1)
{
  unint64_t result = 0xD000000000000027;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6C6F687365726874;
      break;
    case 2:
      unint64_t result = 0xD000000000000022;
      break;
    case 3:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0xD00000000000002ALL;
      break;
    case 7:
      unint64_t result = 0xD000000000000031;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 10:
    case 13:
      unint64_t result = 0xD000000000000019;
      break;
    case 11:
      unint64_t result = 0xD000000000000010;
      break;
    case 12:
      unint64_t result = 0x657A69536D616562;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_83C94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Configuration.MediaTypesRecommendationServiceConfiguration.init(from:)(a1, a2);
}

uint64_t sub_83CAC(void *a1)
{
  return Configuration.MediaTypesRecommendationServiceConfiguration.encode(to:)(a1);
}

uint64_t sub_83CC4(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_89ED8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_839A4);
}

Swift::Int sub_83CDC(uint64_t a1, uint64_t a2)
{
  return sub_89F88(a1, a2, (void (*)(uint64_t))sub_839A4);
}

uint64_t sub_83CF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8A00C(a1, a2, a3, (void (*)(void))sub_839A4);
}

Swift::Int sub_83D0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8A07C(a1, a2, a3, (void (*)(uint64_t))sub_839A4);
}

uint64_t sub_83D24@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_255788;
  uint64_t result = sub_937A8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_83D5C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_839A4(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_83D88()
{
  return sub_83B1C(*v0);
}

uint64_t sub_83D90@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v4._rawValue = &off_255788;
  uint64_t result = sub_937A8(a1, a2, v4);
  *a3 = result;
  return result;
}

void sub_83DC0(unsigned char *a1@<X8>)
{
  *a1 = 14;
}

uint64_t sub_83DCC(uint64_t a1)
{
  unint64_t v2 = sub_8C850();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_83E08(uint64_t a1)
{
  unint64_t v2 = sub_8C850();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t Configuration.BooksClusteringServiceConfiguration.init(maxHighScoringItemCount:thresholdRatio:maxHighScoringItemOrphanCount:booksInGenrePermittedGenres:booksInGenreUnpermittedGenres:moreFromYourAuthorsConfiguration:rankBoostByCollectionRecommendationType:diversityPenaltyByCollectionRecommendationType:rankBoostByGenreDepth:wildcardEnabledCollectionTypes:wildcardEnabledMediaTypes:ndcgDiscountRate:beamSize:injectNextInOrderedSeries:)@<X0>(unint64_t result@<X0>, char a2@<W1>, double a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, char a6@<W5>, void *a7@<X6>, _UNKNOWN **a8@<X7>, uint64_t a9@<X8>, char *a10, unint64_t a11, unint64_t a12, unint64_t a13, _UNKNOWN **a14, _UNKNOWN **a15, double a16, char a17, uint64_t a18, char a19, char a20)
{
  uint64_t v23 = result;
  unint64_t v25 = a11;
  double v26 = 2.0;
  if ((a4 & 1) == 0)
  {
    double v26 = a3;
    if (a3 < 1.0) {
      double v26 = 2.0;
    }
  }
  unint64_t v27 = a12;
  char v28 = *a10;
  if (a11)
  {
    unint64_t v29 = a13;
    if (a12) {
      goto LABEL_6;
    }
  }
  else
  {
    uint64_t result = sub_1610F4((uint64_t)&off_255928);
    unint64_t v25 = result;
    unint64_t v29 = a13;
    if (a12)
    {
LABEL_6:
      char v30 = a17;
      if (v29) {
        goto LABEL_8;
      }
      goto LABEL_7;
    }
  }
  uint64_t result = sub_1610F4((uint64_t)&off_255958);
  unint64_t v27 = result;
  char v30 = a17;
  if (!v29)
  {
LABEL_7:
    uint64_t result = sub_161114((uint64_t)&off_2559A8);
    unint64_t v29 = result;
  }
LABEL_8:
  uint64_t v31 = a18;
  int v32 = a14;
  int v33 = a15;
  if (v30)
  {
    uint64_t v34 = 0x3FECCCCCCCCCCCCDLL;
    int v35 = a7;
    char v36 = a6;
  }
  else
  {
    uint64_t v34 = *(void *)&a16;
    int v35 = a7;
    char v36 = a6;
    if (a16 < 0.0) {
      uint64_t v34 = 0x3FECCCCCCCCCCCCDLL;
    }
  }
  uint64_t v37 = 3;
  if (a5 >= 0) {
    uint64_t v38 = a5;
  }
  else {
    uint64_t v38 = 3;
  }
  if ((v36 & 1) == 0) {
    uint64_t v37 = v38;
  }
  uint64_t v39 = 5;
  if (v23 >= 0) {
    uint64_t v40 = v23;
  }
  else {
    uint64_t v40 = 5;
  }
  if ((a2 & 1) == 0) {
    uint64_t v39 = v40;
  }
  if (a18 <= 0 || (a19 & 1) != 0) {
    uint64_t v31 = 10;
  }
  *(void *)a9 = v39;
  *(double *)(a9 + 8) = v26;
  if (!a15) {
    int v33 = &off_255A10;
  }
  if (!a14) {
    int v32 = &off_2559E8;
  }
  uint64_t v42 = &off_2558F8;
  if (a8) {
    uint64_t v42 = a8;
  }
  if (v35) {
    uint64_t v43 = v35;
  }
  else {
    uint64_t v43 = _swiftEmptyArrayStorage;
  }
  *(void *)(a9 + 16) = v37;
  *(void *)(a9 + 24) = v43;
  *(void *)(a9 + 32) = v42;
  *(unsigned char *)(a9 + 40) = v28 & 1;
  *(void *)(a9 + 48) = v25;
  *(void *)(a9 + 56) = v27;
  *(void *)(a9 + 64) = v29;
  *(void *)(a9 + 72) = v32;
  *(void *)(a9 + 80) = v33;
  *(void *)(a9 + 88) = v34;
  *(void *)(a9 + 96) = v31;
  *(unsigned char *)(a9 + 104) = a20 & 1;
  return result;
}

BooksPersonalization::Configuration::BooksClusteringServiceLegacyCollectionConfiguration __swiftcall Configuration.BooksClusteringServiceLegacyCollectionConfiguration.init(enabled:)(BooksPersonalization::Configuration::BooksClusteringServiceLegacyCollectionConfiguration enabled)
{
  *uint64_t v1 = enabled.enabled;
  return enabled;
}

uint64_t Configuration.BooksClusteringServiceConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DC58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8C850();
  sub_1FC850();
  if (!v2)
  {
    LOBYTE(v54) = 0;
    uint64_t v9 = sub_1FC350();
    char v11 = v10;
    LOBYTE(v54) = 1;
    uint64_t v12 = sub_1FC330();
    int v45 = v13;
    double v64 = *(double *)&v12;
    LOBYTE(v54) = 2;
    uint64_t v14 = sub_1FC350();
    int v41 = v15;
    uint64_t v42 = v14;
    unint64_t v43 = v9;
    sub_12124(&qword_26DA30);
    LOBYTE(v53) = 3;
    uint64_t v44 = (_UNKNOWN **)sub_7E8D8(&qword_26DA48);
    sub_1FC360();
    uint64_t v40 = v54;
    LOBYTE(v51) = 4;
    sub_1FC360();
    char v17 = v53;
    LOBYTE(v51) = 5;
    sub_8C8A4();
    sub_1FC360();
    uint64_t v44 = v17;
    v52[0] = v52[1];
    sub_12124(&qword_26DC70);
    LOBYTE(v50) = 6;
    unint64_t v39 = sub_8C94C(&qword_26DC78, &qword_26DC70, (void (*)(void))sub_8C8F8);
    sub_1FC360();
    unint64_t v38 = v51;
    LOBYTE(v49) = 7;
    sub_1FC360();
    unint64_t v39 = v50;
    sub_12124(&qword_26DC88);
    LOBYTE(v48) = 8;
    sub_8C94C(&qword_26DC90, &qword_26DC88, (void (*)(void))sub_7F5A8);
    sub_1FC360();
    unint64_t v37 = v49;
    sub_12124(&qword_26DC98);
    LOBYTE(v47) = 9;
    sub_8CEE4(&qword_26DCA0, &qword_26DC98, (void (*)(void))sub_8C8F8);
    sub_1FC360();
    char v36 = v48;
    sub_12124(&qword_26DCA8);
    char v46 = 10;
    sub_8CEE4(&qword_26DCB0, &qword_26DCA8, (void (*)(void))sub_8C9CC);
    sub_1FC360();
    int v35 = v47;
    char v46 = 11;
    uint64_t v34 = sub_1FC330();
    int v33 = v18;
    char v46 = 12;
    uint64_t v32 = sub_1FC350();
    LOBYTE(v17) = v19;
    char v46 = 13;
    char v20 = sub_1FC320();
    Configuration.BooksClusteringServiceConfiguration.init(maxHighScoringItemCount:thresholdRatio:maxHighScoringItemOrphanCount:booksInGenrePermittedGenres:booksInGenreUnpermittedGenres:moreFromYourAuthorsConfiguration:rankBoostByCollectionRecommendationType:diversityPenaltyByCollectionRecommendationType:rankBoostByGenreDepth:wildcardEnabledCollectionTypes:wildcardEnabledMediaTypes:ndcgDiscountRate:beamSize:injectNextInOrderedSeries:)(v43, v11 & 1, v64, v45 & 1, v42, v41 & 1, v40, v44, (uint64_t)v55, v52, v38, v39, v37, v36, v35, *(double *)&v34, v33 & 1, v32, v17 & 1,
      v20);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v21 = v55[1];
    uint64_t v22 = v55[2];
    char v23 = v57;
    uint64_t v24 = v60;
    uint64_t v25 = v61;
    uint64_t v26 = v62;
    char v27 = v63;
    long long v28 = v56;
    long long v29 = v58;
    long long v30 = v59;
    *(void *)a2 = v55[0];
    *(void *)(a2 + 8) = v21;
    *(void *)(a2 + 16) = v22;
    *(_OWORD *)(a2 + 24) = v28;
    *(unsigned char *)(a2 + 40) = v23;
    *(_OWORD *)(a2 + 48) = v29;
    *(_OWORD *)(a2 + 64) = v30;
    *(void *)(a2 + 80) = v24;
    *(void *)(a2 + 88) = v25;
    *(void *)(a2 + 96) = v26;
    *(unsigned char *)(a2 + 104) = v27;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t Configuration.BooksClusteringServiceConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DCC0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v25 = *(void *)(v1 + 24);
  uint64_t v26 = v7;
  uint64_t v24 = *(void *)(v1 + 32);
  int v23 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v21 = *(void *)(v1 + 56);
  uint64_t v22 = v8;
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v19 = *(void *)(v1 + 72);
  uint64_t v20 = v9;
  uint64_t v10 = *(void *)(v1 + 80);
  uint64_t v17 = *(void *)(v1 + 96);
  uint64_t v18 = v10;
  int v11 = *(unsigned __int8 *)(v1 + 104);
  sub_5D64(a1, a1[3]);
  sub_8C850();
  sub_1FC870();
  LOBYTE(v29) = 0;
  uint64_t v12 = v27;
  sub_1FC520();
  if (!v12)
  {
    uint64_t v13 = v25;
    uint64_t v14 = v24;
    char v15 = v23;
    LODWORD(v27) = v11;
    LOBYTE(v29) = 1;
    sub_1FC500();
    LOBYTE(v29) = 2;
    sub_1FC520();
    uint64_t v29 = v13;
    char v28 = 3;
    sub_12124(&qword_26DA30);
    sub_7E8D8(&qword_26DA38);
    sub_1FC530();
    uint64_t v29 = v14;
    char v28 = 4;
    sub_1FC530();
    LOBYTE(v29) = v15;
    char v28 = 5;
    sub_8CA20();
    sub_1FC530();
    uint64_t v29 = v22;
    char v28 = 6;
    sub_12124(&qword_26DC70);
    sub_8CA74(&qword_26DCD0, &qword_26DC70, (void (*)(void))sub_8CAF4);
    sub_1FC530();
    uint64_t v29 = v21;
    char v28 = 7;
    sub_1FC530();
    uint64_t v29 = v20;
    char v28 = 8;
    sub_12124(&qword_26DC88);
    sub_8CA74(&qword_26DCE0, &qword_26DC88, (void (*)(void))sub_7F82C);
    sub_1FC530();
    uint64_t v29 = v19;
    char v28 = 9;
    sub_12124(&qword_26DC98);
    sub_8CEE4(&qword_26DCE8, &qword_26DC98, (void (*)(void))sub_8CAF4);
    sub_1FC530();
    uint64_t v29 = v18;
    char v28 = 10;
    sub_12124(&qword_26DCA8);
    sub_8CEE4(&qword_26DCF0, &qword_26DCA8, (void (*)(void))sub_8CB48);
    sub_1FC530();
    LOBYTE(v29) = 11;
    sub_1FC500();
    LOBYTE(v29) = 12;
    sub_1FC520();
    LOBYTE(v29) = 13;
    sub_1FC4F0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_84EBC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.BooksClusteringServiceConfiguration.init(from:)(a1, a2);
}

uint64_t sub_84ED4(void *a1)
{
  return Configuration.BooksClusteringServiceConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::PersonalizationMetadataServiceConfiguration __swiftcall Configuration.PersonalizationMetadataServiceConfiguration.init(enabled:cachedMetadataExpirationInterval:batchMaximumSize:)(Swift::Bool enabled, Swift::Double cachedMetadataExpirationInterval, Swift::Int batchMaximumSize)
{
  *(unsigned char *)uint64_t v3 = enabled;
  *(Swift::Double *)(v3 + 8) = cachedMetadataExpirationInterval;
  *(void *)(v3 + 16) = batchMaximumSize;
  result.cachedMetadataExpirationInterval = cachedMetadataExpirationInterval;
  result.batchMaximumSize = batchMaximumSize;
  result.enabled = enabled;
  return result;
}

uint64_t Configuration.PersonalizationMetadataServiceConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DD00);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_8CB9C();
  sub_1FC850();
  if (!v2)
  {
    v14[15] = 0;
    char v9 = sub_1FC3B0();
    v14[14] = 1;
    sub_1FC3C0();
    uint64_t v12 = v11;
    v14[13] = 2;
    uint64_t v13 = sub_1FC3E0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v12;
    *(void *)(a2 + 16) = v13;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_850D8()
{
  unint64_t v1 = 0xD000000000000020;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000010;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64656C62616E65;
  }
}

uint64_t sub_85140@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_931B0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_85168(uint64_t a1)
{
  unint64_t v2 = sub_8CB9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_851A4(uint64_t a1)
{
  unint64_t v2 = sub_8CB9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.PersonalizationMetadataServiceConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26DD10);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5D64(a1, a1[3]);
  sub_8CB9C();
  sub_1FC870();
  char v12 = 0;
  sub_1FC4F0();
  if (!v2)
  {
    char v11 = 1;
    sub_1FC500();
    char v10 = 2;
    sub_1FC520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_85388@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.PersonalizationMetadataServiceConfiguration.init(from:)(a1, a2);
}

uint64_t sub_853A0(void *a1)
{
  return Configuration.PersonalizationMetadataServiceConfiguration.encode(to:)(a1);
}

uint64_t Configuration.BooksClusteringServiceLegacyCollectionConfiguration.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DD18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8CBF0();
  sub_1FC850();
  if (!v2)
  {
    char v9 = sub_1FC320();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return sub_1264C((uint64_t)a1);
}

Swift::Int sub_8550C()
{
  return sub_1FC830();
}

Swift::Int sub_85550()
{
  return sub_1FC830();
}

uint64_t sub_85590()
{
  return 0x64656C62616E65;
}

uint64_t sub_855A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x64656C62616E65 && a2 == 0xE700000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_85640(uint64_t a1)
{
  unint64_t v2 = sub_8CBF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8567C(uint64_t a1)
{
  unint64_t v2 = sub_8CBF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.BooksClusteringServiceLegacyCollectionConfiguration.encode(to:)(void *a1)
{
  uint64_t v2 = sub_12124(&qword_26DD28);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8CBF0();
  sub_1FC870();
  sub_1FC4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

uint64_t sub_857EC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Configuration.BooksClusteringServiceLegacyCollectionConfiguration.init(from:)(a1, a2);
}

BooksPersonalization::Configuration::ScorersConfiguration::BookHistoryScorerConfiguration::ReadingHistoryConfiguration __swiftcall Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.init(readFractionBoost:fullyReadThreshold:fullyReadBoost:halfLife:)(Swift::Double_optional readFractionBoost, Swift::Double_optional fullyReadThreshold, Swift::Double_optional fullyReadBoost, Swift::Double_optional halfLife)
{
  double v9 = 0.3;
  double v10 = 0.3;
  if (*(double *)&readFractionBoost.is_nil <= 1.0) {
    double v10 = *(double *)&readFractionBoost.is_nil;
  }
  if (*(double *)&readFractionBoost.is_nil >= -1.0) {
    double v11 = v10;
  }
  else {
    double v11 = 0.3;
  }
  if (!fullyReadThreshold.is_nil) {
    double v9 = v11;
  }
  double v12 = 0.9;
  if (!halfLife.is_nil && *(double *)&fullyReadBoost.is_nil >= 0.0)
  {
    double v12 = 0.9;
    if (*(double *)&fullyReadBoost.is_nil <= 1.0) {
      double v12 = *(double *)&fullyReadBoost.is_nil;
    }
  }
  double v13 = 0.1;
  if ((v5 & 1) == 0 && v4 >= -1.0)
  {
    double v13 = 0.1;
    if (v4 <= 1.0) {
      double v13 = v4;
    }
  }
  double v14 = 10368000.0;
  double v15 = v6;
  if (v6 < 0.0) {
    double v15 = 10368000.0;
  }
  *uint64_t v8 = v9;
  v8[1] = v12;
  if (v7) {
    double v16 = 10368000.0;
  }
  else {
    double v16 = v15;
  }
  v8[2] = v13;
  v8[3] = v16;
  result.halfLife = v14;
  result.fullyReadBoost = v13;
  result.fullyReadThreshold = v12;
  result.readFractionBoost = v16;
  return result;
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DD30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8CC44();
  sub_1FC850();
  if (!v2)
  {
    char v32 = 0;
    double v9 = COERCE_DOUBLE(sub_1FC330());
    char v11 = v10;
    char v31 = 1;
    uint64_t v12 = sub_1FC330();
    int v28 = v13;
    double v27 = *(double *)&v12;
    char v30 = 2;
    uint64_t v14 = sub_1FC330();
    int v25 = v16;
    double v24 = *(double *)&v14;
    char v29 = 3;
    double v26 = COERCE_DOUBLE(sub_1FC330());
    char v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    if (v11)
    {
      double v20 = 0.3;
    }
    else
    {
      double v19 = 0.3;
      if (v9 <= 1.0) {
        double v19 = v9;
      }
      if (v9 >= -1.0) {
        double v20 = v19;
      }
      else {
        double v20 = 0.3;
      }
    }
    uint64_t v21 = 0x3FECCCCCCCCCCCCDLL;
    if ((v28 & 1) == 0 && v27 >= 0.0)
    {
      uint64_t v21 = 0x3FECCCCCCCCCCCCDLL;
      if (v27 <= 1.0) {
        uint64_t v21 = *(void *)&v27;
      }
    }
    uint64_t v22 = 0x3FB999999999999ALL;
    if ((v25 & 1) == 0 && v24 >= -1.0)
    {
      uint64_t v22 = 0x3FB999999999999ALL;
      if (v24 <= 1.0) {
        uint64_t v22 = *(void *)&v24;
      }
    }
    if ((v18 & 1) != 0 || (uint64_t v23 = *(void *)&v26, v26 < 0.0)) {
      uint64_t v23 = 0x4163C68000000000;
    }
    *(double *)a2 = v20;
    *(void *)(a2 + 8) = v21;
    *(void *)(a2 + 16) = v22;
    *(void *)(a2 + 24) = v23;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_85B88()
{
  unint64_t result = 0xD000000000000011;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x616552796C6C7566;
      break;
    case 3:
      unint64_t result = 0x6566694C666C6168;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_85C28@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_93300(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_85C50(uint64_t a1)
{
  unint64_t v2 = sub_8CC44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_85C8C(uint64_t a1)
{
  unint64_t v2 = sub_8CC44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DD40);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_8CC44();
  sub_1FC870();
  v8[15] = 0;
  sub_1FC500();
  if (!v1)
  {
    v8[14] = 1;
    sub_1FC500();
    v8[13] = 2;
    sub_1FC500();
    v8[12] = 3;
    sub_1FC500();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t sub_85E8C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.init(from:)(a1, a2);
}

uint64_t sub_85EA4(void *a1)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.encode(to:)(a1);
}

void __swiftcall Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.init(declinedWeight:declinedAfterRecommendationsCount:declinedAfterPassoversCount:declinedPenaltyDurationBaseDays:declinedPenaltyDurationGrowthFactor:declinedPenaltyMaxDays:)(BooksPersonalization::Configuration::ScorersConfiguration::BookHistoryScorerConfiguration::DeclinedConfiguration *__return_ptr retstr, Swift::Double_optional declinedWeight, Swift::Int_optional declinedAfterRecommendationsCount, Swift::Int_optional declinedAfterPassoversCount, Swift::Int_optional declinedPenaltyDurationBaseDays, Swift::Double_optional declinedPenaltyDurationGrowthFactor, Swift::Int_optional declinedPenaltyMaxDays)
{
  uint64_t v7 = v17;
  double v8 = -0.1;
  if ((declinedAfterRecommendationsCount.value & 1) == 0 && *(double *)&declinedWeight.is_nil >= -1.0)
  {
    double v8 = -0.1;
    if (*(double *)&declinedWeight.is_nil <= 1.0) {
      double v8 = *(double *)&declinedWeight.is_nil;
    }
  }
  double v9 = 1.5;
  double v10 = *(double *)&declinedPenaltyMaxDays.value;
  if (*(double *)&declinedPenaltyMaxDays.value < 1.0) {
    double v10 = 1.5;
  }
  if (!declinedPenaltyMaxDays.is_nil) {
    double v9 = v10;
  }
  Swift::Int v11 = 7;
  if (*(uint64_t *)&declinedPenaltyDurationBaseDays.is_nil >= 0) {
    uint64_t v12 = *(void *)&declinedPenaltyDurationBaseDays.is_nil;
  }
  else {
    uint64_t v12 = 7;
  }
  if (!declinedPenaltyDurationGrowthFactor.is_nil) {
    Swift::Int v11 = v12;
  }
  if (*(uint64_t *)&declinedAfterPassoversCount.is_nil < 0) {
    Swift::Int v13 = 1;
  }
  else {
    Swift::Int v13 = *(void *)&declinedAfterPassoversCount.is_nil;
  }
  if (declinedPenaltyDurationBaseDays.value) {
    Swift::Int v13 = 1;
  }
  Swift::Int v14 = 10;
  if (*(uint64_t *)&declinedAfterRecommendationsCount.is_nil >= 0) {
    uint64_t v15 = *(void *)&declinedAfterRecommendationsCount.is_nil;
  }
  else {
    uint64_t v15 = 10;
  }
  if ((declinedAfterPassoversCount.value & 1) == 0) {
    Swift::Int v14 = v15;
  }
  if (v17 < 0) {
    uint64_t v7 = 180;
  }
  retstr->declinedWeight = v8;
  retstr->declinedAfterRecommendationsCount = v14;
  retstr->declinedAfterPassoversCount = v13;
  retstr->declinedPenaltyDurationBaseDays = v11;
  if (v18) {
    Swift::Int v16 = 180;
  }
  else {
    Swift::Int v16 = v7;
  }
  retstr->declinedPenaltyDurationGrowthFactor = v9;
  retstr->declinedPenaltyMaxDays = v16;
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26DD48);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  double v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8CC98();
  sub_1FC850();
  if (!v2)
  {
    char v53 = 0;
    double v9 = COERCE_DOUBLE(sub_1FC330());
    char v11 = v10;
    char v52 = 1;
    uint64_t v12 = sub_1FC350();
    int v46 = v13;
    uint64_t v47 = v12;
    char v51 = 2;
    uint64_t v14 = sub_1FC350();
    int v44 = v15;
    uint64_t v45 = v14;
    char v50 = 3;
    uint64_t v16 = sub_1FC350();
    int v42 = v17;
    uint64_t v43 = v16;
    char v49 = 4;
    *(double *)&uint64_t v18 = COERCE_DOUBLE(sub_1FC330());
    int v40 = v20;
    double v39 = *(double *)&v18;
    char v48 = 5;
    uint64_t v41 = sub_1FC350();
    char v22 = v21;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    double v23 = -0.1;
    if (v11)
    {
      uint64_t v24 = v47;
      char v25 = v46;
      uint64_t v26 = v45;
      char v27 = v44;
      uint64_t v28 = v43;
      char v29 = v42;
      char v30 = v40;
    }
    else
    {
      uint64_t v24 = v47;
      char v25 = v46;
      uint64_t v26 = v45;
      char v27 = v44;
      uint64_t v28 = v43;
      char v29 = v42;
      char v30 = v40;
      if (v9 >= -1.0)
      {
        double v23 = -0.1;
        if (v9 <= 1.0) {
          double v23 = v9;
        }
      }
    }
    uint64_t v31 = 10;
    if (v24 < 0) {
      uint64_t v24 = 10;
    }
    if ((v25 & 1) == 0) {
      uint64_t v31 = v24;
    }
    if (v26 < 0) {
      uint64_t v32 = 1;
    }
    else {
      uint64_t v32 = v26;
    }
    if (v27) {
      uint64_t v32 = 1;
    }
    uint64_t v33 = 7;
    if (v28 >= 0) {
      uint64_t v34 = v28;
    }
    else {
      uint64_t v34 = 7;
    }
    if ((v29 & 1) == 0) {
      uint64_t v33 = v34;
    }
    double v35 = 1.5;
    if ((v30 & 1) == 0)
    {
      double v35 = v39;
      if (v39 < 1.0) {
        double v35 = 1.5;
      }
    }
    uint64_t v36 = 180;
    if (v41 >= 0) {
      uint64_t v37 = v41;
    }
    else {
      uint64_t v37 = 180;
    }
    *(double *)a2 = v23;
    if ((v22 & 1) == 0) {
      uint64_t v36 = v37;
    }
    *(void *)(a2 + 8) = v31;
    *(void *)(a2 + 16) = v32;
    *(void *)(a2 + 24) = v33;
    *(double *)(a2 + 32) = v35;
    *(void *)(a2 + 40) = v36;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_862B4(char a1)
{
  unint64_t result = 0x64656E696C636564;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000023;
      break;
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_8639C()
{
  return sub_862B4(*v0);
}

uint64_t sub_863A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_934D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_863CC(uint64_t a1)
{
  unint64_t v2 = sub_8CC98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_86408(uint64_t a1)
{
  unint64_t v2 = sub_8CC98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26DD58);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v10[2] = v1[2];
  v10[3] = v8;
  v10[1] = v1[3];
  sub_5D64(a1, a1[3]);
  sub_8CC98();
  sub_1FC870();
  char v16 = 0;
  sub_1FC500();
  if (!v2)
  {
    char v15 = 1;
    sub_1FC520();
    char v14 = 2;
    sub_1FC520();
    char v13 = 3;
    sub_1FC520();
    char v12 = 4;
    sub_1FC500();
    char v11 = 5;
    sub_1FC520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t sub_86674@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.init(from:)(a1, a2);
}

uint64_t sub_8668C(void *a1)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::ScorersConfiguration::BookHistoryScorerConfiguration::RecommendationMethodology_optional __swiftcall Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.RecommendationMethodology.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_255A38;
  v8._object = object;
  Swift::Int v5 = sub_1FC2D0(v4, v8);
  result.Swift::Int value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.RecommendationMethodology.rawValue.getter()
{
  if (*v0) {
    return 0xD000000000000011;
  }
  else {
    return 0x6168637275706F63;
  }
}

unint64_t sub_8674C(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000015;
      break;
    case 2:
      unint64_t result = 0x64656E696C636564;
      break;
    case 3:
    case 5:
    case 20:
    case 26:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 6:
      unint64_t result = 0xD000000000000014;
      break;
    case 7:
      unint64_t result = 0x6573616863727570;
      break;
    case 8:
      unint64_t result = 0xD000000000000011;
      break;
    case 9:
      unint64_t result = 0xD000000000000020;
      break;
    case 10:
      unint64_t result = 0xD000000000000022;
      break;
    case 11:
      unint64_t result = 0xD000000000000018;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 13:
      unint64_t result = 0xD000000000000029;
      break;
    case 14:
      unint64_t result = 0xD00000000000002DLL;
      break;
    case 15:
      unint64_t result = 0x6465776569766572;
      break;
    case 16:
      unint64_t result = 0xD000000000000010;
      break;
    case 17:
      unint64_t result = 0x5764656C706D6173;
      break;
    case 18:
      unint64_t result = 0x4864656C706D6173;
      break;
    case 19:
      unint64_t result = 0xD000000000000010;
      break;
    case 21:
      unint64_t result = 0xD000000000000015;
      break;
    case 22:
      unint64_t result = 0xD000000000000017;
      break;
    case 23:
      unint64_t result = 0xD000000000000016;
      break;
    case 24:
      unint64_t result = 0xD000000000000011;
      break;
    case 25:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 27:
      unint64_t result = 0xD000000000000018;
      break;
    case 28:
      unint64_t result = 0xD00000000000002ELL;
      break;
    case 29:
      unint64_t result = 0xD000000000000024;
      break;
    case 30:
      unint64_t result = 0xD000000000000010;
      break;
    case 31:
      unint64_t result = 0xD000000000000023;
      break;
    case 32:
      unint64_t result = 0xD000000000000014;
      break;
    case 33:
      unint64_t result = 0xD000000000000023;
      break;
    case 34:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 35:
      unint64_t result = 0xD000000000000016;
      break;
    case 36:
      unint64_t result = 0xD00000000000001BLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_86AC4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DA638(*a1, *a2);
}

Swift::Int sub_86AD0()
{
  return sub_1FC830();
}

uint64_t sub_86B5C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_86BD4()
{
  return sub_1FC830();
}

BooksPersonalization::Configuration::ScorersConfiguration::BookHistoryScorerConfiguration::RecommendationMethodology_optional sub_86C5C(Swift::String *a1)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.RecommendationMethodology.init(rawValue:)(*a1);
}

void sub_86C68(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0x6168637275706F63;
  if (*v1) {
    unint64_t v2 = 0xD000000000000011;
  }
  unint64_t v3 = 0x8000000000216470;
  if (!*v1) {
    unint64_t v3 = 0xEA00000000006573;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_86CB0()
{
  return sub_1FBA60();
}

uint64_t sub_86D10()
{
  return sub_1FBA40();
}

uint64_t sub_86D60(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_89ED8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_8674C);
}

Swift::Int sub_86D78(uint64_t a1, uint64_t a2)
{
  return sub_89F88(a1, a2, (void (*)(uint64_t))sub_8674C);
}

uint64_t sub_86D90(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8A00C(a1, a2, a3, (void (*)(void))sub_8674C);
}

Swift::Int sub_86DA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8A07C(a1, a2, a3, (void (*)(uint64_t))sub_8674C);
}

uint64_t sub_86DC0@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_93754();
  *a1 = result;
  return result;
}

unint64_t sub_86DF0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_8674C(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_86E1C()
{
  return sub_8674C(*v0);
}

uint64_t sub_86E24@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_93754();
  *a1 = result;
  return result;
}

void sub_86E4C(unsigned char *a1@<X8>)
{
  *a1 = 37;
}

uint64_t sub_86E58(uint64_t a1)
{
  unint64_t v2 = sub_8CCEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_86E94(uint64_t a1)
{
  unint64_t v2 = sub_8CCEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.bookHistoryLimit.getter()
{
  return *(void *)(v0 + 336);
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.init(bookReadingHistoryConfiguration:sampledReadingHistoryConfiguration:declinedConfiguration:moreLikeThisWeight:moreLikeThisHalfLife:lessLikeThisWeight:lessLikeThisHalfLife:purchasedWeight:purchasedHalfLife:downloadedViaFamilySharingWeight:downloadedViaFamilySharingHalfLife:acquiredExternallyWeight:acquiredExternallyHalfLife:acquiredExternallyUnknownFinishedInterval:storeBookUnknownFinishedIntervalSincePurchase:reviewedWeight:reviewedHalfLife:sampledWeight:sampledHalfLife:wantToReadWeight:wantToReadHalfLife:productPageViewWeight:productPageViewHalfLife:diversificationPenalty:bookAffinityLimit:bookCandidateLimitPerSeedBook:bookCandidateLimit:supplementalRequestLimit:preEventCollectionAddedToWantToReadDateSpacing:preEventCollectionSampledDateSpacing:bookHistoryLimit:syntheticConditionalScoreMultiplier:conditionalScoreBias:allowCandidatesWithProductPageViews:allowCandidatesInWantToRead:allowSampledCandidates:recommendationMethodologies:)@<X0>(uint64_t a1@<X0>, int8x16_t *a2@<X1>, uint64_t a3@<X2>, double a4@<X3>, char a5@<W4>, double a6@<X5>, char a7@<W6>, double a8@<X7>, uint64_t a9@<X8>, char a10, double a11, char a12, double a13, char a14, double a15, char a16, double a17, char a18, double a19, char a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,double a25,char a26,double a27,char a28,double a29,char a30,double a31,char a32,double a33,char a34,double a35,char a36,double a37,char a38,double a39,char a40,double a41,char a42,double a43,char a44,double a45,char a46,uint64_t a47,char a48,uint64_t a49,char a50,uint64_t a51,char a52,uint64_t a53,char a54,double a55,char a56,double a57,char a58,uint64_t a59,char a60,double a61,char a62,double a63)
{
  if (*(unsigned char *)(a1 + 32))
  {
    long long v154 = xmmword_202B40;
    long long v155 = xmmword_202B30;
  }
  else
  {
    long long v154 = *(_OWORD *)a1;
    long long v155 = *(_OWORD *)(a1 + 16);
  }
  if (a2[2].i8[0]) {
    unint64_t v69 = -1;
  }
  else {
    unint64_t v69 = 0;
  }
  if (*(unsigned char *)(a3 + 48))
  {
    long long v70 = xmmword_202B60;
    double v71 = 1.5;
    uint64_t v72 = 180;
    uint64_t v73 = 7;
    unint64_t v74 = 0xBFB999999999999ALL;
  }
  else
  {
    uint64_t v73 = *(void *)(a3 + 24);
    uint64_t v72 = *(void *)(a3 + 40);
    unint64_t v74 = *(void *)a3;
    long long v70 = *(_OWORD *)(a3 + 8);
    double v71 = *(double *)(a3 + 32);
  }
  double v75 = 0.9;
  if ((a5 & 1) == 0 && a4 >= -1.0)
  {
    if (a4 > 1.0) {
      double v75 = 0.9;
    }
    else {
      double v75 = a4;
    }
  }
  if ((a7 & 1) != 0 || (uint64_t v76 = *(void *)&a6, a6 < 0.0)) {
    uint64_t v76 = 0x4153C68000000000;
  }
  double v77 = -0.9;
  if ((a10 & 1) == 0 && a8 >= -1.0)
  {
    if (a8 > 1.0) {
      double v77 = -0.9;
    }
    else {
      double v77 = a8;
    }
  }
  if ((a12 & 1) != 0 || (uint64_t v78 = *(void *)&a11, a11 < 0.0)) {
    uint64_t v78 = 0x4153C68000000000;
  }
  double v79 = 0.5;
  if ((a14 & 1) == 0 && a13 >= -1.0)
  {
    if (a13 > 1.0) {
      double v79 = 0.5;
    }
    else {
      double v79 = a13;
    }
  }
  if ((a16 & 1) != 0 || (uint64_t v80 = *(void *)&a15, a15 < 0.0)) {
    uint64_t v80 = 0x4187BB0000000000;
  }
  double v81 = 0.5;
  if ((a18 & 1) == 0 && a17 >= -1.0)
  {
    if (a17 > 1.0) {
      double v81 = 0.5;
    }
    else {
      double v81 = a17;
    }
  }
  if ((a20 & 1) != 0 || (uint64_t v82 = *(void *)&a19, a19 < 0.0)) {
    uint64_t v82 = 0x4187BB0000000000;
  }
  double v83 = 0.5;
  if ((a18 & 1) == 0 && a17 >= -1.0)
  {
    if (a17 > 1.0) {
      double v83 = 0.5;
    }
    else {
      double v83 = a17;
    }
  }
  if ((a20 & 1) != 0 || (uint64_t v84 = *(void *)&a19, a19 < 0.0)) {
    uint64_t v84 = 0x4187BB0000000000;
  }
  double v85 = 1.0;
  if ((a30 & 1) == 0 && a29 >= -1.0) {
    double v85 = fmin(a29, 1.0);
  }
  if ((a32 & 1) != 0 || (uint64_t v86 = *(void *)&a31, a31 < 0.0)) {
    uint64_t v86 = 0x4196A38200000000;
  }
  uint64_t v87 = 0x3FD999999999999ALL;
  if ((a34 & 1) == 0 && a33 >= -1.0)
  {
    if (a33 > 1.0) {
      uint64_t v87 = 0x3FD999999999999ALL;
    }
    else {
      uint64_t v87 = *(void *)&a33;
    }
  }
  if ((a36 & 1) != 0 || (uint64_t v88 = *(void *)&a35, a35 < 0.0)) {
    uint64_t v88 = 0x4153C68000000000;
  }
  uint64_t v89 = 0x3FD999999999999ALL;
  if ((a38 & 1) == 0 && a37 >= -1.0)
  {
    if (a37 > 1.0) {
      uint64_t v89 = 0x3FD999999999999ALL;
    }
    else {
      uint64_t v89 = *(void *)&a37;
    }
  }
  if ((a40 & 1) != 0 || (uint64_t v90 = *(void *)&a39, a39 < 0.0)) {
    uint64_t v90 = 0x4153C68000000000;
  }
  uint64_t v91 = 0x3FB999999999999ALL;
  if ((a42 & 1) == 0 && a41 >= -1.0)
  {
    if (a41 > 1.0) {
      uint64_t v91 = 0x3FB999999999999ALL;
    }
    else {
      uint64_t v91 = *(void *)&a41;
    }
  }
  if ((a44 & 1) != 0 || (uint64_t v92 = *(void *)&a43, a43 < 0.0)) {
    uint64_t v92 = 0x4143C68000000000;
  }
  uint64_t v93 = 0x3FE999999999999ALL;
  if ((a46 & 1) == 0 && a45 >= 0.0)
  {
    if (a45 > 1.0) {
      uint64_t v93 = 0x3FE999999999999ALL;
    }
    else {
      uint64_t v93 = *(void *)&a45;
    }
  }
  double v94 = 1.0;
  double v95 = 1.0;
  if ((a56 & 1) == 0)
  {
    double v95 = a55;
    if (a55 < 0.0) {
      double v95 = 1.0;
    }
  }
  if ((a58 & 1) == 0)
  {
    double v94 = a57;
    if (a57 < 0.0) {
      double v94 = 1.0;
    }
  }
  double v96 = 1.5;
  if ((a62 & 1) == 0)
  {
    double v96 = a61;
    if (a61 <= 0.0) {
      double v96 = 1.5;
    }
  }
  int8x16_t v97 = *a2;
  int8x16_t v98 = a2[1];
  int8x16_t v99 = (int8x16_t)vdupq_n_s64(v69);
  double v100 = 0.0;
  uint64_t result = a68;
  if ((a64 & 1) == 0)
  {
    double v102 = a63;
    if (a63 >= 0.0)
    {
      if (a63 > 1.0) {
        double v102 = 0.0;
      }
      double v100 = v102;
    }
  }
  char v103 = a67;
  char v104 = a65;
  uint64_t v105 = a59;
  uint64_t v106 = a53;
  uint64_t v107 = a51;
  char v108 = a50;
  uint64_t v109 = a49;
  char v110 = a48;
  uint64_t v111 = a47;
  char v112 = a28;
  int8x16_t v113 = vbslq_s8(v99, (int8x16_t)xmmword_202B40, v97);
  int8x16_t v114 = vbslq_s8(v99, (int8x16_t)xmmword_202B50, v98);
  if (!a68)
  {
    uint64_t v135 = v72;
    long long v153 = v70;
    double v151 = v71;
    double v139 = v94;
    uint64_t v140 = v93;
    unint64_t v115 = v74;
    double v149 = v75;
    uint64_t v145 = v88;
    uint64_t v146 = v87;
    uint64_t v116 = v76;
    double v138 = v77;
    uint64_t v142 = v91;
    uint64_t v117 = v78;
    double v147 = v79;
    uint64_t v118 = v80;
    double v152 = v81;
    uint64_t v143 = v90;
    uint64_t v144 = v89;
    uint64_t v119 = v82;
    double v150 = v83;
    uint64_t v120 = v84;
    double v148 = v85;
    uint64_t v141 = v92;
    uint64_t v121 = v86;
    double v122 = v95;
    double v136 = v100;
    double v137 = v96;
    int8x16_t v133 = v114;
    int8x16_t v134 = v113;
    uint64_t result = sub_51558((uint64_t)&off_255E20);
    int8x16_t v114 = v133;
    int8x16_t v113 = v134;
    uint64_t v105 = a59;
    uint64_t v109 = a49;
    uint64_t v111 = a47;
    char v108 = a50;
    char v104 = a65;
    uint64_t v106 = a53;
    char v110 = a48;
    char v112 = a28;
    uint64_t v107 = a51;
    char v103 = a67;
    double v100 = v136;
    double v96 = v137;
    double v95 = v122;
    uint64_t v86 = v121;
    double v79 = v147;
    double v85 = v148;
    uint64_t v84 = v120;
    double v75 = v149;
    double v83 = v150;
    uint64_t v82 = v119;
    uint64_t v90 = v143;
    uint64_t v89 = v144;
    double v81 = v152;
    uint64_t v80 = v118;
    uint64_t v78 = v117;
    uint64_t v92 = v141;
    uint64_t v91 = v142;
    double v77 = v138;
    double v94 = v139;
    uint64_t v76 = v116;
    uint64_t v88 = v145;
    uint64_t v87 = v146;
    unint64_t v74 = v115;
    uint64_t v93 = v140;
    double v71 = v151;
    long long v70 = v153;
    uint64_t v72 = v135;
  }
  *(_OWORD *)a9 = v154;
  *(_OWORD *)(a9 + 16) = v155;
  *(int8x16_t *)(a9 + 32) = v113;
  *(int8x16_t *)(a9 + 48) = v114;
  *(void *)(a9 + 64) = v74;
  *(_OWORD *)(a9 + 72) = v70;
  *(double *)(a9 + 96) = v71;
  *(double *)(a9 + 112) = v75;
  *(void *)(a9 + 120) = v76;
  *(double *)(a9 + 128) = v77;
  *(void *)(a9 + 136) = v78;
  *(double *)(a9 + 144) = v79;
  *(void *)(a9 + 152) = v80;
  *(double *)(a9 + 160) = v81;
  uint64_t v123 = 1000;
  if (v105 < 0) {
    uint64_t v105 = 1000;
  }
  if ((a60 & 1) == 0) {
    uint64_t v123 = v105;
  }
  uint64_t v124 = 500;
  if (v107 >= 0) {
    uint64_t v125 = v107;
  }
  else {
    uint64_t v125 = 500;
  }
  if ((a52 & 1) == 0) {
    uint64_t v124 = v125;
  }
  if (v106 < 0) {
    uint64_t v126 = 1;
  }
  else {
    uint64_t v126 = v106;
  }
  if (a54) {
    uint64_t v126 = 1;
  }
  uint64_t v127 = 10;
  if (v109 >= 0) {
    uint64_t v128 = v109;
  }
  else {
    uint64_t v128 = 10;
  }
  if ((v108 & 1) == 0) {
    uint64_t v127 = v128;
  }
  uint64_t v129 = 20;
  if (v111 >= 0) {
    uint64_t v130 = v111;
  }
  else {
    uint64_t v130 = 20;
  }
  if ((v110 & 1) == 0) {
    uint64_t v129 = v130;
  }
  *(void *)(a9 + 168) = v82;
  *(double *)(a9 + 176) = v83;
  if (v112) {
    a27 = 1209600.0;
  }
  if (a26) {
    a25 = 157680000.0;
  }
  *(void *)(a9 + 184) = v84;
  *(double *)(a9 + 192) = a25;
  *(double *)(a9 + 200) = a27;
  *(double *)(a9 + 208) = v85;
  *(void *)(a9 + 216) = v86;
  *(void *)(a9 + 224) = v87;
  *(void *)(a9 + 232) = v88;
  *(void *)(a9 + 240) = v89;
  *(void *)(a9 + 248) = v90;
  *(void *)(a9 + 256) = v91;
  *(void *)(a9 + 264) = v92;
  *(void *)(a9 + 272) = v93;
  *(double *)(a9 + 312) = v95;
  *(double *)(a9 + 320) = v94;
  *(double *)(a9 + 344) = v96;
  *(double *)(a9 + 352) = v100;
  *(void *)(a9 + 88) = v73;
  *(void *)(a9 + 104) = v72;
  *(void *)(a9 + 280) = v129;
  *(void *)(a9 + 288) = v127;
  *(void *)(a9 + 296) = v124;
  *(void *)(a9 + 304) = v126;
  *(void *)(a9 + 328) = result;
  *(void *)(a9 + 336) = v123;
  *(unsigned char *)(a9 + 360) = (v104 == 2) | v104 & 1;
  *(unsigned char *)(a9 + 361) = (a66 == 2) | a66 & 1;
  *(unsigned char *)(a9 + 362) = (v103 == 2) | v103 & 1;
  return result;
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v129 = sub_12124(&qword_26DD60);
  uint64_t v5 = *(void *)(v129 - 8);
  __chkstk_darwin(v129);
  char v7 = (char *)&v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8CCEC();
  sub_1FC850();
  if (!v2)
  {
    uint64_t v109 = a2;
    uint64_t v110 = v5;
    v111[0] = 0;
    sub_8CD40();
    sub_1FC360();
    v124[0] = v126;
    v124[1] = v127;
    char v125 = v128;
    v111[0] = 1;
    sub_1FC360();
    v119[0] = v121;
    v119[1] = v122;
    char v120 = v123;
    v111[0] = 2;
    sub_8CD94();
    sub_1FC360();
    v113[0] = v115;
    v113[1] = v116;
    v113[2] = v117;
    char v114 = v118;
    v111[0] = 3;
    uint64_t v8 = sub_1FC330();
    char v10 = v9;
    v111[0] = 4;
    uint64_t v11 = sub_1FC330();
    int v107 = v12;
    uint64_t v108 = v11;
    v111[0] = 5;
    uint64_t v13 = sub_1FC330();
    int v105 = v14;
    uint64_t v106 = v13;
    v111[0] = 6;
    uint64_t v15 = sub_1FC330();
    int v103 = v16;
    uint64_t v104 = v15;
    v111[0] = 7;
    uint64_t v17 = sub_1FC330();
    int v100 = v18;
    uint64_t v102 = v17;
    v111[0] = 8;
    uint64_t v101 = sub_1FC330();
    int v99 = v19;
    v111[0] = 9;
    uint64_t v21 = sub_1FC330();
    int v98 = v22;
    double v23 = *(double *)&v21;
    v111[0] = 10;
    uint64_t v24 = sub_1FC330();
    int v97 = v25;
    double v26 = *(double *)&v24;
    v111[0] = 11;
    sub_1FC330();
    v111[0] = 12;
    sub_1FC330();
    v111[0] = 13;
    uint64_t v96 = sub_1FC330();
    int v95 = v27;
    v111[0] = 14;
    uint64_t v94 = sub_1FC330();
    int v93 = v28;
    v111[0] = 15;
    uint64_t v92 = sub_1FC330();
    int v91 = v29;
    v111[0] = 16;
    uint64_t v90 = sub_1FC330();
    int v89 = v30;
    v111[0] = 17;
    uint64_t v88 = sub_1FC330();
    int v87 = v31;
    v111[0] = 18;
    uint64_t v86 = sub_1FC330();
    int v85 = v32;
    v111[0] = 19;
    uint64_t v84 = sub_1FC330();
    int v83 = v33;
    v111[0] = 20;
    uint64_t v82 = sub_1FC330();
    int v81 = v34;
    v111[0] = 21;
    uint64_t v80 = sub_1FC330();
    int v79 = v35;
    v111[0] = 22;
    uint64_t v78 = sub_1FC330();
    int v77 = v36;
    v111[0] = 23;
    uint64_t v76 = sub_1FC330();
    int v75 = v37;
    v111[0] = 24;
    uint64_t v74 = sub_1FC350();
    int v73 = v38;
    v111[0] = 25;
    uint64_t v72 = sub_1FC350();
    int v71 = v39;
    v111[0] = 26;
    uint64_t v70 = sub_1FC350();
    int v69 = v40;
    v111[0] = 27;
    uint64_t v68 = sub_1FC350();
    int v67 = v41;
    v111[0] = 28;
    uint64_t v66 = sub_1FC330();
    int v65 = v42;
    v111[0] = 29;
    uint64_t v64 = sub_1FC330();
    int v63 = v43;
    v111[0] = 30;
    uint64_t v62 = sub_1FC350();
    int v61 = v44;
    v111[0] = 31;
    uint64_t v60 = sub_1FC330();
    int v59 = v45;
    v111[0] = 32;
    uint64_t v58 = sub_1FC330();
    int v57 = v46;
    v111[0] = 33;
    int v56 = sub_1FC320();
    v111[0] = 34;
    int v55 = sub_1FC320();
    v111[0] = 35;
    int v54 = sub_1FC320();
    sub_12124(&qword_26DD80);
    v111[0] = 36;
    sub_8CEE4(&qword_26DD88, &qword_26DD80, (void (*)(void))sub_8CDE8);
    sub_1FC360();
    int v53 = v10 & 1;
    v107 &= 1u;
    v105 &= 1u;
    v103 &= 1u;
    v100 &= 1u;
    v99 &= 1u;
    v98 &= 1u;
    v97 &= 1u;
    v95 &= 1u;
    v93 &= 1u;
    v91 &= 1u;
    v89 &= 1u;
    v87 &= 1u;
    v85 &= 1u;
    v83 &= 1u;
    v81 &= 1u;
    v79 &= 1u;
    v77 &= 1u;
    v75 &= 1u;
    v73 &= 1u;
    v71 &= 1u;
    v69 &= 1u;
    v67 &= 1u;
    v65 &= 1u;
    v63 &= 1u;
    v61 &= 1u;
    v59 &= 1u;
    v57 &= 1u;
    if (v112) {
      uint64_t v47 = v112;
    }
    else {
      uint64_t v47 = &off_255E48;
    }
    sub_51558((uint64_t)v47);
    swift_bridgeObjectRelease();
    Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.init(bookReadingHistoryConfiguration:sampledReadingHistoryConfiguration:declinedConfiguration:moreLikeThisWeight:moreLikeThisHalfLife:lessLikeThisWeight:lessLikeThisHalfLife:purchasedWeight:purchasedHalfLife:downloadedViaFamilySharingWeight:downloadedViaFamilySharingHalfLife:acquiredExternallyWeight:acquiredExternallyHalfLife:acquiredExternallyUnknownFinishedInterval:storeBookUnknownFinishedIntervalSincePurchase:reviewedWeight:reviewedHalfLife:sampledWeight:sampledHalfLife:wantToReadWeight:wantToReadHalfLife:productPageViewWeight:productPageViewHalfLife:diversificationPenalty:bookAffinityLimit:bookCandidateLimitPerSeedBook:bookCandidateLimit:supplementalRequestLimit:preEventCollectionAddedToWantToReadDateSpacing:preEventCollectionSampledDateSpacing:bookHistoryLimit:syntheticConditionalScoreMultiplier:conditionalScoreBias:allowCandidatesWithProductPageViews:allowCandidatesInWantToRead:allowSampledCandidates:recommendationMethodologies:)((uint64_t)v124, v119, (uint64_t)v113, *(double *)&v8, v53, *(double *)&v108, v107, *(double *)&v106, (uint64_t)v111, v105, *(double *)&v104, v103, *(double *)&v102, v100, *(double *)&v101, v99, v23, v98, v26,
      v97,
      v48,
      v49,
      v50,
      v51,
      *(double *)&v96,
      v95,
      *(double *)&v94,
      v93,
      *(double *)&v92,
      v91,
      *(double *)&v90,
      v89,
      *(double *)&v88,
      v87,
      *(double *)&v86,
      v85,
      *(double *)&v84,
      v83,
      *(double *)&v82,
      v81,
      *(double *)&v80,
      v79,
      *(double *)&v78,
      v77,
      *(double *)&v76,
      v75,
      v74,
      v73,
      v72,
      v71,
      v70,
      v69,
      v68,
      v67,
      *(double *)&v66,
      v65,
      *(double *)&v64,
      v63,
      v62,
      v61,
      *(double *)&v60,
      v59,
      *(double *)&v58);
    (*(void (**)(char *, uint64_t))(v110 + 8))(v7, v129);
    memcpy(v109, v111, 0x16BuLL);
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DD98);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v19 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v55 = *v1;
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v7 = *((void *)v1 + 3);
  uint64_t v9 = *((void *)v1 + 4);
  uint64_t v51 = *((void *)v1 + 5);
  uint64_t v52 = v9;
  uint64_t v10 = *((void *)v1 + 6);
  uint64_t v53 = *((void *)v1 + 7);
  uint64_t v54 = v10;
  uint64_t v50 = *((void *)v1 + 8);
  uint64_t v49 = *((void *)v1 + 9);
  uint64_t v48 = *((void *)v1 + 10);
  uint64_t v46 = *((void *)v1 + 11);
  uint64_t v47 = *((void *)v1 + 12);
  uint64_t v45 = *((void *)v1 + 13);
  uint64_t v44 = *((void *)v1 + 14);
  uint64_t v43 = *((void *)v1 + 15);
  uint64_t v42 = *((void *)v1 + 16);
  uint64_t v41 = *((void *)v1 + 17);
  uint64_t v40 = *((void *)v1 + 18);
  uint64_t v39 = *((void *)v1 + 19);
  uint64_t v38 = *((void *)v1 + 20);
  uint64_t v37 = *((void *)v1 + 21);
  uint64_t v36 = *((void *)v1 + 22);
  uint64_t v35 = *((void *)v1 + 23);
  uint64_t v34 = *((void *)v1 + 24);
  uint64_t v33 = *((void *)v1 + 25);
  uint64_t v32 = *((void *)v1 + 26);
  uint64_t v31 = *((void *)v1 + 27);
  uint64_t v21 = *((void *)v1 + 28);
  uint64_t v22 = *((void *)v1 + 29);
  uint64_t v23 = *((void *)v1 + 30);
  uint64_t v24 = *((void *)v1 + 31);
  uint64_t v25 = *((void *)v1 + 32);
  uint64_t v26 = *((void *)v1 + 35);
  uint64_t v27 = *((void *)v1 + 36);
  uint64_t v28 = *((void *)v1 + 37);
  uint64_t v29 = *((void *)v1 + 38);
  uint64_t v20 = *((void *)v1 + 41);
  uint64_t v30 = *((void *)v1 + 42);
  int v62 = *((unsigned __int8 *)v1 + 360);
  int v11 = *((unsigned __int8 *)v1 + 361);
  sub_5D64(a1, a1[3]);
  sub_8CCEC();
  uint64_t v12 = v3;
  sub_1FC870();
  long long v57 = v55;
  uint64_t v58 = v8;
  uint64_t v59 = v7;
  char v63 = 0;
  sub_8CE3C();
  uint64_t v13 = v56;
  sub_1FC530();
  if (v13) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v15 = v48;
  uint64_t v16 = v49;
  uint64_t v17 = v47;
  uint64_t v18 = v50;
  LODWORD(v56) = v11;
  *(void *)&long long v57 = v52;
  *((void *)&v57 + 1) = v51;
  uint64_t v58 = v54;
  uint64_t v59 = v53;
  char v63 = 1;
  sub_1FC530();
  *(void *)&long long v57 = v18;
  *((void *)&v57 + 1) = v16;
  uint64_t v58 = v15;
  uint64_t v59 = v46;
  uint64_t v60 = v17;
  uint64_t v61 = v45;
  char v63 = 2;
  sub_8CE90();
  sub_1FC530();
  LOBYTE(v57) = 3;
  sub_1FC500();
  LOBYTE(v57) = 4;
  sub_1FC500();
  LOBYTE(v57) = 5;
  sub_1FC500();
  LOBYTE(v57) = 6;
  sub_1FC500();
  LOBYTE(v57) = 7;
  sub_1FC500();
  LOBYTE(v57) = 8;
  sub_1FC500();
  LOBYTE(v57) = 9;
  sub_1FC500();
  LOBYTE(v57) = 10;
  sub_1FC500();
  LOBYTE(v57) = 11;
  sub_1FC500();
  LOBYTE(v57) = 12;
  sub_1FC500();
  LOBYTE(v57) = 13;
  sub_1FC500();
  LOBYTE(v57) = 14;
  sub_1FC500();
  LOBYTE(v57) = 15;
  sub_1FC500();
  LOBYTE(v57) = 16;
  sub_1FC500();
  LOBYTE(v57) = 17;
  sub_1FC500();
  LOBYTE(v57) = 18;
  sub_1FC500();
  LOBYTE(v57) = 19;
  sub_1FC500();
  LOBYTE(v57) = 20;
  sub_1FC500();
  LOBYTE(v57) = 21;
  sub_1FC500();
  LOBYTE(v57) = 22;
  sub_1FC500();
  LOBYTE(v57) = 23;
  sub_1FC500();
  LOBYTE(v57) = 24;
  sub_1FC520();
  LOBYTE(v57) = 25;
  sub_1FC520();
  LOBYTE(v57) = 26;
  sub_1FC520();
  LOBYTE(v57) = 27;
  sub_1FC520();
  LOBYTE(v57) = 28;
  sub_1FC500();
  LOBYTE(v57) = 29;
  sub_1FC500();
  LOBYTE(v57) = 30;
  sub_1FC520();
  LOBYTE(v57) = 31;
  sub_1FC500();
  LOBYTE(v57) = 32;
  sub_1FC500();
  LOBYTE(v57) = 33;
  sub_1FC4F0();
  LOBYTE(v57) = 34;
  sub_1FC4F0();
  LOBYTE(v57) = 35;
  sub_1FC4F0();
  *(void *)&long long v57 = v20;
  char v63 = 36;
  sub_12124(&qword_26DDB0);
  sub_8CEE4(&qword_26DDB8, &qword_26DDB0, (void (*)(void))sub_8CF50);
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v12);
}

uint64_t sub_88CA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.init(from:)(a1, a2);
}

uint64_t sub_88CB8(void *a1)
{
  return Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.encode(to:)(a1);
}

BooksPersonalization::Configuration::ScorersConfiguration::Scorer_optional __swiftcall Configuration.ScorersConfiguration.Scorer.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Configuration::ScorersConfiguration::Scorer_optional)sub_256D4(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_255E70, v1);
}

unint64_t Scorer.rawValue.getter()
{
  uint64_t v1 = 0x797469746E656469;
  if (*v0 != 1) {
    uint64_t v1 = 1768055156;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_88D34(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D9434(*a1, *a2);
}

Swift::Int sub_88D40()
{
  return sub_1FC830();
}

uint64_t sub_88DE0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_88E6C()
{
  return sub_1FC830();
}

BooksPersonalization::Configuration::ScorersConfiguration::Scorer_optional sub_88F08(Swift::String *a1)
{
  return Configuration.ScorersConfiguration.Scorer.init(rawValue:)(*a1);
}

void sub_88F14(unint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0x80000000002160A0;
  unint64_t v4 = 0xE800000000000000;
  uint64_t v5 = 0x797469746E656469;
  if (v2 != 1)
  {
    uint64_t v5 = 1768055156;
    unint64_t v4 = 0xE400000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    unint64_t v7 = v5;
  }
  else {
    unint64_t v7 = 0xD000000000000013;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_88F70()
{
  return sub_1FBA60();
}

uint64_t sub_88FD0()
{
  return sub_1FBA40();
}

Swift::Int sub_89020()
{
  return sub_1FC830();
}

uint64_t sub_8907C()
{
  return sub_1FB8C0();
}

Swift::Int sub_8909C()
{
  return sub_1FC830();
}

uint64_t sub_890F4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  unint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_255ED8;
  v7._object = v3;
  Swift::Int v5 = sub_1FC2D0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_89148(void *a1@<X8>)
{
  *a1 = 0x747369486B6F6F62;
  a1[1] = 0xEB0000000079726FLL;
}

uint64_t AuthorRecommendationSource.rawValue.getter()
{
  return 0x747369486B6F6F62;
}

uint64_t sub_8918C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_255F10;
  v8._object = a2;
  Swift::Int v6 = sub_1FC2D0(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t sub_891E4(uint64_t a1)
{
  unint64_t v2 = sub_8CFE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_89220(uint64_t a1)
{
  unint64_t v2 = sub_8CFE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Configuration.ScorersConfiguration.bookHistoryScorerConfiguration.getter@<X0>(void *a1@<X8>)
{
  memcpy(__dst, v1, 0x16BuLL);
  memcpy(a1, v1, 0x16BuLL);
  return sub_8CFA4((uint64_t)__dst);
}

uint64_t Configuration.ScorersConfiguration.init(bookHistoryScorerConfiguration:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_55844(a1, (uint64_t)v64, &qword_26DDC8);
  sub_55844((uint64_t)v64, (uint64_t)v65, &qword_26DDC8);
  if (sub_8CFD0((uint64_t)v65) == 1)
  {
    uint64_t result = sub_51558((uint64_t)&off_255E20);
    long long v5 = xmmword_202B60;
    long long v4 = xmmword_202BE0;
    long long v7 = xmmword_202B40;
    long long v6 = xmmword_202B30;
    long long v8 = xmmword_202B50;
    long long v9 = xmmword_202BD0;
    long long v11 = xmmword_202BC0;
    long long v10 = xmmword_202BB0;
    long long v13 = xmmword_202BA0;
    long long v12 = xmmword_202B90;
    long long v15 = xmmword_202B80;
    long long v14 = xmmword_202B70;
    uint64_t v16 = 1;
    uint64_t v17 = 0;
    double v18 = 1.0;
    double v19 = 1.5;
    uint64_t v20 = 1000;
    uint64_t v21 = 20;
    uint64_t v22 = 0x3FE999999999999ALL;
    uint64_t v23 = 7;
    unint64_t v24 = 0xBFB999999999999ALL;
    uint64_t v25 = 180;
    double v26 = 1.0;
    char v27 = 1;
    char v28 = 1;
    char v29 = 1;
    double v30 = 1.5;
    long long v31 = xmmword_202B40;
    long long v32 = xmmword_202BB0;
    long long v33 = xmmword_202BB0;
    long long v34 = xmmword_202B80;
  }
  else
  {
    sub_55844((uint64_t)v64, (uint64_t)v35, &qword_26DDC8);
    long long v7 = v35[0];
    long long v6 = v35[1];
    long long v31 = v35[2];
    long long v8 = v35[3];
    unint64_t v24 = v36;
    long long v5 = v37;
    uint64_t v23 = v38;
    double v19 = v39;
    uint64_t v25 = v40;
    long long v9 = v41;
    long long v11 = v42;
    long long v10 = v43;
    long long v32 = v44;
    long long v33 = v45;
    long long v13 = v46;
    long long v12 = v47;
    long long v15 = v48;
    long long v34 = v49;
    long long v14 = v50;
    uint64_t v22 = v51;
    uint64_t v21 = v52;
    long long v4 = v53;
    uint64_t v16 = v54;
    double v18 = v55;
    double v26 = v56;
    uint64_t result = v57;
    uint64_t v20 = v58;
    double v30 = v59;
    uint64_t v17 = v60;
    char v27 = v61;
    char v28 = v62;
    char v29 = v63;
  }
  *(_OWORD *)a2 = v7;
  *(_OWORD *)(a2 + 16) = v6;
  *(_OWORD *)(a2 + 32) = v31;
  *(_OWORD *)(a2 + 48) = v8;
  *(void *)(a2 + 64) = v24;
  *(_OWORD *)(a2 + 72) = v5;
  *(void *)(a2 + 88) = v23;
  *(double *)(a2 + 96) = v19;
  *(void *)(a2 + 104) = v25;
  *(_OWORD *)(a2 + 112) = v9;
  *(_OWORD *)(a2 + 128) = v11;
  *(_OWORD *)(a2 + 144) = v10;
  *(_OWORD *)(a2 + 160) = v32;
  *(_OWORD *)(a2 + 176) = v33;
  *(_OWORD *)(a2 + 192) = v13;
  *(_OWORD *)(a2 + 208) = v12;
  *(_OWORD *)(a2 + 224) = v15;
  *(_OWORD *)(a2 + 240) = v34;
  *(_OWORD *)(a2 + 256) = v14;
  *(void *)(a2 + 272) = v22;
  *(void *)(a2 + 280) = v21;
  *(_OWORD *)(a2 + 288) = v4;
  *(void *)(a2 + 304) = v16;
  *(double *)(a2 + 312) = v18;
  *(double *)(a2 + 320) = v26;
  *(void *)(a2 + 328) = result;
  *(void *)(a2 + 336) = v20;
  *(double *)(a2 + 344) = v30;
  *(void *)(a2 + 352) = v17;
  *(unsigned char *)(a2 + 360) = v27;
  *(unsigned char *)(a2 + 361) = v28;
  *(unsigned char *)(a2 + 362) = v29;
  return result;
}

uint64_t Configuration.ScorersConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v123 = a2;
  uint64_t v4 = sub_12124(&qword_26DDD0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v80 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_8CFE8();
  sub_1FC850();
  if (v2)
  {
    uint64_t v9 = (uint64_t)a1;
  }
  else
  {
    uint64_t v8 = v123;
    sub_8D03C();
    sub_1FC360();
    sub_55844((uint64_t)&v122, (uint64_t)v120, &qword_26DDC8);
    sub_55844((uint64_t)v120, (uint64_t)v121, &qword_26DDC8);
    int v11 = sub_8CFD0((uint64_t)v121);
    char v112 = a1;
    uint64_t v12 = v8;
    if (v11 == 1)
    {
      uint64_t v13 = sub_51558((uint64_t)&off_255E20);
      uint64_t v14 = 1;
      uint64_t v15 = 0;
      uint64_t v16 = 1000;
      uint64_t v17 = 500;
      double v18 = 1.5;
      uint64_t v19 = 20;
      double v20 = 0.5;
      uint64_t v21 = 0x3FD3333333333333;
      double v22 = 1.0;
      uint64_t v23 = 10;
      uint64_t v24 = 0x3FE999999999999ALL;
      uint64_t v25 = 7;
      uint64_t v26 = 180;
      unint64_t v27 = 0xBFB999999999999ALL;
      uint64_t v28 = 0x3FECCCCCCCCCCCCDLL;
      uint64_t v29 = 0x4187BB0000000000;
      unint64_t v30 = 0xBFECCCCCCCCCCCCDLL;
      uint64_t v31 = 0x41A2CC0300000000;
      uint64_t v32 = 0x4132750000000000;
      uint64_t v33 = 0x4196A38200000000;
      uint64_t v34 = 0x3FD999999999999ALL;
      uint64_t v35 = 0x4153C68000000000;
      uint64_t v36 = 0x3FB999999999999ALL;
      uint64_t v37 = 0x4143C68000000000;
      uint64_t v38 = 0x4153C68000000000;
      uint64_t v39 = 0x3FD999999999999ALL;
      uint64_t v40 = 0x4187BB0000000000;
      double v41 = 0.5;
      uint64_t v42 = 0x4187BB0000000000;
      double v43 = 0.5;
      uint64_t v44 = 0x4153C68000000000;
      uint64_t v45 = 0x4153C68000000000;
      uint64_t v46 = 0x4153C68000000000;
      uint64_t v47 = 0x3FB999999999999ALL;
      uint64_t v48 = 0x3FECCCCCCCCCCCCDLL;
      uint64_t v49 = 0x4187BB0000000000;
      uint64_t v50 = 0x3FB999999999999ALL;
      uint64_t v51 = 10;
      uint64_t v52 = 1;
      double v114 = 1.0;
      double v115 = 1.0;
      int v53 = 1;
      int v54 = 1;
      int v55 = 1;
      uint64_t v56 = 0x3FECCCCCCCCCCCCDLL;
      double v113 = 1.5;
      uint64_t v57 = 0x3FD3333333333333;
    }
    else
    {
      sub_55844((uint64_t)v120, (uint64_t)v116, &qword_26DDC8);
      uint64_t v57 = v116[0];
      uint64_t v56 = v116[1];
      uint64_t v50 = v116[2];
      uint64_t v49 = v116[3];
      uint64_t v21 = v116[4];
      uint64_t v48 = v116[5];
      uint64_t v47 = v116[6];
      uint64_t v46 = v116[7];
      unint64_t v27 = v116[8];
      uint64_t v23 = v116[9];
      uint64_t v14 = v116[10];
      uint64_t v25 = v116[11];
      double v18 = *(double *)&v116[12];
      uint64_t v26 = v116[13];
      uint64_t v28 = v116[14];
      uint64_t v45 = v116[15];
      unint64_t v30 = v116[16];
      uint64_t v44 = v116[17];
      double v43 = *(double *)&v116[18];
      uint64_t v42 = v116[19];
      double v41 = *(double *)&v116[20];
      uint64_t v40 = v116[21];
      double v20 = *(double *)&v116[22];
      uint64_t v29 = v116[23];
      uint64_t v31 = v116[24];
      uint64_t v32 = v116[25];
      double v22 = *(double *)&v116[26];
      uint64_t v33 = v116[27];
      uint64_t v39 = v116[28];
      uint64_t v38 = v116[29];
      uint64_t v34 = v116[30];
      uint64_t v35 = v116[31];
      uint64_t v36 = v116[32];
      uint64_t v37 = v116[33];
      uint64_t v24 = v116[34];
      uint64_t v19 = v116[35];
      uint64_t v51 = v116[36];
      uint64_t v17 = v116[37];
      uint64_t v52 = v116[38];
      uint64_t v13 = v116[41];
      uint64_t v16 = v116[42];
      int v53 = v117;
      int v54 = v118;
      int v55 = v119;
      double v115 = *(double *)&v116[39];
      double v114 = *(double *)&v116[40];
      double v113 = *(double *)&v116[43];
      uint64_t v15 = v116[44];
    }
    uint64_t v80 = v47;
    double v81 = v43;
    uint64_t v82 = v42;
    uint64_t v83 = v50;
    double v84 = v41;
    uint64_t v85 = v40;
    uint64_t v86 = v28;
    unint64_t v87 = v30;
    uint64_t v88 = v45;
    double v89 = v18;
    uint64_t v90 = v29;
    uint64_t v91 = v31;
    uint64_t v92 = v32;
    uint64_t v93 = v39;
    double v94 = v20;
    uint64_t v95 = v38;
    uint64_t v96 = v33;
    uint64_t v97 = v34;
    double v98 = v22;
    uint64_t v99 = v35;
    uint64_t v100 = v36;
    uint64_t v101 = v37;
    uint64_t v102 = v24;
    int v103 = v53;
    int v104 = v54;
    uint64_t v105 = v19;
    uint64_t v106 = v17;
    uint64_t v107 = v51;
    uint64_t v108 = v16;
    uint64_t v109 = v15;
    uint64_t v110 = v13;
    int v111 = v55;
    uint64_t v58 = *(void (**)(char *, uint64_t))(v5 + 8);
    double v59 = v7;
    uint64_t v60 = v4;
    uint64_t v61 = v14;
    uint64_t v62 = v21;
    uint64_t v63 = v23;
    unint64_t v64 = v27;
    uint64_t v65 = v44;
    uint64_t v66 = v52;
    v58(v59, v60);
    *(void *)uint64_t v12 = v57;
    *(void *)(v12 + 8) = v56;
    *(void *)(v12 + 16) = v83;
    *(void *)(v12 + 24) = v49;
    *(void *)(v12 + 32) = v62;
    *(void *)(v12 + 40) = v48;
    *(void *)(v12 + 48) = v80;
    *(void *)(v12 + 56) = v46;
    *(void *)(v12 + 64) = v64;
    *(void *)(v12 + 72) = v63;
    *(void *)(v12 + 80) = v61;
    *(void *)(v12 + 88) = v25;
    *(double *)(v12 + 96) = v89;
    *(void *)(v12 + 104) = v26;
    uint64_t v67 = v88;
    *(void *)(v12 + 112) = v86;
    *(void *)(v12 + 120) = v67;
    *(void *)(v12 + 128) = v87;
    *(void *)(v12 + 136) = v65;
    uint64_t v68 = v82;
    *(double *)(v12 + 144) = v81;
    *(void *)(v12 + 152) = v68;
    uint64_t v69 = v85;
    *(double *)(v12 + 160) = v84;
    *(void *)(v12 + 168) = v69;
    uint64_t v70 = v90;
    *(double *)(v12 + 176) = v94;
    *(void *)(v12 + 184) = v70;
    uint64_t v71 = v92;
    *(void *)(v12 + 192) = v91;
    *(void *)(v12 + 200) = v71;
    uint64_t v72 = v96;
    *(double *)(v12 + 208) = v98;
    *(void *)(v12 + 216) = v72;
    uint64_t v73 = v95;
    *(void *)(v12 + 224) = v93;
    *(void *)(v12 + 232) = v73;
    uint64_t v74 = v99;
    *(void *)(v12 + 240) = v97;
    *(void *)(v12 + 248) = v74;
    uint64_t v75 = v101;
    *(void *)(v12 + 256) = v100;
    *(void *)(v12 + 264) = v75;
    *(void *)(v12 + 272) = v102;
    uint64_t v76 = v107;
    *(void *)(v12 + 280) = v105;
    *(void *)(v12 + 288) = v76;
    *(void *)(v12 + 296) = v106;
    *(void *)(v12 + 304) = v66;
    double v77 = v114;
    *(double *)(v12 + 312) = v115;
    *(double *)(v12 + 320) = v77;
    uint64_t v78 = v108;
    *(void *)(v12 + 328) = v110;
    *(void *)(v12 + 336) = v78;
    uint64_t v79 = v109;
    *(double *)(v12 + 344) = v113;
    *(void *)(v12 + 352) = v79;
    *(unsigned char *)(v12 + 360) = v103;
    *(unsigned char *)(v12 + 361) = v104;
    *(unsigned char *)(v12 + 362) = v111;
    uint64_t v9 = (uint64_t)v112;
  }
  return sub_1264C(v9);
}

uint64_t Configuration.ScorersConfiguration.encode(to:)(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_12124(&qword_26DDE8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  sub_5D64(a1, a1[3]);
  sub_8CFE8();
  sub_1FC870();
  memcpy(v10, v2, sizeof(v10));
  sub_8D090();
  sub_1FC530();
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_89B60(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x697463656C6C6F63;
      break;
    case 3:
      unint64_t result = 0x737265726F6373;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
    case 8:
      unint64_t result = 0x707954616964656DLL;
      break;
    case 9:
      unint64_t result = 0x6B6F6F6265;
      break;
    case 10:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 11:
      unint64_t result = 0x756C43736B6F6F62;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_89CF8(char a1)
{
  unint64_t result = 0xD000000000000013;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
      unint64_t result = 0x697463656C6C6F63;
      break;
    case 3:
      unint64_t result = 0x737265726F6373;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
    case 8:
      unint64_t result = 0x707954616964656DLL;
      break;
    case 9:
      unint64_t result = 0x6B6F6F6265;
      break;
    case 10:
      unint64_t result = 0x6F6F626F69647561;
      break;
    case 11:
      unint64_t result = 0x756C43736B6F6F62;
      break;
    case 12:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 13:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_89E90@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Configuration.ScorersConfiguration.init(from:)(a1, a2);
}

uint64_t sub_89EA8(void *a1)
{
  return Configuration.ScorersConfiguration.encode(to:)(a1);
}

uint64_t sub_89EC0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4)
{
  return sub_89ED8(a1, a2, a3, a4, (uint64_t (*)(uint64_t))sub_89B60);
}

uint64_t sub_89ED8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(uint64_t))
{
  uint64_t v6 = *a2;
  uint64_t v7 = a5(*a1);
  uint64_t v9 = v8;
  if (v7 == a5(v6) && v9 == v10) {
    char v12 = 1;
  }
  else {
    char v12 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v12 & 1;
}

Swift::Int sub_89F70(uint64_t a1, uint64_t a2)
{
  return sub_89F88(a1, a2, (void (*)(uint64_t))sub_89B60);
}

Swift::Int sub_89F88(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  uint64_t v5 = *v3;
  sub_1FC7E0();
  a3(v5);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_89FF4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8A00C(a1, a2, a3, (void (*)(void))sub_89B60);
}

uint64_t sub_8A00C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4(*v4);
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_8A064(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_8A07C(a1, a2, a3, (void (*)(uint64_t))sub_89B60);
}

Swift::Int sub_8A07C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v6 = *v4;
  sub_1FC7E0();
  a4(v6);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_8A0E4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  v3._rawValue = &off_255F48;
  uint64_t result = sub_937A8(*(void *)a1, *(void **)(a1 + 8), v3);
  *a2 = result;
  return result;
}

unint64_t sub_8A11C@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_89B60(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_8A148()
{
  return sub_89CF8(*v0);
}

uint64_t sub_8A150@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  v4._rawValue = &off_255F48;
  uint64_t result = sub_937A8(a1, a2, v4);
  *a3 = result;
  return result;
}

uint64_t sub_8A180(uint64_t a1)
{
  unint64_t v2 = sub_8D400();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_8A1BC(uint64_t a1)
{
  unint64_t v2 = sub_8D400();

  return CodingKey.debugDescription.getter(a1, v2);
}

BooksPersonalization::Configuration::MediaTypeMethod_optional __swiftcall Configuration.MediaTypeMethod.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  Swift::OpaquePointer v3 = v1;
  v4._rawValue = &off_2560B8;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *Swift::OpaquePointer v3 = v7;
  return result;
}

uint64_t Configuration.MediaTypeMethod.rawValue.getter()
{
  uint64_t result = 0x6F4A656C676E6973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E696F4A6C6C61;
      break;
    case 2:
      uint64_t result = 0x6F6A7369446C6C61;
      break;
    case 3:
      uint64_t result = 0x7473657265746E69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_8A2F4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1DA160(*a1, *a2);
}

Swift::Int sub_8A300()
{
  return sub_1FC830();
}

uint64_t sub_8A3EC()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_8A4C0()
{
  return sub_1FC830();
}

BooksPersonalization::Configuration::MediaTypeMethod_optional sub_8A5A8(Swift::String *a1)
{
  return Configuration.MediaTypeMethod.init(rawValue:)(*a1);
}

void sub_8A5B4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000746E69;
  uint64_t v3 = 0x6F4A656C676E6973;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x746E696F4A6C6C61;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6F6A7369446C6C61;
      *(void *)(a1 + 8) = 0xEB00000000746E69;
      break;
    case 3:
      strcpy((char *)a1, "interestBased");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

uint64_t sub_8A660()
{
  return sub_1FBA60();
}

uint64_t sub_8A6C0()
{
  return sub_1FBA40();
}

double Configuration.genreRecommendationConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  __int16 v2 = *(_WORD *)(v1 + 8);
  double result = *(double *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(_WORD *)(a1 + 8) = v2;
  *(double *)(a1 + 16) = result;
  *(unsigned char *)(a1 + 24) = v4;
  return result;
}

void Configuration.seedBasedRecommendationConfiguration.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 25);
}

uint64_t Configuration.collectionsConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 40);
  __int16 v3 = *(_WORD *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 56);
  __int16 v5 = *(_WORD *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v6 = *(void *)(v1 + 80);
  *(void *)a1 = *(void *)(v1 + 32);
  *(unsigned char *)(a1 + 8) = v2;
  *(_WORD *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(_WORD *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v6;
  return swift_bridgeObjectRetain();
}

uint64_t Configuration.scorersConfiguration.getter@<X0>(void *a1@<X8>)
{
  __int16 v3 = (const void *)(v1 + 88);
  memcpy(v5, v3, 0x16BuLL);
  memcpy(a1, v3, 0x16BuLL);
  return sub_8CFA4((uint64_t)v5);
}

uint64_t Configuration.profileGenreDenylistForGenres.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Configuration.profileGenreDenylistForBooks.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Configuration.indefiniteAuthorIDs.getter()
{
  return swift_bridgeObjectRetain();
}

void Configuration.mediaTypeMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 480);
}

uint64_t Configuration.mediaTypesRecommendationServiceConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 504);
  uint64_t v3 = *(void *)(v1 + 512);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 488);
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Configuration.booksClusteringServiceConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 528);
  uint64_t v3 = *(void *)(v1 + 536);
  uint64_t v4 = *(void *)(v1 + 544);
  uint64_t v5 = *(void *)(v1 + 552);
  char v6 = *(unsigned char *)(v1 + 560);
  uint64_t v7 = *(void *)(v1 + 568);
  uint64_t v8 = *(void *)(v1 + 576);
  uint64_t v9 = *(void *)(v1 + 584);
  uint64_t v10 = *(void *)(v1 + 592);
  uint64_t v11 = *(void *)(v1 + 600);
  uint64_t v12 = *(void *)(v1 + 608);
  uint64_t v13 = *(void *)(v1 + 616);
  char v14 = *(unsigned char *)(v1 + 624);
  *(void *)a1 = *(void *)(v1 + 520);
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  *(unsigned char *)(a1 + 104) = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t Configuration.ebookConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 640);
  char v3 = *(unsigned char *)(v1 + 641);
  *(void *)a1 = *(void *)(v1 + 632);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_bridgeObjectRetain();
}

uint64_t Configuration.audiobookConfiguration.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 656);
  char v3 = *(unsigned char *)(v1 + 657);
  *(void *)a1 = *(void *)(v1 + 648);
  *(unsigned char *)(a1 + 8) = v2;
  *(unsigned char *)(a1 + 9) = v3;
  return swift_bridgeObjectRetain();
}

double Configuration.personalizationMetadataServiceConfiguration.getter@<D0>(uint64_t a1@<X8>)
{
  double result = *(double *)(v1 + 672);
  uint64_t v3 = *(void *)(v1 + 680);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 664);
  *(double *)(a1 + 8) = result;
  *(void *)(a1 + 16) = v3;
  return result;
}

uint64_t Configuration.tabiConfiguration.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (const void *)(v1 + 688);
  memcpy(v5, v3, sizeof(v5));
  memcpy(a1, v3, 0x1B0uLL);
  return sub_8D0E4((uint64_t)v5);
}

void *Configuration.init(genreRecommendationConfiguration:seedBasedRecommendationConfiguration:collectionsConfiguration:scorersConfiguration:profileGenreDenylistForGenres:profileGenreDenylistForBooks:indefiniteAuthorIDs:mediaTypeMethod:mediaTypesRecommendationServiceConfiguration:booksClusteringServiceConfiguration:ebookConfiguration:audiobookConfiguration:personalizationMetadataServiceConfiguration:tabiConfiguration:)@<X0>(uint64_t a1@<X0>, unsigned __int8 *a2@<X1>, unint64_t *a3@<X2>, uint64_t a4@<X3>, _UNKNOWN **a5@<X4>, _UNKNOWN **a6@<X5>, _UNKNOWN **a7@<X6>, unsigned __int8 *a8@<X7>, uint64_t a9@<X8>, uint64_t *a10, uint64_t a11, uint64_t a12, uint64_t a13, double *a14, uint64_t a15)
{
  unint64_t v17 = *(void *)(a1 + 8);
  uint64_t v161 = *(void *)a1;
  uint64_t v18 = *(void *)(a1 + 16);
  int v19 = *(unsigned __int8 *)(a1 + 24);
  int v139 = *a2;
  unint64_t v167 = *a3;
  unint64_t v166 = a3[1];
  unint64_t v165 = a3[2];
  unint64_t v164 = a3[3];
  unint64_t v163 = a3[4];
  unint64_t v162 = a3[5];
  unint64_t v168 = a3[6];
  sub_55844(a4, (uint64_t)v236, &qword_26DDF8);
  int v136 = *a8;
  uint64_t v159 = *a10;
  uint64_t v160 = a10[1];
  uint64_t v20 = a10[2];
  unint64_t v21 = a10[3];
  uint64_t v154 = *(void *)a11;
  double v22 = *(double *)(a11 + 8);
  uint64_t v153 = *(void *)(a11 + 16);
  int v169 = *(void **)(a11 + 24);
  v156 = *(_UNKNOWN ***)(a11 + 32);
  unint64_t v23 = *(void *)(a11 + 48);
  uint64_t v143 = *(void *)(a11 + 40);
  unint64_t v158 = *(void *)(a11 + 56);
  unint64_t v157 = *(void *)(a11 + 64);
  long long v155 = *(_UNKNOWN ***)(a11 + 72);
  double v152 = *(_UNKNOWN ***)(a11 + 80);
  uint64_t v24 = *(void *)(a11 + 88);
  uint64_t v151 = *(void *)(a11 + 96);
  char v78 = *(unsigned char *)(a11 + 104);
  uint64_t v25 = *(void *)a12;
  unsigned int v145 = *(unsigned __int16 *)(a12 + 8);
  uint64_t v26 = *(void *)a13;
  unsigned int v147 = *(unsigned __int16 *)(a13 + 8);
  uint64_t v27 = *(unsigned __int8 *)a14;
  double v135 = a14[1];
  uint64_t v133 = *((void *)a14 + 2);
  sub_55844(a15, (uint64_t)v237, &qword_26DE00);
  if (v19 == 2)
  {
    char v138 = 0;
    LOBYTE(v17) = 1;
    uint64_t v18 = 0x3FE6666666666666;
    uint64_t v161 = 1000;
    LOBYTE(v137) = 1;
  }
  else
  {
    unint64_t v137 = v17 >> 8;
    char v138 = v19 & 1;
  }
  char v142 = v17;
  if (v168)
  {
    unint64_t v229 = v167;
    unint64_t v132 = v167 >> 8;
    unint64_t v131 = v167 >> 16;
    unint64_t v130 = v167 >> 24;
    unint64_t v129 = HIDWORD(v167);
    unint64_t v128 = v167 >> 40;
    unint64_t v127 = HIWORD(v167);
    unint64_t v126 = HIBYTE(v167);
    char v230 = v166;
    __int16 v231 = v165;
    unint64_t v125 = v165 >> 8;
    unint64_t v232 = v164;
    __int16 v233 = v163;
    unint64_t v124 = v163 >> 8;
    unint64_t v234 = v162;
    unint64_t v235 = v168;
  }
  else
  {
    LOWORD(__src[0]) = 768;
    v177[0] = 3;
    v228[0] = 768;
    v180[0] = 768;
    *(_WORD *)uint64_t v179 = 768;
    long long v181 = xmmword_202BF0;
    v178[0] = 768;
    __dst[1] = 0;
    __dst[0] = 0;
    Configuration.CollectionsConfiguration.init(booksBySuggestedAuthorsConfiguration:booksConfiguration:booksYouMightLikeConfiguration:forYouConfiguration:mangaYouMightLikeConfiguration:moreFromYourAuthorsConfiguration:suggestionsConfiguration:postHydrationFilteringConfiguration:)((unsigned __int16 *)__src, v177, v228, v180, (__int16 *)v179, (uint64_t *)&v181, v178, __dst, (uint64_t)&v229);
    LOBYTE(v167) = v229;
    LOBYTE(v132) = BYTE1(v229);
    LOBYTE(v131) = BYTE2(v229);
    LOBYTE(v130) = BYTE3(v229);
    LOBYTE(v129) = BYTE4(v229);
    LOBYTE(v128) = BYTE5(v229);
    LOBYTE(v127) = BYTE6(v229);
    LOBYTE(v126) = HIBYTE(v229);
    LOBYTE(v166) = v230;
    LOBYTE(v165) = v231;
    LOBYTE(v125) = HIBYTE(v231);
    unint64_t v164 = v232;
    LOBYTE(v163) = v233;
    LOBYTE(v124) = HIBYTE(v233);
    unint64_t v162 = v234;
    unint64_t v168 = v235;
  }
  uint64_t v141 = v18;
  sub_55844((uint64_t)v236, (uint64_t)v228, &qword_26DDF8);
  if (sub_8CFD0((uint64_t)v228) == 1)
  {
    uint64_t v111 = 1;
    uint64_t v112 = 0;
    uint64_t v95 = 1000;
    uint64_t v97 = 500;
    double v121 = 1.0;
    uint64_t v98 = 20;
    uint64_t v99 = sub_51558((uint64_t)&off_255E20);
    double v122 = 0.5;
    uint64_t v120 = 0x4143C68000000000;
    double v123 = 1.5;
    uint64_t v115 = 0x3FE999999999999ALL;
    uint64_t v119 = 0x4196A38200000000;
    uint64_t v118 = 0x4132750000000000;
    uint64_t v113 = 0x41A2CC0300000000;
    unint64_t v114 = 0xBFECCCCCCCCCCCCDLL;
    uint64_t v100 = 180;
    uint64_t v101 = 7;
    uint64_t v103 = 10;
    unint64_t v117 = 0xBFB999999999999ALL;
    uint64_t v28 = 0x4153C68000000000;
    uint64_t v29 = 0x4187BB0000000000;
    uint64_t v30 = 0x3FB999999999999ALL;
    uint64_t v31 = 0x3FECCCCCCCCCCCCDLL;
    uint64_t v93 = 0x3FD3333333333333;
    uint64_t v94 = 0x3FD999999999999ALL;
    uint64_t v89 = 0x3FECCCCCCCCCCCCDLL;
    uint64_t v90 = 0x3FD3333333333333;
    uint64_t v109 = 0x4153C68000000000;
    uint64_t v110 = 0x3FECCCCCCCCCCCCDLL;
    uint64_t v107 = 0x4187BB0000000000;
    uint64_t v108 = 0x4153C68000000000;
    uint64_t v105 = 0x4187BB0000000000;
    double v106 = 0.5;
    double v104 = 0.5;
    uint64_t v102 = 0x4187BB0000000000;
    uint64_t v96 = 0x4153C68000000000;
    uint64_t v116 = 0x3FD999999999999ALL;
    uint64_t v83 = 10;
    uint64_t v82 = 1;
    double v87 = 1.0;
    uint64_t v88 = 0x3FB999999999999ALL;
    double v86 = 1.0;
    char v80 = 1;
    char v81 = 1;
    char v85 = 1;
    uint64_t v91 = 0x3FB999999999999ALL;
    uint64_t v92 = 0x4153C68000000000;
    double v84 = 1.5;
  }
  else
  {
    sub_55844((uint64_t)v236, (uint64_t)&v181, &qword_26DDF8);
    uint64_t v31 = *((void *)&v181 + 1);
    uint64_t v93 = v181;
    uint64_t v30 = v182;
    uint64_t v29 = v183;
    uint64_t v89 = v185;
    uint64_t v90 = v184;
    uint64_t v88 = v186;
    uint64_t v28 = v187;
    unint64_t v117 = v188;
    uint64_t v103 = v189;
    uint64_t v111 = v190;
    double v123 = v192;
    uint64_t v100 = v193;
    uint64_t v101 = v191;
    uint64_t v109 = v195;
    uint64_t v110 = v194;
    double v122 = v198;
    uint64_t v107 = v199;
    uint64_t v108 = v197;
    uint64_t v105 = v201;
    double v106 = v200;
    double v104 = v202;
    uint64_t v102 = v203;
    uint64_t v113 = v204;
    unint64_t v114 = v196;
    uint64_t v118 = v205;
    double v121 = v206;
    uint64_t v119 = v207;
    uint64_t v96 = v209;
    uint64_t v94 = v210;
    uint64_t v91 = v212;
    uint64_t v92 = v211;
    uint64_t v120 = v213;
    uint64_t v115 = v214;
    uint64_t v116 = v208;
    uint64_t v97 = v217;
    uint64_t v98 = v215;
    uint64_t v82 = v218;
    uint64_t v83 = v216;
    uint64_t v99 = v221;
    uint64_t v95 = v222;
    char v80 = v226;
    char v81 = v225;
    char v85 = v227;
    double v86 = v220;
    double v87 = v219;
    double v84 = v223;
    uint64_t v112 = v224;
  }
  if (a5) {
    uint64_t v32 = a5;
  }
  else {
    uint64_t v32 = &off_256138;
  }
  if (a6)
  {
    if (v21) {
      goto LABEL_15;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    a6 = v32;
    if (v21)
    {
LABEL_15:
      if (v169) {
        goto LABEL_16;
      }
      goto LABEL_21;
    }
  }
  unint64_t v21 = sub_16B8F8((uint64_t)&off_255648);
  uint64_t v160 = 2;
  uint64_t v20 = 0x3FE999999999999ALL;
  uint64_t v159 = 2;
  if (v169)
  {
LABEL_16:
    LOBYTE(v77) = v143 & 1;
    BYTE4(v77) = v78 & 1;
    if (v25) {
      goto LABEL_17;
    }
LABEL_22:
    if (qword_26C2F8 != -1) {
      swift_once();
    }
    uint64_t v25 = qword_2A5BA0;
    LOBYTE(v75) = HIBYTE(word_2A5BA8);
    char v76 = word_2A5BA8;
    swift_bridgeObjectRetain();
    if (v26) {
      goto LABEL_18;
    }
    goto LABEL_25;
  }
LABEL_21:
  unint64_t v23 = sub_1610F4((uint64_t)&off_255928);
  unint64_t v158 = sub_1610F4((uint64_t)&off_255958);
  unint64_t v157 = sub_161114((uint64_t)&off_2559A8);
  uint64_t v77 = 0;
  int v169 = _swiftEmptyArrayStorage;
  double v22 = 2.0;
  v156 = &off_2558F8;
  long long v155 = &off_2559E8;
  uint64_t v154 = 5;
  uint64_t v153 = 3;
  uint64_t v24 = 0x3FECCCCCCCCCCCCDLL;
  uint64_t v151 = 10;
  double v152 = &off_255A10;
  if (!v25) {
    goto LABEL_22;
  }
LABEL_17:
  int v75 = (v145 >> 8) & 1;
  char v76 = v145 & 1;
  if (v26)
  {
LABEL_18:
    int v73 = (v147 >> 8) & 1;
    char v74 = v147 & 1;
    goto LABEL_28;
  }
LABEL_25:
  if (qword_26C300 != -1) {
    swift_once();
  }
  uint64_t v26 = qword_2A5BB0;
  LOBYTE(v73) = HIBYTE(word_2A5BB8);
  char v74 = word_2A5BB8;
  swift_bridgeObjectRetain();
LABEL_28:
  uint64_t v79 = v32;
  double v33 = v22;
  uint64_t v144 = v25;
  uint64_t v146 = v26;
  unint64_t v148 = v23;
  unint64_t v150 = v21;
  sub_55844((uint64_t)v237, (uint64_t)&v181, &qword_26DE00);
  uint64_t v34 = v20;
  if (sub_35274((uint64_t)&v181) == 1)
  {
    sub_8D3DC((uint64_t)__dst);
    sub_55844((uint64_t)__dst, (uint64_t)v180, &qword_26DE08);
    unint64_t v35 = 0;
    unint64_t v52 = 0;
    unint64_t v53 = 0;
    unint64_t v50 = 0;
    unint64_t v51 = 0;
    unint64_t v49 = 0;
    unint64_t v36 = 0;
    unint64_t v58 = 0;
    unint64_t v59 = 0;
    unint64_t v56 = 0;
    unint64_t v57 = 0;
    unint64_t v54 = 0;
    unint64_t v55 = 0;
    unint64_t v62 = 0;
    unint64_t v63 = 0;
    unint64_t v60 = 0;
    unint64_t v61 = 0;
    unint64_t v71 = 0;
    unint64_t v72 = 0;
    unint64_t v69 = 0;
    unint64_t v70 = 0;
    unint64_t v67 = 0;
    unint64_t v68 = 0;
    unint64_t v64 = 0;
    unint64_t v65 = 0;
    unint64_t v66 = 0;
    unint64_t v37 = 0x80000000002176B0;
    uint64_t v38 = _swiftEmptyArrayStorage;
    unint64_t v39 = 0xD000000000000023;
    unint64_t v40 = 0xEB00000000444549;
    unint64_t v41 = 0x4649434550534E55;
  }
  else
  {
    sub_55844((uint64_t)v237, (uint64_t)__dst, &qword_26DE00);
    unint64_t v71 = __dst[46];
    unint64_t v72 = __dst[45];
    unint64_t v69 = __dst[48];
    unint64_t v70 = __dst[47];
    unint64_t v67 = __dst[50];
    unint64_t v68 = __dst[49];
    unint64_t v64 = __dst[52];
    unint64_t v65 = __dst[51];
    unint64_t v66 = __dst[53];
    unint64_t v62 = __dst[42];
    unint64_t v63 = __dst[41];
    unint64_t v60 = __dst[44];
    unint64_t v61 = __dst[43];
    unint64_t v58 = __dst[36];
    unint64_t v59 = __dst[35];
    unint64_t v56 = __dst[38];
    unint64_t v57 = __dst[37];
    unint64_t v54 = __dst[40];
    unint64_t v55 = __dst[39];
    unint64_t v52 = __dst[30];
    unint64_t v53 = __dst[29];
    unint64_t v50 = __dst[32];
    unint64_t v51 = __dst[31];
    unint64_t v49 = __dst[33];
    unint64_t v36 = __dst[34];
    unint64_t v35 = __dst[5];
    uint64_t v38 = (void *)__dst[4];
    unint64_t v39 = __dst[2];
    unint64_t v37 = __dst[3];
    unint64_t v41 = __dst[0];
    unint64_t v40 = __dst[1];
    sub_55844((uint64_t)&__dst[6], (uint64_t)v180, &qword_26DE08);
  }
  uint64_t v42 = 500;
  if (v27 != 2) {
    uint64_t v42 = v133;
  }
  uint64_t v134 = v42;
  if (v27 == 2) {
    double v43 = 86400.0;
  }
  else {
    double v43 = v135;
  }
  if (v136 == 4) {
    char v44 = 1;
  }
  else {
    char v44 = v136;
  }
  __src[0] = v41;
  __src[1] = v40;
  if (a7) {
    uint64_t v45 = a7;
  }
  else {
    uint64_t v45 = &off_256458;
  }
  char v46 = v27;
  if (v139 == 3) {
    char v47 = 0;
  }
  else {
    char v47 = v139;
  }
  __src[2] = v39;
  __src[3] = v37;
  __src[4] = v38;
  __src[5] = v35;
  sub_55844((uint64_t)v180, (uint64_t)&__src[6], &qword_26DE08);
  __src[29] = v53;
  __src[30] = v52;
  __src[31] = v51;
  __src[32] = v50;
  __src[33] = v49;
  __src[34] = v36;
  __src[35] = v59;
  __src[36] = v58;
  __src[37] = v57;
  __src[38] = v56;
  __src[39] = v55;
  __src[40] = v54;
  __src[41] = v63;
  __src[42] = v62;
  __src[43] = v61;
  __src[44] = v60;
  __src[45] = v72;
  __src[46] = v71;
  __src[47] = v70;
  __src[48] = v69;
  __src[49] = v68;
  __src[50] = v67;
  __src[51] = v65;
  __src[52] = v64;
  __src[53] = v66;
  memcpy(__dst, __src, sizeof(__dst));
  *(void *)(a9 + 16) = v141;
  *(void *)(a9 + 88) = v93;
  *(void *)(a9 + 96) = v31;
  *(void *)(a9 + 104) = v30;
  *(void *)(a9 + 112) = v29;
  *(void *)(a9 + 120) = v90;
  *(void *)(a9 + 128) = v89;
  *(void *)(a9 + 136) = v88;
  *(void *)a9 = v161;
  *(unsigned char *)(a9 + 8) = v142;
  *(unsigned char *)(a9 + 9) = v137;
  *(unsigned char *)(a9 + 24) = v138;
  *(unsigned char *)(a9 + 25) = v47;
  *(unsigned char *)(a9 + 32) = v167;
  *(unsigned char *)(a9 + 33) = v132;
  *(unsigned char *)(a9 + 34) = v131;
  *(unsigned char *)(a9 + 35) = v130;
  *(unsigned char *)(a9 + 36) = v129;
  *(unsigned char *)(a9 + 37) = v128;
  *(unsigned char *)(a9 + 38) = v127;
  *(unsigned char *)(a9 + 39) = v126;
  *(unsigned char *)(a9 + 40) = v166;
  *(unsigned char *)(a9 + 48) = v165;
  *(unsigned char *)(a9 + 49) = v125;
  *(void *)(a9 + 56) = v164;
  *(unsigned char *)(a9 + 64) = v163;
  *(unsigned char *)(a9 + 65) = v124;
  *(void *)(a9 + 72) = v162;
  *(void *)(a9 + 80) = v168;
  *(void *)(a9 + 160) = v103;
  *(void *)(a9 + 168) = v111;
  *(void *)(a9 + 176) = v101;
  *(void *)(a9 + 192) = v100;
  *(void *)(a9 + 368) = v98;
  *(void *)(a9 + 376) = v83;
  *(void *)(a9 + 384) = v97;
  *(void *)(a9 + 392) = v82;
  *(void *)(a9 + 416) = v99;
  *(void *)(a9 + 424) = v95;
  *(unsigned char *)(a9 + 448) = v81;
  *(unsigned char *)(a9 + 449) = v80;
  *(_DWORD *)(a9 + 451) = *(_DWORD *)&v179[7];
  *(void *)(a9 + 144) = v28;
  *(void *)(a9 + 152) = v117;
  *(double *)(a9 + 184) = v123;
  *(void *)(a9 + 200) = v110;
  *(void *)(a9 + 208) = v109;
  *(void *)(a9 + 216) = v114;
  *(void *)(a9 + 224) = v108;
  *(double *)(a9 + 232) = v122;
  *(void *)(a9 + 240) = v107;
  *(double *)(a9 + 248) = v106;
  *(void *)(a9 + 256) = v105;
  *(double *)(a9 + 264) = v104;
  *(void *)(a9 + 272) = v102;
  *(void *)(a9 + 280) = v113;
  *(void *)(a9 + 288) = v118;
  *(double *)(a9 + 296) = v121;
  *(void *)(a9 + 304) = v119;
  *(void *)(a9 + 312) = v116;
  *(void *)(a9 + 320) = v96;
  *(void *)(a9 + 328) = v94;
  *(void *)(a9 + 336) = v92;
  *(void *)(a9 + 344) = v91;
  *(void *)(a9 + 352) = v120;
  *(void *)(a9 + 360) = v115;
  *(double *)(a9 + 400) = v87;
  *(double *)(a9 + 408) = v86;
  *(double *)(a9 + 432) = v84;
  *(void *)(a9 + 440) = v112;
  *(unsigned char *)(a9 + 450) = v85;
  *(unsigned char *)(a9 + 455) = v179[11];
  *(void *)(a9 + 456) = v79;
  *(void *)(a9 + 464) = a6;
  *(void *)(a9 + 472) = v45;
  *(unsigned char *)(a9 + 480) = v44;
  *(_DWORD *)(a9 + 484) = *(_DWORD *)&v179[3];
  *(_DWORD *)(a9 + 481) = *(_DWORD *)v179;
  *(void *)(a9 + 488) = v159;
  *(void *)(a9 + 496) = v160;
  *(void *)(a9 + 504) = v34;
  *(void *)(a9 + 512) = v150;
  *(void *)(a9 + 520) = v154;
  *(double *)(a9 + 528) = v33;
  *(void *)(a9 + 536) = v153;
  *(void *)(a9 + 544) = v169;
  *(void *)(a9 + 552) = v156;
  *(unsigned char *)(a9 + 560) = v77;
  *(_DWORD *)(a9 + 561) = *(_DWORD *)v178;
  *(_DWORD *)(a9 + 564) = *(_DWORD *)((char *)&v178[1] + 1);
  *(void *)(a9 + 568) = v148;
  *(void *)(a9 + 576) = v158;
  *(void *)(a9 + 584) = v157;
  *(void *)(a9 + 592) = v155;
  *(void *)(a9 + 600) = v152;
  *(void *)(a9 + 608) = v24;
  *(void *)(a9 + 616) = v151;
  *(unsigned char *)(a9 + 624) = BYTE4(v77);
  *(_DWORD *)(a9 + 625) = *(_DWORD *)v177;
  *(_DWORD *)(a9 + 628) = *(_DWORD *)&v177[3];
  *(void *)(a9 + 632) = v144;
  *(unsigned char *)(a9 + 640) = v76;
  *(unsigned char *)(a9 + 641) = v75;
  *(_WORD *)(a9 + 646) = v176;
  *(_DWORD *)(a9 + 642) = v175;
  *(void *)(a9 + 648) = v146;
  *(unsigned char *)(a9 + 656) = v74;
  *(unsigned char *)(a9 + 657) = v73;
  *(_WORD *)(a9 + 662) = v174;
  *(_DWORD *)(a9 + 658) = *(_DWORD *)&v173[7];
  *(unsigned char *)(a9 + 664) = v46 & 1;
  *(_DWORD *)(a9 + 665) = *(_DWORD *)v173;
  *(_DWORD *)(a9 + 668) = *(_DWORD *)&v173[3];
  *(double *)(a9 + 672) = v43;
  *(void *)(a9 + 680) = v134;
  return memcpy((void *)(a9 + 688), __dst, 0x1B0uLL);
}

uint64_t Configuration.init(from:)(uint64_t a1)
{
  char v2 = (void *)__chkstk_darwin(a1);
  uint64_t v4 = v3;
  uint64_t v89 = sub_12124(&qword_26DE10);
  uint64_t v5 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(v2, v2[3]);
  sub_8D400();
  sub_1FC850();
  if (!v1)
  {
    uint64_t v29 = v4;
    uint64_t v30 = v5;
    v33[0] = 0;
    sub_8D454();
    sub_1FC360();
    long long v83 = v86;
    uint64_t v84 = v87;
    char v85 = v88;
    v33[0] = 1;
    sub_8D4A8();
    sub_1FC360();
    v82[0] = v82[1];
    v33[0] = 2;
    sub_8D4FC();
    sub_1FC360();
    uint64_t v8 = v81;
    v76[0] = v78;
    v76[1] = v79;
    v76[2] = v80;
    uint64_t v77 = v81;
    v74[367] = 3;
    sub_8D550();
    sub_1FC360();
    uint64_t v28 = v8;
    sub_55844((uint64_t)&v75, (uint64_t)v74, &qword_26DDF8);
    sub_55844((uint64_t)v74, (uint64_t)v73, &qword_26DDF8);
    sub_12124(&qword_26DA30);
    v33[0] = 4;
    uint64_t v27 = (_UNKNOWN **)sub_7E8D8(&qword_26DA48);
    sub_1FC360();
    uint64_t v26 = v72;
    v33[0] = 5;
    sub_1FC360();
    uint64_t v25 = v71;
    v33[0] = 6;
    sub_1FC360();
    uint64_t v10 = v70;
    v33[0] = 7;
    sub_8D5D0();
    sub_1FC360();
    uint64_t v27 = v10;
    v69[0] = v69[1];
    v33[0] = 8;
    sub_8D624();
    sub_1FC360();
    long long v63 = v66;
    uint64_t v64 = v67;
    uint64_t v65 = v68;
    v33[0] = 11;
    sub_8D678();
    sub_1FC360();
    uint64_t v18 = v49;
    uint64_t v19 = v50;
    v47[0] = v49;
    v47[1] = v50;
    uint64_t v20 = v51;
    uint64_t v21 = v52;
    v47[2] = v51;
    v47[3] = v52;
    uint64_t v22 = v53;
    uint64_t v23 = v54;
    v47[4] = v53;
    v47[5] = v54;
    uint64_t v24 = v55;
    v47[6] = v55;
    v47[7] = v56;
    uint64_t v16 = v58;
    uint64_t v17 = v57;
    v47[8] = v57;
    v47[9] = v58;
    uint64_t v14 = v60;
    uint64_t v15 = v59;
    v47[10] = v59;
    v47[11] = v60;
    uint64_t v13 = v61;
    v47[12] = v61;
    int v12 = v62;
    unsigned __int8 v48 = v62;
    v33[0] = 9;
    sub_8D6CC();
    sub_1FC360();
    v11[1] = v45;
    uint64_t v43 = v45;
    __int16 v44 = v46;
    v33[0] = 10;
    sub_1FC360();
    uint64_t v39 = v41;
    __int16 v40 = v42;
    v33[0] = 12;
    sub_8D7AC();
    sub_1FC360();
    long long v35 = v37;
    uint64_t v36 = v38;
    v33[1127] = 13;
    sub_8D800();
    sub_1FC360();
    sub_55844((uint64_t)&v34, (uint64_t)v32, &qword_26DE00);
    sub_55844((uint64_t)v32, (uint64_t)v31, &qword_26DE00);
    Configuration.init(genreRecommendationConfiguration:seedBasedRecommendationConfiguration:collectionsConfiguration:scorersConfiguration:profileGenreDenylistForGenres:profileGenreDenylistForBooks:indefiniteAuthorIDs:mediaTypeMethod:mediaTypesRecommendationServiceConfiguration:booksClusteringServiceConfiguration:ebookConfiguration:audiobookConfiguration:personalizationMetadataServiceConfiguration:tabiConfiguration:)((uint64_t)&v83, v82, (unint64_t *)v76, (uint64_t)v73, v26, v25, v27, v69, (uint64_t)v33, (uint64_t *)&v63, (uint64_t)v47, (uint64_t)&v43, (uint64_t)&v39, (double *)&v35, (uint64_t)v31);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v7, v89);
    memcpy(v29, v33, 0x460uLL);
  }
  return sub_1264C((uint64_t)v2);
}

uint64_t Configuration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26DE70);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = *v1;
  int v68 = *((unsigned __int16 *)v1 + 4);
  uint64_t v7 = v1[2];
  char v8 = *((unsigned char *)v1 + 24);
  int v9 = *((unsigned __int8 *)v1 + 25);
  uint64_t v10 = v1[4];
  int v61 = *((unsigned __int8 *)v1 + 40);
  int v62 = v9;
  int v11 = *((unsigned __int8 *)v1 + 48);
  int v59 = *((unsigned __int8 *)v1 + 49);
  int v60 = v11;
  uint64_t v58 = v1[7];
  int v12 = *((unsigned __int8 *)v1 + 64);
  int v56 = *((unsigned __int8 *)v1 + 65);
  int v57 = v12;
  uint64_t v13 = v1[10];
  uint64_t v54 = v1[9];
  uint64_t v55 = v13;
  memcpy(v66, v1 + 11, sizeof(v66));
  uint64_t v14 = v1[57];
  uint64_t v52 = v1[58];
  uint64_t v53 = v14;
  uint64_t v51 = v1[59];
  int v50 = *((unsigned __int8 *)v1 + 480);
  uint64_t v15 = v1[62];
  *(void *)&long long v48 = v1[61];
  *((void *)&v48 + 1) = v15;
  uint64_t v16 = v1[63];
  uint64_t v49 = v1[64];
  uint64_t v17 = v1[66];
  uint64_t v18 = v1[67];
  uint64_t v33 = v1[65];
  uint64_t v34 = v18;
  long long v19 = *((_OWORD *)v1 + 34);
  LODWORD(v14) = *((unsigned __int8 *)v1 + 560);
  long long v40 = *(_OWORD *)(v1 + 71);
  long long v41 = v19;
  long long v39 = *(_OWORD *)(v1 + 73);
  uint64_t v20 = v1[75];
  uint64_t v21 = v1[76];
  uint64_t v37 = v1[77];
  uint64_t v38 = v20;
  LODWORD(v18) = *((unsigned __int8 *)v1 + 624);
  int v35 = v14;
  int v36 = v18;
  uint64_t v45 = v1[79];
  LODWORD(v18) = *((unsigned __int8 *)v1 + 641);
  int v46 = *((unsigned __int8 *)v1 + 640);
  int v47 = v18;
  uint64_t v42 = v1[81];
  LODWORD(v18) = *((unsigned __int8 *)v1 + 657);
  int v43 = *((unsigned __int8 *)v1 + 656);
  int v44 = v18;
  int v31 = *((unsigned __int8 *)v1 + 664);
  uint64_t v22 = v1[84];
  uint64_t v32 = v1[85];
  memcpy(v67, v1 + 86, sizeof(v67));
  sub_5D64(a1, a1[3]);
  sub_8D400();
  uint64_t v23 = v3;
  sub_1FC870();
  *(void *)&v65[0] = v63;
  WORD4(v65[0]) = v68;
  *(void *)&v65[1] = v7;
  BYTE8(v65[1]) = v8;
  char v69 = 0;
  sub_8D854();
  uint64_t v24 = v64;
  sub_1FC530();
  if (v24) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  }
  uint64_t v25 = v58;
  char v27 = v59;
  char v26 = v60;
  char v28 = v61;
  LOBYTE(v65[0]) = v62;
  char v69 = 1;
  sub_8D8A8();
  sub_1FC530();
  *(void *)&v65[0] = v10;
  BYTE8(v65[0]) = v28;
  LOBYTE(v65[1]) = v26;
  BYTE1(v65[1]) = v27;
  *((void *)&v65[1] + 1) = v25;
  LOBYTE(v65[2]) = v57;
  BYTE1(v65[2]) = v56;
  *((void *)&v65[2] + 1) = v54;
  *(void *)&v65[3] = v55;
  char v69 = 2;
  sub_8D8FC();
  sub_1FC530();
  memcpy(v65, v66, 0x16BuLL);
  char v69 = 3;
  sub_8D950();
  sub_1FC530();
  *(void *)&v65[0] = v53;
  char v69 = 4;
  sub_12124(&qword_26DA30);
  sub_7E8D8(&qword_26DA38);
  sub_1FC530();
  *(void *)&v65[0] = v52;
  char v69 = 5;
  sub_1FC530();
  *(void *)&v65[0] = v51;
  char v69 = 6;
  sub_1FC530();
  LOBYTE(v65[0]) = v50;
  char v69 = 7;
  sub_8D9A4();
  sub_1FC530();
  v65[0] = v48;
  *(void *)&v65[1] = v16;
  *((void *)&v65[1] + 1) = v49;
  char v69 = 8;
  sub_8D9F8();
  sub_1FC530();
  *(void *)&v65[0] = v45;
  BYTE8(v65[0]) = v46;
  BYTE9(v65[0]) = v47;
  char v69 = 9;
  sub_8DA4C();
  sub_1FC530();
  *(void *)&v65[0] = v42;
  BYTE8(v65[0]) = v43;
  BYTE9(v65[0]) = v44;
  char v69 = 10;
  sub_1FC530();
  *(void *)&v65[0] = v33;
  *((void *)&v65[0] + 1) = v17;
  *(void *)&v65[1] = v34;
  *(_OWORD *)((char *)&v65[1] + 8) = v41;
  BYTE8(v65[2]) = v35;
  v65[3] = v40;
  v65[4] = v39;
  *(void *)&v65[5] = v38;
  *((void *)&v65[5] + 1) = v21;
  *(void *)&v65[6] = v37;
  BYTE8(v65[6]) = v36;
  char v69 = 11;
  sub_8DAA0();
  sub_1FC530();
  LOBYTE(v65[0]) = v31;
  *((void *)&v65[0] + 1) = v22;
  *(void *)&v65[1] = v32;
  char v69 = 12;
  sub_8DAF4();
  sub_1FC530();
  memcpy(v65, v67, sizeof(v65));
  char v69 = 13;
  sub_8DB48();
  sub_1FC530();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v23);
}

uint64_t sub_8C768(uint64_t a1)
{
  return Configuration.init(from:)(a1);
}

uint64_t sub_8C780(void *a1)
{
  return Configuration.encode(to:)(a1);
}

unint64_t sub_8C798()
{
  unint64_t result = qword_26DC30;
  if (!qword_26DC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC30);
  }
  return result;
}

uint64_t sub_8C7EC(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26DC38);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_8C850()
{
  unint64_t result = qword_26DC60;
  if (!qword_26DC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC60);
  }
  return result;
}

unint64_t sub_8C8A4()
{
  unint64_t result = qword_26DC68;
  if (!qword_26DC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC68);
  }
  return result;
}

unint64_t sub_8C8F8()
{
  unint64_t result = qword_26DC80;
  if (!qword_26DC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DC80);
  }
  return result;
}

uint64_t sub_8C94C(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_8C9CC()
{
  unint64_t result = qword_26DCB8;
  if (!qword_26DCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DCB8);
  }
  return result;
}

unint64_t sub_8CA20()
{
  unint64_t result = qword_26DCC8;
  if (!qword_26DCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DCC8);
  }
  return result;
}

uint64_t sub_8CA74(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_8CAF4()
{
  unint64_t result = qword_26DCD8;
  if (!qword_26DCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DCD8);
  }
  return result;
}

unint64_t sub_8CB48()
{
  unint64_t result = qword_26DCF8;
  if (!qword_26DCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DCF8);
  }
  return result;
}

unint64_t sub_8CB9C()
{
  unint64_t result = qword_26DD08;
  if (!qword_26DD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD08);
  }
  return result;
}

unint64_t sub_8CBF0()
{
  unint64_t result = qword_26DD20;
  if (!qword_26DD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD20);
  }
  return result;
}

unint64_t sub_8CC44()
{
  unint64_t result = qword_26DD38;
  if (!qword_26DD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD38);
  }
  return result;
}

unint64_t sub_8CC98()
{
  unint64_t result = qword_26DD50;
  if (!qword_26DD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD50);
  }
  return result;
}

unint64_t sub_8CCEC()
{
  unint64_t result = qword_26DD68;
  if (!qword_26DD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD68);
  }
  return result;
}

unint64_t sub_8CD40()
{
  unint64_t result = qword_26DD70;
  if (!qword_26DD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD70);
  }
  return result;
}

unint64_t sub_8CD94()
{
  unint64_t result = qword_26DD78;
  if (!qword_26DD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD78);
  }
  return result;
}

unint64_t sub_8CDE8()
{
  unint64_t result = qword_26DD90;
  if (!qword_26DD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DD90);
  }
  return result;
}

unint64_t sub_8CE3C()
{
  unint64_t result = qword_26DDA0;
  if (!qword_26DDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DDA0);
  }
  return result;
}

unint64_t sub_8CE90()
{
  unint64_t result = qword_26DDA8;
  if (!qword_26DDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DDA8);
  }
  return result;
}

uint64_t sub_8CEE4(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_8CF50()
{
  unint64_t result = qword_26DDC0;
  if (!qword_26DDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DDC0);
  }
  return result;
}

uint64_t sub_8CFA4(uint64_t a1)
{
  return a1;
}

uint64_t sub_8CFD0(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 328);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_8CFE8()
{
  unint64_t result = qword_26DDD8;
  if (!qword_26DDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DDD8);
  }
  return result;
}

unint64_t sub_8D03C()
{
  unint64_t result = qword_26DDE0;
  if (!qword_26DDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DDE0);
  }
  return result;
}

unint64_t sub_8D090()
{
  unint64_t result = qword_26DDF0;
  if (!qword_26DDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DDF0);
  }
  return result;
}

uint64_t sub_8D0E4(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 128);
  long long v11 = *(_OWORD *)(a1 + 112);
  long long v8 = *(_OWORD *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 144);
  long long v6 = *(_OWORD *)(a1 + 192);
  long long v7 = *(_OWORD *)(a1 + 176);
  long long v5 = *(_OWORD *)(a1 + 208);
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v14 = *(void *)(a1 + 288);
  uint64_t v15 = *(void *)(a1 + 280);
  uint64_t v12 = *(void *)(a1 + 304);
  uint64_t v13 = *(void *)(a1 + 296);
  uint64_t v26 = *(void *)(a1 + 368);
  uint64_t v27 = *(void *)(a1 + 360);
  uint64_t v24 = *(void *)(a1 + 384);
  uint64_t v25 = *(void *)(a1 + 376);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_8D2AC(v23, v22, v21, v20, v19, v18, v17, v16, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1));
  sub_8D2F8(v2, v3);
  sub_8D348(v15, v14, v13, v12);
  swift_bridgeObjectRetain();
  sub_8D38C(v27, v26, v25, v24);
  return a1;
}

uint64_t sub_8D2AC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result = a22;
  if (a22)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_8D2F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_8D348(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_8D38C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

double sub_8D3DC(uint64_t a1)
{
  *(void *)(a1 + 176) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 144) = 0u;
  *(_OWORD *)(a1 + 160) = 0u;
  *(_OWORD *)(a1 + 112) = 0u;
  *(_OWORD *)(a1 + 128) = 0u;
  *(_OWORD *)(a1 + 80) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

unint64_t sub_8D400()
{
  unint64_t result = qword_26DE18;
  if (!qword_26DE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE18);
  }
  return result;
}

unint64_t sub_8D454()
{
  unint64_t result = qword_26DE20;
  if (!qword_26DE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE20);
  }
  return result;
}

unint64_t sub_8D4A8()
{
  unint64_t result = qword_26DE28;
  if (!qword_26DE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE28);
  }
  return result;
}

unint64_t sub_8D4FC()
{
  unint64_t result = qword_26DE30;
  if (!qword_26DE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE30);
  }
  return result;
}

unint64_t sub_8D550()
{
  unint64_t result = qword_26DE38;
  if (!qword_26DE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE38);
  }
  return result;
}

uint64_t sub_8D5A4(uint64_t a1)
{
  return a1;
}

unint64_t sub_8D5D0()
{
  unint64_t result = qword_26DE40;
  if (!qword_26DE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE40);
  }
  return result;
}

unint64_t sub_8D624()
{
  unint64_t result = qword_26DE48;
  if (!qword_26DE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE48);
  }
  return result;
}

unint64_t sub_8D678()
{
  unint64_t result = qword_26DE50;
  if (!qword_26DE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE50);
  }
  return result;
}

unint64_t sub_8D6CC()
{
  unint64_t result = qword_26DE58;
  if (!qword_26DE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE58);
  }
  return result;
}

uint64_t sub_8D720(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_8D7AC()
{
  unint64_t result = qword_26DE60;
  if (!qword_26DE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE60);
  }
  return result;
}

unint64_t sub_8D800()
{
  unint64_t result = qword_26DE68;
  if (!qword_26DE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE68);
  }
  return result;
}

unint64_t sub_8D854()
{
  unint64_t result = qword_26DE78;
  if (!qword_26DE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE78);
  }
  return result;
}

unint64_t sub_8D8A8()
{
  unint64_t result = qword_26DE80;
  if (!qword_26DE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE80);
  }
  return result;
}

unint64_t sub_8D8FC()
{
  unint64_t result = qword_26DE88;
  if (!qword_26DE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE88);
  }
  return result;
}

unint64_t sub_8D950()
{
  unint64_t result = qword_26DE90;
  if (!qword_26DE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE90);
  }
  return result;
}

unint64_t sub_8D9A4()
{
  unint64_t result = qword_26DE98;
  if (!qword_26DE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DE98);
  }
  return result;
}

unint64_t sub_8D9F8()
{
  unint64_t result = qword_26DEA0;
  if (!qword_26DEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEA0);
  }
  return result;
}

unint64_t sub_8DA4C()
{
  unint64_t result = qword_26DEA8;
  if (!qword_26DEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEA8);
  }
  return result;
}

unint64_t sub_8DAA0()
{
  unint64_t result = qword_26DEB0;
  if (!qword_26DEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEB0);
  }
  return result;
}

unint64_t sub_8DAF4()
{
  unint64_t result = qword_26DEB8;
  if (!qword_26DEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEB8);
  }
  return result;
}

unint64_t sub_8DB48()
{
  unint64_t result = qword_26DEC0;
  if (!qword_26DEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEC0);
  }
  return result;
}

unint64_t sub_8DBA0()
{
  unint64_t result = qword_26DEC8;
  if (!qword_26DEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEC8);
  }
  return result;
}

unint64_t sub_8DBF8()
{
  unint64_t result = qword_26DED0;
  if (!qword_26DED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DED0);
  }
  return result;
}

unint64_t sub_8DC50()
{
  unint64_t result = qword_26DED8;
  if (!qword_26DED8)
  {
    sub_121C4(&qword_26DEE0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DED8);
  }
  return result;
}

unint64_t sub_8DCB0()
{
  unint64_t result = qword_26DEE8;
  if (!qword_26DEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEE8);
  }
  return result;
}

unint64_t sub_8DD08()
{
  unint64_t result = qword_26DEF0;
  if (!qword_26DEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEF0);
  }
  return result;
}

unint64_t sub_8DD60()
{
  unint64_t result = qword_26DEF8;
  if (!qword_26DEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DEF8);
  }
  return result;
}

unint64_t sub_8DDB8()
{
  unint64_t result = qword_26DF00;
  if (!qword_26DF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF00);
  }
  return result;
}

unint64_t sub_8DE10()
{
  unint64_t result = qword_26DF08;
  if (!qword_26DF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF08);
  }
  return result;
}

unint64_t sub_8DE68()
{
  unint64_t result = qword_26DF10;
  if (!qword_26DF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF10);
  }
  return result;
}

uint64_t destroy for Configuration(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[113])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[116])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[124])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1[134];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for Configuration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(_WORD *)(a1 + 35) = *(_WORD *)(a2 + 35);
  *(_DWORD *)(a1 + 37) = *(_DWORD *)(a2 + 37);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v4 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v4;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v5 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v5;
  long long v6 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v6;
  long long v7 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v7;
  long long v8 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v8;
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  uint64_t v9 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v9;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(unsigned char *)(a1 + 449) = *(unsigned char *)(a2 + 449);
  *(unsigned char *)(a1 + 450) = *(unsigned char *)(a2 + 450);
  uint64_t v10 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v10;
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(unsigned char *)(a1 + 560) = *(unsigned char *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(_OWORD *)(a1 + 608) = *(_OWORD *)(a2 + 608);
  *(unsigned char *)(a1 + 624) = *(unsigned char *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(unsigned char *)(a1 + 641) = *(unsigned char *)(a2 + 641);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(unsigned char *)(a1 + 657) = *(unsigned char *)(a2 + 657);
  long long v11 = *(_OWORD *)(a2 + 664);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(_OWORD *)(a1 + 664) = v11;
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  uint64_t v25 = *(void *)(a2 + 904);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
    *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
    *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
    *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    *(void *)(a1 + 904) = v25;
    *(void *)(a1 + 912) = *(void *)(a2 + 912);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v12 = *(void *)(a2 + 928);
    if (v12) {
      goto LABEL_3;
    }
LABEL_6:
    long long v19 = *(_OWORD *)(a2 + 936);
    *(_OWORD *)(a1 + 920) = *(_OWORD *)(a2 + 920);
    *(_OWORD *)(a1 + 936) = v19;
    *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
    uint64_t v13 = *(void *)(a2 + 992);
    if (v13) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  long long v14 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v14;
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  long long v15 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v15;
  long long v16 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v16;
  long long v17 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v17;
  long long v18 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v18;
  uint64_t v12 = *(void *)(a2 + 928);
  if (!v12) {
    goto LABEL_6;
  }
LABEL_3:
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  *(void *)(a1 + 928) = v12;
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v13 = *(void *)(a2 + 992);
  if (v13)
  {
LABEL_4:
    *(void *)(a1 + 968) = *(void *)(a2 + 968);
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(void *)(a1 + 992) = v13;
    *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
LABEL_7:
  long long v20 = *(_OWORD *)(a2 + 984);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(_OWORD *)(a1 + 984) = v20;
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
LABEL_8:
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  uint64_t v21 = *(void *)(a2 + 1072);
  swift_bridgeObjectRetain();
  if (v21)
  {
    *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
    *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
    *(void *)(a1 + 1072) = v21;
    *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *(_OWORD *)(a2 + 1096);
    *(_OWORD *)(a1 + 1080) = *(_OWORD *)(a2 + 1080);
    *(_OWORD *)(a1 + 1096) = v22;
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    long long v23 = *(_OWORD *)(a2 + 1064);
    *(_OWORD *)(a1 + 1048) = *(_OWORD *)(a2 + 1048);
    *(_OWORD *)(a1 + 1064) = v23;
  }
  return a1;
}

uint64_t assignWithCopy for Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 448);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 34) = *(unsigned char *)(a2 + 34);
  *(unsigned char *)(a1 + 35) = *(unsigned char *)(a2 + 35);
  *(unsigned char *)(a1 + 36) = *(unsigned char *)(a2 + 36);
  *(unsigned char *)(a1 + 37) = *(unsigned char *)(a2 + 37);
  *(unsigned char *)(a1 + 38) = *(unsigned char *)(a2 + 38);
  *(unsigned char *)(a1 + 39) = *(unsigned char *)(a2 + 39);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(unsigned char *)(a1 + 449) = v4[1];
  *(unsigned char *)(a1 + 450) = v4[2];
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 560) = v4[112];
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(unsigned char *)(a1 + 624) = v4[176];
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 640) = v4[192];
  *(unsigned char *)(a1 + 641) = v4[193];
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 656) = v4[208];
  *(unsigned char *)(a1 + 657) = v4[209];
  *(unsigned char *)(a1 + 664) = v4[216];
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  long long v5 = (_OWORD *)(a1 + 736);
  long long v6 = (long long *)(a2 + 736);
  uint64_t v7 = *(void *)(a2 + 904);
  if (*(void *)(a1 + 904))
  {
    if (v7)
    {
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      *(void *)(a1 + 856) = *(void *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(void *)(a1 + 872) = *(void *)(a2 + 872);
      *(void *)(a1 + 880) = *(void *)(a2 + 880);
      *(void *)(a1 + 888) = *(void *)(a2 + 888);
      *(void *)(a1 + 896) = *(void *)(a2 + 896);
      *(void *)(a1 + 904) = *(void *)(a2 + 904);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF00(a1 + 736);
      long long v14 = *(_OWORD *)(a2 + 784);
      long long v16 = *v6;
      long long v15 = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = v14;
      *long long v5 = v16;
      *(_OWORD *)(a1 + 752) = v15;
      long long v17 = *(_OWORD *)(a2 + 848);
      long long v19 = *(_OWORD *)(a2 + 800);
      long long v18 = *(_OWORD *)(a2 + 816);
      *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 848) = v17;
      *(_OWORD *)(a1 + 800) = v19;
      *(_OWORD *)(a1 + 816) = v18;
      long long v21 = *(_OWORD *)(a2 + 880);
      long long v20 = *(_OWORD *)(a2 + 896);
      long long v22 = *(_OWORD *)(a2 + 864);
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      *(_OWORD *)(a1 + 880) = v21;
      *(_OWORD *)(a1 + 896) = v20;
      *(_OWORD *)(a1 + 864) = v22;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
    long long v8 = *(_OWORD *)(a2 + 776);
    long long v9 = *(_OWORD *)(a2 + 792);
    long long v10 = *(_OWORD *)(a2 + 808);
    *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 808) = v10;
    *(_OWORD *)(a1 + 792) = v9;
    *(_OWORD *)(a1 + 776) = v8;
    long long v11 = *(_OWORD *)(a2 + 840);
    long long v12 = *(_OWORD *)(a2 + 856);
    long long v13 = *(_OWORD *)(a2 + 872);
    *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 872) = v13;
    *(_OWORD *)(a1 + 856) = v12;
    *(_OWORD *)(a1 + 840) = v11;
    *(void *)(a1 + 904) = *(void *)(a2 + 904);
    *(void *)(a1 + 912) = *(void *)(a2 + 912);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v6;
    long long v24 = *(_OWORD *)(a2 + 752);
    long long v25 = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 784) = v25;
    *long long v5 = v23;
    *(_OWORD *)(a1 + 752) = v24;
    long long v26 = *(_OWORD *)(a2 + 800);
    long long v27 = *(_OWORD *)(a2 + 816);
    long long v28 = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 848) = v28;
    *(_OWORD *)(a1 + 800) = v26;
    *(_OWORD *)(a1 + 816) = v27;
    long long v29 = *(_OWORD *)(a2 + 864);
    long long v30 = *(_OWORD *)(a2 + 880);
    long long v31 = *(_OWORD *)(a2 + 896);
    *(void *)(a1 + 912) = *(void *)(a2 + 912);
    *(_OWORD *)(a1 + 880) = v30;
    *(_OWORD *)(a1 + 896) = v31;
    *(_OWORD *)(a1 + 864) = v29;
  }
  uint64_t v32 = (_OWORD *)(a1 + 920);
  uint64_t v33 = (_OWORD *)(a2 + 920);
  uint64_t v34 = *(void *)(a2 + 928);
  if (*(void *)(a1 + 928))
  {
    if (v34)
    {
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF54(a1 + 920);
      long long v36 = *(_OWORD *)(a2 + 936);
      long long v35 = *(_OWORD *)(a2 + 952);
      *uint64_t v32 = *v33;
      *(_OWORD *)(a1 + 936) = v36;
      *(_OWORD *)(a1 + 952) = v35;
    }
  }
  else if (v34)
  {
    *(void *)(a1 + 920) = *(void *)(a2 + 920);
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    *(void *)(a1 + 936) = *(void *)(a2 + 936);
    *(void *)(a1 + 944) = *(void *)(a2 + 944);
    *(void *)(a1 + 952) = *(void *)(a2 + 952);
    *(void *)(a1 + 960) = *(void *)(a2 + 960);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *v33;
    long long v38 = *(_OWORD *)(a2 + 952);
    *(_OWORD *)(a1 + 936) = *(_OWORD *)(a2 + 936);
    *(_OWORD *)(a1 + 952) = v38;
    *uint64_t v32 = v37;
  }
  long long v39 = (_OWORD *)(a1 + 968);
  long long v40 = (_OWORD *)(a2 + 968);
  uint64_t v41 = *(void *)(a2 + 992);
  if (*(void *)(a1 + 992))
  {
    if (v41)
    {
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EFA8(a1 + 968);
      long long v43 = *(_OWORD *)(a2 + 984);
      long long v42 = *(_OWORD *)(a2 + 1000);
      *long long v39 = *v40;
      *(_OWORD *)(a1 + 984) = v43;
      *(_OWORD *)(a1 + 1000) = v42;
    }
  }
  else if (v41)
  {
    *(void *)(a1 + 968) = *(void *)(a2 + 968);
    *(void *)(a1 + 976) = *(void *)(a2 + 976);
    *(void *)(a1 + 984) = *(void *)(a2 + 984);
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *v40;
    long long v45 = *(_OWORD *)(a2 + 1000);
    *(_OWORD *)(a1 + 984) = *(_OWORD *)(a2 + 984);
    *(_OWORD *)(a1 + 1000) = v45;
    *long long v39 = v44;
  }
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v46 = (_OWORD *)(a1 + 1048);
  int v47 = (_OWORD *)(a2 + 1048);
  uint64_t v48 = *(void *)(a2 + 1072);
  if (*(void *)(a1 + 1072))
  {
    if (v48)
    {
      *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
      *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
      *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
      *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
      *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
      *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    }
    else
    {
      sub_8EFFC(a1 + 1048);
      *int v46 = *v47;
      long long v50 = *(_OWORD *)(a2 + 1080);
      long long v49 = *(_OWORD *)(a2 + 1096);
      long long v51 = *(_OWORD *)(a2 + 1064);
      *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
      *(_OWORD *)(a1 + 1080) = v50;
      *(_OWORD *)(a1 + 1096) = v49;
      *(_OWORD *)(a1 + 1064) = v51;
    }
  }
  else if (v48)
  {
    *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
    *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
    *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
    *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
    *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *int v46 = *v47;
    long long v52 = *(_OWORD *)(a2 + 1064);
    long long v53 = *(_OWORD *)(a2 + 1080);
    long long v54 = *(_OWORD *)(a2 + 1096);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    *(_OWORD *)(a1 + 1080) = v53;
    *(_OWORD *)(a1 + 1096) = v54;
    *(_OWORD *)(a1 + 1064) = v52;
  }
  return a1;
}

uint64_t sub_8EF00(uint64_t a1)
{
  return a1;
}

uint64_t sub_8EF54(uint64_t a1)
{
  return a1;
}

uint64_t sub_8EFA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_8EFFC(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for Configuration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x460uLL);
}

uint64_t assignWithTake for Configuration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 448);
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v6 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v6;
  long long v7 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v7;
  long long v8 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v8;
  long long v9 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v9;
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(unsigned char *)(a1 + 448) = *(unsigned char *)(a2 + 448);
  *(unsigned char *)(a1 + 449) = v4[1];
  *(unsigned char *)(a1 + 450) = v4[2];
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 480) = *(unsigned char *)(a2 + 480);
  uint64_t v10 = *(void *)(a2 + 496);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = v10;
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 560) = v4[112];
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(unsigned char *)(a1 + 624) = v4[176];
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 640) = v4[192];
  *(unsigned char *)(a1 + 641) = v4[193];
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 656) = v4[208];
  *(unsigned char *)(a1 + 657) = v4[209];
  *(unsigned char *)(a1 + 664) = v4[216];
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(_OWORD *)(a1 + 680) = *(_OWORD *)(a2 + 680);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  if (*(void *)(a1 + 904))
  {
    uint64_t v11 = *(void *)(a2 + 904);
    if (v11)
    {
      *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      long long v12 = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = v12;
      long long v13 = *(_OWORD *)(a2 + 816);
      *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 816) = v13;
      long long v14 = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 848) = v14;
      long long v15 = *(_OWORD *)(a2 + 880);
      *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
      *(_OWORD *)(a1 + 880) = v15;
      *(void *)(a1 + 896) = *(void *)(a2 + 896);
      *(void *)(a1 + 904) = v11;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_8EF00(a1 + 736);
  }
  long long v16 = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 880) = v16;
  *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
  *(void *)(a1 + 912) = *(void *)(a2 + 912);
  long long v17 = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 816) = v17;
  long long v18 = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 848) = v18;
  long long v19 = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 736) = *(_OWORD *)(a2 + 736);
  *(_OWORD *)(a1 + 752) = v19;
  long long v20 = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 784) = v20;
LABEL_6:
  if (*(void *)(a1 + 928))
  {
    uint64_t v21 = *(void *)(a2 + 928);
    if (v21)
    {
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      *(void *)(a1 + 928) = v21;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_8EF54(a1 + 920);
  }
  long long v22 = *(_OWORD *)(a2 + 936);
  *(_OWORD *)(a1 + 920) = *(_OWORD *)(a2 + 920);
  *(_OWORD *)(a1 + 936) = v22;
  *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
LABEL_11:
  if (*(void *)(a1 + 992))
  {
    uint64_t v23 = *(void *)(a2 + 992);
    if (v23)
    {
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
      *(void *)(a1 + 992) = v23;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_8EFA8(a1 + 968);
  }
  long long v24 = *(_OWORD *)(a2 + 984);
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
  *(_OWORD *)(a1 + 984) = v24;
  *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
LABEL_16:
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 1072))
  {
LABEL_20:
    long long v26 = *(_OWORD *)(a2 + 1096);
    *(_OWORD *)(a1 + 1080) = *(_OWORD *)(a2 + 1080);
    *(_OWORD *)(a1 + 1096) = v26;
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    long long v27 = *(_OWORD *)(a2 + 1064);
    *(_OWORD *)(a1 + 1048) = *(_OWORD *)(a2 + 1048);
    *(_OWORD *)(a1 + 1064) = v27;
    return a1;
  }
  uint64_t v25 = *(void *)(a2 + 1072);
  if (!v25)
  {
    sub_8EFFC(a1 + 1048);
    goto LABEL_20;
  }
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(void *)(a1 + 1072) = v25;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 1120)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 80);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 1112) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1120) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 80) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1120) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration()
{
  return &type metadata for Configuration;
}

uint64_t sub_8F758(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_WORD *)(a1 + 8) = *(_WORD *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Configuration.MediaTypeConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t initializeWithTake for Configuration.MediaTypeConfiguration(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(_WORD *)(result + 8) = *((_WORD *)a2 + 4);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t assignWithTake for Configuration.MediaTypeConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 9) = *(unsigned char *)(a2 + 9);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration.MediaTypeConfiguration(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 10)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.MediaTypeConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_WORD *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 10) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 10) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.MediaTypeConfiguration()
{
  return &type metadata for Configuration.MediaTypeConfiguration;
}

uint64_t getEnumTagSinglePayload for Configuration.GenreRecommendationConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 24);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.GenreRecommendationConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)uint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 25) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 24) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.GenreRecommendationConfiguration()
{
  return &type metadata for Configuration.GenreRecommendationConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.GenreRecommendationConfiguration.Source()
{
  return &type metadata for Configuration.GenreRecommendationConfiguration.Source;
}

ValueMetadata *type metadata accessor for Configuration.GenreRecommendationConfiguration.GenreDepth()
{
  return &type metadata for Configuration.GenreRecommendationConfiguration.GenreDepth;
}

ValueMetadata *type metadata accessor for Configuration.SeedBasedRecommendationConfiguration()
{
  return &type metadata for Configuration.SeedBasedRecommendationConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.SeedBasedRecommendationConfiguration.Source()
{
  return &type metadata for Configuration.SeedBasedRecommendationConfiguration.Source;
}

uint64_t destroy for Configuration.CollectionsConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Configuration.CollectionsConfiguration(uint64_t a1, uint64_t a2)
{
  *(_WORD *)a1 = *(_WORD *)a2;
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(_WORD *)(a1 + 3) = *(_WORD *)(a2 + 3);
  *(_DWORD *)(a1 + 5) = *(_DWORD *)(a2 + 5);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Configuration.CollectionsConfiguration(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(unsigned char *)(a1 + 1) = *(unsigned char *)(a2 + 1);
  *(unsigned char *)(a1 + 2) = *(unsigned char *)(a2 + 2);
  *(unsigned char *)(a1 + 3) = *(unsigned char *)(a2 + 3);
  *(unsigned char *)(a1 + 4) = *(unsigned char *)(a2 + 4);
  *(unsigned char *)(a1 + 5) = *(unsigned char *)(a2 + 5);
  *(unsigned char *)(a1 + 6) = *(unsigned char *)(a2 + 6);
  *(unsigned char *)(a1 + 7) = *(unsigned char *)(a2 + 7);
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Configuration.CollectionsConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  uint64_t v3 = *(void *)(a2 + 48);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration.CollectionsConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.CollectionsConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.Source()
{
  return &type metadata for Configuration.CollectionsConfiguration.Source;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.BooksConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.BooksConfiguration;
}

_WORD *initializeBufferWithCopyOfBuffer for Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration(_WORD *result, _WORD *a2)
{
  *uint64_t result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.ForYouConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.ForYouConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration;
}

uint64_t getEnumTagSinglePayload for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 1);
  BOOL v4 = v3 >= 3;
  int v5 = v3 - 3;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(void *)uint64_t result = a2 - 254;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 1) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration;
}

uint64_t _s20BooksPersonalization13ConfigurationV24CollectionsConfigurationV36BooksBySuggestedAuthorsConfigurationVwet_0(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 65282 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65282 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65282;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65282;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t _s20BooksPersonalization13ConfigurationV24CollectionsConfigurationV36BooksBySuggestedAuthorsConfigurationVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65282 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65282 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 16) + 1;
    *(_WORD *)uint64_t result = a2 - 254;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x8FE58);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.SuggestionsConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.SuggestionsConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration()
{
  return &type metadata for Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration;
}

void *assignWithCopy for Configuration.MediaTypesRecommendationServiceConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Configuration.MediaTypesRecommendationServiceConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Configuration.MediaTypesRecommendationServiceConfiguration()
{
  return &type metadata for Configuration.MediaTypesRecommendationServiceConfiguration;
}

uint64_t destroy for Configuration.BooksClusteringServiceConfiguration()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Configuration.BooksClusteringServiceConfiguration(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  uint64_t v4 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v4;
  uint64_t v5 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v5;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Configuration.BooksClusteringServiceConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

__n128 initializeWithTake for Configuration.BooksClusteringServiceConfiguration(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(_OWORD *)(a1 + 89) = *(long long *)((char *)a2 + 89);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Configuration.BooksClusteringServiceConfiguration(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(unsigned char *)(a1 + 104) = *(unsigned char *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for Configuration.BooksClusteringServiceConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 105)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.BooksClusteringServiceConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 104) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 105) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 105) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.BooksClusteringServiceConfiguration()
{
  return &type metadata for Configuration.BooksClusteringServiceConfiguration;
}

uint64_t getEnumTagSinglePayload for Configuration.PersonalizationMetadataServiceConfiguration(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && a1[24]) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *a1;
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for Configuration.PersonalizationMetadataServiceConfiguration(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(unsigned char *)__n128 result = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.PersonalizationMetadataServiceConfiguration()
{
  return &type metadata for Configuration.PersonalizationMetadataServiceConfiguration;
}

uint64_t getEnumTagSinglePayload for Series.Metadata(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Configuration.BooksClusteringServiceLegacyCollectionConfiguration(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x90520);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.BooksClusteringServiceLegacyCollectionConfiguration()
{
  return &type metadata for Configuration.BooksClusteringServiceLegacyCollectionConfiguration;
}

void *initializeWithTake for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x16BuLL);
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration()
{
  return &type metadata for Configuration.ScorersConfiguration;
}

uint64_t destroy for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s20BooksPersonalization13ConfigurationV20ScorersConfigurationV30BookHistoryScorerConfigurationVwcp_0(uint64_t a1, uint64_t a2)
{
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  long long v8 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v8;
  long long v9 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v9;
  long long v10 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v10;
  long long v11 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v11;
  long long v12 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v12;
  uint64_t v13 = *(void *)(a2 + 328);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = v13;
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(_WORD *)(a1 + 361) = *(_WORD *)(a2 + 361);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s20BooksPersonalization13ConfigurationV20ScorersConfigurationV30BookHistoryScorerConfigurationVwca_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 360;
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(unsigned char *)(a1 + 361) = *(unsigned char *)(v4 + 1);
  *(unsigned char *)(a1 + 362) = *(unsigned char *)(v4 + 2);
  return a1;
}

uint64_t _s20BooksPersonalization13ConfigurationV20ScorersConfigurationV30BookHistoryScorerConfigurationVwta_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a2 + 360;
  long long v5 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v5;
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v6;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  long long v8 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v8;
  long long v9 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v9;
  long long v10 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v10;
  long long v11 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v11;
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)&long long v11 = *(void *)(a2 + 320);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = v11;
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  uint64_t v12 = *(void *)(a2 + 352);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = v12;
  *(unsigned char *)(a1 + 360) = *(unsigned char *)(a2 + 360);
  *(unsigned char *)(a1 + 361) = *(unsigned char *)(v4 + 1);
  *(unsigned char *)(a1 + 362) = *(unsigned char *)(v4 + 2);
  return a1;
}

uint64_t _s20BooksPersonalization13ConfigurationV20ScorersConfigurationV30BookHistoryScorerConfigurationVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 363)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 328);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_90934(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 362) = 0;
    *(_WORD *)(result + 360) = 0;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 363) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 328) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 363) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration;
}

uint64_t getEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration;
}

uint64_t getEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 48)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 48) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.RecommendationMethodology()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.RecommendationMethodology;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.Scorer()
{
  return &type metadata for Configuration.ScorersConfiguration.Scorer;
}

ValueMetadata *type metadata accessor for Configuration.MediaTypeMethod()
{
  return &type metadata for Configuration.MediaTypeMethod;
}

ValueMetadata *type metadata accessor for Configuration.CodingKeys()
{
  return &type metadata for Configuration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.CodingKeys()
{
  return &type metadata for Configuration.ScorersConfiguration.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xDC) {
    goto LABEL_17;
  }
  if (a2 + 36 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 36) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 36;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 36;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x25;
  int v8 = v6 - 37;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 36 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 36) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xDC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xDB)
  {
    unsigned int v6 = ((a2 - 220) >> 8) + 1;
    *__n128 result = a2 + 36;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x90C6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 36;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.CodingKeys()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x90D70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.CodingKeys()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.CodingKeys()
{
  return &type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.ReadingHistoryConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.BooksClusteringServiceLegacyCollectionConfiguration.CodingKeys()
{
  return &type metadata for Configuration.BooksClusteringServiceLegacyCollectionConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.PersonalizationMetadataServiceConfiguration.CodingKeys()
{
  return &type metadata for Configuration.PersonalizationMetadataServiceConfiguration.CodingKeys;
}

uint64_t _s20BooksPersonalization13ConfigurationV10CodingKeysOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20BooksPersonalization13ConfigurationV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *__n128 result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x90F34);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 13;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.BooksClusteringServiceConfiguration.CodingKeys()
{
  return &type metadata for Configuration.BooksClusteringServiceConfiguration.CodingKeys;
}

unsigned char *_s20BooksPersonalization13ConfigurationV15MediaTypeMethodOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x91038);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.MediaTypesRecommendationServiceConfiguration.CodingKeys()
{
  return &type metadata for Configuration.MediaTypesRecommendationServiceConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Configuration.CollectionsConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9113CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.PostHydrationFilteringConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.SuggestionsConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.SuggestionsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.MoreFromYourAuthorsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.MangaYouMightLikeConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.ForYouConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.ForYouConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.BooksYouMightLikeConfiguration.CodingKeys;
}

unsigned char *_s20BooksPersonalization13ConfigurationV20ScorersConfigurationV30BookHistoryScorerConfigurationV25RecommendationMethodologyOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x912A0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.BooksBySuggestedAuthorsConfiguration.CodingKeys;
}

ValueMetadata *type metadata accessor for Configuration.CollectionsConfiguration.BooksConfiguration.CodingKeys()
{
  return &type metadata for Configuration.CollectionsConfiguration.BooksConfiguration.CodingKeys;
}

unsigned char *_s20BooksPersonalization13ConfigurationV20ScorersConfigurationV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x91384);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.SeedBasedRecommendationConfiguration.CodingKeys()
{
  return &type metadata for Configuration.SeedBasedRecommendationConfiguration.CodingKeys;
}

unsigned char *_s20BooksPersonalization13ConfigurationV32GenreRecommendationConfigurationV6SourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x91488);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.GenreRecommendationConfiguration.CodingKeys()
{
  return &type metadata for Configuration.GenreRecommendationConfiguration.CodingKeys;
}

unsigned char *_s20BooksPersonalization13ConfigurationV32GenreRecommendationConfigurationV10GenreDepthOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9158CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Configuration.MediaTypeConfiguration.CodingKeys()
{
  return &type metadata for Configuration.MediaTypeConfiguration.CodingKeys;
}

unint64_t sub_915C8()
{
  unint64_t result = qword_26DF18;
  if (!qword_26DF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF18);
  }
  return result;
}

unint64_t sub_91620()
{
  unint64_t result = qword_26DF20;
  if (!qword_26DF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF20);
  }
  return result;
}

unint64_t sub_91678()
{
  unint64_t result = qword_26DF28;
  if (!qword_26DF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF28);
  }
  return result;
}

unint64_t sub_916D0()
{
  unint64_t result = qword_26DF30;
  if (!qword_26DF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF30);
  }
  return result;
}

unint64_t sub_91728()
{
  unint64_t result = qword_26DF38;
  if (!qword_26DF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF38);
  }
  return result;
}

unint64_t sub_91780()
{
  unint64_t result = qword_26DF40;
  if (!qword_26DF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF40);
  }
  return result;
}

unint64_t sub_917D8()
{
  unint64_t result = qword_26DF48;
  if (!qword_26DF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF48);
  }
  return result;
}

unint64_t sub_91830()
{
  unint64_t result = qword_26DF50;
  if (!qword_26DF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF50);
  }
  return result;
}

unint64_t sub_91888()
{
  unint64_t result = qword_26DF58;
  if (!qword_26DF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF58);
  }
  return result;
}

unint64_t sub_918E0()
{
  unint64_t result = qword_26DF60;
  if (!qword_26DF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF60);
  }
  return result;
}

unint64_t sub_91938()
{
  unint64_t result = qword_26DF68;
  if (!qword_26DF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF68);
  }
  return result;
}

unint64_t sub_91990()
{
  unint64_t result = qword_26DF70;
  if (!qword_26DF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF70);
  }
  return result;
}

unint64_t sub_919E8()
{
  unint64_t result = qword_26DF78;
  if (!qword_26DF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF78);
  }
  return result;
}

unint64_t sub_91A40()
{
  unint64_t result = qword_26DF80;
  if (!qword_26DF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF80);
  }
  return result;
}

unint64_t sub_91A98()
{
  unint64_t result = qword_26DF88;
  if (!qword_26DF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF88);
  }
  return result;
}

unint64_t sub_91AF0()
{
  unint64_t result = qword_26DF90;
  if (!qword_26DF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF90);
  }
  return result;
}

unint64_t sub_91B48()
{
  unint64_t result = qword_26DF98;
  if (!qword_26DF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DF98);
  }
  return result;
}

unint64_t sub_91BA0()
{
  unint64_t result = qword_26DFA0;
  if (!qword_26DFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFA0);
  }
  return result;
}

unint64_t sub_91BF8()
{
  unint64_t result = qword_26DFA8;
  if (!qword_26DFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFA8);
  }
  return result;
}

unint64_t sub_91C50()
{
  unint64_t result = qword_26DFB0;
  if (!qword_26DFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFB0);
  }
  return result;
}

unint64_t sub_91CA8()
{
  unint64_t result = qword_26DFB8;
  if (!qword_26DFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFB8);
  }
  return result;
}

unint64_t sub_91D00()
{
  unint64_t result = qword_26DFC0;
  if (!qword_26DFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFC0);
  }
  return result;
}

unint64_t sub_91D58()
{
  unint64_t result = qword_26DFC8;
  if (!qword_26DFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFC8);
  }
  return result;
}

unint64_t sub_91DB0()
{
  unint64_t result = qword_26DFD0;
  if (!qword_26DFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFD0);
  }
  return result;
}

unint64_t sub_91E08()
{
  unint64_t result = qword_26DFD8;
  if (!qword_26DFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFD8);
  }
  return result;
}

unint64_t sub_91E60()
{
  unint64_t result = qword_26DFE0;
  if (!qword_26DFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFE0);
  }
  return result;
}

unint64_t sub_91EB8()
{
  unint64_t result = qword_26DFE8;
  if (!qword_26DFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFE8);
  }
  return result;
}

unint64_t sub_91F10()
{
  unint64_t result = qword_26DFF0;
  if (!qword_26DFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFF0);
  }
  return result;
}

unint64_t sub_91F68()
{
  unint64_t result = qword_26DFF8;
  if (!qword_26DFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26DFF8);
  }
  return result;
}

unint64_t sub_91FC0()
{
  unint64_t result = qword_26E000;
  if (!qword_26E000)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E000);
  }
  return result;
}

unint64_t sub_92018()
{
  unint64_t result = qword_26E008;
  if (!qword_26E008)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E008);
  }
  return result;
}

unint64_t sub_92070()
{
  unint64_t result = qword_26E010;
  if (!qword_26E010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E010);
  }
  return result;
}

unint64_t sub_920C8()
{
  unint64_t result = qword_26E018;
  if (!qword_26E018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E018);
  }
  return result;
}

unint64_t sub_92120()
{
  unint64_t result = qword_26E020;
  if (!qword_26E020)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E020);
  }
  return result;
}

unint64_t sub_92178()
{
  unint64_t result = qword_26E028;
  if (!qword_26E028)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E028);
  }
  return result;
}

unint64_t sub_921D0()
{
  unint64_t result = qword_26E030;
  if (!qword_26E030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E030);
  }
  return result;
}

unint64_t sub_92228()
{
  unint64_t result = qword_26E038;
  if (!qword_26E038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E038);
  }
  return result;
}

unint64_t sub_92280()
{
  unint64_t result = qword_26E040;
  if (!qword_26E040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E040);
  }
  return result;
}

unint64_t sub_922D8()
{
  unint64_t result = qword_26E048;
  if (!qword_26E048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E048);
  }
  return result;
}

unint64_t sub_92330()
{
  unint64_t result = qword_26E050;
  if (!qword_26E050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E050);
  }
  return result;
}

unint64_t sub_92388()
{
  unint64_t result = qword_26E058;
  if (!qword_26E058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E058);
  }
  return result;
}

unint64_t sub_923E0()
{
  unint64_t result = qword_26E060;
  if (!qword_26E060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E060);
  }
  return result;
}

unint64_t sub_92438()
{
  unint64_t result = qword_26E068;
  if (!qword_26E068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E068);
  }
  return result;
}

unint64_t sub_92490()
{
  unint64_t result = qword_26E070;
  if (!qword_26E070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E070);
  }
  return result;
}

unint64_t sub_924E8()
{
  unint64_t result = qword_26E078;
  if (!qword_26E078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E078);
  }
  return result;
}

unint64_t sub_92540()
{
  unint64_t result = qword_26E080;
  if (!qword_26E080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E080);
  }
  return result;
}

unint64_t sub_92598()
{
  unint64_t result = qword_26E088;
  if (!qword_26E088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E088);
  }
  return result;
}

unint64_t sub_925F0()
{
  unint64_t result = qword_26E090;
  if (!qword_26E090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E090);
  }
  return result;
}

unint64_t sub_92648()
{
  unint64_t result = qword_26E098;
  if (!qword_26E098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E098);
  }
  return result;
}

unint64_t sub_926A0()
{
  unint64_t result = qword_26E0A0;
  if (!qword_26E0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0A0);
  }
  return result;
}

unint64_t sub_926F8()
{
  unint64_t result = qword_26E0A8;
  if (!qword_26E0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0A8);
  }
  return result;
}

unint64_t sub_92750()
{
  unint64_t result = qword_26E0B0;
  if (!qword_26E0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0B0);
  }
  return result;
}

unint64_t sub_927A8()
{
  unint64_t result = qword_26E0B8;
  if (!qword_26E0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0B8);
  }
  return result;
}

unint64_t sub_92800()
{
  unint64_t result = qword_26E0C0;
  if (!qword_26E0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0C0);
  }
  return result;
}

unint64_t sub_92858()
{
  unint64_t result = qword_26E0C8;
  if (!qword_26E0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0C8);
  }
  return result;
}

unint64_t sub_928B0()
{
  unint64_t result = qword_26E0D0;
  if (!qword_26E0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0D0);
  }
  return result;
}

unint64_t sub_92908()
{
  unint64_t result = qword_26E0D8;
  if (!qword_26E0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0D8);
  }
  return result;
}

unint64_t sub_92960()
{
  unint64_t result = qword_26E0E0;
  if (!qword_26E0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0E0);
  }
  return result;
}

unint64_t sub_929B8()
{
  unint64_t result = qword_26E0E8;
  if (!qword_26E0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0E8);
  }
  return result;
}

unint64_t sub_92A10()
{
  unint64_t result = qword_26E0F0;
  if (!qword_26E0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0F0);
  }
  return result;
}

unint64_t sub_92A68()
{
  unint64_t result = qword_26E0F8;
  if (!qword_26E0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E0F8);
  }
  return result;
}

unint64_t sub_92AC0()
{
  unint64_t result = qword_26E100;
  if (!qword_26E100)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E100);
  }
  return result;
}

unint64_t sub_92B18()
{
  unint64_t result = qword_26E108;
  if (!qword_26E108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E108);
  }
  return result;
}

uint64_t sub_92B6C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73444965726E6567 && a2 == 0xE800000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x80000000002176E0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000000217700)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_92CB8(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_2553D0;
  v6._object = a2;
  unint64_t v4 = sub_1FC2D0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 5) {
    return 5;
  }
  else {
    return v4;
  }
}

uint64_t sub_92D04(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265726F63736572 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000000217720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_92E50(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656372756F73 && a2 == 0xE600000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x7265726F63736572 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_92F3C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000013 && a2 == 0x8000000000217740)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

uint64_t sub_92FC4(uint64_t a1, void *a2)
{
  v6._uint64_t countAndFlagsBits = a1;
  v3._rawValue = &off_255568;
  v6._object = a2;
  unint64_t v4 = sub_1FC2D0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

uint64_t sub_93010(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000025 && a2 == 0x8000000000217760 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000000217790 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002177C0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x80000000002177E0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_931B0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656C62616E65 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000020 && a2 == 0x8000000000217800 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000217830)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_93300(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x8000000000217850 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000217870 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x616552796C6C7566 && a2 == 0xEE0074736F6F4264 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_934D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64656E696C636564 && a2 == 0xEE00746867696557;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000000217890 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x80000000002178C0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000000002178E0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x8000000000217900 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000000217930)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_93754()
{
  unint64_t v0 = sub_1FC740();
  swift_bridgeObjectRelease();
  if (v0 >= 0x25) {
    return 37;
  }
  else {
    return v0;
  }
}

uint64_t sub_937A8(uint64_t a1, void *a2, Swift::OpaquePointer a3)
{
  v7._uint64_t countAndFlagsBits = a1;
  v7._object = a2;
  unint64_t v5 = sub_1FC2D0(a3, v7);
  swift_bridgeObjectRelease();
  if (v5 >= 0xE) {
    return 14;
  }
  else {
    return v5;
  }
}

unint64_t sub_937F0()
{
  unint64_t result = qword_26E110;
  if (!qword_26E110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E110);
  }
  return result;
}

unint64_t sub_93844()
{
  unint64_t result = qword_26E118;
  if (!qword_26E118)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E118);
  }
  return result;
}

unint64_t sub_93898()
{
  unint64_t result = qword_26E120;
  if (!qword_26E120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E120);
  }
  return result;
}

unint64_t sub_938EC()
{
  unint64_t result = qword_26E128;
  if (!qword_26E128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E128);
  }
  return result;
}

unint64_t sub_93940()
{
  unint64_t result = qword_26E130;
  if (!qword_26E130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E130);
  }
  return result;
}

unint64_t sub_93994()
{
  unint64_t result = qword_26E138;
  if (!qword_26E138)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E138);
  }
  return result;
}

unint64_t sub_939E8()
{
  unint64_t result = qword_26E140;
  if (!qword_26E140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E140);
  }
  return result;
}

void *sub_93A64(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = a2 >> 62;
  Swift::OpaquePointer v3 = _swiftEmptyArrayStorage;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a1), a1)) {
        goto LABEL_43;
      }
      uint64_t v4 = HIDWORD(a1) - (int)a1;
LABEL_6:
      if (!v4) {
        return v3;
      }
      long long v29 = _swiftEmptyArrayStorage;
      int64_t v7 = v4 & ~(v4 >> 63);
      sub_46588(0, v7, 0);
      Swift::OpaquePointer v3 = _swiftEmptyArrayStorage;
      if (v2)
      {
        if (v2 == 1) {
          uint64_t v8 = (int)a1;
        }
        else {
          uint64_t v8 = *(void *)(a1 + 16);
        }
        if (v4 < 0)
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
LABEL_44:
          __break(1u);
LABEL_45:
          __break(1u);
LABEL_46:
          __break(1u);
LABEL_47:
          __break(1u);
        }
      }
      else
      {
        if (v4 < 0) {
          goto LABEL_45;
        }
        uint64_t v8 = 0;
      }
      int v25 = v2;
      do
      {
        if (!v7)
        {
          __break(1u);
LABEL_36:
          __break(1u);
LABEL_37:
          __break(1u);
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          goto LABEL_42;
        }
        if (v2)
        {
          if (v2 == 1)
          {
            if (v8 < (int)a1 || v8 >= a1 >> 32) {
              goto LABEL_36;
            }
            uint64_t v9 = sub_1FADE0();
            if (!v9) {
              goto LABEL_46;
            }
            uint64_t v10 = v9;
            uint64_t v11 = sub_1FAE00();
            uint64_t v12 = v8 - v11;
            if (__OFSUB__(v8, v11)) {
              goto LABEL_39;
            }
          }
          else
          {
            if (v8 < *(void *)(a1 + 16)) {
              goto LABEL_38;
            }
            if (v8 >= *(void *)(a1 + 24)) {
              goto LABEL_40;
            }
            uint64_t v14 = sub_1FADE0();
            if (!v14) {
              goto LABEL_47;
            }
            uint64_t v10 = v14;
            uint64_t v15 = sub_1FAE00();
            uint64_t v12 = v8 - v15;
            if (__OFSUB__(v8, v15)) {
              goto LABEL_41;
            }
          }
          char v13 = *(unsigned char *)(v10 + v12);
        }
        else
        {
          if (v8 >= BYTE6(a2)) {
            goto LABEL_37;
          }
          uint64_t v26 = a1;
          int v27 = a2;
          __int16 v28 = WORD2(a2);
          char v13 = *((unsigned char *)&v26 + v8);
        }
        sub_12124(&qword_26D7F0);
        uint64_t v16 = swift_allocObject();
        *(_OWORD *)(v16 + 16) = xmmword_1FD2A0;
        *(void *)(v16 + 56) = &type metadata for UInt8;
        *(void *)(v16 + 64) = &protocol witness table for UInt8;
        *(unsigned char *)(v16 + 32) = v13;
        unint64_t v2 = sub_1FB840();
        uint64_t v18 = v17;
        long long v29 = v3;
        unint64_t v20 = v3[2];
        unint64_t v19 = v3[3];
        if (v20 >= v19 >> 1)
        {
          sub_46588(v19 > 1, v20 + 1, 1);
          Swift::OpaquePointer v3 = v29;
        }
        v3[2] = v20 + 1;
        uint64_t v21 = &v3[2 * v20];
        v21[4] = v2;
        v21[5] = v18;
        ++v8;
        --v7;
        --v4;
        LODWORD(v2) = v25;
      }
      while (v4);
      return v3;
    case 2uLL:
      uint64_t v6 = *(void *)(a1 + 16);
      uint64_t v5 = *(void *)(a1 + 24);
      uint64_t v4 = v5 - v6;
      if (!__OFSUB__(v5, v6)) {
        goto LABEL_6;
      }
      goto LABEL_44;
    case 3uLL:
      return v3;
    default:
      uint64_t v4 = BYTE6(a2);
      goto LABEL_6;
  }
}

uint64_t sub_93E0C()
{
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  qword_2A5BC0 = result;
  return result;
}

uint64_t sub_93E78(uint64_t a1, unint64_t a2)
{
  uint64_t v6 = sub_1FBB40();
  *(void *)(v6 + 16) = 32;
  *(_OWORD *)(v6 + 32) = 0u;
  *(_OWORD *)(v6 + 48) = 0u;
  long long v42 = (void *)v6;
  switch(a2 >> 62)
  {
    case 1uLL:
      if (a1 >> 32 < (int)a1) {
        __break(1u);
      }
      sub_52090(a1, a2);
      sub_94658((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a1, a2, &v42);
      uint64_t v10 = v3;
      break;
    case 2uLL:
      uint64_t v8 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      sub_52090(a1, a2);
      swift_retain();
      swift_retain();
      sub_94658(v8, v9, a2 & 0x3FFFFFFFFFFFFFFFLL, a1, a2, &v42);
      if (v3) {
        goto LABEL_18;
      }
      uint64_t v10 = 0;
      swift_release();
      swift_release();
      break;
    case 3uLL:
      *(void *)((char *)&v41 + 6) = 0;
      *(void *)&long long v41 = 0;
      int64_t v7 = (char *)&v41;
      goto LABEL_6;
    default:
      *(void *)&long long v41 = a1;
      WORD4(v41) = a2;
      BYTE10(v41) = BYTE2(a2);
      BYTE11(v41) = BYTE3(a2);
      BYTE12(v41) = BYTE4(a2);
      BYTE13(v41) = BYTE5(a2);
      int64_t v7 = (char *)&v41 + BYTE6(a2);
LABEL_6:
      sub_944B8(&v41, (uint64_t)v7, a1, a2, &v42);
      if (v3)
      {
        sub_520E8(a1, a2);
        sub_520E8(a1, a2);
        __break(1u);
LABEL_18:
        swift_release();
        swift_release();
        __break(1u);
        JUMPOUT(0x944A8);
      }
      uint64_t v10 = 0;
      sub_520E8(a1, a2);
      sub_520E8(a1, a2);
      break;
  }
  long long v39 = v2;
  uint64_t v11 = sub_947EC((unsigned char *)v42 + 32, v42[2]);
  unint64_t v13 = v12;
  if (qword_26C308 != -1) {
    swift_once();
  }
  sub_1FBD90();
  sub_12124(&qword_26D7F0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1FD2A0;
  uint64_t v15 = v10;
  *(void *)&long long v41 = sub_93A64(v11, v13);
  sub_12124(&qword_26C6D8);
  sub_948A0();
  uint64_t v16 = sub_1FB7B0();
  uint64_t v17 = v11;
  unint64_t v18 = v13;
  uint64_t v20 = v19;
  swift_bridgeObjectRelease();
  *(void *)(v14 + 56) = &type metadata for String;
  unint64_t v21 = sub_5FD80();
  *(void *)(v14 + 64) = v21;
  *(void *)(v14 + 32) = v16;
  *(void *)(v14 + 40) = v20;
  sub_1FB400();
  swift_bridgeObjectRelease();
  uint64_t v22 = v39[5];
  uint64_t v23 = v39[6];
  sub_5D64(v39 + 2, v22);
  uint64_t v24 = (*(uint64_t (**)(uint64_t, unint64_t, uint64_t, uint64_t))(v23 + 8))(v17, v18, v22, v23);
  uint64_t v26 = (uint64_t)v15;
  if (v15)
  {
    sub_520E8(v17, v18);
    swift_bridgeObjectRelease();
    sub_1FBDA0();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1FD2A0;
    *(void *)&long long v41 = 0;
    *((void *)&v41 + 1) = 0xE000000000000000;
    long long v42 = v15;
    sub_12124(&qword_26D670);
    sub_1FC1D0();
    long long v28 = v41;
    *(void *)(v27 + 56) = &type metadata for String;
    *(void *)(v27 + 64) = v21;
    *(_OWORD *)(v27 + 32) = v28;
    sub_1FB400();
    swift_bridgeObjectRelease();
    swift_willThrow();
  }
  else
  {
    uint64_t v29 = v24;
    unint64_t v30 = v25;
    sub_1FBD90();
    unint64_t v40 = v18;
    uint64_t v31 = swift_allocObject();
    *(_OWORD *)(v31 + 16) = xmmword_1FD2A0;
    *(void *)&long long v41 = sub_93A64(v29, v30);
    uint64_t v32 = sub_1FB7B0();
    uint64_t v34 = v33;
    swift_bridgeObjectRelease();
    *(void *)(v31 + 56) = &type metadata for String;
    *(void *)(v31 + 64) = v21;
    *(void *)(v31 + 32) = v32;
    *(void *)(v31 + 40) = v34;
    sub_1FB400();
    swift_bridgeObjectRelease();
    uint64_t v26 = sub_1FAFD0(0);
    uint64_t v36 = v35;
    sub_1FBD90();
    uint64_t v37 = swift_allocObject();
    *(_OWORD *)(v37 + 16) = xmmword_1FD2A0;
    *(void *)(v37 + 56) = &type metadata for String;
    *(void *)(v37 + 64) = v21;
    *(void *)(v37 + 32) = v26;
    *(void *)(v37 + 40) = v36;
    swift_bridgeObjectRetain();
    sub_1FB400();
    swift_bridgeObjectRelease();
    sub_520E8(v29, v30);
    sub_520E8(v17, v40);
    swift_bridgeObjectRelease();
  }
  return v26;
}

unsigned __int8 *sub_944B8(const void *a1, uint64_t a2, uint64_t a3, unint64_t a4, void **a5)
{
  LODWORD(v7) = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      if (__OFSUB__(HIDWORD(a3), a3))
      {
        __break(1u);
LABEL_12:
        __break(1u);
LABEL_13:
        sub_1FC210();
        __break(1u);
        JUMPOUT(0x94624);
      }
      unint64_t v7 = HIDWORD(a3) - (int)a3;
LABEL_6:
      if ((v7 & 0x8000000000000000) != 0 || HIDWORD(v7)) {
        goto LABEL_13;
      }
LABEL_8:
      uint64_t v10 = *a5;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *a5 = v10;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t v10 = sub_41F3C(0, v10[2], 0, v10);
      }
      *a5 = v10;
      return CC_SHA256(a1, v7, (unsigned __int8 *)v10 + 32);
    case 2uLL:
      uint64_t v9 = *(void *)(a3 + 16);
      uint64_t v8 = *(void *)(a3 + 24);
      unint64_t v7 = v8 - v9;
      if (!__OFSUB__(v8, v9)) {
        goto LABEL_6;
      }
      goto LABEL_12;
    case 3uLL:
      goto LABEL_8;
    default:
      LODWORD(v7) = BYTE6(a4);
      goto LABEL_8;
  }
}

uint64_t type metadata accessor for SHA256Base64SigningService()
{
  return self;
}

uint64_t sub_94658(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5, void **a6)
{
  uint64_t result = sub_1FADE0();
  unint64_t v12 = (char *)result;
  if (result)
  {
    uint64_t result = sub_1FAE00();
    if (__OFSUB__(a1, result))
    {
LABEL_13:
      __break(1u);
      return result;
    }
    v12 += a1 - result;
  }
  BOOL v13 = __OFSUB__(a2, a1);
  uint64_t v14 = a2 - a1;
  if (v13)
  {
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v15 = sub_1FADF0();
  if (v15 >= v14) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v15;
  }
  uint64_t v17 = &v12[v16];
  if (v12) {
    uint64_t v18 = (uint64_t)v17;
  }
  else {
    uint64_t v18 = 0;
  }
  sub_944B8(v12, v18, a4, a5, a6);
  return sub_520E8(a4, a5);
}

uint64_t sub_94728(unsigned char *__src, unsigned char *a2)
{
  if (__src) {
    unint64_t v2 = a2 - __src;
  }
  else {
    unint64_t v2 = 0;
  }
  if ((v2 & 0x8000000000000000) != 0)
  {
    __break(1u);
LABEL_11:
    __break(1u);
  }
  if (v2 > 0xFF) {
    goto LABEL_11;
  }
  memset(__dst, 0, sizeof(__dst));
  char v5 = v2;
  if (__src && a2 != __src) {
    memcpy(__dst, __src, a2 - __src);
  }
  return *(void *)__dst;
}

uint64_t sub_947EC(unsigned char *__src, uint64_t a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 <= 14) {
    return sub_94728(__src, &__src[a2]);
  }
  sub_1FAE10();
  swift_allocObject();
  sub_1FADD0();
  if ((unint64_t)a2 < 0x7FFFFFFF) {
    return a2 << 32;
  }
  sub_1FAFB0();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = 0;
  *(void *)(result + 24) = a2;
  return result;
}

unint64_t sub_948A0()
{
  unint64_t result = qword_26D158;
  if (!qword_26D158)
  {
    sub_121C4(&qword_26C6D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D158);
  }
  return result;
}

unint64_t sub_948FC()
{
  unint64_t result = qword_26E1E8;
  if (!qword_26E1E8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_26E1E8);
  }
  return result;
}

uint64_t sub_9493C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v3 = type metadata accessor for DelegatingMediaTypesRecommendationService();
  uint64_t result = sub_1FB250();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&off_262100;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_949B0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_94BB0(a1, &qword_26D138, (uint64_t (*)(void))type metadata accessor for SingleJointMediaTypeRecommendationService, (uint64_t (*)(char *, uint64_t))sub_37C30, (uint64_t)&off_263BA0, a2);
}

uint64_t sub_949EC()
{
  type metadata accessor for DelegatingMediaTypesRecommendationService();
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = _swiftEmptyDictionarySingleton;
  sub_12124(&qword_26E2A0);
  sub_1FB880();
  sub_1FB420();
  return v0;
}

uint64_t sub_94A94@<X0>(uint64_t *a1@<X8>)
{
  return sub_94ABC((uint64_t)&off_256490, (uint64_t)&off_2564B8, a1);
}

uint64_t sub_94AA8@<X0>(uint64_t *a1@<X8>)
{
  return sub_94ABC((uint64_t)&off_2564E0, (uint64_t)&off_256508, a1);
}

uint64_t sub_94ABC@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t *a3@<X8>)
{
  sub_12124(&qword_26E298);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2055D0;
  *(unsigned char *)(inited + 32) = 0;
  *(void *)(inited + 40) = sub_BD5F4(a1);
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_BD5F4(a2);
  unint64_t v7 = sub_16123C(inited);
  uint64_t v8 = type metadata accessor for HardcodedMediaTypesRecommendationService();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v7;
  a3[3] = v8;
  a3[4] = (uint64_t)&off_25DC38;
  *a3 = result;
  return result;
}

uint64_t sub_94B74@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_94BB0(a1, &qword_26E290, (uint64_t (*)(void))type metadata accessor for InterestBasedMediaTypesRecommendationService, (uint64_t (*)(char *, uint64_t))sub_37C30, (uint64_t)&off_25F6E8, a2);
}

uint64_t sub_94BB0@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(a2);
  uint64_t result = sub_1FB260();
  if (v15)
  {
    uint64_t v12 = a3(0);
    uint64_t v13 = swift_allocObject();
    uint64_t result = a4(v14, v13 + 16);
    a6[3] = v12;
    a6[4] = a5;
    *a6 = v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_94C74(uint64_t a1, void *a2)
{
  sub_12124(&qword_26E288);
  unint64_t v4 = 0;
  char v5 = (void *)(a1 + 16);
  do
  {
    if (v4 >= 4)
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      sub_1FC770();
      __break(1u);
      JUMPOUT(0x94F4CLL);
    }
    unsigned __int8 v8 = *((unsigned char *)&off_256530 + v4++ + 32);
    sub_5D64(a2, a2[3]);
    sub_1FB240();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_21;
    }
    sub_37C30(&v24, (uint64_t)v26);
    swift_beginAccess();
    sub_51B70((uint64_t)v26, (uint64_t)&v24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = (void *)*v5;
    uint64_t v23 = (void *)*v5;
    *char v5 = 0x8000000000000000;
    unint64_t v12 = sub_4C58C(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_19;
    }
    char v16 = v11;
    if (v10[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v23;
        if (v11) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_1212CC();
        uint64_t v19 = v23;
        if (v16) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_1187F8(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_4C58C(v8);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_22;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v23;
      if (v16)
      {
LABEL_2:
        uint64_t v6 = v19[7] + 40 * v12;
        sub_1264C(v6);
        sub_37C30(&v24, v6);
        goto LABEL_3;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    sub_37C30(&v24, v19[7] + 40 * v12);
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_20;
    }
    v19[2] = v22;
LABEL_3:
    *char v5 = v19;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = sub_1264C((uint64_t)v26);
  }
  while (v4 != 4);
  return result;
}

uint64_t type metadata accessor for MediaTypesRecommendationServiceAssembly()
{
  return self;
}

uint64_t sub_94F84(uint64_t a1)
{
  uint64_t v2 = sub_1FB270();
  uint64_t v23 = *(void *)(v2 - 8);
  uint64_t v24 = v2;
  __chkstk_darwin(v2);
  uint64_t v22 = (char *)&v19 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1FB350();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB280();
  sub_12124(&qword_26E288);
  sub_1FB310();
  swift_release();
  uint64_t v8 = enum case for Scope.singleton(_:);
  uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  unsigned int v26 = enum case for Scope.singleton(_:);
  v9(v7, enum case for Scope.singleton(_:), v4);
  uint64_t v20 = v9;
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v25 = *(void (**)(char *, uint64_t))(v5 + 8);
  v25(v7, v4);
  uint64_t v27 = a1;
  sub_1FB280();
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v10 = v25;
  v25(v7, v4);
  sub_1FB280();
  uint64_t v21 = type metadata accessor for DelegatingMediaTypesRecommendationService();
  sub_1FB300();
  swift_release();
  uint64_t v11 = v26;
  unint64_t v12 = v20;
  v20(v7, v26, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  sub_1FB310();
  swift_release();
  v12(v7, v11, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v13 = v25;
  v25(v7, v4);
  sub_1FB290();
  sub_1FB310();
  swift_release();
  uint64_t v14 = v26;
  v12(v7, v26, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_1FB310();
  swift_release();
  v12(v7, v14, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB2A0();
  sub_5D64(v28, v28[3]);
  char v16 = v22;
  uint64_t v15 = v23;
  uint64_t v17 = v24;
  (*(void (**)(char *, void, uint64_t))(v23 + 104))(v22, enum case for CallbackScope.any(_:), v24);
  sub_1FB320();
  (*(void (**)(char *, uint64_t))(v15 + 8))(v16, v17);
  return sub_1264C((uint64_t)v28);
}

uint64_t sub_95534(uint64_t a1)
{
  return a1;
}

uint64_t Array.split(maxSubsequenceSize:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1)
  {
    v17[7] = 0;
    uint64_t v18 = sub_1FBB60();
    uint64_t v19 = a1;
    __chkstk_darwin(v18);
    v17[2] = a3;
    v17[3] = a1;
    v17[4] = a2;
    uint64_t v6 = sub_12124(&qword_26E2A8);
    unint64_t v7 = (char *)sub_1FBF40();
    unint64_t v8 = sub_96088();
    return sub_956AC((void (*)(char *, char *))sub_96064, (uint64_t)v17, v6, v7, (uint64_t)&type metadata for Never, v8, (uint64_t)&protocol witness table for Never, v9);
  }
  else
  {
    sub_1FBF40();
    sub_1FC590();
    swift_allocObject();
    uint64_t v10 = sub_1FBB00();
    unint64_t v12 = v11;
    *uint64_t v11 = sub_1FBF30();
    v12[1] = v13;
    void v12[2] = v14;
    v12[3] = v15;
    sub_1FBBA0();
  }
  return v10;
}

uint64_t sub_956AC(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v43 = a8;
  uint64_t v44 = a5;
  uint64_t v9 = v8;
  uint64_t v58 = a2;
  int v59 = a4;
  int v57 = a1;
  uint64_t v42 = *(void *)(a5 - 8);
  uint64_t v11 = __chkstk_darwin(a1);
  uint64_t v55 = (char *)&v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  long long v53 = (char *)&v40 - v13;
  uint64_t v15 = v14;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v54 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  long long v41 = (char *)&v40 - v17;
  uint64_t v18 = sub_1FBEB0();
  uint64_t v45 = *(void *)(v18 - 8);
  uint64_t v46 = v18;
  uint64_t v19 = __chkstk_darwin(v18);
  long long v51 = (char *)&v40 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v40 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  unint64_t v40 = (char *)&v40 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v50 = *((void *)v15 - 1);
  __chkstk_darwin(v26);
  long long v28 = (char *)&v40 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = a6;
  long long v52 = v15;
  uint64_t v60 = swift_getAssociatedTypeWitness();
  uint64_t v47 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  unint64_t v30 = (char *)&v40 - v29;
  Swift::Int v31 = sub_1FB9A0();
  uint64_t v61 = sub_1FC1B0();
  uint64_t v56 = sub_1FC1C0();
  sub_1FC170(v31);
  (*(void (**)(char *, uint64_t, void))(v50 + 16))(v28, v48, v52);
  int v59 = v30;
  uint64_t result = sub_1FB980();
  if (v31 < 0)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    return result;
  }
  if (v31)
  {
    uint64_t v33 = (uint64_t (**)(char *, uint64_t, uint64_t))(v54 + 48);
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v54 + 8);
    swift_getAssociatedConformanceWitness();
    while (1)
    {
      sub_1FBEC0();
      uint64_t result = (*v33)(v23, 1, AssociatedTypeWitness);
      if (result == 1) {
        goto LABEL_18;
      }
      v57(v23, v55);
      if (v9)
      {
        (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
        swift_release();
        (*(void (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v55, v44);
        return (*v34)(v23, AssociatedTypeWitness);
      }
      uint64_t v9 = 0;
      (*v34)(v23, AssociatedTypeWitness);
      sub_1FC1A0();
      if (!--v31)
      {
        uint64_t v35 = v54;
        uint64_t v36 = v51;
        goto LABEL_9;
      }
    }
  }
  swift_getAssociatedConformanceWitness();
  uint64_t v35 = v54;
  uint64_t v36 = v51;
LABEL_9:
  sub_1FBEC0();
  uint64_t v55 = *(char **)(v35 + 48);
  if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v36, 1, AssociatedTypeWitness) == 1)
  {
    uint64_t v37 = v51;
LABEL_14:
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    (*(void (**)(char *, uint64_t))(v45 + 8))(v37, v46);
    return v61;
  }
  else
  {
    long long v52 = *(void (**)(char *, char *, uint64_t))(v35 + 32);
    uint64_t v54 = v35 + 32;
    long long v38 = (void (**)(char *, uint64_t))(v35 + 8);
    long long v39 = v41;
    uint64_t v37 = v51;
    while (1)
    {
      v52(v39, v37, AssociatedTypeWitness);
      v57(v39, v53);
      if (v9) {
        break;
      }
      uint64_t v9 = 0;
      (*v38)(v39, AssociatedTypeWitness);
      sub_1FC1A0();
      sub_1FBEC0();
      if (((unsigned int (*)(char *, uint64_t, uint64_t))v55)(v37, 1, AssociatedTypeWitness) == 1) {
        goto LABEL_14;
      }
    }
    (*v38)(v39, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v47 + 8))(v59, v60);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v42 + 32))(v43, v53, v44);
  }
}

int64x2_t *sub_95DA8(unint64_t a1, unint64_t a2)
{
  if ((a2 & 0x8000000000000000) != 0)
  {
    uint64_t result = (int64x2_t *)sub_1FC210();
    __break(1u);
    return result;
  }
  if (!a2) {
    return (int64x2_t *)_swiftEmptyArrayStorage;
  }
  uint64_t result = (int64x2_t *)sub_1FBB40();
  result[1].i64[0] = a2;
  uint64_t v5 = (unint64_t *)&result[2];
  if (a2 < 4)
  {
    unint64_t v6 = 0;
LABEL_9:
    unint64_t v10 = a2 - v6;
    do
    {
      *v5++ = a1;
      --v10;
    }
    while (v10);
    return result;
  }
  unint64_t v6 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  v5 += a2 & 0xFFFFFFFFFFFFFFFCLL;
  int64x2_t v7 = vdupq_n_s64(a1);
  uint64_t v8 = result + 3;
  unint64_t v9 = a2 & 0xFFFFFFFFFFFFFFFCLL;
  do
  {
    v8[-1] = v7;
    *uint64_t v8 = v7;
    v8 += 2;
    v9 -= 4;
  }
  while (v9);
  if (v6 != a2) {
    goto LABEL_9;
  }
  return result;
}

void *sub_95E94(uint64_t a1, uint64_t a2)
{
  if (a2 < 0)
  {
    uint64_t result = (void *)sub_1FC210();
    __break(1u);
  }
  else
  {
    if (a2)
    {
      uint64_t v4 = sub_1FBB40();
      uint64_t v5 = v4;
      *(void *)(v4 + 16) = a2;
      *(_OWORD *)(v4 + 32) = *(_OWORD *)a1;
      long long v7 = *(_OWORD *)(a1 + 32);
      long long v6 = *(_OWORD *)(a1 + 48);
      long long v8 = *(_OWORD *)(a1 + 16);
      *(void *)(v4 + 96) = *(void *)(a1 + 64);
      *(_OWORD *)(v4 + 64) = v7;
      *(_OWORD *)(v4 + 80) = v6;
      *(_OWORD *)(v4 + 48) = v8;
      if (a2 != 1)
      {
        *(_OWORD *)(v4 + 104) = *(_OWORD *)a1;
        long long v9 = *(_OWORD *)(a1 + 16);
        long long v10 = *(_OWORD *)(a1 + 32);
        long long v11 = *(_OWORD *)(a1 + 48);
        *(void *)(v4 + 168) = *(void *)(a1 + 64);
        *(_OWORD *)(v4 + 152) = v11;
        *(_OWORD *)(v4 + 136) = v10;
        *(_OWORD *)(v4 + 120) = v9;
        uint64_t v12 = a2 - 2;
        if (v12)
        {
          uint64_t v13 = v4 + 176;
          do
          {
            sub_986E4(a1);
            *(_OWORD *)uint64_t v13 = *(_OWORD *)a1;
            long long v15 = *(_OWORD *)(a1 + 32);
            long long v14 = *(_OWORD *)(a1 + 48);
            long long v16 = *(_OWORD *)(a1 + 16);
            *(void *)(v13 + 64) = *(void *)(a1 + 64);
            *(_OWORD *)(v13 + 32) = v15;
            *(_OWORD *)(v13 + 48) = v14;
            *(_OWORD *)(v13 + 16) = v16;
            v13 += 72;
            --v12;
          }
          while (v12);
        }
        sub_986E4(a1);
      }
    }
    else
    {
      sub_98738(a1);
      return _swiftEmptyArrayStorage;
    }
    return (void *)v5;
  }
  return result;
}

uint64_t *sub_95FDC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X1>, uint64_t **a3@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *result + a2;
  if (__OFADD__(*result, a2))
  {
    __break(1u);
  }
  else
  {
    uint64_t result = (uint64_t *)sub_1FBB60();
    if ((uint64_t)result >= v4) {
      long long v6 = (void *)v4;
    }
    else {
      long long v6 = result;
    }
    if ((uint64_t)v6 >= v3)
    {
      uint64_t result = (uint64_t *)sub_1FBBC0();
      *a3 = result;
      a3[1] = v7;
      a3[2] = v8;
      a3[3] = v9;
      return result;
    }
  }
  __break(1u);
  return result;
}

uint64_t *sub_96064@<X0>(uint64_t *a1@<X0>, uint64_t **a2@<X8>)
{
  return sub_95FDC(a1, *(void *)(v2 + 24), a2);
}

unint64_t sub_96088()
{
  unint64_t result = qword_26E2B0;
  if (!qword_26E2B0)
  {
    sub_121C4(&qword_26E2A8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E2B0);
  }
  return result;
}

uint64_t Array.compactMapped<A>(by:)()
{
  sub_1FBBA0();
  sub_1FB6B0();
  sub_1FB770();
  swift_getWitnessTable();
  sub_1FB9F0();
  return v1;
}

uint64_t sub_961D0(uint64_t *a1, void *a2, void (*a3)(void *), uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  long long v52 = a3;
  uint64_t v48 = a7;
  uint64_t v49 = a5;
  uint64_t v50 = a1;
  uint64_t v46 = *(char **)(a5 - 8);
  __chkstk_darwin(a1);
  long long v51 = (char *)v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1FBEB0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  long long v14 = (char *)v43 - v13;
  uint64_t v15 = *(void *)(a6 - 8);
  uint64_t v16 = __chkstk_darwin(v12);
  uint64_t v45 = (char *)v43 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v20 = (char *)v43 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)v43 - v21;
  uint64_t v47 = a2;
  v52(a2);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v14, 1, a6) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v14, v10);
  }
  (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v22, v14, a6);
  uint64_t v44 = v15;
  v43[0] = *(void *)(v15 + 16);
  v43[1] = v15 + 16;
  ((void (*)(char *, char *, uint64_t))v43[0])(v20, v22, a6);
  uint64_t v24 = (void *)swift_allocObject();
  uint64_t v25 = v49;
  uint64_t v26 = v50;
  v24[2] = v49;
  v24[3] = a6;
  uint64_t v27 = v47;
  uint64_t v28 = v48;
  v24[4] = v48;
  (*((void (**)(char *, void *, uint64_t))v46 + 2))(v51, v27, v25);
  uint64_t v29 = (void *)swift_allocObject();
  v29[2] = v25;
  v29[3] = a6;
  v29[4] = v28;
  v29[5] = sub_98BB8;
  uint64_t v47 = v24;
  v29[6] = v24;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *v26;
  uint64_t v31 = v53;
  *uint64_t v26 = 0x8000000000000000;
  long long v52 = (void (*)(void *))v20;
  sub_19E424((uint64_t)v20, a6, v28);
  uint64_t v33 = *(void *)(v31 + 16);
  BOOL v34 = (v32 & 1) == 0;
  Swift::Int v35 = v33 + v34;
  if (__OFADD__(v33, v34))
  {
    __break(1u);
LABEL_11:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  char v36 = v32;
  uint64_t v46 = v22;
  sub_1FBBA0();
  sub_1FC200();
  BOOL v37 = sub_1FC1E0(isUniquelyReferenced_nonNull_native, v35);
  uint64_t v38 = v53;
  if (v37)
  {
    sub_19E424((uint64_t)v52, a6, v28);
    if ((v36 & 1) != (v39 & 1)) {
      goto LABEL_11;
    }
  }
  *uint64_t v50 = v38;
  swift_bridgeObjectRelease();
  if (v36)
  {
    swift_bridgeObjectRetain();
    unint64_t v40 = (void (*)(void))v52;
  }
  else
  {
    uint64_t v41 = swift_bridgeObjectRetain();
    uint64_t v53 = ((uint64_t (*)(uint64_t))v29[5])(v41);
    unint64_t v40 = (void (*)(void))v52;
    ((void (*)(char *, void (*)(void *), uint64_t))v43[0])(v45, v52, a6);
    sub_1FC1F0();
  }
  swift_bridgeObjectRelease();
  sub_1FBB70();
  uint64_t v42 = *(void (**)(void (*)(void), uint64_t))(v44 + 8);
  v42(v40, a6);
  v42((void (*)(void))v46, a6);
  swift_release();
  return swift_release();
}

uint64_t Array.compactMapAsync<A>(_:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[6] = a4;
  v5[7] = a5;
  v5[4] = a2;
  v5[5] = a3;
  v5[3] = a1;
  return _swift_task_switch(sub_966B4, 0, 0);
}

uint64_t sub_966B4()
{
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v3 = *(void *)(v0 + 40);
  swift_getTupleTypeMetadata2();
  uint64_t v4 = sub_1FBEB0();
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 64) = v5;
  long long v6 = *(_OWORD *)(v0 + 24);
  *(void *)(v5 + 16) = v2;
  *(void *)(v5 + 24) = v1;
  *(void *)(v5 + 32) = v3;
  *(_OWORD *)(v5 + 40) = v6;
  uint64_t v7 = sub_1FBBA0();
  long long v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v8;
  *long long v8 = v0;
  v8[1] = sub_967F8;
  return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v4, v7, 0, 0, &unk_26E2C8, v5, v4);
}

uint64_t sub_967F8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_96910, 0, 0);
}

uint64_t sub_96910()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

uint64_t sub_9692C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[16] = a6;
  v7[17] = a7;
  v7[14] = a4;
  v7[15] = a5;
  v7[12] = a2;
  v7[13] = a3;
  v7[11] = a1;
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  v7[18] = TupleTypeMetadata2;
  v7[19] = *(void *)(TupleTypeMetadata2 - 8);
  v7[20] = swift_task_alloc();
  v7[21] = swift_task_alloc();
  v7[22] = swift_task_alloc();
  uint64_t v10 = sub_1FBEB0();
  v7[23] = v10;
  v7[24] = *(void *)(v10 - 8);
  v7[25] = swift_task_alloc();
  uint64_t v11 = *(void *)(a6 - 8);
  v7[26] = v11;
  v7[27] = *(void *)(v11 + 64);
  v7[28] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v7[29] = swift_task_alloc();
  sub_1FBEB0();
  v7[30] = swift_task_alloc();
  uint64_t v12 = sub_1FBC30();
  v7[31] = v12;
  v7[32] = *(void *)(v12 - 8);
  v7[33] = swift_task_alloc();
  v7[34] = swift_getTupleTypeMetadata2();
  uint64_t v13 = sub_1FBEB0();
  v7[35] = v13;
  v7[36] = *(void *)(v13 - 8);
  v7[37] = swift_task_alloc();
  v7[38] = swift_task_alloc();
  return _swift_task_switch(sub_96C50, 0, 0);
}

uint64_t sub_96C50()
{
  uint64_t v1 = *(void *)(v0 + 288);
  uint64_t v2 = *(void *)(v0 + 272);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v3 = *(void *)(v0 + 216);
  *(void *)(v0 + 48) = *(void *)(v0 + 104);
  sub_1FBBA0();
  swift_getWitnessTable();
  sub_1FB9D0();
  *(void *)(v0 + 56) = *(void *)(v0 + 40);
  sub_1FC260();
  sub_1FC230();
  uint64_t v23 = v4;
  uint64_t v24 = v2;
  uint64_t v25 = v2 - 8;
  uint64_t v26 = (void (**)(uint64_t, uint64_t, uint64_t))(v1 + 32);
  uint64_t v22 = v3 + 7;
  sub_1FC250();
  while (1)
  {
    uint64_t v6 = *(void *)(v0 + 296);
    uint64_t v5 = *(void *)(v0 + 304);
    uint64_t v8 = *(void *)(v0 + 272);
    uint64_t v7 = *(void *)(v0 + 280);
    sub_1FC240();
    (*v26)(v5, v6, v7);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)v25 + 48))(v5, 1, v8) == 1) {
      break;
    }
    uint64_t v9 = *(uint64_t **)(v0 + 304);
    uint64_t v11 = *(char **)(v0 + 224);
    uint64_t v10 = *(void *)(v0 + 232);
    uint64_t v27 = *(void *)(v0 + 112);
    uint64_t v28 = *(void *)(v0 + 120);
    uint64_t v29 = *v9;
    uint64_t v12 = (char *)v9 + *(int *)(v24 + 48);
    uint64_t v13 = sub_1FBC60();
    long long v30 = *(_OWORD *)(v0 + 128);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v10, 1, 1, v13);
    long long v14 = *(void (**)(char *, char *, void))(v23 + 32);
    v14(v11, v12, v30);
    unint64_t v15 = (*(unsigned __int8 *)(v23 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = 0;
    *(void *)(v16 + 24) = 0;
    *(_OWORD *)(v16 + 32) = v30;
    *(void *)(v16 + 48) = v27;
    *(void *)(v16 + 56) = v28;
    v14((char *)(v16 + v15), v11, v30);
    *(void *)(v16 + ((v22 + v15) & 0xFFFFFFFFFFFFFFF8)) = v29;
    uint64_t v17 = sub_1FBC40();
    swift_retain();
    sub_97A94(v10, (uint64_t)&unk_26E2D8, v16, v17);
    sub_989E0(v10);
  }
  swift_bridgeObjectRelease();
  *(void *)(v0 + 64) = sub_1FB6C0();
  sub_1FBC10();
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v0 + 312) = v18;
  *uint64_t v18 = v0;
  v18[1] = sub_96FC4;
  uint64_t v19 = *(void *)(v0 + 240);
  uint64_t v20 = *(void *)(v0 + 248);
  return TaskGroup.Iterator.next(isolation:)(v19, 0, 0, v20);
}

uint64_t sub_96FC4()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_970C0, 0, 0);
}

uint64_t sub_970C0()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[23];
  uint64_t v3 = v0[24];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v1, 1, v2) == 1)
  {
    uint64_t v4 = v0[17];
    uint64_t v5 = v0[16];
    char v32 = (uint64_t *)v0[11];
    (*(void (**)(void, void))(v0[32] + 8))(v0[33], v0[31]);
    v0[9] = v0[8];
    uint64_t v6 = swift_task_alloc();
    *(void *)(v6 + 16) = v5;
    *(void *)(v6 + 24) = v4;
    uint64_t v7 = sub_1FBBA0();
    swift_bridgeObjectRetain();
    swift_getWitnessTable();
    uint64_t v8 = sub_1FBA00();
    swift_task_dealloc();
    swift_bridgeObjectRelease();
    v0[10] = v8;
    uint64_t v9 = swift_task_alloc();
    *(void *)(v9 + 16) = v5;
    *(void *)(v9 + 24) = v4;
    uint64_t WitnessTable = swift_getWitnessTable();
    uint64_t v12 = sub_13874C((void (*)(char *, char *))sub_987A0, v9, v7, v4, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    *char v32 = v12;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  else
  {
    uint64_t v15 = v0[25];
    uint64_t v16 = v0[18];
    uint64_t v17 = v0[19];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v15, v1, v2);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) != 1)
    {
      uint64_t v18 = (uint64_t *)v0[25];
      uint64_t v19 = (void *)v0[21];
      uint64_t v33 = (void *)v0[20];
      BOOL v34 = (uint64_t *)v0[22];
      uint64_t v20 = v0[18];
      uint64_t v35 = v0[19];
      uint64_t v21 = v0[17];
      uint64_t v22 = *(int *)(v20 + 48);
      uint64_t v23 = (char *)v34 + v22;
      uint64_t v24 = *v18;
      *BOOL v34 = *v18;
      uint64_t v25 = *(void *)(v21 - 8);
      uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v25 + 32);
      v26((char *)v34 + v22, (char *)v18 + v22, v21);
      uint64_t v27 = (char *)v19 + *(int *)(v20 + 48);
      void *v19 = v24;
      (*(void (**)(char *, char *, uint64_t))(v25 + 16))(v27, v23, v21);
      uint64_t v28 = (char *)v33 + *(int *)(v20 + 48);
      *uint64_t v33 = v24;
      v26(v28, v27, v21);
      sub_1FBBA0();
      sub_1FBB70();
      (*(void (**)(uint64_t *, uint64_t))(v35 + 8))(v34, v20);
    }
    uint64_t v29 = (void *)swift_task_alloc();
    v0[39] = v29;
    void *v29 = v0;
    v29[1] = sub_96FC4;
    uint64_t v30 = v0[30];
    uint64_t v31 = v0[31];
    return TaskGroup.Iterator.next(isolation:)(v30, 0, 0, v31);
  }
}

uint64_t sub_97514(uint64_t a1, uint64_t a2, uint64_t a3, int *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[3] = a7;
  v7[4] = v16;
  v7[2] = a1;
  uint64_t v10 = sub_1FBEB0();
  v7[5] = v10;
  v7[6] = *(void *)(v10 - 8);
  uint64_t v11 = swift_task_alloc();
  v7[7] = v11;
  v7[8] = *(void *)(v16 - 8);
  v7[9] = swift_task_alloc();
  long long v14 = (uint64_t (*)(uint64_t, uint64_t))((char *)a4 + *a4);
  uint64_t v12 = (void *)swift_task_alloc();
  v7[10] = v12;
  void *v12 = v7;
  v12[1] = sub_976C8;
  return v14(v11, a6);
}

uint64_t sub_976C8()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_97998;
  }
  else
  {
    uint64_t v1 = sub_977E0;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_977E0()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[4];
  int v4 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v2 + 48))(v1, 1, v3);
  uint64_t v5 = (void *)v0[2];
  if (v4 == 1)
  {
    (*(void (**)(uint64_t, void))(v0[6] + 8))(v1, v0[5]);
    TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
    (*(void (**)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v5, 1, 1, TupleTypeMetadata2);
  }
  else
  {
    uint64_t v7 = (char *)v0[9];
    uint64_t v8 = v0[3];
    uint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v2 + 32);
    v9(v7, v1, v3);
    uint64_t v10 = swift_getTupleTypeMetadata2();
    uint64_t v11 = (char *)v5 + *(int *)(v10 + 48);
    *uint64_t v5 = v8;
    v9(v11, (uint64_t)v7, v3);
    (*(void (**)(void *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v5, 0, 1, v10);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v12 = (uint64_t (*)(void))v0[1];
  return v12();
}

uint64_t sub_97998()
{
  (*(void (**)(void, uint64_t, uint64_t, void))(v0[8] + 56))(v0[7], 1, 1, v0[4]);
  uint64_t v1 = v0[2];
  (*(void (**)(void, void))(v0[6] + 8))(v0[7], v0[5]);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(v1, 1, 1, TupleTypeMetadata2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_97A94(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v10 = sub_12124(&qword_26D908);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98A40(a1, (uint64_t)v12);
  uint64_t v13 = sub_1FBC60();
  uint64_t v14 = *(void *)(v13 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v14 + 48))(v12, 1, v13) == 1)
  {
    sub_989E0((uint64_t)v12);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v15 = sub_1FBBD0();
      uint64_t v17 = v16;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1FBC50();
    (*(void (**)(char *, uint64_t))(v14 + 8))(v12, v13);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v15 = 0;
  uint64_t v17 = 0;
LABEL_6:
  uint64_t v18 = *v5;
  uint64_t v19 = (void *)swift_allocObject();
  v19[2] = *(void *)(a4 + 16);
  v19[3] = a2;
  v19[4] = a3;
  uint64_t v20 = (void *)(v17 | v15);
  if (v17 | v15)
  {
    v23[0] = 0;
    v23[1] = 0;
    uint64_t v20 = v23;
    v23[2] = v15;
    v23[3] = v17;
  }
  v22[1] = 1;
  __int16 v22[2] = v20;
  v22[3] = v18;
  swift_task_create();
  return swift_release();
}

uint64_t sub_97C94@<X0>(uint64_t a1@<X0>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v8 = *(int *)(__chkstk_darwin(TupleTypeMetadata2 - 8) + 56);
  uint64_t v9 = (char *)&v13 + v8 - v7;
  uint64_t v10 = a1 + v8;
  uint64_t v11 = *(void *)(a2 - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))(v9, v10, a2);
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v11 + 32))(a3, v9, a2);
}

uint64_t Array.permutations()()
{
  sub_1FBBA0();
  sub_1FC590();
  swift_allocObject();
  swift_bridgeObjectRetain();
  uint64_t v0 = sub_1FBB00();
  uint64_t v2 = v1;
  swift_bridgeObjectRetain();
  swift_getWitnessTable();
  *uint64_t v2 = sub_1FBBB0();
  sub_1FBBA0();
  uint64_t v13 = v0;
  unint64_t v3 = sub_1FBB60();
  int v4 = sub_95DA8(0, v3);
  swift_bridgeObjectRetain();
  uint64_t v5 = sub_1FBB60();
  swift_bridgeObjectRelease();
  if (v5 <= 0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_17:
    }
      int v4 = (int64x2_t *)sub_984A8(v4);
    uint64_t v6 = 0;
    uint64_t v7 = v4 + 2;
    do
    {
      if ((unint64_t)v6 >= v4[1].i64[0])
      {
        __break(1u);
LABEL_15:
        __break(1u);
LABEL_16:
        __break(1u);
        goto LABEL_17;
      }
      if (v7->i64[v6] >= v6)
      {
        v7->i64[v6++] = 0;
      }
      else
      {
        swift_getWitnessTable();
        sub_1FB7C0();
        swift_bridgeObjectRetain();
        sub_1FBBB0();
        sub_1FBB70();
        if ((unint64_t)v6 >= v4[1].i64[0]) {
          goto LABEL_15;
        }
        uint64_t v9 = v7->i64[v6];
        BOOL v10 = __OFADD__(v9, 1);
        uint64_t v11 = v9 + 1;
        if (v10) {
          goto LABEL_16;
        }
        v7->i64[v6] = v11;
        uint64_t v6 = 0;
      }
      swift_bridgeObjectRetain();
      uint64_t v8 = sub_1FBB60();
      swift_bridgeObjectRelease();
    }
    while (v6 < v8);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v13;
  }
  return v0;
}

uint64_t Array.truncate(_:)(uint64_t a1, uint64_t a2)
{
  if (sub_1FBB60() <= a1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_1FBBA0();
    swift_getWitnessTable();
    sub_1FBA20();
    swift_getWitnessTable();
    sub_1FBD40();
    sub_1FBF40();
    swift_getWitnessTable();
    return sub_1FBBB0();
  }
  return a2;
}

uint64_t Array.conform(repeating:inLength:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v7 = Array.truncate(_:)(a2, a3);
  uint64_t result = sub_1FBB60();
  if (result == a2) {
    return v7;
  }
  if (__OFSUB__(a2, result))
  {
    __break(1u);
  }
  else
  {
    sub_985E0(a1, a2 - result, a4);
    uint64_t v9 = sub_1FBB20();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return v9;
  }
  return result;
}

uint64_t sub_981C4(uint64_t a1, int *a2)
{
  uint64_t v6 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *int v4 = v2;
  v4[1] = sub_982A0;
  return v6(a1);
}

uint64_t sub_982A0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_98398(uint64_t *a1, void *a2)
{
  return sub_961D0(a1, a2, *(void (**)(void *))(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32));
}

uint64_t sub_983BC(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_98BD4;
  return sub_9692C(a1, a2, v8, v9, v10, v6, v7);
}

void *sub_98494(void *a1)
{
  return sub_41CBC(0, a1[2], 0, a1);
}

void *sub_984A8(void *a1)
{
  return sub_42038(0, a1[2], 0, a1);
}

void *sub_984BC(void *a1)
{
  return sub_425CC(0, a1[2], 0, a1);
}

uint64_t sub_984D0(unint64_t a1)
{
  return sub_42C74(0, *(void *)(a1 + 16), 0, a1);
}

void *sub_984E4(void *a1)
{
  return sub_42EE4(0, a1[2], 0, a1);
}

void *sub_984F8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a3 < 0)
  {
    uint64_t result = (void *)sub_1FC210();
    __break(1u);
  }
  else
  {
    if (!a3) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v6 = (void *)sub_1FBB40();
    uint64_t v7 = v6;
    v6[2] = a3;
    v6[4] = a1;
    v6[5] = a2;
    uint64_t v8 = a3 - 1;
    if (v8)
    {
      uint64_t v9 = v6 + 7;
      do
      {
        *(v9 - 1) = a1;
        void *v9 = a2;
        swift_bridgeObjectRetain();
        v9 += 2;
        --v8;
      }
      while (v8);
    }
    swift_bridgeObjectRetain();
    return v7;
  }
  return result;
}

uint64_t sub_985E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = sub_1FBB30();
  if (a2 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v8 = result;
    if (a2)
    {
      uint64_t v9 = v7;
      uint64_t v10 = *(void *)(a3 - 8);
      uint64_t v11 = *(void (**)(uint64_t, uint64_t, uint64_t))(v10 + 16);
      v11(v7, a1, a3);
      uint64_t v12 = a2 - 1;
      if (v12)
      {
        uint64_t v13 = *(void *)(v10 + 72);
        uint64_t v14 = v9 + v13;
        do
        {
          v11(v14, a1, a3);
          v14 += v13;
          --v12;
        }
        while (v12);
      }
    }
    sub_1FBBA0();
    return v8;
  }
  return result;
}

uint64_t sub_986E4(uint64_t a1)
{
  return a1;
}

uint64_t sub_98738(uint64_t a1)
{
  return a1;
}

BOOL sub_9878C(void *a1, void *a2)
{
  return *a1 < *a2;
}

uint64_t sub_987A0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_97C94(a1, *(void *)(v2 + 24), a2);
}

uint64_t sub_987C0()
{
  uint64_t v1 = *(void *)(v0 + 32);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_98898(uint64_t a1)
{
  unint64_t v4 = (*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1[4] - 8) + 80);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  uint64_t v7 = (int *)v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = (uint64_t)v1 + v4;
  uint64_t v10 = *(void *)((char *)v1 + ((*(void *)(*(void *)(v1[4] - 8) + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_5958;
  return sub_97514(a1, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_989E0(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D908);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_98A40(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D908);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_98AA8()
{
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_98AE0(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 24);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_5958;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_26E2E0 + dword_26E2E0);
  return v6(a1, v4);
}

uint64_t sub_98BA8()
{
  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_98BB8()
{
  return sub_1FBB30();
}

uint64_t sub_98BC4()
{
  return _swift_deallocObject(v0, 56, 7);
}

_UNKNOWN **static EventType.allCases.getter()
{
  return &off_252950;
}

void sub_98BE4(void *a1@<X8>)
{
  *a1 = &off_252950;
}

uint64_t Event.isSample.getter()
{
  uint64_t v1 = type metadata accessor for Event();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_12124(&qword_26E2F0);
    uint64_t v6 = &v3[*(int *)(v5 + 48)];
    uint64_t v7 = v3[*(int *)(v5 + 64)];
    uint64_t v8 = sub_1FB0E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_98DB0((uint64_t)v3);
    return 2;
  }
  return v7;
}

uint64_t type metadata accessor for Event()
{
  uint64_t result = qword_26E3B0;
  if (!qword_26E3B0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_98D4C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for Event();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_98DB0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for Event();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t Event.endProgress.getter()
{
  uint64_t v1 = type metadata accessor for Event();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v10 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(v0, (uint64_t)v3);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  if (EnumCaseMultiPayload == 4 || EnumCaseMultiPayload == 1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_12124(&qword_26E2F0);
    uint64_t v6 = &v3[*(int *)(v5 + 48)];
    uint64_t v7 = *(void *)&v3[*(int *)(v5 + 80)];
    uint64_t v8 = sub_1FB0E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v6, v8);
  }
  else
  {
    sub_98DB0((uint64_t)v3);
    return 0;
  }
  return v7;
}

uint64_t Event.rating.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for Event();
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v10 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 10)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = sub_12124(&qword_26E2F8);
    uint64_t v7 = &v4[*(int *)(v6 + 48)];
    uint64_t v5 = *(void *)&v4[*(int *)(v6 + 64)];
    uint64_t v8 = sub_1FB0E0();
    (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
  }
  else
  {
    sub_98DB0((uint64_t)v4);
    return 0;
  }
  return v5;
}

uint64_t Event.assetID.getter()
{
  uint64_t v1 = type metadata accessor for Event();
  __chkstk_darwin(v1);
  uint64_t v3 = (uint64_t *)((char *)&v9 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_98D4C(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
      uint64_t v4 = *v3;
      uint64_t v5 = &qword_26E2F0;
      break;
    case 2u:
    case 3u:
      uint64_t v4 = *v3;
      uint64_t v5 = &qword_26E310;
      break;
    case 8u:
      uint64_t v4 = *v3;
      uint64_t v5 = &qword_26E308;
      break;
    case 0xAu:
      uint64_t v4 = *v3;
      uint64_t v5 = &qword_26E2F8;
      break;
    default:
      uint64_t v4 = *v3;
      uint64_t v5 = &qword_26E300;
      break;
  }
  uint64_t v6 = (char *)v3 + *(int *)(sub_12124(v5) + 48);
  uint64_t v7 = sub_1FB0E0();
  (*(void (**)(char *, uint64_t))(*(void *)(v7 - 8) + 8))(v6, v7);
  return v4;
}

uint64_t Event.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for Event();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &qword_26E2F0;
      break;
    case 2u:
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &qword_26E310;
      break;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &qword_26E308;
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &qword_26E2F8;
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v7 = &qword_26E300;
      break;
  }
  uint64_t v8 = &v6[*(int *)(sub_12124(v7) + 48)];
  uint64_t v9 = sub_1FB0E0();
  return (*(uint64_t (**)(uint64_t, char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, v8, v9);
}

unint64_t Event.eventType.getter()
{
  uint64_t v1 = type metadata accessor for Event();
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(v0, (uint64_t)v3);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      unint64_t v6 = 0xD000000000000012;
      swift_bridgeObjectRelease();
      uint64_t v7 = &v3[*(int *)(sub_12124(&qword_26E2F0) + 48)];
      uint64_t v8 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v8 - 8) + 8))(v7, v8);
      break;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v9 = &v3[*(int *)(sub_12124(&qword_26E310) + 48)];
      uint64_t v10 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v9, v10);
      unint64_t v6 = 0x72706D496B6F6F62;
      break;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v11 = &v3[*(int *)(sub_12124(&qword_26E310) + 48)];
      uint64_t v12 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v12 - 8) + 8))(v11, v12);
      unint64_t v6 = 0xD000000000000019;
      break;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v13 = &v3[*(int *)(sub_12124(&qword_26E2F0) + 48)];
      uint64_t v14 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v14 - 8) + 8))(v13, v14);
      unint64_t v6 = 0x527361576B6F6F62;
      break;
    case 5u:
      swift_bridgeObjectRelease();
      uint64_t v15 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v16 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v16 - 8) + 8))(v15, v16);
      unint64_t v6 = 0x64616F6C6E776F64;
      break;
    case 6u:
      swift_bridgeObjectRelease();
      uint64_t v17 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v18 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v18 - 8) + 8))(v17, v18);
      unint64_t v6 = 0x746963696C707865;
      break;
    case 7u:
      swift_bridgeObjectRelease();
      uint64_t v19 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v20 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
      unint64_t v6 = 0x6B6F6F4265646968;
      break;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v21 = &v3[*(int *)(sub_12124(&qword_26E308) + 48)];
      uint64_t v22 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
      unint64_t v6 = 0x694673416B72616DLL;
      break;
    case 9u:
      unint64_t v6 = 0xD000000000000012;
      swift_bridgeObjectRelease();
      uint64_t v23 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v24 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v24 - 8) + 8))(v23, v24);
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v25 = &v3[*(int *)(sub_12124(&qword_26E2F8) + 48)];
      uint64_t v26 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v26 - 8) + 8))(v25, v26);
      unint64_t v6 = 0x676E69746172;
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      uint64_t v27 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v28 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v28 - 8) + 8))(v27, v28);
      unint64_t v6 = 0xD000000000000014;
      break;
    case 0xCu:
      swift_bridgeObjectRelease();
      uint64_t v29 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v30 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v30 - 8) + 8))(v29, v30);
      unint64_t v6 = 0x615365766F6D6572;
      break;
    case 0xDu:
      swift_bridgeObjectRelease();
      uint64_t v31 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v32 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v32 - 8) + 8))(v31, v32);
      unint64_t v6 = 0x4C74736567677573;
      break;
    case 0xEu:
      swift_bridgeObjectRelease();
      uint64_t v33 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v34 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v33, v34);
      unint64_t v6 = 0x4D74736567677573;
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      uint64_t v35 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v36 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v35, v36);
      unint64_t v6 = 0x6572616873;
      break;
    case 0x10u:
      swift_bridgeObjectRelease();
      BOOL v37 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v38 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v37, v38);
      unint64_t v6 = 0x657461726E75;
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v4 = &v3[*(int *)(sub_12124(&qword_26E300) + 48)];
      uint64_t v5 = sub_1FB0E0();
      (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v4, v5);
      unint64_t v6 = 0x6E61576F54646461;
      break;
  }
  return v6;
}

uint64_t Event.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v63 = a1;
  uint64_t v64 = sub_1FB0E0();
  uint64_t v62 = *(void *)(v64 - 8);
  uint64_t v3 = __chkstk_darwin(v64);
  uint64_t v5 = (char *)&v61 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v3);
  uint64_t v8 = (char *)&v61 - v7;
  uint64_t v9 = __chkstk_darwin(v6);
  uint64_t v11 = (char *)&v61 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v61 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v61 - v16;
  uint64_t v18 = __chkstk_darwin(v15);
  uint64_t v20 = (char *)&v61 - v19;
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v61 - v21;
  uint64_t v23 = type metadata accessor for Event();
  __chkstk_darwin(v23);
  uint64_t v25 = (char *)&v61 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(v2, (uint64_t)v25);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v30 = (int *)sub_12124(&qword_26E2F0);
      Swift::UInt8 v31 = v25[v30[16]];
      Swift::UInt64 v32 = *(void *)&v25[v30[20]];
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v20, &v25[v30[12]], v64);
      sub_1FC7F0(1uLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      sub_1FC800(v31);
      if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v33 = v32;
      }
      else {
        Swift::UInt64 v33 = 0;
      }
      sub_1FC820(v33);
      uint64_t v17 = v20;
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
    case 2u:
      uint64_t v34 = sub_12124(&qword_26E310);
      int v35 = v25[*(int *)(v34 + 64)];
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v17, &v25[*(int *)(v34 + 48)], v64);
      sub_1FC7F0(2uLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      if (v35 == 2)
      {
        Swift::UInt8 v36 = 0;
      }
      else
      {
        Swift::UInt8 v36 = v35 & 1;
        sub_1FC800(1u);
      }
      sub_1FC800(v36);
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
    case 3u:
      uint64_t v37 = sub_12124(&qword_26E310);
      int v38 = v25[*(int *)(v37 + 64)];
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v14, &v25[*(int *)(v37 + 48)], v64);
      sub_1FC7F0(3uLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      if (v38 == 2)
      {
        Swift::UInt8 v39 = 0;
      }
      else
      {
        Swift::UInt8 v39 = v38 & 1;
        sub_1FC800(1u);
      }
      sub_1FC800(v39);
      uint64_t v17 = v14;
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
    case 4u:
      uint64_t v40 = (int *)sub_12124(&qword_26E2F0);
      Swift::UInt8 v41 = v25[v40[16]];
      Swift::UInt64 v42 = *(void *)&v25[v40[20]];
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v11, &v25[v40[12]], v64);
      sub_1FC7F0(4uLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      sub_1FC800(v41);
      if ((v42 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v43 = v42;
      }
      else {
        Swift::UInt64 v43 = 0;
      }
      sub_1FC820(v43);
      uint64_t v17 = v11;
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
    case 5u:
      uint64_t v44 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v44 + 48)], v64);
      Swift::UInt v29 = 5;
      goto LABEL_29;
    case 6u:
      uint64_t v45 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v45 + 48)], v64);
      Swift::UInt v29 = 6;
      goto LABEL_29;
    case 7u:
      uint64_t v46 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v46 + 48)], v64);
      Swift::UInt v29 = 7;
      goto LABEL_29;
    case 8u:
      uint64_t v59 = sub_12124(&qword_26E308);
      int v60 = v25[*(int *)(v59 + 64)];
      uint64_t v27 = v62;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v8, &v25[*(int *)(v59 + 48)], v64);
      sub_1FC7F0(8uLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      if (v60 == 2)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        sub_1FC7F0(v60 & 1);
      }
      uint64_t v17 = v8;
      uint64_t v28 = v64;
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
    case 9u:
      uint64_t v47 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v47 + 48)], v64);
      Swift::UInt v29 = 9;
      goto LABEL_29;
    case 0xAu:
      uint64_t v48 = sub_12124(&qword_26E2F8);
      Swift::UInt64 v49 = *(void *)&v25[*(int *)(v48 + 64)];
      uint64_t v50 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v5, &v25[*(int *)(v48 + 48)], v64);
      sub_1FC7F0(0xAuLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      if ((v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v51 = v49;
      }
      else {
        Swift::UInt64 v51 = 0;
      }
      sub_1FC820(v51);
      uint64_t v17 = v5;
      uint64_t v27 = v50;
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
    case 0xBu:
      uint64_t v52 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v52 + 48)], v64);
      Swift::UInt v29 = 11;
      goto LABEL_29;
    case 0xCu:
      uint64_t v53 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v53 + 48)], v64);
      Swift::UInt v29 = 12;
      goto LABEL_29;
    case 0xDu:
      uint64_t v54 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v54 + 48)], v64);
      Swift::UInt v29 = 13;
      goto LABEL_29;
    case 0xEu:
      uint64_t v55 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v55 + 48)], v64);
      Swift::UInt v29 = 14;
      goto LABEL_29;
    case 0xFu:
      uint64_t v56 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v56 + 48)], v64);
      Swift::UInt v29 = 15;
      goto LABEL_29;
    case 0x10u:
      uint64_t v57 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v57 + 48)], v64);
      Swift::UInt v29 = 16;
      goto LABEL_29;
    default:
      uint64_t v26 = sub_12124(&qword_26E300);
      uint64_t v27 = v62;
      uint64_t v28 = v64;
      (*(void (**)(char *, char *, uint64_t))(v62 + 32))(v22, &v25[*(int *)(v26 + 48)], v64);
      Swift::UInt v29 = 0;
LABEL_29:
      sub_1FC7F0(v29);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_9C74C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      uint64_t v17 = v22;
      return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v17, v28);
  }
}

Swift::Int Event.hashValue.getter()
{
  sub_1FC7E0();
  Event.hash(into:)((uint64_t)v1);
  return sub_1FC830();
}

Swift::Int sub_9A720()
{
  sub_1FC7E0();
  Event.hash(into:)((uint64_t)v1);
  return sub_1FC830();
}

uint64_t _s20BooksPersonalization5EventO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  v419 = (uint64_t *)a1;
  v420 = (char *)a2;
  uint64_t v2 = sub_1FB0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v416 = v2;
  uint64_t v417 = v3;
  uint64_t v4 = __chkstk_darwin(v2);
  v405 = (char *)&v372 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  v406 = (char *)&v372 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  v403 = (char *)&v372 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  v404 = (char *)&v372 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  v401 = (char *)&v372 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  v402 = (char *)&v372 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  v399 = (char *)&v372 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  v400 = (char *)&v372 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  v397 = (char *)&v372 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  v398 = (char *)&v372 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v395 = (char *)&v372 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v396 = (char *)&v372 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v393 = (char *)&v372 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  v394 = (char *)&v372 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  v391 = (char *)&v372 - v33;
  uint64_t v34 = __chkstk_darwin(v32);
  v392 = (char *)&v372 - v35;
  uint64_t v36 = __chkstk_darwin(v34);
  v389 = (char *)&v372 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  v390 = (char *)&v372 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v387 = (char *)&v372 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  v388 = (char *)&v372 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  v385 = (char *)&v372 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v386 = (char *)&v372 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v383 = (char *)&v372 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v384 = (char *)&v372 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  v373 = (char *)&v372 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v382 = (char *)&v372 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  v380 = (char *)&v372 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v381 = (char *)&v372 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v378 = (char *)&v372 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  v379 = (char *)&v372 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v376 = (char *)&v372 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v377 = (char *)&v372 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v374 = (char *)&v372 - v69;
  __chkstk_darwin(v68);
  v375 = (char *)&v372 - v70;
  uint64_t v418 = type metadata accessor for Event();
  uint64_t v71 = __chkstk_darwin(v418);
  v415 = (uint64_t *)((char *)&v372 - ((v72 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v73 = __chkstk_darwin(v71);
  v414 = (uint64_t *)((char *)&v372 - v74);
  uint64_t v75 = __chkstk_darwin(v73);
  v413 = (uint64_t *)((char *)&v372 - v76);
  uint64_t v77 = __chkstk_darwin(v75);
  v412 = (uint64_t *)((char *)&v372 - v78);
  uint64_t v79 = __chkstk_darwin(v77);
  v411 = (uint64_t *)((char *)&v372 - v80);
  uint64_t v81 = __chkstk_darwin(v79);
  v410 = (uint64_t *)((char *)&v372 - v82);
  uint64_t v83 = __chkstk_darwin(v81);
  v409 = (uint64_t *)((char *)&v372 - v84);
  uint64_t v85 = __chkstk_darwin(v83);
  v408 = (uint64_t *)((char *)&v372 - v86);
  uint64_t v87 = __chkstk_darwin(v85);
  v407 = (uint64_t *)((char *)&v372 - v88);
  uint64_t v89 = __chkstk_darwin(v87);
  uint64_t v91 = (uint64_t *)((char *)&v372 - v90);
  uint64_t v92 = __chkstk_darwin(v89);
  uint64_t v94 = (uint64_t *)((char *)&v372 - v93);
  uint64_t v95 = __chkstk_darwin(v92);
  uint64_t v97 = (uint64_t *)((char *)&v372 - v96);
  uint64_t v98 = __chkstk_darwin(v95);
  uint64_t v100 = (uint64_t *)((char *)&v372 - v99);
  uint64_t v101 = __chkstk_darwin(v98);
  uint64_t v103 = (uint64_t *)((char *)&v372 - v102);
  uint64_t v104 = __chkstk_darwin(v101);
  double v106 = (uint64_t *)((char *)&v372 - v105);
  uint64_t v107 = __chkstk_darwin(v104);
  uint64_t v109 = (uint64_t *)((char *)&v372 - v108);
  __chkstk_darwin(v107);
  uint64_t v111 = (uint64_t *)((char *)&v372 - v110);
  uint64_t v112 = sub_12124(&qword_26E418);
  uint64_t v113 = __chkstk_darwin(v112 - 8);
  uint64_t v115 = (char *)&v372 - ((v114 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = (uint64_t)&v115[*(int *)(v113 + 56)];
  sub_98D4C((uint64_t)v419, (uint64_t)v115);
  v419 = (uint64_t *)v116;
  sub_98D4C((uint64_t)v420, v116);
  v420 = v115;
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      sub_98D4C((uint64_t)v420, (uint64_t)v109);
      uint64_t v129 = *v109;
      uint64_t v130 = v109[1];
      unint64_t v131 = (int *)sub_12124(&qword_26E2F0);
      uint64_t v132 = v131[12];
      double v121 = (char *)v109 + v132;
      uint64_t v133 = v131[16];
      int v134 = *((unsigned __int8 *)v109 + v133);
      uint64_t v135 = v131[20];
      double v136 = *(double *)((char *)v109 + v135);
      unint64_t v137 = v419;
      if (swift_getEnumCaseMultiPayload() != 1)
      {
        uint64_t v308 = v416;
        uint64_t v309 = v417;
        uint64_t v117 = (uint64_t)v420;
        goto LABEL_71;
      }
      char v138 = (char *)v109 + v132;
      uint64_t v140 = *v137;
      uint64_t v139 = v137[1];
      LODWORD(v418) = *((unsigned __int8 *)v137 + v133);
      uint64_t v141 = (char *)v137 + v132;
      double v142 = *(double *)((char *)v137 + v135);
      uint64_t v143 = v130;
      uint64_t v145 = v416;
      uint64_t v144 = v417;
      uint64_t v146 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v146(v377, v138, v416);
      v146(v376, v141, v145);
      if (v129 == v140 && v143 == v139)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v310 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v310 & 1) == 0)
        {
          v354 = *(void (**)(char *, uint64_t))(v144 + 8);
          v354(v376, v145);
          v354(v377, v145);
          goto LABEL_134;
        }
      }
      v311 = v377;
      v312 = v376;
      char v313 = sub_1FB0A0();
      v314 = *(void (**)(char *, uint64_t))(v144 + 8);
      v314(v312, v145);
      v314(v311, v145);
      if ((v313 & 1) == 0) {
        goto LABEL_134;
      }
      BOOL v315 = v134 == v418;
      goto LABEL_90;
    case 2u:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v106);
      uint64_t v147 = *v106;
      uint64_t v148 = v106[1];
      uint64_t v149 = sub_12124(&qword_26E310);
      uint64_t v150 = *(int *)(v149 + 48);
      double v121 = (char *)v106 + v150;
      uint64_t v151 = *(int *)(v149 + 64);
      int v152 = *((unsigned __int8 *)v106 + v151);
      uint64_t v153 = v419;
      if (swift_getEnumCaseMultiPayload() != 2) {
        goto LABEL_70;
      }
      uint64_t v154 = v121;
      uint64_t v156 = *v153;
      uint64_t v155 = v153[1];
      LODWORD(v419) = *((unsigned __int8 *)v153 + v151);
      uint64_t v157 = v148;
      uint64_t v159 = v416;
      uint64_t v158 = v417;
      uint64_t v160 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v160(v379, v154, v416);
      v160(v378, (char *)v153 + v150, v159);
      if (v147 == v156 && v157 == v155)
      {
        swift_bridgeObjectRelease_n();
LABEL_79:
        v317 = v379;
        v318 = (uint64_t *)&v410;
        goto LABEL_82;
      }
      char v316 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v316) {
        goto LABEL_79;
      }
      v355 = *(void (**)(char *, uint64_t))(v158 + 8);
      v355(v378, v159);
      v355(v379, v159);
LABEL_134:
      uint64_t v323 = (uint64_t)v420;
      goto LABEL_148;
    case 3u:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v103);
      uint64_t v161 = *v103;
      uint64_t v162 = v103[1];
      uint64_t v163 = sub_12124(&qword_26E310);
      uint64_t v164 = *(int *)(v163 + 48);
      double v121 = (char *)v103 + v164;
      uint64_t v165 = *(int *)(v163 + 64);
      int v152 = *((unsigned __int8 *)v103 + v165);
      unint64_t v166 = v419;
      if (swift_getEnumCaseMultiPayload() != 3) {
        goto LABEL_70;
      }
      unint64_t v167 = (char *)v103 + v164;
      uint64_t v169 = *v166;
      uint64_t v168 = v166[1];
      uint64_t v170 = (char *)v166 + v164;
      LODWORD(v419) = *((unsigned __int8 *)v166 + v165);
      uint64_t v171 = v162;
      uint64_t v159 = v416;
      uint64_t v158 = v417;
      uint64_t v172 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v172(v381, v167, v416);
      v172(v380, v170, v159);
      if (v161 == v169 && v171 == v168)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v319 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v319 & 1) == 0)
        {
          v356 = *(void (**)(char *, uint64_t))(v158 + 8);
          v356(v380, v159);
          v356(v381, v159);
          goto LABEL_134;
        }
      }
      v317 = v381;
      v318 = (uint64_t *)&v412;
LABEL_82:
      uint64_t v320 = *(v318 - 32);
      char v321 = sub_1FB0A0();
      v322 = *(void (**)(uint64_t, uint64_t))(v158 + 8);
      v322(v320, v159);
      v322((uint64_t)v317, v159);
      if ((v321 & 1) == 0) {
        goto LABEL_134;
      }
      uint64_t v323 = (uint64_t)v420;
      if (v152 == 2) {
        goto LABEL_102;
      }
      if (v419 == 2 || ((((v152 & 1) == 0) ^ v419) & 1) == 0) {
        goto LABEL_148;
      }
      goto LABEL_145;
    case 4u:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v100);
      uint64_t v173 = *v100;
      uint64_t v174 = v100[1];
      int v175 = (int *)sub_12124(&qword_26E2F0);
      uint64_t v176 = v175[12];
      unint64_t v177 = (char *)v100 + v176;
      uint64_t v178 = v175[16];
      int v179 = *((unsigned __int8 *)v100 + v178);
      uint64_t v180 = v175[20];
      double v136 = *(double *)((char *)v100 + v180);
      long long v181 = v419;
      if (swift_getEnumCaseMultiPayload() != 4)
      {
        uint64_t v308 = v416;
        uint64_t v309 = v417;
        double v121 = (char *)v100 + v176;
        goto LABEL_71;
      }
      LODWORD(v418) = v179;
      uint64_t v183 = *v181;
      uint64_t v182 = v181[1];
      LODWORD(v415) = *((unsigned __int8 *)v181 + v178);
      uint64_t v184 = (char *)v181 + v176;
      double v142 = *(double *)((char *)v181 + v180);
      uint64_t v185 = v174;
      uint64_t v187 = v416;
      uint64_t v186 = v417;
      unint64_t v188 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v188(v382, v177, v416);
      uint64_t v189 = v373;
      v188(v373, v184, v187);
      if (v173 == v183 && v185 == v182)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v324 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v324 & 1) == 0)
        {
          v357 = *(void (**)(char *, uint64_t))(v186 + 8);
          v357(v189, v187);
          v357(v382, v187);
          goto LABEL_134;
        }
      }
      v325 = v382;
      char v326 = sub_1FB0A0();
      v327 = *(void (**)(char *, uint64_t))(v186 + 8);
      v327(v189, v187);
      v327(v325, v187);
      if ((v326 & 1) == 0) {
        goto LABEL_134;
      }
      BOOL v315 = v418 == v415;
LABEL_90:
      uint64_t v323 = (uint64_t)v420;
      if (v315)
      {
        char v328 = v136 == v142;
        sub_98DB0((uint64_t)v420);
        return v328 & 1;
      }
      goto LABEL_148;
    case 5u:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v97);
      uint64_t v190 = *v97;
      uint64_t v191 = v97[1];
      uint64_t v192 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v97 + v192;
      uint64_t v193 = v419;
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        uint64_t v308 = v416;
        uint64_t v309 = v417;
        goto LABEL_71;
      }
      uint64_t v194 = (char *)v97 + v192;
      uint64_t v195 = *v193;
      uint64_t v196 = v193[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      uint64_t v197 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v197(v384, v194, v416);
      v197(v383, (char *)v193 + v192, v127);
      if (v190 == v195 && v191 == v196)
      {
        swift_bridgeObjectRelease_n();
LABEL_94:
        v330 = v384;
        v331 = (uint64_t *)&v415;
        goto LABEL_123;
      }
      char v329 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v329) {
        goto LABEL_94;
      }
      v358 = *(void (**)(char *, uint64_t))(v126 + 8);
      v358(v383, v127);
      v358(v384, v127);
      goto LABEL_147;
    case 6u:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v94);
      uint64_t v198 = *v94;
      uint64_t v199 = v94[1];
      uint64_t v200 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v94 + v200;
      uint64_t v201 = v419;
      if (swift_getEnumCaseMultiPayload() != 6) {
        goto LABEL_70;
      }
      double v202 = (char *)v94 + v200;
      uint64_t v204 = *v201;
      uint64_t v203 = v201[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      uint64_t v205 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v205(v386, v202, v416);
      v205(v385, (char *)v201 + v200, v127);
      if (v198 == v204 && v199 == v203)
      {
        swift_bridgeObjectRelease_n();
LABEL_96:
        v330 = v386;
        v331 = &v417;
        goto LABEL_123;
      }
      char v332 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v332) {
        goto LABEL_96;
      }
      v359 = *(void (**)(char *, uint64_t))(v126 + 8);
      v359(v385, v127);
      v359(v386, v127);
      goto LABEL_147;
    case 7u:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v91);
      uint64_t v206 = *v91;
      uint64_t v207 = v91[1];
      uint64_t v208 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v91 + v208;
      uint64_t v209 = v419;
      if (swift_getEnumCaseMultiPayload() != 7) {
        goto LABEL_70;
      }
      uint64_t v210 = (char *)v91 + v208;
      uint64_t v212 = *v209;
      uint64_t v211 = v209[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      uint64_t v213 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v213(v388, v210, v416);
      v213(v387, (char *)v209 + v208, v127);
      if (v206 == v212 && v207 == v211)
      {
        swift_bridgeObjectRelease_n();
LABEL_98:
        v330 = v388;
        v331 = (uint64_t *)&v419;
        goto LABEL_123;
      }
      char v333 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v333) {
        goto LABEL_98;
      }
      v360 = *(void (**)(char *, uint64_t))(v126 + 8);
      v360(v387, v127);
      v360(v388, v127);
      goto LABEL_147;
    case 8u:
      uint64_t v117 = (uint64_t)v420;
      uint64_t v214 = v407;
      sub_98D4C((uint64_t)v420, (uint64_t)v407);
      uint64_t v215 = *v214;
      uint64_t v216 = v214[1];
      uint64_t v217 = sub_12124(&qword_26E308);
      uint64_t v218 = *(int *)(v217 + 48);
      double v121 = (char *)v214 + v218;
      uint64_t v219 = *(int *)(v217 + 64);
      int v220 = *((unsigned __int8 *)v214 + v219);
      uint64_t v221 = v419;
      if (swift_getEnumCaseMultiPayload() != 8) {
        goto LABEL_70;
      }
      uint64_t v222 = (char *)v214 + v218;
      uint64_t v224 = *v221;
      uint64_t v223 = v221[1];
      LODWORD(v419) = *((unsigned __int8 *)v221 + v219);
      uint64_t v225 = v216;
      uint64_t v227 = v416;
      uint64_t v226 = v417;
      v228 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v228(v390, v222, v416);
      v228(v389, (char *)v221 + v218, v227);
      if (v215 == v224 && v225 == v223)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v334 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v334 & 1) == 0)
        {
          v361 = *(void (**)(char *, uint64_t))(v226 + 8);
          v361(v389, v227);
          v361(v390, v227);
          goto LABEL_134;
        }
      }
      v335 = v390;
      v336 = v389;
      char v337 = sub_1FB0A0();
      v338 = *(void (**)(char *, uint64_t))(v226 + 8);
      v338(v336, v227);
      v338(v335, v227);
      if ((v337 & 1) == 0) {
        goto LABEL_134;
      }
      uint64_t v323 = (uint64_t)v420;
      if (v220 == 2)
      {
LABEL_102:
        if (v419 != 2) {
          goto LABEL_148;
        }
        goto LABEL_145;
      }
      if (v419 != 2 && ((v419 ^ v220) & 1) == 0)
      {
LABEL_145:
        sub_98DB0(v323);
        char v328 = 1;
        return v328 & 1;
      }
      goto LABEL_148;
    case 9u:
      uint64_t v117 = (uint64_t)v420;
      unint64_t v229 = v408;
      sub_98D4C((uint64_t)v420, (uint64_t)v408);
      uint64_t v230 = *v229;
      uint64_t v231 = v229[1];
      uint64_t v232 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v229 + v232;
      __int16 v233 = v419;
      if (swift_getEnumCaseMultiPayload() != 9) {
        goto LABEL_70;
      }
      unint64_t v234 = (char *)v229 + v232;
      uint64_t v236 = *v233;
      uint64_t v235 = v233[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v237 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v237(v392, v234, v416);
      v237(v391, (char *)v233 + v232, v127);
      if (v230 == v236 && v231 == v235)
      {
        swift_bridgeObjectRelease_n();
LABEL_105:
        v330 = v392;
        v331 = &v421;
        goto LABEL_123;
      }
      char v339 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v339) {
        goto LABEL_105;
      }
      v362 = *(void (**)(char *, uint64_t))(v126 + 8);
      v362(v391, v127);
      v362(v392, v127);
      goto LABEL_147;
    case 0xAu:
      uint64_t v117 = (uint64_t)v420;
      v238 = v409;
      sub_98D4C((uint64_t)v420, (uint64_t)v409);
      uint64_t v239 = *v238;
      uint64_t v240 = v238[1];
      uint64_t v241 = sub_12124(&qword_26E2F8);
      uint64_t v242 = *(int *)(v241 + 48);
      double v121 = (char *)v238 + v242;
      uint64_t v243 = *(int *)(v241 + 64);
      double v244 = *(double *)((char *)v238 + v243);
      v245 = v419;
      if (swift_getEnumCaseMultiPayload() != 10) {
        goto LABEL_70;
      }
      v246 = (char *)v238 + v242;
      uint64_t v248 = *v245;
      uint64_t v247 = v245[1];
      v249 = (char *)v245 + v242;
      double v250 = *(double *)((char *)v245 + v243);
      uint64_t v252 = v416;
      uint64_t v251 = v417;
      v253 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v253(v394, v246, v416);
      v253(v393, v249, v252);
      if (v239 == v248 && v240 == v247)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v340 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v340 & 1) == 0)
        {
          v363 = *(void (**)(char *, uint64_t))(v251 + 8);
          v363(v393, v252);
          v363(v394, v252);
          goto LABEL_147;
        }
      }
      v341 = v394;
      v342 = v393;
      char v343 = sub_1FB0A0();
      v344 = *(void (**)(char *, uint64_t))(v251 + 8);
      v344(v342, v252);
      v344(v341, v252);
      if ((v343 & 1) == 0) {
        goto LABEL_147;
      }
      char v328 = v244 == v250;
      goto LABEL_125;
    case 0xBu:
      uint64_t v117 = (uint64_t)v420;
      v254 = v410;
      sub_98D4C((uint64_t)v420, (uint64_t)v410);
      uint64_t v255 = *v254;
      uint64_t v256 = v254[1];
      uint64_t v257 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v254 + v257;
      v258 = v419;
      if (swift_getEnumCaseMultiPayload() != 11) {
        goto LABEL_70;
      }
      v259 = (char *)v254 + v257;
      uint64_t v261 = *v258;
      uint64_t v260 = v258[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v262 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v262(v396, v259, v416);
      v262(v395, (char *)v258 + v257, v127);
      if (v255 == v261 && v256 == v260)
      {
        swift_bridgeObjectRelease_n();
LABEL_110:
        v330 = v396;
        v331 = &v422;
        goto LABEL_123;
      }
      char v345 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v345) {
        goto LABEL_110;
      }
      v364 = *(void (**)(char *, uint64_t))(v126 + 8);
      v364(v395, v127);
      v364(v396, v127);
      goto LABEL_147;
    case 0xCu:
      uint64_t v117 = (uint64_t)v420;
      v263 = v411;
      sub_98D4C((uint64_t)v420, (uint64_t)v411);
      uint64_t v264 = *v263;
      uint64_t v265 = v263[1];
      uint64_t v266 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v263 + v266;
      v267 = v419;
      if (swift_getEnumCaseMultiPayload() != 12) {
        goto LABEL_70;
      }
      v268 = (char *)v263 + v266;
      uint64_t v270 = *v267;
      uint64_t v269 = v267[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v271 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v271(v398, v268, v416);
      v271(v397, (char *)v267 + v266, v127);
      if (v264 == v270 && v265 == v269)
      {
        swift_bridgeObjectRelease_n();
LABEL_112:
        v330 = v398;
        v331 = &v423;
        goto LABEL_123;
      }
      char v346 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v346) {
        goto LABEL_112;
      }
      v365 = *(void (**)(char *, uint64_t))(v126 + 8);
      v365(v397, v127);
      v365(v398, v127);
      goto LABEL_147;
    case 0xDu:
      uint64_t v117 = (uint64_t)v420;
      v272 = v412;
      sub_98D4C((uint64_t)v420, (uint64_t)v412);
      uint64_t v273 = *v272;
      uint64_t v274 = v272[1];
      uint64_t v275 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v272 + v275;
      v276 = v419;
      if (swift_getEnumCaseMultiPayload() != 13) {
        goto LABEL_70;
      }
      v277 = (char *)v272 + v275;
      uint64_t v279 = *v276;
      uint64_t v278 = v276[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v280 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v280(v400, v277, v416);
      v280(v399, (char *)v276 + v275, v127);
      if (v273 == v279 && v274 == v278)
      {
        swift_bridgeObjectRelease_n();
LABEL_114:
        v330 = v400;
        v331 = &v424;
        goto LABEL_123;
      }
      char v347 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v347) {
        goto LABEL_114;
      }
      v366 = *(void (**)(char *, uint64_t))(v126 + 8);
      v366(v399, v127);
      v366(v400, v127);
      goto LABEL_147;
    case 0xEu:
      uint64_t v117 = (uint64_t)v420;
      v281 = v413;
      sub_98D4C((uint64_t)v420, (uint64_t)v413);
      uint64_t v282 = *v281;
      uint64_t v283 = v281[1];
      uint64_t v284 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v281 + v284;
      v285 = v419;
      if (swift_getEnumCaseMultiPayload() != 14) {
        goto LABEL_70;
      }
      v286 = (char *)v281 + v284;
      uint64_t v288 = *v285;
      uint64_t v287 = v285[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v289 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v289(v402, v286, v416);
      v289(v401, (char *)v285 + v284, v127);
      if (v282 == v288 && v283 == v287)
      {
        swift_bridgeObjectRelease_n();
LABEL_116:
        v330 = v402;
        v331 = &v425;
        goto LABEL_123;
      }
      char v348 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v348) {
        goto LABEL_116;
      }
      v367 = *(void (**)(char *, uint64_t))(v126 + 8);
      v367(v401, v127);
      v367(v402, v127);
      goto LABEL_147;
    case 0xFu:
      uint64_t v117 = (uint64_t)v420;
      v290 = v414;
      sub_98D4C((uint64_t)v420, (uint64_t)v414);
      uint64_t v291 = *v290;
      uint64_t v292 = v290[1];
      uint64_t v293 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v290 + v293;
      v294 = v419;
      if (swift_getEnumCaseMultiPayload() != 15) {
        goto LABEL_70;
      }
      v295 = (char *)v290 + v293;
      uint64_t v297 = *v294;
      uint64_t v296 = v294[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v298 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v298(v404, v295, v416);
      v298(v403, (char *)v294 + v293, v127);
      if (v291 == v297 && v292 == v296)
      {
        swift_bridgeObjectRelease_n();
LABEL_118:
        v350 = v403;
        v330 = v404;
        goto LABEL_124;
      }
      char v349 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v349) {
        goto LABEL_118;
      }
      v368 = *(void (**)(char *, uint64_t))(v126 + 8);
      v368(v403, v127);
      v368(v404, v127);
      goto LABEL_147;
    case 0x10u:
      uint64_t v117 = (uint64_t)v420;
      v299 = v415;
      sub_98D4C((uint64_t)v420, (uint64_t)v415);
      uint64_t v300 = *v299;
      uint64_t v301 = v299[1];
      uint64_t v302 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v299 + v302;
      v303 = v419;
      if (swift_getEnumCaseMultiPayload() != 16) {
        goto LABEL_70;
      }
      v304 = (char *)v299 + v302;
      uint64_t v306 = *v303;
      uint64_t v305 = v303[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      v307 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v307(v406, v304, v416);
      v307(v405, (char *)v303 + v302, v127);
      if (v300 == v306 && v301 == v305)
      {
        swift_bridgeObjectRelease_n();
LABEL_120:
        v350 = v405;
        v330 = v406;
        goto LABEL_124;
      }
      char v351 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v351) {
        goto LABEL_120;
      }
      v369 = *(void (**)(char *, uint64_t))(v126 + 8);
      v369(v405, v127);
      v369(v406, v127);
LABEL_147:
      uint64_t v323 = v117;
LABEL_148:
      sub_98DB0(v323);
LABEL_149:
      char v328 = 0;
      return v328 & 1;
    default:
      uint64_t v117 = (uint64_t)v420;
      sub_98D4C((uint64_t)v420, (uint64_t)v111);
      uint64_t v118 = *v111;
      uint64_t v119 = v111[1];
      uint64_t v120 = *(int *)(sub_12124(&qword_26E300) + 48);
      double v121 = (char *)v111 + v120;
      double v122 = v419;
      if (swift_getEnumCaseMultiPayload())
      {
LABEL_70:
        uint64_t v308 = v416;
        uint64_t v309 = v417;
LABEL_71:
        (*(void (**)(char *, uint64_t))(v309 + 8))(v121, v308);
        swift_bridgeObjectRelease();
        sub_9E810(v117);
        goto LABEL_149;
      }
      double v123 = (char *)v111 + v120;
      uint64_t v125 = *v122;
      uint64_t v124 = v122[1];
      uint64_t v127 = v416;
      uint64_t v126 = v417;
      unint64_t v128 = *(void (**)(char *, char *, uint64_t))(v417 + 32);
      v128(v375, v123, v416);
      v128(v374, (char *)v122 + v120, v127);
      if (v118 == v125 && v119 == v124)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v352 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v352 & 1) == 0)
        {
          v370 = *(void (**)(char *, uint64_t))(v126 + 8);
          v370(v374, v127);
          v370(v375, v127);
          goto LABEL_147;
        }
      }
      v330 = v375;
      v331 = (uint64_t *)&v406;
LABEL_123:
      v350 = (char *)*(v331 - 32);
LABEL_124:
      char v328 = sub_1FB0A0();
      v353 = *(void (**)(char *, uint64_t))(v126 + 8);
      v353(v350, v127);
      v353(v330, v127);
LABEL_125:
      sub_98DB0(v117);
      return v328 & 1;
  }
}

unint64_t sub_9C5F8()
{
  unint64_t result = qword_26E318;
  if (!qword_26E318)
  {
    sub_121C4(&qword_26E320);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E318);
  }
  return result;
}

unint64_t sub_9C658()
{
  unint64_t result = qword_26E328;
  if (!qword_26E328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E328);
  }
  return result;
}

unint64_t sub_9C6B0()
{
  unint64_t result = qword_26E330;
  if (!qword_26E330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E330);
  }
  return result;
}

uint64_t sub_9C704()
{
  return sub_9C74C(&qword_26E338, (void (*)(uint64_t))type metadata accessor for Event);
}

uint64_t sub_9C74C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for EventType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF0) {
    goto LABEL_17;
  }
  if (a2 + 16 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 16) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 16;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 16;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x11;
  int v8 = v6 - 17;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for EventType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 16 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 16) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF0) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEF)
  {
    unsigned int v6 = ((a2 - 240) >> 8) + 1;
    *uint64_t result = a2 + 16;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9C8F0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 16;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventType()
{
  return &type metadata for EventType;
}

void *initializeBufferWithCopyOfBuffer for Event(void *a1, void *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (void *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
        uint64_t v7 = a2[1];
        *a1 = *a2;
        a1[1] = v7;
        swift_bridgeObjectRetain();
        int v8 = (int *)sub_12124(&qword_26E2F0);
        uint64_t v9 = v8[12];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        *((unsigned char *)a1 + v8[16]) = *((unsigned char *)a2 + v8[16]);
        *(void *)((char *)a1 + v8[20]) = *(void *)((char *)a2 + v8[20]);
        break;
      case 2u:
      case 3u:
        uint64_t v13 = a2[1];
        *a1 = *a2;
        a1[1] = v13;
        swift_bridgeObjectRetain();
        uint64_t v14 = sub_12124(&qword_26E310);
        uint64_t v15 = *(int *)(v14 + 48);
        uint64_t v16 = (char *)a1 + v15;
        uint64_t v17 = (char *)a2 + v15;
        uint64_t v18 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v18 - 8) + 16))(v16, v17, v18);
        *((unsigned char *)a1 + *(int *)(v14 + 64)) = *((unsigned char *)a2 + *(int *)(v14 + 64));
        break;
      case 8u:
        uint64_t v19 = a2[1];
        *a1 = *a2;
        a1[1] = v19;
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_12124(&qword_26E308);
        uint64_t v21 = *(int *)(v20 + 48);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        *((unsigned char *)a1 + *(int *)(v20 + 64)) = *((unsigned char *)a2 + *(int *)(v20 + 64));
        break;
      case 0xAu:
        uint64_t v25 = a2[1];
        *a1 = *a2;
        a1[1] = v25;
        swift_bridgeObjectRetain();
        uint64_t v26 = sub_12124(&qword_26E2F8);
        uint64_t v27 = *(int *)(v26 + 48);
        uint64_t v28 = (char *)a1 + v27;
        uint64_t v29 = (char *)a2 + v27;
        uint64_t v30 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v30 - 8) + 16))(v28, v29, v30);
        *(void *)((char *)a1 + *(int *)(v26 + 64)) = *(void *)((char *)a2 + *(int *)(v26 + 64));
        break;
      default:
        uint64_t v31 = a2[1];
        *a1 = *a2;
        a1[1] = v31;
        swift_bridgeObjectRetain();
        uint64_t v32 = *(int *)(sub_12124(&qword_26E300) + 48);
        uint64_t v33 = (char *)a1 + v32;
        uint64_t v34 = (char *)a2 + v32;
        uint64_t v35 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v35 - 8) + 16))(v33, v34, v35);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for Event(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 5:
    case 6:
    case 7:
    case 9:
    case 11:
    case 12:
    case 13:
    case 14:
    case 15:
    case 16:
      swift_bridgeObjectRelease();
      int v3 = &qword_26E300;
      goto LABEL_3;
    case 1:
    case 4:
      swift_bridgeObjectRelease();
      int v3 = &qword_26E2F0;
      goto LABEL_3;
    case 2:
    case 3:
      swift_bridgeObjectRelease();
      int v3 = &qword_26E310;
      goto LABEL_3;
    case 8:
      swift_bridgeObjectRelease();
      int v3 = &qword_26E308;
      goto LABEL_3;
    case 10:
      swift_bridgeObjectRelease();
      int v3 = &qword_26E2F8;
LABEL_3:
      uint64_t v4 = a1 + *(int *)(sub_12124(v3) + 48);
      uint64_t v5 = sub_1FB0E0();
      uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);
      uint64_t result = v6(v4, v5);
      break;
    default:
      return result;
  }
  return result;
}

void *initializeWithCopy for Event(void *a1, void *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
      uint64_t v9 = a2[1];
      *a1 = *a2;
      a1[1] = v9;
      swift_bridgeObjectRetain();
      uint64_t v10 = (int *)sub_12124(&qword_26E2F0);
      uint64_t v11 = v10[12];
      uint64_t v12 = (char *)a1 + v11;
      uint64_t v13 = (char *)a2 + v11;
      uint64_t v14 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v14 - 8) + 16))(v12, v13, v14);
      *((unsigned char *)a1 + v10[16]) = *((unsigned char *)a2 + v10[16]);
      uint64_t v15 = v10[20];
      goto LABEL_8;
    case 2u:
    case 3u:
      uint64_t v16 = a2[1];
      *a1 = *a2;
      a1[1] = v16;
      swift_bridgeObjectRetain();
      uint64_t v17 = &qword_26E310;
      goto LABEL_6;
    case 8u:
      uint64_t v18 = a2[1];
      *a1 = *a2;
      a1[1] = v18;
      swift_bridgeObjectRetain();
      uint64_t v17 = &qword_26E308;
LABEL_6:
      uint64_t v19 = sub_12124(v17);
      uint64_t v20 = *(int *)(v19 + 48);
      uint64_t v21 = (char *)a1 + v20;
      uint64_t v22 = (char *)a2 + v20;
      uint64_t v23 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v23 - 8) + 16))(v21, v22, v23);
      *((unsigned char *)a1 + *(int *)(v19 + 64)) = *((unsigned char *)a2 + *(int *)(v19 + 64));
      break;
    case 0xAu:
      uint64_t v24 = a2[1];
      *a1 = *a2;
      a1[1] = v24;
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_12124(&qword_26E2F8);
      uint64_t v26 = *(int *)(v25 + 48);
      uint64_t v27 = (char *)a1 + v26;
      uint64_t v28 = (char *)a2 + v26;
      uint64_t v29 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v29 - 8) + 16))(v27, v28, v29);
      uint64_t v15 = *(int *)(v25 + 64);
LABEL_8:
      *(void *)((char *)a1 + v15) = *(void *)((char *)a2 + v15);
      break;
    default:
      uint64_t v4 = a2[1];
      *a1 = *a2;
      a1[1] = v4;
      swift_bridgeObjectRetain();
      uint64_t v5 = *(int *)(sub_12124(&qword_26E300) + 48);
      uint64_t v6 = (char *)a1 + v5;
      uint64_t v7 = (char *)a2 + v5;
      uint64_t v8 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for Event(void *a1, void *a2)
{
  if (a1 != a2)
  {
    sub_98DB0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v8 = (int *)sub_12124(&qword_26E2F0);
        uint64_t v9 = v8[12];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
        *((unsigned char *)a1 + v8[16]) = *((unsigned char *)a2 + v8[16]);
        uint64_t v13 = v8[20];
        goto LABEL_9;
      case 2u:
      case 3u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v14 = &qword_26E310;
        goto LABEL_7;
      case 8u:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v14 = &qword_26E308;
LABEL_7:
        uint64_t v15 = sub_12124(v14);
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 16))(v17, v18, v19);
        *((unsigned char *)a1 + *(int *)(v15 + 64)) = *((unsigned char *)a2 + *(int *)(v15 + 64));
        break;
      case 0xAu:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v20 = sub_12124(&qword_26E2F8);
        uint64_t v21 = *(int *)(v20 + 48);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 16))(v22, v23, v24);
        uint64_t v13 = *(int *)(v20 + 64);
LABEL_9:
        *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        uint64_t v4 = *(int *)(sub_12124(&qword_26E300) + 48);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

_OWORD *initializeWithTake for Event(_OWORD *a1, _OWORD *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 4u:
      *a1 = *a2;
      uint64_t v8 = (int *)sub_12124(&qword_26E2F0);
      uint64_t v9 = v8[12];
      uint64_t v10 = (char *)a1 + v9;
      uint64_t v11 = (char *)a2 + v9;
      uint64_t v12 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
      *((unsigned char *)a1 + v8[16]) = *((unsigned char *)a2 + v8[16]);
      uint64_t v13 = v8[20];
      goto LABEL_8;
    case 2u:
    case 3u:
      *a1 = *a2;
      uint64_t v14 = &qword_26E310;
      goto LABEL_6;
    case 8u:
      *a1 = *a2;
      uint64_t v14 = &qword_26E308;
LABEL_6:
      uint64_t v15 = sub_12124(v14);
      uint64_t v16 = *(int *)(v15 + 48);
      uint64_t v17 = (char *)a1 + v16;
      uint64_t v18 = (char *)a2 + v16;
      uint64_t v19 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
      *((unsigned char *)a1 + *(int *)(v15 + 64)) = *((unsigned char *)a2 + *(int *)(v15 + 64));
      break;
    case 0xAu:
      *a1 = *a2;
      uint64_t v20 = sub_12124(&qword_26E2F8);
      uint64_t v21 = *(int *)(v20 + 48);
      uint64_t v22 = (char *)a1 + v21;
      uint64_t v23 = (char *)a2 + v21;
      uint64_t v24 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
      uint64_t v13 = *(int *)(v20 + 64);
LABEL_8:
      *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
      break;
    default:
      *a1 = *a2;
      uint64_t v4 = *(int *)(sub_12124(&qword_26E300) + 48);
      uint64_t v5 = (char *)a1 + v4;
      uint64_t v6 = (char *)a2 + v4;
      uint64_t v7 = sub_1FB0E0();
      (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

_OWORD *assignWithTake for Event(_OWORD *a1, _OWORD *a2)
{
  if (a1 != a2)
  {
    sub_98DB0((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
      case 4u:
        *a1 = *a2;
        uint64_t v8 = (int *)sub_12124(&qword_26E2F0);
        uint64_t v9 = v8[12];
        uint64_t v10 = (char *)a1 + v9;
        uint64_t v11 = (char *)a2 + v9;
        uint64_t v12 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
        *((unsigned char *)a1 + v8[16]) = *((unsigned char *)a2 + v8[16]);
        uint64_t v13 = v8[20];
        goto LABEL_9;
      case 2u:
      case 3u:
        *a1 = *a2;
        uint64_t v14 = &qword_26E310;
        goto LABEL_7;
      case 8u:
        *a1 = *a2;
        uint64_t v14 = &qword_26E308;
LABEL_7:
        uint64_t v15 = sub_12124(v14);
        uint64_t v16 = *(int *)(v15 + 48);
        uint64_t v17 = (char *)a1 + v16;
        uint64_t v18 = (char *)a2 + v16;
        uint64_t v19 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v19 - 8) + 32))(v17, v18, v19);
        *((unsigned char *)a1 + *(int *)(v15 + 64)) = *((unsigned char *)a2 + *(int *)(v15 + 64));
        break;
      case 0xAu:
        *a1 = *a2;
        uint64_t v20 = sub_12124(&qword_26E2F8);
        uint64_t v21 = *(int *)(v20 + 48);
        uint64_t v22 = (char *)a1 + v21;
        uint64_t v23 = (char *)a2 + v21;
        uint64_t v24 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v22, v23, v24);
        uint64_t v13 = *(int *)(v20 + 64);
LABEL_9:
        *(void *)((char *)a1 + v13) = *(void *)((char *)a2 + v13);
        break;
      default:
        *a1 = *a2;
        uint64_t v4 = *(int *)(sub_12124(&qword_26E300) + 48);
        uint64_t v5 = (char *)a1 + v4;
        uint64_t v6 = (char *)a2 + v4;
        uint64_t v7 = sub_1FB0E0();
        (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t getEnumTagSinglePayload for Event(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(void))(*(void *)(a3 - 8) + 48))();
}

uint64_t storeEnumTagSinglePayload for Event(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(*(void *)(a4 - 8) + 56))();
}

uint64_t sub_9DE64()
{
  return swift_storeEnumTagMultiPayload();
}

uint64_t sub_9DE74()
{
  uint64_t result = sub_1FB0E0();
  if (v1 <= 0x3F)
  {
    uint64_t v2 = *(void *)(result - 8) + 64;
    swift_getTupleTypeLayout2();
    uint64_t v24 = &v23;
    uint64_t v18 = &unk_205810;
    uint64_t v19 = v2;
    uint64_t v20 = &unk_205828;
    uint64_t v21 = (char *)&value witness table for Builtin.Int64 + 64;
    swift_getTupleTypeLayout();
    uint64_t v25 = &v22;
    swift_getTupleTypeLayout3();
    uint64_t v26 = &v17;
    swift_getTupleTypeLayout3();
    uint64_t v27 = &v16;
    uint64_t v18 = &unk_205810;
    uint64_t v19 = v2;
    uint64_t v20 = &unk_205828;
    uint64_t v21 = (char *)&value witness table for Builtin.Int64 + 64;
    swift_getTupleTypeLayout();
    uint64_t v28 = &v15;
    swift_getTupleTypeLayout2();
    uint64_t v29 = &v14;
    swift_getTupleTypeLayout2();
    uint64_t v30 = &v13;
    swift_getTupleTypeLayout2();
    uint64_t v31 = &v12;
    swift_getTupleTypeLayout3();
    uint64_t v32 = &v11;
    swift_getTupleTypeLayout2();
    uint64_t v33 = &v10;
    swift_getTupleTypeLayout3();
    uint64_t v34 = &v9;
    swift_getTupleTypeLayout2();
    uint64_t v35 = &v8;
    swift_getTupleTypeLayout2();
    uint64_t v36 = &v7;
    swift_getTupleTypeLayout2();
    uint64_t v37 = &v6;
    swift_getTupleTypeLayout2();
    uint64_t v38 = &v5;
    swift_getTupleTypeLayout2();
    uint64_t v39 = &v4;
    swift_getTupleTypeLayout2();
    uint64_t v40 = &v3;
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for Event.FinishedMechanism(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x9E1C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Event.FinishedMechanism()
{
  return &type metadata for Event.FinishedMechanism;
}

uint64_t dispatch thunk of EventStoreType.assetIDsForEvents(ofTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_9E870;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EventStoreType.events()(uint64_t a1, uint64_t a2)
{
  char v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 16) + **(int **)(a2 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_9E870;
  return v7(a1, a2);
}

uint64_t dispatch thunk of EventStoreType.events(ofTypes:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 24) + **(int **)(a3 + 24));
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_9E870;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of EventStoreType.events(forBooksWithAssetIDs:ofTypes:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 32) + **(int **)(a4 + 32));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_9E870;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of EventStoreType.daysOfEvents(ofTypes:timeZone:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 40) + **(int **)(a4 + 40));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of EventStoreType.earliestEventTimestamp()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  char v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_5958;
  return v9(a1, a2, a3);
}

uint64_t sub_9E810(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26E418);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_9E874@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (!v12)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E288);
  uint64_t result = sub_1FB240();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D140);
  uint64_t result = sub_1FB260();
  if (v8)
  {
    uint64_t v5 = type metadata accessor for MediaTypesMediaTypeRecommendationService();
    uint64_t v6 = swift_allocObject();
    sub_37C30(&v11, v6 + 16);
    sub_37C30(&v9, v6 + 56);
    uint64_t result = sub_37C30(&v7, v6 + 96);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_257808;
    *a2 = v6;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for MediaTypeRecommendationServiceAssembly()
{
  return self;
}

uint64_t sub_9E9FC()
{
  uint64_t v0 = sub_1FB350();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB280();
  sub_12124(&qword_26E4B8);
  sub_1FB310();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  sub_1FB230();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_9EB48()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for CollectionRecommendationsScorer()
{
  return self;
}

uint64_t sub_9EBA4@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  int64_t v3 = *(void *)(result + 16);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v5 = result;
    uint64_t result = sub_46894(0, v3, 0);
    uint64_t v4 = _swiftEmptyArrayStorage;
    uint64_t v6 = (uint64_t *)(v5 + 32);
    while (1)
    {
      uint64_t v8 = *v6++;
      uint64_t v7 = v8;
      if (v8 < 0) {
        break;
      }
      long long v11 = v4;
      unint64_t v10 = v4[2];
      unint64_t v9 = v4[3];
      if (v10 >= v9 >> 1)
      {
        uint64_t result = sub_46894(v9 > 1, v10 + 1, 1);
        uint64_t v4 = v11;
      }
      v4[2] = v10 + 1;
      v4[v10 + 4] = v7;
      if (!--v3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    *a2 = v4;
  }
  return result;
}

uint64_t sub_9EC7C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  switch(*((unsigned char *)v1 + 8))
  {
    case 1:
      sub_9EDAC();
      swift_allocError();
      *(void *)uint64_t v4 = v2;
      *(unsigned char *)(v4 + 8) = 0;
      goto LABEL_7;
    case 2:
      sub_9EDAC();
      swift_allocError();
      *(void *)uint64_t v5 = v2;
      char v6 = 1;
      goto LABEL_6;
    case 3:
      sub_9EDAC();
      swift_allocError();
      *(void *)uint64_t v5 = v2;
      char v6 = 2;
LABEL_6:
      *(unsigned char *)(v5 + 8) = v6;
LABEL_7:
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4:
      sub_9EDAC();
      swift_allocError();
      *(void *)uint64_t v7 = v2;
      *(unsigned char *)(v7 + 8) = 3;
LABEL_9:
      uint64_t result = swift_willThrow();
      break;
    default:
      *a1 = v2;
      uint64_t result = swift_bridgeObjectRetain();
      break;
  }
  return result;
}

unint64_t sub_9EDAC()
{
  unint64_t result = qword_26E5C0;
  if (!qword_26E5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E5C0);
  }
  return result;
}

void *sub_9EE00(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_46538(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 10;
      uint64_t v5 = v6;
      unint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_46538(v7 > 1, v8 + 1, 1);
        unint64_t result = v9;
      }
      result[2] = v8 + 1;
      result[v8 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_9EEC0(uint64_t a1, void *a2)
{
  v3[287] = v2;
  v3[286] = a1;
  v3[288] = type metadata accessor for SeedBookRecommendationWork();
  v3[289] = swift_task_alloc();
  memcpy(v3 + 235, a2, 0x170uLL);
  v3[290] = a2[46];
  memcpy(v3 + 142, a2 + 47, 0x2E8uLL);
  return _swift_task_switch(sub_9EF94, 0, 0);
}

uint64_t sub_9EF94()
{
  uint64_t v2 = v1[286];
  uint64_t result = type metadata accessor for SeedBasedRecommendationRequest(0);
  uint64_t v4 = *(void *)(v2 + *(int *)(result + 52));
  if (v4)
  {
    uint64_t v5 = *(void *)(v2 + *(int *)(result + 56));
    if (v5 == 0x8000000000000000 && v4 == -1)
    {
      __break(1u);
    }
    else
    {
      uint64_t v7 = v1[289];
      uint64_t v8 = v1[288];
      uint64_t v9 = v5 / v4;
      if (v1[290] >= v9) {
        uint64_t v10 = v9;
      }
      else {
        uint64_t v10 = v1[290];
      }
      sub_1FB100();
      sub_A0EE0(v2, v7 + *(int *)(v8 + 20));
      *(void *)(v7 + *(int *)(v8 + 24)) = v10;
      sub_12124(&qword_26D6A0);
      sub_A15C0();
      sub_1FB460();
      char v22 = (void *)v1[287];
      sub_A1618(v1[289]);
      uint64_t v23 = v1[284];
      v1[291] = v23;
      uint64_t v24 = sub_9EE00(v23);
      v1[292] = v24;
      uint64_t v25 = v22[6];
      uint64_t v26 = v22[7];
      sub_5D64(v22 + 3, v25);
      uint64_t v28 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v26 + 16) + **(int **)(v26 + 16));
      uint64_t v27 = (void *)swift_task_alloc();
      v1[293] = v27;
      *uint64_t v27 = v1;
      v27[1] = sub_9F378;
      return v28(v24, v25, v26);
    }
  }
  else
  {
    __break(1u);
    swift_once();
    uint64_t v11 = v1[290];
    uint64_t v12 = (void *)v1[287];
    char v13 = (void *)qword_272B68;
    sub_12124(&qword_26D7F0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1FD2A0;
    v1[281] = 0;
    v1[282] = 0xE000000000000000;
    v1[283] = v0;
    id v15 = v13;
    sub_12124(&qword_26D670);
    sub_1FC1D0();
    uint64_t v16 = v1[281];
    uint64_t v17 = v1[282];
    *(void *)(v14 + 56) = &type metadata for String;
    *(void *)(v14 + 64) = sub_5FD80();
    *(void *)(v14 + 32) = v16;
    *(void *)(v14 + 40) = v17;
    sub_1FBDC0();
    sub_1FB400();
    swift_bridgeObjectRelease();

    uint64_t v18 = v12[11];
    uint64_t v19 = v12[12];
    sub_5D64(v12 + 8, v18);
    memcpy(v1 + 2, v1 + 235, 0x170uLL);
    v1[48] = v11;
    memcpy(v1 + 49, v1 + 142, 0x2E8uLL);
    uint64_t v20 = (void *)swift_task_alloc();
    v1[297] = v20;
    *uint64_t v20 = v1;
    v20[1] = sub_9F550;
    uint64_t v21 = v1[286];
    return sub_1A832C(v21, (uint64_t)(v1 + 2), v18, v19);
  }
  return result;
}

uint64_t sub_9F378(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2352) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_9F6EC;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 2360) = a1;
    uint64_t v5 = sub_9F4A8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_9F4A8()
{
  uint64_t v1 = v0[295];
  uint64_t v2 = v0[291];
  swift_bridgeObjectRetain();
  int64_t v3 = sub_A1674(v2, v1);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void *))v0[1];
  return v4(v3);
}

uint64_t sub_9F550(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2384) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_9F920;
  }
  else
  {
    *(void *)(v4 + 2392) = a1;
    uint64_t v5 = sub_9F678;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_9F678()
{
  swift_errorRelease();
  uint64_t v1 = *(void *)(v0 + 2392);
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_9F6EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = v0[294];
  v0[296] = v1;
  if (qword_26C388 != -1) {
    swift_once();
  }
  uint64_t v2 = v0[290];
  int64_t v3 = (void *)v0[287];
  uint64_t v4 = (void *)qword_272B68;
  sub_12124(&qword_26D7F0);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_1FD2A0;
  v0[281] = 0;
  v0[282] = 0xE000000000000000;
  v0[283] = v1;
  id v6 = v4;
  sub_12124(&qword_26D670);
  sub_1FC1D0();
  uint64_t v7 = v0[281];
  uint64_t v8 = v0[282];
  *(void *)(v5 + 56) = &type metadata for String;
  *(void *)(v5 + 64) = sub_5FD80();
  *(void *)(v5 + 32) = v7;
  *(void *)(v5 + 40) = v8;
  sub_1FBDC0();
  sub_1FB400();

  swift_bridgeObjectRelease();
  uint64_t v9 = v3[11];
  uint64_t v10 = v3[12];
  sub_5D64(v3 + 8, v9);
  memcpy(v0 + 2, v0 + 235, 0x170uLL);
  v0[48] = v2;
  memcpy(v0 + 49, v0 + 142, 0x2E8uLL);
  uint64_t v11 = (void *)swift_task_alloc();
  v0[297] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_9F550;
  uint64_t v12 = v0[286];
  return sub_1A832C(v12, (uint64_t)(v0 + 2), v9, v10);
}

uint64_t sub_9F920()
{
  swift_errorRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t TabiSeedBasedRecommendationService.fetchBooks(for:configuration:)(uint64_t a1, const void *a2)
{
  v3[144] = v2;
  v3[143] = a1;
  memcpy(v3 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_9FA08, 0, 0);
}

uint64_t sub_9FA08()
{
  uint64_t v1 = sub_12124(&qword_26D490);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 1160) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 1144);
  *(void *)(v2 + 32) = v0 + 16;
  uint64_t v3 = sub_12124(&qword_26E5E0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1168) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_9FB2C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 1136, v1, v3, 0, 0, &unk_26E5D8, v2, v1);
}

uint64_t sub_9FB2C()
{
  *(void *)(*(void *)v1 + 1176) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_9FC64;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_9FC48;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_9FC48()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 1136));
}

uint64_t sub_9FC64()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_9FCC8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[14] = a4;
  v5[15] = a5;
  v5[12] = a2;
  v5[13] = a3;
  v5[11] = a1;
  uint64_t v6 = sub_12124(&qword_26D490);
  v5[16] = v6;
  v5[17] = *(void *)(v6 - 8);
  v5[18] = swift_task_alloc();
  v5[19] = swift_task_alloc();
  v5[20] = swift_task_alloc();
  sub_12124(&qword_26E6A8);
  v5[21] = swift_task_alloc();
  uint64_t v7 = sub_12124(&qword_26E6B0);
  v5[22] = v7;
  v5[23] = *(void *)(v7 - 8);
  v5[24] = swift_task_alloc();
  uint64_t v8 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  v5[25] = v8;
  v5[26] = *(void *)(v8 + 64);
  v5[27] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v5[28] = swift_task_alloc();
  v5[29] = swift_task_alloc();
  return _swift_task_switch(sub_9FEE0, 0, 0);
}

uint64_t sub_9FEE0()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + v4;
    uint64_t v31 = *(void *)(v3 + 72);
    unint64_t v32 = v4;
    unint64_t v30 = (*(void *)(v0 + 208) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v6 = sub_1FBC60();
    uint64_t v7 = *(void *)(v6 - 8);
    uint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 56);
    uint64_t v27 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    uint64_t v26 = (void (**)(uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v29 = v6;
    while (1)
    {
      uint64_t v33 = v2;
      uint64_t v10 = *(void *)(v0 + 224);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v11 = *(void *)(v0 + 216);
      uint64_t v13 = *(void *)(v0 + 112);
      uint64_t v12 = *(const void **)(v0 + 120);
      v28(v9, 1, 1, v6);
      sub_A0EE0(v5, v11);
      uint64_t v14 = swift_allocObject();
      *(void *)(v14 + 16) = 0;
      id v15 = (void *)(v14 + 16);
      *(void *)(v14 + 24) = 0;
      sub_A1178(v11, v14 + v32);
      *(void *)(v14 + v30) = v13;
      memcpy((void *)(v14 + ((v30 + 15) & 0xFFFFFFFFFFFFFFF8)), v12, 0x460uLL);
      sub_98A40(v9, v10);
      LODWORD(v10) = (*v27)(v10, 1, v6);
      swift_retain();
      sub_A1310((uint64_t)v12);
      uint64_t v16 = *(void *)(v0 + 224);
      if (v10 == 1)
      {
        sub_55F38(*(void *)(v0 + 224), &qword_26D908);
        if (!*v15) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1FBC50();
        (*v26)(v16, v6);
        if (!*v15)
        {
LABEL_8:
          uint64_t v17 = 0;
          uint64_t v19 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v17 = sub_1FBBD0();
      uint64_t v19 = v18;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v20 = **(void **)(v0 + 96);
      uint64_t v21 = v19 | v17;
      if (v19 | v17)
      {
        uint64_t v21 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v17;
        *(void *)(v0 + 40) = v19;
      }
      uint64_t v8 = *(void *)(v0 + 232);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v21;
      *(void *)(v0 + 64) = v20;
      swift_task_create();
      swift_release();
      sub_55F38(v8, &qword_26D908);
      v5 += v31;
      uint64_t v2 = v33 - 1;
      uint64_t v6 = v29;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_12124(&qword_26D670);
  sub_1FBC80();
  *(void *)(v0 + 240) = _swiftEmptyDictionarySingleton;
  char v22 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v22;
  *char v22 = v0;
  v22[1] = sub_A028C;
  uint64_t v23 = *(void *)(v0 + 168);
  uint64_t v24 = *(void *)(v0 + 176);
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v23, 0, 0, v24, v0 + 72);
}

uint64_t sub_A028C()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_A07B8;
  }
  else
  {
    uint64_t v1 = sub_A03A4;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_A03A4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[16];
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[17] + 48))(v1, 1, v2);
  uint64_t v4 = v0[30];
  if (v3 == 1)
  {
    uint64_t v5 = (void *)v0[11];
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    *uint64_t v5 = v4;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  uint64_t v9 = v0[19];
  uint64_t v8 = v0[20];
  uint64_t v43 = v0[18];
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = *(void *)(v1 + v10);
  uint64_t v12 = sub_1FB110();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v8, v1, v12);
  *(void *)(v8 + v10) = v11;
  uint64_t v14 = *(int *)(v2 + 48);
  id v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v15(v9, v8, v12);
  *(void *)(v9 + v14) = v11;
  uint64_t v16 = *(int *)(v2 + 48);
  uint64_t v42 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v15;
  v15(v43, v8, v12);
  *(void *)(v43 + v16) = v11;
  swift_bridgeObjectRetain();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v0[10] = v4;
  unint64_t v22 = sub_4C9C4(v9);
  uint64_t v23 = *(void *)(v4 + 16);
  BOOL v24 = (v18 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_22;
  }
  char v26 = v18;
  if (*(void *)(v0[30] + 24) >= v25)
  {
    uint64_t v30 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1212EC();
    }
    goto LABEL_14;
  }
  uint64_t v27 = v0[19];
  sub_118B9C(v25, isUniquelyReferenced_nonNull_native);
  unint64_t v28 = sub_4C9C4(v27);
  uint64_t v30 = v13;
  if ((v26 & 1) == (v29 & 1))
  {
    unint64_t v22 = v28;
LABEL_14:
    uint64_t v31 = (void *)v0[10];
    if (v26)
    {
      uint64_t v32 = v31[7];
      swift_bridgeObjectRelease();
      *(void *)(v32 + 8 * v22) = v11;
      goto LABEL_18;
    }
    uint64_t v33 = v0[19];
    v31[(v22 >> 6) + 8] |= 1 << v22;
    uint64_t v25 = v42(v31[6] + *(void *)(v30 + 72) * v22, v33, v12);
    *(void *)(v31[7] + 8 * v22) = v11;
    uint64_t v34 = v31[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (!v35)
    {
      v31[2] = v36;
LABEL_18:
      uint64_t v38 = v0[19];
      uint64_t v37 = v0[20];
      uint64_t v39 = v0[18];
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v40(v38, v12);
      sub_55F38(v37, &qword_26D490);
      v40(v39, v12);
      v0[30] = v31;
      uint64_t v41 = (void *)swift_task_alloc();
      v0[31] = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_A028C;
      uint64_t v25 = v0[21];
      uint64_t v20 = v0[22];
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      uint64_t v21 = v0 + 9;
      return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v25, v18, v19, v20, v21);
    }
LABEL_22:
    __break(1u);
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v25, v18, v19, v20, v21);
  }
  return sub_1FC770();
}

uint64_t sub_A07B8()
{
  (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_A08A0(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v9;
  void *v9 = v3;
  v9[1] = sub_98BD4;
  return sub_9FCC8(a1, a2, v6, v7, v8);
}

uint64_t sub_A0964(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[145] = a6;
  v6[144] = a5;
  v6[143] = a4;
  v6[142] = a1;
  return _swift_task_switch(sub_A0990, 0, 0);
}

uint64_t sub_A0990()
{
  uint64_t v1 = (const void *)v0[145];
  uint64_t v2 = v0[143];
  uint64_t v3 = v0[142];
  uint64_t v4 = sub_1FB110();
  v0[146] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v0[147] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  memcpy(v0 + 2, v1, 0x460uLL);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[148] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_A0AB4;
  uint64_t v7 = v0[143];
  return sub_9EEC0(v7, v0 + 2);
}

uint64_t sub_A0AB4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1192) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_A0C14;
  }
  else
  {
    *(void *)(v4 + 1200) = a1;
    *(_DWORD *)(v4 + 1208) = *(_DWORD *)(sub_12124(&qword_26D490) + 48);
    uint64_t v5 = sub_A0BEC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_A0BEC()
{
  *(void *)(*(void *)(v0 + 1136) + *(int *)(v0 + 1208)) = *(void *)(v0 + 1200);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_A0C14()
{
  (*(void (**)(void, void))(v0[147] + 8))(v0[142], v0[146]);
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t TabiSeedBasedRecommendationService.deinit()
{
  swift_release();
  sub_1264C(v0 + 24);
  sub_1264C(v0 + 64);
  return v0;
}

uint64_t TabiSeedBasedRecommendationService.__deallocating_deinit()
{
  swift_release();
  sub_1264C(v0 + 24);
  sub_1264C(v0 + 64);

  return swift_deallocClassInstance();
}

uint64_t sub_A0D04(uint64_t a1, const void *a2)
{
  v3[143] = a1;
  v3[144] = *v2;
  memcpy(v3 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_A0D80, 0, 0);
}

uint64_t sub_A0D80()
{
  uint64_t v1 = sub_12124(&qword_26D490);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 1160) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 1144);
  *(void *)(v2 + 32) = v0 + 16;
  uint64_t v3 = sub_12124(&qword_26E5E0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1168) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_9FB2C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 1136, v1, v3, 0, 0, &unk_26E6A0, v2, v1);
}

uint64_t type metadata accessor for TabiSeedBasedRecommendationService()
{
  return self;
}

uint64_t method lookup function for TabiSeedBasedRecommendationService(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabiSeedBasedRecommendationService);
}

uint64_t sub_A0EE0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeedBasedRecommendationRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_A0F44()
{
  uint64_t v1 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v5 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v6 = (void *)(v0 + v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 904))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[116])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[124])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v6[134])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v4 + 1120, v2 | 7);
}

uint64_t sub_A1178(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for SeedBasedRecommendationRequest(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A11DC(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *uint64_t v10 = v2;
  v10[1] = sub_5958;
  v10[145] = v9;
  v10[144] = v8;
  v10[143] = v7;
  v10[142] = a1;
  return _swift_task_switch(sub_A0990, 0, 0);
}

uint64_t sub_A1310(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 744);
  uint64_t v23 = *(void *)(a1 + 736);
  uint64_t v20 = *(void *)(a1 + 760);
  uint64_t v21 = *(void *)(a1 + 752);
  uint64_t v18 = *(void *)(a1 + 776);
  uint64_t v19 = *(void *)(a1 + 768);
  uint64_t v16 = *(void *)(a1 + 792);
  uint64_t v17 = *(void *)(a1 + 784);
  long long v8 = *(_OWORD *)(a1 + 816);
  long long v9 = *(_OWORD *)(a1 + 800);
  long long v7 = *(_OWORD *)(a1 + 832);
  long long v5 = *(_OWORD *)(a1 + 864);
  long long v6 = *(_OWORD *)(a1 + 848);
  long long v4 = *(_OWORD *)(a1 + 880);
  long long v3 = *(_OWORD *)(a1 + 896);
  uint64_t v10 = *(void *)(a1 + 928);
  uint64_t v11 = *(void *)(a1 + 920);
  uint64_t v14 = *(void *)(a1 + 976);
  uint64_t v15 = *(void *)(a1 + 968);
  uint64_t v12 = *(void *)(a1 + 992);
  uint64_t v13 = *(void *)(a1 + 984);
  uint64_t v26 = *(void *)(a1 + 1056);
  uint64_t v27 = *(void *)(a1 + 1048);
  uint64_t v24 = *(void *)(a1 + 1072);
  uint64_t v25 = *(void *)(a1 + 1064);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_8D2AC(v23, v22, v21, v20, v19, v18, v17, v16, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3,
    *((uint64_t *)&v3 + 1));
  sub_8D2F8(v11, v10);
  sub_8D348(v15, v14, v13, v12);
  swift_bridgeObjectRetain();
  sub_8D38C(v27, v26, v25, v24);
  return a1;
}

unint64_t sub_A15C0()
{
  unint64_t result = qword_26D7A0;
  if (!qword_26D7A0)
  {
    type metadata accessor for SeedBookRecommendationWork();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7A0);
  }
  return result;
}

uint64_t sub_A1618(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeedBookRecommendationWork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void *sub_A1674(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v72 = _swiftEmptyArrayStorage;
  uint64_t v60 = v2;
  uint64_t v61 = a2;
  uint64_t v62 = v4;
  while (1)
  {
    if (!*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
    long long v9 = (uint64_t *)(v4 + 80 * v5);
    char v70 = *((unsigned char *)v9 + 8);
    uint64_t v74 = v9[4];
    char v73 = *((unsigned char *)v9 + 40);
    uint64_t v10 = v9[7];
    uint64_t v76 = v9[6];
    uint64_t v75 = v9[8];
    uint64_t v11 = v9[9];
    uint64_t v71 = *v9;
    uint64_t v12 = sub_56168(*v9);
    if ((v13 & 1) == 0) {
      goto LABEL_4;
    }
    uint64_t v68 = v10;
    uint64_t v14 = *(void *)(a2 + 56) + 80 * v12;
    uint64_t v16 = *(void *)(v14 + 8);
    uint64_t v15 = *(void *)(v14 + 16);
    char v64 = *(unsigned char *)(v14 + 72);
    long long v67 = *(_OWORD *)(v14 + 56);
    uint64_t v65 = *(void *)(v14 + 48);
    uint64_t v66 = *(void *)(v14 + 40);
    uint64_t v17 = v67 == 2 ? 0 : *(void *)(v14 + 48);
    uint64_t v63 = v17;
    uint64_t v18 = *(void *)(v16 + 16);
    uint64_t v69 = v15;
    if (v18) {
      break;
    }
    sub_5480C(v74, v73);
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain_n();
    sub_5480C(v74, v73);
    swift_bridgeObjectRetain();
    uint64_t v20 = _swiftEmptyArrayStorage;
LABEL_44:
    uint64_t v41 = v20[2];
    uint64_t v42 = sub_1FBCD0();
    uint64_t v43 = v42;
    if (v41)
    {
      uint64_t v44 = 0;
      uint64_t v45 = v42 + 56;
      while (1)
      {
        uint64_t v46 = v20[v44++ + 4];
        uint64_t v47 = sub_1FC7D0();
        uint64_t v48 = -1 << *(unsigned char *)(v43 + 32);
        unint64_t v49 = v47 & ~v48;
        if (((*(void *)(v45 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
          goto LABEL_53;
        }
        uint64_t v50 = *(void *)(v43 + 48);
        if (*(void *)(v50 + 8 * v49) == v46)
        {
LABEL_46:
          if (v44 == v41) {
            break;
          }
        }
        else
        {
          uint64_t v51 = ~v48;
          while (1)
          {
            unint64_t v49 = (v49 + 1) & v51;
            if (((*(void *)(v45 + ((v49 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v49) & 1) == 0) {
              break;
            }
            if (*(void *)(v50 + 8 * v49) == v46) {
              goto LABEL_46;
            }
          }
LABEL_53:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v79 = v43;
          sub_C020(v46, v49, isUniquelyReferenced_nonNull_native);
          uint64_t v43 = v79;
          swift_bridgeObjectRelease();
          if (v44 == v41) {
            break;
          }
          uint64_t v45 = v43 + 56;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v53 = 1;
    sub_5578C();
    uint64_t v79 = sub_1FBCD0();
    uint64_t v54 = &byte_254170;
    uint64_t v2 = v60;
    a2 = v61;
    do
    {
      char v55 = *v54++;
      sub_7A44(v78, v55);
      --v53;
    }
    while (v53);
    uint64_t v56 = v79;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_54820(v74, v73);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v72 = sub_41DE0(0, v72[2] + 1, 1, v72);
    }
    unint64_t v58 = v72[2];
    unint64_t v57 = v72[3];
    if (v58 >= v57 >> 1) {
      uint64_t v72 = sub_41DE0((void *)(v57 > 1), v58 + 1, 1, v72);
    }
    v72[2] = v58 + 1;
    long long v6 = &v72[19 * v58];
    v6[4] = v71;
    *((unsigned char *)v6 + 40) = v70;
    int v7 = *(_DWORD *)((char *)&v79 + 3);
    *(_DWORD *)((char *)v6 + 41) = v79;
    *((_DWORD *)v6 + 11) = v7;
    v6[6] = v63;
    *((unsigned char *)v6 + 56) = v67 == 2;
    int v8 = *(_DWORD *)v78;
    *((_DWORD *)v6 + 15) = *(_DWORD *)&v78[3];
    *(_DWORD *)((char *)v6 + 57) = v8;
    v6[8] = v74;
    *((unsigned char *)v6 + 72) = v73;
    *((_DWORD *)v6 + 19) = *(_DWORD *)&v77[3];
    *(_DWORD *)((char *)v6 + 73) = *(_DWORD *)v77;
    v6[10] = v76;
    v6[11] = v68;
    v6[12] = v75;
    v6[13] = v11;
    v6[14] = v69;
    v6[15] = v43;
    v6[16] = v56;
    v6[17] = _swiftEmptySetSingleton;
    v6[18] = v66;
    v6[19] = v65;
    *((_OWORD *)v6 + 10) = v67;
    *((unsigned char *)v6 + 176) = v64;
    uint64_t v4 = v62;
LABEL_4:
    if (++v5 == v2)
    {
      swift_bridgeObjectRelease();
      return v72;
    }
  }
  swift_bridgeObjectRetain();
  sub_5480C(v74, v73);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  sub_5480C(v74, v73);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v19 = (uint64_t *)(v16 + 40);
  uint64_t v20 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v22 = *(v19 - 1);
    uint64_t v21 = *v19;
    sub_12124(&qword_26D3C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
    uint64_t v24 = (void *)(inited + 16);
    *(void *)(inited + 32) = v22;
    uint64_t v25 = *(void *)(v21 + 16);
    swift_bridgeObjectRetain();
    if (!v25) {
      goto LABEL_15;
    }
    uint64_t v37 = sub_41858((int *)((char *)&dword_0 + 1), v25 + 1, 1, (void *)inited);
    if (!*(void *)(v21 + 16)) {
      break;
    }
    uint64_t inited = (uint64_t)v37;
    uint64_t v38 = v37[2];
    if ((v37[3] >> 1) - v38 < v25) {
      goto LABEL_68;
    }
    uint64_t v39 = &v37[v38 + 4];
    if (v21 + 32 < (unint64_t)&v39[v25] && (unint64_t)v39 < v21 + 32 + 8 * v25) {
      goto LABEL_71;
    }
    uint64_t v24 = (void *)(inited + 16);
    memcpy(v39, (const void *)(v21 + 32), 8 * v25);
    if (__OFADD__(*(void *)(inited + 16), v25)) {
      goto LABEL_69;
    }
    *uint64_t v24 = *(void *)(inited + 16) + v25;
LABEL_15:
    swift_bridgeObjectRelease();
    uint64_t v26 = *(void *)(inited + 16);
    int64_t v27 = v20[2];
    int64_t v28 = v27 + v26;
    if (__OFADD__(v27, v26))
    {
      __break(1u);
LABEL_65:
      __break(1u);
LABEL_66:
      __break(1u);
LABEL_67:
      __break(1u);
LABEL_68:
      __break(1u);
LABEL_69:
      __break(1u);
    }
    uint64_t v29 = swift_isUniquelyReferenced_nonNull_native();
    if ((v29 & 1) != 0 && v28 <= v20[3] >> 1)
    {
      if (*v24) {
        goto LABEL_24;
      }
    }
    else
    {
      if (v27 <= v28) {
        int64_t v30 = v27 + v26;
      }
      else {
        int64_t v30 = v27;
      }
      uint64_t v20 = sub_41858((void *)v29, v30, 1, v20);
      if (*v24)
      {
LABEL_24:
        uint64_t v31 = v20[2];
        if ((v20[3] >> 1) - v31 < v26) {
          goto LABEL_66;
        }
        uint64_t v32 = &v20[v31 + 4];
        if (inited + 32 < (unint64_t)&v32[v26] && (unint64_t)v32 < inited + 32 + 8 * v26) {
          goto LABEL_71;
        }
        memcpy(v32, (const void *)(inited + 32), 8 * v26);
        if (v26)
        {
          uint64_t v34 = v20[2];
          BOOL v35 = __OFADD__(v34, v26);
          uint64_t v36 = v34 + v26;
          if (v35) {
            goto LABEL_67;
          }
          v20[2] = v36;
        }
        goto LABEL_13;
      }
    }
    if (v26) {
      goto LABEL_65;
    }
LABEL_13:
    swift_bridgeObjectRelease();
    v19 += 2;
    if (!--v18)
    {
      swift_bridgeObjectRelease_n();
      goto LABEL_44;
    }
  }
  __break(1u);
LABEL_71:
  unint64_t result = (void *)sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A1D60(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v27 = sub_1FAED0();
  uint64_t v10 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v13 - 8);
  uint64_t v15 = (char *)&v25 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1FAF80();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  uint64_t v25 = (char *)&v25 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = a1;
  sub_51B70(a1, v5 + 16);
  uint64_t v29 = a2;
  sub_51B70(a2, v5 + 56);
  uint64_t v28 = a3;
  sub_51B70(a3, v5 + 96);
  uint64_t v26 = a4;
  sub_51B70(a4, v5 + 136);
  id v19 = [self defaultManager];
  id v20 = [v19 URLsForDirectory:13 inDomains:1];

  uint64_t v21 = sub_1FBAC0();
  if (*(void *)(v21 + 16))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v17 + 16))(v15, v21 + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80)), v16);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56))(v15, 1, 1, v16);
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v31 = 0xD00000000000001ALL;
    unint64_t v32 = 0x8000000000217DB0;
    uint64_t v23 = v27;
    (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for URL.DirectoryHint.inferFromPath(_:), v27);
    sub_51438();
    uint64_t v24 = v25;
    sub_1FAF70();
    sub_1264C(v26);
    sub_1264C(v28);
    sub_1264C(v29);
    sub_1264C(v30);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v15, v16);
    (*(void (**)(uint64_t, char *, uint64_t))(v17 + 32))(v5 + OBJC_IVAR____TtC20BooksPersonalization32UserEncodingInputFeaturesService_cachePath, v24, v16);
    return v5;
  }
  return result;
}

uint64_t sub_A2120(char a1)
{
  *(void *)(v2 + 4632) = v1;
  *(unsigned char *)(v2 + 5056) = a1;
  *(void *)(v2 + 4680) = *(void *)(type metadata accessor for Event() - 8);
  *(void *)(v2 + 4728) = swift_task_alloc();
  return _swift_task_switch(sub_A21E4, 0, 0);
}

uint64_t sub_A21E4()
{
  swift_retain_n();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 16, v0 + 696, sub_A22A0, v0 + 4592);
}

uint64_t sub_A22A0()
{
  *(void *)(v1 + 4776) = v0;
  if (v0) {
    return _swift_asyncLet_finish(v1 + 16, v1 + 696, sub_A3268, v1 + 4544);
  }
  else {
    return _swift_task_switch(sub_A22E8, 0, 0);
  }
}

uint64_t sub_A22E8()
{
  sub_A404C((uint64_t)(v0 + 179), (uint64_t)(v0 + 535));
  sub_A404C((uint64_t)(v0 + 535), (uint64_t)(v0 + 507));
  if (sub_A40B4((uint64_t)(v0 + 507)) == 1)
  {
    sub_A40CC();
    v0[631] = swift_allocError();
    swift_willThrow();
    return _swift_asyncLet_finish(v0 + 2, v0 + 87, sub_A31D8, v0 + 82);
  }
  else
  {
    sub_51B70(v0[579] + 56, (uint64_t)(v0 + 563));
    uint64_t v1 = v0[566];
    v0[603] = v1;
    v0[609] = v0[567];
    v0[615] = sub_5D64(v0 + 563, v1);
    v0[616] = sub_BE278((uint64_t)&off_256580);
    sub_A4120(v0 + 535, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_8D2AC);
    return _swift_asyncLet_get_throwing(v0 + 2, v0 + 87, sub_A2470, v0 + 530);
  }
}

uint64_t sub_A2470()
{
  v1[617] = v0;
  if (v0)
  {
    return _swift_task_switch(sub_A32F8, 0, 0);
  }
  else
  {
    uint64_t v2 = v1[507];
    memcpy(v1 + 367, v1 + 87, 0x460uLL);
    memcpy(v1 + 227, v1 + 87, 0x460uLL);
    sub_A1310((uint64_t)(v1 + 367));
    uint64_t v3 = (void *)swift_task_alloc();
    v1[618] = v3;
    *uint64_t v3 = v1;
    v3[1] = sub_A25A0;
    uint64_t v4 = v1[616];
    uint64_t v5 = v1[609];
    uint64_t v6 = v1[603];
    return BookHistoryServiceType.fetchBookHistory(for:limit:configuration:)(v4, v2, v1 + 227, v6, v5);
  }
}

uint64_t sub_A25A0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 4952) = a1;
  *(void *)(v3 + 4960) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_11D3C(v3 + 2936);
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_A3448;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_11D3C(v3 + 2936);
    uint64_t v4 = sub_A26E8;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A26E8()
{
  uint64_t v1 = *(void **)(v0 + 4632);
  sub_1264C(v0 + 4504);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 4968) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_A27F8;
  return v6(v2, v3);
}

uint64_t sub_A27F8(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 4976) = a1;
  *(void *)(v3 + 4984) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_A3584;
  }
  else {
    uint64_t v4 = sub_A2910;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_A2910()
{
  uint64_t v44 = v0;
  uint64_t v1 = v0[622];
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_38DC0(v2);
  uint64_t v42 = v3;
  uint64_t v4 = *(void *)(v1 + 16);
  if (!v4)
  {
    uint64_t v10 = v3;
LABEL_67:
    uint64_t v36 = (void *)v0[579];
    uint64_t v37 = v36[15];
    uint64_t v38 = v36[16];
    sub_5D64(v36 + 12, v37);
    uint64_t v39 = sub_4AB04(v10);
    v0[624] = v39;
    swift_bridgeObjectRelease();
    uint64_t v41 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v38 + 16) + **(int **)(v38 + 16));
    uint64_t v40 = (void *)swift_task_alloc();
    v0[625] = v40;
    void *v40 = v0;
    v40[1] = sub_A2DB8;
    return v41(v39, v37, v38);
  }
  uint64_t v5 = v0[585];
  unint64_t v6 = v0[622] + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  uint64_t v7 = *(void *)(v5 + 72);
  uint64_t v8 = v0[623];
  swift_bridgeObjectRetain();
  uint64_t v9 = 0;
  while (1)
  {
    sub_98D4C(v6 + v9 * v7, v0[591]);
    uint64_t result = Event.assetID.getter();
    uint64_t v13 = v12;
    uint64_t v14 = HIBYTE(v12) & 0xF;
    uint64_t v15 = result & 0xFFFFFFFFFFFFLL;
    if ((v13 & 0x2000000000000000) != 0 ? v14 : result & 0xFFFFFFFFFFFFLL) {
      break;
    }
    swift_bridgeObjectRelease();
LABEL_5:
    ++v9;
    sub_98DB0(v0[591]);
    if (v9 == v4)
    {
      swift_bridgeObjectRelease();
      uint64_t v10 = v42;
      goto LABEL_67;
    }
  }
  if ((v13 & 0x1000000000000000) != 0)
  {
    uint64_t v19 = sub_4DED4(result, v13, 10);
    char v20 = v35;
LABEL_43:
    swift_bridgeObjectRelease();
    if ((v20 & 1) == 0) {
      sub_73A4(v43, v19);
    }
    goto LABEL_5;
  }
  if ((v13 & 0x2000000000000000) == 0)
  {
    if ((result & 0x1000000000000000) != 0) {
      uint64_t v17 = (unsigned __int8 *)((v13 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v17 = (unsigned __int8 *)sub_1FC130();
    }
    uint64_t result = (uint64_t)sub_4DEBC(v17, v15, 10);
    if (v8) {
      return result;
    }
    uint64_t v19 = result;
    char v20 = v18 & 1;
    goto LABEL_43;
  }
  v43[0] = result;
  v43[1] = v13 & 0xFFFFFFFFFFFFFFLL;
  if (result == 43)
  {
    if (!v14) {
      goto LABEL_72;
    }
    if (v14 == 1 || (BYTE1(result) - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v19 = (BYTE1(result) - 48);
    if (v14 != 2)
    {
      if ((BYTE2(result) - 48) > 9u) {
        goto LABEL_39;
      }
      uint64_t v19 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
      uint64_t v24 = v14 - 3;
      if (v24)
      {
        uint64_t v25 = (unsigned __int8 *)v43 + 3;
        while (1)
        {
          unsigned int v26 = *v25 - 48;
          if (v26 > 9) {
            goto LABEL_39;
          }
          if (!is_mul_ok(v19, 0xAuLL)) {
            goto LABEL_39;
          }
          BOOL v22 = __CFADD__(10 * v19, v26);
          uint64_t v19 = 10 * v19 + v26;
          if (v22) {
            goto LABEL_39;
          }
          char v20 = 0;
          ++v25;
          if (!--v24) {
            goto LABEL_43;
          }
        }
      }
    }
LABEL_42:
    char v20 = 0;
    goto LABEL_43;
  }
  if (result != 45)
  {
    if (!v14 || (result - 48) > 9u) {
      goto LABEL_39;
    }
    uint64_t v19 = (result - 48);
    if (v14 != 1)
    {
      if ((BYTE1(result) - 48) > 9u) {
        goto LABEL_39;
      }
      uint64_t v19 = 10 * (result - 48) + (BYTE1(result) - 48);
      uint64_t v27 = v14 - 2;
      if (v27)
      {
        uint64_t v28 = (unsigned __int8 *)v43 + 2;
        while (1)
        {
          unsigned int v29 = *v28 - 48;
          if (v29 > 9) {
            goto LABEL_39;
          }
          if (!is_mul_ok(v19, 0xAuLL)) {
            goto LABEL_39;
          }
          BOOL v22 = __CFADD__(10 * v19, v29);
          uint64_t v19 = 10 * v19 + v29;
          if (v22) {
            goto LABEL_39;
          }
          char v20 = 0;
          ++v28;
          if (!--v27) {
            goto LABEL_43;
          }
        }
      }
    }
    goto LABEL_42;
  }
  if (v14)
  {
    if (v14 != 1)
    {
      unsigned __int8 v21 = BYTE1(result) - 48;
      if ((BYTE1(result) - 48) <= 9u)
      {
        uint64_t v19 = 0;
        BOOL v22 = v21 == 0;
        unint64_t v23 = -(uint64_t)v21;
        if (!v22) {
          goto LABEL_40;
        }
        if (v14 == 2)
        {
          char v20 = 0;
          uint64_t v19 = v23;
          goto LABEL_43;
        }
        unsigned __int8 v30 = BYTE2(result) - 48;
        if ((BYTE2(result) - 48) <= 9u && is_mul_ok(v23, 0xAuLL))
        {
          unint64_t v31 = 10 * v23;
          uint64_t v19 = v31 - v30;
          if (v31 >= v30)
          {
            uint64_t v32 = v14 - 3;
            if (v32)
            {
              uint64_t v33 = (unsigned __int8 *)v43 + 3;
              while (1)
              {
                unsigned int v34 = *v33 - 48;
                if (v34 > 9) {
                  goto LABEL_39;
                }
                if (!is_mul_ok(v19, 0xAuLL)) {
                  goto LABEL_39;
                }
                BOOL v22 = 10 * v19 >= (unint64_t)v34;
                uint64_t v19 = 10 * v19 - v34;
                if (!v22) {
                  goto LABEL_39;
                }
                char v20 = 0;
                ++v33;
                if (!--v32) {
                  goto LABEL_43;
                }
              }
            }
            goto LABEL_42;
          }
        }
      }
    }
LABEL_39:
    uint64_t v19 = 0;
LABEL_40:
    char v20 = 1;
    goto LABEL_43;
  }
  __break(1u);
LABEL_72:
  __break(1u);
  return result;
}

uint64_t sub_A2DB8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 5008) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_A36BC;
  }
  else
  {
    swift_release();
    *(void *)(v4 + 5016) = a1;
    uint64_t v5 = sub_A2EE8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_A2EE8()
{
  uint64_t v21 = v0;
  uint64_t v1 = *(void *)(v0 + 5016);
  uint64_t v2 = *(void *)(v0 + 4976);
  int v3 = *(unsigned __int8 *)(v0 + 5056);
  uint64_t v4 = sub_4B800(*(void *)(v0 + 4952));
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(v0 + 4200);
  v19[8] = *(_OWORD *)(v0 + 4184);
  v19[9] = v5;
  v19[10] = *(_OWORD *)(v0 + 4216);
  uint64_t v20 = *(void *)(v0 + 4232);
  long long v6 = *(_OWORD *)(v0 + 4136);
  v19[4] = *(_OWORD *)(v0 + 4120);
  v19[5] = v6;
  long long v7 = *(_OWORD *)(v0 + 4168);
  v19[6] = *(_OWORD *)(v0 + 4152);
  v19[7] = v7;
  long long v8 = *(_OWORD *)(v0 + 4072);
  v19[0] = *(_OWORD *)(v0 + 4056);
  v19[1] = v8;
  long long v9 = *(_OWORD *)(v0 + 4104);
  v19[2] = *(_OWORD *)(v0 + 4088);
  v19[3] = v9;
  uint64_t v10 = sub_B5A98(v2, (int64_t)v4, v1, (uint64_t)v19);
  *(void *)(v0 + 5024) = v10;
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_A4120((void *)(v0 + 4280), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_11FF4);
  if (v3 == 1)
  {
    uint64_t v11 = *(void *)(v0 + 5008);
    sub_1FACE0();
    swift_allocObject();
    sub_1FACD0();
    *(void *)(v0 + 4584) = v10;
    sub_1FB690();
    sub_A4194();
    uint64_t v12 = sub_1FACB0();
    *(void *)(v0 + 5032) = v11;
    if (v11)
    {
      swift_release();
      swift_release();
      uint64_t v14 = v0 + 4880;
      uint64_t v15 = sub_A3814;
      goto LABEL_6;
    }
    uint64_t v16 = v12;
    unint64_t v17 = v13;
    sub_1FB000();
    *(void *)(v0 + 5040) = 0;
    sub_520E8(v16, v17);
    swift_release();
  }
  uint64_t v14 = v0 + 4784;
  uint64_t v15 = sub_A3144;
LABEL_6:
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, v15, v14);
}

uint64_t sub_A3144()
{
  return _swift_task_switch(sub_A3160, 0, 0);
}

uint64_t sub_A3160()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 5024);
  return v1(v2);
}

uint64_t sub_A31D8()
{
  return _swift_task_switch(sub_A31F4, 0, 0);
}

uint64_t sub_A31F4()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A3268()
{
  return _swift_task_switch(sub_A3284, 0, 0);
}

uint64_t sub_A3284()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A32F8()
{
  sub_A4120((void *)(v0 + 4280), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_11FF4);
  swift_bridgeObjectRelease();
  sub_1264C(v0 + 4504);
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, sub_A33B8, v0 + 4464);
}

uint64_t sub_A33B8()
{
  return _swift_task_switch(sub_A33D4, 0, 0);
}

uint64_t sub_A33D4()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A3448()
{
  sub_A4120((void *)(v0 + 4280), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_11FF4);
  sub_1264C(v0 + 4504);
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, sub_A34F4, v0 + 4640);
}

uint64_t sub_A34F4()
{
  return _swift_task_switch(sub_A3510, 0, 0);
}

uint64_t sub_A3510()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A3584()
{
  swift_bridgeObjectRelease();
  sub_A4120((void *)(v0 + 4280), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_11FF4);
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, sub_A362C, v0 + 4688);
}

uint64_t sub_A362C()
{
  return _swift_task_switch(sub_A3648, 0, 0);
}

uint64_t sub_A3648()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A36BC()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_A4120((void *)(v0 + 4280), (void (*)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))sub_11FF4);
  return _swift_asyncLet_finish(v0 + 16, v0 + 696, sub_A3784, v0 + 4736);
}

uint64_t sub_A3784()
{
  return _swift_task_switch(sub_A37A0, 0, 0);
}

uint64_t sub_A37A0()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A3814()
{
  return _swift_task_switch(sub_A3830, 0, 0);
}

uint64_t sub_A3830()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A38A4()
{
  return _swift_task_switch(sub_A38C0, 0, 0);
}

uint64_t sub_A38C0()
{
  swift_release_n();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_A3934(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return _swift_task_switch(sub_A3954, 0, 0);
}

uint64_t sub_A3954()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[20];
  uint64_t v3 = v1[21];
  sub_5D64(v1 + 17, v2);
  long long v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[4] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_A3A60;
  uint64_t v5 = v0[2];
  return v7(v5, v2, v3);
}

uint64_t sub_A3A60()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

void sub_A3B54()
{
  sub_1FAF40(1);
  id v10 = [self defaultManager];
  NSString v0 = sub_1FB7E0();
  unsigned int v1 = [v10 fileExistsAtPath:v0];

  if (v1)
  {
    NSString v2 = sub_1FB7E0();
    swift_bridgeObjectRelease();
    id v11 = 0;
    unsigned int v3 = [v10 removeItemAtPath:v2 error:&v11];

    if (v3)
    {
      id v4 = v11;
    }
    else
    {
      id v5 = v11;
      sub_1FAEB0();

      swift_willThrow();
      if (qword_26C3A0 != -1) {
        swift_once();
      }
      id v6 = (id)qword_272B80;
      sub_1FBDA0();
      sub_12124(&qword_26D7F0);
      uint64_t v7 = swift_allocObject();
      *(_OWORD *)(v7 + 16) = xmmword_1FD2A0;
      id v11 = 0;
      unint64_t v12 = 0xE000000000000000;
      sub_12124(&qword_26D670);
      sub_1FC1D0();
      id v8 = v11;
      unint64_t v9 = v12;
      *(void *)(v7 + 56) = &type metadata for String;
      *(void *)(v7 + 64) = sub_5FD80();
      *(void *)(v7 + 32) = v8;
      *(void *)(v7 + 40) = v9;
      sub_1FB400();

      swift_bridgeObjectRelease();
      swift_errorRelease();
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
}

uint64_t sub_A3DEC()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);
  sub_1264C(v0 + 136);
  uint64_t v1 = v0 + OBJC_IVAR____TtC20BooksPersonalization32UserEncodingInputFeaturesService_cachePath;
  uint64_t v2 = sub_1FAF80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_A3EAC()
{
  return type metadata accessor for UserEncodingInputFeaturesService();
}

uint64_t type metadata accessor for UserEncodingInputFeaturesService()
{
  uint64_t result = qword_26E700;
  if (!qword_26E700) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_A3F00()
{
  uint64_t result = sub_1FAF80();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_A3FA0(uint64_t a1)
{
  id v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v4;
  *id v4 = v2;
  v4[2] = a1;
  v4[3] = v1;
  v4[1] = sub_5958;
  return _swift_task_switch(sub_A3954, 0, 0);
}

uint64_t sub_A404C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26DE08);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_A40B4(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 168);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

unint64_t sub_A40CC()
{
  unint64_t result = qword_26E7C8;
  if (!qword_26E7C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E7C8);
  }
  return result;
}

void *sub_A4120(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void, void))
{
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21],
    a1[22]);
  return a1;
}

unint64_t sub_A4194()
{
  unint64_t result = qword_26E7D0;
  if (!qword_26E7D0)
  {
    sub_1FB690();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E7D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UserEncodingInputFeaturesService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xA4288);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for UserEncodingInputFeaturesService.Errors()
{
  return &type metadata for UserEncodingInputFeaturesService.Errors;
}

unint64_t sub_A42C4()
{
  unint64_t result = qword_26E7D8;
  if (!qword_26E7D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E7D8);
  }
  return result;
}

void *sub_A4318(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  unint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    unint64_t result = (void *)sub_A9FFC(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_A4488()
{
  if (*(void *)(v0 + 64))
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_A4318(v1);
    swift_bridgeObjectRelease();
    int64_t v3 = v2[2];
    if (v3)
    {
      sub_46538(0, v3, 0);
      unint64_t v4 = _swiftEmptyArrayStorage[2];
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v2[v5];
        unint64_t v7 = _swiftEmptyArrayStorage[3];
        if (v4 >= v7 >> 1) {
          sub_46538(v7 > 1, v4 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v4 + 1;
        _swiftEmptyArrayStorage[v4 + 4] = v6;
        v5 += 70;
        ++v4;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v8 = sub_50A6C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  return v8;
}

uint64_t sub_A4594(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 56);
  int64_t v35 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v6 << 6);
    }
    else
    {
      int64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_44;
      }
      if (v9 >= v35) {
        return swift_release();
      }
      unint64_t v10 = *(void *)(v34 + 8 * v9);
      ++v6;
      if (!v10)
      {
        int64_t v6 = v9 + 1;
        if (v9 + 1 >= v35) {
          return swift_release();
        }
        unint64_t v10 = *(void *)(v34 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 2;
          if (v9 + 2 >= v35) {
            return swift_release();
          }
          unint64_t v10 = *(void *)(v34 + 8 * v6);
          if (!v10)
          {
            int64_t v6 = v9 + 3;
            if (v9 + 3 >= v35) {
              return swift_release();
            }
            unint64_t v10 = *(void *)(v34 + 8 * v6);
            if (!v10)
            {
              int64_t v11 = v9 + 4;
              if (v11 >= v35) {
                return swift_release();
              }
              unint64_t v10 = *(void *)(v34 + 8 * v11);
              if (!v10)
              {
                while (1)
                {
                  int64_t v6 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    goto LABEL_45;
                  }
                  if (v6 >= v35) {
                    return swift_release();
                  }
                  unint64_t v10 = *(void *)(v34 + 8 * v6);
                  ++v11;
                  if (v10) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v6 = v11;
            }
          }
        }
      }
LABEL_23:
      unint64_t v5 = (v10 - 1) & v10;
      unint64_t v8 = __clz(__rbit64(v10)) + (v6 << 6);
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8 * v8);
    uint64_t v13 = *a2;
    uint64_t v14 = *(void *)(*a2 + 16);
    if (v14)
    {
      uint64_t v15 = sub_56168(v12);
      if (v16) {
        uint64_t v14 = *(void *)(*(void *)(v13 + 56) + 8 * v15);
      }
      else {
        uint64_t v14 = 0;
      }
    }
    uint64_t v17 = v14 + 1;
    if (v14 == -1) {
      break;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *a2;
    uint64_t v37 = (void *)*a2;
    *a2 = 0x8000000000000000;
    unint64_t v21 = sub_56168(v12);
    uint64_t v22 = *(void *)(v19 + 16);
    BOOL v23 = (v20 & 1) == 0;
    uint64_t v24 = v22 + v23;
    if (__OFADD__(v22, v23)) {
      goto LABEL_42;
    }
    char v25 = v20;
    if (*(void *)(v19 + 24) >= v24)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v28 = v37;
        if (v20) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_120598();
        uint64_t v28 = v37;
        if (v25) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_116FE4(v24, isUniquelyReferenced_nonNull_native);
      uint64_t v26 = sub_56168(v12);
      if ((v25 & 1) != (v27 & 1)) {
        goto LABEL_46;
      }
      unint64_t v21 = v26;
      uint64_t v28 = v37;
      if (v25)
      {
LABEL_4:
        *(void *)(v28[7] + 8 * v21) = v17;
        goto LABEL_5;
      }
    }
    v28[(v21 >> 6) + 8] |= 1 << v21;
    uint64_t v29 = 8 * v21;
    *(void *)(v28[6] + v29) = v12;
    *(void *)(v28[7] + v29) = v17;
    uint64_t v30 = v28[2];
    BOOL v31 = __OFADD__(v30, 1);
    uint64_t v32 = v30 + 1;
    if (v31) {
      goto LABEL_43;
    }
    v28[2] = v32;
LABEL_5:
    *a2 = (uint64_t)v28;
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t type metadata accessor for BooksBackendDiversifier()
{
  return self;
}

uint64_t sub_A489C(uint64_t a1, int64_t a2)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v4 = *(void **)v2;
  int64_t v5 = *(void *)(*(void *)v2 + 16);
  if (v5 < a2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  uint64_t v7 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  uint64_t v8 = a1 - a2;
  if (__OFSUB__(0, v7))
  {
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  int64_t v9 = v5 - v7;
  if (__OFADD__(v5, v8))
  {
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || v9 > v4[3] >> 1)
  {
    if (v5 <= v9) {
      int64_t v11 = v5 + v8;
    }
    else {
      int64_t v11 = v5;
    }
    uint64_t v4 = sub_41CBC(isUniquelyReferenced_nonNull_native, v11, 1, v4);
  }
  uint64_t result = swift_arrayDestroy();
  if (!v7) {
    goto LABEL_20;
  }
  uint64_t v13 = v4[2];
  BOOL v14 = __OFSUB__(v13, a2);
  uint64_t v15 = v13 - a2;
  if (v14) {
    goto LABEL_26;
  }
  if ((v15 & 0x8000000000000000) == 0)
  {
    char v16 = (char *)&v4[10 * a2 + 4];
    if (a1 != a2 || &v4[10 * a1 + 4] >= (void *)&v16[80 * v15]) {
      uint64_t result = (uint64_t)memmove(&v4[10 * a1 + 4], v16, 80 * v15);
    }
    uint64_t v17 = v4[2];
    BOOL v14 = __OFADD__(v17, v8);
    uint64_t v18 = v17 - v7;
    if (!v14)
    {
      v4[2] = v18;
LABEL_20:
      *(void *)uint64_t v2 = v4;
      return result;
    }
    goto LABEL_27;
  }
LABEL_28:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A4A14(void *a1, const void *a2)
{
  memcpy(__dst, a2, 0x16BuLL);
  unint64_t v131 = a1;
  uint64_t v130 = _swiftEmptyDictionarySingleton;
  int64_t v3 = a1[2];
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (!v3)
  {
LABEL_77:
    int64_t v6 = v4;
LABEL_78:
    swift_bridgeObjectRelease();
    return (uint64_t)v6;
  }
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  int64_t v6 = _swiftEmptyArrayStorage;
  while (2)
  {
    uint64_t v102 = v6;
    uint64_t v104 = v5;
    sub_8CFA4((uint64_t)__dst);
    swift_bridgeObjectRetain();
    sub_467B8(0, v3, 0);
    uint64_t v8 = 0;
    int64_t v9 = v130;
    uint64_t v129 = _swiftEmptyArrayStorage;
    uint64_t v100 = a1;
    int64_t v106 = v3;
    uint64_t v108 = a1 + 4;
    do
    {
      uint64_t v10 = v8;
      int64_t v11 = &v108[10 * v8];
      uint64_t v123 = *v11;
      uint64_t v126 = v10 + 1;
      char v12 = *((unsigned char *)v11 + 40);
      uint64_t v13 = v11[6];
      uint64_t v4 = (void *)v11[8];
      double v14 = *((double *)v11 + 9);
      char v119 = *((unsigned char *)v11 + 8);
      uint64_t v121 = v11[2];
      char v116 = *((unsigned char *)v11 + 24);
      uint64_t v111 = v11[7];
      uint64_t v113 = v11[4];
      sub_5480C(v113, v12);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v15 = sub_A4488();
      uint64_t v16 = v15;
      uint64_t v17 = 0;
      uint64_t v18 = v15 + 56;
      uint64_t v19 = 1 << *(unsigned char *)(v15 + 32);
      if (v19 < 64) {
        uint64_t v20 = ~(-1 << v19);
      }
      else {
        uint64_t v20 = -1;
      }
      unint64_t v21 = v20 & *(void *)(v15 + 56);
      int64_t v6 = (void *)((unint64_t)(v19 + 63) >> 6);
      while (1)
      {
        if (v21)
        {
          unint64_t v23 = __clz(__rbit64(v21));
          v21 &= v21 - 1;
          unint64_t v24 = v23 | (v17 << 6);
          if (!v9[2]) {
            goto LABEL_10;
          }
          goto LABEL_28;
        }
        BOOL v25 = __OFADD__(v17++, 1);
        if (v25)
        {
          __break(1u);
          goto LABEL_77;
        }
        if (v17 >= (uint64_t)v6) {
          break;
        }
        unint64_t v26 = *(void *)(v18 + 8 * v17);
        if (!v26)
        {
          uint64_t v27 = v17 + 1;
          if (v17 + 1 >= (uint64_t)v6) {
            break;
          }
          unint64_t v26 = *(void *)(v18 + 8 * v27);
          if (!v26)
          {
            uint64_t v27 = v17 + 2;
            if (v17 + 2 >= (uint64_t)v6) {
              break;
            }
            unint64_t v26 = *(void *)(v18 + 8 * v27);
            if (!v26)
            {
              uint64_t v27 = v17 + 3;
              if (v17 + 3 >= (uint64_t)v6) {
                break;
              }
              unint64_t v26 = *(void *)(v18 + 8 * v27);
              if (!v26)
              {
                uint64_t v27 = v17 + 4;
                if (v17 + 4 >= (uint64_t)v6) {
                  break;
                }
                unint64_t v26 = *(void *)(v18 + 8 * v27);
                if (!v26)
                {
                  while (1)
                  {
                    uint64_t v17 = v27 + 1;
                    if (__OFADD__(v27, 1)) {
                      break;
                    }
                    if (v17 >= (uint64_t)v6) {
                      goto LABEL_34;
                    }
                    unint64_t v26 = *(void *)(v18 + 8 * v17);
                    ++v27;
                    if (v26) {
                      goto LABEL_27;
                    }
                  }
                  __break(1u);
LABEL_80:
                  swift_bridgeObjectRelease();
                  goto LABEL_78;
                }
              }
            }
          }
          uint64_t v17 = v27;
        }
LABEL_27:
        unint64_t v21 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v17 << 6);
        if (!v9[2])
        {
LABEL_10:
          unint64_t v22 = 0;
          goto LABEL_11;
        }
LABEL_28:
        uint64_t v28 = sub_56168(*(void *)(*(void *)(v16 + 48) + 8 * v24));
        if ((v29 & 1) == 0) {
          goto LABEL_10;
        }
        unint64_t v22 = *(void *)(v9[7] + 8 * v28);
LABEL_11:
        double v14 = v14 * pow(__dst[34], (double)v22);
      }
LABEL_34:
      swift_release();
      uint64_t v30 = v129;
      unint64_t v32 = v129[2];
      unint64_t v31 = v129[3];
      if (v32 >= v31 >> 1)
      {
        sub_467B8(v31 > 1, v32 + 1, 1);
        uint64_t v30 = v129;
      }
      v30[2] = v32 + 1;
      uint64_t v129 = v30;
      uint64_t v33 = &v30[10 * v32];
      v33[4] = v123;
      *((unsigned char *)v33 + 40) = v119;
      v33[6] = v121;
      *((unsigned char *)v33 + 56) = v116;
      v33[8] = v113;
      *((unsigned char *)v33 + 72) = v12;
      v33[10] = v13;
      v33[11] = v111;
      v33[12] = v4;
      *((double *)v33 + 13) = v14;
      uint64_t v8 = v126;
    }
    while (v126 != v106);
    sub_8D5A4((uint64_t)__dst);
    uint64_t v34 = v100;
    swift_bridgeObjectRelease();
    uint64_t v35 = v129[2];
    if (v35)
    {
      uint64_t v117 = v129[4];
      char v36 = *((unsigned char *)v129 + 40);
      char v114 = *((unsigned char *)v129 + 56);
      uint64_t v37 = v129[8];
      char v38 = *((unsigned char *)v129 + 72);
      uint64_t v39 = v129[10];
      uint64_t v109 = v129[6];
      uint64_t v112 = v129[11];
      uint64_t v40 = v129[12];
      double v41 = *((double *)v129 + 13);
      uint64_t v42 = v35 - 1;
      if (v35 == 1)
      {
        sub_5480C(v37, v38);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        int64_t v6 = v102;
        uint64_t v43 = v104;
        uint64_t v44 = v40;
      }
      else
      {
        swift_bridgeObjectRetain();
        uint64_t v127 = v37;
        char v124 = v38;
        sub_5480C(v37, v38);
        uint64_t v120 = v40;
        swift_bridgeObjectRetain();
        uint64_t v122 = v39;
        swift_bridgeObjectRetain();
        uint64_t v45 = v129;
        uint64_t v46 = 0;
        unint64_t v47 = v117;
        uint64_t v48 = v109;
        uint64_t v49 = v112;
        char v50 = v114;
        char v51 = v36;
        do
        {
          unint64_t v53 = v45[v46 + 14];
          char v54 = v45[v46 + 15];
          char v55 = v45[v46 + 17];
          uint64_t v56 = v45[v46 + 18];
          char v57 = v45[v46 + 19];
          uint64_t v58 = v45[v46 + 20];
          uint64_t v59 = v45[v46 + 22];
          double v60 = *(double *)&v45[v46 + 23];
          if (v41 < v60 || (v60 == v41 ? (BOOL v61 = v53 >= v47) : (BOOL v61 = 1), !v61))
          {
            uint64_t v118 = v45[v46 + 21];
            uint64_t v52 = v45[v46 + 16];
            sub_5480C(v45[v46 + 18], v57);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            sub_54820(v127, v124);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v45 = v129;
            unint64_t v47 = v53;
            char v51 = v54;
            uint64_t v48 = v52;
            char v50 = v55;
            uint64_t v127 = v56;
            char v124 = v57;
            uint64_t v120 = v59;
            uint64_t v122 = v58;
            uint64_t v49 = v118;
            double v41 = v60;
          }
          v46 += 10;
          --v42;
        }
        while (v42);
        char v36 = v51;
        uint64_t v109 = v48;
        uint64_t v112 = v49;
        char v114 = v50;
        uint64_t v117 = v47;
        swift_bridgeObjectRelease_n();
        int64_t v6 = v102;
        uint64_t v43 = v104;
        uint64_t v34 = v100;
        uint64_t v44 = v120;
        uint64_t v39 = v122;
        uint64_t v37 = v127;
        char v38 = v124;
      }
      char v62 = v36 & 1;
      uint64_t v63 = sub_A4488();
      sub_A4594(v63, (uint64_t *)&v130);
      uint64_t v105 = v43;
      swift_bridgeObjectRelease();
      uint64_t v128 = v37;
      char v125 = v38;
      sub_5480C(v37, v38);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int64_t v6 = sub_41CBC(0, v6[2] + 1, 1, v6);
      }
      unint64_t v65 = v6[2];
      unint64_t v64 = v6[3];
      uint64_t v66 = v117;
      char v67 = v114;
      uint64_t v68 = v112;
      if (v65 >= v64 >> 1)
      {
        uint64_t v90 = sub_41CBC((void *)(v64 > 1), v65 + 1, 1, v6);
        uint64_t v68 = v112;
        char v67 = v114;
        uint64_t v66 = v117;
        int64_t v6 = v90;
      }
      v6[2] = v65 + 1;
      uint64_t v69 = &v6[10 * v65];
      v69[4] = v66;
      *((unsigned char *)v69 + 40) = v62;
      v69[6] = v109;
      *((unsigned char *)v69 + 56) = v67 & 1;
      v69[8] = v37;
      char v70 = v38;
      *((unsigned char *)v69 + 72) = v38;
      v69[10] = v39;
      v69[11] = v68;
      v69[12] = v44;
      *((double *)v69 + 13) = v41;
      unint64_t v71 = v34[2];
      if (!v71)
      {
        uint64_t v7 = 0;
        goto LABEL_4;
      }
      uint64_t v7 = 0;
      uint64_t v72 = 23;
      uint64_t v73 = 4;
      while (v34[v73] != v66)
      {
        ++v7;
        v73 += 10;
        v72 += 10;
        if (v71 == v7)
        {
          uint64_t v7 = v34[2];
          char v70 = v38;
          goto LABEL_4;
        }
      }
      unint64_t v74 = v7 + 1;
      if (!__OFADD__(v7, 1))
      {
        if (v74 == v71)
        {
LABEL_62:
          char v70 = v125;
          if ((uint64_t)v71 < v7) {
            goto LABEL_85;
          }
LABEL_4:
          sub_A489C(v7, v71);
          sub_54820(v128, v70);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          a1 = v131;
          int64_t v3 = v131[2];
          uint64_t v5 = v105;
          if (v3) {
            continue;
          }
          goto LABEL_80;
        }
        uint64_t v103 = v6;
        while (v74 < v71)
        {
          uint64_t v75 = v34[v72 - 9];
          if (v75 != v66)
          {
            if (v74 != v7)
            {
              if (v7 >= v71) {
                goto LABEL_83;
              }
              uint64_t v76 = (uint64_t)&v34[10 * v7 + 4];
              char v95 = *(unsigned char *)(v76 + 8);
              uint64_t v94 = *(void *)(v76 + 16);
              char v93 = *(unsigned char *)(v76 + 24);
              uint64_t v77 = *(void *)(v76 + 48);
              uint64_t v96 = *(void *)v76;
              uint64_t v97 = *(void *)(v76 + 56);
              uint64_t v78 = *(void *)(v76 + 64);
              uint64_t v79 = *(void *)(v76 + 72);
              char v110 = v34[v72 - 8];
              uint64_t v107 = v34[v72 - 7];
              char v101 = v34[v72 - 6];
              uint64_t v80 = v34[v72 - 5];
              char v81 = v34[v72 - 4];
              uint64_t v99 = v34[v72 - 3];
              uint64_t v82 = v34[v72 - 1];
              uint64_t v115 = v34[v72 - 2];
              uint64_t v83 = v34[v72];
              uint64_t v92 = *(void *)(v76 + 32);
              char v98 = *(unsigned char *)(v76 + 40);
              sub_5480C(v92, v98);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              sub_5480C(v80, v81);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v34 = sub_98494(v34);
              }
              uint64_t v84 = &v34[10 * v7];
              uint64_t v85 = v84[8];
              v84[4] = v75;
              *((unsigned char *)v84 + 40) = v110;
              v84[6] = v107;
              *((unsigned char *)v84 + 56) = v101;
              v84[8] = v80;
              char v86 = *((unsigned char *)v84 + 72);
              *((unsigned char *)v84 + 72) = v81;
              v84[10] = v99;
              v84[11] = v115;
              v84[12] = v82;
              v84[13] = v83;
              sub_54820(v85, v86);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v74 >= v34[2]) {
                goto LABEL_84;
              }
              uint64_t v87 = &v34[v72];
              uint64_t v88 = v34[v72 - 5];
              *(v87 - 9) = v96;
              *((unsigned char *)v87 - 64) = v95;
              *(v87 - 7) = v94;
              *((unsigned char *)v87 - 48) = v93;
              *(v87 - 5) = v92;
              char v89 = v34[v72 - 4];
              *((unsigned char *)v87 - 32) = v98;
              *(v87 - 3) = v77;
              *(v87 - 2) = v97;
              *(v87 - 1) = v78;
              *uint64_t v87 = v79;
              sub_54820(v88, v89);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              unint64_t v131 = v34;
              uint64_t v66 = v117;
              int64_t v6 = v103;
            }
            BOOL v25 = __OFADD__(v7++, 1);
            if (v25) {
              goto LABEL_82;
            }
            unint64_t v71 = v34[2];
          }
          ++v74;
          v72 += 10;
          if (v74 == v71) {
            goto LABEL_62;
          }
        }
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
      }
      __break(1u);
    }
    break;
  }
  uint64_t result = swift_bridgeObjectRelease();
  __break(1u);
  return result;
}

uint64_t destroy for BookFeatures()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BookFeatures(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BookFeatures(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BookFeatures(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookFeatures(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookFeatures(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookFeatures()
{
  return &type metadata for BookFeatures;
}

uint64_t sub_A5574@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for DelegatingBookScorer, (uint64_t)&off_25CA88, a2);
}

uint64_t sub_A5594@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BookHistoryService, (uint64_t)&off_25EC10, a2);
}

uint64_t sub_A55B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BookHistoryServiceStressTest, (uint64_t)&protocol witness table for BookHistoryServiceStressTest, a2);
}

uint64_t sub_A55D4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BooksBackendDiversifier, (uint64_t)&off_25C3E8, a2);
}

uint64_t sub_A55F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v4 = type metadata accessor for BooksBackendSeedBasedRecommendationService();
  uint64_t result = sub_1FB250();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v13 = v4;
  double v14 = &off_2632E8;
  *(void *)&long long v12 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E930);
  uint64_t result = sub_1FB240();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for CombinedSeedBasedRecommendationService();
    uint64_t v7 = swift_allocObject();
    sub_37C30(&v12, v7 + 16);
    sub_37C30(&v10, v7 + 56);
    uint64_t result = sub_37C30(&v8, v7 + 96);
    a2[3] = v6;
    a2[4] = (uint64_t)&off_264200;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_A5760@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2, (uint64_t)&off_263828, a2);
}

uint64_t sub_A5780(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E928);
  uint64_t result = sub_1FB260();
  if (!v36)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E9A8);
  uint64_t result = sub_1FB260();
  if (!v34)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D140);
  uint64_t result = sub_1FB260();
  if (v32)
  {
    uint64_t v3 = sub_51B20((uint64_t)v35, v36);
    v26[1] = v26;
    __chkstk_darwin(v3);
    uint64_t v5 = (void *)((char *)v26 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v6 + 16))(v5);
    uint64_t v7 = sub_51B20((uint64_t)v33, v34);
    v26[0] = v26;
    __chkstk_darwin(v7);
    uint64_t v9 = (void *)((char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    uint64_t v11 = *v5;
    uint64_t v12 = *v9;
    uint64_t v13 = type metadata accessor for BooksBackendDiversifier();
    v30[3] = v13;
    v30[4] = &off_25C3E8;
    v30[0] = v11;
    uint64_t v14 = type metadata accessor for SeedBasedRecommendationServiceResolver();
    char v29 = &off_263B00;
    uint64_t v28 = v14;
    v27[0] = v12;
    type metadata accessor for SeedBasedSuggestionsService();
    uint64_t v15 = (void *)swift_allocObject();
    uint64_t v16 = sub_51B20((uint64_t)v30, v13);
    __chkstk_darwin(v16);
    uint64_t v18 = (void *)((char *)v26 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v19 + 16))(v18);
    uint64_t v20 = sub_51B20((uint64_t)v27, v28);
    __chkstk_darwin(v20);
    unint64_t v22 = (void *)((char *)v26 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v23 + 16))(v22);
    uint64_t v24 = *v18;
    uint64_t v25 = *v22;
    v15[5] = v13;
    v15[6] = &off_25C3E8;
    v15[2] = v24;
    v15[10] = v14;
    v15[11] = &off_263B00;
    v15[7] = v25;
    sub_37C30(&v31, (uint64_t)(v15 + 12));
    sub_1264C((uint64_t)v27);
    sub_1264C((uint64_t)v30);
    sub_1264C((uint64_t)v33);
    sub_1264C((uint64_t)v35);
    return (uint64_t)v15;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_A5BD0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BookHistorySeedBookService, (uint64_t)&off_263C38, a2);
}

uint64_t sub_A5BF0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BooksBackendSeedBasedRecommendationService, (uint64_t)&off_2632E8, a2);
}

uint64_t sub_A5C10@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BooksPersonalizationMetadataCache, (uint64_t)&protocol witness table for BooksPersonalizationMetadataCache, a2);
}

uint64_t sub_A5C30@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for BooksPersonalizationMetadataCache, (uint64_t)&protocol witness table for BooksPersonalizationMetadataCache, a2);
}

uint64_t sub_A5C50(void *a1)
{
  return sub_A64C4(a1, &qword_26E290, (void (*)(void))type metadata accessor for BookHistorySeedBookService, (void (*)(void *, uint64_t))sub_37C30);
}

uint64_t sub_A5C84()
{
  type metadata accessor for BooksBackendDiversifier();

  return swift_allocObject();
}

uint64_t sub_A5CB8()
{
  type metadata accessor for BooksBackendPostScorer();

  return swift_allocObject();
}

uint64_t sub_A5CEC(void *a1)
{
  sub_5D64(a1, a1[3]);
  uint64_t result = sub_1FB260();
  char v3 = v22;
  if (v22 == 4)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E960);
  uint64_t result = sub_1FB260();
  if (!v21)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E950);
  uint64_t result = sub_1FB260();
  if (!v19)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_5D64(a1, a1[3]);
  type metadata accessor for BooksBackendPostScorer();
  uint64_t result = sub_1FB250();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = sub_51B20((uint64_t)v20, v21);
    __chkstk_darwin(v5);
    uint64_t v7 = (void *)((char *)v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v8 + 16))(v7);
    uint64_t v9 = *v7;
    uint64_t v10 = type metadata accessor for SeedBasedRecommendationRequestMapper();
    v17[3] = v10;
    v17[4] = &off_2643B8;
    v17[0] = v9;
    type metadata accessor for BooksBackendSeedBasedRecommendationService();
    uint64_t v11 = swift_allocObject();
    uint64_t v12 = sub_51B20((uint64_t)v17, v10);
    __chkstk_darwin(v12);
    uint64_t v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    *(void *)(v11 + 80) = v10;
    *(void *)(v11 + 88) = &off_2643B8;
    *(void *)(v11 + 56) = v16;
    *(_OWORD *)(v11 + 16) = 0u;
    *(_OWORD *)(v11 + 32) = 0u;
    *(unsigned char *)(v11 + 48) = v3;
    sub_37C30(&v18, v11 + 96);
    *(void *)(v11 + 136) = v4;
    sub_1264C((uint64_t)v17);
    sub_1264C((uint64_t)v20);
    return v11;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_A5FD0(void *a1)
{
  sub_5D64(a1, a1[3]);
  uint64_t result = sub_1FB260();
  unsigned __int8 v3 = v14;
  if (v14 == 255)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v4 = v12;
  uint64_t v5 = v13;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E950);
  uint64_t result = sub_1FB260();
  if (!v11)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_5D64(a1, a1[3]);
  type metadata accessor for BooksBackendPostScorer();
  uint64_t result = sub_1FB250();
  if (!result)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v6 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E940);
  uint64_t result = sub_1FB260();
  if (v9)
  {
    type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2();
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = 0u;
    *(_OWORD *)(v7 + 32) = 0u;
    *(void *)(v7 + 48) = v4;
    *(void *)(v7 + 56) = v5;
    *(unsigned char *)(v7 + 64) = v3 & 1;
    sub_37C30(&v10, v7 + 72);
    *(void *)(v7 + 112) = v6;
    sub_37C30(&v8, v7 + 120);
    return v7;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_A6154()
{
  type metadata accessor for DelegatingBookScorer();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t sub_A6188@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A61A8(a1, (uint64_t (*)(void))type metadata accessor for IdentityBookScorer, (uint64_t)&off_264260, a2);
}

uint64_t sub_A61A8@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v7 = a2(0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A622C()
{
  type metadata accessor for IdentityBookScorer();

  return swift_allocObject();
}

uint64_t sub_A6260(void *a1)
{
  uint64_t v2 = sub_1FB220();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E988);
  uint64_t result = sub_1FB260();
  if (!v15)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E990);
  uint64_t result = sub_1FB260();
  if (!v13)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E998);
  uint64_t result = sub_1FB260();
  if (!v11)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E9A0);
  uint64_t result = sub_1FB260();
  if (v9)
  {
    sub_1FB210();
    type metadata accessor for BookHistoryService();
    uint64_t v7 = swift_allocObject();
    sub_37C30(&v14, v7 + 16);
    sub_37C30(&v12, v7 + 56);
    sub_37C30(&v10, v7 + 96);
    sub_37C30(&v8, v7 + 136);
    (*(void (**)(uint64_t, char *, uint64_t))(v3 + 32))(v7 + OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone, v5, v2);
    return v7;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_A6490(void *a1)
{
  return sub_A64C4(a1, &qword_26E4C0, (void (*)(void))type metadata accessor for BookHistoryServiceStressTest, (void (*)(void *, uint64_t))sub_37C30);
}

uint64_t sub_A64C4(void *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void *, uint64_t))
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E918);
  uint64_t result = sub_1FB260();
  if (v12)
  {
    sub_5D64(a1, a1[3]);
    sub_12124(a2);
    uint64_t result = sub_1FB260();
    if (v10[3])
    {
      a3(0);
      uint64_t v9 = swift_allocObject();
      sub_37C30(&v11, v9 + 16);
      a4(v10, v9 + 56);
      return v9;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_A65C4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t result = sub_1FB260();
  if (v4)
  {
    a2[3] = &type metadata for URLSessionTransport;
    a2[4] = &protocol witness table for URLSessionTransport;
    *a2 = v4;
    a2[1] = v5;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A664C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  id v4 = [self sharedSession];
  sub_12124(&qword_26E980);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2055D0;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E958);
  uint64_t result = sub_1FB240();
  if (v10)
  {
    sub_37C30(&v9, v5 + 32);
    sub_5D64(a1, a1[3]);
    uint64_t result = sub_1FB240();
    if (v8)
    {
      uint64_t result = sub_37C30(&v7, v5 + 72);
      *a2 = v4;
      a2[1] = v5;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_A6798@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E968);
  uint64_t result = sub_1FB260();
  if (v19)
  {
    uint64_t v4 = sub_51B20((uint64_t)v18, v19);
    __chkstk_darwin(v4);
    uint64_t v6 = (void *)((char *)v17 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v7 + 16))(v6);
    uint64_t v8 = *v6;
    uint64_t v9 = type metadata accessor for SHA256Base64SigningService();
    v17[3] = v9;
    v17[4] = &off_25C138;
    v17[0] = v8;
    uint64_t v10 = type metadata accessor for SignerMiddleware();
    long long v11 = (void *)swift_allocObject();
    uint64_t v12 = sub_51B20((uint64_t)v17, v9);
    __chkstk_darwin(v12);
    long long v14 = (void *)((char *)v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v15 + 16))(v14);
    uint64_t v16 = *v14;
    v11[5] = v9;
    v11[6] = &off_25C138;
    void v11[2] = v16;
    sub_1264C((uint64_t)v17);
    uint64_t result = sub_1264C((uint64_t)v18);
    a2[3] = v10;
    a2[4] = &off_2633B0;
    *a2 = v11;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A69B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A6A68(a1, &qword_26E978, (uint64_t (*)(void))type metadata accessor for ExperimentIDsMiddleware, (uint64_t (*)(char *, uint64_t))sub_37C30, (uint64_t)&off_264270, a2);
}

uint64_t sub_A69F0@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A6A68(a1, &qword_26E290, (uint64_t (*)(void))type metadata accessor for SeedBasedRecommendationRequestMapper, (uint64_t (*)(char *, uint64_t))sub_37C30, (uint64_t)&off_2643B8, a2);
}

uint64_t sub_A6A2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_A6A68(a1, &qword_26E970, (uint64_t (*)(void))type metadata accessor for SHA256Base64SigningService, (uint64_t (*)(char *, uint64_t))sub_37C30, (uint64_t)&off_25C138, a2);
}

uint64_t sub_A6A68@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t (*a3)(void)@<X2>, uint64_t (*a4)(char *, uint64_t)@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(a2);
  uint64_t result = sub_1FB260();
  if (v15)
  {
    uint64_t v12 = a3(0);
    uint64_t v13 = swift_allocObject();
    uint64_t result = a4(v14, v13 + 16);
    a6[3] = v12;
    a6[4] = a5;
    *a6 = v13;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_A6B2C(void *a1)
{
  sub_5D64(a1, a1[3]);
  uint64_t result = sub_1FB260();
  unsigned __int8 v3 = v13;
  if (v13 == 255)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v4 = v11;
  uint64_t v5 = v12;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E950);
  uint64_t result = sub_1FB260();
  if (!v10)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (v8)
  {
    type metadata accessor for BooksBackendPersonalizationMetadataService();
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = 0u;
    *(_OWORD *)(v6 + 32) = 0u;
    *(void *)(v6 + 48) = v4;
    *(void *)(v6 + 56) = v5;
    *(unsigned char *)(v6 + 64) = v3 & 1;
    sub_37C30(&v9, v6 + 72);
    sub_37C30(&v7, v6 + 112);
    return v6;
  }
LABEL_7:
  __break(1u);
  return result;
}

void *sub_A6C74(void *a1)
{
  sub_5D64(a1, a1[3]);
  uint64_t v2 = type metadata accessor for BooksBackendPersonalizationMetadataService();
  uint64_t result = (void *)sub_1FB250();
  if (result)
  {
    v5[3] = v2;
    v5[4] = &off_2621A0;
    v5[0] = result;
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_26E4C0);
    uint64_t result = (void *)sub_1FB260();
    if (v4[3])
    {
      type metadata accessor for BooksPersonalizationMetadataCache();
      swift_allocObject();
      return BooksPersonalizationMetadataCache.init(fetchService:subfolder:configurationService:)((uint64_t)v5, 0, 0, (uint64_t)v4);
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_A6D5C(uint64_t a1, void *a2)
{
  sub_12124(&qword_26E948);
  unint64_t v4 = 0;
  uint64_t v5 = (void *)(a1 + 16);
  while (v4 < 3)
  {
    char v8 = *((unsigned char *)&off_2565A8 + v4++ + 32);
    sub_5D64(a2, a2[3]);
    sub_1FB240();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_21;
    }
    sub_37C30(&v24, (uint64_t)v26);
    swift_beginAccess();
    sub_51B70((uint64_t)v26, (uint64_t)&v24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = (void *)*v5;
    uint64_t v23 = (void *)*v5;
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v12 = sub_4CA98(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_19;
    }
    char v16 = v11;
    if (v10[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v23;
        if (v11) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_121C4C();
        uint64_t v19 = v23;
        if (v16) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_119E98(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_4CA98(v8);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_22;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v23;
      if (v16)
      {
LABEL_2:
        uint64_t v6 = v19[7] + 40 * v12;
        sub_1264C(v6);
        sub_37C30(&v24, v6);
        goto LABEL_3;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    sub_37C30(&v24, v19[7] + 40 * v12);
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_20;
    }
    v19[2] = v22;
LABEL_3:
    *uint64_t v5 = v19;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = sub_1264C((uint64_t)v26);
    if (v4 == 3) {
      return result;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t static String.nextInOrderedSeriesServiceName.getter()
{
  return 0x65536E497478656ELL;
}

uint64_t type metadata accessor for ScorerAssembly()
{
  return self;
}

uint64_t sub_A7040(uint64_t a1)
{
  uint64_t v2 = sub_1FB270();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  unint64_t v26 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1FB350();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = (char *)v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB280();
  sub_12124(&qword_26E910);
  sub_1FB310();
  swift_release();
  uint64_t v8 = enum case for Scope.singleton(_:);
  long long v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for Scope.singleton(_:), v4);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_26E918);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_26E920);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  uint64_t v31 = a1;
  sub_1FB280();
  sub_12124(&qword_26E928);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  uint64_t v30 = v9;
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  v24[0] = v10;
  sub_1FB280();
  uint64_t v11 = sub_12124(&qword_26E930);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB280();
  uint64_t v25 = v11;
  sub_1FB310();
  swift_release();
  unint64_t v12 = v30;
  v30(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v13 = (void (*)(char *, uint64_t))v24[0];
  ((void (*)(char *, uint64_t))v24[0])(v7, v4);
  sub_1FB280();
  type metadata accessor for SeedBasedSuggestionsService();
  sub_1FB300();
  swift_release();
  v12(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB280();
  sub_12124(&qword_26D140);
  sub_1FB310();
  swift_release();
  unsigned int v29 = v8;
  BOOL v14 = v30;
  v30(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB280();
  sub_1FB310();
  swift_release();
  v14(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB280();
  sub_12124(&qword_26E938);
  sub_1FB310();
  swift_release();
  uint64_t v15 = v29;
  v24[1] = v5 + 104;
  v14(v7, v29, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB280();
  sub_12124(&qword_26E940);
  sub_1FB310();
  swift_release();
  v14(v7, v15, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BookHistorySeedBookService();
  sub_1FB300();
  swift_release();
  uint64_t v16 = v29;
  v14(v7, v29, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BooksBackendDiversifier();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BooksBackendPostScorer();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BooksBackendSeedBasedRecommendationService();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  uint64_t v25 = type metadata accessor for DelegatingBookScorer();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_12124(&qword_26E948);
  sub_1FB310();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for IdentityBookScorer();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BookHistoryService();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BookHistoryServiceStressTest();
  sub_1FB300();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_12124(&qword_26E950);
  sub_1FB310();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_1FB310();
  swift_release();
  v14(v7, v16, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_12124(&qword_26E958);
  sub_1FB310();
  swift_release();
  uint64_t v17 = v16;
  uint64_t v18 = v16;
  uint64_t v19 = v30;
  v30(v7, v18, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_1FB310();
  swift_release();
  v19(v7, v17, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_12124(&qword_26E960);
  sub_1FB310();
  swift_release();
  v19(v7, v17, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  sub_12124(&qword_26E968);
  sub_1FB310();
  swift_release();
  v19(v7, v17, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BooksBackendPersonalizationMetadataService();
  sub_1FB300();
  swift_release();
  v19(v7, v17, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB290();
  type metadata accessor for BooksPersonalizationMetadataCache();
  sub_1FB300();
  swift_release();
  v19(v7, v17, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v13(v7, v4);
  sub_1FB2A0();
  sub_5D64(v32, v32[3]);
  BOOL v21 = v26;
  uint64_t v20 = v27;
  uint64_t v22 = v28;
  (*(void (**)(char *, void, uint64_t))(v27 + 104))(v26, enum case for CallbackScope.any(_:), v28);
  sub_1FB320();
  (*(void (**)(char *, uint64_t))(v20 + 8))(v21, v22);
  return sub_1264C((uint64_t)v32);
}

uint64_t CollectionRecommendationRequest.userInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

BooksPersonalization::ScoredAuthor __swiftcall ScoredAuthor.init(author:score:)(BooksPersonalization::Author author, Swift::Double score)
{
  *(_OWORD *)uint64_t v2 = *(_OWORD *)author.storeID;
  *(Swift::Double *)(v2 + 16) = score;
  result.author = author;
  result.score = score;
  return result;
}

uint64_t sub_A82E8()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x726F68747561;
  }
}

uint64_t sub_A831C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_A91BC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_A8344(uint64_t a1)
{
  unint64_t v2 = sub_A8544();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_A8380(uint64_t a1)
{
  unint64_t v2 = sub_A8544();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScoredAuthor.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26E9B0);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  sub_5D64(a1, a1[3]);
  sub_A8544();
  sub_1FC870();
  uint64_t v13 = v8;
  uint64_t v14 = v7;
  char v12 = 0;
  sub_A8598();
  uint64_t v9 = v11;
  sub_1FC530();
  if (!v9)
  {
    LOBYTE(v13) = 1;
    sub_1FC500();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_A8544()
{
  unint64_t result = qword_26E9B8;
  if (!qword_26E9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E9B8);
  }
  return result;
}

unint64_t sub_A8598()
{
  unint64_t result = qword_26E9C0;
  if (!qword_26E9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E9C0);
  }
  return result;
}

uint64_t ScoredAuthor.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26E9C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_A8544();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  v14[15] = 0;
  sub_A87D4();
  sub_1FC3F0();
  uint64_t v10 = v15;
  uint64_t v9 = v16;
  LOBYTE(v15) = 1;
  swift_bridgeObjectRetain();
  sub_1FC3C0();
  uint64_t v12 = v11;
  (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v12;
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

unint64_t sub_A87D4()
{
  unint64_t result = qword_26E9D0;
  if (!qword_26E9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E9D0);
  }
  return result;
}

uint64_t sub_A8828@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ScoredAuthor.init(from:)(a1, a2);
}

uint64_t sub_A8840(void *a1)
{
  return ScoredAuthor.encode(to:)(a1);
}

unint64_t AuthorRecommendationServiceError.description.getter()
{
  uint64_t v1 = *v0;
  sub_1FC050(32);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  uint64_t v3 = (void *)0x8000000000217F40;
  switch(v1)
  {
    case 1:
      v2._uint64_t countAndFlagsBits = 0xD000000000000021;
      uint64_t v4 = "not signed into a paid storefront";
      goto LABEL_5;
    case 2:
      uint64_t v3 = (void *)0x8000000000217EF0;
      v2._uint64_t countAndFlagsBits = 0xD000000000000016;
      break;
    case 3:
      v2._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      uint64_t v4 = "user has recommendation switch at Account Settings > Personalized Recommendations disabled";
LABEL_5:
      uint64_t v3 = (void *)((unint64_t)(v4 - 32) | 0x8000000000000000);
      break;
    default:
      break;
  }
  v2._object = v3;
  sub_1FB8F0(v2);
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

uint64_t AuthorRecommendationSource.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_2565F8;
  v8._object = a2;
  Swift::Int v6 = sub_1FC2D0(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

_UNKNOWN **static AuthorRecommendationSource.allCases.getter()
{
  return &off_256630;
}

uint64_t sub_A89CC@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_256658;
  v7._object = v3;
  Swift::Int v5 = sub_1FC2D0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_A8A20(void *a1@<X8>)
{
  *a1 = &off_256690;
}

unint64_t sub_A8A34()
{
  unint64_t result = qword_26E9D8;
  if (!qword_26E9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E9D8);
  }
  return result;
}

unint64_t sub_A8A8C()
{
  unint64_t result = qword_26E9E0;
  if (!qword_26E9E0)
  {
    sub_121C4(&qword_26E9E8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E9E0);
  }
  return result;
}

unint64_t sub_A8AEC()
{
  unint64_t result = qword_26E9F0;
  if (!qword_26E9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26E9F0);
  }
  return result;
}

void *sub_A8B44(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ScoredAuthor(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *assignWithTake for ScoredAuthor(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoredAuthor(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoredAuthor(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredAuthor()
{
  return &type metadata for ScoredAuthor;
}

unsigned char *storeEnumTagSinglePayload for AuthorRecommendationServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA8DA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthorRecommendationServiceError()
{
  return &type metadata for AuthorRecommendationServiceError;
}

unsigned char *storeEnumTagSinglePayload for AuthorRecommendationSource(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xA8E74);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for AuthorRecommendationSource()
{
  return &type metadata for AuthorRecommendationSource;
}

uint64_t dispatch thunk of AuthorRecommendationServiceType.fetchRecommendedAuthors(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  Swift::String v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *Swift::String v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

unsigned char *storeEnumTagSinglePayload for ScoredAuthor.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xA907CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredAuthor.CodingKeys()
{
  return &type metadata for ScoredAuthor.CodingKeys;
}

unint64_t sub_A90B8()
{
  unint64_t result = qword_26EA00;
  if (!qword_26EA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA00);
  }
  return result;
}

unint64_t sub_A9110()
{
  unint64_t result = qword_26EA08;
  if (!qword_26EA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA08);
  }
  return result;
}

unint64_t sub_A9168()
{
  unint64_t result = qword_26EA10;
  if (!qword_26EA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA10);
  }
  return result;
}

uint64_t sub_A91BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F68747561 && a2 == 0xE600000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_A92A0(uint64_t a1)
{
  return *(void *)(a1 + 16);
}

uint64_t Book.Metadata.genreIDs.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain_n();
    uint64_t v3 = v1 + 40;
    do
    {
      uint64_t v4 = *(void *)(v3 - 8);
      sub_12124(&qword_26D3C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
      *(void *)(inited + 32) = v4;
      uint64_t v9 = inited;
      uint64_t v6 = swift_bridgeObjectRetain();
      sub_AA714(v6, (uint64_t (*)(void))sub_41858);
      sub_AA714(v9, (uint64_t (*)(void))sub_41858);
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease_n();
  }
  uint64_t v7 = sub_50A6C((uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  return v7;
}

uint64_t sub_A93B0(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *(void **)v2;
  int64_t v6 = *(void *)(*(void *)v2 + 16);
  int64_t v7 = v6 + v4;
  if (__OFADD__(v6, v4))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v8 = a1;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v10 = v5[3] >> 1, v10 < v7))
  {
    if (v6 <= v7) {
      int64_t v11 = v6 + v4;
    }
    else {
      int64_t v11 = v6;
    }
    uint64_t v5 = sub_41974(isUniquelyReferenced_nonNull_native, v11, 1, v5);
    int64_t v10 = v5[3] >> 1;
  }
  uint64_t v12 = v5[2];
  uint64_t v13 = (void *)(v10 - v12);
  uint64_t v14 = sub_4EEFC(v46, (char *)&v5[70 * v12 + 4], v10 - v12, v8);
  if ((uint64_t)v14 < v4) {
    goto LABEL_15;
  }
  if (v14)
  {
    uint64_t v15 = v5[2];
    BOOL v16 = __OFADD__(v15, v14);
    uint64_t v17 = (char *)v14 + v15;
    if (v16)
    {
      __break(1u);
      goto LABEL_20;
    }
    v5[2] = v17;
  }
  if (v14 == v13)
  {
LABEL_16:
    int64_t v3 = v5[2];
    uint64_t v8 = v46[0];
    uint64_t v37 = v46[1];
    uint64_t v4 = v46[2];
    uint64_t v13 = v47;
    if (v48)
    {
      unint64_t v19 = (v48 - 1) & v48;
      unint64_t v20 = __clz(__rbit64(v48)) | ((void)v47 << 6);
LABEL_18:
      BOOL v21 = (const void *)(*(void *)(v8 + 48) + 560 * v20);
      memcpy(__dst, v21, 0x229uLL);
      memmove(v45, v21, 0x229uLL);
      AuthorRecommendationSource.id.getter(v45);
      sub_12384(__dst);
      int64_t v7 = (int64_t)v13;
LABEL_41:
      sub_AE350((uint64_t)v45, (uint64_t)v43);
      sub_AE350((uint64_t)v43, (uint64_t)__dst);
      if (sub_AE3B8((uint64_t)__dst) == 1) {
        goto LABEL_13;
      }
      int64_t v38 = (unint64_t)(v4 + 64) >> 6;
      while (1)
      {
        unint64_t v27 = v5[3];
        int64_t v28 = v27 >> 1;
        if ((uint64_t)(v27 >> 1) < v3 + 1)
        {
          uint64_t v5 = sub_41974((void *)(v27 > 1), v3 + 1, 1, v5);
          int64_t v28 = v5[3] >> 1;
        }
        sub_AE350((uint64_t)v45, (uint64_t)v41);
        sub_AE350((uint64_t)v41, (uint64_t)v42);
        if (sub_AE3B8((uint64_t)v42) != 1) {
          break;
        }
LABEL_44:
        v5[2] = v3;
        sub_AE350((uint64_t)v45, (uint64_t)v43);
        sub_AE350((uint64_t)v43, (uint64_t)__dst);
        if (sub_AE3B8((uint64_t)__dst) == 1) {
          goto LABEL_13;
        }
      }
      while (1)
      {
        if (v3 >= v28) {
          goto LABEL_44;
        }
        sub_AE350((uint64_t)v41, (uint64_t)__src);
        uint64_t result = (uint64_t)memcpy(&v5[70 * v3 + 4], __src, 0x229uLL);
        if (!v19) {
          break;
        }
        unint64_t v29 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v30 = v29 | (v7 << 6);
LABEL_50:
        uint64_t v31 = (const void *)(*(void *)(v8 + 48) + 560 * v30);
        memcpy(v39, v31, 0x229uLL);
        memmove(v45, v31, 0x229uLL);
        AuthorRecommendationSource.id.getter(v45);
        sub_12384(v39);
LABEL_51:
        ++v3;
        sub_AE350((uint64_t)v45, (uint64_t)v41);
        sub_AE350((uint64_t)v41, (uint64_t)v42);
        if (sub_AE3B8((uint64_t)v42) == 1) {
          goto LABEL_44;
        }
      }
      int64_t v32 = v7 + 1;
      if (__OFADD__(v7, 1))
      {
        __break(1u);
        return result;
      }
      if (v32 >= v38)
      {
        int64_t v34 = v7;
LABEL_59:
        sub_AE3D0(v39);
        sub_AE350((uint64_t)v39, (uint64_t)v45);
        unint64_t v19 = 0;
        int64_t v7 = v34;
        goto LABEL_51;
      }
      unint64_t v33 = *(void *)(v37 + 8 * v32);
      if (!v33)
      {
        int64_t v35 = v7 + 2;
        int64_t v34 = v7 + 1;
        if (v7 + 2 >= v38) {
          goto LABEL_59;
        }
        unint64_t v33 = *(void *)(v37 + 8 * v35);
        if (!v33)
        {
          int64_t v34 = v7 + 2;
          if (v7 + 3 >= v38) {
            goto LABEL_59;
          }
          unint64_t v33 = *(void *)(v37 + 8 * (v7 + 3));
          if (v33)
          {
            int64_t v32 = v7 + 3;
            goto LABEL_57;
          }
          int64_t v35 = v7 + 4;
          int64_t v34 = v7 + 3;
          if (v7 + 4 >= v38) {
            goto LABEL_59;
          }
          unint64_t v33 = *(void *)(v37 + 8 * v35);
          if (!v33)
          {
            int64_t v32 = v7 + 5;
            int64_t v34 = v7 + 4;
            if (v7 + 5 >= v38) {
              goto LABEL_59;
            }
            unint64_t v33 = *(void *)(v37 + 8 * v32);
            if (!v33)
            {
              int64_t v36 = v7 + 6;
              while (v38 != v36)
              {
                unint64_t v33 = *(void *)(v37 + 8 * v36++);
                if (v33)
                {
                  int64_t v32 = v36 - 1;
                  goto LABEL_57;
                }
              }
              int64_t v34 = v38 - 1;
              goto LABEL_59;
            }
            goto LABEL_57;
          }
        }
        int64_t v32 = v35;
      }
LABEL_57:
      unint64_t v19 = (v33 - 1) & v33;
      unint64_t v30 = __clz(__rbit64(v33)) + (v32 << 6);
      int64_t v7 = v32;
      goto LABEL_50;
    }
LABEL_20:
    int64_t v22 = (int64_t)v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
    }
    else
    {
      int64_t v23 = (unint64_t)(v4 + 64) >> 6;
      int64_t v7 = (int64_t)v13;
      if (v22 >= v23) {
        goto LABEL_40;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v22);
      if (v24)
      {
LABEL_23:
        unint64_t v19 = (v24 - 1) & v24;
        unint64_t v20 = __clz(__rbit64(v24)) + (v22 << 6);
        uint64_t v13 = (void *)v22;
        goto LABEL_18;
      }
      int64_t v25 = (int64_t)v13 + 2;
      int64_t v7 = (int64_t)v13 + 1;
      if ((uint64_t)v13 + 2 >= v23) {
        goto LABEL_40;
      }
      uint64_t v1 = v4;
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (v24)
      {
LABEL_26:
        int64_t v22 = v25;
        goto LABEL_23;
      }
      int64_t v7 = (int64_t)v13 + 2;
      if ((uint64_t)v13 + 3 >= v23) {
        goto LABEL_40;
      }
      unint64_t v24 = *(void *)(v37 + 8 * ((void)v13 + 3));
      if (v24)
      {
        int64_t v22 = (int64_t)v13 + 3;
        goto LABEL_23;
      }
      int64_t v25 = (int64_t)v13 + 4;
      int64_t v7 = (int64_t)v13 + 3;
      if ((uint64_t)v13 + 4 >= v23) {
        goto LABEL_40;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v25);
      if (v24) {
        goto LABEL_26;
      }
      int64_t v22 = (int64_t)v13 + 5;
      int64_t v7 = (int64_t)v13 + 4;
      if ((uint64_t)v13 + 5 >= v23)
      {
LABEL_40:
        sub_AE3D0(__dst);
        sub_AE350((uint64_t)__dst, (uint64_t)v45);
        unint64_t v19 = 0;
        goto LABEL_41;
      }
      unint64_t v24 = *(void *)(v37 + 8 * v22);
      if (v24) {
        goto LABEL_23;
      }
      int64_t v7 = v23 - 1;
      unint64_t v26 = (char *)v13 + 6;
      while ((char *)v23 != v26)
      {
        unint64_t v24 = *(void *)(v37 + 8 * (void)v26++);
        if (v24)
        {
          int64_t v22 = (int64_t)(v26 - 1);
          goto LABEL_23;
        }
      }
    }
    uint64_t v4 = v1;
    goto LABEL_40;
  }
LABEL_13:
  uint64_t result = sub_1226C();
  *(void *)uint64_t v2 = v5;
  return result;
}

uint64_t sub_A98F4(uint64_t a1)
{
  return sub_AA714(a1, (uint64_t (*)(void))sub_41858);
}

uint64_t sub_A990C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int64_t v3 = sub_41864(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[2 * v8 + 4];
  if (a1 + 32 < v9 + 16 * v2 && v9 < a1 + 32 + 16 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A9A60(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int64_t v3 = sub_41CBC(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[10 * v8 + 4];
  if (a1 + 32 < v9 + 80 * v2 && v9 < a1 + 32 + 80 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A9BBC(uint64_t a1)
{
  return sub_AAED4(a1, (uint64_t (*)(void))sub_41F08, type metadata accessor for CollectionRecommendation);
}

uint64_t sub_A9BE8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int64_t v3 = sub_42380(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[8 * v8 + 4];
  if (a1 + 32 < v9 + (v2 << 6) && v9 < a1 + 32 + (v2 << 6)) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A9D3C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int64_t v3 = sub_41DE0(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[19 * v9 + 4];
  if (a1 + 32 < v10 + 152 * v8 && v10 < a1 + 32 + 152 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A9E9C(uint64_t a1)
{
  unint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    unint64_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  int64_t v3 = sub_425CC(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  unint64_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (unint64_t)&v3[9 * v9 + 4];
  if (a1 + 32 < v10 + 72 * v8 && v10 < a1 + 32 + 72 * v8) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  uint64_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_A9FFC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int64_t v3 = sub_41974(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[70 * v8 + 4];
  if (a1 + 32 < v9 + 560 * v2 && v9 < a1 + 32 + 560 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA158(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  int64_t v3 = sub_43388(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[3 * v8 + 4];
  if (a1 + 32 < v9 + 24 * v2 && v9 < a1 + 32 + 24 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA2B4(uint64_t a1)
{
  return sub_AA2F4(a1, (uint64_t (*)(void))sub_434B0);
}

uint64_t sub_AA2D4(uint64_t a1)
{
  return sub_AA2F4(a1, (uint64_t (*)(void))sub_435E0);
}

uint64_t sub_AA2F4(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(void *)(v4 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v4 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v9 = v4 + 16 * v8 + 32;
  if (a1 + 32 < v9 + 16 * v3 && v9 < a1 + 32 + 16 * v3) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (!v3)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v11, v3);
  uint64_t v13 = v11 + v3;
  if (!v12)
  {
    *(void *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA458(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_435F4(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = &v3[6 * v8 + 4];
  if (a1 + 32 < (unint64_t)&v9[6 * v2] && (unint64_t)v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  memcpy(v9, (const void *)(a1 + 32), 48 * v2);
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA5A8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_43718(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[4 * v8 + 4];
  if (a1 + 32 < v9 + 32 * v2 && v9 < a1 + 32 + 32 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA6FC(uint64_t a1)
{
  return sub_AA714(a1, (uint64_t (*)(void))sub_43828);
}

uint64_t sub_AA714(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = *(void *)(a1 + 16);
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (__OFADD__(v5, v3))
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (swift_isUniquelyReferenced_nonNull_native() && v5 + v3 <= *(void *)(v4 + 24) >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_15;
  }
  uint64_t v4 = a2();
  if (!*(void *)(a1 + 16))
  {
LABEL_15:
    if (!v3) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v8 = *(void *)(v4 + 16);
  if ((*(void *)(v4 + 24) >> 1) - v8 < v3)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v9 = (void *)(v4 + 8 * v8 + 32);
  if (a1 + 32 < (unint64_t)v9 + 8 * v3 && (unint64_t)v9 < a1 + 32 + 8 * v3) {
    goto LABEL_21;
  }
  memcpy(v9, (const void *)(a1 + 32), 8 * v3);
  if (!v3)
  {
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v2 = v4;
    return result;
  }
  uint64_t v11 = *(void *)(v4 + 16);
  BOOL v12 = __OFADD__(v11, v3);
  uint64_t v13 = v11 + v3;
  if (!v12)
  {
    *(void *)(v4 + 16) = v13;
    goto LABEL_16;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA86C(uint64_t a1)
{
  size_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
    goto LABEL_21;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    size_t v8 = *(void *)(a1 + 16);
    if (v8) {
      goto LABEL_5;
    }
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
  if (v4 <= v5) {
    int64_t v15 = v4 + v2;
  }
  else {
    int64_t v15 = v4;
  }
  uint64_t v3 = sub_43834(isUniquelyReferenced_nonNull_native, v15, 1, v3);
  size_t v8 = *(void *)(a1 + 16);
  if (!v8) {
    goto LABEL_18;
  }
LABEL_5:
  uint64_t v9 = v3[2];
  if ((v3[3] >> 1) - v9 < (uint64_t)v8)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v10 = (char *)v3 + v9 + 32;
  if (a1 + 32 < (unint64_t)&v10[v8] && (unint64_t)v10 < a1 + 32 + v8) {
    goto LABEL_24;
  }
  memcpy(v10, (const void *)(a1 + 32), v8);
  if (v8 < v2)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  uint64_t v12 = v3[2];
  BOOL v13 = __OFADD__(v12, v8);
  size_t v14 = v12 + v8;
  if (!v13)
  {
    v3[2] = v14;
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AA9B8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v6 = a1;
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (!isUniquelyReferenced_nonNull_native || (int64_t v8 = v3[3] >> 1, v8 < v5))
  {
    if (v4 <= v5) {
      int64_t v9 = v4 + v2;
    }
    else {
      int64_t v9 = v4;
    }
    uint64_t v3 = sub_41858(isUniquelyReferenced_nonNull_native, v9, 1, v3);
    int64_t v8 = v3[3] >> 1;
  }
  uint64_t v10 = v3[2];
  uint64_t v11 = v8 - v10;
  uint64_t result = (uint64_t)sub_4F124(v42, &v3[v10 + 4], v8 - v10, v6);
  if (result < v2) {
    goto LABEL_15;
  }
  if (result)
  {
    uint64_t v16 = v3[2];
    BOOL v17 = __OFADD__(v16, result);
    uint64_t v18 = v16 + result;
    if (v17)
    {
      __break(1u);
      goto LABEL_47;
    }
    v3[2] = v18;
  }
  if (result != v11)
  {
LABEL_13:
    uint64_t result = sub_1226C();
    *(void *)uint64_t v1 = v3;
    return result;
  }
LABEL_16:
  uint64_t v6 = v3[2];
  uint64_t result = v42[0];
  uint64_t v13 = v42[1];
  uint64_t v14 = v43;
  uint64_t v15 = v44;
  if (v45)
  {
    unint64_t v19 = (v45 - 1) & v45;
    unint64_t v20 = __clz(__rbit64(v45)) | (v44 << 6);
    int64_t v21 = (unint64_t)(v43 + 64) >> 6;
    goto LABEL_18;
  }
LABEL_47:
  int64_t v35 = v15 + 1;
  if (__OFADD__(v15, 1)) {
    goto LABEL_65;
  }
  int64_t v21 = (unint64_t)(v14 + 64) >> 6;
  if (v35 >= v21) {
    goto LABEL_13;
  }
  unint64_t v36 = *(void *)(v13 + 8 * v35);
  uint64_t v37 = v15 + 1;
  if (!v36)
  {
    uint64_t v37 = v15 + 2;
    if (v15 + 2 >= v21) {
      goto LABEL_13;
    }
    unint64_t v36 = *(void *)(v13 + 8 * v37);
    if (!v36)
    {
      uint64_t v37 = v15 + 3;
      if (v15 + 3 >= v21) {
        goto LABEL_13;
      }
      unint64_t v36 = *(void *)(v13 + 8 * v37);
      if (!v36)
      {
        uint64_t v37 = v15 + 4;
        if (v15 + 4 >= v21) {
          goto LABEL_13;
        }
        unint64_t v36 = *(void *)(v13 + 8 * v37);
        if (!v36)
        {
          uint64_t v37 = v15 + 5;
          if (v15 + 5 >= v21) {
            goto LABEL_13;
          }
          unint64_t v36 = *(void *)(v13 + 8 * v37);
          if (!v36)
          {
            uint64_t v38 = v15 + 6;
            do
            {
              if (v21 == v38) {
                goto LABEL_13;
              }
              unint64_t v36 = *(void *)(v13 + 8 * v38++);
            }
            while (!v36);
            uint64_t v37 = v38 - 1;
          }
        }
      }
    }
  }
  unint64_t v19 = (v36 - 1) & v36;
  unint64_t v20 = __clz(__rbit64(v36)) + (v37 << 6);
  uint64_t v15 = v37;
LABEL_18:
  uint64_t v22 = *(void *)(*(void *)(result + 48) + 8 * v20);
  while (1)
  {
    unint64_t v23 = v3[3];
    int64_t v24 = v23 >> 1;
    if ((uint64_t)(v23 >> 1) < v6 + 1) {
      break;
    }
    if (v6 < v24) {
      goto LABEL_25;
    }
LABEL_19:
    v3[2] = v6;
  }
  uint64_t v40 = v13;
  uint64_t v41 = result;
  uint64_t v39 = v14;
  uint64_t v31 = v15;
  int64_t v32 = v3;
  unint64_t v33 = v19;
  int64_t v34 = sub_41858((void *)(v23 > 1), v6 + 1, 1, v32);
  unint64_t v19 = v33;
  uint64_t v15 = v31;
  uint64_t v14 = v39;
  uint64_t v13 = v40;
  uint64_t v3 = v34;
  uint64_t result = v41;
  int64_t v24 = v3[3] >> 1;
  if (v6 >= v24) {
    goto LABEL_19;
  }
  while (1)
  {
LABEL_25:
    v3[v6++ + 4] = v22;
    if (v19)
    {
      unint64_t v25 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v26 = v25 | (v15 << 6);
      goto LABEL_24;
    }
    int64_t v27 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v27 >= v21) {
      goto LABEL_44;
    }
    unint64_t v28 = *(void *)(v13 + 8 * v27);
    uint64_t v29 = v15 + 1;
    if (!v28)
    {
      uint64_t v29 = v15 + 2;
      if (v15 + 2 >= v21) {
        goto LABEL_44;
      }
      unint64_t v28 = *(void *)(v13 + 8 * v29);
      if (!v28)
      {
        uint64_t v29 = v15 + 3;
        if (v15 + 3 >= v21) {
          goto LABEL_44;
        }
        unint64_t v28 = *(void *)(v13 + 8 * v29);
        if (!v28)
        {
          uint64_t v29 = v15 + 4;
          if (v15 + 4 >= v21) {
            goto LABEL_44;
          }
          unint64_t v28 = *(void *)(v13 + 8 * v29);
          if (!v28)
          {
            uint64_t v29 = v15 + 5;
            if (v15 + 5 >= v21) {
              goto LABEL_44;
            }
            unint64_t v28 = *(void *)(v13 + 8 * v29);
            if (!v28)
            {
              uint64_t v30 = v15 + 6;
              while (v21 != v30)
              {
                unint64_t v28 = *(void *)(v13 + 8 * v30++);
                if (v28)
                {
                  uint64_t v29 = v30 - 1;
                  goto LABEL_41;
                }
              }
LABEL_44:
              v3[2] = v6;
              goto LABEL_13;
            }
          }
        }
      }
    }
LABEL_41:
    unint64_t v19 = (v28 - 1) & v28;
    unint64_t v26 = __clz(__rbit64(v28)) + (v29 << 6);
    uint64_t v15 = v29;
LABEL_24:
    uint64_t v22 = *(void *)(*(void *)(result + 48) + 8 * v26);
    if (v6 >= v24) {
      goto LABEL_19;
    }
  }
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_AAD4C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = *(void **)v1;
  int64_t v4 = *(void *)(*(void *)v1 + 16);
  int64_t v5 = v4 + v2;
  if (__OFADD__(v4, v2))
  {
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
  if (isUniquelyReferenced_nonNull_native && v5 <= v3[3] >> 1)
  {
    if (*(void *)(a1 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_18;
  }
  if (v4 <= v5) {
    int64_t v14 = v4 + v2;
  }
  else {
    int64_t v14 = v4;
  }
  uint64_t v3 = sub_43A40(isUniquelyReferenced_nonNull_native, v14, 1, v3);
  if (!*(void *)(a1 + 16))
  {
LABEL_18:
    if (!v2) {
      goto LABEL_19;
    }
    goto LABEL_21;
  }
LABEL_5:
  uint64_t v8 = v3[2];
  if ((v3[3] >> 1) - v8 < v2)
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  unint64_t v9 = (unint64_t)&v3[6 * v8 + 4];
  if (a1 + 32 < v9 + 48 * v2 && v9 < a1 + 32 + 48 * v2) {
    goto LABEL_24;
  }
  swift_arrayInitWithCopy();
  if (!v2)
  {
LABEL_19:
    uint64_t result = swift_bridgeObjectRelease();
    *(void *)uint64_t v1 = v3;
    return result;
  }
  uint64_t v11 = v3[2];
  BOOL v12 = __OFADD__(v11, v2);
  uint64_t v13 = v11 + v2;
  if (!v12)
  {
    v3[2] = v13;
    goto LABEL_19;
  }
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_AAEA8(uint64_t a1)
{
  return sub_AAED4(a1, (uint64_t (*)(void))sub_43B88, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

uint64_t sub_AAED4(uint64_t a1, uint64_t (*a2)(void), uint64_t (*a3)(void))
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v5 = *v3;
  uint64_t v6 = *(void *)(*v3 + 16);
  if (__OFADD__(v6, v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  if (swift_isUniquelyReferenced_nonNull_native()
    && (int64_t)(v6 + v4) <= *(void *)(v5 + 24) >> 1)
  {
    unint64_t v10 = *(void *)(a1 + 16);
    if (v10) {
      goto LABEL_5;
    }
LABEL_15:
    if (!v4) {
      goto LABEL_16;
    }
    goto LABEL_18;
  }
  uint64_t v5 = a2();
  unint64_t v10 = *(void *)(a1 + 16);
  if (!v10) {
    goto LABEL_15;
  }
LABEL_5:
  uint64_t v11 = *(void *)(v5 + 16);
  uint64_t v12 = (*(void *)(v5 + 24) >> 1) - v11;
  uint64_t v13 = *(void *)(a3(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  if (v12 < (uint64_t)v10)
  {
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = v5 + v15 + v14 * v11;
  unint64_t v17 = a1 + v15;
  uint64_t v18 = v14 * v10;
  unint64_t v19 = v16 + v18;
  unint64_t v20 = v17 + v18;
  if (v17 < v19 && v16 < v20) {
    goto LABEL_21;
  }
  swift_arrayInitWithCopy();
  if (v10 < v4)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v22 = *(void *)(v5 + 16);
  BOOL v23 = __OFADD__(v22, v10);
  uint64_t v24 = v22 + v10;
  if (!v23)
  {
    *(void *)(v5 + 16) = v24;
LABEL_16:
    uint64_t result = swift_bridgeObjectRelease();
    *uint64_t v3 = v5;
    return result;
  }
LABEL_20:
  __break(1u);
LABEL_21:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void Book.Metadata.SeriesMembership.seriesMetadata.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 16);
}

uint64_t Book.Metadata.SeriesMembership.init(seriesID:ordinal:seriesMetadata:mappedSeriesID:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X8>)
{
  char v6 = *a3;
  *(void *)a6 = a2;
  *(void *)(a6 + 8) = result;
  *(unsigned char *)(a6 + 16) = v6;
  *(void *)(a6 + 24) = a4;
  *(unsigned char *)(a6 + 32) = a5 & 1;
  return result;
}

void Book.Metadata.SeriesMembership.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  Swift::UInt8 v2 = *(unsigned char *)(v0 + 16);
  Swift::UInt64 v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 32);
  sub_1FC7F0(*(void *)v0);
  sub_1FC820(v1);
  sub_1FC800(v2);
  if (v4 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v3);
  }
}

uint64_t sub_AB13C()
{
  uint64_t result = 0x6C616E6964726FLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x4449736569726573;
      break;
    case 2:
      uint64_t result = 0x654D736569726573;
      break;
    case 3:
      uint64_t result = 0x655364657070616DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_AB1E4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_ADE0C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AB20C(uint64_t a1)
{
  unint64_t v2 = sub_ACB88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AB248(uint64_t a1)
{
  unint64_t v2 = sub_ACB88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Book.Metadata.SeriesMembership.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26EA18);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(v1 + 8);
  int v12 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  v10[1] = *(unsigned __int8 *)(v1 + 32);
  sub_5D64(a1, a1[3]);
  sub_ACB88();
  sub_1FC870();
  char v18 = 0;
  sub_1FC520();
  if (!v2)
  {
    char v8 = v12;
    char v17 = 1;
    sub_1FC560();
    char v16 = v8;
    char v15 = 2;
    sub_ACBDC();
    sub_1FC530();
    char v14 = 3;
    sub_1FC4D0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Book.Metadata.SeriesMembership.hashValue.getter()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  Swift::UInt8 v3 = *(unsigned char *)(v0 + 16);
  Swift::UInt64 v4 = *(void *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 32);
  sub_1FC7E0();
  sub_1FC7F0(v1);
  sub_1FC820(v2);
  sub_1FC800(v3);
  if (v5 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v4);
  }
  return sub_1FC830();
}

uint64_t Book.Metadata.SeriesMembership.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26EA30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_ACB88();
  sub_1FC850();
  if (!v2)
  {
    char v22 = 0;
    uint64_t v9 = sub_1FC3E0();
    char v21 = 1;
    uint64_t v10 = sub_1FC420();
    char v19 = 2;
    sub_ACC30();
    sub_1FC3F0();
    int v17 = v20;
    char v18 = 3;
    uint64_t v12 = sub_1FC390();
    uint64_t v13 = v8;
    char v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(unsigned char *)(a2 + 16) = v17;
    *(void *)(a2 + 24) = v12;
    *(unsigned char *)(a2 + 32) = v15 & 1;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_AB748@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Book.Metadata.SeriesMembership.init(from:)(a1, a2);
}

uint64_t sub_AB760(void *a1)
{
  return Book.Metadata.SeriesMembership.encode(to:)(a1);
}

Swift::Int sub_AB77C()
{
  Swift::UInt v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  Swift::UInt8 v3 = *(unsigned char *)(v0 + 16);
  Swift::UInt64 v4 = *(void *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 32);
  sub_1FC7E0();
  sub_1FC7F0(v1);
  sub_1FC820(v2);
  sub_1FC800(v3);
  if (v5 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v4);
  }
  return sub_1FC830();
}

uint64_t static Book.Metadata.GenreTreeNode.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2) {
    return sub_182A4(a1[1], a2[1]);
  }
  else {
    return 0;
  }
}

uint64_t sub_AB844()
{
  if (*v0) {
    return 1752457584;
  }
  else {
    return 0x444965726E6567;
  }
}

uint64_t sub_AB878@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AE010(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AB8A0(uint64_t a1)
{
  unint64_t v2 = sub_ACC84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AB8DC(uint64_t a1)
{
  unint64_t v2 = sub_ACC84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Book.Metadata.GenreTreeNode.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26EA40);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_ACC84();
  sub_1FC870();
  char v11 = 0;
  sub_1FC560();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    sub_12124(&qword_26DA30);
    sub_2F0D8(&qword_26DA38, &qword_26DA30);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Book.Metadata.GenreTreeNode.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26EA50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_ACC84();
  sub_1FC850();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_1FC420();
    sub_12124(&qword_26DA30);
    char v13 = 1;
    sub_2F0D8(&qword_26DA48, &qword_26DA30);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_ABCC4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Book.Metadata.GenreTreeNode.init(from:)(a1, a2);
}

uint64_t sub_ABCDC(void *a1)
{
  return Book.Metadata.GenreTreeNode.encode(to:)(a1);
}

__n128 Book.Metadata.seriesMembership.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 72);
  __n128 result = *(__n128 *)(v1 + 40);
  long long v4 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

__n128 Book.Metadata.init(authorIDs:mediaType:leafGenres:mappedAssetID:seriesMembership:)@<Q0>(uint64_t a1@<X0>, unsigned char *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  __n128 result = *(__n128 *)a6;
  long long v8 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 40) = *(_OWORD *)a6;
  char v9 = *(unsigned char *)(a6 + 32);
  *(unsigned char *)a7 = *a2;
  *(void *)(a7 + 8) = a3;
  *(void *)(a7 + 16) = a1;
  *(void *)(a7 + 24) = a4;
  *(unsigned char *)(a7 + 32) = a5 & 1;
  *(_OWORD *)(a7 + 56) = v8;
  *(unsigned char *)(a7 + 72) = v9;
  return result;
}

void Book.Metadata.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 8);
  uint64_t v5 = *(void *)(v2 + 16);
  Swift::UInt64 v6 = *(void *)(v2 + 24);
  int v7 = *(unsigned __int8 *)(v2 + 32);
  Swift::UInt v9 = *(void *)(v2 + 40);
  Swift::UInt64 v8 = *(void *)(v2 + 48);
  uint64_t v10 = *(unsigned __int8 *)(v2 + 56);
  Swift::UInt64 v12 = *(void *)(v2 + 64);
  char v11 = *(unsigned char *)(v2 + 72);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  sub_2CC38(a1, v4);
  swift_bridgeObjectRetain();
  sub_AC9DC(a1, v5);
  swift_bridgeObjectRelease();
  if (v7 == 1)
  {
    sub_1FC800(0);
    if (v10 == 2) {
      goto LABEL_7;
    }
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v6);
    if (v10 == 2) {
      goto LABEL_7;
    }
  }
  sub_1FC800(1u);
  sub_1FC7F0(v9);
  sub_1FC820(v8);
  sub_1FC800(v10 & 1);
  if ((v11 & 1) == 0)
  {
    sub_1FC800(1u);
    sub_1FC820(v12);
    return;
  }
LABEL_7:
  sub_1FC800(0);
}

unint64_t sub_ABE90()
{
  unint64_t result = 0x707954616964656DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x726E65476661656CLL;
      break;
    case 2:
      unint64_t result = 0x4449726F68747561;
      break;
    case 3:
      unint64_t result = 0x734164657070616DLL;
      break;
    case 4:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_ABF54@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_AE0F4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_ABF7C(uint64_t a1)
{
  unint64_t v2 = sub_ACED0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_ABFB8(uint64_t a1)
{
  unint64_t v2 = sub_ACED0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Book.Metadata.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26EA58);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v7 = (char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v26 = *((void *)v1 + 2);
  uint64_t v27 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  int v33 = v1[32];
  uint64_t v11 = *((void *)v1 + 6);
  uint64_t v21 = *((void *)v1 + 5);
  uint64_t v22 = v11;
  uint64_t v24 = *((void *)v1 + 7);
  uint64_t v25 = v10;
  uint64_t v23 = *((void *)v1 + 8);
  int v12 = v1[72];
  uint64_t v13 = a1[3];
  char v14 = a1;
  uint64_t v16 = v15;
  sub_5D64(v14, v13);
  sub_ACED0();
  sub_1FC870();
  LOBYTE(v28) = v8;
  char v34 = 0;
  sub_ACF24();
  sub_1FC530();
  if (!v2)
  {
    uint64_t v18 = v26;
    int v20 = v12;
    uint64_t v28 = v27;
    char v34 = 1;
    sub_12124(&qword_26EA70);
    sub_AD074(&qword_26EA78, (void (*)(void))sub_ACF78);
    sub_1FC530();
    uint64_t v28 = v18;
    char v34 = 2;
    sub_12124(&qword_26EA88);
    sub_2F0D8(&qword_26EA90, &qword_26EA88);
    sub_1FC530();
    LOBYTE(v28) = 3;
    sub_1FC4D0();
    uint64_t v28 = v21;
    uint64_t v29 = v22;
    uint64_t v30 = v24;
    uint64_t v31 = v23;
    char v32 = v20;
    char v34 = 4;
    sub_ACFCC();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v16);
}

Swift::Int Book.Metadata.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 72);
  v5[72] = *(unsigned char *)v0;
  long long v6 = *(_OWORD *)(v0 + 8);
  uint64_t v7 = v1;
  char v8 = v2;
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v10 = *(_OWORD *)(v0 + 56);
  char v11 = v3;
  sub_1FC7E0();
  Book.Metadata.hash(into:)((uint64_t)v5);
  return sub_1FC830();
}

uint64_t Book.Metadata.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26EAA0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_ACED0();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v25 = 0;
  sub_AD020();
  sub_1FC3F0();
  int v9 = v21;
  sub_12124(&qword_26EA70);
  char v25 = 1;
  sub_AD074(&qword_26EAB0, (void (*)(void))sub_AD0E4);
  sub_1FC3F0();
  int v24 = v9;
  uint64_t v10 = v21;
  sub_12124(&qword_26EA88);
  char v25 = 2;
  sub_2F0D8(&qword_26EAC0, &qword_26EA88);
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v20 = v10;
  uint64_t v11 = v21;
  LOBYTE(v21) = 3;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1FC390();
  HIDWORD(v19) = v13;
  uint64_t v14 = v12;
  char v25 = 4;
  sub_AD138();
  sub_1FC360();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v16 = v23;
  long long v17 = v21;
  long long v18 = v22;
  *(unsigned char *)a2 = v24;
  *(void *)(a2 + 8) = v20;
  *(void *)(a2 + 16) = v11;
  *(void *)(a2 + 24) = v14;
  *(unsigned char *)(a2 + 32) = BYTE4(v19) & 1;
  *(_OWORD *)(a2 + 40) = v17;
  *(_OWORD *)(a2 + 56) = v18;
  *(unsigned char *)(a2 + 72) = v16;
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_AC7C0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Book.Metadata.init(from:)(a1, a2);
}

uint64_t sub_AC7D8(void *a1)
{
  return Book.Metadata.encode(to:)(a1);
}

Swift::Int sub_AC7F4()
{
  uint64_t v1 = *(void *)(v0 + 24);
  char v2 = *(unsigned char *)(v0 + 32);
  char v3 = *(unsigned char *)(v0 + 72);
  v5[72] = *(unsigned char *)v0;
  long long v6 = *(_OWORD *)(v0 + 8);
  uint64_t v7 = v1;
  char v8 = v2;
  long long v9 = *(_OWORD *)(v0 + 40);
  long long v10 = *(_OWORD *)(v0 + 56);
  char v11 = v3;
  sub_1FC7E0();
  Book.Metadata.hash(into:)((uint64_t)v5);
  return sub_1FC830();
}

void *sub_AC86C(uint64_t a1)
{
  return sub_AC884(a1);
}

void *sub_AC878(uint64_t a1)
{
  return sub_AC884(a1);
}

void *sub_AC884(uint64_t a1)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)sub_1FC210();
    __break(1u);
  }
  else if (a1)
  {
    uint64_t result = (void *)sub_1FBB40();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_AC918(uint64_t a1)
{
  return sub_AC93C(a1, &qword_26EB48);
}

void *sub_AC924(uint64_t a1)
{
  return sub_AC93C(a1, &qword_26EB50);
}

void *sub_AC930(uint64_t a1)
{
  return sub_AC93C(a1, &qword_26EB58);
}

void *sub_AC93C(uint64_t a1, uint64_t *a2)
{
  if (a1 < 0)
  {
    uint64_t result = (void *)sub_1FC210();
    __break(1u);
  }
  else if (a1)
  {
    sub_12124(a2);
    uint64_t result = (void *)sub_1FBB40();
    result[2] = a1;
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void sub_AC9DC(uint64_t a1, uint64_t a2)
{
  sub_1FC830();
  Swift::UInt v3 = 0;
  int64_t v4 = 0;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  uint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      v8 &= v8 - 1;
      goto LABEL_5;
    }
    if (__OFADD__(v4++, 1)) {
      goto LABEL_19;
    }
    if (v4 >= v9)
    {
LABEL_17:
      sub_1FC7F0(v3);
      return;
    }
    uint64_t v11 = *(void *)(v5 + 8 * v4);
    if (!v11) {
      break;
    }
LABEL_16:
    uint64_t v8 = (v11 - 1) & v11;
LABEL_5:
    v3 ^= sub_1FC7D0();
  }
  int64_t v12 = v4 + 1;
  if (v4 + 1 >= v9) {
    goto LABEL_17;
  }
  uint64_t v11 = *(void *)(v5 + 8 * v12);
  if (v11)
  {
    ++v4;
    goto LABEL_16;
  }
  while (1)
  {
    int64_t v4 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v4 >= v9) {
      goto LABEL_17;
    }
    uint64_t v11 = *(void *)(v5 + 8 * v4);
    ++v12;
    if (v11) {
      goto LABEL_16;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
}

uint64_t _s20BooksPersonalization4BookV8MetadataV16SeriesMembershipV2eeoiySbAG_AGtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t result = 0;
  BOOL v4 = *(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8);
  if (v4 && ((*(unsigned __int8 *)(a1 + 16) ^ *(unsigned __int8 *)(a2 + 16)) & 1) == 0)
  {
    if (*(unsigned char *)(a1 + 32))
    {
      if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(a1 + 24) == *(void *)(a2 + 24)) {
        char v5 = *(unsigned char *)(a2 + 32);
      }
      else {
        char v5 = 1;
      }
      if (v5) {
        return 0;
      }
    }
    return 1;
  }
  return result;
}

unint64_t sub_ACB88()
{
  unint64_t result = qword_26EA20;
  if (!qword_26EA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA20);
  }
  return result;
}

unint64_t sub_ACBDC()
{
  unint64_t result = qword_26EA28;
  if (!qword_26EA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA28);
  }
  return result;
}

unint64_t sub_ACC30()
{
  unint64_t result = qword_26EA38;
  if (!qword_26EA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA38);
  }
  return result;
}

unint64_t sub_ACC84()
{
  unint64_t result = qword_26EA48;
  if (!qword_26EA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA48);
  }
  return result;
}

uint64_t _s20BooksPersonalization4BookV8MetadataV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 32);
  uint64_t v24 = *(void *)(a1 + 40);
  uint64_t v25 = *(void *)(a1 + 24);
  uint64_t v22 = *(void *)(a1 + 48);
  uint64_t v27 = *(unsigned __int8 *)(a1 + 56);
  uint64_t v18 = *(void *)(a1 + 64);
  char v20 = *(unsigned char *)(a1 + 72);
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  int v8 = *(unsigned __int8 *)(a2 + 32);
  BOOL v9 = *(unsigned char *)a1 == 0;
  if (*(unsigned char *)a1) {
    uint64_t v10 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v10 = 0x6B6F6F6265;
  }
  uint64_t v23 = *(void *)(a2 + 40);
  uint64_t v21 = *(void *)(a2 + 48);
  uint64_t v26 = *(unsigned __int8 *)(a2 + 56);
  if (v9) {
    unint64_t v11 = 0xE500000000000000;
  }
  else {
    unint64_t v11 = 0xE90000000000006BLL;
  }
  uint64_t v17 = *(void *)(a2 + 64);
  if (*(unsigned char *)a2) {
    uint64_t v12 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v12 = 0x6B6F6F6265;
  }
  if (*(unsigned char *)a2) {
    unint64_t v13 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  char v19 = *(unsigned char *)(a2 + 72);
  if (v10 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
  }
  else
  {
    char v14 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    if ((v14 & 1) == 0) {
      return result;
    }
  }
  if (sub_193E8(v3, v6) & 1) != 0 && (sub_3C6B4(v2, v5))
  {
    if (v4)
    {
      if (!v8) {
        return 0;
      }
    }
    else
    {
      if (v25 == v7) {
        char v16 = v8;
      }
      else {
        char v16 = 1;
      }
      if (v16) {
        return 0;
      }
    }
    if (v27 != 2)
    {
      if (v26 == 2 || v24 != v23 || v22 != v21 || ((v27 ^ v26) & 1) != 0) {
        return 0;
      }
      if (v20)
      {
        if ((v19 & 1) == 0) {
          return 0;
        }
      }
      else if ((v19 & 1) != 0 || v18 != v17)
      {
        return 0;
      }
      return 1;
    }
    if (v26 == 2) {
      return 1;
    }
  }
  return 0;
}

unint64_t sub_ACED0()
{
  unint64_t result = qword_26EA60;
  if (!qword_26EA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA60);
  }
  return result;
}

unint64_t sub_ACF24()
{
  unint64_t result = qword_26EA68;
  if (!qword_26EA68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA68);
  }
  return result;
}

unint64_t sub_ACF78()
{
  unint64_t result = qword_26EA80;
  if (!qword_26EA80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA80);
  }
  return result;
}

unint64_t sub_ACFCC()
{
  unint64_t result = qword_26EA98;
  if (!qword_26EA98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EA98);
  }
  return result;
}

unint64_t sub_AD020()
{
  unint64_t result = qword_26EAA8;
  if (!qword_26EAA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAA8);
  }
  return result;
}

uint64_t sub_AD074(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26EA70);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_AD0E4()
{
  unint64_t result = qword_26EAB8;
  if (!qword_26EAB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAB8);
  }
  return result;
}

unint64_t sub_AD138()
{
  unint64_t result = qword_26EAC8;
  if (!qword_26EAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAC8);
  }
  return result;
}

unint64_t sub_AD190()
{
  unint64_t result = qword_26EAD0;
  if (!qword_26EAD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAD0);
  }
  return result;
}

unint64_t sub_AD1E8()
{
  unint64_t result = qword_26EAD8;
  if (!qword_26EAD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAD8);
  }
  return result;
}

unint64_t sub_AD240()
{
  unint64_t result = qword_26EAE0;
  if (!qword_26EAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAE0);
  }
  return result;
}

uint64_t _s8MetadataVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s8MetadataVwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s8MetadataVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 24) = v4;
  long long v5 = *(_OWORD *)(a2 + 40);
  long long v6 = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_OWORD *)(a1 + 56) = v6;
  *(_OWORD *)(a1 + 40) = v5;
  return a1;
}

__n128 _s8MetadataVwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s8MetadataVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  return a1;
}

uint64_t _s8MetadataVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 73)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8MetadataVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 73) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 73) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Book.Metadata()
{
  return &type metadata for Book.Metadata;
}

__n128 _s8MetadataV16SeriesMembershipVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s8MetadataV16SeriesMembershipVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s8MetadataV16SeriesMembershipVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Book.Metadata.SeriesMembership()
{
  return &type metadata for Book.Metadata.SeriesMembership;
}

ValueMetadata *type metadata accessor for Book.Metadata.GenreTreeNode()
{
  return &type metadata for Book.Metadata.GenreTreeNode;
}

uint64_t dispatch thunk of BookMetadataServiceType.fetchMetadataFor(bookIDs:audiobookIDs:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  BOOL v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of BookMetadataServiceType.fetchMetadataFor(storeIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  BOOL v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E870;
  return v9(a1, a2, a3);
}

unsigned char *_s8MetadataV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xAD8B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8MetadataV10CodingKeysOMa()
{
  return &_s8MetadataV10CodingKeysON;
}

unsigned char *_s8MetadataV13GenreTreeNodeV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xAD9B8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8MetadataV13GenreTreeNodeV10CodingKeysOMa()
{
  return &_s8MetadataV13GenreTreeNodeV10CodingKeysON;
}

unsigned char *_s8MetadataV16SeriesMembershipV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xADABCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s8MetadataV16SeriesMembershipV10CodingKeysOMa()
{
  return &_s8MetadataV16SeriesMembershipV10CodingKeysON;
}

unint64_t sub_ADAF8()
{
  unint64_t result = qword_26EAF8;
  if (!qword_26EAF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EAF8);
  }
  return result;
}

unint64_t sub_ADB50()
{
  unint64_t result = qword_26EB00;
  if (!qword_26EB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB00);
  }
  return result;
}

unint64_t sub_ADBA8()
{
  unint64_t result = qword_26EB08;
  if (!qword_26EB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB08);
  }
  return result;
}

unint64_t sub_ADC00()
{
  unint64_t result = qword_26EB10;
  if (!qword_26EB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB10);
  }
  return result;
}

unint64_t sub_ADC58()
{
  unint64_t result = qword_26EB18;
  if (!qword_26EB18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB18);
  }
  return result;
}

unint64_t sub_ADCB0()
{
  unint64_t result = qword_26EB20;
  if (!qword_26EB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB20);
  }
  return result;
}

unint64_t sub_ADD08()
{
  unint64_t result = qword_26EB28;
  if (!qword_26EB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB28);
  }
  return result;
}

unint64_t sub_ADD60()
{
  unint64_t result = qword_26EB30;
  if (!qword_26EB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB30);
  }
  return result;
}

unint64_t sub_ADDB8()
{
  unint64_t result = qword_26EB38;
  if (!qword_26EB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB38);
  }
  return result;
}

uint64_t sub_ADE0C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C616E6964726FLL && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449736569726573 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x654D736569726573 && a2 == 0xEE00617461646174 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x655364657070616DLL && a2 == 0xEE00444973656972)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_AE010(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726E6567 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1752457584 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_AE0F4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x707954616964656DLL && a2 == 0xE900000000000065;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x726E65476661656CLL && a2 == 0xEA00000000007365 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449726F68747561 && a2 == 0xE900000000000073 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x734164657070616DLL && a2 == 0xED00004449746573 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000217F70)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

uint64_t sub_AE350(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26EB40);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_AE3B8(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 16);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_AE3D0(void *a1)
{
}

_UNKNOWN **static Scorer.allCases.getter()
{
  return &off_2565D0;
}

BOOL Scorer.mayScoreSiriContent.getter()
{
  return *v0 < 2u;
}

BooksPersonalization::Scorer_optional __swiftcall Scorer.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_2566B8;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

unint64_t sub_AE458()
{
  unint64_t result = qword_26EB60;
  if (!qword_26EB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB60);
  }
  return result;
}

BooksPersonalization::Scorer_optional sub_AE4AC(Swift::String *a1)
{
  return Scorer.init(rawValue:)(*a1);
}

unint64_t sub_AE4BC()
{
  unint64_t result = qword_26EB68;
  if (!qword_26EB68)
  {
    sub_121C4(&qword_26EB70);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB68);
  }
  return result;
}

void sub_AE518(void *a1@<X8>)
{
  *a1 = &off_256720;
}

unint64_t sub_AE52C()
{
  unint64_t result = qword_26EB78;
  if (!qword_26EB78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EB78);
  }
  return result;
}

uint64_t sub_AE580()
{
  return sub_1FBA60();
}

uint64_t sub_AE5E0()
{
  return sub_1FBA40();
}

unsigned char *storeEnumTagSinglePayload for Scorer(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xAE6FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Scorer()
{
  return &type metadata for Scorer;
}

uint64_t sub_AE734(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 1256) = v3;
  *(void *)(v4 + 1248) = a2;
  *(void *)(v4 + 1240) = a1;
  *(unsigned char *)(v4 + 1288) = *a3;
  return _swift_task_switch(sub_AE764, 0, 0);
}

uint64_t sub_AE764()
{
  uint64_t v1 = *(void *)(v0 + 1256);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  if (*(void *)(v2 + 16) && (unint64_t v3 = sub_4CA98(*(unsigned char *)(v0 + 1288)), (v4 & 1) != 0))
  {
    uint64_t v5 = *(void *)(v0 + 1240);
    sub_51B70(*(void *)(v2 + 56) + 40 * v3, v0 + 1176);
    sub_37C30((long long *)(v0 + 1176), v0 + 1136);
    swift_endAccess();
    uint64_t v6 = *(void *)(v5 + 16);
    if (!v6) {
      goto LABEL_14;
    }
    uint64_t v7 = *(void *)(v0 + 1240) + 80;
    while (!*(void *)(*(void *)v7 + 16))
    {
      v7 += 80;
      if (!--v6) {
        goto LABEL_14;
      }
    }
    if (*(unsigned char *)(v0 + 1288) != 2)
    {
LABEL_14:
      unint64_t v13 = *(const void **)(v0 + 1248);
      uint64_t v14 = *(void *)(v0 + 1160);
      uint64_t v15 = *(void *)(v0 + 1168);
      sub_5D64((void *)(v0 + 1136), v14);
      memcpy((void *)(v0 + 16), v13, 0x460uLL);
      uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v15 + 8) + **(int **)(v15 + 8));
      char v16 = (void *)swift_task_alloc();
      *(void *)(v0 + 1264) = v16;
      *char v16 = v0;
      v16[1] = sub_AE9E4;
      uint64_t v17 = *(void *)(v0 + 1240);
      return v18(v17, v0 + 16, v14, v15);
    }
    sub_AEC34();
    swift_allocError();
    unsigned char *v12 = 3;
    swift_willThrow();
    sub_1264C(v0 + 1136);
  }
  else
  {
    char v8 = *(unsigned char *)(v0 + 1288);
    swift_endAccess();
    sub_AEC34();
    swift_allocError();
    unsigned char *v9 = v8;
    swift_willThrow();
  }
  uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
  return v10();
}

uint64_t sub_AE9E4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1272) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_AEB74;
  }
  else
  {
    *(void *)(v4 + 1280) = a1;
    uint64_t v5 = sub_AEB0C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_AEB0C()
{
  sub_1264C(v0 + 1136);
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 1280);
  return v1(v2);
}

uint64_t sub_AEB74()
{
  sub_1264C(v0 + 1136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t AggregateFlattener.__deallocating_deinit()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DelegatingBookScorer()
{
  return self;
}

unint64_t sub_AEC34()
{
  unint64_t result = qword_26EC28;
  if (!qword_26EC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC28);
  }
  return result;
}

unint64_t sub_AEC88()
{
  unint64_t result = qword_26EC30;
  if (!qword_26EC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC30);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DelegatingBookScorer.Errors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD)
  {
    unsigned int v2 = a2 + 3;
    if (a2 + 3 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 3;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0xAED88);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 3;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 3;
  unsigned int v9 = v7 - 3;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for DelegatingBookScorer.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 3;
  if (a3 + 3 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xFD) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v7 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0xAEE70);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

uint64_t sub_AEE98(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 3) {
    return v1 - 2;
  }
  else {
    return 0;
  }
}

unsigned char *sub_AEEAC(unsigned char *result, int a2)
{
  if (a2) {
    *unint64_t result = a2 + 2;
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatingBookScorer.Errors()
{
  return &type metadata for DelegatingBookScorer.Errors;
}

void __swiftcall ScoredGenre.copyWith(score:)(BooksPersonalization::ScoredGenre *__return_ptr retstr, Swift::Double score)
{
  BooksPersonalization::Book::MediaType v3 = *(unsigned char *)(v2 + 8);
  unsigned int v5 = *(void **)(v2 + 16);
  int v4 = *(void **)(v2 + 24);
  retstr->genre.storeID = *(void *)v2;
  retstr->genre.mediaType = v3;
  retstr->genre.sources._rawValue = v5;
  retstr->genre.rationale.value.seedBooks._rawValue = v4;
  retstr->score = score;
  swift_bridgeObjectRetain();

  swift_bridgeObjectRetain();
}

uint64_t sub_AEF1C()
{
  return 0x6B6F6F4264656573;
}

uint64_t sub_AEF38@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6B6F6F4264656573 && a2 == 0xE900000000000073)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_AEFDC(uint64_t a1)
{
  unint64_t v2 = sub_AFAD0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AF018(uint64_t a1)
{
  unint64_t v2 = sub_AFAD0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Genre.Rationale.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26EC38);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_AFAD0();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_26EC48);
  sub_AFCC8(&qword_26EC50, &qword_26EC48, (void (*)(void))sub_AFB24);
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t Genre.Rationale.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26EC60);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  BOOL v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_AFAD0();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_26EC48);
    sub_AFCC8(&qword_26EC68, &qword_26EC48, (void (*)(void))sub_AFB78);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_AF38C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Genre.Rationale.init(from:)(a1, a2);
}

uint64_t sub_AF3A4(void *a1)
{
  return Genre.Rationale.encode(to:)(a1);
}

uint64_t Genre.rationale.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 24);
  return swift_bridgeObjectRetain();
}

BooksPersonalization::Genre __swiftcall Genre.init(storeID:mediaType:sources:rationale:)(Swift::UInt64 storeID, BooksPersonalization::Book::MediaType mediaType, Swift::OpaquePointer sources, BooksPersonalization::Genre::Rationale_optional rationale)
{
  char v5 = *(unsigned char *)mediaType;
  uint64_t v6 = *(void *)rationale.value.seedBooks._rawValue;
  *(void *)uint64_t v4 = storeID;
  *(unsigned char *)(v4 + 8) = v5;
  *(Swift::OpaquePointer *)(v4 + 16) = sources;
  *(void *)(v4 + 24) = v6;
  result.rationale = rationale;
  result.sources = sources;
  result.storeID = storeID;
  result.mediaType = mediaType;
  return result;
}

uint64_t sub_AF3E0()
{
  uint64_t result = 0x444965726F7473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x707954616964656DLL;
      break;
    case 2:
      uint64_t result = 0x73656372756F73;
      break;
    case 3:
      uint64_t result = 0x6C616E6F69746172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_AF46C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B19D8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AF494(uint64_t a1)
{
  unint64_t v2 = sub_AFBCC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AF4D0(uint64_t a1)
{
  unint64_t v2 = sub_AFBCC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Genre.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26EC78);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v16 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v8;
  sub_5D64(a1, a1[3]);
  sub_AFBCC();
  sub_1FC870();
  LOBYTE(v15) = 0;
  sub_1FC560();
  if (!v2)
  {
    uint64_t v10 = v13;
    uint64_t v9 = v14;
    LOBYTE(v15) = v16;
    char v17 = 1;
    sub_ACF24();
    sub_1FC530();
    uint64_t v15 = v9;
    char v17 = 2;
    sub_12124(&qword_26EC88);
    sub_AFCC8(&qword_26EC90, &qword_26EC88, (void (*)(void))sub_AFC20);
    sub_1FC530();
    uint64_t v15 = v10;
    char v17 = 3;
    sub_AFC74();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t Genre.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26ECA8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_AFBCC();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  LOBYTE(v14) = 0;
  uint64_t v9 = sub_1FC420();
  char v16 = 1;
  sub_AD020();
  sub_1FC3F0();
  int v15 = v14;
  sub_12124(&qword_26EC88);
  char v16 = 2;
  sub_AFCC8(&qword_26ECB0, &qword_26EC88, (void (*)(void))sub_AFD34);
  sub_1FC3F0();
  uint64_t v10 = v14;
  char v16 = 3;
  sub_AFD88();
  swift_bridgeObjectRetain();
  sub_1FC360();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v11 = v14;
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v10;
  *(void *)(a2 + 24) = v11;
  swift_bridgeObjectRetain();
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_AFA2C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Genre.init(from:)(a1, a2);
}

uint64_t sub_AFA44(void *a1)
{
  return Genre.encode(to:)(a1);
}

uint64_t ScoredGenre.genre.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double ScoredGenre.score.getter()
{
  return *(double *)(v0 + 32);
}

void __swiftcall ScoredGenre.init(genre:score:)(BooksPersonalization::ScoredGenre *__return_ptr retstr, BooksPersonalization::Genre genre, Swift::Double score)
{
  BooksPersonalization::Book::MediaType v3 = *(unsigned char *)(genre.storeID + 8);
  uint64_t v4 = *(void **)(genre.storeID + 16);
  uint64_t v5 = *(void **)(genre.storeID + 24);
  retstr->genre.storeID = *(void *)genre.storeID;
  retstr->genre.mediaType = v3;
  retstr->genre.sources._rawValue = v4;
  retstr->genre.rationale.value.seedBooks._rawValue = v5;
  retstr->score = score;
}

unint64_t sub_AFAD0()
{
  unint64_t result = qword_26EC40;
  if (!qword_26EC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC40);
  }
  return result;
}

unint64_t sub_AFB24()
{
  unint64_t result = qword_26EC58;
  if (!qword_26EC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC58);
  }
  return result;
}

unint64_t sub_AFB78()
{
  unint64_t result = qword_26EC70;
  if (!qword_26EC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC70);
  }
  return result;
}

unint64_t sub_AFBCC()
{
  unint64_t result = qword_26EC80;
  if (!qword_26EC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC80);
  }
  return result;
}

unint64_t sub_AFC20()
{
  unint64_t result = qword_26EC98;
  if (!qword_26EC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EC98);
  }
  return result;
}

unint64_t sub_AFC74()
{
  unint64_t result = qword_26ECA0;
  if (!qword_26ECA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECA0);
  }
  return result;
}

uint64_t sub_AFCC8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_AFD34()
{
  unint64_t result = qword_26ECB8;
  if (!qword_26ECB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECB8);
  }
  return result;
}

unint64_t sub_AFD88()
{
  unint64_t result = qword_26ECC0;
  if (!qword_26ECC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECC0);
  }
  return result;
}

uint64_t sub_AFDDC()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x65726E6567;
  }
}

uint64_t sub_AFE08@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B1BAC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_AFE30(uint64_t a1)
{
  unint64_t v2 = sub_B004C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_AFE6C(uint64_t a1)
{
  unint64_t v2 = sub_B004C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScoredGenre.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26ECC8);
  uint64_t v12 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  char v7 = *((unsigned char *)v1 + 8);
  uint64_t v8 = v1[2];
  v11[0] = v1[3];
  sub_5D64(a1, a1[3]);
  sub_B004C();
  sub_1FC870();
  uint64_t v14 = v6;
  char v15 = v7;
  uint64_t v16 = v8;
  uint64_t v17 = v11[0];
  char v13 = 0;
  sub_B00A0();
  uint64_t v9 = v11[1];
  sub_1FC530();
  if (!v9)
  {
    LOBYTE(v14) = 1;
    sub_1FC500();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v5, v3);
}

unint64_t sub_B004C()
{
  unint64_t result = qword_26ECD0;
  if (!qword_26ECD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECD0);
  }
  return result;
}

unint64_t sub_B00A0()
{
  unint64_t result = qword_26ECD8;
  if (!qword_26ECD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECD8);
  }
  return result;
}

uint64_t ScoredGenre.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26ECE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_B004C();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v17 = 0;
  sub_B032C();
  sub_1FC3F0();
  uint64_t v16 = v18;
  int v15 = v19;
  uint64_t v9 = v20;
  uint64_t v10 = v21;
  LOBYTE(v18) = 1;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1FC3C0();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v16;
  *(unsigned char *)(a2 + 8) = v15;
  *(void *)(a2 + 16) = v9;
  *(void *)(a2 + 24) = v10;
  *(void *)(a2 + 32) = v12;
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_B032C()
{
  unint64_t result = qword_26ECE8;
  if (!qword_26ECE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECE8);
  }
  return result;
}

uint64_t sub_B0380@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScoredGenre.init(from:)(a1, a2);
}

uint64_t sub_B0398(void *a1)
{
  return ScoredGenre.encode(to:)(a1);
}

unint64_t GenreRecommendationServiceError.description.getter()
{
  uint64_t v1 = *v0;
  sub_1FC050(32);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  uint64_t v3 = (void *)0x8000000000217F40;
  switch(v1)
  {
    case 1:
      v2._uint64_t countAndFlagsBits = 0xD000000000000021;
      uint64_t v4 = "not signed into a paid storefront";
      goto LABEL_5;
    case 2:
      uint64_t v3 = (void *)0x8000000000217EF0;
      v2._uint64_t countAndFlagsBits = 0xD000000000000016;
      break;
    case 3:
      v2._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      uint64_t v4 = "user has recommendation switch at Account Settings > Personalized Recommendations disabled";
LABEL_5:
      uint64_t v3 = (void *)((unint64_t)(v4 - 32) | 0x8000000000000000);
      break;
    default:
      break;
  }
  v2._object = v3;
  sub_1FB8F0(v2);
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

BooksPersonalization::GenreRecommendationSource_optional __swiftcall GenreRecommendationSource.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_256748;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

_UNKNOWN **static GenreRecommendationSource.allCases.getter()
{
  return &off_2567E0;
}

unint64_t GenreRecommendationSource.rawValue.getter()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x747369486B6F6F62;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0xD000000000000021;
      break;
    case 4:
      unint64_t result = 1768055156;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B05D0(unsigned __int8 *a1, char *a2)
{
  return sub_1D9700(*a1, *a2);
}

Swift::Int sub_B05DC()
{
  return sub_7E0E4();
}

uint64_t sub_B05E4()
{
  return sub_160208();
}

Swift::Int sub_B05EC()
{
  return sub_114C24();
}

BooksPersonalization::GenreRecommendationSource_optional sub_B05F4(Swift::String *a1)
{
  return GenreRecommendationSource.init(rawValue:)(*a1);
}

unint64_t sub_B0600@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = GenreRecommendationSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_B0628(void *a1@<X8>)
{
  *a1 = &off_256808;
}

BooksPersonalization::GenreRecommendationRequest __swiftcall GenreRecommendationRequest.init(allowNegativeScores:overrideSource:)(Swift::Bool allowNegativeScores, BooksPersonalization::GenreRecommendationSource_optional overrideSource)
{
  char v3 = *(unsigned char *)overrideSource.value;
  *Swift::String v2 = allowNegativeScores;
  v2[1] = v3;
  result.allowNegativeScores = allowNegativeScores;
  return result;
}

uint64_t sub_B0648(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_B06F4;
  return GenreRecommendationServiceType.fetchRecommendedGenres(request:)(a1, a2, a3);
}

uint64_t sub_B06F4(uint64_t a1)
{
  uint64_t v7 = *v2;
  uint64_t v4 = swift_task_dealloc();
  unint64_t v5 = *(uint64_t (**)(uint64_t))(v7 + 8);
  if (!v1) {
    uint64_t v4 = a1;
  }
  return v5(v4);
}

uint64_t GenreRecommendationServiceType.fetchRecommendedGenres(request:)(unsigned char *a1, uint64_t a2, uint64_t a3)
{
  char v6 = a1[1];
  *(unsigned char *)(v3 + 32) = *a1;
  *(unsigned char *)(v3 + 33) = v6;
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_B0908;
  return v9(v3 + 32, a2, a3);
}

uint64_t sub_B0908(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 24) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_B0A44, 0, 0);
  }
  else
  {
    unint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_B0A44()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_B0A60()
{
  unint64_t result = qword_26ECF8;
  if (!qword_26ECF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ECF8);
  }
  return result;
}

unint64_t sub_B0AB8()
{
  unint64_t result = qword_26ED00;
  if (!qword_26ED00)
  {
    sub_121C4(&qword_26ED08);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED00);
  }
  return result;
}

unint64_t sub_B0B18()
{
  unint64_t result = qword_26ED10;
  if (!qword_26ED10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED10);
  }
  return result;
}

uint64_t initializeWithCopy for Genre(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Genre(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Genre(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Genre(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Genre(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Genre()
{
  return &type metadata for Genre;
}

ValueMetadata *type metadata accessor for Genre.Rationale()
{
  return &type metadata for Genre.Rationale;
}

uint64_t destroy for GenreCollection()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScoredGenre(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScoredGenre(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for ScoredGenre(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoredGenre(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoredGenre(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredGenre()
{
  return &type metadata for ScoredGenre;
}

ValueMetadata *type metadata accessor for GenreRecommendationServiceError()
{
  return &type metadata for GenreRecommendationServiceError;
}

unsigned char *storeEnumTagSinglePayload for GenreRecommendationSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB0FFCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreRecommendationSource()
{
  return &type metadata for GenreRecommendationSource;
}

uint64_t getEnumTagSinglePayload for GenreRecommendationRequest(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for GenreRecommendationRequest(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB11A4);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreRecommendationRequest()
{
  return &type metadata for GenreRecommendationRequest;
}

uint64_t dispatch thunk of GenreRecommendationServiceType.fetchRecommendedGenres(request:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of GenreRecommendationSubserviceType.fetchRecommendedGenres(with:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_9E870;
  return v9(a1, a2, a3);
}

unsigned char *storeEnumTagSinglePayload for ScoredGenre.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB14B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredGenre.CodingKeys()
{
  return &type metadata for ScoredGenre.CodingKeys;
}

unsigned char *_s20BooksPersonalization31GenreRecommendationServiceErrorOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB15B4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Genre.CodingKeys()
{
  return &type metadata for Genre.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Genre.Rationale.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xB1688);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Genre.Rationale.CodingKeys()
{
  return &type metadata for Genre.Rationale.CodingKeys;
}

unint64_t sub_B16C4()
{
  unint64_t result = qword_26ED30;
  if (!qword_26ED30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED30);
  }
  return result;
}

unint64_t sub_B171C()
{
  unint64_t result = qword_26ED38;
  if (!qword_26ED38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED38);
  }
  return result;
}

unint64_t sub_B1774()
{
  unint64_t result = qword_26ED40;
  if (!qword_26ED40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED40);
  }
  return result;
}

unint64_t sub_B17CC()
{
  unint64_t result = qword_26ED48;
  if (!qword_26ED48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED48);
  }
  return result;
}

unint64_t sub_B1824()
{
  unint64_t result = qword_26ED50;
  if (!qword_26ED50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED50);
  }
  return result;
}

unint64_t sub_B187C()
{
  unint64_t result = qword_26ED58;
  if (!qword_26ED58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED58);
  }
  return result;
}

unint64_t sub_B18D4()
{
  unint64_t result = qword_26ED60;
  if (!qword_26ED60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED60);
  }
  return result;
}

unint64_t sub_B192C()
{
  unint64_t result = qword_26ED68;
  if (!qword_26ED68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED68);
  }
  return result;
}

unint64_t sub_B1984()
{
  unint64_t result = qword_26ED70;
  if (!qword_26ED70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26ED70);
  }
  return result;
}

uint64_t sub_B19D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C616E6F69746172 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_B1BAC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726E6567 && a2 == 0xE500000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_B1C90(uint64_t a1)
{
  uint64_t v16 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v17 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  uint64_t v27 = _swiftEmptyArrayStorage;
  if (v4) {
    goto LABEL_7;
  }
LABEL_8:
  while (2)
  {
    int64_t v9 = v6 + 1;
    if (!__OFADD__(v6, 1))
    {
      if (v9 < v17)
      {
        unint64_t v10 = *(void *)(v16 + 8 * v9);
        ++v6;
        if (v10) {
          goto LABEL_23;
        }
        int64_t v6 = v9 + 1;
        if (v9 + 1 >= v17) {
          goto LABEL_32;
        }
        unint64_t v10 = *(void *)(v16 + 8 * v6);
        if (v10) {
          goto LABEL_23;
        }
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v17) {
          goto LABEL_32;
        }
        unint64_t v10 = *(void *)(v16 + 8 * v6);
        if (v10) {
          goto LABEL_23;
        }
        int64_t v6 = v9 + 3;
        if (v9 + 3 >= v17) {
          goto LABEL_32;
        }
        unint64_t v10 = *(void *)(v16 + 8 * v6);
        if (v10)
        {
LABEL_23:
          unint64_t v4 = (v10 - 1) & v10;
          for (unint64_t i = __clz(__rbit64(v10)) + (v6 << 6); ; unint64_t i = v7 | (v6 << 6))
          {
            sub_B3660(*(void *)(a1 + 48) + 40 * i, (uint64_t)v24);
            sub_560E0(*(void *)(a1 + 56) + 32 * i, (uint64_t)v25 + 8);
            v22[0] = v25[0];
            v22[1] = v25[1];
            uint64_t v23 = v26;
            v21[0] = v24[0];
            v21[1] = v24[1];
            sub_B3660((uint64_t)v21, (uint64_t)v20);
            if (!swift_dynamicCast()) {
              goto LABEL_6;
            }
            sub_560E0((uint64_t)v22 + 8, (uint64_t)v20);
            if ((swift_dynamicCast() & 1) == 0) {
              break;
            }
            sub_B36BC((uint64_t)v21);
            uint64_t result = swift_isUniquelyReferenced_nonNull_native();
            if ((result & 1) == 0)
            {
              uint64_t result = (uint64_t)sub_41A9C(0, v27[2] + 1, 1, v27);
              uint64_t v27 = (void *)result;
            }
            unint64_t v13 = v27[2];
            unint64_t v12 = v27[3];
            if (v13 >= v12 >> 1)
            {
              uint64_t result = (uint64_t)sub_41A9C((void *)(v12 > 1), v13 + 1, 1, v27);
              uint64_t v27 = (void *)result;
            }
            uint64_t v14 = v27;
            v27[2] = v13 + 1;
            int v15 = &v14[4 * v13];
            v15[4] = v18;
            v15[5] = v19;
            v15[6] = v18;
            v15[7] = v19;
            if (!v4) {
              goto LABEL_8;
            }
LABEL_7:
            unint64_t v7 = __clz(__rbit64(v4));
            v4 &= v4 - 1;
          }
          swift_bridgeObjectRelease();
LABEL_6:
          uint64_t result = sub_B36BC((uint64_t)v21);
          if (!v4) {
            continue;
          }
          goto LABEL_7;
        }
        int64_t v11 = v9 + 4;
        if (v11 < v17)
        {
          unint64_t v10 = *(void *)(v16 + 8 * v11);
          if (v10)
          {
            int64_t v6 = v11;
            goto LABEL_23;
          }
          while (1)
          {
            int64_t v6 = v11 + 1;
            if (__OFADD__(v11, 1)) {
              goto LABEL_34;
            }
            if (v6 >= v17) {
              break;
            }
            unint64_t v10 = *(void *)(v16 + 8 * v6);
            ++v11;
            if (v10) {
              goto LABEL_23;
            }
          }
        }
      }
LABEL_32:
      swift_release();
      return (uint64_t)v27;
    }
    break;
  }
  __break(1u);
LABEL_34:
  __break(1u);
  return result;
}

unint64_t URLSessionTransport.Error.description.getter()
{
  id v1 = *v0;
  sub_1FC050(41);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_12124(&qword_26ED78);
  v3._uint64_t countAndFlagsBits = sub_1FB880();
  sub_1FB8F0(v3);

  swift_bridgeObjectRelease();
  return 0xD000000000000027;
}

unint64_t URLSessionTransport.Error.errorDescription.getter()
{
  id v1 = *v0;
  sub_1FC050(41);
  swift_bridgeObjectRelease();
  swift_getObjectType();
  sub_12124(&qword_26ED78);
  v3._uint64_t countAndFlagsBits = sub_1FB880();
  sub_1FB8F0(v3);

  swift_bridgeObjectRelease();
  return 0xD000000000000027;
}

id URLSessionTransport.session.getter()
{
  return *v0;
}

void URLSessionTransport.session.setter(void *a1)
{
  *id v1 = a1;
}

uint64_t URLSessionTransport.makeCall(with:operationId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  *(void *)(v5 + 72) = a3;
  *(void *)(v5 + 80) = a4;
  *(void *)(v5 + 56) = a1;
  *(void *)(v5 + 64) = a2;
  uint64_t v6 = sub_1FAF80();
  *(void *)(v5 + 88) = v6;
  *(void *)(v5 + 96) = *(void *)(v6 - 8);
  *(void *)(v5 + 104) = swift_task_alloc();
  uint64_t v7 = sub_1FABD0();
  *(void *)(v5 + 112) = v7;
  *(void *)(v5 + 120) = *(void *)(v7 - 8);
  *(void *)(v5 + 128) = swift_task_alloc();
  *(_OWORD *)(v5 + 136) = *v4;
  return _swift_task_switch(sub_B2280, 0, 0);
}

uint64_t sub_B2280()
{
  uint64_t v2 = *(void **)(v0 + 136);
  uint64_t v1 = *(void *)(v0 + 144);
  uint64_t v3 = swift_allocObject();
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v6 = *(void *)(v0 + 72);
    uint64_t v5 = *(void *)(v0 + 80);
    uint64_t v7 = v4 - 1;
    sub_51B70(v1 + 40 * (v4 - 1) + 32, v0 + 16);
    int v8 = (void *)swift_allocObject();
    sub_37C30((long long *)(v0 + 16), (uint64_t)(v8 + 2));
    v8[7] = v6;
    v8[8] = v5;
    v8[9] = &unk_26ED90;
    v8[10] = v3;
    if (v4 != 1)
    {
      uint64_t v9 = *(void *)(v0 + 80);
      unint64_t v10 = *(void *)(v1 + 16);
      swift_bridgeObjectRetain();
      if (v4 - 2 >= v10)
      {
LABEL_7:
        __break(1u);
      }
      else
      {
        uint64_t v11 = v1 + 40 * v4 - 48;
        while (1)
        {
          unint64_t v12 = v8;
          uint64_t v13 = *(void *)(v0 + 72);
          sub_51B70(v11, v0 + 16);
          int v8 = (void *)swift_allocObject();
          sub_37C30((long long *)(v0 + 16), (uint64_t)(v8 + 2));
          v8[7] = v13;
          v8[8] = v9;
          v8[9] = &unk_26EDA0;
          v8[10] = v12;
          if (!--v7) {
            break;
          }
          uint64_t v9 = *(void *)(v0 + 80);
          uint64_t v14 = *(void *)(v1 + 16);
          swift_bridgeObjectRetain();
          v11 -= 40;
          if (v7 > v14) {
            goto LABEL_7;
          }
        }
      }
    }
    swift_bridgeObjectRetain();
    uint64_t v2 = *(void **)(v0 + 136);
    int v15 = (int *)&unk_26EDA0;
    uint64_t v3 = (uint64_t)v8;
  }
  else
  {
    int v15 = (int *)&unk_26ED90;
  }
  *(void *)(v0 + 152) = v3;
  uint64_t v16 = *(void *)(v0 + 64);
  (*(void (**)(void, uint64_t, void))(*(void *)(v0 + 96) + 16))(*(void *)(v0 + 104), v16, *(void *)(v0 + 88));
  id v17 = v2;
  swift_bridgeObjectRetain();
  sub_1FAB80();
  uint64_t v18 = type metadata accessor for ClientCurrency.Request();
  swift_bridgeObjectRetain();
  sub_1FAB70();
  uint64_t v19 = *(void *)(v16 + *(int *)(v18 + 24));
  uint64_t v20 = *(void *)(v19 + 16);
  if (v20)
  {
    uint64_t v30 = v18;
    uint64_t v31 = v15;
    swift_bridgeObjectRetain();
    uint64_t v21 = (void **)(v19 + 56);
    do
    {
      uint64_t v22 = (uint64_t)*(v21 - 3);
      uint64_t v23 = *(v21 - 2);
      uint64_t v24 = (uint64_t)*(v21 - 1);
      uint64_t v25 = *v21;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v34._uint64_t countAndFlagsBits = v24;
      v34._object = v25;
      v35._uint64_t countAndFlagsBits = v22;
      v35._object = v23;
      sub_1FAB90(v34, v35);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v21 += 4;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
    uint64_t v18 = v30;
    int v15 = v31;
  }
  uint64_t v26 = *(void *)(v0 + 64) + *(int *)(v18 + 28);
  if (*(void *)(v26 + 8) >> 60 != 15)
  {
    sub_52090(*(void *)v26, *(void *)(v26 + 8));
    sub_1FABB0();
  }
  char v32 = (uint64_t (*)(uint64_t))((char *)v15 + *v15);
  uint64_t v27 = (void *)swift_task_alloc();
  *(void *)(v0 + 160) = v27;
  *uint64_t v27 = v0;
  v27[1] = sub_B2610;
  uint64_t v28 = *(void *)(v0 + 128);
  return v32(v28);
}

uint64_t sub_B2610(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[21] = a1;
  v5[22] = a2;
  v5[23] = a3;
  v5[24] = v3;
  swift_task_dealloc();
  if (v3) {
    uint64_t v6 = sub_B297C;
  }
  else {
    uint64_t v6 = sub_B2728;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_B2728()
{
  self;
  uint64_t v1 = swift_dynamicCastObjCClass();
  if (v1)
  {
    uint64_t v2 = (void *)v1;
    id v3 = *(id *)(v0 + 184);
    id v4 = [v2 allHeaderFields];
    uint64_t v5 = sub_1FB6E0();

    uint64_t v6 = sub_B1C90(v5);
    swift_bridgeObjectRelease();
    unint64_t v7 = (unint64_t)[v2 statusCode];

    swift_release();
    if ((v7 & 0x8000000000000000) != 0) {
      return sub_1FC210();
    }
    unint64_t v9 = *(void *)(v0 + 168);
    unint64_t v8 = *(void *)(v0 + 176);
    unint64_t v10 = *(unint64_t **)(v0 + 56);
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    *unint64_t v10 = v7;
    v10[1] = v6;
    void v10[2] = v9;
    v10[3] = v8;
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    unint64_t v12 = *(void *)(v0 + 176);
    uint64_t v13 = *(void **)(v0 + 184);
    uint64_t v14 = *(void *)(v0 + 168);
    sub_B3138();
    swift_allocError();
    *int v15 = v13;
    id v16 = v13;
    swift_willThrow();
    sub_520E8(v14, v12);

    swift_release();
    (*(void (**)(void, void))(*(void *)(v0 + 120) + 8))(*(void *)(v0 + 128), *(void *)(v0 + 112));
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v11();
}

uint64_t sub_B297C()
{
  swift_release();
  (*(void (**)(void, void))(v0[15] + 8))(v0[16], v0[14]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_B2A14(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B2AB4;
  return NSURLSession.data(for:delegate:)(a1, 0);
}

uint64_t sub_B2AB4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *v4;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8);
  if (!v3)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
    uint64_t v10 = a3;
  }
  return v11(v8, v9, v10);
}

uint64_t sub_B2BCC()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_B2C0C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B3724;
  return sub_B2A14(a1);
}

uint64_t sub_B2CB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[6] = a5;
  v6[7] = a6;
  v6[4] = a3;
  v6[5] = a4;
  v6[2] = a1;
  v6[3] = a2;
  return _swift_task_switch(sub_B2CDC, 0, 0);
}

uint64_t sub_B2CDC()
{
  uint64_t v1 = (void *)v0[3];
  uint64_t v2 = v1[3];
  uint64_t v3 = v1[4];
  sub_5D64(v1, v2);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                              + **(int **)(v3 + 8));
  id v4 = (void *)swift_task_alloc();
  v0[8] = v4;
  *id v4 = v0;
  v4[1] = sub_B2DEC;
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v7 = v0[4];
  uint64_t v8 = v0[5];
  uint64_t v9 = v0[2];
  return v11(v9, v7, v8, v5, v6, v2, v3);
}

uint64_t sub_B2DEC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v13 = *v4;
  uint64_t v8 = swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v13 + 8);
  if (!v3)
  {
    uint64_t v8 = a1;
    uint64_t v9 = a2;
    uint64_t v10 = a3;
  }
  return v11(v8, v9, v10);
}

uint64_t sub_B2F04()
{
  sub_1264C(v0 + 16);
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 88, 7);
}

uint64_t sub_B2F4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 56);
  uint64_t v5 = *(void *)(v1 + 80);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 64);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_B3024;
  *(void *)(v6 + 56) = v5;
  *(_OWORD *)(v6 + 40) = v7;
  *(void *)(v6 + 24) = v1 + 16;
  *(void *)(v6 + 32) = v4;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_B2CDC, 0, 0);
}

uint64_t sub_B3024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = *v3;
  swift_task_dealloc();
  long long v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 8);
  return v7(a1, a2, a3);
}

unint64_t sub_B3138()
{
  unint64_t result = qword_26EDA8;
  if (!qword_26EDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EDA8);
  }
  return result;
}

uint64_t sub_B3190(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_5958;
  return URLSessionTransport.makeCall(with:operationId:)(a1, a2, a3, a4);
}

void *initializeBufferWithCopyOfBuffer for URLSessionTransport(void *a1, uint64_t a2)
{
  uint64_t v3 = *(void **)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  id v5 = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for URLSessionTransport(id *a1)
{
  return swift_bridgeObjectRelease();
}

uint64_t assignWithCopy for URLSessionTransport(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  id v5 = *(void **)a1;
  *(void *)a1 = *(void *)a2;
  id v6 = v4;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

id *assignWithTake for URLSessionTransport(id *a1, _OWORD *a2)
{
  *(_OWORD *)a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for URLSessionTransport(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLSessionTransport(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLSessionTransport()
{
  return &type metadata for URLSessionTransport;
}

void **initializeBufferWithCopyOfBuffer for URLSessionTransport.Error(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  *a1 = *a2;
  id v4 = v3;
  return a1;
}

void destroy for URLSessionTransport.Error(id *a1)
{
}

void **assignWithCopy for URLSessionTransport.Error(void **a1, void **a2)
{
  uint64_t v3 = *a2;
  id v4 = *a1;
  *a1 = *a2;
  id v5 = v3;

  return a1;
}

void **assignWithTake for URLSessionTransport.Error(void **a1, void **a2)
{
  uint64_t v3 = *a1;
  *a1 = *a2;

  return a1;
}

uint64_t getEnumTagSinglePayload for URLSessionTransport.Error(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for URLSessionTransport.Error(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for URLSessionTransport.Error()
{
  return &type metadata for URLSessionTransport.Error;
}

uint64_t dispatch thunk of URLSessionTransportMiddleware.interceptCall(with:operationId:next:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  id v17 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a7 + 8)
                                                                                              + **(int **)(a7 + 8));
  int v15 = (void *)swift_task_alloc();
  *(void *)(v7 + 16) = v15;
  *int v15 = v7;
  v15[1] = sub_B3724;
  return v17(a1, a2, a3, a4, a5, a6, a7);
}

uint64_t sub_B3660(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_B36BC(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26EDC0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_B3728()
{
  unint64_t v1 = 0xD000000000000013;
  if (*v0 != 1) {
    unint64_t v1 = 0x74754F65726F6373;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x74754F65726E6567;
  }
}

uint64_t sub_B3790@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B40A8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_B37B8(uint64_t a1)
{
  unint64_t v2 = sub_B39E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B37F4(uint64_t a1)
{
  unint64_t v2 = sub_B39E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabiConfiguration.GenreRecommendationConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26EDC8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  id v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = v1[2];
  _DWORD v11[3] = v1[3];
  _DWORD v11[4] = v7;
  uint64_t v8 = v1[4];
  v11[1] = v1[5];
  void v11[2] = v8;
  sub_5D64(a1, a1[3]);
  sub_B39E4();
  sub_1FC870();
  char v14 = 0;
  uint64_t v9 = v11[5];
  sub_1FC4E0();
  if (!v9)
  {
    char v13 = 1;
    sub_1FC4E0();
    char v12 = 2;
    sub_1FC4E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_B39E4()
{
  unint64_t result = qword_26EDD0;
  if (!qword_26EDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EDD0);
  }
  return result;
}

uint64_t TabiConfiguration.GenreRecommendationConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26EDD8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_B39E4();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v27 = 0;
  uint64_t v9 = sub_1FC3A0();
  uint64_t v11 = v10;
  uint64_t v24 = v9;
  char v26 = 1;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1FC3A0();
  uint64_t v14 = v13;
  uint64_t v22 = v12;
  char v25 = 2;
  swift_bridgeObjectRetain();
  uint64_t v23 = v14;
  uint64_t v15 = sub_1FC3A0();
  uint64_t v17 = v16;
  uint64_t v18 = v15;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v19 = v23;
  *a2 = v24;
  a2[1] = v11;
  a2[2] = v22;
  a2[3] = v19;
  a2[4] = v18;
  a2[5] = v17;
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_B3CD8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TabiConfiguration.GenreRecommendationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_B3CF0(void *a1)
{
  return TabiConfiguration.GenreRecommendationConfiguration.encode(to:)(a1);
}

uint64_t _s11descr251E29O32GenreRecommendationConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s11descr251E29O32GenreRecommendationConfigurationVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11descr251E29O32GenreRecommendationConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s11descr251E29O32GenreRecommendationConfigurationVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[5];
  a1[4] = a2[4];
  a1[5] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TabiConfiguration.GenreRecommendationConfiguration()
{
  return &type metadata for TabiConfiguration.GenreRecommendationConfiguration;
}

unsigned char *_s11descr251E29O32GenreRecommendationConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB3F68);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11descr251E29O32GenreRecommendationConfigurationV10CodingKeysOMa()
{
  return &_s11descr251E29O32GenreRecommendationConfigurationV10CodingKeysON;
}

unint64_t sub_B3FA4()
{
  unint64_t result = qword_26EDE0;
  if (!qword_26EDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EDE0);
  }
  return result;
}

unint64_t sub_B3FFC()
{
  unint64_t result = qword_26EDE8;
  if (!qword_26EDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EDE8);
  }
  return result;
}

unint64_t sub_B4054()
{
  unint64_t result = qword_26EDF0;
  if (!qword_26EDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EDF0);
  }
  return result;
}

uint64_t sub_B40A8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74754F65726E6567 && a2 == 0xEF656D614E747570;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000000218000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x74754F65726F6373 && a2 == 0xEF656D614E747570)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_B4238(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46588(0, v1, 0);
    int v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_46588(v6 > 1, v7 + 1, 1);
      }
      v3 += 9;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v5;
      v8[5] = v4;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_B4310(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_466B8(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (int *)(a1 + 48);
    do
    {
      int v5 = *v4;
      uint64_t v8 = result;
      unint64_t v7 = result[2];
      unint64_t v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        sub_466B8(v6 > 1, v7 + 1, 1);
        unint64_t result = v8;
      }
      result[2] = v7 + 1;
      *((_DWORD *)result + v7 + 8) = v5;
      v4 += 18;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_B43D4(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_466B8(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (int *)(a1 + 56);
    do
    {
      int v5 = *v4;
      uint64_t v8 = result;
      unint64_t v7 = result[2];
      unint64_t v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        sub_466B8(v6 > 1, v7 + 1, 1);
        unint64_t result = v8;
      }
      result[2] = v7 + 1;
      *((_DWORD *)result + v7 + 8) = v5;
      v4 += 18;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_B4498(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_466B8(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (int *)(a1 + 60);
    do
    {
      int v5 = *v4;
      uint64_t v8 = result;
      unint64_t v7 = result[2];
      unint64_t v6 = result[3];
      if (v7 >= v6 >> 1)
      {
        sub_466B8(v6 > 1, v7 + 1, 1);
        unint64_t result = v8;
      }
      result[2] = v7 + 1;
      *((_DWORD *)result + v7 + 8) = v5;
      v4 += 18;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_B455C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_46698(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (int *)(a1 + 52);
    do
    {
      int v6 = *v4;
      v4 += 18;
      int v5 = v6;
      uint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_46698(v7 > 1, v8 + 1, 1);
        unint64_t result = v9;
      }
      result[2] = v8 + 1;
      *((_DWORD *)result + v8 + 8) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

void *sub_B461C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_466D8(0, v1, 0);
    int v3 = (_OWORD *)(a1 + 88);
    do
    {
      uint64_t v5 = *((void *)v3 - 3);
      uint64_t v4 = *((void *)v3 - 2);
      int v6 = *((_DWORD *)v3 - 2);
      long long v11 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 >= v8 >> 1) {
        sub_466D8(v8 > 1, v7 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v9 = &_swiftEmptyArrayStorage[5 * v7];
      v9[4] = v5;
      v9[5] = v4;
      *((_DWORD *)v9 + 12) = v6;
      *(_OWORD *)(v9 + 7) = v11;
      int v3 = (_OWORD *)((char *)v3 + 72);
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_B4734(void **a1)
{
  int64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int64_t v2 = sub_984BC(v2);
  }
  uint64_t v3 = v2[2];
  v5[0] = v2 + 4;
  v5[1] = v3;
  Swift::Int result = sub_B4B7C(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_B47A4(uint64_t result, uint64_t a2)
{
  if (result < 0) {
    goto LABEL_31;
  }
  uint64_t v2 = a2;
  uint64_t v3 = result;
  if (!result) {
    return v2;
  }
  uint64_t v4 = *(void *)(a2 + 16);
  if (!v4)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
LABEL_26:
    swift_bridgeObjectRelease();
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v5 = 0;
  unint64_t v6 = 0;
  unint64_t v7 = (int *)(a2 + 48);
  uint64_t v34 = v4 - 1;
  unint64_t v8 = _swiftEmptyArrayStorage;
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v35 = result;
  do
  {
    Swift::Int result = *((void *)v7 - 1);
    int v10 = *v7;
    uint64_t v11 = *((void *)v7 + 1);
    uint64_t v12 = *((void *)v7 + 3);
    int v38 = v7[1];
    int v39 = v7[8];
    uint64_t v13 = v8[2];
    uint64_t v40 = *((void *)v7 + 2);
    unint64_t v41 = v6;
    long long v42 = *(_OWORD *)(v7 + 10);
    uint64_t v37 = *((void *)v7 - 2);
    if (v13 < v3)
    {
      uint64_t v14 = *((void *)v7 - 1);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        Swift::Int result = sub_46968(0, v13 + 1, 1);
      }
      unint64_t v16 = v8[2];
      unint64_t v15 = v8[3];
      if (v16 >= v15 >> 1) {
        Swift::Int result = sub_46968(v15 > 1, v16 + 1, 1);
      }
      v8[2] = v16 + 1;
      uint64_t v17 = &v8[9 * v16];
      v17[4] = v37;
      void v17[5] = v14;
      *((_DWORD *)v17 + 12) = v10;
      *((_DWORD *)v17 + 13) = v38;
      v17[7] = v11;
      unint64_t v6 = v41;
      void v17[8] = v40;
      v17[9] = v12;
      *((_DWORD *)v17 + 20) = v39;
      *(_OWORD *)(v17 + 11) = v42;
      uint64_t v3 = v35;
LABEL_6:
      if (v34 == v5) {
        goto LABEL_26;
      }
      goto LABEL_7;
    }
    if (v6 >= v13) {
      goto LABEL_29;
    }
    uint64_t v18 = &v8[9 * v6];
    uint64_t v19 = v18[4];
    uint64_t v20 = v18[5];
    int v21 = *((_DWORD *)v18 + 12);
    int v33 = *((_DWORD *)v18 + 13);
    uint64_t v22 = v18[7];
    uint64_t v23 = v18[9];
    uint64_t v32 = v18[8];
    int v31 = *((_DWORD *)v18 + 20);
    long long v36 = *(_OWORD *)(v18 + 11);
    uint64_t v30 = *((void *)v7 - 1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = v9;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_46968(0, v9[2] + 1, 1);
      uint64_t v24 = v9;
    }
    unint64_t v26 = v24[2];
    unint64_t v25 = v24[3];
    if (v26 >= v25 >> 1)
    {
      sub_46968(v25 > 1, v26 + 1, 1);
      uint64_t v24 = v9;
    }
    _OWORD v24[2] = v26 + 1;
    char v27 = &v24[9 * v26];
    v27[4] = v19;
    v27[5] = v20;
    *((_DWORD *)v27 + 12) = v21;
    *((_DWORD *)v27 + 13) = v33;
    v27[7] = v22;
    v27[8] = v32;
    v27[9] = v23;
    *((_DWORD *)v27 + 20) = v31;
    *(_OWORD *)(v27 + 11) = v36;
    Swift::Int result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      Swift::Int result = sub_1247B4((uint64_t)v8);
      unint64_t v8 = (void *)result;
    }
    if (v41 >= v8[2]) {
      goto LABEL_30;
    }
    uint64_t v28 = &v8[9 * v41];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v35;
    swift_bridgeObjectRelease();
    Swift::Int result = swift_bridgeObjectRelease();
    void v28[4] = v37;
    v28[5] = v30;
    *((_DWORD *)v28 + 12) = v10;
    *((_DWORD *)v28 + 13) = v38;
    v28[7] = v11;
    v28[8] = v40;
    v28[9] = v12;
    *((_DWORD *)v28 + 20) = v39;
    *(_OWORD *)(v28 + 11) = v42;
    if ((uint64_t)(v41 + 1) < v35)
    {
      unint64_t v6 = v41 + 1;
      uint64_t v2 = a2;
      uint64_t v9 = v24;
      goto LABEL_6;
    }
    uint64_t v2 = a2;
    uint64_t v9 = v24;
    if (v34 == v5) {
      goto LABEL_26;
    }
    unint64_t v6 = 0;
LABEL_7:
    ++v5;
    v7 += 18;
  }
  while (v5 < *(void *)(v2 + 16));
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

Swift::Int sub_B4B7C(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v94 = *v2;
      uint64_t v95 = *v2 + 128;
      uint64_t v96 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        float v98 = *(float *)(v94 + 72 * i + 28);
        uint64_t v99 = v96;
        uint64_t v100 = v95;
        do
        {
          if (*(float *)(v100 - 100) >= v98) {
            break;
          }
          if (!v94) {
            goto LABEL_143;
          }
          char v101 = (_OWORD *)(v100 - 56);
          uint64_t v102 = *(void *)(v100 - 56);
          uint64_t v103 = *(void *)(v100 - 48);
          int v104 = *(_DWORD *)(v100 - 40);
          Swift::Int result = *(unsigned int *)(v100 - 36);
          int v105 = *(_DWORD *)(v100 - 32);
          uint64_t v106 = *(void *)(v100 - 24);
          uint64_t v107 = *(void *)(v100 - 16);
          int v108 = *(_DWORD *)(v100 - 8);
          long long v109 = *(_OWORD *)v100;
          long long v110 = *(_OWORD *)(v100 - 80);
          v101[2] = *(_OWORD *)(v100 - 96);
          v101[3] = v110;
          *(void *)(v100 + 8) = *(void *)(v100 - 64);
          long long v111 = *(_OWORD *)(v100 - 112);
          *char v101 = *(_OWORD *)(v100 - 128);
          v101[1] = v111;
          *(_OWORD *)(v100 - 72) = v109;
          v100 -= 72;
          *(void *)(v100 - 56) = v102;
          *(void *)(v100 - 48) = v103;
          *(_DWORD *)(v100 - 40) = v104;
          *(_DWORD *)(v100 - 36) = result;
          *(_DWORD *)(v100 - 32) = v105;
          *(float *)(v100 - 28) = v98;
          *(void *)(v100 - 24) = v106;
          *(void *)(v100 - 16) = v107;
          *(_DWORD *)(v100 - 8) = v108;
        }
        while (!__CFADD__(v99++, 1));
        v95 += 72;
        --v96;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  Swift::Int v124 = result;
  uint64_t v133 = v1;
  if (v3 < 2)
  {
    unint64_t v8 = _swiftEmptyArrayStorage;
    unint64_t v131 = (float *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v113 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      uint64_t v123 = v8;
      if (v11 >= 2)
      {
        uint64_t v114 = *v2;
        do
        {
          unint64_t v115 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v114) {
            goto LABEL_147;
          }
          char v116 = v113;
          uint64_t v117 = *(void *)&v113[16 * v115 + 32];
          uint64_t v118 = *(void *)&v113[16 * v11 + 24];
          sub_B536C((float *)(v114 + 72 * v117), (float *)(v114 + 72 * *(void *)&v113[16 * v11 + 16]), v114 + 72 * v118, v131);
          if (v133) {
            break;
          }
          if (v118 < v117) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v116 = sub_70B24((uint64_t)v116);
          }
          if (v115 >= *((void *)v116 + 2)) {
            goto LABEL_136;
          }
          char v119 = &v116[16 * v115 + 32];
          *(void *)char v119 = v117;
          *((void *)v119 + 1) = v118;
          unint64_t v120 = *((void *)v116 + 2);
          if (v11 > v120) {
            goto LABEL_137;
          }
          memmove(&v116[16 * v11 + 16], &v116[16 * v11 + 32], 16 * (v120 - v11));
          uint64_t v113 = v116;
          *((void *)v116 + 2) = v120 - 1;
          unint64_t v11 = v120 - 1;
        }
        while (v120 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      v123[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v123 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    uint64_t v123 = (void *)v7;
    unint64_t v131 = (float *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v122 = v2;
  uint64_t v10 = *v2;
  uint64_t v132 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v125 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    if (v9 < v3)
    {
      float v13 = *(float *)(v10 + 72 * v9 + 28);
      float v14 = *(float *)(v10 + 72 * v12 + 28);
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        unint64_t v15 = (float *)(v10 + 172 + 72 * v12);
        float v16 = v13;
        while (1)
        {
          float v17 = v16;
          float v16 = *v15;
          if (v14 < v13 == v17 >= *v15) {
            break;
          }
          ++v9;
          v15 += 18;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          uint64_t v18 = 72 * v9;
          uint64_t v19 = 72 * v12;
          Swift::Int v20 = v9;
          Swift::Int v121 = v12;
          do
          {
            if (v12 != --v20)
            {
              if (!v10) {
                goto LABEL_146;
              }
              uint64_t v21 = v10 + v18;
              uint64_t v22 = *(void *)(v10 + v19);
              uint64_t v23 = *(void *)(v10 + v19 + 8);
              int v24 = *(_DWORD *)(v10 + v19 + 16);
              uint64_t v129 = *(void *)(v10 + v19 + 40);
              uint64_t v130 = *(void *)(v10 + v19 + 32);
              int v127 = *(_DWORD *)(v10 + v19 + 20);
              int v128 = *(_DWORD *)(v10 + v19 + 48);
              uint64_t v25 = *(void *)(v10 + v19 + 24);
              long long v126 = *(_OWORD *)(v10 + v19 + 56);
              memmove((void *)(v10 + v19), (const void *)(v10 + v18 - 72), 0x48uLL);
              *(void *)(v21 - 72) = v22;
              *(void *)(v21 - 64) = v23;
              *(_DWORD *)(v21 - 56) = v24;
              *(_DWORD *)(v21 - 52) = v127;
              *(void *)(v21 - 48) = v25;
              *(void *)(v21 - 40) = v130;
              *(void *)(v21 - 32) = v129;
              *(_DWORD *)(v21 - 24) = v128;
              *(_OWORD *)(v21 - 16) = v126;
            }
            ++v12;
            v18 -= 72;
            v19 += 72;
          }
          while (v12 < v20);
          Swift::Int v3 = v125;
          Swift::Int v12 = v121;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v124) {
      goto LABEL_39;
    }
    Swift::Int v26 = v12 + v124;
    if (__OFADD__(v12, v124)) {
      goto LABEL_141;
    }
    if (v26 >= v3) {
      Swift::Int v26 = v3;
    }
    if (v26 < v12) {
      break;
    }
    if (v9 != v26)
    {
      uint64_t v77 = v10 + 56 + 72 * v9;
      char v27 = v132;
      do
      {
        float v78 = *(float *)(v10 + 72 * v9 + 28);
        Swift::Int v79 = v12;
        uint64_t v80 = v77;
        do
        {
          if (*(float *)(v80 - 100) >= v78) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          char v81 = (_OWORD *)(v80 - 56);
          uint64_t v82 = (_OWORD *)(v80 - 128);
          uint64_t v83 = *(void *)(v80 - 56);
          uint64_t v84 = *(void *)(v80 - 48);
          int v85 = *(_DWORD *)(v80 - 40);
          int v86 = *(_DWORD *)(v80 - 36);
          int v87 = *(_DWORD *)(v80 - 32);
          uint64_t v88 = *(void *)(v80 - 24);
          uint64_t v89 = *(void *)(v80 - 16);
          int v90 = *(_DWORD *)(v80 - 8);
          long long v91 = *(_OWORD *)v80;
          long long v92 = *(_OWORD *)(v80 - 80);
          v81[2] = *(_OWORD *)(v80 - 96);
          v81[3] = v92;
          *(void *)(v80 + 8) = *(void *)(v80 - 64);
          *(_OWORD *)(v80 - 72) = v91;
          v80 -= 72;
          long long v93 = v82[1];
          *char v81 = *v82;
          v81[1] = v93;
          *(void *)(v80 - 56) = v83;
          *(void *)(v80 - 48) = v84;
          *(_DWORD *)(v80 - 40) = v85;
          *(_DWORD *)(v80 - 36) = v86;
          *(_DWORD *)(v80 - 32) = v87;
          *(float *)(v80 - 28) = v78;
          *(void *)(v80 - 24) = v88;
          *(void *)(v80 - 16) = v89;
          ++v79;
          *(_DWORD *)(v80 - 8) = v90;
        }
        while (v9 != v79);
        ++v9;
        v77 += 72;
      }
      while (v9 != v26);
      Swift::Int v9 = v26;
      if (v26 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    char v27 = v132;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v27 = sub_7004C(0, *((void *)v27 + 2) + 1, 1, v27);
    }
    unint64_t v29 = *((void *)v27 + 2);
    unint64_t v28 = *((void *)v27 + 3);
    unint64_t v11 = v29 + 1;
    if (v29 >= v28 >> 1) {
      char v27 = sub_7004C((char *)(v28 > 1), v29 + 1, 1, v27);
    }
    *((void *)v27 + 2) = v11;
    uint64_t v30 = v27 + 32;
    int v31 = &v27[16 * v29 + 32];
    *(void *)int v31 = v12;
    *((void *)v31 + 1) = v9;
    uint64_t v132 = v27;
    if (v29)
    {
      while (1)
      {
        unint64_t v32 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v37 = &v30[16 * v11];
          uint64_t v38 = *((void *)v37 - 8);
          uint64_t v39 = *((void *)v37 - 7);
          BOOL v43 = __OFSUB__(v39, v38);
          uint64_t v40 = v39 - v38;
          if (v43) {
            goto LABEL_122;
          }
          uint64_t v42 = *((void *)v37 - 6);
          uint64_t v41 = *((void *)v37 - 5);
          BOOL v43 = __OFSUB__(v41, v42);
          uint64_t v35 = v41 - v42;
          char v36 = v43;
          if (v43) {
            goto LABEL_123;
          }
          unint64_t v44 = v11 - 2;
          unint64_t v45 = &v30[16 * v11 - 32];
          uint64_t v47 = *(void *)v45;
          uint64_t v46 = *((void *)v45 + 1);
          BOOL v43 = __OFSUB__(v46, v47);
          uint64_t v48 = v46 - v47;
          if (v43) {
            goto LABEL_125;
          }
          BOOL v43 = __OFADD__(v35, v48);
          uint64_t v49 = v35 + v48;
          if (v43) {
            goto LABEL_128;
          }
          if (v49 >= v40)
          {
            char v67 = &v30[16 * v32];
            uint64_t v69 = *(void *)v67;
            uint64_t v68 = *((void *)v67 + 1);
            BOOL v43 = __OFSUB__(v68, v69);
            uint64_t v70 = v68 - v69;
            if (v43) {
              goto LABEL_132;
            }
            BOOL v60 = v35 < v70;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v61 = *((void *)v27 + 4);
            uint64_t v62 = *((void *)v27 + 5);
            BOOL v43 = __OFSUB__(v62, v61);
            uint64_t v54 = v62 - v61;
            char v55 = v43;
            goto LABEL_70;
          }
          uint64_t v34 = *((void *)v27 + 4);
          uint64_t v33 = *((void *)v27 + 5);
          BOOL v43 = __OFSUB__(v33, v34);
          uint64_t v35 = v33 - v34;
          char v36 = v43;
        }
        if (v36) {
          goto LABEL_124;
        }
        unint64_t v44 = v11 - 2;
        char v50 = &v30[16 * v11 - 32];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v53 = __OFSUB__(v51, v52);
        uint64_t v54 = v51 - v52;
        char v55 = v53;
        if (v53) {
          goto LABEL_127;
        }
        uint64_t v56 = &v30[16 * v32];
        uint64_t v58 = *(void *)v56;
        uint64_t v57 = *((void *)v56 + 1);
        BOOL v43 = __OFSUB__(v57, v58);
        uint64_t v59 = v57 - v58;
        if (v43) {
          goto LABEL_130;
        }
        if (__OFADD__(v54, v59)) {
          goto LABEL_131;
        }
        if (v54 + v59 >= v35)
        {
          BOOL v60 = v35 < v59;
LABEL_76:
          if (v60) {
            unint64_t v32 = v44;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v55) {
          goto LABEL_126;
        }
        uint64_t v63 = &v30[16 * v32];
        uint64_t v65 = *(void *)v63;
        uint64_t v64 = *((void *)v63 + 1);
        BOOL v43 = __OFSUB__(v64, v65);
        uint64_t v66 = v64 - v65;
        if (v43) {
          goto LABEL_129;
        }
        if (v66 < v54) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v71 = v32 - 1;
        if (v32 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        uint64_t v72 = &v30[16 * v71];
        uint64_t v73 = *(void *)v72;
        unint64_t v74 = &v30[16 * v32];
        uint64_t v75 = *((void *)v74 + 1);
        sub_B536C((float *)(v10 + 72 * *(void *)v72), (float *)(v10 + 72 * *(void *)v74), v10 + 72 * v75, v131);
        if (v133) {
          goto LABEL_95;
        }
        if (v75 < v73) {
          goto LABEL_119;
        }
        if (v32 > *((void *)v132 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v72 = v73;
        *(void *)&v30[16 * v71 + 8] = v75;
        unint64_t v76 = *((void *)v132 + 2);
        if (v32 >= v76) {
          goto LABEL_121;
        }
        char v27 = v132;
        unint64_t v11 = v76 - 1;
        memmove(&v30[16 * v32], v74 + 16, 16 * (v76 - 1 - v32));
        *((void *)v132 + 2) = v76 - 1;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v125;
    if (v9 >= v125)
    {
      unint64_t v8 = v123;
      uint64_t v113 = v132;
      uint64_t v2 = v122;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_B536C(float *__dst, float *__src, unint64_t a3, float *a4)
{
  uint64_t v4 = a4;
  uint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 72;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 72;
  uint64_t v23 = __dst;
  uint64_t v22 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -71)
    {
      if (a4 != __src || &__src[18 * v11] <= a4) {
        memmove(a4, __src, 72 * v11);
      }
      float v16 = &v4[18 * v11];
      uint64_t v21 = (char *)v16;
      uint64_t v23 = v6;
      if (v7 < v6 && v10 >= 72)
      {
        float v17 = (float *)(a3 - 72);
        do
        {
          uint64_t v18 = v17 + 18;
          if (*(v6 - 11) >= *(v16 - 11))
          {
            uint64_t v21 = (char *)(v16 - 18);
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              memmove(v17, v16 - 18, 0x48uLL);
            }
            uint64_t v19 = v6;
            v16 -= 18;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v19 = v6 - 18;
            if (v18 != v6 || v17 >= v6) {
              memmove(v17, v6 - 18, 0x48uLL);
            }
            uint64_t v23 = v6 - 18;
            if (v19 <= v7) {
              break;
            }
          }
          v17 -= 18;
          uint64_t v6 = v19;
        }
        while (v16 > v4);
      }
LABEL_40:
      sub_70748((void **)&v23, (const void **)&v22, &v21);
      return 1;
    }
  }
  else if (v8 >= -71)
  {
    if (a4 != __dst || &__dst[18 * v9] <= a4) {
      memmove(a4, __dst, 72 * v9);
    }
    Swift::Int v12 = &v4[18 * v9];
    uint64_t v21 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 72)
    {
      float v13 = v4;
      while (1)
      {
        if (v13[7] >= v6[7])
        {
          uint64_t v4 = v13 + 18;
          unint64_t v15 = v13;
          float v14 = v6;
          if (v7 == v13)
          {
            v13 += 18;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 18;
          }
        }
        else
        {
          float v14 = v6 + 18;
          unint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        memmove(v7, v15, 0x48uLL);
LABEL_18:
        v7 += 18;
        if (v13 < v12)
        {
          uint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v22 = v4;
        uint64_t v23 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_B562C(uint64_t result, double a2, double a3)
{
  if (a2 == a3)
  {
    __break(1u);
    goto LABEL_7;
  }
  double v5 = a3 - a2;
  if ((~COERCE__INT64(a3 - a2) & 0x7FF0000000000000) == 0)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  uint64_t v6 = result;
  uint64_t result = swift_stdlib_random();
  if (v5 * ((double)0 * 1.11022302e-16) + a2 == a3) {
    return sub_B562C(v6, a2, a3);
  }
  return result;
}

BOOL sub_B56D8(uint64_t a1, double *a2)
{
  uint64_t v4 = type metadata accessor for Event();
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_98D4C(a1, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E2F0) + 48)];
      double v8 = a2[1];
      break;
    case 2u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E310) + 48)];
      double v8 = a2[2];
      break;
    case 3u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E310) + 48)];
      double v8 = a2[3];
      break;
    case 4u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E2F0) + 48)];
      double v8 = a2[5];
      break;
    case 5u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[6];
      break;
    case 6u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[7];
      break;
    case 7u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[8];
      break;
    case 8u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E308) + 48)];
      double v8 = a2[9];
      break;
    case 9u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[10];
      break;
    case 0xAu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E2F8) + 48)];
      double v8 = a2[11];
      break;
    case 0xBu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[12];
      break;
    case 0xCu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[13];
      break;
    case 0xDu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[14];
      break;
    case 0xEu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[15];
      break;
    case 0xFu:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[16];
      break;
    case 0x10u:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = a2[17];
      break;
    default:
      swift_bridgeObjectRelease();
      uint64_t v7 = &v6[*(int *)(sub_12124(&qword_26E300) + 48)];
      double v8 = *a2;
      break;
  }
  uint64_t v9 = sub_1FB0E0();
  uint64_t v10 = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v9 - 8) + 8))(v7, v9);
  if (v8 <= 0.0) {
    return 0;
  }
  sub_B562C(v10, 0.0, 1.0);
  return v11 < v8;
}

uint64_t sub_B5A98(uint64_t a1, int64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1FB5F0();
  uint64_t v281 = *(void *)(v8 - 8);
  uint64_t v282 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  v280 = (char *)v266 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v279 = (char *)v266 - v11;
  uint64_t v292 = sub_1FB5C0();
  uint64_t v299 = *(void *)(v292 - 8);
  uint64_t v12 = __chkstk_darwin(v292);
  uint64_t v291 = (char *)v266 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v283 = (char *)v266 - v14;
  unint64_t v15 = (void *)sub_1FB0E0();
  uint64_t v293 = *(v15 - 1);
  uint64_t v16 = __chkstk_darwin(v15);
  uint64_t v287 = (char *)v266 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v296 = (char *)v266 - v19;
  __chkstk_darwin(v18);
  uint64_t v278 = (uint64_t)v266 - v20;
  uint64_t v277 = type metadata accessor for Event();
  uint64_t v21 = *(void *)(v277 - 8);
  uint64_t v22 = __chkstk_darwin(v277);
  v276 = (char *)v266 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v275 = (char *)v266 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v274 = (uint64_t)v266 - v27;
  __chkstk_darwin(v26);
  uint64_t v298 = (uint64_t)v266 - v28;
  uint64_t v297 = *(void *)a4;
  uint64_t v29 = *(void *)(a4 + 16);
  uint64_t v289 = *(void *)(a4 + 8);
  uint64_t v290 = v29;
  long long v30 = *(_OWORD *)(a4 + 104);
  long long v31 = *(_OWORD *)(a4 + 136);
  long long v313 = *(_OWORD *)(a4 + 120);
  long long v314 = v31;
  long long v315 = *(_OWORD *)(a4 + 152);
  long long v32 = *(_OWORD *)(a4 + 40);
  long long v33 = *(_OWORD *)(a4 + 72);
  long long v309 = *(_OWORD *)(a4 + 56);
  long long v310 = v33;
  long long v311 = *(_OWORD *)(a4 + 88);
  long long v312 = v30;
  v308[0] = *(_OWORD *)(a4 + 24);
  v308[1] = v32;
  v307 = _swiftEmptyArrayStorage;
  if (qword_26C378 != -1) {
    goto LABEL_224;
  }
  while (1)
  {
    id v34 = (id)qword_272B58;
    sub_1FBDC0();
    sub_1FB400();

    uint64_t v35 = *(void *)(a1 + 16);
    v294 = v15;
    int64_t v284 = a2;
    uint64_t v285 = a3;
    uint64_t v286 = v35;
    if (!v35) {
      break;
    }
    unint64_t v301 = a1 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
    uint64_t v300 = *(void *)(v21 + 72);
    v266[1] = a1;
    v267 = (void (**)(uint64_t, void *))(v293 + 8);
    swift_bridgeObjectRetain();
    uint64_t v36 = 0;
    a2 = 0;
    long long v304 = xmmword_1FD2A0;
    uint64_t v21 = v297;
    uint64_t v37 = v298;
    a1 = v286;
    while (1)
    {
      sub_98D4C(v301 + v300 * a2, v37);
      if (v307[2] >= v21)
      {
        sub_98DB0(v37);
LABEL_104:
        swift_bridgeObjectRelease();
        a2 = v284;
        goto LABEL_105;
      }
      uint64_t v38 = Event.assetID.getter();
      unint64_t v40 = sub_F0C70(v38, v39);
      if ((v41 & 1) != 0 || !*(void *)(a3 + 16) || (v295 = v40, uint64_t v42 = sub_56168(v40), (v43 & 1) == 0))
      {
        sub_98DB0(v37);
        goto LABEL_5;
      }
      BOOL v44 = __OFADD__(v36++, 1);
      if (v44) {
        goto LABEL_223;
      }
      unint64_t v45 = (unsigned __int8 *)(*(void *)(a3 + 56) + 80 * v42);
      int v46 = *v45;
      uint64_t v47 = *((void *)v45 + 1);
      uint64_t v48 = (char *)*((void *)v45 + 2);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!sub_B56D8(v37, (double *)v308))
      {
        sub_98DB0(v37);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v21 = v297;
        goto LABEL_5;
      }
      v303 = v48;
      uint64_t v288 = v47;
      int64_t v272 = a2;
      uint64_t v273 = v36;
      unint64_t v49 = Event.eventType.getter();
      uint64_t v270 = v50;
      unint64_t v271 = v49;
      uint64_t v51 = v274;
      sub_98D4C(v37, v274);
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      if (EnumCaseMultiPayload == 4)
      {
        swift_bridgeObjectRelease();
        uint64_t v56 = sub_12124(&qword_26E2F0);
        double v55 = *(double *)(v51 + *(int *)(v56 + 80));
        a2 = (int64_t)v267;
        (*v267)(v51 + *(int *)(v56 + 48), v15);
        uint64_t v53 = (uint64_t)v275;
        a1 = (uint64_t)v276;
      }
      else
      {
        uint64_t v53 = (uint64_t)v275;
        a1 = (uint64_t)v276;
        a2 = (int64_t)v267;
        if (EnumCaseMultiPayload == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v54 = sub_12124(&qword_26E2F0);
          double v55 = *(double *)(v51 + *(int *)(v54 + 80));
          (*(void (**)(uint64_t, void *))a2)(v51 + *(int *)(v54 + 48), v15);
        }
        else
        {
          sub_98DB0(v51);
          double v55 = 0.0;
        }
      }
      sub_98D4C(v298, v53);
      int v57 = swift_getEnumCaseMultiPayload();
      if (v57 == 1 || v57 == 4)
      {
        swift_bridgeObjectRelease();
        uint64_t v58 = sub_12124(&qword_26E2F0);
        uint64_t v59 = v53 + *(int *)(v58 + 48);
        char v60 = *(unsigned char *)(v53 + *(int *)(v58 + 64));
        (*(void (**)(uint64_t, void *))a2)(v59, v15);
        if (v60)
        {
          int v269 = 1;
          goto LABEL_24;
        }
      }
      else
      {
        sub_98DB0(v53);
      }
      int v269 = 0;
LABEL_24:
      sub_98D4C(v298, a1);
      if (swift_getEnumCaseMultiPayload() == 10)
      {
        swift_bridgeObjectRelease();
        uint64_t v61 = sub_12124(&qword_26E2F8);
        double v62 = *(double *)(a1 + *(int *)(v61 + 64));
        (*(void (**)(uint64_t, void *))a2)(a1 + *(int *)(v61 + 48), v15);
      }
      else
      {
        sub_98DB0(a1);
        double v62 = 0.0;
      }
      uint64_t v63 = v278;
      Event.timestamp.getter(v278);
      sub_1FB090();
      double v65 = v64;
      (*(void (**)(uint64_t, void *))a2)(v63, v15);
      if (v46)
      {
        swift_bridgeObjectRelease();
        int v66 = 1;
      }
      else
      {
        char v67 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        int v66 = v67 & 1;
      }
      int v268 = v66;
      uint64_t v68 = v288;
      uint64_t v69 = *(void *)(v288 + 16);
      if (v69) {
        break;
      }
      unint64_t v15 = _swiftEmptyArrayStorage;
LABEL_64:
      uint64_t v86 = v15[2];
      uint64_t v87 = sub_1FBCD0();
      uint64_t v88 = v87;
      if (v86)
      {
        a3 = 0;
        a1 = (uint64_t)(v15 + 4);
        uint64_t v89 = v87 + 56;
        while (1)
        {
          uint64_t v90 = *(void *)(a1 + 8 * a3++);
          uint64_t v91 = sub_1FC7D0();
          uint64_t v92 = -1 << *(unsigned char *)(v88 + 32);
          unint64_t v93 = v91 & ~v92;
          if (((*(void *)(v89 + ((v93 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v93) & 1) == 0) {
            goto LABEL_73;
          }
          uint64_t v94 = *(void *)(v88 + 48);
          if (*(void *)(v94 + 8 * v93) == v90)
          {
LABEL_66:
            if (a3 == v86) {
              break;
            }
          }
          else
          {
            uint64_t v95 = ~v92;
            while (1)
            {
              unint64_t v93 = (v93 + 1) & v95;
              if (((*(void *)(v89 + ((v93 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v93) & 1) == 0) {
                break;
              }
              if (*(void *)(v94 + 8 * v93) == v90) {
                goto LABEL_66;
              }
            }
LABEL_73:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v316[0] = v88;
            sub_C020(v90, v93, isUniquelyReferenced_nonNull_native);
            uint64_t v88 = v316[0];
            swift_bridgeObjectRelease();
            if (a3 == v86) {
              break;
            }
            uint64_t v89 = v88 + 56;
          }
        }
      }
      swift_bridgeObjectRelease();
      int64_t v97 = *(void *)(v88 + 16);
      if (v97)
      {
        v316[0] = _swiftEmptyArrayStorage;
        sub_46588(0, v97, 0);
        float v98 = (void *)v316[0];
        uint64_t v99 = sub_14D538(v88);
        uint64_t v21 = v100;
        int v102 = v101 & 1;
        uint64_t v302 = (void *)(v88 + 56);
        do
        {
          if (v99 < 0 || v99 >= 1 << *(unsigned char *)(v88 + 32)) {
            goto LABEL_204;
          }
          if (((*(void *)((char *)v302 + (((unint64_t)v99 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v99) & 1) == 0) {
            goto LABEL_205;
          }
          if (*(_DWORD *)(v88 + 36) != v21) {
            goto LABEL_206;
          }
          LODWORD(v305) = v102;
          uint64_t v306 = *(void *)(*(void *)(v88 + 48) + 8 * v99);
          uint64_t v103 = sub_1FC580();
          a2 = v104;
          v316[0] = v98;
          a1 = v88;
          unint64_t v106 = v98[2];
          unint64_t v105 = v98[3];
          unint64_t v15 = (void *)(v106 + 1);
          if (v106 >= v105 >> 1)
          {
            sub_46588(v105 > 1, v106 + 1, 1);
            float v98 = (void *)v316[0];
          }
          v98[2] = v15;
          uint64_t v107 = &v98[2 * v106];
          v107[4] = v103;
          v107[5] = a2;
          uint64_t v108 = sub_14D5DC(v99, v21, v305 & 1, a1);
          uint64_t v99 = v108;
          uint64_t v21 = v109;
          int v102 = v110 & 1;
          --v97;
          a3 = (uint64_t)v303;
          uint64_t v88 = a1;
        }
        while (v97);
        sub_55F94(v108, v109, v102);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        float v98 = _swiftEmptyArrayStorage;
        a3 = (uint64_t)v303;
      }
      uint64_t v302 = v98;
      int64_t v111 = *(void *)(a3 + 16);
      if (v111)
      {
        v316[0] = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_46588(0, v111, 0);
        unint64_t v15 = (void *)v316[0];
        uint64_t v21 = sub_14D538(a3);
        uint64_t v113 = v112;
        int v115 = v114 & 1;
        v303 = (char *)(a3 + 56);
        do
        {
          if (v21 < 0 || v21 >= 1 << *(unsigned char *)(a3 + 32)) {
            goto LABEL_209;
          }
          if (((*(void *)&v303[((unint64_t)v21 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v21) & 1) == 0) {
            goto LABEL_210;
          }
          if (*(_DWORD *)(a3 + 36) != v113) {
            goto LABEL_211;
          }
          LODWORD(v305) = v115;
          uint64_t v306 = *(void *)(*(void *)(a3 + 48) + 8 * v21);
          a1 = sub_1FC580();
          a2 = v116;
          v316[0] = v15;
          unint64_t v118 = v15[2];
          unint64_t v117 = v15[3];
          char v119 = v15;
          if (v118 >= v117 >> 1)
          {
            sub_46588(v117 > 1, v118 + 1, 1);
            char v119 = (void *)v316[0];
          }
          int8x16_t v119[2] = v118 + 1;
          unint64_t v120 = &v119[2 * v118];
          v120[4] = a1;
          v120[5] = a2;
          uint64_t v121 = sub_14D5DC(v21, v113, v305 & 1, a3);
          uint64_t v21 = v121;
          uint64_t v113 = v122;
          int v115 = v123 & 1;
          --v111;
          unint64_t v15 = v119;
        }
        while (v111);
        sub_55F94(v121, v122, v115);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v15 = _swiftEmptyArrayStorage;
      }
      v316[0] = v295;
      uint64_t v124 = sub_1FC580();
      uint64_t v126 = v125;
      int v127 = sub_1154D8(0, 0xE000000000000000, v289, (uint64_t)v302);
      swift_bridgeObjectRelease();
      int v128 = sub_1154D8(0, 0xE000000000000000, v290, (uint64_t)v15);
      swift_bridgeObjectRelease();
      uint64_t v129 = v307;
      char v130 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v15 = v294;
      if ((v130 & 1) == 0) {
        uint64_t v129 = sub_425CC(0, v129[2] + 1, 1, v129);
      }
      unint64_t v132 = v129[2];
      unint64_t v131 = v129[3];
      if (v132 >= v131 >> 1) {
        uint64_t v129 = sub_425CC((void *)(v131 > 1), v132 + 1, 1, v129);
      }
      float v133 = v55;
      v129[2] = v132 + 1;
      float v134 = v62;
      float v135 = v65;
      double v136 = (float *)&v129[9 * v132];
      uint64_t v137 = v270;
      *((void *)v136 + 4) = v271;
      *((void *)v136 + 5) = v137;
      v136[12] = v133;
      *((_DWORD *)v136 + 13) = v269;
      v136[14] = v134;
      v136[15] = v135;
      *((void *)v136 + 8) = v124;
      *((void *)v136 + 9) = v126;
      *((_DWORD *)v136 + 20) = v268;
      *((void *)v136 + 11) = v127;
      *((void *)v136 + 12) = v128;
      v307 = v129;
      uint64_t v37 = v298;
      sub_98DB0(v298);
      a3 = v285;
      a1 = v286;
      uint64_t v21 = v297;
      a2 = v272;
      uint64_t v36 = v273;
LABEL_5:
      if (++a2 == a1) {
        goto LABEL_104;
      }
    }
    swift_bridgeObjectRetain_n();
    a3 = v68 + 40;
    unint64_t v15 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v71 = *(void *)(a3 - 8);
      uint64_t v70 = *(void *)a3;
      sub_12124(&qword_26D3C0);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = v304;
      a1 = inited + 16;
      *(void *)(inited + 32) = v71;
      uint64_t v73 = *(void *)(v70 + 16);
      swift_bridgeObjectRetain();
      if (v73)
      {
        uint64_t result = (uint64_t)sub_41858((int *)((char *)&dword_0 + 1), v73 + 1, 1, (void *)inited);
        if (!*(void *)(v70 + 16)) {
          goto LABEL_231;
        }
        uint64_t inited = result;
        uint64_t v83 = *(void *)(result + 16);
        if ((*(void *)(result + 24) >> 1) - v83 < v73) {
          goto LABEL_226;
        }
        uint64_t v84 = (void *)(result + 8 * v83 + 32);
        if (v70 + 32 < (unint64_t)v84 + 8 * v73 && (unint64_t)v84 < v70 + 32 + 8 * v73) {
          goto LABEL_230;
        }
        a1 = inited + 16;
        memcpy(v84, (const void *)(v70 + 32), 8 * v73);
        if (__OFADD__(*(void *)(inited + 16), v73)) {
          goto LABEL_227;
        }
        *(void *)a1 = *(void *)(inited + 16) + v73;
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(inited + 16);
      int64_t v74 = v15[2];
      a2 = v74 + v21;
      if (__OFADD__(v74, v21)) {
        break;
      }
      uint64_t v75 = swift_isUniquelyReferenced_nonNull_native();
      if ((v75 & 1) != 0 && a2 <= v15[3] >> 1)
      {
        if (*(void *)a1) {
          goto LABEL_44;
        }
      }
      else
      {
        if (v74 <= a2) {
          int64_t v76 = v74 + v21;
        }
        else {
          int64_t v76 = v74;
        }
        unint64_t v15 = sub_41858((void *)v75, v76, 1, v15);
        if (*(void *)a1)
        {
LABEL_44:
          uint64_t v77 = v15[2];
          if ((v15[3] >> 1) - v77 < v21) {
            goto LABEL_218;
          }
          float v78 = &v15[v77 + 4];
          if (inited + 32 < (unint64_t)&v78[v21] && (unint64_t)v78 < inited + 32 + 8 * v21)
          {
LABEL_230:
            uint64_t result = sub_1FC2B0();
            __break(1u);
LABEL_231:
            __break(1u);
LABEL_232:
            __break(1u);
            return result;
          }
          memcpy(v78, (const void *)(inited + 32), 8 * v21);
          if (v21)
          {
            uint64_t v80 = v15[2];
            BOOL v44 = __OFADD__(v80, v21);
            uint64_t v81 = v80 + v21;
            if (v44) {
              goto LABEL_220;
            }
            v15[2] = v81;
          }
          goto LABEL_33;
        }
      }
      if (v21) {
        goto LABEL_203;
      }
LABEL_33:
      swift_bridgeObjectRelease();
      a3 += 16;
      if (!--v69)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_64;
      }
    }
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    __break(1u);
LABEL_223:
    __break(1u);
LABEL_224:
    swift_once();
  }
  uint64_t v36 = 0;
LABEL_105:
  char v138 = (void *)qword_272B58;
  uint64_t v288 = sub_12124(&qword_26D7F0);
  uint64_t v139 = swift_allocObject();
  long long v304 = xmmword_1FD2A0;
  *(_OWORD *)(v139 + 16) = xmmword_1FD2A0;
  *(void *)(v139 + 56) = &type metadata for Int;
  *(void *)(v139 + 64) = &protocol witness table for Int;
  *(void *)(v139 + 32) = v36;
  id v140 = v138;
  sub_1FBDC0();
  sub_1FB400();

  swift_bridgeObjectRelease();
  id v141 = (id)qword_272B58;
  sub_1FBDC0();
  sub_1FB400();

  sub_1FB0D0();
  a1 = *(void *)(a2 + 16);
  if (!a1)
  {
    uint64_t v142 = 0;
    goto LABEL_194;
  }
  uint64_t v21 = a2 + 32;
  v276 = (char *)(v293 + 8);
  swift_bridgeObjectRetain();
  uint64_t v142 = 0;
  uint64_t v143 = 0;
  uint64_t v277 = a1;
  unint64_t v295 = a2 + 32;
  while (2)
  {
    uint64_t v144 = v21 + 384 * v143;
    if ((*(unsigned char *)(v144 + 184) & 1) == 0 && *(void *)(a3 + 16))
    {
      uint64_t v300 = *(void *)v144;
      unint64_t v301 = v143;
      uint64_t v145 = sub_56168(v300);
      if (v146)
      {
        BOOL v44 = __OFADD__(v142++, 1);
        if (v44) {
          goto LABEL_222;
        }
        double v147 = *(double *)&v309;
        if (*(double *)&v309 > 0.0)
        {
          uint64_t v148 = (unsigned __int8 *)(*(void *)(a3 + 56) + 80 * v145);
          int v149 = *v148;
          uint64_t v150 = *((void *)v148 + 1);
          uint64_t v151 = (char *)*((void *)v148 + 2);
          swift_bridgeObjectRetain();
          uint64_t v152 = swift_bridgeObjectRetain();
          sub_B562C(v152, 0.0, 1.0);
          if (v153 < v147)
          {
            v303 = v151;
            uint64_t v298 = v150;
            sub_1FB070();
            sub_1FB090();
            double v155 = v154;
            uint64_t v286 = v142;
            if (v149)
            {
              swift_bridgeObjectRelease();
              goto LABEL_119;
            }
            char v156 = sub_1FC5F0();
            swift_bridgeObjectRelease();
            int v157 = 0;
            if (v156) {
LABEL_119:
            }
              int v157 = 1;
            LODWORD(v278) = v157;
            uint64_t v158 = v298;
            uint64_t v159 = *(void *)(v298 + 16);
            if (v159)
            {
              swift_bridgeObjectRetain_n();
              a1 = v158 + 40;
              uint64_t v21 = (uint64_t)_swiftEmptyArrayStorage;
              while (1)
              {
                uint64_t v161 = *(void *)(a1 - 8);
                uint64_t v160 = *(void *)a1;
                sub_12124(&qword_26D3C0);
                uint64_t v162 = swift_initStackObject();
                *(_OWORD *)(v162 + 16) = v304;
                uint64_t v163 = (void *)(v162 + 16);
                *(void *)(v162 + 32) = v161;
                uint64_t v164 = *(void *)(v160 + 16);
                swift_bridgeObjectRetain();
                if (v164)
                {
                  uint64_t result = (uint64_t)sub_41858((int *)((char *)&dword_0 + 1), v164 + 1, 1, (void *)v162);
                  if (!*(void *)(v160 + 16)) {
                    goto LABEL_232;
                  }
                  uint64_t v162 = result;
                  uint64_t v172 = *(void *)(result + 16);
                  if ((*(void *)(result + 24) >> 1) - v172 < v164) {
                    goto LABEL_228;
                  }
                  uint64_t v173 = (void *)(result + 8 * v172 + 32);
                  if (v160 + 32 < (unint64_t)v173 + 8 * v164 && (unint64_t)v173 < v160 + 32 + 8 * v164) {
                    goto LABEL_230;
                  }
                  uint64_t v163 = (void *)(v162 + 16);
                  memcpy(v173, (const void *)(v160 + 32), 8 * v164);
                  if (__OFADD__(*(void *)(v162 + 16), v164)) {
                    goto LABEL_229;
                  }
                  *uint64_t v163 = *(void *)(v162 + 16) + v164;
                }
                swift_bridgeObjectRelease();
                a3 = *(void *)(v162 + 16);
                a2 = *(void *)(v21 + 16);
                unint64_t v15 = (void *)(a2 + a3);
                if (__OFADD__(a2, a3)) {
                  goto LABEL_207;
                }
                uint64_t v165 = swift_isUniquelyReferenced_nonNull_native();
                if ((v165 & 1) != 0 && (uint64_t)v15 <= *(void *)(v21 + 24) >> 1)
                {
                  if (*v163) {
                    goto LABEL_134;
                  }
                }
                else
                {
                  if (a2 <= (uint64_t)v15) {
                    int64_t v166 = a2 + a3;
                  }
                  else {
                    int64_t v166 = a2;
                  }
                  uint64_t v21 = (uint64_t)sub_41858((void *)v165, v166, 1, (void *)v21);
                  if (*v163)
                  {
LABEL_134:
                    uint64_t v167 = *(void *)(v21 + 16);
                    if ((*(void *)(v21 + 24) >> 1) - v167 < a3) {
                      goto LABEL_219;
                    }
                    uint64_t v168 = (void *)(v21 + 8 * v167 + 32);
                    if (v162 + 32 < (unint64_t)v168 + 8 * a3 && (unint64_t)v168 < v162 + 32 + 8 * a3) {
                      goto LABEL_230;
                    }
                    memcpy(v168, (const void *)(v162 + 32), 8 * a3);
                    if (a3)
                    {
                      uint64_t v170 = *(void *)(v21 + 16);
                      BOOL v44 = __OFADD__(v170, a3);
                      uint64_t v171 = v170 + a3;
                      if (v44) {
                        goto LABEL_221;
                      }
                      *(void *)(v21 + 16) = v171;
                    }
                    goto LABEL_123;
                  }
                }
                if (a3) {
                  goto LABEL_208;
                }
LABEL_123:
                swift_bridgeObjectRelease();
                a1 += 16;
                if (!--v159)
                {
                  swift_bridgeObjectRelease_n();
                  goto LABEL_154;
                }
              }
            }
            uint64_t v21 = (uint64_t)_swiftEmptyArrayStorage;
LABEL_154:
            uint64_t v175 = *(void *)(v21 + 16);
            uint64_t v176 = sub_1FBCD0();
            a2 = v176;
            if (v175)
            {
              uint64_t v177 = 0;
              uint64_t v178 = v176 + 56;
              while (1)
              {
                a3 = *(void *)(v21 + 32 + 8 * v177++);
                uint64_t v179 = sub_1FC7D0();
                uint64_t v180 = -1 << *(unsigned char *)(a2 + 32);
                unint64_t v181 = v179 & ~v180;
                if (((*(void *)(v178 + ((v181 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v181) & 1) == 0) {
                  goto LABEL_163;
                }
                uint64_t v182 = *(void *)(a2 + 48);
                if (*(void *)(v182 + 8 * v181) == a3)
                {
LABEL_156:
                  if (v177 == v175) {
                    break;
                  }
                }
                else
                {
                  uint64_t v183 = ~v180;
                  while (1)
                  {
                    unint64_t v181 = (v181 + 1) & v183;
                    if (((*(void *)(v178 + ((v181 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v181) & 1) == 0) {
                      break;
                    }
                    if (*(void *)(v182 + 8 * v181) == a3) {
                      goto LABEL_156;
                    }
                  }
LABEL_163:
                  char v184 = swift_isUniquelyReferenced_nonNull_native();
                  v316[0] = a2;
                  sub_C020(a3, v181, v184);
                  a2 = v316[0];
                  swift_bridgeObjectRelease();
                  if (v177 == v175) {
                    break;
                  }
                  uint64_t v178 = a2 + 56;
                }
              }
            }
            swift_bridgeObjectRelease();
            int64_t v185 = *(void *)(a2 + 16);
            if (v185)
            {
              v316[0] = _swiftEmptyArrayStorage;
              sub_46588(0, v185, 0);
              uint64_t v186 = (void *)v316[0];
              a1 = sub_14D538(a2);
              uint64_t v188 = v187;
              int v190 = v189 & 1;
              uint64_t v302 = (void *)(a2 + 56);
              do
              {
                if (a1 < 0 || a1 >= 1 << *(unsigned char *)(a2 + 32)) {
                  goto LABEL_212;
                }
                if (((*(void *)((char *)v302 + (((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> a1) & 1) == 0) {
                  goto LABEL_213;
                }
                if (*(_DWORD *)(a2 + 36) != v188) {
                  goto LABEL_214;
                }
                LODWORD(v305) = v190;
                uint64_t v306 = *(void *)(*(void *)(a2 + 48) + 8 * a1);
                unint64_t v15 = (void *)sub_1FC580();
                uint64_t v192 = v191;
                v316[0] = v186;
                a3 = a2;
                unint64_t v194 = v186[2];
                unint64_t v193 = v186[3];
                if (v194 >= v193 >> 1)
                {
                  sub_46588(v193 > 1, v194 + 1, 1);
                  uint64_t v186 = (void *)v316[0];
                }
                v186[2] = v194 + 1;
                uint64_t v195 = &v186[2 * v194];
                v195[4] = v15;
                v195[5] = v192;
                uint64_t v196 = sub_14D5DC(a1, v188, v305 & 1, a3);
                a1 = v196;
                uint64_t v188 = v197;
                int v190 = v198 & 1;
                --v185;
                uint64_t v21 = (uint64_t)v303;
                a2 = a3;
              }
              while (v185);
              sub_55F94(v196, v197, v190);
              swift_bridgeObjectRelease();
            }
            else
            {
              swift_bridgeObjectRelease();
              uint64_t v186 = _swiftEmptyArrayStorage;
              uint64_t v21 = (uint64_t)v303;
            }
            uint64_t v302 = v186;
            int64_t v199 = *(void *)(v21 + 16);
            if (v199)
            {
              v316[0] = _swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              sub_46588(0, v199, 0);
              uint64_t v200 = (void *)v316[0];
              a1 = sub_14D538(v21);
              uint64_t v202 = v201;
              int v204 = v203 & 1;
              v303 = (char *)(v21 + 56);
              do
              {
                if (a1 < 0 || a1 >= 1 << *(unsigned char *)(v21 + 32)) {
                  goto LABEL_215;
                }
                if (((*(void *)&v303[((unint64_t)a1 >> 3) & 0x1FFFFFFFFFFFFFF8] >> a1) & 1) == 0) {
                  goto LABEL_216;
                }
                if (*(_DWORD *)(v21 + 36) != v202) {
                  goto LABEL_217;
                }
                LODWORD(v305) = v204;
                uint64_t v306 = *(void *)(*(void *)(v21 + 48) + 8 * a1);
                uint64_t v205 = sub_1FC580();
                unint64_t v15 = v206;
                v316[0] = v200;
                a2 = v200[2];
                unint64_t v207 = v200[3];
                a3 = v21;
                if (a2 >= v207 >> 1)
                {
                  sub_46588(v207 > 1, a2 + 1, 1);
                  uint64_t v200 = (void *)v316[0];
                }
                v200[2] = a2 + 1;
                uint64_t v208 = &v200[2 * a2];
                v208[4] = v205;
                v208[5] = v15;
                uint64_t v209 = sub_14D5DC(a1, v202, v305 & 1, v21);
                a1 = v209;
                uint64_t v202 = v210;
                int v204 = v211 & 1;
                --v199;
              }
              while (v199);
              sub_55F94(v209, v210, v204);
              swift_bridgeObjectRelease_n();
              swift_bridgeObjectRelease();
              uint64_t v212 = v200;
            }
            else
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v212 = _swiftEmptyArrayStorage;
            }
            v316[0] = v300;
            uint64_t v305 = sub_1FC580();
            uint64_t v214 = v213;
            uint64_t v215 = sub_1154D8(0, 0xE000000000000000, v289, (uint64_t)v302);
            swift_bridgeObjectRelease();
            uint64_t v216 = sub_1154D8(0, 0xE000000000000000, v290, (uint64_t)v212);
            swift_bridgeObjectRelease();
            uint64_t v217 = v307;
            char v218 = swift_isUniquelyReferenced_nonNull_native();
            unint64_t v15 = v294;
            int64_t v219 = v284;
            if ((v218 & 1) == 0) {
              uint64_t v217 = sub_425CC(0, v217[2] + 1, 1, v217);
            }
            unint64_t v221 = v217[2];
            unint64_t v220 = v217[3];
            if (v221 >= v220 >> 1) {
              uint64_t v217 = sub_425CC((void *)(v220 > 1), v221 + 1, 1, v217);
            }
            float v222 = v155;
            v217[2] = v221 + 1;
            uint64_t v223 = (char *)&v217[9 * v221];
            strcpy(v223 + 32, "bookPurchased");
            *((_WORD *)v223 + 23) = -4864;
            *((void *)v223 + 6) = 0;
            *((_DWORD *)v223 + 14) = 0;
            *((float *)v223 + 15) = v222;
            *((void *)v223 + 8) = v305;
            *((void *)v223 + 9) = v214;
            *((_DWORD *)v223 + 20) = v278;
            *((void *)v223 + 11) = v215;
            *((void *)v223 + 12) = v216;
            v307 = v217;
            (*(void (**)(char *, void *))v276)(v287, v15);
            a3 = v285;
            uint64_t v142 = v286;
            a1 = v277;
            uint64_t v21 = v295;
            uint64_t v143 = v301;
            a2 = v219;
            goto LABEL_109;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v21 = v295;
        }
      }
      uint64_t v143 = v301;
    }
LABEL_109:
    if (++v143 != a1) {
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
LABEL_194:
  uint64_t v224 = (void *)qword_272B58;
  uint64_t v225 = swift_allocObject();
  *(_OWORD *)(v225 + 16) = v304;
  *(void *)(v225 + 56) = &type metadata for Int;
  *(void *)(v225 + 64) = &protocol witness table for Int;
  *(void *)(v225 + 32) = v142;
  id v226 = v224;
  sub_1FBDC0();
  sub_1FB400();

  swift_bridgeObjectRelease();
  if (v142 >= 1) {
    sub_B4734(&v307);
  }
  unint64_t v227 = v307[2];
  uint64_t v228 = v297 - v227;
  if (v297 >= (uint64_t)v227)
  {
    if (v297 > v227)
    {
      unint64_t v229 = sub_984F8(0, 0xE000000000000000, v289);
      uint64_t v230 = sub_984F8(0, 0xE000000000000000, v290);
      v316[0] = 0;
      v316[1] = 0xE000000000000000;
      memset(&v316[2], 0, 24);
      v316[5] = 0xE000000000000000;
      int v317 = 0;
      v318 = v229;
      char v319 = v230;
      uint64_t v231 = sub_95E94((uint64_t)v316, v228);
      sub_A9E9C((uint64_t)v231);
    }
  }
  else
  {
    if (__OFSUB__(v227, v297))
    {
      __break(1u);
LABEL_226:
      __break(1u);
LABEL_227:
      __break(1u);
LABEL_228:
      __break(1u);
LABEL_229:
      __break(1u);
    }
    v307 = (void *)sub_B47A4(v227 - v297, (uint64_t)v307);
  }
  sub_12124(&qword_26D800);
  uint64_t v232 = (int *)(sub_12124(&qword_26D808) - 8);
  uint64_t v233 = *(void *)(*(void *)v232 + 72);
  unint64_t v234 = (*(unsigned __int8 *)(*(void *)v232 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v232 + 80);
  uint64_t v300 = 4 * v233;
  uint64_t v235 = v233;
  uint64_t v236 = swift_allocObject();
  *(_OWORD *)(v236 + 16) = xmmword_2070A0;
  v237 = (void *)(v236 + v234);
  uint64_t v238 = v236 + v234 + v232[14];
  void *v237 = 0xD00000000000001BLL;
  v237[1] = 0x80000000002180A0;
  uint64_t v239 = v237;
  unint64_t v301 = v236;
  uint64_t v302 = v237;
  uint64_t v240 = swift_bridgeObjectRetain();
  uint64_t v241 = sub_B4238(v240);
  swift_bridgeObjectRelease();
  static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)((uint64_t)v241, v238);
  swift_bridgeObjectRelease();
  uint64_t v242 = (void *)((char *)v239 + v235);
  uint64_t v243 = v235;
  uint64_t v298 = v235;
  *uint64_t v242 = 0xD00000000000001DLL;
  v242[1] = 0x80000000002180C0;
  uint64_t v244 = swift_bridgeObjectRetain();
  sub_B4310(v244);
  swift_bridgeObjectRelease();
  v245 = v283;
  sub_1FB5B0();
  swift_bridgeObjectRetain();
  sub_1FB5A0();
  sub_1FB540();
  uint64_t v246 = v299;
  uint64_t v247 = *(void (**)(char *, char *, uint64_t))(v299 + 16);
  *(void *)&long long v304 = v299 + 16;
  uint64_t v305 = (uint64_t)v247;
  uint64_t v248 = v292;
  v247(v291, v245, v292);
  sub_1FB510();
  v249 = *(char **)(v246 + 8);
  uint64_t v299 = v246 + 8;
  v303 = v249;
  ((void (*)(char *, uint64_t))v249)(v245, v248);
  swift_bridgeObjectRelease();
  uint64_t v297 = 2 * v243;
  double v250 = (void *)((char *)v302 + 2 * v243);
  *double v250 = 0xD00000000000001ALL;
  v250[1] = 0x80000000002180E0;
  uint64_t v251 = swift_bridgeObjectRetain();
  sub_B455C(v251);
  swift_bridgeObjectRelease();
  uint64_t v252 = v279;
  sub_1FB5E0();
  swift_bridgeObjectRetain();
  sub_1FB5D0();
  sub_1FB540();
  uint64_t v253 = v281;
  uint64_t v254 = v282;
  (*(void (**)(char *, char *, uint64_t))(v281 + 16))(v280, v252, v282);
  sub_1FB520();
  (*(void (**)(char *, uint64_t))(v253 + 8))(v252, v254);
  swift_bridgeObjectRelease();
  uint64_t v255 = (uint64_t)v302;
  uint64_t v256 = (void *)((char *)v302 + v297 + v298);
  *uint64_t v256 = 0xD000000000000018;
  v256[1] = 0x8000000000218100;
  uint64_t v257 = swift_bridgeObjectRetain();
  sub_B43D4(v257);
  swift_bridgeObjectRelease();
  sub_1FB5B0();
  swift_bridgeObjectRetain();
  sub_1FB5A0();
  sub_1FB540();
  v259 = v291;
  uint64_t v258 = v292;
  ((void (*)(char *, char *, uint64_t))v305)(v291, v245, v292);
  sub_1FB510();
  ((void (*)(char *, uint64_t))v303)(v245, v258);
  swift_bridgeObjectRelease();
  uint64_t v260 = (void *)(v255 + v300);
  *uint64_t v260 = 0xD00000000000001BLL;
  v260[1] = 0x8000000000218120;
  uint64_t v261 = swift_bridgeObjectRetain();
  sub_B4498(v261);
  swift_bridgeObjectRelease();
  sub_1FB5B0();
  swift_bridgeObjectRetain();
  sub_1FB5A0();
  sub_1FB540();
  ((void (*)(char *, char *, uint64_t))v305)(v259, v245, v258);
  sub_1FB510();
  ((void (*)(char *, uint64_t))v303)(v245, v258);
  swift_bridgeObjectRelease();
  sub_160CB0(v301);
  uint64_t v262 = swift_bridgeObjectRetain();
  v263 = sub_B461C(v262);
  swift_bridgeObjectRelease_n();
  sub_19BD14((uint64_t)v263, (char *)0xD000000000000011, 0x8000000000218140);
  swift_bridgeObjectRelease();
  sub_1FB550();
  uint64_t v264 = sub_1FB2F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1E52C4(v264);
  sub_1FB690();
  swift_allocObject();
  uint64_t v265 = sub_1FB670();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, void *))(v293 + 8))(v296, v294);
  return v265;
}

unint64_t AccessRequirementUnsatisfiedReason.description.getter()
{
  unint64_t result = 0xD00000000000002FLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000021;
      break;
    case 2:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0xD00000000000005ALL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_B7A3C()
{
  unint64_t result = qword_26EDF8;
  if (!qword_26EDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EDF8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for AccessRequirementUnsatisfiedReason(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB7B60);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AccessRequirementUnsatisfiedReason()
{
  return &type metadata for AccessRequirementUnsatisfiedReason;
}

BooksPersonalization::Environment_optional __swiftcall Environment.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_256830;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.Swift::Int value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *int v3 = v7;
  return result;
}

_UNKNOWN **static Environment.allCases.getter()
{
  return &off_2568B0;
}

uint64_t Environment.rawValue.getter()
{
  uint64_t result = 0x6C65766564;
  switch(*v0)
  {
    case 1:
      uint64_t result = 24945;
      break;
    case 2:
      uint64_t result = 0x676E6967617473;
      break;
    case 3:
      uint64_t result = 0x69746375646F7270;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_B7C84(unsigned __int8 *a1, char *a2)
{
  return sub_1DAF0C(*a1, *a2);
}

unint64_t sub_B7C94()
{
  unint64_t result = qword_26EE00;
  if (!qword_26EE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EE00);
  }
  return result;
}

Swift::Int sub_B7CE8()
{
  return sub_1FC830();
}

uint64_t sub_B7DB8()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_B7E70()
{
  return sub_1FC830();
}

BooksPersonalization::Environment_optional sub_B7F3C(Swift::String *a1)
{
  return Environment.init(rawValue:)(*a1);
}

void sub_B7F48(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE500000000000000;
  uint64_t v3 = 0x6C65766564;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE200000000000000;
      uint64_t v3 = 24945;
      goto LABEL_3;
    case 2:
      *a1 = 0x676E6967617473;
      a1[1] = 0xE700000000000000;
      break;
    case 3:
      *a1 = 0x69746375646F7270;
      a1[1] = 0xEA00000000006E6FLL;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_B7FDC()
{
  unint64_t result = qword_26EE08;
  if (!qword_26EE08)
  {
    sub_121C4(&qword_26EE10);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EE08);
  }
  return result;
}

void sub_B8038(void *a1@<X8>)
{
  *a1 = &off_2568D8;
}

unsigned char *storeEnumTagSinglePayload for Environment(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB8114);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Environment()
{
  return &type metadata for Environment;
}

ValueMetadata *type metadata accessor for EnvironmentOverride()
{
  return &type metadata for EnvironmentOverride;
}

ValueMetadata *type metadata accessor for UseV2AndMetadata()
{
  return &type metadata for UseV2AndMetadata;
}

uint64_t sub_B8170(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for EnvironmentType(uint64_t a1)
{
  return sub_B8190(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t sub_B8190(uint64_t a1, uint64_t a2, char a3)
{
  if ((a3 & 1) == 0) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s20BooksPersonalization15EnvironmentTypeOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_B8170(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for EnvironmentType(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_B8170(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  uint64_t v7 = *(void *)(a1 + 8);
  char v8 = *(unsigned char *)(a1 + 16);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_B8190(v6, v7, v8);
  return a1;
}

uint64_t assignWithTake for EnvironmentType(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  char v6 = *(unsigned char *)(a1 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_B8190(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for EnvironmentType(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for EnvironmentType(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_B8318(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for EnvironmentType()
{
  return &type metadata for EnvironmentType;
}

BooksPersonalization::GenreCollectionRecommendationRequest __swiftcall GenreCollectionRecommendationRequest.init(preferredSaleType:)(BooksPersonalization::GenreCollectionRecommendationRequest preferredSaleType)
{
  *uint64_t v1 = *(unsigned char *)preferredSaleType.preferredSaleType;
  return preferredSaleType;
}

unint64_t sub_B8340()
{
  return 0xD000000000000011;
}

uint64_t sub_B835C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_B9928(a1, a2);
  *a3 = result & 1;
  return result;
}

uint64_t sub_B8388(uint64_t a1)
{
  unint64_t v2 = sub_B8548();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_B83C4(uint64_t a1)
{
  unint64_t v2 = sub_B8548();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t GenreCollectionRecommendationRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26EE18);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_B8548();
  sub_1FC870();
  char v10 = v7;
  sub_B859C();
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_B8548()
{
  unint64_t result = qword_26EE20;
  if (!qword_26EE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EE20);
  }
  return result;
}

unint64_t sub_B859C()
{
  unint64_t result = qword_26EE28;
  if (!qword_26EE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EE28);
  }
  return result;
}

uint64_t GenreCollectionRecommendationRequest.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26EE30);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_B8548();
  sub_1FC850();
  if (!v2)
  {
    sub_B8758();
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v11;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_B8758()
{
  unint64_t result = qword_26EE38;
  if (!qword_26EE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EE38);
  }
  return result;
}

uint64_t sub_B87AC@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return GenreCollectionRecommendationRequest.init(from:)(a1, a2);
}

uint64_t sub_B87C4(void *a1)
{
  return GenreCollectionRecommendationRequest.encode(to:)(a1);
}

uint64_t sub_B87DC(uint64_t a1)
{
  *(void *)(v2 + 2264) = v1;
  *(void *)(v2 + 2256) = a1;
  return _swift_task_switch(sub_B8800, 0, 0);
}

uint64_t sub_B8800()
{
  uint64_t v1 = *(void **)(v0 + 2264);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 2272) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_B891C;
  return v6(v0 + 1136, v2, v3);
}

uint64_t sub_B891C()
{
  *(void *)(*(void *)v1 + 2280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_B8D6C;
  }
  else {
    uint64_t v2 = sub_B8A30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_B8A30()
{
  uint64_t v1 = *(void **)(v0 + 2264);
  memcpy((void *)(v0 + 16), (const void *)(v0 + 1136), 0x460uLL);
  uint64_t v2 = v1 + 7;
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  sub_5D64(v2, v3);
  *(_WORD *)(v0 + 2312) = 1280;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 2288) = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_B8B60;
  return v7(v0 + 2312, v3, v4);
}

uint64_t sub_B8B60(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2296) = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_11D3C(v4 + 16);
    uint64_t v5 = sub_B8D84;
  }
  else
  {
    *(void *)(v4 + 2304) = a1;
    uint64_t v5 = sub_B8C90;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_B8C90()
{
  uint64_t v1 = *(void *)(v0 + 2304);
  *(void *)(swift_task_alloc() + 16) = v0 + 16;
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_B9744(v2, v1, (void (*)(uint64_t *__return_ptr, unsigned char *, uint64_t *))sub_B99B0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_11D3C(v0 + 16);
  swift_task_dealloc();
  uint64_t v4 = *(uint64_t (**)(void *))(v0 + 8);
  return v4(v3);
}

uint64_t sub_B8D6C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_B8D84()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

double sub_B8D9C@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  char v6 = *a1;
  Swift::UInt64 v7 = *(void *)a2;
  uint64_t v8 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v9 = *(void *)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  Configuration.mediaType(for:)(*(void *)a2);
  if (v15 == 2
    || (char v14 = v15 & 1,
        char v11 = sub_B8FD0(&v14),
        char v12 = sub_39A28(v6, (uint64_t)v11),
        swift_bridgeObjectRelease(),
        (v12 & 1) != 0)
    && (*(unsigned char *)(a3 + 24) & 1) != 0)
  {
    *(unsigned char *)(a4 + 32) = 0;
    double result = 0.0;
    *(_OWORD *)a4 = 0u;
    *(_OWORD *)(a4 + 16) = 0u;
  }
  else
  {
    *(void *)a4 = v7;
    *(void *)(a4 + 8) = v8;
    *(void *)(a4 + 16) = v9;
    *(void *)(a4 + 24) = v10;
    *(unsigned char *)(a4 + 32) = v6;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return result;
}

BooksPersonalization::Book::MediaType_optional __swiftcall Configuration.mediaType(for:)(Swift::UInt64 a1)
{
  uint64_t v3 = v1;
  char v4 = 0;
  uint64_t v5 = (void *)swift_bridgeObjectRetain();
  uint64_t v6 = v5[2];
  if (!v6) {
    goto LABEL_10;
  }
  if (v5[4] != a1)
  {
    if (v6 == 1) {
      goto LABEL_10;
    }
    if (v5[5] != a1)
    {
      if (v6 != 2)
      {
        uint64_t v7 = 6;
        do
        {
          uint64_t v8 = v7 - 3;
          if (__OFADD__(v7 - 4, 1)) {
            goto LABEL_23;
          }
          if (v5[v7] == a1) {
            goto LABEL_12;
          }
          ++v7;
        }
        while (v8 != v6);
      }
LABEL_10:
      swift_bridgeObjectRelease();
      char v4 = 1;
      uint64_t v5 = (void *)swift_bridgeObjectRetain();
      uint64_t v9 = v5[2];
      if (v9)
      {
        if (v5[4] == a1) {
          goto LABEL_12;
        }
        if (v9 != 1)
        {
          if (v5[5] == a1) {
            goto LABEL_12;
          }
          if (v9 != 2)
          {
            uint64_t v10 = 6;
            while (1)
            {
              uint64_t v11 = v10 - 3;
              if (__OFADD__(v10 - 4, 1)) {
                break;
              }
              if (v5[v10] == a1) {
                goto LABEL_12;
              }
              ++v10;
              if (v11 == v9) {
                goto LABEL_14;
              }
            }
LABEL_23:
            __break(1u);
            return (BooksPersonalization::Book::MediaType_optional)v5;
          }
        }
      }
LABEL_14:
      LOBYTE(v5) = swift_bridgeObjectRelease();
      char v4 = 2;
      goto LABEL_15;
    }
  }
LABEL_12:
  LOBYTE(v5) = swift_bridgeObjectRelease();
LABEL_15:
  *uint64_t v3 = v4;
  return (BooksPersonalization::Book::MediaType_optional)v5;
}

void *sub_B8FD0(unsigned char *a1)
{
  uint64_t v2 = v1 + 640;
  if (*a1) {
    uint64_t v2 = v1 + 656;
  }
  int v3 = *v2;
  if (*a1) {
    char v4 = (char *)(v1 + 657);
  }
  else {
    char v4 = (char *)(v1 + 641);
  }
  char v5 = *v4;
  uint64_t v9 = _swiftEmptySetSingleton;
  if (v3 == 1)
  {
    swift_bridgeObjectRetain();
    sub_7C7C(&v7, 0);
    if ((v5 & 1) == 0) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  swift_bridgeObjectRetain();
  if (v5) {
LABEL_10:
  }
    sub_7C7C(&v8, 1);
LABEL_11:
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t BookHistoryServiceStressTest.__deallocating_deinit()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);

  return swift_deallocClassInstance();
}

uint64_t sub_B90CC(uint64_t a1)
{
  uint64_t v4 = *v1;
  char v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *char v5 = v2;
  v5[1] = sub_B06F4;
  v5[283] = v4;
  v5[282] = a1;
  return _swift_task_switch(sub_B8800, 0, 0);
}

uint64_t initializeWithCopy for GenreCollection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for GenreCollection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t assignWithTake for GenreCollection(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for GenreCollection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 33)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenreCollection(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)double result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 33) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreCollection()
{
  return &type metadata for GenreCollection;
}

unsigned char *storeEnumTagSinglePayload for GenreCollectionRecommendationRequest(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xB9408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreCollectionRecommendationRequest()
{
  return &type metadata for GenreCollectionRecommendationRequest;
}

uint64_t dispatch thunk of GenreCollectionRecommendationServiceType.fetchRecommendedGenreCollections(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for DefaultGenreCollectionRecommendationService()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for GenreCollectionRecommendationRequest.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xB9604);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreCollectionRecommendationRequest.CodingKeys()
{
  return &type metadata for GenreCollectionRecommendationRequest.CodingKeys;
}

unint64_t sub_B9640()
{
  unint64_t result = qword_26EEF0;
  if (!qword_26EEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EEF0);
  }
  return result;
}

unint64_t sub_B9698()
{
  unint64_t result = qword_26EF00;
  if (!qword_26EF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EF00);
  }
  return result;
}

unint64_t sub_B96F0()
{
  unint64_t result = qword_26EF08;
  if (!qword_26EF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26EF08);
  }
  return result;
}

void *sub_B9744(uint64_t a1, uint64_t a2, void (*a3)(uint64_t *__return_ptr, unsigned char *, uint64_t *))
{
  uint64_t v24 = *(void *)(a1 + 16);
  if (!v24) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  uint64_t v22 = a1 + 32;
  uint64_t v23 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  unsigned int v6 = _swiftEmptyArrayStorage;
  uint64_t v21 = v3;
  do
  {
    if (v23 == v5) {
      break;
    }
    uint64_t v9 = *(void *)(v3 + v4 + 32);
    char v10 = *(unsigned char *)(v3 + v4 + 40);
    uint64_t v11 = *(void *)(v3 + v4 + 48);
    uint64_t v12 = *(void *)(v3 + v4 + 56);
    uint64_t v13 = *(void *)(v3 + v4 + 64);
    v31[0] = *(unsigned char *)(v22 + v5);
    uint64_t v32 = v9;
    char v33 = v10;
    uint64_t v34 = v11;
    uint64_t v35 = v12;
    uint64_t v36 = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    a3(&v26, v31, &v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v28;
    if (v28)
    {
      uint64_t v16 = v26;
      char v15 = v27;
      uint64_t v37 = v29;
      char v17 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        unsigned int v6 = sub_42824(0, v6[2] + 1, 1, v6);
      }
      unint64_t v19 = v6[2];
      unint64_t v18 = v6[3];
      if (v19 >= v18 >> 1) {
        unsigned int v6 = sub_42824((void *)(v18 > 1), v19 + 1, 1, v6);
      }
      v6[2] = v19 + 1;
      uint64_t v7 = &v6[5 * v19];
      v7[4] = v16;
      *((unsigned char *)v7 + 40) = v15 & 1;
      uint64_t v8 = v37;
      v7[6] = v14;
      v7[7] = v8;
      *((unsigned char *)v7 + 64) = v17 & 1;
      uint64_t v3 = v21;
    }
    ++v5;
    v4 += 40;
  }
  while (v24 != v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_B9928(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000011 && a2 == 0x80000000002181D0)
  {
    swift_bridgeObjectRelease();
    char v2 = 0;
  }
  else
  {
    char v3 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    char v2 = v3 ^ 1;
  }
  return v2 & 1;
}

double sub_B99B0@<D0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_B8D9C(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t TabiSuggestionsService.fetchBooks(with:configuration:)(uint64_t a1)
{
  *(void *)(v2 + 24) = v1;
  *(void *)(v2 + 32) = type metadata accessor for BookSuggestionsWork();
  *(void *)(v2 + 40) = swift_task_alloc();
  uint64_t v4 = sub_1FB110();
  *(void *)(v2 + 48) = v4;
  *(void *)(v2 + 56) = *(void *)(v4 - 8);
  uint64_t v5 = swift_task_alloc();
  long long v6 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)a1;
  *(void *)(v2 + 64) = v5;
  *(_OWORD *)(v2 + 88) = v6;
  *(unsigned char *)(v2 + 128) = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(v2 + 129) = *(unsigned char *)(a1 + 33);
  uint64_t v7 = *(void *)(a1 + 40);
  *(unsigned char *)(v2 + 130) = *(unsigned char *)(a1 + 48);
  uint64_t v8 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)(v2 + 104) = v7;
  *(void *)(v2 + 112) = v8;
  *(void *)(v2 + 120) = v9;
  return _swift_task_switch(sub_B9AE0, 0, 0);
}

uint64_t sub_B9AE0()
{
  uint64_t v28 = *(void *)(v0 + 120);
  char v27 = *(unsigned char *)(v0 + 130);
  uint64_t v1 = *(void *)(v0 + 96);
  uint64_t v25 = *(void *)(v0 + 104);
  uint64_t v26 = *(void *)(v0 + 112);
  char v24 = *(unsigned char *)(v0 + 129);
  char v2 = *(unsigned char *)(v0 + 128);
  uint64_t v3 = *(void *)(v0 + 80);
  uint64_t v4 = *(void *)(v0 + 64);
  uint64_t v22 = *(void *)(v0 + 72);
  uint64_t v23 = *(void *)(v0 + 88);
  uint64_t v6 = *(void *)(v0 + 48);
  uint64_t v5 = *(void *)(v0 + 56);
  uint64_t v8 = *(void *)(v0 + 32);
  uint64_t v7 = *(void *)(v0 + 40);
  sub_1FB100();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v7, v4, v6);
  uint64_t v9 = v7 + *(int *)(v8 + 20);
  *(void *)uint64_t v9 = v22;
  *(void *)(v9 + 8) = v3;
  *(void *)(v9 + 16) = v23;
  *(void *)(v9 + 24) = v1;
  *(unsigned char *)(v9 + 32) = v2;
  *(unsigned char *)(v9 + 33) = v24;
  *(void *)(v9 + 40) = v25;
  *(unsigned char *)(v9 + 48) = v27;
  *(void *)(v9 + 56) = v26;
  *(void *)(v9 + 64) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_12124(&qword_26EF28);
  sub_B9E38();
  sub_1FB460();
  sub_B9E90(*(void *)(v0 + 40));
  uint64_t v10 = *(void *)(v0 + 16);
  *(unsigned char *)(swift_task_alloc() + 16) = v2;
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    sub_467B8(0, v11, 0);
    unint64_t v12 = _swiftEmptyArrayStorage[2];
    uint64_t v13 = 80 * v12 + 56;
    uint64_t v14 = (uint64_t *)(v10 + 40);
    do
    {
      uint64_t v15 = *(v14 - 1);
      uint64_t v16 = *v14;
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      unint64_t v18 = v12 + 1;
      if (v12 >= v17 >> 1) {
        sub_467B8(v17 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18;
      unint64_t v19 = (char *)_swiftEmptyArrayStorage + v13;
      *((void *)v19 - 3) = v15;
      *(v19 - 16) = v2;
      *((void *)v19 - 1) = 0;
      char *v19 = 1;
      *((void *)v19 + 1) = 0;
      v19[16] = -1;
      *((void *)v19 + 4) = 0;
      *((void *)v19 + 5) = 0;
      v13 += 80;
      *((void *)v19 + 3) = _swiftEmptyArrayStorage;
      v14 += 2;
      unint64_t v12 = v18;
      *((void *)v19 + 6) = v16;
      --v11;
    }
    while (v11);
  }
  swift_bridgeObjectRelease();
  (*(void (**)(void, void))(*(void *)(v0 + 56) + 8))(*(void *)(v0 + 64), *(void *)(v0 + 48));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void *))(v0 + 8);
  return v20(_swiftEmptyArrayStorage);
}

unint64_t sub_B9E38()
{
  unint64_t result = qword_26EF30;
  if (!qword_26EF30)
  {
    type metadata accessor for BookSuggestionsWork();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EF30);
  }
  return result;
}

uint64_t sub_B9E90(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BookSuggestionsWork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

id TabiGenreRecommendationService.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void TabiSuggestionsService.init()()
{
}

id TabiGenreRecommendationService.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_BA004(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B06F4;
  return TabiSuggestionsService.fetchBooks(with:configuration:)(a1);
}

uint64_t type metadata accessor for TabiSuggestionsService()
{
  return self;
}

uint64_t method lookup function for TabiSuggestionsService(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabiSuggestionsService);
}

uint64_t sub_BA0D8(uint64_t a1, uint64_t (*a2)(uint64_t *, char *), uint64_t a3, uint64_t a4)
{
  uint64_t v20 = a1;
  uint64_t v7 = a4 + 56;
  uint64_t v8 = 1 << *(unsigned char *)(a4 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a4 + 56);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v13 = 0;
  while (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v13 << 6);
LABEL_5:
    char v19 = *(unsigned char *)(*(void *)(a4 + 48) + v15);
    uint64_t result = a2(&v20, &v19);
    if (v4)
    {
      swift_release();
      return swift_bridgeObjectRelease();
    }
  }
  if (__OFADD__(v13++, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v13 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v13);
  if (v17)
  {
LABEL_19:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v13 << 6);
    goto LABEL_5;
  }
  int64_t v18 = v13 + 1;
  if (v13 + 1 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 2;
  if (v13 + 2 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 3;
  if (v13 + 3 >= v11) {
    goto LABEL_25;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v13 + 4;
  if (v13 + 4 >= v11)
  {
LABEL_25:
    swift_release();
    return v20;
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v13 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v13 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v13 >= v11) {
      goto LABEL_25;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v13);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_BA27C(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  uint64_t v21 = a1;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v9) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v14 + 3;
          if (v14 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v5 + 8 * v11);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_5:
    v18[0] = *(void *)(*(void *)(a2 + 48) + 8 * v13);
    a3(v18);
    sub_1269C((uint64_t)v18, (uint64_t)v20);
    sub_7E24((uint64_t)v17, (uint64_t)v20);
    sub_1269C((uint64_t)v17, (uint64_t)v19);
    uint64_t result = sub_127D4(v19, sub_128C0);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_23:
    swift_release();
    return v21;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void ScorableAttributeType.hash(into:)()
{
  switch(*v0 >> 6)
  {
    case 1:
      Swift::UInt v1 = 3;
      goto LABEL_6;
    case 2:
      switch(*v0)
      {
        case 0x81:
          Swift::UInt v2 = 1;
          break;
        case 0x82:
          Swift::UInt v2 = 4;
          break;
        case 0x83:
          Swift::UInt v2 = 5;
          break;
        default:
          Swift::UInt v2 = 0;
          break;
      }
      goto LABEL_13;
    case 3:
      Swift::UInt v2 = 6;
LABEL_13:
      sub_1FC7F0(v2);
      break;
    default:
      Swift::UInt v1 = 2;
LABEL_6:
      sub_1FC7F0(v1);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      break;
  }
}

unint64_t sub_BA5AC(char a1)
{
  unint64_t result = 0x726F68747561;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x65726E6567;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x707954616964656DLL;
      break;
    case 5:
      unint64_t result = 0x6B6F6F4264656573;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_BA69C()
{
  return 0;
}

uint64_t sub_BA6A8@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = 1;
  return result;
}

uint64_t sub_BA6D8(uint64_t a1)
{
  unint64_t v2 = sub_BD194();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA714(uint64_t a1)
{
  unint64_t v2 = sub_BD194();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BA750(uint64_t a1)
{
  unint64_t v2 = sub_BD1E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA78C(uint64_t a1)
{
  unint64_t v2 = sub_BD1E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_BA7C8()
{
  return sub_BA5AC(*v0);
}

uint64_t sub_BA7D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_BE3BC(a1, a2);
  *a3 = result;
  return result;
}

void sub_BA7F8(unsigned char *a1@<X8>)
{
  *a1 = 7;
}

uint64_t sub_BA804(uint64_t a1)
{
  unint64_t v2 = sub_BCF9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA840(uint64_t a1)
{
  unint64_t v2 = sub_BCF9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BA87C()
{
  return 12383;
}

uint64_t sub_BA88C(uint64_t a1)
{
  unint64_t v2 = sub_BD0EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA8C8(uint64_t a1)
{
  unint64_t v2 = sub_BD0EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BA904@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 12383 && a2 == 0xE200000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_BA984(uint64_t a1)
{
  unint64_t v2 = sub_BD140();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BA9C0(uint64_t a1)
{
  unint64_t v2 = sub_BD140();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BA9FC(uint64_t a1)
{
  unint64_t v2 = sub_BD098();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BAA38(uint64_t a1)
{
  unint64_t v2 = sub_BD098();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BAA74(uint64_t a1)
{
  unint64_t v2 = sub_BCFF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BAAB0(uint64_t a1)
{
  unint64_t v2 = sub_BCFF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_BAAEC(uint64_t a1)
{
  unint64_t v2 = sub_BD044();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_BAB28(uint64_t a1)
{
  unint64_t v2 = sub_BD044();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScorableAttributeType.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26EF70);
  uint64_t v52 = *(void *)(v3 - 8);
  uint64_t v53 = v3;
  __chkstk_darwin(v3);
  uint64_t v51 = (char *)&v37 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26EF78);
  uint64_t v44 = *(void *)(v5 - 8);
  uint64_t v45 = v5;
  __chkstk_darwin(v5);
  char v43 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26EF80);
  uint64_t v41 = *(void *)(v7 - 8);
  uint64_t v42 = v7;
  __chkstk_darwin(v7);
  unint64_t v40 = (char *)&v37 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_26EF88);
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26EF90);
  uint64_t v46 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  __chkstk_darwin(v11);
  unint64_t v13 = (char *)&v37 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_12124(&qword_26EF98);
  uint64_t v38 = *(void *)(v14 - 8);
  uint64_t v39 = v14;
  __chkstk_darwin(v14);
  int64_t v16 = (char *)&v37 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_12124(&qword_26EFA0);
  uint64_t v37 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  char v19 = (char *)&v37 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_12124(&qword_26EFA8);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v54 = v20;
  uint64_t v55 = v21;
  __chkstk_darwin(v20);
  unsigned int v23 = *v1;
  uint64_t v24 = a1[3];
  uint64_t v25 = a1;
  uint64_t v26 = (char *)&v37 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(v25, v24);
  sub_BCF9C();
  sub_1FC870();
  switch(v23 >> 6)
  {
    case 1u:
      char v61 = 3;
      sub_BD0EC();
      long long v31 = v48;
      uint64_t v27 = v54;
      sub_1FC440();
      char v60 = v23 & 0x3F;
      sub_7F82C();
      uint64_t v32 = v50;
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v32);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v26, v27);
    case 2u:
      switch(v23)
      {
        case 0x81u:
          char v57 = 1;
          sub_BD194();
          uint64_t v27 = v54;
          sub_1FC440();
          uint64_t v36 = v38;
          uint64_t v35 = v39;
          goto LABEL_10;
        case 0x82u:
          char v62 = 4;
          sub_BD098();
          int64_t v16 = v40;
          uint64_t v27 = v54;
          sub_1FC440();
          uint64_t v36 = v41;
          uint64_t v35 = v42;
          goto LABEL_10;
        case 0x83u:
          char v63 = 5;
          sub_BD044();
          int64_t v16 = v43;
          uint64_t v27 = v54;
          sub_1FC440();
          uint64_t v36 = v44;
          uint64_t v35 = v45;
LABEL_10:
          (*(void (**)(char *, uint64_t))(v36 + 8))(v16, v35);
          return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v26, v27);
        default:
          char v56 = 0;
          sub_BD1E8();
          uint64_t v29 = v54;
          sub_1FC440();
          (*(void (**)(char *, uint64_t))(v37 + 8))(v19, v17);
          return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v26, v29);
      }
    case 3u:
      char v64 = 6;
      sub_BCFF0();
      char v33 = v51;
      uint64_t v34 = v54;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v53);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v26, v34);
    default:
      char v59 = 2;
      sub_BD140();
      uint64_t v27 = v54;
      sub_1FC440();
      char v58 = v23;
      sub_7F82C();
      uint64_t v28 = v47;
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v13, v28);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v26, v27);
  }
}

Swift::Int ScorableAttributeType.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t ScorableAttributeType.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  char v58 = a2;
  uint64_t v3 = sub_12124(&qword_26EFF0);
  uint64_t v55 = *(void *)(v3 - 8);
  uint64_t v56 = v3;
  __chkstk_darwin(v3);
  char v63 = (char *)&v42 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26EFF8);
  uint64_t v53 = *(void *)(v5 - 8);
  uint64_t v54 = v5;
  __chkstk_darwin(v5);
  char v62 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26F000);
  uint64_t v50 = *(void *)(v7 - 8);
  uint64_t v51 = v7;
  __chkstk_darwin(v7);
  char v57 = (char *)&v42 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_12124(&qword_26F008);
  uint64_t v52 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  char v60 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_12124(&qword_26F010);
  uint64_t v47 = *(void *)(v10 - 8);
  uint64_t v48 = v10;
  __chkstk_darwin(v10);
  char v59 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_12124(&qword_26F018);
  uint64_t v46 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v42 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_12124(&qword_26F020);
  uint64_t v45 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v42 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = sub_12124(&qword_26F028);
  uint64_t v18 = *(void *)(v61 - 8);
  __chkstk_darwin(v61);
  uint64_t v20 = (char *)&v42 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = a1[3];
  char v64 = a1;
  sub_5D64(a1, v21);
  sub_BCF9C();
  uint64_t v22 = v65;
  sub_1FC850();
  if (v22) {
    goto LABEL_12;
  }
  uint64_t v44 = v17;
  uint64_t v42 = v15;
  double v65 = v14;
  uint64_t v43 = v12;
  unsigned int v23 = v59;
  uint64_t v24 = v60;
  uint64_t v25 = v62;
  uint64_t v26 = v63;
  uint64_t v27 = v61;
  uint64_t v28 = sub_1FC430();
  if (*(void *)(v28 + 16) != 1)
  {
    uint64_t v30 = sub_1FC0F0();
    swift_allocError();
    uint64_t v32 = v31;
    sub_12124(&qword_26F030);
    *uint64_t v32 = &type metadata for ScorableAttributeType;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v30 - 8) + 104))(v32, enum case for DecodingError.typeMismatch(_:), v30);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
LABEL_12:
    uint64_t v38 = (uint64_t)v64;
    return sub_1264C(v38);
  }
  switch(*(unsigned char *)(v28 + 32))
  {
    case 1:
      char v67 = 1;
      sub_BD194();
      char v33 = v65;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v46 + 8))(v33, v43);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
      char v40 = -127;
      break;
    case 2:
      char v69 = 2;
      sub_BD140();
      uint64_t v34 = v27;
      sub_1FC2F0();
      sub_7F5A8();
      uint64_t v41 = v48;
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v23, v41);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v34);
      char v40 = v68;
      break;
    case 3:
      char v71 = 3;
      sub_BD0EC();
      uint64_t v35 = v27;
      sub_1FC2F0();
      sub_7F5A8();
      uint64_t v36 = v49;
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v52 + 8))(v24, v36);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v35);
      char v40 = v70 | 0x40;
      break;
    case 4:
      char v72 = 4;
      sub_BD098();
      uint64_t v37 = v57;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v37, v51);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
      char v40 = -126;
      break;
    case 5:
      char v73 = 5;
      sub_BD044();
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v53 + 8))(v25, v54);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
      char v40 = -125;
      break;
    case 6:
      char v74 = 6;
      sub_BCFF0();
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v26, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
      char v40 = -64;
      break;
    default:
      char v66 = 0;
      sub_BD1E8();
      uint64_t v29 = v44;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v45 + 8))(v29, v42);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v18 + 8))(v20, v27);
      char v40 = 0x80;
      break;
  }
  uint64_t v38 = (uint64_t)v64;
  *char v58 = v40;
  return sub_1264C(v38);
}

Swift::Int sub_BBDD0()
{
  return sub_1FC830();
}

uint64_t sub_BBE18@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return ScorableAttributeType.init(from:)(a1, a2);
}

uint64_t sub_BBE30(void *a1)
{
  return ScorableAttributeType.encode(to:)(a1);
}

uint64_t static ScorableAttribute.AuthorAndMediaType.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_BC940(a1, a2) & 1;
}

uint64_t _s20BooksPersonalization17ScorableAttributeO18AuthorAndMediaTypeV4hash4intoys6HasherVz_tF_0()
{
  sub_1FC820(*v0);
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int _s20BooksPersonalization17ScorableAttributeO18AuthorAndMediaTypeV9hashValueSivg_0()
{
  Swift::UInt64 v1 = *v0;
  sub_1FC7E0();
  sub_1FC820(v1);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

Swift::Int sub_BBF98()
{
  Swift::UInt64 v1 = *v0;
  sub_1FC7E0();
  sub_1FC820(v1);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

void ScorableAttribute.hash(into:)(uint64_t a1)
{
  sub_1269C(v1, (uint64_t)v9);
  sub_1269C((uint64_t)v9, (uint64_t)v10);
  switch(sub_1299C((uint64_t)v10))
  {
    case 1u:
      Swift::UInt64 v4 = *(void *)sub_129A8((uint64_t)v10);
      Swift::UInt v5 = 1;
      goto LABEL_5;
    case 2u:
      Swift::UInt64 v4 = *(void *)sub_129A8((uint64_t)v10);
      Swift::UInt v5 = 2;
LABEL_5:
      sub_1FC7F0(v5);
      sub_1FC820(v4);
      return;
    case 3u:
      Swift::UInt64 v6 = *(void *)sub_129A8((uint64_t)v10);
      Swift::UInt v7 = 3;
      goto LABEL_8;
    case 4u:
      Swift::UInt64 v6 = *(void *)sub_129A8((uint64_t)v10);
      Swift::UInt v7 = 4;
LABEL_8:
      sub_1FC7F0(v7);
      sub_1FC820(v6);
      goto LABEL_10;
    case 5u:
      sub_129A8((uint64_t)v10);
      sub_1FC7F0(5uLL);
LABEL_10:
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      break;
    default:
      uint64_t v3 = (const void *)sub_129A8((uint64_t)v10);
      sub_1FC7F0(0);
      memcpy(v8, v3, sizeof(v8));
      SeedBook.hash(into:)(a1);
      break;
  }
}

Swift::Int ScorableAttribute.hashValue.getter()
{
  sub_1269C(v0, (uint64_t)v4);
  sub_1269C((uint64_t)v4, (uint64_t)v3);
  sub_1FC7E0();
  ScorableAttribute.hash(into:)((uint64_t)v2);
  return sub_1FC830();
}

Swift::Int sub_BC23C()
{
  sub_1269C(v0, (uint64_t)v4);
  sub_1269C((uint64_t)v4, (uint64_t)v3);
  sub_1FC7E0();
  ScorableAttribute.hash(into:)((uint64_t)v2);
  return sub_1FC830();
}

uint64_t sub_BC2A4(unsigned __int8 *a1)
{
  unsigned int v2 = *a1;
  uint64_t v3 = memcpy(v26, v1, 0x229uLL);
  switch(v2 >> 6)
  {
    case 1u:
      v27[2] = *(_OWORD *)&v26[5];
      void v27[3] = *(_OWORD *)&v26[7];
      *(_OWORD *)((char *)&v27[3] + 9) = *(_OWORD *)((char *)&v26[8] + 1);
      v27[1] = *(_OWORD *)&v26[3];
      v27[0] = *(_OWORD *)&v26[1];
      v25[0] = v2 & 0x3F;
      Swift::UInt v7 = Book.Metadata.genreIDs(at:)(v25);
      __chkstk_darwin(v7);
      uint64_t v8 = sub_C2460;
      uint64_t v9 = (uint64_t)v7;
LABEL_5:
      uint64_t v6 = sub_BE0A4((uint64_t)_swiftEmptySetSingleton, v9, (void (*)(void *__return_ptr, uint64_t *))v8);
      swift_bridgeObjectRelease();
      break;
    case 2u:
      switch(v2)
      {
        case 0x81u:
          uint64_t v20 = v26[3];
          __chkstk_darwin(v3);
          swift_bridgeObjectRetain();
          uint64_t v8 = sub_C2478;
          uint64_t v9 = v20;
          goto LABEL_5;
        case 0x82u:
          sub_12124(&qword_26D620);
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1FD2A0;
          LOBYTE(v27[0]) = v26[1] & 1;
          sub_C2400((uint64_t)v27);
          sub_1269C((uint64_t)v27, v21 + 32);
          break;
        case 0x83u:
          sub_12124(&qword_26D620);
          uint64_t v21 = swift_allocObject();
          *(_OWORD *)(v21 + 16) = xmmword_1FD2A0;
          memcpy(v27, v1, 0x229uLL);
          sub_C2434((uint64_t)v27);
          sub_1269C((uint64_t)v27, v21 + 32);
          sub_12384(v26);
          break;
        default:
          Swift::UInt64 v4 = (void *)v26[3];
          swift_bridgeObjectRetain();
          Swift::UInt v5 = sub_C28F4;
          goto LABEL_3;
      }
      uint64_t v6 = (uint64_t)sub_BE688(v21);
      swift_setDeallocating();
      swift_arrayDestroy();
      swift_deallocClassInstance();
      break;
    case 3u:
      sub_12384(v26);
      uint64_t v10 = sub_BD994((uint64_t)&off_256950, v26);
      sub_124B4(v26);
      int64_t v11 = v10[2];
      if (v11)
      {
        sub_469C8(0, v11, 0);
        uint64_t v12 = _swiftEmptyArrayStorage;
        int64_t v13 = v11 - 1;
        for (uint64_t i = 4; ; i += 70)
        {
          memcpy(v27, &v10[i], 0x229uLL);
          sub_12384(v27);
          v23[0] = v12;
          unint64_t v16 = v12[2];
          unint64_t v15 = v12[3];
          if (v16 >= v15 >> 1)
          {
            sub_469C8(v15 > 1, v16 + 1, 1);
            uint64_t v12 = (void *)v23[0];
          }
          memcpy(v25, v27, 0x229uLL);
          sub_C2434((uint64_t)v25);
          void v12[2] = v16 + 1;
          sub_1269C((uint64_t)v25, (uint64_t)&v12[70 * v16 + 4]);
          if (!v13) {
            break;
          }
          --v13;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v12 = _swiftEmptyArrayStorage;
      }
      uint64_t v24 = _swiftEmptySetSingleton;
      uint64_t v17 = v12[2];
      if (v17)
      {
        uint64_t v18 = (uint64_t)(v12 + 4);
        swift_bridgeObjectRetain();
        for (uint64_t j = v17 - 1; ; --j)
        {
          sub_1269C(v18, (uint64_t)v27);
          sub_127D4(v27, sub_126F8);
          sub_127D4(v27, sub_126F8);
          sub_7E24((uint64_t)v23, (uint64_t)v27);
          sub_1269C((uint64_t)v23, (uint64_t)v25);
          sub_127D4(v25, sub_128C0);
          sub_127D4(v27, sub_128C0);
          if (!j) {
            break;
          }
          v18 += 560;
        }
        swift_bridgeObjectRelease_n();
        uint64_t v6 = (uint64_t)v24;
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v6 = (uint64_t)v24;
      }
      break;
    default:
      v27[2] = *(_OWORD *)&v26[5];
      void v27[3] = *(_OWORD *)&v26[7];
      *(_OWORD *)((char *)&v27[3] + 9) = *(_OWORD *)((char *)&v26[8] + 1);
      v27[1] = *(_OWORD *)&v26[3];
      v27[0] = *(_OWORD *)&v26[1];
      v25[0] = v2;
      Swift::UInt64 v4 = Book.Metadata.genreIDs(at:)(v25);
      Swift::UInt v5 = sub_C28C4;
LABEL_3:
      uint64_t v6 = sub_BA27C((uint64_t)_swiftEmptySetSingleton, (uint64_t)v4, (void (*)(void *))v5);
      swift_bridgeObjectRelease();
      break;
  }
  return v6;
}

uint64_t AttributeScorerType.score(attributeTypes:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v10[2] = a1;
  Swift::UInt v7 = *(uint64_t (**)(uint64_t (*)(void *), void *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 8);
  unint64_t v8 = sub_BD2B0();
  return v7(sub_BD23C, v10, a2, &type metadata for ScorableAttribute, v8, a3, a4);
}

uint64_t AttributeScorerType.score(attributeType:of:)(char *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v7 = *a1;
  sub_12124(&qword_26F040);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
  *(unsigned char *)(inited + 32) = v7;
  uint64_t v9 = sub_BFEBC(inited);
  swift_setDeallocating();
  unint64_t v15 = v9;
  uint64_t v10 = *(uint64_t (**)(uint64_t (*)(void *), unsigned char *, uint64_t, ValueMetadata *, unint64_t, uint64_t, uint64_t))(a4 + 8);
  unint64_t v11 = sub_BD2B0();
  uint64_t v12 = v10(sub_BD23C, v14, a2, &type metadata for ScorableAttribute, v11, a3, a4);
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t sub_BC940(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 == *(void *)a2)
  {
    BOOL v2 = *(unsigned char *)(a1 + 8) == 0;
    if (*(unsigned char *)(a1 + 8)) {
      uint64_t v3 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v3 = 0x6B6F6F6265;
    }
    if (v2) {
      unint64_t v4 = 0xE500000000000000;
    }
    else {
      unint64_t v4 = 0xE90000000000006BLL;
    }
    if (*(unsigned char *)(a2 + 8)) {
      uint64_t v5 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v5 = 0x6B6F6F6265;
    }
    if (*(unsigned char *)(a2 + 8)) {
      unint64_t v6 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v6 = 0xE500000000000000;
    }
    if (v3 == v5 && v4 == v6) {
      char v8 = 1;
    }
    else {
      char v8 = sub_1FC5F0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v8 = 0;
  }
  return v8 & 1;
}

BOOL _s20BooksPersonalization17ScorableAttributeO2eeoiySbAC_ACtFZ_0(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v3 = v2;
  sub_1269C(v1, (uint64_t)v25);
  sub_1269C(v3, (uint64_t)v26);
  sub_1269C((uint64_t)v25, (uint64_t)v27);
  sub_1269C((uint64_t)v26, (uint64_t)&v28);
  sub_1269C((uint64_t)v25, (uint64_t)v29);
  switch(sub_1299C((uint64_t)v29))
  {
    case 1u:
      uint64_t v6 = *(void *)sub_129A8((uint64_t)v29);
      sub_1269C((uint64_t)v26, (uint64_t)v24);
      if (sub_1299C((uint64_t)v24) == 1) {
        goto LABEL_7;
      }
      goto LABEL_30;
    case 2u:
      uint64_t v6 = *(void *)sub_129A8((uint64_t)v29);
      sub_1269C((uint64_t)v26, (uint64_t)v24);
      if (sub_1299C((uint64_t)v24) != 2) {
        goto LABEL_30;
      }
LABEL_7:
      uint64_t v7 = *(void *)sub_129A8((uint64_t)v24);
      sub_C2580((uint64_t)v27);
      return v6 == v7;
    case 3u:
      uint64_t v9 = sub_129A8((uint64_t)v29);
      uint64_t v10 = *(void *)v9;
      int v11 = *(unsigned __int8 *)(v9 + 8);
      sub_1269C((uint64_t)v26, (uint64_t)v24);
      if (sub_1299C((uint64_t)v24) != 3) {
        goto LABEL_30;
      }
      goto LABEL_11;
    case 4u:
      uint64_t v12 = sub_129A8((uint64_t)v29);
      uint64_t v10 = *(void *)v12;
      int v11 = *(unsigned __int8 *)(v12 + 8);
      sub_1269C((uint64_t)v26, (uint64_t)v24);
      if (sub_1299C((uint64_t)v24) != 4) {
        goto LABEL_30;
      }
LABEL_11:
      uint64_t v13 = sub_129A8((uint64_t)v24);
      if (v10 != *(void *)v13) {
        goto LABEL_31;
      }
      int v14 = *(unsigned __int8 *)(v13 + 8);
LABEL_15:
      if (v11) {
        uint64_t v15 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v15 = 0x6B6F6F6265;
      }
      if (v11) {
        unint64_t v16 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v16 = 0xE500000000000000;
      }
      if (v14) {
        uint64_t v17 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v17 = 0x6B6F6F6265;
      }
      if (v14) {
        unint64_t v18 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v18 = 0xE500000000000000;
      }
      if (v15 == v17 && v16 == v18)
      {
        swift_bridgeObjectRelease_n();
        sub_C2580((uint64_t)v27);
      }
      else
      {
        char v20 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_C2580((uint64_t)v27);
        if ((v20 & 1) == 0) {
          goto LABEL_32;
        }
      }
      BOOL v8 = 1;
      break;
    case 5u:
      int v11 = *(unsigned __int8 *)sub_129A8((uint64_t)v29);
      sub_1269C((uint64_t)v26, (uint64_t)v24);
      if (sub_1299C((uint64_t)v24) != 5) {
        goto LABEL_30;
      }
      int v14 = *(unsigned __int8 *)sub_129A8((uint64_t)v24);
      goto LABEL_15;
    default:
      unint64_t v4 = (const void *)sub_129A8((uint64_t)v29);
      sub_1269C((uint64_t)v26, (uint64_t)v24);
      if (sub_1299C((uint64_t)v24))
      {
        sub_1269C((uint64_t)v25, (uint64_t)__dst);
        uint64_t v5 = (void *)sub_129A8((uint64_t)__dst);
        sub_12384(v5);
LABEL_30:
        sub_127D4(v26, sub_126F8);
LABEL_31:
        sub_C2580((uint64_t)v27);
LABEL_32:
        BOOL v8 = 0;
      }
      else
      {
        uint64_t v21 = (const void *)sub_129A8((uint64_t)v24);
        memcpy(__dst, v4, 0x229uLL);
        memcpy(v22, v21, 0x229uLL);
        sub_127D4(v26, sub_126F8);
        sub_127D4(v25, sub_126F8);
        sub_127D4(v25, sub_126F8);
        sub_127D4(v26, sub_126F8);
        BOOL v8 = _s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(__dst, v22);
        sub_C2580((uint64_t)v27);
        sub_127D4(v26, sub_128C0);
        sub_127D4(v25, sub_128C0);
      }
      break;
  }
  return v8;
}

uint64_t _s20BooksPersonalization21ScorableAttributeTypeO2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned __int8 *a2)
{
  unsigned int v2 = *a1;
  unsigned int v3 = *a2;
  switch(v2 >> 6)
  {
    case 1u:
      if ((v3 & 0xC0) != 0x40) {
        return 0;
      }
      v3 &= 0x3Fu;
      v2 &= 0x3Fu;
      if (v2) {
        goto LABEL_10;
      }
      goto LABEL_4;
    case 2u:
      switch(*a1)
      {
        case 0x81:
          return v3 == 129;
        case 0x82:
          return v3 == 130;
        case 0x83:
          return v3 == 131;
        default:
          return v3 == 128;
      }
    case 3u:
      return v3 == 192;
    default:
      if (v3 > 0x3F) {
        return 0;
      }
      if (*a1)
      {
LABEL_10:
        unint64_t v4 = 0xE800000000000000;
        if (v2 == 1) {
          uint64_t v5 = 0x656E4F6C6576656CLL;
        }
        else {
          uint64_t v5 = 0x6F77546C6576656CLL;
        }
      }
      else
      {
LABEL_4:
        unint64_t v4 = 0xE600000000000000;
        uint64_t v5 = 0x73657661656CLL;
      }
      uint64_t v7 = 0x656E4F6C6576656CLL;
      if (v3 != 1) {
        uint64_t v7 = 0x6F77546C6576656CLL;
      }
      if (v3) {
        uint64_t v8 = v7;
      }
      else {
        uint64_t v8 = 0x73657661656CLL;
      }
      if (v3) {
        unint64_t v9 = 0xE800000000000000;
      }
      else {
        unint64_t v9 = 0xE600000000000000;
      }
      if (v5 == v8 && v4 == v9)
      {
        swift_bridgeObjectRelease_n();
        return 1;
      }
      else
      {
        char v10 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return v10 & 1;
      }
  }
}

unint64_t sub_BCF9C()
{
  unint64_t result = qword_26EFB0;
  if (!qword_26EFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFB0);
  }
  return result;
}

unint64_t sub_BCFF0()
{
  unint64_t result = qword_26EFB8;
  if (!qword_26EFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFB8);
  }
  return result;
}

unint64_t sub_BD044()
{
  unint64_t result = qword_26EFC0;
  if (!qword_26EFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFC0);
  }
  return result;
}

unint64_t sub_BD098()
{
  unint64_t result = qword_26EFC8;
  if (!qword_26EFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFC8);
  }
  return result;
}

unint64_t sub_BD0EC()
{
  unint64_t result = qword_26EFD0;
  if (!qword_26EFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFD0);
  }
  return result;
}

unint64_t sub_BD140()
{
  unint64_t result = qword_26EFD8;
  if (!qword_26EFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFD8);
  }
  return result;
}

unint64_t sub_BD194()
{
  unint64_t result = qword_26EFE0;
  if (!qword_26EFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFE0);
  }
  return result;
}

unint64_t sub_BD1E8()
{
  unint64_t result = qword_26EFE8;
  if (!qword_26EFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26EFE8);
  }
  return result;
}

uint64_t sub_BD23C(void *__src)
{
  uint64_t v2 = *(void *)(v1 + 16);
  memcpy(__dst, __src, 0x229uLL);
  v4[2] = __dst;
  return sub_BA0D8((uint64_t)_swiftEmptySetSingleton, (uint64_t (*)(uint64_t *, char *))sub_C23B4, (uint64_t)v4, v2);
}

unint64_t sub_BD2B0()
{
  unint64_t result = qword_26F038;
  if (!qword_26F038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F038);
  }
  return result;
}

void *sub_BD304(uint64_t a1)
{
  uint64_t v2 = sub_1FB1E0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v30 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_12124(&qword_26F100);
    uint64_t v9 = sub_1FC030();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    long long v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_C2370(&qword_26F108);
      uint64_t v16 = sub_1FB790();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v6, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_C2370(&qword_26F110);
          char v23 = sub_1FB7D0();
          uint64_t v24 = *v15;
          (*v15)(v6, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        unint64_t result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return _swiftEmptySetSingleton;
}

Swift::Int sub_BD5F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_26C558);
    uint64_t v3 = sub_1FC030();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v24 = v1;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(v25 + v4);
      sub_1FC7E0();
      if (v6) {
        uint64_t v7 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v7 = 0x6B6F6F6265;
      }
      if (v6) {
        unint64_t v8 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v8 = 0xE500000000000000;
      }
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int result = sub_1FC830();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        char v23 = v6;
        uint64_t v15 = ~v10;
        do
        {
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11)) {
            uint64_t v16 = 0x6F6F626F69647561;
          }
          else {
            uint64_t v16 = 0x6B6F6F6265;
          }
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11)) {
            unint64_t v17 = 0xE90000000000006BLL;
          }
          else {
            unint64_t v17 = 0xE500000000000000;
          }
          if (v16 == v7 && v17 == v8)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
          char v19 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v19) {
            goto LABEL_4;
          }
          unint64_t v11 = (v11 + 1) & v15;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
        }
        while ((v13 & (1 << v11)) != 0);
        LOBYTE(v6) = v23;
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(*(void *)(v3 + 48) + v11) = v6;
      uint64_t v20 = *(void *)(v3 + 16);
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        break;
      }
      *(void *)(v3 + 16) = v22;
LABEL_4:
      if (++v4 == v24) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)&_swiftEmptySetSingleton;
  }
  return result;
}

Swift::Int sub_BD7F0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_26C548);
    uint64_t v3 = sub_1FC030();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v25 = a1 + 32;
    while (1)
    {
      int v6 = (uint64_t *)(v25 + 16 * v4);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      sub_1FC7E0();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      Swift::Int result = sub_1FC830();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = result & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0)
      {
        uint64_t v15 = *(void *)(v3 + 48);
        uint64_t v16 = (void *)(v15 + 16 * v11);
        BOOL v17 = *v16 == v8 && v16[1] == v7;
        if (v17 || (Swift::Int result = sub_1FC5F0(), (result & 1) != 0))
        {
LABEL_3:
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
        uint64_t v18 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v18;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            break;
          }
          char v19 = (void *)(v15 + 16 * v11);
          if (*v19 != v8 || v19[1] != v7)
          {
            Swift::Int result = sub_1FC5F0();
            if ((result & 1) == 0) {
              continue;
            }
          }
          goto LABEL_3;
        }
      }
      *(void *)(v5 + 8 * v12) = v14 | v13;
      BOOL v21 = (void *)(*(void *)(v3 + 48) + 16 * v11);
      *BOOL v21 = v8;
      v21[1] = v7;
      uint64_t v22 = *(void *)(v3 + 16);
      BOOL v23 = __OFADD__(v22, 1);
      uint64_t v24 = v22 + 1;
      if (v23)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v24;
LABEL_4:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_BD994(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a1;
  long long v5 = *(_OWORD *)(a2 + 3);
  long long v63 = *(_OWORD *)(a2 + 1);
  long long v64 = v5;
  long long v6 = *(_OWORD *)(a2 + 7);
  long long v65 = *(_OWORD *)(a2 + 5);
  *(_OWORD *)char v66 = v6;
  if ((_BYTE)v63) {
    uint64_t v7 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v7 = 0x6B6F6F6265;
  }
  *(_OWORD *)&v66[9] = *(_OWORD *)((char *)a2 + 65);
  if ((_BYTE)v63) {
    unint64_t v8 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v8 = 0xE500000000000000;
  }
  char v39 = v63;
  char v35 = v63 ^ 1;
  uint64_t v40 = (uint64_t)(a2 + 20);
  uint64_t v9 = 0;
  uint64_t v44 = v2 - 1;
  uint64_t v10 = _swiftEmptyArrayStorage;
  uint64_t v42 = v7;
  uint64_t v43 = swift_bridgeObjectRetain();
  unint64_t v41 = v8;
  while (1)
  {
    uint64_t v11 = *(unsigned char *)(v4 + v9 + 32) ? 0x6F6F626F69647561 : 0x6B6F6F6265;
    unint64_t v12 = *(unsigned char *)(v4 + v9 + 32) ? 0xE90000000000006BLL : 0xE500000000000000;
    if (v7 == v11 && v8 == v12)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v14 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        if (v65) {
          goto LABEL_30;
        }
        uint64_t v54 = *((void *)&v63 + 1);
        uint64_t v15 = *((void *)&v64 + 1);
        *(void *)&long long v55 = v64;
        *((void *)&v55 + 1) = *a2;
        uint64_t v38 = *((void *)&v65 + 1);
        uint64_t v16 = *(void *)&v66[8];
        uint64_t v56 = *(void *)&v66[16];
        uint64_t v57 = *(void *)v66;
        int v67 = v66[24];
        char v17 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v50 = v15;
        if (v17)
        {
          uint64_t v45 = v16;
          sub_C2548((uint64_t)&v63);
          char v47 = v39;
          *((void *)&v55 + 1) = v15;
        }
        else
        {
          uint64_t v25 = v38;
          if (v16 == 2)
          {
            uint64_t v45 = v16;
            uint64_t v26 = v56;
            uint64_t v27 = v57;
          }
          else if (v67)
          {
            uint64_t v25 = 0;
            uint64_t v27 = 0;
            uint64_t v26 = 0;
            int v67 = 0;
            uint64_t v45 = 2;
          }
          else
          {
            int v67 = 0;
            uint64_t v45 = v16 & 1;
            uint64_t v27 = v56;
            uint64_t v26 = v57;
          }
          uint64_t v38 = v25;
          uint64_t v56 = v26;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          char v47 = v35;
          uint64_t v57 = v27;
        }
        uint64_t v28 = a2[11];
        uint64_t v18 = a2[14];
        uint64_t v58 = a2[13];
        uint64_t v59 = a2[12];
        uint64_t v29 = a2[16];
        uint64_t v37 = a2[15];
        unint64_t v30 = a2[17];
        uint64_t v31 = a2[18];
        uint64_t v32 = a2[19];
        sub_12588(v40, (uint64_t)__src);
        uint64_t v52 = v28;
        uint64_t v53 = a2[68];
        uint64_t v60 = v29;
        unint64_t v51 = v30;
        uint64_t v48 = v32;
        uint64_t v49 = v31;
        if (v30 >> 1 == 0xFFFFFFFF)
        {
          uint64_t v19 = v37;
          swift_bridgeObjectRetain();
          sub_12588((uint64_t)__src, (uint64_t)v62);
          char v21 = 0;
        }
        else
        {
          sub_12430(v28, v59, v58, v18, v37, v29, v30);
          sub_12430(v28, v59, v58, v18, v37, v29, v30);
          swift_bridgeObjectRetain();
          sub_161E30(&v68);
          if (!v36)
          {
            uint64_t v36 = 0;
            uint64_t v19 = v37;
            sub_1255C(v28, v59, v58, v18, v37, v29, v51);
            char v46 = v68;
            sub_12588((uint64_t)__src, (uint64_t)v62);
            char v21 = 0;
            goto LABEL_43;
          }
          swift_errorRelease();
          uint64_t v19 = v37;
          sub_1255C(v28, v59, v58, v18, v37, v29, v51);
          sub_12588((uint64_t)__src, (uint64_t)v62);
          char v21 = 0;
          uint64_t v36 = 0;
        }
        char v46 = 12;
LABEL_43:
        uint64_t v20 = v38;
        goto LABEL_25;
      }
    }
    char v46 = *((unsigned char *)a2 + 552);
    uint64_t v53 = a2[68];
    sub_12588(v40, (uint64_t)__src);
    uint64_t v18 = a2[14];
    uint64_t v58 = a2[13];
    uint64_t v59 = a2[12];
    uint64_t v19 = a2[15];
    uint64_t v60 = a2[16];
    unint64_t v51 = a2[17];
    uint64_t v52 = a2[11];
    uint64_t v48 = a2[19];
    uint64_t v49 = a2[18];
    uint64_t v50 = *a2;
    uint64_t v20 = *((void *)&v65 + 1);
    uint64_t v45 = *(void *)&v66[8];
    uint64_t v56 = *(void *)&v66[16];
    uint64_t v57 = *(void *)v66;
    int v67 = v66[24];
    char v21 = v65;
    long long v55 = v64;
    uint64_t v54 = *((void *)&v63 + 1);
    sub_12384(a2);
    sub_12588((uint64_t)__src, (uint64_t)v62);
    char v47 = v39;
LABEL_25:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_41974(0, v10[2] + 1, 1, v10);
    }
    unint64_t v23 = v10[2];
    unint64_t v22 = v10[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t v33 = sub_41974((void *)(v22 > 1), v23 + 1, 1, v10);
      uint64_t v24 = v19;
      uint64_t v10 = v33;
    }
    else
    {
      uint64_t v24 = v19;
    }
    __src[0] = v50;
    LOBYTE(__src[1]) = v47;
    __src[2] = v54;
    *(_OWORD *)&__src[3] = v55;
    LOBYTE(__src[5]) = v21;
    __src[6] = v20;
    __src[7] = v57;
    __src[8] = v45;
    __src[9] = v56;
    LOBYTE(__src[10]) = v67;
    __src[11] = v52;
    __src[12] = v59;
    __src[13] = v58;
    __src[14] = v18;
    __src[15] = v24;
    __src[16] = v60;
    __src[17] = v51;
    __src[18] = v49;
    __src[19] = v48;
    sub_12588((uint64_t)v62, (uint64_t)&__src[20]);
    __src[68] = v53;
    LOBYTE(__src[69]) = v46;
    void v10[2] = v23 + 1;
    memcpy(&v10[70 * v23 + 4], __src, 0x229uLL);
    uint64_t v7 = v42;
    uint64_t v4 = v43;
    unint64_t v8 = v41;
LABEL_30:
    if (v44 == v9) {
      break;
    }
    ++v9;
  }
  swift_bridgeObjectRelease();
  return v10;
}

uint64_t sub_BDF88(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_26C528);
    uint64_t v3 = sub_1FC030();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v7 = *(void *)(a1 + 32 + 8 * v4);
      uint64_t result = sub_1FC7D0();
      unint64_t v9 = result & v6;
      unint64_t v10 = (result & (unint64_t)v6) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v6);
      uint64_t v13 = *(void *)(v3 + 48);
      if ((v12 & v11) != 0)
      {
        while (*(void *)(v13 + 8 * v9) != v7)
        {
          unint64_t v9 = (v9 + 1) & v6;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
          if ((v11 & (1 << v9)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v10) = v12 | v11;
        *(void *)(v13 + 8 * v9) = v7;
        uint64_t v14 = *(void *)(v3 + 16);
        BOOL v15 = __OFADD__(v14, 1);
        uint64_t v16 = v14 + 1;
        if (v15)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v16;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_BE0A4(uint64_t a1, uint64_t a2, void (*a3)(void *__return_ptr, uint64_t *))
{
  uint64_t v22 = a1;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v9) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v14);
    ++v11;
    if (!v15)
    {
      int64_t v11 = v14 + 1;
      if (v14 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v5 + 8 * v11);
      if (!v15)
      {
        int64_t v11 = v14 + 2;
        if (v14 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v5 + 8 * v11);
        if (!v15)
        {
          int64_t v11 = v14 + 3;
          if (v14 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v5 + 8 * v11);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
LABEL_5:
    uint64_t v19 = *(void *)(*(void *)(a2 + 48) + 8 * v13);
    a3(v17, &v19);
    sub_1269C((uint64_t)v17, (uint64_t)v21);
    sub_7E24((uint64_t)v18, (uint64_t)v21);
    sub_1269C((uint64_t)v18, (uint64_t)v20);
    uint64_t result = sub_127D4(v20, sub_128C0);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v9)
  {
LABEL_23:
    swift_release();
    return v22;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
    int64_t v11 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

Swift::Int sub_BE278(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_26C580);
    uint64_t v3 = sub_1FC030();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1FC7E0();
      sub_1FC7F0(v7);
      Swift::Int result = sub_1FC830();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v10) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)_swiftEmptySetSingleton;
}

uint64_t sub_BE3BC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x726F68747561 && a2 == 0xE600000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x80000000002182A0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x65726E6567 && a2 == 0xE500000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x80000000002182C0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6B6F6F4264656573 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x80000000002182E0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

void *sub_BE688(uint64_t a1)
{
  uint64_t v1 = __chkstk_darwin(a1);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1;
    sub_12124(&qword_26C5A0);
    uint64_t v4 = sub_1FC030();
    uint64_t v5 = 0;
    uint64_t v6 = v4 + 56;
    uint64_t v196 = v3 + 32;
    uint64_t v182 = v2;
LABEL_6:
    sub_1269C(v196 + 560 * v5, (uint64_t)v225);
    sub_1FC7E0();
    sub_1269C((uint64_t)v225, (uint64_t)v226);
    uint64_t v197 = v5 + 1;
    switch(sub_1299C((uint64_t)v226))
    {
      case 1u:
        Swift::UInt64 v10 = *(void *)sub_129A8((uint64_t)v226);
        Swift::UInt v11 = 1;
        goto LABEL_10;
      case 2u:
        Swift::UInt64 v10 = *(void *)sub_129A8((uint64_t)v226);
        Swift::UInt v11 = 2;
LABEL_10:
        sub_1FC7F0(v11);
        Swift::UInt64 v12 = v10;
        uint64_t v6 = v4 + 56;
        sub_1FC820(v12);
        break;
      case 3u:
        Swift::UInt64 v13 = *(void *)sub_129A8((uint64_t)v226);
        Swift::UInt v14 = 3;
        goto LABEL_13;
      case 4u:
        Swift::UInt64 v13 = *(void *)sub_129A8((uint64_t)v226);
        Swift::UInt v14 = 4;
LABEL_13:
        sub_1FC7F0(v14);
        Swift::UInt64 v15 = v13;
        uint64_t v6 = v4 + 56;
        sub_1FC820(v15);
        goto LABEL_15;
      case 5u:
        sub_129A8((uint64_t)v226);
        sub_1FC7F0(5uLL);
LABEL_15:
        sub_1FB8C0();
        swift_bridgeObjectRelease();
        break;
      default:
        uint64_t v7 = sub_129A8((uint64_t)v226);
        sub_1FC7F0(0);
        unint64_t v8 = (const void *)v7;
        uint64_t v6 = v4 + 56;
        memcpy(v224, v8, 0x229uLL);
        sub_1269C((uint64_t)v225, (uint64_t)v222);
        uint64_t v9 = (void *)sub_129A8((uint64_t)v222);
        sub_12384(v9);
        SeedBook.hash(into:)((uint64_t)v221);
        break;
    }
    Swift::Int v16 = sub_1FC830();
    uint64_t v17 = ~(-1 << *(unsigned char *)(v4 + 32));
    unint64_t v18 = v16 & v17;
    unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
    uint64_t v20 = *(void *)(v6 + 8 * v19);
    uint64_t v21 = 1 << (v16 & v17);
    if ((v21 & v20) == 0) {
      goto LABEL_219;
    }
    while (1)
    {
      sub_1269C(*(void *)(v4 + 48) + 560 * v18, (uint64_t)v221);
      sub_1269C((uint64_t)v221, (uint64_t)v222);
      sub_1269C((uint64_t)v225, (uint64_t)&v223);
      sub_1269C((uint64_t)v221, (uint64_t)v224);
      switch(sub_1299C((uint64_t)v224))
      {
        case 1u:
          uint64_t v24 = *(void *)sub_129A8((uint64_t)v224);
          sub_1269C((uint64_t)v225, (uint64_t)v220);
          if (sub_1299C((uint64_t)v220) == 1) {
            goto LABEL_26;
          }
          goto LABEL_20;
        case 2u:
          uint64_t v24 = *(void *)sub_129A8((uint64_t)v224);
          sub_1269C((uint64_t)v225, (uint64_t)v220);
          if (sub_1299C((uint64_t)v220) != 2) {
            goto LABEL_20;
          }
LABEL_26:
          uint64_t v25 = *(void *)sub_129A8((uint64_t)v220);
          sub_C2580((uint64_t)v222);
          if (v24 == v25) {
            goto LABEL_5;
          }
          goto LABEL_21;
        case 3u:
          uint64_t v26 = sub_129A8((uint64_t)v224);
          uint64_t v27 = *(void *)v26;
          int v28 = *(unsigned __int8 *)(v26 + 8);
          sub_1269C((uint64_t)v225, (uint64_t)v220);
          if (sub_1299C((uint64_t)v220) == 3) {
            goto LABEL_31;
          }
          goto LABEL_20;
        case 4u:
          uint64_t v29 = sub_129A8((uint64_t)v224);
          uint64_t v27 = *(void *)v29;
          int v28 = *(unsigned __int8 *)(v29 + 8);
          sub_1269C((uint64_t)v225, (uint64_t)v220);
          if (sub_1299C((uint64_t)v220) != 4) {
            goto LABEL_20;
          }
LABEL_31:
          uint64_t v30 = sub_129A8((uint64_t)v220);
          if (v27 == *(void *)v30)
          {
            int v31 = *(unsigned __int8 *)(v30 + 8);
LABEL_35:
            if (v28) {
              uint64_t v32 = 0x6F6F626F69647561;
            }
            else {
              uint64_t v32 = 0x6B6F6F6265;
            }
            if (v28) {
              unint64_t v33 = 0xE90000000000006BLL;
            }
            else {
              unint64_t v33 = 0xE500000000000000;
            }
            if (v31) {
              uint64_t v34 = 0x6F6F626F69647561;
            }
            else {
              uint64_t v34 = 0x6B6F6F6265;
            }
            if (v31) {
              unint64_t v35 = 0xE90000000000006BLL;
            }
            else {
              unint64_t v35 = 0xE500000000000000;
            }
            if (v32 == v34 && v33 == v35)
            {
              swift_bridgeObjectRelease_n();
              sub_C2580((uint64_t)v222);
              goto LABEL_4;
            }
            char v36 = sub_1FC5F0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_C2580((uint64_t)v222);
            uint64_t v6 = v4 + 56;
            if (v36) {
              goto LABEL_5;
            }
          }
          else
          {
            sub_C2580((uint64_t)v222);
          }
          goto LABEL_21;
        case 5u:
          int v28 = *(unsigned __int8 *)sub_129A8((uint64_t)v224);
          sub_1269C((uint64_t)v225, (uint64_t)v220);
          if (sub_1299C((uint64_t)v220) != 5) {
            goto LABEL_20;
          }
          int v31 = *(unsigned __int8 *)sub_129A8((uint64_t)v220);
          goto LABEL_35;
        default:
          uint64_t v22 = sub_129A8((uint64_t)v224);
          sub_1269C((uint64_t)v225, (uint64_t)v220);
          if (sub_1299C((uint64_t)v220))
          {
            sub_1269C((uint64_t)v221, (uint64_t)&v202);
            unint64_t v23 = (void *)sub_129A8((uint64_t)&v202);
            sub_12384(v23);
            sub_12384(v23);
LABEL_20:
            sub_127D4(v225, sub_126F8);
            sub_C2580((uint64_t)v222);
            sub_127D4(v221, sub_128C0);
            goto LABEL_21;
          }
          uint64_t v37 = (void *)sub_129A8((uint64_t)v220);
          if (*(void *)v22 == *v37)
          {
            uint64_t v38 = v37;
            uint64_t v189 = *(void *)(v22 + 24);
            uint64_t v192 = *(void *)(v22 + 16);
            uint64_t v172 = *(void *)(v22 + 32);
            char v183 = *(unsigned char *)(v22 + 40);
            uint64_t v161 = *(void *)(v22 + 48);
            uint64_t v154 = *(void *)(v22 + 56);
            uint64_t v177 = *(unsigned __int8 *)(v22 + 64);
            uint64_t v39 = *(void *)(v22 + 72);
            char v145 = *(unsigned char *)(v22 + 80);
            if (*(unsigned char *)(v22 + 8)) {
              uint64_t v40 = 0x6F6F626F69647561;
            }
            else {
              uint64_t v40 = 0x6B6F6F6265;
            }
            if (*(unsigned char *)(v22 + 8)) {
              unint64_t v41 = 0xE90000000000006BLL;
            }
            else {
              unint64_t v41 = 0xE500000000000000;
            }
            uint64_t v42 = v38[2];
            uint64_t v187 = v38[3];
            uint64_t v175 = *((unsigned __int8 *)v38 + 64);
            if (*((unsigned char *)v38 + 8)) {
              uint64_t v43 = 0x6F6F626F69647561;
            }
            else {
              uint64_t v43 = 0x6B6F6F6265;
            }
            if (*((unsigned char *)v38 + 8)) {
              unint64_t v44 = 0xE90000000000006BLL;
            }
            else {
              unint64_t v44 = 0xE500000000000000;
            }
            uint64_t v143 = v38[9];
            char v147 = *((unsigned char *)v38 + 80);
            uint64_t v149 = v38[7];
            uint64_t v156 = v38[6];
            uint64_t v167 = v38[4];
            char v185 = *((unsigned char *)v38 + 40);
            if (v40 == v43 && v41 == v44)
            {
              sub_127D4(v221, sub_126F8);
              sub_127D4(v225, sub_126F8);
              sub_127D4(v221, sub_126F8);
              sub_127D4(v225, sub_126F8);
              sub_127D4(v221, sub_126F8);
              swift_bridgeObjectRelease_n();
            }
            else
            {
              char v141 = sub_1FC5F0();
              sub_127D4(v221, sub_126F8);
              sub_127D4(v225, sub_126F8);
              sub_127D4(v221, sub_126F8);
              sub_127D4(v225, sub_126F8);
              sub_127D4(v221, sub_126F8);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if ((v141 & 1) == 0) {
                goto LABEL_190;
              }
            }
            uint64_t v45 = *(void *)(v192 + 16);
            uint64_t v2 = v182;
            if (v45 != *(void *)(v42 + 16)) {
              goto LABEL_182;
            }
            if (v45 && v192 != v42)
            {
              uint64_t v46 = 0;
              while (1)
              {
                char v47 = (void *)(v192 + 32 + 16 * v46);
                uint64_t v48 = (void *)(v42 + 32 + 16 * v46);
                if (*v47 != *v48) {
                  break;
                }
                uint64_t v49 = (void *)v47[1];
                uint64_t v50 = (void *)v48[1];
                uint64_t v51 = v49[2];
                if (v51 != v50[2]) {
                  break;
                }
                if (v51) {
                  BOOL v52 = v49 == v50;
                }
                else {
                  BOOL v52 = 1;
                }
                if (!v52)
                {
                  if (v49[4] != v50[4]) {
                    break;
                  }
                  if (v51 != 1)
                  {
                    if (v49[5] != v50[5]) {
                      break;
                    }
                    uint64_t v53 = v49 + 6;
                    uint64_t v54 = v50 + 6;
                    uint64_t v55 = v51 - 2;
                    while (v55)
                    {
                      uint64_t v57 = *v53++;
                      uint64_t v56 = v57;
                      uint64_t v58 = *v54++;
                      --v55;
                      if (v56 != v58) {
                        goto LABEL_182;
                      }
                    }
                  }
                }
                if (++v46 == v45) {
                  goto LABEL_89;
                }
              }
LABEL_182:
              sub_C2580((uint64_t)v222);
              sub_127D4(v225, sub_128C0);
              sub_127D4(v221, sub_128C0);
              sub_127D4(v221, sub_128C0);
              goto LABEL_191;
            }
LABEL_89:
            if ((sub_3C6B4(v189, v187) & 1) == 0) {
              goto LABEL_182;
            }
            if (v183)
            {
              if ((v185 & 1) == 0) {
                goto LABEL_182;
              }
            }
            else if ((v185 & 1) != 0 || v172 != v167)
            {
              goto LABEL_182;
            }
            if (v177 == 2)
            {
              if (v175 != 2) {
                goto LABEL_182;
              }
            }
            else
            {
              if (v175 == 2 || v161 != v156 || v154 != v149 || ((((v175 & 1) == 0) ^ v177) & 1) == 0) {
                goto LABEL_182;
              }
              if (v145)
              {
                if ((v147 & 1) == 0) {
                  goto LABEL_182;
                }
              }
              else if ((v147 & 1) != 0 || v39 != v143)
              {
                goto LABEL_182;
              }
            }
            uint64_t v60 = *(void *)(v22 + 88);
            uint64_t v59 = *(void *)(v22 + 96);
            uint64_t v61 = *(uint64_t *)(v22 + 104);
            uint64_t v62 = *(uint64_t *)(v22 + 112);
            uint64_t v63 = *(uint64_t *)(v22 + 120);
            uint64_t v64 = *(uint64_t *)(v22 + 128);
            unint64_t v66 = *(void *)(v22 + 136);
            double v65 = *(double *)(v22 + 144);
            double v67 = *(double *)(v22 + 152);
            uint64_t v68 = v38[11];
            uint64_t v69 = v38[12];
            uint64_t v71 = v38[13];
            double v70 = *((double *)v38 + 14);
            unint64_t v73 = v38[17];
            double v72 = *((double *)v38 + 18);
            unint64_t v74 = v73 & 0xFFFFFFFFFFFFFFFELL;
            uint64_t v76 = v38[15];
            uint64_t v75 = v38[16];
            double v77 = *((double *)v38 + 19);
            if (v66 >> 1 == 0xFFFFFFFF)
            {
              if (v74 == 0x1FFFFFFFELL) {
                goto LABEL_99;
              }
            }
            else if (v74 != 0x1FFFFFFFELL)
            {
              uint64_t v202 = *(void *)(v22 + 88);
              uint64_t v203 = v59;
              uint64_t v204 = v61;
              uint64_t v205 = v62;
              uint64_t v206 = v63;
              uint64_t v207 = v64;
              unint64_t v208 = v66;
              double v209 = v65;
              double v210 = v67;
              uint64_t v211 = v68;
              uint64_t v212 = v69;
              uint64_t v213 = v71;
              double v214 = v70;
              uint64_t v186 = v76;
              double v188 = v72;
              uint64_t v215 = v76;
              uint64_t v191 = v75;
              unint64_t v194 = v73;
              uint64_t v216 = v75;
              unint64_t v217 = v73;
              double v218 = v72;
              double v184 = v77;
              double v219 = v77;
              switch(v66 >> 62)
              {
                case 1uLL:
                  if (v73 >> 62 != 1) {
                    goto LABEL_189;
                  }
                  double v89 = *(double *)&v61;
                  double v90 = v70;
                  if (v60 != v68 || v59 != v69)
                  {
                    uint64_t v91 = v59;
                    uint64_t v179 = v61;
                    double v163 = v70;
                    uint64_t v169 = v63;
                    uint64_t v158 = v69;
                    uint64_t v92 = v64;
                    uint64_t v151 = v68;
                    char v93 = sub_1FC5F0();
                    uint64_t v59 = v91;
                    uint64_t v61 = v179;
                    uint64_t v68 = v151;
                    uint64_t v63 = v169;
                    uint64_t v64 = v92;
                    uint64_t v69 = v158;
                    double v70 = v163;
                    if ((v93 & 1) == 0) {
                      goto LABEL_189;
                    }
                  }
                  if (v89 != *(double *)&v71 || *(double *)&v62 != v90) {
                    goto LABEL_189;
                  }
                  if (v66) {
                    goto LABEL_139;
                  }
                  goto LABEL_120;
                case 2uLL:
                  if (v73 >> 62 != 2) {
                    goto LABEL_189;
                  }
                  double v99 = *(double *)&v61;
                  double v100 = v70;
                  if (v60 != v68 || v59 != v69)
                  {
                    uint64_t v101 = v59;
                    double v176 = v65;
                    uint64_t v180 = v61;
                    double v164 = v70;
                    uint64_t v170 = v63;
                    uint64_t v159 = v69;
                    uint64_t v102 = v64;
                    double v173 = v67;
                    uint64_t v152 = v68;
                    char v103 = sub_1FC5F0();
                    uint64_t v59 = v101;
                    double v65 = v176;
                    uint64_t v61 = v180;
                    uint64_t v68 = v152;
                    uint64_t v63 = v170;
                    double v67 = v173;
                    uint64_t v64 = v102;
                    uint64_t v69 = v159;
                    double v70 = v164;
                    if ((v103 & 1) == 0) {
                      goto LABEL_189;
                    }
                  }
                  if (v99 != *(double *)&v71 || *(double *)&v62 != v100) {
                    goto LABEL_189;
                  }
                  if (v66)
                  {
                    if ((v194 & 1) == 0) {
                      goto LABEL_189;
                    }
                  }
                  else if ((v194 & 1) != 0 {
                         || *(double *)&v63 != *(double *)&v186
                  }
                         || *(double *)&v64 != *(double *)&v191)
                  {
LABEL_189:
                    uint64_t v122 = v68;
                    unint64_t v123 = v66;
                    uint64_t v124 = v69;
                    uint64_t v125 = *(void *)&v70;
                    sub_12430(v60, v59, v61, v62, v63, v64, v123);
                    sub_12430(v122, v124, v71, v125, v186, v191, v194);
                    sub_7CC28(&v202, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
LABEL_190:
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    uint64_t v2 = v182;
                    goto LABEL_191;
                  }
                  double v126 = v65;
                  uint64_t v127 = v60;
                  uint64_t v128 = v68;
                  unint64_t v129 = v66;
                  uint64_t v130 = v69;
                  uint64_t v166 = *(void *)&v70;
                  double v174 = v67;
                  sub_12430(v127, v59, v61, v62, v63, v64, v129);
                  sub_12430(v128, v130, v71, v166, v186, v191, v194);
                  sub_7CC28(&v202, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
                  if (v126 != v188 || v174 != v184) {
                    goto LABEL_190;
                  }
                  break;
                case 3uLL:
                  if (v73 >> 62 != 3) {
                    goto LABEL_189;
                  }
                  uint64_t v104 = *(void *)(v60 + 16);
                  if (v104 != *(void *)(v68 + 16)) {
                    goto LABEL_189;
                  }
                  uint64_t v160 = v69;
                  *(double *)&uint64_t v165 = v70;
                  uint64_t v171 = v63;
                  uint64_t v153 = v68;
                  uint64_t v155 = v71;
                  uint64_t v181 = v61;
                  uint64_t v148 = v59;
                  if (!v104 || v60 == v68) {
                    goto LABEL_186;
                  }
                  uint64_t v105 = 0;
                  do
                  {
                    double v107 = *(double *)(v60 + v105 + 48);
                    double v106 = *(double *)(v60 + v105 + 56);
                    double v108 = *(double *)(v60 + v105 + 64);
                    double v109 = *(double *)(v60 + v105 + 72);
                    char v110 = *(unsigned char *)(v60 + v105 + 80);
                    double v112 = *(double *)(v68 + v105 + 48);
                    double v111 = *(double *)(v68 + v105 + 56);
                    double v113 = *(double *)(v68 + v105 + 64);
                    double v114 = *(double *)(v68 + v105 + 72);
                    int v115 = *(unsigned __int8 *)(v68 + v105 + 80);
                    if (*(void *)(v60 + v105 + 32) == *(void *)(v68 + v105 + 32)
                      && *(void *)(v60 + v105 + 40) == *(void *)(v68 + v105 + 40))
                    {
                      BOOL v116 = v107 == v112 && v106 == v111;
                      uint64_t v61 = v181;
                      uint64_t v59 = v148;
                      if (!v116) {
                        goto LABEL_189;
                      }
                    }
                    else
                    {
                      uint64_t v117 = v64;
                      uint64_t v146 = v104;
                      int v142 = *(unsigned __int8 *)(v68 + v105 + 80);
                      char v144 = *(unsigned char *)(v60 + v105 + 80);
                      char v118 = sub_1FC5F0();
                      int v115 = v142;
                      char v110 = v144;
                      uint64_t v104 = v146;
                      uint64_t v59 = v148;
                      uint64_t v68 = v153;
                      uint64_t v71 = v155;
                      uint64_t v63 = v171;
                      uint64_t v64 = v117;
                      uint64_t v69 = v160;
                      double v70 = *(double *)&v165;
                      uint64_t v61 = v181;
                      if ((v118 & 1) == 0) {
                        goto LABEL_189;
                      }
                      if (v107 != v112 || v106 != v111) {
                        goto LABEL_189;
                      }
                    }
                    if (v110)
                    {
                      if (!v115) {
                        goto LABEL_189;
                      }
                    }
                    else
                    {
                      if (v115) {
                        goto LABEL_189;
                      }
                      if (v108 != v113 || v109 != v114) {
                        goto LABEL_189;
                      }
                    }
                    v105 += 56;
                    --v104;
                  }
                  while (v104);
LABEL_186:
                  uint64_t v121 = v61;
                  uint64_t v140 = v64;
                  sub_12430(v60, v59, v61, v62, v63, v64, v66);
                  sub_12430(v60, v148, v121, v62, v171, v140, v66);
                  sub_12430(v60, v148, v181, v62, v171, v140, v66);
                  sub_12430(v153, v160, v155, v165, v186, v191, v194);
                  char v195 = sub_1D99A4(v148, v160);
                  sub_7CC28(&v202, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
                  sub_1255C(v60, v148, v181, v62, v171, v140, v66);
                  sub_1255C(v60, v148, v181, v62, v171, v140, v66);
                  if (v195) {
                    break;
                  }
                  goto LABEL_190;
                default:
                  if (v73 >> 62) {
                    goto LABEL_189;
                  }
                  double v82 = *(double *)&v61;
                  double v83 = v70;
                  if (v60 != v68 || v59 != v69)
                  {
                    uint64_t v84 = v59;
                    uint64_t v178 = v61;
                    double v162 = v70;
                    uint64_t v168 = v63;
                    uint64_t v157 = v69;
                    uint64_t v85 = v64;
                    uint64_t v150 = v68;
                    char v86 = sub_1FC5F0();
                    uint64_t v59 = v84;
                    uint64_t v61 = v178;
                    uint64_t v68 = v150;
                    uint64_t v63 = v168;
                    uint64_t v64 = v85;
                    uint64_t v69 = v157;
                    double v70 = v162;
                    if ((v86 & 1) == 0) {
                      goto LABEL_189;
                    }
                  }
                  if (v82 != *(double *)&v71 || *(double *)&v62 != v83) {
                    goto LABEL_189;
                  }
                  if (v66)
                  {
LABEL_139:
                    if ((v194 & 1) == 0) {
                      goto LABEL_189;
                    }
                  }
                  else
                  {
LABEL_120:
                    if ((v194 & 1) != 0 || *(double *)&v63 != *(double *)&v186 || *(double *)&v64 != *(double *)&v191) {
                      goto LABEL_189;
                    }
                  }
                  uint64_t v94 = v60;
                  uint64_t v95 = v68;
                  unint64_t v96 = v66;
                  uint64_t v97 = v69;
                  uint64_t v98 = *(void *)&v70;
                  sub_12430(v94, v59, v61, v62, v63, v64, v96);
                  sub_12430(v95, v97, v71, v98, v186, v191, v194);
                  sub_7CC28(&v202, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
                  break;
              }
LABEL_99:
              sub_12588(v22 + 160, (uint64_t)&v202);
              if (sub_125F0((uint64_t)&v202) == 1)
              {
                sub_12588((uint64_t)(v38 + 20), (uint64_t)v201);
                uint64_t v2 = v182;
                if (sub_125F0((uint64_t)v201) != 1) {
                  goto LABEL_182;
                }
                goto LABEL_128;
              }
              sub_12588(v22 + 160, (uint64_t)v200);
              sub_12588((uint64_t)(v38 + 20), (uint64_t)v201);
              if (sub_125F0((uint64_t)v201) == 1)
              {
                sub_C2580((uint64_t)v222);
                sub_127D4(v225, sub_128C0);
                sub_127D4(v221, sub_128C0);
                sub_127D4(v221, sub_128C0);
              }
              else
              {
                sub_12588((uint64_t)(v38 + 20), (uint64_t)__src);
                memcpy(__dst, __src, 0x179uLL);
                uint64_t v2 = v182;
                if (!_s20BooksPersonalization11BookHistoryV2eeoiySbAC_ACtFZ_0((uint64_t)v200, (uint64_t)__dst)) {
                  goto LABEL_182;
                }
LABEL_128:
                if ((sub_6CDD4(*(void *)(v22 + 544), v38[68]) & 1) == 0) {
                  goto LABEL_182;
                }
                int v87 = *(unsigned __int8 *)(v22 + 552);
                int v88 = *((unsigned __int8 *)v38 + 552);
                if (v87 == 12)
                {
                  sub_C2580((uint64_t)v222);
                  sub_127D4(v225, sub_128C0);
                  sub_127D4(v221, sub_128C0);
                  sub_127D4(v221, sub_128C0);
                  if (v88 == 12) {
                    goto LABEL_222;
                  }
                  goto LABEL_191;
                }
                if (v88 == 12) {
                  goto LABEL_182;
                }
                switch(v87)
                {
                  case 3:
                  case 4:
                  case 5:
                  case 6:
                  case 7:
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    if (v88 == v87) {
                      goto LABEL_222;
                    }
                    goto LABEL_191;
                  case 8:
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    if (v88 == 8) {
                      goto LABEL_222;
                    }
                    goto LABEL_191;
                  case 9:
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    if (v88 == 9) {
                      goto LABEL_222;
                    }
                    goto LABEL_191;
                  case 10:
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    if (v88 == 10) {
                      goto LABEL_222;
                    }
                    goto LABEL_191;
                  case 11:
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    if (v88 == 11) {
                      goto LABEL_222;
                    }
                    goto LABEL_191;
                  default:
                    if ((v88 - 3) < 9) {
                      goto LABEL_182;
                    }
                    uint64_t v131 = 0x6565726874;
                    if (v87)
                    {
                      if (v87 == 1)
                      {
                        unint64_t v132 = 0xE400000000000000;
                        uint64_t v133 = 1920298854;
                      }
                      else
                      {
                        unint64_t v132 = 0xE400000000000000;
                        uint64_t v133 = 1702259046;
                      }
                    }
                    else
                    {
                      unint64_t v132 = 0xE500000000000000;
                      uint64_t v133 = 0x6565726874;
                    }
                    if (v88)
                    {
                      if (v88 == 1)
                      {
                        unint64_t v134 = 0xE400000000000000;
                        uint64_t v131 = 1920298854;
                      }
                      else
                      {
                        unint64_t v134 = 0xE400000000000000;
                        uint64_t v131 = 1702259046;
                      }
                    }
                    else
                    {
                      unint64_t v134 = 0xE500000000000000;
                    }
                    if (v133 == v131 && v132 == v134)
                    {
                      swift_bridgeObjectRelease_n();
                      sub_C2580((uint64_t)v222);
                      sub_127D4(v225, sub_128C0);
                      sub_127D4(v221, sub_128C0);
                      sub_127D4(v221, sub_128C0);
                      uint64_t v2 = v182;
LABEL_222:
                      sub_127D4(v225, sub_128C0);
LABEL_4:
                      uint64_t v6 = v4 + 56;
LABEL_5:
                      uint64_t v5 = v197;
                      if (v197 == v2) {
                        return (void *)v4;
                      }
                      goto LABEL_6;
                    }
                    char v135 = sub_1FC5F0();
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    sub_C2580((uint64_t)v222);
                    sub_127D4(v225, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    sub_127D4(v221, sub_128C0);
                    if (v135)
                    {
                      sub_127D4(v225, sub_128C0);
                      uint64_t v2 = v182;
                      goto LABEL_4;
                    }
                    break;
                }
              }
              uint64_t v2 = v182;
              goto LABEL_191;
            }
            uint64_t v202 = *(void *)(v22 + 88);
            uint64_t v203 = v59;
            uint64_t v204 = v61;
            uint64_t v205 = v62;
            uint64_t v206 = v63;
            uint64_t v207 = v64;
            unint64_t v208 = v66;
            double v209 = v65;
            double v210 = v67;
            uint64_t v211 = v68;
            uint64_t v212 = v69;
            uint64_t v213 = v71;
            double v214 = v70;
            uint64_t v215 = v76;
            uint64_t v216 = v75;
            unint64_t v217 = v73;
            double v218 = v72;
            double v219 = v77;
            uint64_t v190 = v75;
            unint64_t v193 = v73;
            uint64_t v78 = v60;
            uint64_t v79 = v68;
            uint64_t v80 = v69;
            uint64_t v81 = *(void *)&v70;
            sub_12430(v78, v59, v61, v62, v63, v64, v66);
            sub_12430(v79, v80, v71, v81, v76, v190, v193);
            sub_7CC28(&v202, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1255C);
            sub_C2580((uint64_t)v222);
            sub_127D4(v225, sub_128C0);
            sub_127D4(v221, sub_128C0);
            sub_127D4(v221, sub_128C0);
            uint64_t v2 = v182;
          }
          else
          {
            sub_127D4(v225, sub_126F8);
            sub_127D4(v221, sub_126F8);
            sub_C2580((uint64_t)v222);
          }
LABEL_191:
          uint64_t v6 = v4 + 56;
LABEL_21:
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v21 = 1 << v18;
          if ((*(void *)(v6 + 8 * (v18 >> 6)) & (1 << v18)) == 0)
          {
            uint64_t v20 = *(void *)(v6 + 8 * v19);
LABEL_219:
            *(void *)(v6 + 8 * v19) = v21 | v20;
            sub_1269C((uint64_t)v225, *(void *)(v4 + 48) + 560 * v18);
            uint64_t v136 = *(void *)(v4 + 16);
            BOOL v137 = __OFADD__(v136, 1);
            uint64_t v138 = v136 + 1;
            if (v137)
            {
              __break(1u);
              JUMPOUT(0xBFE58);
            }
            *(void *)(v4 + 16) = v138;
            goto LABEL_5;
          }
          break;
      }
    }
  }
  return _swiftEmptySetSingleton;
}

void *sub_BFEBC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_26F118);
    uint64_t v3 = sub_1FC030();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v35 = v1;
    uint64_t v36 = a1 + 32;
    while (1)
    {
      unsigned int v6 = *(unsigned __int8 *)(v36 + v4);
      sub_1FC7E0();
      unsigned int v7 = v6 >> 6;
      uint64_t v41 = v4 + 1;
      switch(v6 >> 6)
      {
        case 1u:
          sub_1FC7F0(3uLL);
          goto LABEL_7;
        case 2u:
          switch(v6)
          {
            case 0x81u:
              Swift::UInt v8 = 1;
              break;
            case 0x82u:
              Swift::UInt v8 = 4;
              break;
            case 0x83u:
              Swift::UInt v8 = 5;
              break;
            default:
              Swift::UInt v8 = 0;
              break;
          }
          goto LABEL_15;
        case 3u:
          Swift::UInt v8 = 6;
LABEL_15:
          sub_1FC7F0(v8);
          break;
        default:
          sub_1FC7F0(2uLL);
LABEL_7:
          sub_1FB8C0();
          swift_bridgeObjectRelease();
          break;
      }
      Swift::Int v9 = sub_1FC830();
      uint64_t v10 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v11 = v9 & ~v10;
      unint64_t v12 = v11 >> 6;
      uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
      uint64_t v14 = 1 << v11;
      if (((1 << v11) & v13) != 0) {
        break;
      }
LABEL_74:
      *(void *)(v5 + 8 * v12) = v14 | v13;
      *(unsigned char *)(*(void *)(v3 + 48) + v11) = v6;
      uint64_t v31 = *(void *)(v3 + 16);
      BOOL v32 = __OFADD__(v31, 1);
      uint64_t v33 = v31 + 1;
      if (v32)
      {
        __break(1u);
        JUMPOUT(0xC039CLL);
      }
      *(void *)(v3 + 16) = v33;
LABEL_4:
      uint64_t v4 = v41;
      if (v41 == v35) {
        return (void *)v3;
      }
    }
    uint64_t v15 = ~v10;
    BOOL v16 = v6 == 192 && v7 == 3;
    char v17 = v16;
    BOOL v18 = v6 == 131;
    if (v7 != 2) {
      BOOL v18 = 0;
    }
    BOOL v40 = v18;
    BOOL v19 = v7 == 2 && v6 == 130;
    BOOL v39 = v19;
    BOOL v20 = v7 == 2 && v6 == 129;
    BOOL v21 = v7 == 2 && v6 == 128;
    BOOL v37 = v21;
    BOOL v38 = v20;
    while (1)
    {
      unsigned int v22 = *(unsigned __int8 *)(*(void *)(v3 + 48) + v11);
      switch(v22 >> 6)
      {
        case 1u:
          if (v7 != 1) {
            goto LABEL_36;
          }
          int v25 = v22 & 0x3F;
          if (!v25)
          {
            unint64_t v23 = 0xE600000000000000;
            uint64_t v24 = 0x73657661656CLL;
            int v26 = v6 & 0x3F;
            if ((v6 & 0x3F) == 0) {
              goto LABEL_70;
            }
            goto LABEL_63;
          }
          BOOL v16 = v25 == 1;
          int v26 = v6 & 0x3F;
          unint64_t v23 = 0xE800000000000000;
          if (v16)
          {
            uint64_t v24 = 0x656E4F6C6576656CLL;
            if ((v6 & 0x3F) == 0) {
              goto LABEL_70;
            }
LABEL_63:
            BOOL v27 = v26 == 1;
            goto LABEL_64;
          }
          uint64_t v24 = 0x6F77546C6576656CLL;
          if ((v6 & 0x3F) != 0) {
            goto LABEL_63;
          }
          goto LABEL_70;
        case 2u:
          switch(*(unsigned char *)(*(void *)(v3 + 48) + v11))
          {
            case 0x81:
              if (!v38) {
                goto LABEL_36;
              }
              break;
            case 0x82:
              if (!v39) {
                goto LABEL_36;
              }
              break;
            case 0x83:
              if (!v40) {
                goto LABEL_36;
              }
              break;
            default:
              if (!v37) {
                goto LABEL_36;
              }
              break;
          }
          goto LABEL_4;
        case 3u:
          if ((v17 & 1) == 0) {
            goto LABEL_36;
          }
          goto LABEL_4;
        default:
          if (v6 >= 0x40) {
            goto LABEL_36;
          }
          if (*(unsigned char *)(*(void *)(v3 + 48) + v11))
          {
            unint64_t v23 = 0xE800000000000000;
            if (v22 == 1)
            {
              uint64_t v24 = 0x656E4F6C6576656CLL;
              if (v6) {
                goto LABEL_61;
              }
            }
            else
            {
              uint64_t v24 = 0x6F77546C6576656CLL;
              if (v6)
              {
LABEL_61:
                BOOL v27 = v6 == 1;
LABEL_64:
                if (v27) {
                  uint64_t v28 = 0x656E4F6C6576656CLL;
                }
                else {
                  uint64_t v28 = 0x6F77546C6576656CLL;
                }
                unint64_t v29 = 0xE800000000000000;
                if (v24 != v28) {
                  goto LABEL_72;
                }
                goto LABEL_71;
              }
            }
          }
          else
          {
            unint64_t v23 = 0xE600000000000000;
            uint64_t v24 = 0x73657661656CLL;
            if (v6) {
              goto LABEL_61;
            }
          }
LABEL_70:
          unint64_t v29 = 0xE600000000000000;
          if (v24 != 0x73657661656CLL) {
            goto LABEL_72;
          }
LABEL_71:
          if (v23 == v29)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
LABEL_72:
          char v30 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_4;
          }
LABEL_36:
          unint64_t v11 = (v11 + 1) & v15;
          unint64_t v12 = v11 >> 6;
          uint64_t v13 = *(void *)(v5 + 8 * (v11 >> 6));
          uint64_t v14 = 1 << v11;
          if ((v13 & (1 << v11)) == 0) {
            goto LABEL_74;
          }
          break;
      }
    }
  }
  return _swiftEmptySetSingleton;
}

unint64_t sub_C03E0()
{
  unint64_t result = qword_26F048;
  if (!qword_26F048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F048);
  }
  return result;
}

unint64_t sub_C0438()
{
  unint64_t result = qword_26F050;
  if (!qword_26F050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F050);
  }
  return result;
}

unint64_t sub_C0490()
{
  unint64_t result = qword_26F058;
  if (!qword_26F058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F058);
  }
  return result;
}

unint64_t sub_C04E8()
{
  unint64_t result = qword_26F060;
  if (!qword_26F060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F060);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for ScorableAttributeType(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x3D) {
    goto LABEL_17;
  }
  if (a2 + 195 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 195) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 195;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 195;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 195;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x3C | (*a1 >> 6)) ^ 0x3F;
  if (v6 >= 0x3C) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for ScorableAttributeType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 195 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 195) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x3D) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x3C)
  {
    unsigned int v6 = ((a2 - 61) >> 8) + 1;
    *unint64_t result = a2 - 61;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC06B0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 4 * (((-a2 >> 2) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_C06D8(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  int v2 = (char)v1;
  unsigned int v3 = v1 >> 6;
  unsigned int v4 = (v1 & 3 | (4 * (v1 >> 6))) - 6;
  if (v2 >= 0) {
    return v3;
  }
  else {
    return v4;
  }
}

unsigned char *sub_C06FC(unsigned char *result)
{
  *result &= 0x3Fu;
  return result;
}

unsigned char *sub_C070C(unsigned char *result, unsigned int a2)
{
  if (a2 < 2) {
    *unint64_t result = *result & 3 | ((_BYTE)a2 << 6);
  }
  else {
    *unint64_t result = ((a2 - 2) & 3 | (((a2 - 2) >> 2) << 6)) ^ 0x80;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScorableAttributeType()
{
  return &type metadata for ScorableAttributeType;
}

uint64_t destroy for ScorableAttribute(uint64_t a1)
{
  long long v18 = *(_OWORD *)(a1 + 480);
  long long v16 = *(_OWORD *)(a1 + 448);
  long long v17 = *(_OWORD *)(a1 + 464);
  long long v14 = *(_OWORD *)(a1 + 416);
  long long v15 = *(_OWORD *)(a1 + 432);
  long long v12 = *(_OWORD *)(a1 + 384);
  long long v13 = *(_OWORD *)(a1 + 400);
  long long v10 = *(_OWORD *)(a1 + 352);
  long long v11 = *(_OWORD *)(a1 + 368);
  long long v8 = *(_OWORD *)(a1 + 320);
  long long v9 = *(_OWORD *)(a1 + 336);
  long long v6 = *(_OWORD *)(a1 + 288);
  long long v7 = *(_OWORD *)(a1 + 304);
  long long v4 = *(_OWORD *)(a1 + 256);
  long long v5 = *(_OWORD *)(a1 + 272);
  long long v2 = *(_OWORD *)(a1 + 224);
  long long v3 = *(_OWORD *)(a1 + 240);
  return sub_128C0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
           *(void *)(a1 + 152),
           *(void *)(a1 + 160),
           *(void *)(a1 + 168),
           *(void *)(a1 + 176),
           *(void *)(a1 + 184),
           *(void *)(a1 + 192),
           *(void *)(a1 + 200),
           *(void *)(a1 + 208),
           *(void *)(a1 + 216),
           v2,
           *((uint64_t *)&v2 + 1),
           v3,
           *((uint64_t *)&v3 + 1),
           v4,
           *((uint64_t *)&v4 + 1),
           v5,
           *((uint64_t *)&v5 + 1),
           v6,
           *((uint64_t *)&v6 + 1),
           v7,
           *((uint64_t *)&v7 + 1),
           v8,
           *((uint64_t *)&v8 + 1),
           v9,
           *((uint64_t *)&v9 + 1),
           v10,
           *((uint64_t *)&v10 + 1),
           v11,
           *((uint64_t *)&v11 + 1),
           v12,
           *((uint64_t *)&v12 + 1),
           v13,
           *((uint64_t *)&v13 + 1),
           v14,
           *((uint64_t *)&v14 + 1),
           v15,
           *((uint64_t *)&v15 + 1),
           v16,
           *((uint64_t *)&v16 + 1),
           v17,
           *((uint64_t *)&v17 + 1),
           v18,
           *((uint64_t *)&v18 + 1),
           *(void *)(a1 + 496));
}

uint64_t initializeWithCopy for ScorableAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v72 = *(void *)(a2 + 80);
  uint64_t v73 = *(void *)(a2 + 72);
  uint64_t v70 = *(void *)(a2 + 96);
  uint64_t v71 = *(void *)(a2 + 88);
  uint64_t v68 = *(void *)(a2 + 112);
  uint64_t v69 = *(void *)(a2 + 104);
  uint64_t v66 = *(void *)(a2 + 128);
  uint64_t v67 = *(void *)(a2 + 120);
  uint64_t v64 = *(void *)(a2 + 144);
  unint64_t v65 = *(void *)(a2 + 136);
  uint64_t v62 = *(void *)(a2 + 160);
  uint64_t v63 = *(void *)(a2 + 152);
  uint64_t v60 = *(void *)(a2 + 176);
  uint64_t v61 = *(void *)(a2 + 168);
  uint64_t v58 = *(void *)(a2 + 192);
  uint64_t v59 = *(void *)(a2 + 184);
  uint64_t v56 = *(void *)(a2 + 208);
  uint64_t v57 = *(void *)(a2 + 200);
  uint64_t v54 = *(void *)(a2 + 224);
  uint64_t v55 = *(void *)(a2 + 216);
  uint64_t v53 = *(void *)(a2 + 232);
  uint64_t v52 = *(void *)(a2 + 240);
  uint64_t v51 = *(void *)(a2 + 248);
  uint64_t v50 = *(void *)(a2 + 256);
  uint64_t v49 = *(void *)(a2 + 264);
  uint64_t v48 = *(void *)(a2 + 272);
  uint64_t v47 = *(void *)(a2 + 280);
  uint64_t v46 = *(void *)(a2 + 288);
  uint64_t v45 = *(void *)(a2 + 296);
  uint64_t v44 = *(void *)(a2 + 304);
  uint64_t v43 = *(void *)(a2 + 312);
  uint64_t v42 = *(void *)(a2 + 320);
  uint64_t v41 = *(void *)(a2 + 328);
  uint64_t v13 = *(void *)(a2 + 336);
  uint64_t v14 = *(void *)(a2 + 344);
  uint64_t v15 = *(void *)(a2 + 352);
  uint64_t v16 = *(void *)(a2 + 360);
  uint64_t v17 = *(void *)(a2 + 368);
  uint64_t v18 = *(void *)(a2 + 376);
  uint64_t v19 = *(void *)(a2 + 384);
  uint64_t v20 = *(void *)(a2 + 392);
  uint64_t v21 = *(void *)(a2 + 400);
  uint64_t v22 = *(void *)(a2 + 408);
  uint64_t v23 = *(void *)(a2 + 416);
  uint64_t v24 = *(void *)(a2 + 424);
  uint64_t v25 = *(void *)(a2 + 432);
  uint64_t v26 = *(void *)(a2 + 440);
  uint64_t v27 = *(void *)(a2 + 448);
  uint64_t v28 = *(void *)(a2 + 456);
  uint64_t v29 = *(void *)(a2 + 464);
  uint64_t v30 = *(void *)(a2 + 472);
  uint64_t v31 = *(void *)(a2 + 480);
  uint64_t v32 = *(void *)(a2 + 488);
  uint64_t v33 = *(void *)(a2 + 496);
  uint64_t v34 = *(void *)(a2 + 504);
  uint64_t v35 = *(void *)(a2 + 512);
  uint64_t v36 = *(void *)(a2 + 520);
  uint64_t v37 = *(void *)(a2 + 528);
  uint64_t v38 = *(void *)(a2 + 536);
  uint64_t v39 = *(void *)(a2 + 544);
  char v40 = *(unsigned char *)(a2 + 552);
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  uint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  sub_126F8(*(void *)a2, v5, v6, v7, v8, v9, v10, v11, v3, v73, v72, v71, v70, v69, v68, v67, v66, v65, v64,
    v63,
    v62,
    v61,
    v60,
    v59,
    v58,
    v57,
    v56,
    v55,
    v54,
    v53,
    v52,
    v51,
    v50,
    v49,
    v48,
    v47,
    v46,
    v45,
    v44,
    v43,
    v42,
    v41,
    v13,
    v14,
    v15,
    v16,
    v17,
    v18,
    v19,
    v20,
    v21,
    v22,
    v23,
    v24,
    v25,
    v26,
    v27,
    v28,
    v29,
    v30,
    v31,
    v32,
    v33);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v3;
  *(void *)(a1 + 72) = v73;
  *(void *)(a1 + 80) = v72;
  *(void *)(a1 + 88) = v71;
  *(void *)(a1 + 96) = v70;
  *(void *)(a1 + 104) = v69;
  *(void *)(a1 + 112) = v68;
  *(void *)(a1 + 120) = v67;
  *(void *)(a1 + 128) = v66;
  *(void *)(a1 + 136) = v65;
  *(void *)(a1 + 144) = v64;
  *(void *)(a1 + 152) = v63;
  *(void *)(a1 + 160) = v62;
  *(void *)(a1 + 168) = v61;
  *(void *)(a1 + 176) = v60;
  *(void *)(a1 + 184) = v59;
  *(void *)(a1 + 192) = v58;
  *(void *)(a1 + 200) = v57;
  *(void *)(a1 + 208) = v56;
  *(void *)(a1 + 216) = v55;
  *(void *)(a1 + 224) = v54;
  *(void *)(a1 + 232) = v53;
  *(void *)(a1 + 240) = v52;
  *(void *)(a1 + 248) = v51;
  *(void *)(a1 + 256) = v50;
  *(void *)(a1 + 264) = v49;
  *(void *)(a1 + 272) = v48;
  *(void *)(a1 + 280) = v47;
  *(void *)(a1 + 288) = v46;
  *(void *)(a1 + 296) = v45;
  *(void *)(a1 + 304) = v44;
  *(void *)(a1 + 312) = v43;
  *(void *)(a1 + 320) = v42;
  *(void *)(a1 + 328) = v41;
  *(void *)(a1 + 336) = v13;
  *(void *)(a1 + 344) = v14;
  *(void *)(a1 + 352) = v15;
  *(void *)(a1 + 360) = v16;
  *(void *)(a1 + 368) = v17;
  *(void *)(a1 + 376) = v18;
  *(void *)(a1 + 384) = v19;
  *(void *)(a1 + 392) = v20;
  *(void *)(a1 + 400) = v21;
  *(void *)(a1 + 408) = v22;
  *(void *)(a1 + 416) = v23;
  *(void *)(a1 + 424) = v24;
  *(void *)(a1 + 432) = v25;
  *(void *)(a1 + 440) = v26;
  *(void *)(a1 + 448) = v27;
  *(void *)(a1 + 456) = v28;
  *(void *)(a1 + 464) = v29;
  *(void *)(a1 + 472) = v30;
  *(void *)(a1 + 480) = v31;
  *(void *)(a1 + 488) = v32;
  *(void *)(a1 + 496) = v33;
  *(void *)(a1 + 504) = v34;
  *(void *)(a1 + 512) = v35;
  *(void *)(a1 + 520) = v36;
  *(void *)(a1 + 528) = v37;
  *(void *)(a1 + 536) = v38;
  *(void *)(a1 + 544) = v39;
  *(unsigned char *)(a1 + 552) = v40;
  return a1;
}

uint64_t assignWithCopy for ScorableAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v107 = *(void *)a2;
  uint64_t v108 = *(void *)(a2 + 8);
  uint64_t v105 = *(void *)(a2 + 24);
  uint64_t v106 = *(void *)(a2 + 16);
  uint64_t v103 = *(void *)(a2 + 40);
  uint64_t v104 = *(void *)(a2 + 32);
  uint64_t v101 = *(void *)(a2 + 56);
  uint64_t v102 = *(void *)(a2 + 48);
  uint64_t v99 = *(void *)(a2 + 72);
  uint64_t v100 = *(void *)(a2 + 64);
  uint64_t v97 = *(void *)(a2 + 88);
  uint64_t v98 = *(void *)(a2 + 80);
  uint64_t v95 = *(void *)(a2 + 104);
  uint64_t v96 = *(void *)(a2 + 96);
  uint64_t v94 = *(void *)(a2 + 112);
  uint64_t v93 = *(void *)(a2 + 120);
  uint64_t v92 = *(void *)(a2 + 128);
  unint64_t v91 = *(void *)(a2 + 136);
  uint64_t v90 = *(void *)(a2 + 144);
  uint64_t v89 = *(void *)(a2 + 152);
  uint64_t v88 = *(void *)(a2 + 160);
  uint64_t v87 = *(void *)(a2 + 168);
  uint64_t v86 = *(void *)(a2 + 176);
  uint64_t v85 = *(void *)(a2 + 184);
  uint64_t v84 = *(void *)(a2 + 192);
  uint64_t v83 = *(void *)(a2 + 200);
  uint64_t v82 = *(void *)(a2 + 208);
  uint64_t v81 = *(void *)(a2 + 216);
  uint64_t v80 = *(void *)(a2 + 224);
  uint64_t v79 = *(void *)(a2 + 232);
  uint64_t v78 = *(void *)(a2 + 240);
  uint64_t v77 = *(void *)(a2 + 248);
  uint64_t v76 = *(void *)(a2 + 256);
  uint64_t v75 = *(void *)(a2 + 264);
  uint64_t v74 = *(void *)(a2 + 272);
  uint64_t v73 = *(void *)(a2 + 280);
  uint64_t v72 = *(void *)(a2 + 288);
  uint64_t v71 = *(void *)(a2 + 296);
  uint64_t v70 = *(void *)(a2 + 304);
  uint64_t v69 = *(void *)(a2 + 312);
  uint64_t v68 = *(void *)(a2 + 320);
  uint64_t v67 = *(void *)(a2 + 328);
  uint64_t v4 = *(void *)(a2 + 344);
  uint64_t v3 = *(void *)(a2 + 352);
  uint64_t v6 = *(void *)(a2 + 360);
  uint64_t v5 = *(void *)(a2 + 368);
  uint64_t v8 = *(void *)(a2 + 376);
  uint64_t v7 = *(void *)(a2 + 384);
  uint64_t v10 = *(void *)(a2 + 392);
  uint64_t v9 = *(void *)(a2 + 400);
  uint64_t v11 = *(void *)(a2 + 408);
  uint64_t v49 = *(void *)(a2 + 336);
  uint64_t v50 = *(void *)(a2 + 416);
  uint64_t v51 = *(void *)(a2 + 424);
  uint64_t v52 = *(void *)(a2 + 432);
  uint64_t v53 = *(void *)(a2 + 440);
  uint64_t v54 = *(void *)(a2 + 448);
  uint64_t v55 = *(void *)(a2 + 456);
  uint64_t v56 = *(void *)(a2 + 464);
  uint64_t v57 = *(void *)(a2 + 472);
  uint64_t v58 = *(void *)(a2 + 480);
  uint64_t v59 = *(void *)(a2 + 488);
  uint64_t v60 = *(void *)(a2 + 496);
  uint64_t v61 = *(void *)(a2 + 504);
  uint64_t v62 = *(void *)(a2 + 512);
  uint64_t v63 = *(void *)(a2 + 520);
  long long v64 = *(_OWORD *)(a2 + 528);
  uint64_t v65 = *(void *)(a2 + 544);
  char v66 = *(unsigned char *)(a2 + 552);
  sub_126F8(*(void *)a2, v108, v106, v105, v104, v103, v102, v101, v100, v99, v98, v97, v96, v95, v94, v93, v92, v91, v90,
    v89,
    v88,
    v87,
    v86,
    v85,
    v84,
    v83,
    v82,
    v81,
    v80,
    v79,
    v78,
    v77,
    v76,
    v75,
    v74,
    v73,
    v72,
    v71,
    v70,
    v69,
    v68,
    v67,
    v49,
    v4,
    v3,
    v6,
    v5,
    v8,
    v7,
    v10,
    v9,
    v11,
    v50,
    v51,
    v52,
    v53,
    v54,
    v55,
    v56,
    v57,
    v58,
    v59,
    v60);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  *(void *)a1 = v107;
  *(void *)(a1 + 8) = v108;
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  *(void *)(a1 + 16) = v106;
  *(void *)(a1 + 24) = v105;
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  *(void *)(a1 + 32) = v104;
  *(void *)(a1 + 40) = v103;
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  *(void *)(a1 + 48) = v102;
  *(void *)(a1 + 56) = v101;
  long long v20 = *(_OWORD *)(a1 + 64);
  long long v21 = *(_OWORD *)(a1 + 80);
  *(void *)(a1 + 64) = v100;
  *(void *)(a1 + 72) = v99;
  *(void *)(a1 + 80) = v98;
  *(void *)(a1 + 88) = v97;
  long long v22 = *(_OWORD *)(a1 + 96);
  long long v23 = *(_OWORD *)(a1 + 112);
  *(void *)(a1 + 96) = v96;
  *(void *)(a1 + 104) = v95;
  *(void *)(a1 + 112) = v94;
  *(void *)(a1 + 120) = v93;
  long long v24 = *(_OWORD *)(a1 + 128);
  long long v25 = *(_OWORD *)(a1 + 144);
  *(void *)(a1 + 128) = v92;
  *(void *)(a1 + 136) = v91;
  *(void *)(a1 + 144) = v90;
  *(void *)(a1 + 152) = v89;
  long long v26 = *(_OWORD *)(a1 + 160);
  long long v27 = *(_OWORD *)(a1 + 176);
  *(void *)(a1 + 160) = v88;
  *(void *)(a1 + 168) = v87;
  *(void *)(a1 + 176) = v86;
  *(void *)(a1 + 184) = v85;
  long long v28 = *(_OWORD *)(a1 + 192);
  long long v29 = *(_OWORD *)(a1 + 208);
  *(void *)(a1 + 192) = v84;
  *(void *)(a1 + 200) = v83;
  *(void *)(a1 + 208) = v82;
  *(void *)(a1 + 216) = v81;
  long long v30 = *(_OWORD *)(a1 + 224);
  long long v31 = *(_OWORD *)(a1 + 240);
  *(void *)(a1 + 224) = v80;
  *(void *)(a1 + 232) = v79;
  *(void *)(a1 + 240) = v78;
  *(void *)(a1 + 248) = v77;
  long long v32 = *(_OWORD *)(a1 + 256);
  long long v33 = *(_OWORD *)(a1 + 272);
  *(void *)(a1 + 256) = v76;
  *(void *)(a1 + 264) = v75;
  *(void *)(a1 + 272) = v74;
  *(void *)(a1 + 280) = v73;
  long long v34 = *(_OWORD *)(a1 + 288);
  long long v35 = *(_OWORD *)(a1 + 304);
  *(void *)(a1 + 288) = v72;
  *(void *)(a1 + 296) = v71;
  *(void *)(a1 + 304) = v70;
  *(void *)(a1 + 312) = v69;
  long long v36 = *(_OWORD *)(a1 + 320);
  long long v37 = *(_OWORD *)(a1 + 336);
  *(void *)(a1 + 320) = v68;
  *(void *)(a1 + 328) = v67;
  *(void *)(a1 + 336) = v49;
  *(void *)(a1 + 344) = v4;
  long long v38 = *(_OWORD *)(a1 + 352);
  long long v39 = *(_OWORD *)(a1 + 368);
  *(void *)(a1 + 352) = v3;
  *(void *)(a1 + 360) = v6;
  *(void *)(a1 + 368) = v5;
  *(void *)(a1 + 376) = v8;
  long long v40 = *(_OWORD *)(a1 + 384);
  long long v41 = *(_OWORD *)(a1 + 400);
  *(void *)(a1 + 384) = v7;
  *(void *)(a1 + 392) = v10;
  *(void *)(a1 + 400) = v9;
  *(void *)(a1 + 408) = v11;
  long long v42 = *(_OWORD *)(a1 + 416);
  long long v43 = *(_OWORD *)(a1 + 432);
  *(void *)(a1 + 416) = v50;
  *(void *)(a1 + 424) = v51;
  *(void *)(a1 + 432) = v52;
  *(void *)(a1 + 440) = v53;
  long long v44 = *(_OWORD *)(a1 + 448);
  long long v45 = *(_OWORD *)(a1 + 464);
  *(void *)(a1 + 448) = v54;
  *(void *)(a1 + 456) = v55;
  *(void *)(a1 + 464) = v56;
  *(void *)(a1 + 472) = v57;
  long long v46 = *(_OWORD *)(a1 + 480);
  long long v47 = *(_OWORD *)(a1 + 496);
  *(void *)(a1 + 480) = v58;
  *(void *)(a1 + 488) = v59;
  *(void *)(a1 + 496) = v60;
  *(void *)(a1 + 504) = v61;
  *(void *)(a1 + 512) = v62;
  *(void *)(a1 + 520) = v63;
  *(_OWORD *)(a1 + 528) = v64;
  *(void *)(a1 + 544) = v65;
  *(unsigned char *)(a1 + 552) = v66;
  sub_128C0(v12, v13, v14, v15, v16, v17, v18, v19, v20, *((uint64_t *)&v20 + 1), v21, *((uint64_t *)&v21 + 1), v22, *((uint64_t *)&v22 + 1), v23, *((uint64_t *)&v23 + 1), v24, *((unint64_t *)&v24 + 1), v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v47);
  return a1;
}

void *initializeWithTake for SeedBook(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x229uLL);
}

uint64_t assignWithTake for ScorableAttribute(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a1;
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  long long v12 = *(_OWORD *)(a1 + 64);
  long long v13 = *(_OWORD *)(a1 + 80);
  long long v14 = *(_OWORD *)(a1 + 96);
  long long v15 = *(_OWORD *)(a1 + 112);
  long long v16 = *(_OWORD *)(a1 + 128);
  long long v17 = *(_OWORD *)(a1 + 144);
  long long v18 = *(_OWORD *)(a1 + 160);
  long long v19 = *(_OWORD *)(a1 + 176);
  long long v20 = *(_OWORD *)(a1 + 192);
  long long v21 = *(_OWORD *)(a1 + 208);
  long long v22 = *(_OWORD *)(a1 + 224);
  long long v23 = *(_OWORD *)(a1 + 240);
  long long v24 = *(_OWORD *)(a1 + 256);
  long long v25 = *(_OWORD *)(a1 + 272);
  long long v26 = *(_OWORD *)(a1 + 288);
  long long v27 = *(_OWORD *)(a1 + 304);
  long long v28 = *(_OWORD *)(a1 + 320);
  long long v29 = *(_OWORD *)(a1 + 336);
  long long v30 = *(_OWORD *)(a1 + 352);
  long long v31 = *(_OWORD *)(a1 + 368);
  long long v32 = *(_OWORD *)(a1 + 384);
  long long v33 = *(_OWORD *)(a1 + 400);
  long long v34 = *(_OWORD *)(a1 + 416);
  long long v35 = *(_OWORD *)(a1 + 432);
  long long v36 = *(_OWORD *)(a1 + 448);
  long long v37 = *(_OWORD *)(a1 + 464);
  long long v38 = *(_OWORD *)(a1 + 480);
  long long v39 = *(_OWORD *)(a1 + 496);
  long long v40 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v40;
  long long v41 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v41;
  long long v42 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v42;
  long long v43 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v43;
  long long v44 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v44;
  long long v45 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v45;
  long long v46 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v46;
  long long v47 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v47;
  long long v48 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v48;
  long long v49 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v49;
  long long v50 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v50;
  long long v51 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v51;
  long long v52 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v52;
  long long v53 = *(_OWORD *)(a2 + 432);
  *(_OWORD *)(a1 + 416) = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 432) = v53;
  long long v54 = *(_OWORD *)(a2 + 464);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(_OWORD *)(a1 + 464) = v54;
  long long v55 = *(_OWORD *)(a2 + 496);
  *(_OWORD *)(a1 + 480) = *(_OWORD *)(a2 + 480);
  *(_OWORD *)(a1 + 496) = v55;
  long long v56 = *(_OWORD *)(a2 + 528);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(_OWORD *)(a1 + 528) = v56;
  uint64_t v57 = *(void *)(a2 + 544);
  LOBYTE(a2) = *(unsigned char *)(a2 + 552);
  *(void *)(a1 + 544) = v57;
  *(unsigned char *)(a1 + 552) = a2;
  sub_128C0(v4, v5, v6, v7, v8, v9, v10, v11, v12, *((uint64_t *)&v12 + 1), v13, *((uint64_t *)&v13 + 1), v14, *((uint64_t *)&v14 + 1), v15, *((uint64_t *)&v15 + 1), v16, *((unint64_t *)&v16 + 1), v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    v26,
    *((uint64_t *)&v26 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v39);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScorableAttribute(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 553)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 8) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

void storeEnumTagSinglePayload for ScorableAttribute(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(a1 + 248) = 0u;
    *(_OWORD *)(a1 + 232) = 0u;
    *(_OWORD *)(a1 + 216) = 0u;
    *(_OWORD *)(a1 + 200) = 0u;
    *(_OWORD *)(a1 + 184) = 0u;
    *(_OWORD *)(a1 + 168) = 0u;
    *(_OWORD *)(a1 + 152) = 0u;
    *(_OWORD *)(a1 + 136) = 0u;
    *(_OWORD *)(a1 + 120) = 0u;
    *(_OWORD *)(a1 + 104) = 0u;
    *(_OWORD *)(a1 + 88) = 0u;
    *(_OWORD *)(a1 + 72) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 552) = 0;
    *(_OWORD *)(a1 + 536) = 0u;
    *(_OWORD *)(a1 + 520) = 0u;
    *(_OWORD *)(a1 + 504) = 0u;
    *(_OWORD *)(a1 + 488) = 0u;
    *(_OWORD *)(a1 + 472) = 0u;
    *(_OWORD *)(a1 + 456) = 0u;
    *(_OWORD *)(a1 + 440) = 0u;
    *(_OWORD *)(a1 + 424) = 0u;
    *(_OWORD *)(a1 + 408) = 0u;
    *(_OWORD *)(a1 + 392) = 0u;
    *(_OWORD *)(a1 + 376) = 0u;
    *(_OWORD *)(a1 + 360) = 0u;
    *(_OWORD *)(a1 + 344) = 0u;
    *(_OWORD *)(a1 + 328) = 0u;
    *(_OWORD *)(a1 + 312) = 0u;
    *(_OWORD *)(a1 + 296) = 0u;
    *(_OWORD *)(a1 + 280) = 0u;
    *(_OWORD *)(a1 + 264) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 553) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return;
      }
LABEL_8:
      *(void *)a1 = 0;
      *(void *)(a1 + 8) = 2 * -a2;
      bzero((void *)(a1 + 16), 0x219uLL);
      return;
    }
    *(unsigned char *)(a1 + 553) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
}

uint64_t sub_C169C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(unsigned __int8 *)(result + 80);
  uint64_t v3 = *(void *)(result + 40) & 1;
  unint64_t v4 = *(unsigned __int8 *)(result + 536) | (unint64_t)(a2 << 61);
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v3;
  *(void *)(result + 80) = v2;
  *(void *)(result + 536) = v4;
  return result;
}

ValueMetadata *type metadata accessor for ScorableAttribute()
{
  return &type metadata for ScorableAttribute;
}

uint64_t initializeWithTake for Book.Content(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for ScorableAttribute.AuthorAndMediaType()
{
  return &type metadata for ScorableAttribute.AuthorAndMediaType;
}

uint64_t _s20BooksPersonalization17ScorableAttributeO18AuthorAndMediaTypeVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  BOOL v4 = v3 >= 2;
  int v5 = v3 - 2;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t _s20BooksPersonalization17ScorableAttributeO18AuthorAndMediaTypeVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScorableAttribute.GenreAndMediaType()
{
  return &type metadata for ScorableAttribute.GenreAndMediaType;
}

uint64_t getEnumTagSinglePayload for ScorableAttributeType.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFA) {
    goto LABEL_17;
  }
  if (a2 + 6 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 6) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 6;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 6;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 7;
  int v8 = v6 - 7;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for ScorableAttributeType.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC18FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.CodingKeys()
{
  return &type metadata for ScorableAttributeType.CodingKeys;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.AuthorCodingKeys()
{
  return &type metadata for ScorableAttributeType.AuthorCodingKeys;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.AuthorAndMediaTypeCodingKeys()
{
  return &type metadata for ScorableAttributeType.AuthorAndMediaTypeCodingKeys;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.GenreCodingKeys()
{
  return &type metadata for ScorableAttributeType.GenreCodingKeys;
}

unsigned char *_s20BooksPersonalization21ScorableAttributeTypeO15GenreCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xC1A04);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.GenreAndMediaTypeCodingKeys()
{
  return &type metadata for ScorableAttributeType.GenreAndMediaTypeCodingKeys;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.MediaTypeCodingKeys()
{
  return &type metadata for ScorableAttributeType.MediaTypeCodingKeys;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.SeedBookCodingKeys()
{
  return &type metadata for ScorableAttributeType.SeedBookCodingKeys;
}

ValueMetadata *type metadata accessor for ScorableAttributeType.SeedBookAcrossMediaTypesCodingKeys()
{
  return &type metadata for ScorableAttributeType.SeedBookAcrossMediaTypesCodingKeys;
}

unint64_t sub_C1A70()
{
  unint64_t result = qword_26F068;
  if (!qword_26F068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F068);
  }
  return result;
}

unint64_t sub_C1AC8()
{
  unint64_t result = qword_26F070;
  if (!qword_26F070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F070);
  }
  return result;
}

unint64_t sub_C1B20()
{
  unint64_t result = qword_26F078;
  if (!qword_26F078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F078);
  }
  return result;
}

unint64_t sub_C1B78()
{
  unint64_t result = qword_26F080;
  if (!qword_26F080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F080);
  }
  return result;
}

unint64_t sub_C1BD0()
{
  unint64_t result = qword_26F088;
  if (!qword_26F088)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F088);
  }
  return result;
}

unint64_t sub_C1C28()
{
  unint64_t result = qword_26F090;
  if (!qword_26F090)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F090);
  }
  return result;
}

unint64_t sub_C1C80()
{
  unint64_t result = qword_26F098;
  if (!qword_26F098)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F098);
  }
  return result;
}

unint64_t sub_C1CD8()
{
  unint64_t result = qword_26F0A0;
  if (!qword_26F0A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0A0);
  }
  return result;
}

unint64_t sub_C1D30()
{
  unint64_t result = qword_26F0A8;
  if (!qword_26F0A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0A8);
  }
  return result;
}

unint64_t sub_C1D88()
{
  unint64_t result = qword_26F0B0;
  if (!qword_26F0B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0B0);
  }
  return result;
}

unint64_t sub_C1DE0()
{
  unint64_t result = qword_26F0B8;
  if (!qword_26F0B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0B8);
  }
  return result;
}

unint64_t sub_C1E38()
{
  unint64_t result = qword_26F0C0;
  if (!qword_26F0C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0C0);
  }
  return result;
}

unint64_t sub_C1E90()
{
  unint64_t result = qword_26F0C8;
  if (!qword_26F0C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0C8);
  }
  return result;
}

unint64_t sub_C1EE8()
{
  unint64_t result = qword_26F0D0;
  if (!qword_26F0D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0D0);
  }
  return result;
}

unint64_t sub_C1F40()
{
  unint64_t result = qword_26F0D8;
  if (!qword_26F0D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0D8);
  }
  return result;
}

unint64_t sub_C1F98()
{
  unint64_t result = qword_26F0E0;
  if (!qword_26F0E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0E0);
  }
  return result;
}

unint64_t sub_C1FF0()
{
  unint64_t result = qword_26F0E8;
  if (!qword_26F0E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0E8);
  }
  return result;
}

unint64_t sub_C2048()
{
  unint64_t result = qword_26F0F0;
  if (!qword_26F0F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0F0);
  }
  return result;
}

unint64_t sub_C20A0()
{
  unint64_t result = qword_26F0F8;
  if (!qword_26F0F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F0F8);
  }
  return result;
}

Swift::Int sub_C20F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_26C538);
    uint64_t v3 = sub_1FC030();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v21 = v1;
    uint64_t v22 = a1 + 32;
    while (1)
    {
      int v6 = *(unsigned __int8 *)(v22 + v4++);
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int result = sub_1FC830();
      uint64_t v8 = ~(-1 << *(unsigned char *)(v3 + 32));
      unint64_t v9 = result & v8;
      unint64_t v10 = (result & (unint64_t)v8) >> 6;
      uint64_t v11 = *(void *)(v5 + 8 * v10);
      uint64_t v12 = 1 << (result & v8);
      if ((v12 & v11) != 0)
      {
        do
        {
          if (*(unsigned char *)(*(void *)(v3 + 48) + v9))
          {
            if (*(unsigned char *)(*(void *)(v3 + 48) + v9) == 1)
            {
              uint64_t v13 = 0x6F6F626F69647561;
              unint64_t v14 = 0xE90000000000006BLL;
              if (!v6) {
                goto LABEL_20;
              }
            }
            else
            {
              unint64_t v14 = 0xE500000000000000;
              uint64_t v13 = 0x646578696DLL;
              if (!v6)
              {
LABEL_20:
                unint64_t v16 = 0xE500000000000000;
                if (v13 != 0x6B6F6F6265) {
                  goto LABEL_22;
                }
                goto LABEL_21;
              }
            }
          }
          else
          {
            unint64_t v14 = 0xE500000000000000;
            uint64_t v13 = 0x6B6F6F6265;
            if (!v6) {
              goto LABEL_20;
            }
          }
          if (v6 == 1) {
            uint64_t v15 = 0x6F6F626F69647561;
          }
          else {
            uint64_t v15 = 0x646578696DLL;
          }
          if (v6 == 1) {
            unint64_t v16 = 0xE90000000000006BLL;
          }
          else {
            unint64_t v16 = 0xE500000000000000;
          }
          if (v13 != v15) {
            goto LABEL_22;
          }
LABEL_21:
          if (v14 == v16)
          {
            swift_bridgeObjectRelease_n();
            goto LABEL_4;
          }
LABEL_22:
          char v17 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          Swift::Int result = swift_bridgeObjectRelease();
          if (v17) {
            goto LABEL_4;
          }
          unint64_t v9 = (v9 + 1) & v8;
          unint64_t v10 = v9 >> 6;
          uint64_t v11 = *(void *)(v5 + 8 * (v9 >> 6));
          uint64_t v12 = 1 << v9;
        }
        while ((v11 & (1 << v9)) != 0);
      }
      *(void *)(v5 + 8 * v10) = v12 | v11;
      *(unsigned char *)(*(void *)(v3 + 48) + v9) = v6;
      uint64_t v18 = *(void *)(v3 + 16);
      BOOL v19 = __OFADD__(v18, 1);
      uint64_t v20 = v18 + 1;
      if (v19) {
        break;
      }
      *(void *)(v3 + 16) = v20;
LABEL_4:
      if (v4 == v21) {
        return v3;
      }
    }
    __break(1u);
  }
  else
  {
    return (Swift::Int)_swiftEmptySetSingleton;
  }
  return result;
}

uint64_t sub_C2370(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1FB1E0();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_C23B4(uint64_t a1, unsigned __int8 *a2)
{
  unsigned __int8 v4 = *a2;
  uint64_t v2 = sub_BC2A4(&v4);
  return sub_6519C(v2);
}

uint64_t sub_C2400(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 80);
  uint64_t v2 = *(void *)(result + 40) & 1;
  unint64_t v3 = *(unsigned __int8 *)(result + 536) | 0xA000000000000000;
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v2;
  *(void *)(result + 80) = v1;
  *(void *)(result + 536) = v3;
  return result;
}

uint64_t sub_C2434(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 80);
  uint64_t v2 = *(unsigned __int8 *)(result + 536);
  uint64_t v3 = *(void *)(result + 40) & 1;
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v3;
  *(void *)(result + 80) = v1;
  *(void *)(result + 536) = v2;
  return result;
}

uint64_t sub_C2460@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C2490(a1, (void (*)(uint64_t *))sub_C2518, a2);
}

uint64_t sub_C2478@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_C2490(a1, (void (*)(uint64_t *))sub_C24E8, a2);
}

uint64_t sub_C2490@<X0>(uint64_t *a1@<X0>, void (*a2)(uint64_t *)@<X1>, uint64_t a3@<X8>)
{
  char v5 = *(unsigned char *)(*(void *)(v3 + 16) + 8) & 1;
  uint64_t v7 = *a1;
  char v8 = v5;
  a2(&v7);
  return sub_1269C((uint64_t)&v7, a3);
}

uint64_t sub_C24E8(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 80);
  uint64_t v2 = *(void *)(result + 40) & 1;
  uint64_t v3 = *(unsigned __int8 *)(result + 536) | 0x6000000000000000;
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v2;
  *(void *)(result + 80) = v1;
  *(void *)(result + 536) = v3;
  return result;
}

uint64_t sub_C2518(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 80);
  uint64_t v2 = *(void *)(result + 40) & 1;
  unint64_t v3 = *(unsigned __int8 *)(result + 536) | 0x8000000000000000;
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v2;
  *(void *)(result + 80) = v1;
  *(void *)(result + 536) = v3;
  return result;
}

uint64_t sub_C2548(uint64_t a1)
{
  return a1;
}

uint64_t sub_C2580(uint64_t a1)
{
  uint64_t v54 = *(void *)(a1 + 560);
  uint64_t v2 = *(void *)(a1 + 568);
  uint64_t v3 = *(void *)(a1 + 576);
  uint64_t v4 = *(void *)(a1 + 584);
  uint64_t v5 = *(void *)(a1 + 592);
  uint64_t v6 = *(void *)(a1 + 600);
  uint64_t v7 = *(void *)(a1 + 608);
  uint64_t v8 = *(void *)(a1 + 616);
  long long v53 = *(_OWORD *)(a1 + 624);
  long long v52 = *(_OWORD *)(a1 + 640);
  long long v51 = *(_OWORD *)(a1 + 656);
  long long v50 = *(_OWORD *)(a1 + 672);
  long long v49 = *(_OWORD *)(a1 + 688);
  long long v48 = *(_OWORD *)(a1 + 704);
  long long v47 = *(_OWORD *)(a1 + 720);
  long long v46 = *(_OWORD *)(a1 + 736);
  long long v45 = *(_OWORD *)(a1 + 752);
  long long v44 = *(_OWORD *)(a1 + 768);
  long long v43 = *(_OWORD *)(a1 + 784);
  long long v42 = *(_OWORD *)(a1 + 800);
  long long v41 = *(_OWORD *)(a1 + 816);
  long long v40 = *(_OWORD *)(a1 + 832);
  long long v39 = *(_OWORD *)(a1 + 848);
  long long v38 = *(_OWORD *)(a1 + 864);
  long long v37 = *(_OWORD *)(a1 + 880);
  long long v36 = *(_OWORD *)(a1 + 896);
  long long v35 = *(_OWORD *)(a1 + 912);
  long long v34 = *(_OWORD *)(a1 + 928);
  long long v33 = *(_OWORD *)(a1 + 944);
  long long v32 = *(_OWORD *)(a1 + 960);
  long long v31 = *(_OWORD *)(a1 + 976);
  long long v30 = *(_OWORD *)(a1 + 992);
  long long v29 = *(_OWORD *)(a1 + 1008);
  long long v28 = *(_OWORD *)(a1 + 1024);
  long long v27 = *(_OWORD *)(a1 + 1040);
  long long v26 = *(_OWORD *)(a1 + 1056);
  long long v25 = *(_OWORD *)(a1 + 480);
  long long v23 = *(_OWORD *)(a1 + 448);
  long long v24 = *(_OWORD *)(a1 + 464);
  long long v21 = *(_OWORD *)(a1 + 416);
  long long v22 = *(_OWORD *)(a1 + 432);
  long long v19 = *(_OWORD *)(a1 + 384);
  long long v20 = *(_OWORD *)(a1 + 400);
  long long v17 = *(_OWORD *)(a1 + 352);
  long long v18 = *(_OWORD *)(a1 + 368);
  long long v15 = *(_OWORD *)(a1 + 320);
  long long v16 = *(_OWORD *)(a1 + 336);
  long long v13 = *(_OWORD *)(a1 + 288);
  long long v14 = *(_OWORD *)(a1 + 304);
  long long v11 = *(_OWORD *)(a1 + 256);
  long long v12 = *(_OWORD *)(a1 + 272);
  long long v10 = *(_OWORD *)(a1 + 224);
  sub_128C0(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(void *)(a1 + 96), *(void *)(a1 + 104), *(void *)(a1 + 112), *(void *)(a1 + 120), *(void *)(a1 + 128), *(void *)(a1 + 136), *(void *)(a1 + 144),
    *(void *)(a1 + 152),
    *(void *)(a1 + 160),
    *(void *)(a1 + 168),
    *(void *)(a1 + 176),
    *(void *)(a1 + 184),
    *(void *)(a1 + 192),
    *(void *)(a1 + 200),
    *(void *)(a1 + 208),
    *(void *)(a1 + 216),
    v10,
    *((uint64_t *)&v10 + 1),
    *(void *)(a1 + 240),
    *(void *)(a1 + 248),
    v11,
    *((uint64_t *)&v11 + 1),
    v12,
    *((uint64_t *)&v12 + 1),
    v13,
    *((uint64_t *)&v13 + 1),
    v14,
    *((uint64_t *)&v14 + 1),
    v15,
    *((uint64_t *)&v15 + 1),
    v16,
    *((uint64_t *)&v16 + 1),
    v17,
    *((uint64_t *)&v17 + 1),
    v18,
    *((uint64_t *)&v18 + 1),
    v19,
    *((uint64_t *)&v19 + 1),
    v20,
    *((uint64_t *)&v20 + 1),
    v21,
    *((uint64_t *)&v21 + 1),
    v22,
    *((uint64_t *)&v22 + 1),
    v23,
    *((uint64_t *)&v23 + 1),
    v24,
    *((uint64_t *)&v24 + 1),
    v25,
    *((uint64_t *)&v25 + 1),
    *(void *)(a1 + 496));
  sub_128C0(v54, v2, v3, v4, v5, v6, v7, v8, v53, *((uint64_t *)&v53 + 1), v52, *((uint64_t *)&v52 + 1), v51, *((uint64_t *)&v51 + 1), v50, *((uint64_t *)&v50 + 1), v49, *((unint64_t *)&v49 + 1), v48,
    *((uint64_t *)&v48 + 1),
    v47,
    *((uint64_t *)&v47 + 1),
    v46,
    *((uint64_t *)&v46 + 1),
    v45,
    *((uint64_t *)&v45 + 1),
    v44,
    *((uint64_t *)&v44 + 1),
    v43,
    *((uint64_t *)&v43 + 1),
    v42,
    *((uint64_t *)&v42 + 1),
    v41,
    *((uint64_t *)&v41 + 1),
    v40,
    *((uint64_t *)&v40 + 1),
    v39,
    *((uint64_t *)&v39 + 1),
    v38,
    *((uint64_t *)&v38 + 1),
    v37,
    *((uint64_t *)&v37 + 1),
    v36,
    *((uint64_t *)&v36 + 1),
    v35,
    *((uint64_t *)&v35 + 1),
    v34,
    *((uint64_t *)&v34 + 1),
    v33,
    *((uint64_t *)&v33 + 1),
    v32,
    *((uint64_t *)&v32 + 1),
    v31,
    *((uint64_t *)&v31 + 1),
    v30,
    *((uint64_t *)&v30 + 1),
    v29,
    *((uint64_t *)&v29 + 1),
    v28,
    *((uint64_t *)&v28 + 1),
    v27,
    *((uint64_t *)&v27 + 1),
    v26);
  return a1;
}

uint64_t sub_C28C4(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 80);
  uint64_t v2 = *(void *)(result + 40) & 1;
  uint64_t v3 = *(unsigned __int8 *)(result + 536) | 0x4000000000000000;
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v2;
  *(void *)(result + 80) = v1;
  *(void *)(result + 536) = v3;
  return result;
}

uint64_t sub_C28F4(uint64_t result)
{
  uint64_t v1 = *(unsigned __int8 *)(result + 80);
  uint64_t v2 = *(void *)(result + 40) & 1;
  uint64_t v3 = *(unsigned __int8 *)(result + 536) | 0x2000000000000000;
  *(void *)(result + 8) &= 1uLL;
  *(void *)(result + 40) = v2;
  *(void *)(result + 80) = v1;
  *(void *)(result + 536) = v3;
  return result;
}

uint64_t sub_C292C(uint64_t a1)
{
  unint64_t v2 = sub_C2B28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C2968(uint64_t a1)
{
  unint64_t v2 = sub_C2B28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Author.Rationale.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26F120);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_C2B28();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_26EC48);
  sub_C2D20(&qword_26EC50, (void (*)(void))sub_AFB24);
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_C2B28()
{
  unint64_t result = qword_26F128;
  if (!qword_26F128)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F128);
  }
  return result;
}

uint64_t Author.Rationale.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26F130);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_C2B28();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_26EC48);
    sub_C2D20(&qword_26EC68, (void (*)(void))sub_AFB78);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_C2D20(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26EC48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_C2D90@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Author.Rationale.init(from:)(a1, a2);
}

uint64_t sub_C2DA8(void *a1)
{
  return Author.Rationale.encode(to:)(a1);
}

uint64_t Author.rationale.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 8);
  return swift_bridgeObjectRetain();
}

uint64_t sub_C2DCC()
{
  if (*v0) {
    return 0x6C616E6F69746172;
  }
  else {
    return 0x444965726F7473;
  }
}

uint64_t sub_C2E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_C3794(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_C2E34(uint64_t a1)
{
  unint64_t v2 = sub_C3030();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_C2E70(uint64_t a1)
{
  unint64_t v2 = sub_C3030();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Author.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26F138);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_C3030();
  sub_1FC870();
  char v11 = 0;
  sub_1FC560();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    sub_C3084();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_C3030()
{
  unint64_t result = qword_26F140;
  if (!qword_26F140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F140);
  }
  return result;
}

unint64_t sub_C3084()
{
  unint64_t result = qword_26F148;
  if (!qword_26F148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F148);
  }
  return result;
}

uint64_t Author.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26F150);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_C3030();
  sub_1FC850();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_1FC420();
    char v13 = 1;
    sub_C3290();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_C3290()
{
  unint64_t result = qword_26F158;
  if (!qword_26F158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F158);
  }
  return result;
}

uint64_t sub_C32E4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Author.init(from:)(a1, a2);
}

uint64_t sub_C32FC(void *a1)
{
  return Author.encode(to:)(a1);
}

void *assignWithCopy for Author(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Author(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Author()
{
  return &type metadata for Author;
}

ValueMetadata *type metadata accessor for Author.Rationale()
{
  return &type metadata for Author.Rationale;
}

unsigned char *storeEnumTagSinglePayload for Author.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0xC3478);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Author.CodingKeys()
{
  return &type metadata for Author.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Author.Rationale.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xC354CLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Author.Rationale.CodingKeys()
{
  return &type metadata for Author.Rationale.CodingKeys;
}

unint64_t sub_C3588()
{
  unint64_t result = qword_26F160;
  if (!qword_26F160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F160);
  }
  return result;
}

unint64_t sub_C35E0()
{
  unint64_t result = qword_26F168;
  if (!qword_26F168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F168);
  }
  return result;
}

unint64_t sub_C3638()
{
  unint64_t result = qword_26F170;
  if (!qword_26F170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F170);
  }
  return result;
}

unint64_t sub_C3690()
{
  unint64_t result = qword_26F178;
  if (!qword_26F178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F178);
  }
  return result;
}

unint64_t sub_C36E8()
{
  unint64_t result = qword_26F180;
  if (!qword_26F180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F180);
  }
  return result;
}

unint64_t sub_C3740()
{
  unint64_t result = qword_26F188;
  if (!qword_26F188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F188);
  }
  return result;
}

uint64_t sub_C3794(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6C616E6F69746172 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t type metadata accessor for HardcodedMediaTypesRecommendationService()
{
  return self;
}

uint64_t sub_C38B8(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v3;
  return _swift_task_switch(sub_C38DC, 0, 0);
}

uint64_t sub_C38DC()
{
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v0[3] + 16);
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_C3B08(v2, v1);
  swift_bridgeObjectRelease();
  unsigned int v4 = (uint64_t (*)(uint64_t))v0[1];
  return v4(v3);
}

unint64_t sub_C3970(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(a2 + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  while (1)
  {
    while (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v13 = v12 | (v11 << 6);
      if (*(void *)(a3 + 16))
      {
LABEL_20:
        unint64_t result = sub_4C69C(*(unsigned char *)(*(void *)(a2 + 48) + v13));
        if (v17)
        {
          long long v18 = (void *)swift_bridgeObjectRetain();
          unint64_t result = (unint64_t)sub_65348(v18);
        }
      }
    }
    if (__OFADD__(v11++, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v11 >= v9) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    if (!v15) {
      break;
    }
LABEL_19:
    unint64_t v8 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v11 << 6);
    if (*(void *)(a3 + 16)) {
      goto LABEL_20;
    }
  }
  int64_t v16 = v11 + 1;
  if (v11 + 1 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v11 + 2;
  if (v11 + 2 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v11 + 3;
  if (v11 + 3 >= v9) {
    goto LABEL_26;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  int64_t v16 = v11 + 4;
  if (v11 + 4 >= v9)
  {
LABEL_26:
    swift_release();
    return a1;
  }
  unint64_t v15 = *(void *)(v5 + 8 * v16);
  if (v15)
  {
LABEL_18:
    int64_t v11 = v16;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v11 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v11 >= v9) {
      goto LABEL_26;
    }
    unint64_t v15 = *(void *)(v5 + 8 * v11);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_C3B08(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a1 + 64;
  uint64_t v4 = -1 << *(unsigned char *)(a1 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v28 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v13 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v14 = v13 | (v28 << 6);
      goto LABEL_23;
    }
    int64_t v15 = v28 + 1;
    if (__OFADD__(v28, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v27 + 8 * v15);
    if (!v16) {
      break;
    }
LABEL_22:
    unint64_t v6 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v15 << 6);
    int64_t v28 = v15;
LABEL_23:
    char v18 = *(unsigned char *)(*(void *)(a1 + 48) + v14);
    uint64_t v19 = *(void *)(*(void *)(a1 + 56) + 8 * v14);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v20 = sub_C3970((uint64_t)_swiftEmptySetSingleton, v19, a2);
    swift_bridgeObjectRelease();
    unint64_t v21 = _swiftEmptyDictionarySingleton[2];
    if (_swiftEmptyDictionarySingleton[3] <= v21) {
      sub_116FD8(v21 + 1, 1);
    }
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    unint64_t v8 = &_swiftEmptyDictionarySingleton[8];
    uint64_t v9 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
    unint64_t v10 = result & ~v9;
    unint64_t v11 = v10 >> 6;
    if (((-1 << v10) & ~_swiftEmptyDictionarySingleton[(v10 >> 6) + 8]) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v10) & ~_swiftEmptyDictionarySingleton[(v10 >> 6) + 8])) | v10 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v9) >> 6;
      do
      {
        if (++v11 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v11 == v23;
        if (v11 == v23) {
          unint64_t v11 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v8[v11];
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v11 << 6);
    }
    *(void *)((char *)v8 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(unsigned char *)(_swiftEmptyDictionarySingleton[6] + v12) = v18;
    *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v12) = v20;
    ++_swiftEmptyDictionarySingleton[2];
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v28 + 2;
  if (v28 + 2 >= v26) {
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v27 + 8 * v17);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v28 + 3;
  if (v28 + 3 >= v26) {
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v27 + 8 * v17);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v28 + 4;
  if (v28 + 4 >= v26) {
    goto LABEL_37;
  }
  unint64_t v16 = *(void *)(v27 + 8 * v17);
  if (v16) {
    goto LABEL_21;
  }
  int64_t v17 = v28 + 5;
  if (v28 + 5 >= v26)
  {
LABEL_37:
    sub_1226C();
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  unint64_t v16 = *(void *)(v27 + 8 * v17);
  if (v16)
  {
LABEL_21:
    int64_t v15 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v15 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v16 = *(void *)(v27 + 8 * v15);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t RecommendationSource.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  v8._uint64_t countAndFlagsBits = a1;
  v5._rawValue = &off_256978;
  v8._object = a2;
  Swift::Int v6 = sub_1FC2D0(v5, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

uint64_t RecommendationSource.rawValue.getter()
{
  return 1769105779;
}

unint64_t sub_C3ED0()
{
  unint64_t result = qword_26F238;
  if (!qword_26F238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F238);
  }
  return result;
}

Swift::Int sub_C3F24()
{
  return sub_1FC830();
}

uint64_t sub_C3F70()
{
  return sub_1FB8C0();
}

Swift::Int sub_C3F80()
{
  return sub_1FC830();
}

uint64_t sub_C3FC8@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  v7._uint64_t countAndFlagsBits = *a1;
  uint64_t v3 = (void *)a1[1];
  v4._rawValue = &off_2569B0;
  v7._object = v3;
  Swift::Int v5 = sub_1FC2D0(v4, v7);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v5 != 0;
  return result;
}

void sub_C401C(void *a1@<X8>)
{
  *a1 = 1769105779;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_C4030()
{
  return sub_1FBA60();
}

uint64_t sub_C4090()
{
  return sub_1FBA40();
}

unsigned char *storeEnumTagSinglePayload for RecommendationSource(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0xC417CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for RecommendationSource()
{
  return &type metadata for RecommendationSource;
}

unint64_t sub_C41B4()
{
  unint64_t result = qword_26F240;
  if (!qword_26F240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F240);
  }
  return result;
}

uint64_t sub_C4208(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  Swift::Int v6 = v4;
  uint64_t v9 = sub_12124(&qword_26D908);
  __chkstk_darwin(v9 - 8);
  unint64_t v11 = (char *)v20 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5606C(a1, (uint64_t)v11, &qword_26D908);
  uint64_t v12 = sub_1FBC60();
  uint64_t v13 = *(void *)(v12 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_55F38((uint64_t)v11, &qword_26D908);
    if (*(void *)(a3 + 16))
    {
LABEL_3:
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v14 = sub_1FBBD0();
      uint64_t v16 = v15;
      swift_unknownObjectRelease();
      goto LABEL_6;
    }
  }
  else
  {
    sub_1FBC50();
    (*(void (**)(char *, uint64_t))(v13 + 8))(v11, v12);
    if (*(void *)(a3 + 16)) {
      goto LABEL_3;
    }
  }
  uint64_t v14 = 0;
  uint64_t v16 = 0;
LABEL_6:
  uint64_t v17 = *v6;
  sub_12124(a4);
  char v18 = (void *)(v16 | v14);
  if (v16 | v14)
  {
    v21[0] = 0;
    v21[1] = 0;
    char v18 = v21;
    _OWORD v21[2] = v14;
    v21[3] = v16;
  }
  v20[1] = 1;
  v20[2] = v18;
  v20[3] = v17;
  swift_task_create();
  return swift_release();
}

Swift::Int sub_C43F4(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_124764(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_D6734(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_C4460()
{
  swift_defaultActor_destroy();

  return _swift_defaultActor_deallocate(v0);
}

uint64_t sub_C4490()
{
  return v0;
}

uint64_t sub_C449C()
{
  type metadata accessor for RequestListActor.ActorType();
  uint64_t v0 = swift_allocObject();
  uint64_t result = swift_defaultActor_initialize();
  qword_26F248 = v0;
  return result;
}

double sub_C4518@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_5606C(a1, (uint64_t)v17, &qword_26D170);
  if (v17[3])
  {
    sub_12124(&qword_26F4A8);
    if (swift_dynamicCast())
    {
      id v3 = [objc_allocWithZone((Class)NSMutableArray) init];
      uint64_t v4 = *(void *)(v16 + 16);
      if (v4)
      {
        swift_bridgeObjectRetain();
        uint64_t v5 = 0;
        do
        {
          uint64_t v6 = *(void *)(v16 + 8 * v5++ + 32);
          id v7 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v6];
          [v3 addObject:v7];
        }
        while (v4 != v5);
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      Swift::String v8 = self;
      v17[0] = 0;
      id v9 = [v8 archivedDataWithRootObject:v3 requiringSecureCoding:1 error:v17];
      id v10 = v17[0];
      if (v9)
      {
        uint64_t v11 = sub_1FAFE0();
        uint64_t v13 = v12;

        *(void *)(a2 + 24) = &type metadata for Data;
        *(void *)a2 = v11;
        *(void *)(a2 + 8) = v13;
        return result;
      }
      uint64_t v15 = v10;
      sub_1FAEB0();

      swift_willThrow();
      swift_errorRelease();
    }
  }
  else
  {
    sub_55F38((uint64_t)v17, &qword_26D170);
  }
  double result = 0.0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return result;
}

uint64_t sub_C4728@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  uint64_t v4 = sub_1FAEC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = (char *)&v24 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5606C(a1, (uint64_t)v34, &qword_26D170);
  if (!v35) {
    goto LABEL_17;
  }
  sub_D9BE0(0, &qword_26F478);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0)
  {
LABEL_18:
    *a2 = 0u;
    a2[1] = 0u;
    return result;
  }
  int64_t v28 = a2;
  uint64_t v26 = v5;
  id v9 = (void *)v32;
  sub_D9BE0(0, &qword_26F480);
  sub_12124(&qword_26F488);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2055D0;
  *(void *)(v10 + 32) = sub_D9BE0(0, &qword_26F490);
  uint64_t v11 = sub_D9BE0(0, &qword_26F498);
  *(void *)(v10 + 40) = v11;
  id v12 = v9;
  uint64_t v13 = sub_1FAFE0();
  unint64_t v15 = v14;

  sub_1FBDD0();
  sub_520E8(v13, v15);
  uint64_t v27 = v11;
  swift_bridgeObjectRelease();
  sub_5606C((uint64_t)v34, (uint64_t)&v32, &qword_26D170);
  if (!v33)
  {

    sub_55F38((uint64_t)&v32, &qword_26D170);
LABEL_16:
    a2 = v28;
LABEL_17:
    uint64_t result = sub_55F38((uint64_t)v34, &qword_26D170);
    goto LABEL_18;
  }
  if ((swift_dynamicCast() & 1) == 0)
  {

    goto LABEL_16;
  }
  id v16 = *(id *)&v31[0];
  sub_1FBE60();
  id v25 = v16;

  sub_DAEAC(&qword_26F4A0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  sub_1FBEC0();
  if (v33)
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
    do
    {
      sub_560D0(&v32, v31);
      sub_560E0((uint64_t)v31, (uint64_t)v30);
      if (swift_dynamicCast())
      {
        id v18 = v29;
        id v19 = [v29 integerValue];
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v17 = sub_42038(0, v17[2] + 1, 1, v17);
        }
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (v21 >= v20 >> 1) {
          uint64_t v17 = sub_42038((void *)(v20 > 1), v21 + 1, 1, v17);
        }
        v17[2] = v21 + 1;
        v17[v21 + 4] = v19;
      }
      sub_1264C((uint64_t)v31);
      sub_1FBEC0();
    }
    while (v33);
  }
  else
  {
    uint64_t v17 = _swiftEmptyArrayStorage;
  }
  (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v4);

  uint64_t v22 = sub_12124(&qword_26F4A8);
  unint64_t v23 = v28;
  *((void *)v28 + 3) = v22;

  *unint64_t v23 = v17;
  return sub_55F38((uint64_t)v34, &qword_26D170);
}

id sub_C4BAC(void *a1, uint64_t a2, uint64_t a3, void (*a4)(void *__return_ptr, _OWORD *))
{
  if (a3)
  {
    id v6 = a1;
    swift_unknownObjectRetain();
    sub_1FBF20();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v15, 0, sizeof(v15));
    id v7 = a1;
  }
  a4(v16, v15);

  sub_55F38((uint64_t)v15, &qword_26D170);
  uint64_t v8 = v17;
  if (v17)
  {
    id v9 = sub_5D64(v16, v17);
    uint64_t v10 = *(void *)(v8 - 8);
    __chkstk_darwin(v9);
    id v12 = (char *)v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v10 + 16))(v12);
    uint64_t v13 = (void *)sub_1FC5E0();
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v8);
    sub_1264C((uint64_t)v16);
  }
  else
  {
    uint64_t v13 = 0;
  }

  return v13;
}

NSString sub_C4D34()
{
  NSString result = sub_1FB7E0();
  qword_2A5BC8 = (uint64_t)result;
  return result;
}

id sub_C4DAC()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for GenrePathTransformer();
  [super dealloc];
}

uint64_t sub_C4DE4()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5BD0);
  sub_6DBC8(v0, (uint64_t)qword_2A5BD0);
  return sub_1FB420();
}

uint64_t MetadataCache.__allocating_init(bookFetchService:genreFetchService:maxItemCount:subfolder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = swift_allocObject();
  MetadataCache.init(bookFetchService:genreFetchService:maxItemCount:subfolder:)(a1, a2, a3, a4, a5);
  return v10;
}

void *MetadataCache.init(bookFetchService:genreFetchService:maxItemCount:subfolder:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v6 = v5;
  uint64_t v75 = a4;
  uint64_t v11 = *v5;
  uint64_t v78 = sub_1FBDF0();
  uint64_t v12 = *(void *)(v78 - 8);
  uint64_t v13 = __chkstk_darwin(v78);
  uint64_t v74 = &v70[-((v14 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v13);
  id v16 = &v70[-v15];
  uint64_t v84 = sub_1FAF80();
  uint64_t v83 = *(void *)(v84 - 8);
  uint64_t v17 = __chkstk_darwin(v84);
  uint64_t v72 = &v70[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v73 = &v70[-v20];
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v79 = &v70[-v22];
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v80 = &v70[-v24];
  __chkstk_darwin(v23);
  uint64_t v26 = &v70[-v25];
  v6[2] = 25;
  v6[3] = 0;
  uint64_t v27 = (void **)(v6 + 3);
  *((_OWORD *)v6 + 3) = 0u;
  uint64_t v76 = (void **)(v6 + 6);
  v6[4] = 0;
  *((_OWORD *)v6 + 4) = 0u;
  v6[10] = 0x417E133800000000;
  v6[11] = _swiftEmptyDictionarySingleton;
  v6[12] = _swiftEmptyDictionarySingleton;
  uint64_t v82 = a1;
  sub_51B70(a1, (uint64_t)(v6 + 13));
  uint64_t v81 = a2;
  sub_51B70(a2, (uint64_t)(v6 + 18));
  v6[5] = a3;
  id v28 = [objc_allocWithZone((Class)type metadata accessor for GenrePathTransformer()) init];
  id v29 = self;
  if (qword_26C318 != -1) {
    swift_once();
  }
  [v29 setValueTransformer:v28 forName:qword_2A5BC8];

  uint64_t v77 = v11;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v31 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v85 = type metadata accessor for CachedPersonalizationBookMetadata();
  sub_12124(&qword_26F250);
  sub_1FB880();
  NSString v32 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  NSString v33 = sub_1FB7E0();
  id v34 = [v31 pathForResource:v32 ofType:v33];

  uint64_t v35 = v84;
  uint64_t v36 = v83;
  if (v34)
  {
    id v37 = [self fileURLWithPath:v34 isDirectory:1];

    sub_1FAF30();
    id v38 = objc_allocWithZone((Class)NSManagedObjectModel);
    sub_1FAF00(v39);
    long long v41 = v40;
    id v42 = [v38 initWithContentsOfURL:v40];

    (*(void (**)(unsigned char *, uint64_t))(v36 + 8))(v26, v35);
    long long v43 = *v27;
    *uint64_t v27 = v42;
  }
  long long v44 = *v27;
  if (!*v27)
  {
    swift_bridgeObjectRelease();
    uint64_t v60 = (void *)v6[4];
    if (!v60) {
      goto LABEL_11;
    }
    goto LABEL_10;
  }
  id v45 = objc_allocWithZone((Class)NSPersistentStoreCoordinator);
  id v71 = v44;
  id v46 = [v45 initWithManagedObjectModel:];
  long long v47 = (void *)v6[4];
  v6[4] = v46;
  id v48 = v46;

  v6[7] = v75;
  v6[8] = a5;
  swift_bridgeObjectRelease();
  uint64_t v49 = v6[7];
  unint64_t v50 = v6[8];
  swift_bridgeObjectRetain();
  long long v51 = v80;
  static MetadataCache.persistentStoreDirectory(subfolder:)(v49, v50, (uint64_t)v80);
  swift_bridgeObjectRelease();
  uint64_t v53 = v6[7];
  unint64_t v52 = v6[8];
  swift_bridgeObjectRetain();
  static MetadataCache.recreatePersistentStoreDirectory(subfolder:)(v53, v52);
  swift_bridgeObjectRelease();
  uint64_t v54 = v79;
  sub_1FAF10();
  sub_12124(&qword_26F258);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2055D0;
  *(void *)(inited + 32) = sub_1FB810();
  *(void *)(inited + 40) = v56;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_1FB810();
  *(void *)(inited + 64) = v57;
  *(unsigned char *)(inited + 72) = 1;
  uint64_t v58 = v16;
  unint64_t v59 = sub_161560(inited);
  sub_1FBDE0();
  sub_C634C(v59);
  uint64_t v61 = (void *)sub_1FBE40();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v58, v78);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v62 = *(void (**)(unsigned char *, uint64_t))(v83 + 8);
  uint64_t v63 = v84;
  v62(v54, v84);
  v62(v51, v63);

  uint64_t v60 = (void *)v6[4];
  if (v60)
  {
LABEL_10:
    id v64 = objc_allocWithZone((Class)NSManagedObjectContext);
    id v65 = v60;
    id v66 = [v64 initWithConcurrencyType:1];
    [v66 setUndoManager:0];
    uint64_t v67 = *v76;
    *uint64_t v76 = v66;
    id v68 = v66;

    [v68 setPersistentStoreCoordinator:v65];
  }
LABEL_11:
  sub_1264C(v81);
  sub_1264C(v82);
  return v6;
}

uint64_t type metadata accessor for GenrePathTransformer()
{
  return self;
}

uint64_t static MetadataCache.persistentStoreDirectory(subfolder:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1FAF80();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v11 - 8);
  uint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self defaultManager];
  id v15 = [v14 URLsForDirectory:13 inDomains:1];

  uint64_t v16 = sub_1FBAC0();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * (v17 - 1), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v19(a3, v13, v7);
    v22[1] = v3;
    sub_12124(&qword_26F268);
    sub_1FB880();
    sub_1FAF10();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v20(a3, v7);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v10, v7);
    if (a2)
    {
      uint64_t v21 = HIBYTE(a2) & 0xF;
      if ((a2 & 0x2000000000000000) == 0) {
        uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        sub_1FAF10();
        v20(a3, v7);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v10, v7);
      }
    }
  }
  return result;
}

unint64_t static MetadataCache.persistentStoreFileName()()
{
  return 0xD000000000000010;
}

uint64_t static MetadataCache.recreatePersistentStoreDirectory(subfolder:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1FAF80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static MetadataCache.persistentStoreDirectory(subfolder:)(a1, a2, (uint64_t)v7);
  id v8 = [self defaultManager];
  sub_1FAF00(v9);
  uint64_t v11 = v10;
  id v17 = 0;
  LODWORD(a1) = [v8 createDirectoryAtURL:v10 withIntermediateDirectories:1 attributes:0 error:&v17];

  if (a1)
  {
    uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    id v13 = v17;
    return v12(v7, v4);
  }
  else
  {
    id v15 = v17;
    sub_1FAEB0();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_errorRelease();
  }
}

uint64_t sub_C634C(uint64_t a1)
{
  if (*(void *)(a1 + 16))
  {
    sub_12124(&qword_26F648);
    objc_super v2 = (void *)sub_1FC2A0();
  }
  else
  {
    objc_super v2 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v27 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(63 - v3) >> 6;
  uint64_t v6 = v2 + 8;
  swift_bridgeObjectRetain();
  uint64_t result = swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v11 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v12 = v11 | (v8 << 6);
      goto LABEL_28;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
LABEL_38:
      __break(1u);
      goto LABEL_39;
    }
    if (v13 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v26) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v27 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v26) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v27 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v26) {
            goto LABEL_37;
          }
          unint64_t v14 = *(void *)(v27 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
LABEL_28:
    id v17 = (void *)(*(void *)(a1 + 48) + 16 * v12);
    uint64_t v18 = v17[1];
    *(void *)&v36[0] = *v17;
    *((void *)&v36[0] + 1) = v18;
    swift_bridgeObjectRetain();
    swift_dynamicCast();
    swift_dynamicCast();
    long long v32 = v28;
    long long v33 = v29;
    uint64_t v34 = v30;
    sub_560D0(&v31, v35);
    long long v28 = v32;
    long long v29 = v33;
    uint64_t v30 = v34;
    sub_560D0(v35, v36);
    sub_560D0(v36, &v32);
    uint64_t result = sub_1FC000(v2[5]);
    uint64_t v19 = -1 << *((unsigned char *)v2 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~v6[v20 >> 6]) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v20) & ~v6[v20 >> 6])) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v6[v21];
      }
      while (v25 == -1);
      unint64_t v9 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)((char *)v6 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    uint64_t v10 = v2[6] + 40 * v9;
    *(_OWORD *)uint64_t v10 = v28;
    *(_OWORD *)(v10 + 16) = v29;
    *(void *)(v10 + 32) = v30;
    uint64_t result = (uint64_t)sub_560D0(&v32, (_OWORD *)(v2[7] + 32 * v9));
    ++v2[2];
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v26)
  {
LABEL_37:
    swift_release();
    sub_1226C();
    return (uint64_t)v2;
  }
  unint64_t v14 = *(void *)(v27 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v26) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v27 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_27;
    }
  }
LABEL_39:
  __break(1u);
  return result;
}

uint64_t MetadataCache.deinit()
{
  if (*(void *)(v0 + 72))
  {
    swift_retain();
    sub_12124(&qword_26D670);
    sub_1FBC70();
    swift_release();
  }

  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1264C(v0 + 104);
  sub_1264C(v0 + 144);
  return v0;
}

uint64_t MetadataCache.__deallocating_deinit()
{
  MetadataCache.deinit();

  return swift_deallocClassInstance();
}

uint64_t MetadataCache.fetchMetadataFor(bookIDs:audiobookIDs:)(uint64_t a1, uint64_t a2)
{
  v3[9] = a2;
  v3[10] = v2;
  v3[8] = a1;
  return _swift_task_switch(sub_C67FC, 0, 0);
}

uint64_t sub_C67FC()
{
  uint64_t v1 = *(void *)(v0 + 80);
  uint64_t v2 = *(void **)(v1 + 48);
  *(void *)(v0 + 88) = v2;
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = swift_task_alloc();
    *(void *)(v0 + 96) = v4;
    long long v5 = *(_OWORD *)(v0 + 64);
    *(void *)(v4 + 16) = v3;
    *(_OWORD *)(v4 + 24) = v5;
    *(void *)(v4 + 40) = _swiftEmptyArrayStorage;
    *(void *)(v4 + 48) = v1;
    uint64_t v6 = (void *)swift_task_alloc();
    *(void *)(v0 + 104) = v6;
    uint64_t v7 = sub_12124(&qword_26F278);
    *uint64_t v6 = v0;
    v6[1] = sub_C6A20;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 56, 0, 0, 0xD00000000000003BLL, 0x8000000000218380, sub_D5E80, v4, v7);
  }
  else
  {
    sub_51B70(v1 + 104, v0 + 16);
    uint64_t v8 = *(void *)(v0 + 40);
    uint64_t v9 = *(void *)(v0 + 48);
    sub_5D64((void *)(v0 + 16), v8);
    unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 120) = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_C6C10;
    uint64_t v12 = *(void *)(v0 + 64);
    uint64_t v11 = *(void *)(v0 + 72);
    return v14(v12, v11, v8, v9);
  }
}

uint64_t sub_C6A20()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_C6BA8;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_C6B3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_C6B3C()
{
  uint64_t v1 = *(void *)(v0 + 56);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_C6BA8()
{
  uint64_t v1 = *(void **)(v0 + 88);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_C6C10(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_C6DA0;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    long long v5 = sub_C6D38;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_C6D38()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 136);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_C6DA0()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MetadataCache.fetchMetadataFor(storeIDs:)(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return _swift_task_switch(sub_C6E24, 0, 0);
}

uint64_t sub_C6E24()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void **)(v1 + 48);
  v0[10] = v2;
  if (v2)
  {
    uint64_t v3 = v0[8];
    id v4 = v2;
    long long v5 = (void *)swift_task_alloc();
    v0[11] = v5;
    void v5[2] = v4;
    v5[3] = _swiftEmptyArrayStorage;
    v5[4] = _swiftEmptyArrayStorage;
    void v5[5] = v3;
    v5[6] = v1;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[12] = v6;
    uint64_t v7 = sub_12124(&qword_26F278);
    *uint64_t v6 = v0;
    v6[1] = sub_C7048;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD00000000000003BLL, 0x8000000000218380, sub_D5E80, v5, v7);
  }
  else
  {
    sub_51B70(v1 + 104, (uint64_t)(v0 + 2));
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    sub_5D64(v0 + 2, v8);
    int64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 16) + **(int **)(v9 + 16));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[14] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_C7238;
    uint64_t v11 = v0[8];
    return v13(v11, v8, v9);
  }
}

uint64_t sub_C7048()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_C71D0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_C7164;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_C7164()
{
  uint64_t v1 = *(void *)(v0 + 56);

  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_C71D0()
{
  uint64_t v1 = *(void **)(v0 + 80);
  swift_task_dealloc();

  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_C7238(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 120) = v1;
  swift_task_dealloc();
  if (v1)
  {
    long long v5 = sub_C73C8;
  }
  else
  {
    *(void *)(v4 + 128) = a1;
    long long v5 = sub_C7360;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_C7360()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_C73C8()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t MetadataCache.cacheEntryCount()()
{
  *(void *)(v1 + 24) = v0;
  *(void *)(v1 + 32) = *v0;
  return _swift_task_switch(sub_C7474, 0, 0);
}

uint64_t sub_C7474()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_C7570;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000011, 0x80000000002183C0, sub_D5E94, v3, &type metadata for UInt);
}

uint64_t sub_C7570()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_C7688, 0, 0);
}

uint64_t sub_C7688()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 16));
}

void sub_C76A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_12124(&qword_26F560);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void **)(a2 + 48);
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    aBlock[4] = sub_D9568;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DD3D8;
    aBlock[3] = &unk_25DF68;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v9;
    swift_release();
    [v13 performBlock:v12];
    _Block_release(v12);
  }
  else
  {
    sub_1FBBF0();
  }
}

void sub_C7894()
{
  type metadata accessor for CachedPersonalizationBookMetadata();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v1 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithEntityName:v3];

  if (sub_1FBE20() < 0)
  {
    sub_1FC210();
    __break(1u);
  }
  else
  {
    sub_12124(&qword_26F560);
    sub_1FBBF0();
  }
}

void sub_C7AAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v19 = a6;
  uint64_t v11 = sub_12124(&qword_26F568);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  __chkstk_darwin(v11);
  (*(void (**)(char *, uint64_t, uint64_t))(v12 + 16))((char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v11);
  unint64_t v14 = (*(unsigned __int8 *)(v12 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v15 = (char *)swift_allocObject();
  *((void *)v15 + 2) = a3;
  *((void *)v15 + 3) = a4;
  *((void *)v15 + 4) = a5;
  *((void *)v15 + 5) = a2;
  *((void *)v15 + 6) = v19;
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(&v15[v14], (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0), v11);
  aBlock[4] = sub_D96EC;
  aBlock[5] = v15;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D8;
  aBlock[3] = &unk_25DFB8;
  int64_t v16 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  id v17 = a2;
  swift_retain();
  swift_release();
  [v17 performBlock:v16];
  _Block_release(v16);
}

void sub_C7CA8(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6)
{
  uint64_t v86 = a6;
  uint64_t v87 = a5;
  uint64_t v7 = sub_12124(&qword_26F568);
  uint64_t v80 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v77 = v8;
  uint64_t v79 = (char *)&v77 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_26D908);
  __chkstk_darwin(v9 - 8);
  uint64_t v78 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_50A6C(v11);
  swift_bridgeObjectRelease();
  uint64_t v93 = v12;
  swift_bridgeObjectRetain();
  uint64_t v13 = swift_bridgeObjectRetain();
  uint64_t v14 = sub_50A6C(v13);
  swift_bridgeObjectRelease();
  uint64_t v92 = v14;
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  uint64_t v16 = sub_50A6C(v15);
  swift_bridgeObjectRelease();
  uint64_t v91 = v16;
  swift_bridgeObjectRetain();
  uint64_t v17 = sub_1EF3EC(v14, v12);
  uint64_t v18 = sub_1EF3EC(v16, v17);
  uint64_t v90 = v18;
  type metadata accessor for CachedPersonalizationBookMetadata();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain();
  unint64_t v20 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v21 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v22 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  uint64_t v23 = (uint64_t)[v21 initWithEntityName:v22];

  sub_12124(&qword_26F4B8);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_2055D0;
  *(void *)(v24 + 56) = &type metadata for String;
  *(void *)(v24 + 32) = 0x44497465737361;
  *(void *)(v24 + 40) = 0xE700000000000000;
  *(void *)(v24 + 88) = sub_12124(&qword_26EA88);
  *(void *)(v24 + 64) = v18;
  NSString v25 = sub_1FB7E0();
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  id v27 = [self predicateWithFormat:v25 argumentArray:isa];

  [(id)v23 setPredicate:v27];
  unint64_t v28 = sub_1FBE30();
  uint64_t v88 = v7;
  uint64_t v81 = a4;
  unint64_t v29 = v28;
  uint64_t v85 = 0;
  uint64_t v89 = _swiftEmptyArrayStorage;
  if (v28 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v30 = sub_1FC270();
    if (v30) {
      goto LABEL_3;
    }
LABEL_59:
    swift_bridgeObjectRelease();
    unint64_t v40 = (unint64_t)_swiftEmptyArrayStorage;
    unint64_t v36 = (unint64_t)_swiftEmptyArrayStorage;
    goto LABEL_21;
  }
  uint64_t v30 = *(void *)((char *)&dword_10 + (v28 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v30) {
    goto LABEL_59;
  }
LABEL_3:
  if (v30 < 1)
  {
    __break(1u);
LABEL_61:
    sub_1FC210();
    __break(1u);
    return;
  }
  uint64_t v31 = 0;
  unint64_t v32 = v29 & 0xC000000000000001;
  unint64_t v33 = v29;
  do
  {
    if (v32) {
      id v34 = (id)sub_1FC090();
    }
    else {
      id v34 = *(id *)(v29 + 8 * v31 + 32);
    }
    uint64_t v35 = v34;
    if ([v34 genresKnown])
    {
      sub_1FC150();
      sub_1FC180();
      sub_1FC190();
      sub_1FC160();
      unint64_t v29 = v33;
    }
    else
    {
    }
    ++v31;
  }
  while (v30 != v31);
  swift_bridgeObjectRelease();
  unint64_t v36 = (unint64_t)v89;
  uint64_t v89 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  for (uint64_t i = 0; i != v30; ++i)
  {
    if (v32) {
      id v38 = (id)sub_1FC090();
    }
    else {
      id v38 = *(id *)(v29 + 8 * i + 32);
    }
    long long v39 = v38;
    if ([v38 genresKnown])
    {
    }
    else
    {
      sub_1FC150();
      sub_1FC180();
      sub_1FC190();
      sub_1FC160();
      unint64_t v29 = v33;
    }
  }
  swift_bridgeObjectRelease();
  unint64_t v40 = (unint64_t)v89;
LABEL_21:
  unint64_t v83 = v29;
  if (v36 >> 62) {
    goto LABEL_36;
  }
  uint64_t v41 = *(void *)((char *)&dword_10 + (v36 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (id j = (id)v23; v41; id j = (id)v23)
  {
    id v42 = _swiftEmptyArrayStorage;
    uint64_t v23 = 4;
    while (1)
    {
      id v43 = (v36 & 0xC000000000000001) != 0 ? (id)sub_1FC090() : *(id *)(v36 + 8 * v23);
      long long v44 = v43;
      uint64_t v45 = v23 - 3;
      if (__OFADD__(v23 - 4, 1)) {
        break;
      }
      unint64_t v46 = (unint64_t)[v43 assetID];
      if ((v46 & 0x8000000000000000) != 0) {
        goto LABEL_61;
      }
      unint64_t v47 = v46;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v42 = sub_41858(0, v42[2] + 1, 1, v42);
      }
      unint64_t v49 = v42[2];
      unint64_t v48 = v42[3];
      if (v49 >= v48 >> 1) {
        id v42 = sub_41858((void *)(v48 > 1), v49 + 1, 1, v42);
      }
      void v42[2] = v49 + 1;
      v42[v49 + 4] = v47;
      ++v23;
      if (v45 == v41) {
        goto LABEL_38;
      }
    }
    __break(1u);
LABEL_36:
    swift_bridgeObjectRetain();
    uint64_t v41 = sub_1FC270();
  }
  id v42 = _swiftEmptyArrayStorage;
LABEL_38:
  swift_bridgeObjectRelease();
  uint64_t v50 = sub_50A6C((uint64_t)v42);
  swift_bridgeObjectRelease();
  if (v40 >> 62) {
    goto LABEL_54;
  }
  uint64_t v51 = *(void *)((char *)&dword_10 + (v40 & 0xFFFFFFFFFFFFFF8));
  uint64_t v82 = v50;
  if (v51)
  {
LABEL_40:
    uint64_t v52 = 4;
    while (1)
    {
      uint64_t v50 = v52 - 4;
      if ((v40 & 0xC000000000000001) != 0) {
        id v53 = (id)sub_1FC090();
      }
      else {
        id v53 = *(id *)(v40 + 8 * v52);
      }
      uint64_t v54 = v53;
      uint64_t v55 = v52 - 3;
      if (__OFADD__(v50, 1))
      {
        __break(1u);
LABEL_54:
        swift_bridgeObjectRetain();
        uint64_t v51 = sub_1FC270();
        swift_bridgeObjectRelease();
        uint64_t v82 = v50;
        if (!v51) {
          goto LABEL_55;
        }
        goto LABEL_40;
      }
      uint64_t v56 = (char *)[v53 mediaType];
      if (v56 == (unsigned char *)&dword_0 + 1) {
        break;
      }
      if (v56 == (unsigned char *)&dword_0 + 2)
      {
        uint64_t v57 = (uint64_t)[v54 assetID];
        if (v57 < 0) {
          goto LABEL_61;
        }
        uint64_t v58 = v57;
LABEL_52:
        sub_73A4((uint64_t *)&v89, v58);
        sub_106790(v58);
      }

      ++v52;
      if (v55 == v51) {
        goto LABEL_55;
      }
    }
    uint64_t v59 = (uint64_t)[v54 assetID];
    if (v59 < 0) {
      goto LABEL_61;
    }
    uint64_t v58 = v59;
    goto LABEL_52;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  uint64_t v60 = v82;
  sub_10648C(v82);
  sub_10648C(v60);
  sub_10648C(v60);
  sub_10648C(v60);
  swift_bridgeObjectRelease();
  uint64_t v61 = v87;
  swift_retain();
  uint64_t v62 = (void *)sub_D7414(_swiftEmptyDictionarySingleton, v36);
  swift_bridgeObjectRelease();
  swift_release();
  uint64_t v63 = *(void *)(v90 + 16);
  swift_bridgeObjectRelease();
  if (v63)
  {
    uint64_t v85 = sub_4AB04(v93);
    swift_bridgeObjectRelease();
    id v64 = sub_4AB04(v92);
    swift_bridgeObjectRelease();
    id v65 = sub_4AB04(v91);
    swift_bridgeObjectRelease();
    uint64_t v66 = sub_1FBC60();
    uint64_t v67 = v62;
    uint64_t v68 = (uint64_t)v78;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v66 - 8) + 56))(v78, 1, 1, v66);
    uint64_t v70 = v79;
    uint64_t v69 = v80;
    uint64_t v71 = v88;
    (*(void (**)(char *, uint64_t, uint64_t))(v80 + 16))(v79, v86, v88);
    unint64_t v72 = (*(unsigned __int8 *)(v69 + 80) + 80) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80);
    uint64_t v73 = (char *)swift_allocObject();
    *((void *)v73 + 2) = 0;
    *((void *)v73 + 3) = 0;
    uint64_t v74 = v85;
    *((void *)v73 + 4) = v61;
    *((void *)v73 + 5) = v74;
    *((void *)v73 + 6) = v64;
    *((void *)v73 + 7) = v65;
    uint64_t v75 = v81;
    *((void *)v73 + 8) = v81;
    *((void *)v73 + 9) = v67;
    (*(void (**)(char *, char *, uint64_t))(v69 + 32))(&v73[v72], v70, v71);
    swift_retain();
    id v76 = v75;
    sub_1B6494(v68, (uint64_t)&unk_26F578, (uint64_t)v73);
    swift_bridgeObjectRelease();

    swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v89 = v62;
    sub_1FBBF0();
    swift_bridgeObjectRelease();
  }
}

void sub_C8660(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1FAEC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = (char *)[a1 mediaType];
  if (v8 == (unsigned char *)&dword_0 + 2)
  {
    uint64_t v9 = 1;
  }
  else
  {
    if (v8 != (unsigned char *)&dword_0 + 1)
    {
      uint64_t v9 = 0;
      uint64_t v14 = 0;
      unint64_t v33 = 0;
      unint64_t v34 = 0;
      BOOL v35 = 0;
      char v36 = 0;
      long long v37 = 0uLL;
      long long v38 = 0uLL;
LABEL_40:
      *(void *)a2 = v9;
      *(void *)(a2 + 8) = v14;
      *(void *)(a2 + 16) = v33;
      *(void *)(a2 + 24) = v34;
      *(void *)(a2 + 32) = v35;
      *(_OWORD *)(a2 + 40) = v37;
      *(_OWORD *)(a2 + 56) = v38;
      *(unsigned char *)(a2 + 72) = v36;
      return;
    }
    uint64_t v9 = 0;
  }
  id v10 = [a1 leafGenres];
  if (!v10)
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_38:
    unint64_t v39 = (unint64_t)[a1 mappedAssetID];
    if ((v39 & 0x8000000000000000) != 0) {
      goto LABEL_41;
    }
    unint64_t v34 = v39;
    BOOL v35 = v39 == 0;
    unint64_t v33 = sub_D53A8(a1);
    sub_D574C(a1, (uint64_t)&v52);
    long long v37 = v52;
    long long v38 = v53;
    char v36 = v54;
    goto LABEL_40;
  }
  uint64_t v41 = v5;
  id v11 = v10;
  sub_1FBE50();
  id v40 = v11;

  uint64_t v12 = sub_DAEAC(&qword_26F4A0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
  sub_1FBEC0();
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!*((void *)&v53 + 1))
  {
    uint64_t v14 = _swiftEmptyArrayStorage;
LABEL_37:
    (*(void (**)(char *, uint64_t))(v41 + 8))(v7, v4);

    goto LABEL_38;
  }
  uint64_t v14 = _swiftEmptyArrayStorage;
  uint64_t v47 = v12;
  unint64_t v48 = v7;
  uint64_t v43 = v9;
  uint64_t v44 = a2;
  id v42 = a1;
  uint64_t v45 = v4;
  unint64_t v46 = (char *)&type metadata for Any + 8;
  while (1)
  {
    sub_560D0(&v52, v51);
    sub_560E0((uint64_t)v51, (uint64_t)&v50);
    type metadata accessor for CachedPersonalizationBookMetadataGenre();
    if (!swift_dynamicCast()) {
      goto LABEL_9;
    }
    id v16 = v49;
    id v17 = [v49 path];
    if (v17) {
      break;
    }
LABEL_23:
    unint64_t v25 = (unint64_t)[v16 genreID];
    if ((v25 & 0x8000000000000000) != 0) {
      goto LABEL_41;
    }
    unint64_t v26 = v25;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_42944(0, v14[2] + 1, 1, v14);
    }
    unint64_t v28 = v14[2];
    unint64_t v27 = v14[3];
    if (v28 >= v27 >> 1) {
      uint64_t v14 = sub_42944((void *)(v27 > 1), v28 + 1, 1, v14);
    }
    v14[2] = v28 + 1;
    uint64_t v15 = &v14[2 * v28];
    v15[4] = v26;
    v15[5] = v13;

    uint64_t v7 = v48;
    uint64_t v13 = _swiftEmptyArrayStorage;
LABEL_9:
    sub_1264C((uint64_t)v51);
    sub_1FBEC0();
    if (!*((void *)&v53 + 1)) {
      goto LABEL_37;
    }
  }
  uint64_t v18 = v17;
  self;
  if (!swift_dynamicCastObjCClass())
  {

    goto LABEL_23;
  }
  uint64_t v50 = 0;
  sub_1FBAB0();

  uint64_t v19 = v50;
  if (!v50)
  {
LABEL_22:
    uint64_t v4 = v45;
    goto LABEL_23;
  }
  int64_t v20 = v50[2];
  if (!v20)
  {
    swift_bridgeObjectRelease();
    goto LABEL_22;
  }
  uint64_t v50 = _swiftEmptyArrayStorage;
  sub_46538(0, v20, 0);
  uint64_t v21 = v19[4];
  if (v21 < 0) {
    goto LABEL_41;
  }
  uint64_t v13 = v50;
  unint64_t v23 = v50[2];
  unint64_t v22 = v50[3];
  if (v23 >= v22 >> 1)
  {
    sub_46538(v22 > 1, v23 + 1, 1);
    uint64_t v13 = v50;
  }
  v13[2] = v23 + 1;
  v13[v23 + 4] = v21;
  int64_t v24 = v20 - 1;
  if (!v24)
  {
LABEL_19:
    swift_bridgeObjectRelease();
    uint64_t v9 = v43;
    a2 = v44;
    a1 = v42;
    goto LABEL_22;
  }
  unint64_t v29 = v23 + 5;
  uint64_t v30 = v19 + 5;
  while (1)
  {
    uint64_t v31 = *v30;
    if (*v30 < 0) {
      break;
    }
    uint64_t v50 = v13;
    unint64_t v32 = v13[3];
    if (v29 - 4 >= v32 >> 1)
    {
      sub_46538(v32 > 1, v29 - 3, 1);
      uint64_t v13 = v50;
    }
    v13[2] = v29 - 3;
    v13[v29++] = v31;
    ++v30;
    if (!--v24) {
      goto LABEL_19;
    }
  }
LABEL_41:
  sub_1FC210();
  __break(1u);
}

uint64_t sub_C8B6C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[4] = v17;
  v8[5] = v18;
  uint64_t v14 = (void *)swift_task_alloc();
  v8[6] = v14;
  *uint64_t v14 = v8;
  v14[1] = sub_C8C74;
  v14[7] = a8;
  v14[8] = a4;
  v14[5] = a6;
  v14[6] = a7;
  v14[4] = a5;
  v14[9] = *a4;
  return _swift_task_switch(sub_C8F38, 0, 0);
}

uint64_t sub_C8C74(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_C8E68;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    uint64_t v5 = sub_C8D9C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_C8D9C()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  swift_bridgeObjectRetain();
  v0[3] = sub_C9424(v1, v2, (uint64_t)sub_D738C, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_D61C8);
  sub_12124(&qword_26F568);
  sub_1FBBF0();
  NSString v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_C8E68()
{
  v0[2] = v0[7];
  sub_12124(&qword_26F568);
  sub_1FBBE0();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_C8EE8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[7] = a4;
  v5[8] = v4;
  void v5[5] = a2;
  v5[6] = a3;
  v5[4] = a1;
  v5[9] = *v4;
  return _swift_task_switch(sub_C8F38, 0, 0);
}

uint64_t sub_C8F38()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 48);
  uint64_t v3 = sub_12124(&qword_26F588);
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  *(_OWORD *)(v4 + 16) = *(_OWORD *)(v0 + 32);
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  uint64_t v5 = sub_12124(&qword_26F278);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_C905C;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v3, v5, 0, 0, &unk_26F598, v4, v3);
}

uint64_t sub_C905C()
{
  *(void *)(*(void *)v1 + 96) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_C93C0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_C9178;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_C9178()
{
  uint64_t v2 = v0[8];
  uint64_t v1 = v0[9];
  uint64_t v3 = v0[7];
  uint64_t v4 = v0[2];
  v0[13] = v4;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[14] = v5;
  void v5[2] = v3;
  v5[3] = v4;
  v5[4] = v2;
  void v5[5] = v1;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[15] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_C928C;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 3, 0, 0, 0xD000000000000015, 0x8000000000218730, sub_D9A50, v5, &type metadata for Int);
}

uint64_t sub_C928C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_C93A4, 0, 0);
}

uint64_t sub_C93A4()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 104));
}

uint64_t sub_C93C0()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_C9424(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t, void, uint64_t, uint64_t *))
{
  uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v12 = a2;
  a4(a1, a3, 0, isUniquelyReferenced_nonNull_native, &v12);
  uint64_t v10 = v12;
  swift_bridgeObjectRelease();
  if (v4) {
    swift_bridgeObjectRelease();
  }
  return v10;
}

uint64_t MetadataCache.fetchMetadataFor(genreIDs:)(uint64_t a1)
{
  *(void *)(v2 + 64) = a1;
  *(void *)(v2 + 72) = v1;
  return _swift_task_switch(sub_C94D4, 0, 0);
}

uint64_t sub_C94D4()
{
  uint64_t v1 = v0[9];
  uint64_t v2 = *(void **)(v1 + 48);
  v0[10] = v2;
  if (v2)
  {
    uint64_t v3 = v0[8];
    uint64_t v4 = (void *)swift_task_alloc();
    v0[11] = v4;
    v4[2] = v2;
    v4[3] = v1;
    void v4[4] = v3;
    id v5 = v2;
    uint64_t v6 = (void *)swift_task_alloc();
    v0[12] = v6;
    uint64_t v7 = sub_12124(&qword_26F298);
    *uint64_t v6 = v0;
    v6[1] = sub_C96EC;
    return withCheckedThrowingContinuation<A>(isolation:function:_:)(v0 + 7, 0, 0, 0xD00000000000001BLL, 0x80000000002183E0, sub_D5E9C, v4, v7);
  }
  else
  {
    sub_51B70(v1 + 144, (uint64_t)(v0 + 2));
    uint64_t v8 = v0[5];
    uint64_t v9 = v0[6];
    sub_5D64(v0 + 2, v8);
    uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    v0[14] = v10;
    *uint64_t v10 = v0;
    v10[1] = sub_C7238;
    uint64_t v11 = v0[8];
    return v13(v11, v8, v9);
  }
}

uint64_t sub_C96EC()
{
  *(void *)(*(void *)v1 + 104) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_C9870;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_C9808;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_C9808()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_C9870()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_C98DC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_12124(&qword_26F4B0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = (char *)swift_allocObject();
  *((void *)v12 + 2) = a3;
  *((void *)v12 + 3) = a2;
  *((void *)v12 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v12[v11], (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  aBlock[4] = sub_D6144;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D8;
  aBlock[3] = &unk_25DE28;
  uint64_t v13 = _Block_copy(aBlock);
  swift_retain();
  id v14 = a2;
  swift_bridgeObjectRetain();
  swift_release();
  [v14 performBlock:v13];
  _Block_release(v13);
}

void sub_C9AB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v50 = a4;
  uint64_t v52 = a1;
  uint64_t v51 = sub_12124(&qword_26F4B0);
  uint64_t v46 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  v43[1] = v6;
  uint64_t v45 = (char *)v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26D908);
  __chkstk_darwin(v7 - 8);
  uint64_t v44 = (char *)v43 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_D7B34(a2);
  uint64_t v54 = a3;
  type metadata accessor for CachedPersonalizationBookMetadataGenre();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain_n();
  uint64_t v10 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v11 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v12 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithEntityName:v12];

  sub_12124(&qword_26F4B8);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_2055D0;
  *(void *)(v14 + 56) = &type metadata for String;
  *(void *)(v14 + 32) = 0x444965726E6567;
  *(void *)(v14 + 40) = 0xE700000000000000;
  *(void *)(v14 + 88) = sub_12124(&qword_26EA88);
  *(void *)(v14 + 64) = a3;
  NSString v15 = sub_1FB7E0();
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  id v17 = [self predicateWithFormat:v15 argumentArray:isa];

  [v13 setPredicate:v17];
  id v49 = v13;
  uint64_t v47 = a2;
  unint64_t v18 = sub_1FBE30();
  unint64_t v29 = v18;
  if (v18 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1FC270();
    uint64_t v48 = 0;
    if (!v19)
    {
LABEL_17:
      int64_t v20 = _swiftEmptyArrayStorage;
LABEL_18:
      swift_bridgeObjectRelease();
      uint64_t v30 = sub_50A6C((uint64_t)v20);
      swift_bridgeObjectRelease();
      sub_10648C(v30);
      swift_bridgeObjectRelease();
      uint64_t v31 = v52;
      swift_retain();
      uint64_t v32 = sub_D77E8((uint64_t)_swiftEmptyDictionarySingleton, v29);
      swift_bridgeObjectRelease();
      swift_release();
      if (*(void *)(v54 + 16))
      {
        unint64_t v33 = sub_4AB04(v54);
        swift_bridgeObjectRelease();
        uint64_t v34 = sub_1FBC60();
        uint64_t v35 = (uint64_t)v44;
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v34 - 8) + 56))(v44, 1, 1, v34);
        long long v37 = v45;
        uint64_t v36 = v46;
        uint64_t v38 = v51;
        (*(void (**)(char *, uint64_t, uint64_t))(v46 + 16))(v45, v50, v51);
        unint64_t v39 = (*(unsigned __int8 *)(v36 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v36 + 80);
        id v40 = (char *)swift_allocObject();
        *((void *)v40 + 2) = 0;
        *((void *)v40 + 3) = 0;
        *((void *)v40 + 4) = v31;
        *((void *)v40 + 5) = v33;
        uint64_t v41 = v47;
        *((void *)v40 + 6) = v47;
        *((void *)v40 + 7) = v32;
        (*(void (**)(char *, char *, uint64_t))(v36 + 32))(&v40[v39], v37, v38);
        swift_retain();
        id v42 = v41;
        sub_1B6494(v35, (uint64_t)&unk_26F4C8, (uint64_t)v40);

        swift_release();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v53 = v32;
        sub_1FBBF0();
      }
      return;
    }
  }
  else
  {
    uint64_t v19 = *(void *)((char *)&dword_10 + (v18 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    uint64_t v48 = 0;
    if (!v19) {
      goto LABEL_17;
    }
  }
  int64_t v20 = _swiftEmptyArrayStorage;
  uint64_t v21 = 4;
  while (1)
  {
    id v22 = (v29 & 0xC000000000000001) != 0 ? (id)sub_1FC090() : *(id *)(v29 + 8 * v21);
    unint64_t v23 = v22;
    uint64_t v24 = v21 - 3;
    if (__OFADD__(v21 - 4, 1)) {
      break;
    }
    unint64_t v25 = (unint64_t)[v22 genreID];
    if ((v25 & 0x8000000000000000) != 0) {
      goto LABEL_22;
    }
    unint64_t v26 = v25;

    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v20 = sub_41858(0, v20[2] + 1, 1, v20);
    }
    unint64_t v28 = v20[2];
    unint64_t v27 = v20[3];
    if (v28 >= v27 >> 1) {
      int64_t v20 = sub_41858((void *)(v27 > 1), v28 + 1, 1, v20);
    }
    v20[2] = v28 + 1;
    v20[v28 + 4] = v26;
    ++v21;
    if (v24 == v19) {
      goto LABEL_18;
    }
  }
  __break(1u);
LABEL_22:
  sub_1FC210();
  __break(1u);
}

uint64_t sub_CA0B0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[4] = a7;
  v8[5] = a8;
  NSString v12 = (void *)swift_task_alloc();
  v8[6] = v12;
  void *v12 = v8;
  v12[1] = sub_CA19C;
  v12[5] = a6;
  v12[6] = a4;
  v12[4] = a5;
  v12[7] = *a4;
  return _swift_task_switch(sub_CA45C, 0, 0);
}

uint64_t sub_CA19C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    id v5 = sub_CA390;
  }
  else
  {
    *(void *)(v4 + 64) = a1;
    id v5 = sub_CA2C4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_CA2C4()
{
  uint64_t v1 = v0[8];
  uint64_t v2 = v0[4];
  swift_bridgeObjectRetain();
  v0[3] = sub_C9424(v1, v2, (uint64_t)sub_D73FC, (void (*)(uint64_t, uint64_t, void, uint64_t, uint64_t *))sub_D6460);
  sub_12124(&qword_26F4B0);
  sub_1FBBF0();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_CA390()
{
  v0[2] = v0[7];
  sub_12124(&qword_26F4B0);
  sub_1FBBE0();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_CA410(uint64_t a1, uint64_t a2)
{
  v3[5] = a2;
  v3[6] = v2;
  v3[4] = a1;
  v3[7] = *v2;
  return _swift_task_switch(sub_CA45C, 0, 0);
}

uint64_t sub_CA45C()
{
  uint64_t v1 = v0[6];
  uint64_t v2 = v0[4];
  uint64_t v3 = sub_12124(&qword_26F4D8);
  uint64_t v4 = swift_task_alloc();
  v0[8] = v4;
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = v1;
  uint64_t v5 = sub_12124(&qword_26F298);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[9] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_CA578;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 2, v3, v5, 0, 0, &unk_26F4E8, v4, v3);
}

uint64_t sub_CA578()
{
  *(void *)(*(void *)v1 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_CA8DC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_CA694;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_CA694()
{
  uint64_t v1 = v0[7];
  uint64_t v2 = v0[5];
  uint64_t v3 = v0[2];
  v0[11] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[12] = v4;
  v4[2] = v2;
  v4[3] = v3;
  void v4[4] = v1;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[13] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_CA7A8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 3, 0, 0, 0xD00000000000001ALL, 0x8000000000218600, sub_D82EC, v4, &type metadata for Int);
}

uint64_t sub_CA7A8()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_CA8C0, 0, 0);
}

uint64_t sub_CA8C0()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 88));
}

uint64_t sub_CA8DC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_CA940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[31] = a5;
  v6[32] = a6;
  v6[29] = a3;
  v6[30] = a4;
  v6[27] = a1;
  v6[28] = a2;
  sub_12124(&qword_26F5B0);
  v6[33] = swift_task_alloc();
  uint64_t v7 = sub_12124(&qword_26F5B8);
  v6[34] = v7;
  v6[35] = *(void *)(v7 - 8);
  v6[36] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v6[37] = swift_task_alloc();
  sub_12124(&qword_26F5C0);
  v6[38] = swift_task_alloc();
  v6[39] = swift_task_alloc();
  uint64_t v8 = sub_1FB110();
  v6[40] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v6[41] = v9;
  v6[42] = *(void *)(v9 + 64);
  v6[43] = swift_task_alloc();
  v6[44] = swift_task_alloc();
  v6[45] = swift_task_alloc();
  v6[46] = swift_task_alloc();
  v6[47] = swift_task_alloc();
  v6[48] = swift_task_alloc();
  v6[49] = swift_task_alloc();
  if (qword_26C310 != -1) {
    swift_once();
  }
  uint64_t v10 = qword_26F248;
  v6[50] = qword_26F248;
  return _swift_task_switch(sub_CAB94, v10, 0);
}

uint64_t sub_CAB94()
{
  double v173 = v0;
  uint64_t v2 = v0[41];
  uint64_t v1 = v0[42];
  uint64_t v3 = v0[32];
  sub_1FB100();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_50A6C(v4);
  swift_bridgeObjectRelease();
  v0[21] = v5;
  unint64_t v134 = v0 + 21;
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_50A6C(v6);
  swift_bridgeObjectRelease();
  v0[25] = v7;
  char v135 = v0 + 25;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_50A6C(v8);
  swift_bridgeObjectRelease();
  uint64_t v165 = v0;
  v0[22] = v9;
  uint64_t v133 = v0 + 22;
  uint64_t v130 = (uint64_t *)(v3 + 88);
  swift_beginAccess();
  uint64_t v10 = *(void *)(v3 + 88);
  uint64_t v131 = v10 + 64;
  uint64_t v11 = -1;
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  if (-v12 < 64) {
    uint64_t v11 = ~(-1 << -(char)v12);
  }
  unint64_t v13 = v11 & *(void *)(v10 + 64);
  double v164 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v14 = (void (**)(void))(v2 + 32);
  uint64_t v160 = v1 + 7;
  uint64_t v167 = v2;
  NSString v15 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  int64_t v132 = (unint64_t)(63 - v12) >> 6;
  uint64_t v136 = v10;
  uint64_t v16 = swift_bridgeObjectRetain();
  int64_t v161 = 0;
  BOOL v137 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v166 = (void (**)(void))(v2 + 32);
  while (1)
  {
    if (v13)
    {
      unint64_t v34 = __clz(__rbit64(v13));
      uint64_t v35 = (v13 - 1) & v13;
      uint64_t v36 = v164;
      unint64_t v37 = v34 | (v161 << 6);
      uint64_t v38 = v165;
LABEL_8:
      uint64_t v39 = v38[38];
      (*(void (**)(uint64_t, unint64_t, void))(v167 + 16))(v39, *(void *)(v136 + 48) + *(void *)(v167 + 72) * v37, v38[40]);
      uint64_t v40 = *(void *)(v136 + 56);
      uint64_t v41 = sub_12124(&qword_26F5C8);
      *(_OWORD *)(v39 + *(int *)(v41 + 48)) = *(_OWORD *)(v40 + 16 * v37);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v41 - 8) + 56))(v39, 0, 1, v41);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_27;
    }
    int64_t v42 = v161 + 1;
    uint64_t v38 = v165;
    if (__OFADD__(v161, 1))
    {
      __break(1u);
      goto LABEL_42;
    }
    uint64_t v36 = v164;
    if (v42 < v132)
    {
      unint64_t v43 = *(void *)(v131 + 8 * v42);
      if (v43) {
        goto LABEL_12;
      }
      int64_t v44 = v161 + 2;
      ++v161;
      if (v42 + 1 < v132)
      {
        unint64_t v43 = *(void *)(v131 + 8 * v44);
        if (v43) {
          goto LABEL_15;
        }
        int64_t v161 = v42 + 1;
        if (v42 + 2 < v132)
        {
          unint64_t v43 = *(void *)(v131 + 8 * (v42 + 2));
          if (v43)
          {
            v42 += 2;
            goto LABEL_12;
          }
          int64_t v44 = v42 + 3;
          int64_t v161 = v42 + 2;
          if (v42 + 3 < v132)
          {
            unint64_t v43 = *(void *)(v131 + 8 * v44);
            if (v43)
            {
LABEL_15:
              int64_t v42 = v44;
LABEL_12:
              uint64_t v35 = (v43 - 1) & v43;
              unint64_t v37 = __clz(__rbit64(v43)) + (v42 << 6);
              int64_t v161 = v42;
              goto LABEL_8;
            }
            while (1)
            {
              int64_t v42 = v44 + 1;
              if (__OFADD__(v44, 1)) {
                break;
              }
              if (v42 >= v132)
              {
                int64_t v161 = v132 - 1;
                goto LABEL_26;
              }
              unint64_t v43 = *(void *)(v131 + 8 * v42);
              ++v44;
              if (v43) {
                goto LABEL_12;
              }
            }
LABEL_42:
            __break(1u);
            return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v16, v17, v18, v19, v20);
          }
        }
      }
    }
LABEL_26:
    uint64_t v45 = v165[38];
    uint64_t v46 = sub_12124(&qword_26F5C8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
    uint64_t v35 = 0;
LABEL_27:
    uint64_t v47 = v38[39];
    sub_55844(v38[38], v47, &qword_26F5C0);
    uint64_t v48 = sub_12124(&qword_26F5C8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v48 - 8) + 48))(v47, 1, v48) == 1) {
      break;
    }
    unint64_t v168 = v35;
    uint64_t v49 = *(void *)(v38[39] + *(int *)(v48 + 48));
    uint64_t v50 = *v14;
    (*v14)(v38[48]);
    swift_bridgeObjectRetain();
    uint64_t v51 = swift_bridgeObjectRetain();
    uint64_t v52 = sub_E9B0C(v51, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    uint64_t v53 = swift_bridgeObjectRetain();
    uint64_t v54 = sub_E9B0C(v53, v49);
    swift_bridgeObjectRelease();
    swift_retain();
    uint64_t v55 = swift_retain();
    uint64_t v56 = sub_1EF3EC(v55, v52);
    if (*(void *)(v56 + 16))
    {
      uint64_t v159 = v50;
      uint64_t v57 = v38[48];
      uint64_t v58 = v38[47];
      uint64_t v59 = v38[46];
      uint64_t v138 = v59;
      uint64_t v139 = v38[49];
      uint64_t v60 = v38[40];
      uint64_t v61 = v52;
      uint64_t v148 = v56;
      uint64_t v153 = v52;
      uint64_t v62 = v38[37];
      uint64_t v145 = v62;
      uint64_t v141 = v38[42];
      uint64_t v143 = v38[32];
      sub_10648C(v61);
      sub_10648C(v54);
      uint64_t v63 = sub_1FBC60();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v63 - 8) + 56))(v62, 1, 1, v63);
      id v64 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16);
      v64(v58, v57, v60);
      v64(v59, v139, v60);
      uint64_t v65 = *(unsigned __int8 *)(v167 + 80);
      uint64_t v66 = (v65 + 40) & ~v65;
      uint64_t v67 = (v141 + v65 + v66) & ~v65;
      unint64_t v68 = (v67 + v160) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v69 = (v68 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v70 = (v69 + 15) & 0xFFFFFFFFFFFFFFF8;
      uint64_t v71 = (void *)swift_allocObject();
      v71[2] = 0;
      v71[3] = 0;
      v71[4] = v143;
      unint64_t v72 = (char *)v71 + v66;
      uint64_t v50 = v159;
      ((void (*)(char *, uint64_t, uint64_t))v159)(v72, v58, v60);
      uint64_t v73 = v60;
      uint64_t v14 = v166;
      ((void (*)(char *, uint64_t, uint64_t))v159)((char *)v71 + v67, v138, v73);
      *(void *)((char *)v71 + v68) = v148;
      *(void *)((char *)v71 + v69) = v153;
      uint64_t v38 = v165;
      *(void *)((char *)v71 + v70) = v54;
      swift_retain();
      sub_C4208(v145, (uint64_t)&unk_26F5F8, (uint64_t)v71, &qword_26F588);
      sub_55F38(v145, &qword_26D908);
    }
    else
    {
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
    }
    uint64_t v74 = v38[31];
    swift_bridgeObjectRetain();
    uint64_t v75 = sub_D7030(v74, v49);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(v75 + 16))
    {
      uint64_t v21 = v38[48];
      uint64_t v22 = v38[49];
      uint64_t v23 = v38[46];
      uint64_t v24 = v38[47];
      uint64_t v147 = v23;
      uint64_t v152 = v38[42];
      uint64_t v25 = v38[40];
      uint64_t v26 = v38[37];
      uint64_t v155 = v38[32];
      sub_10648C(v75);
      uint64_t v27 = sub_1FBC60();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
      unint64_t v28 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 16);
      v28(v24, v21, v25);
      v28(v23, v22, v25);
      uint64_t v29 = *(unsigned __int8 *)(v167 + 80);
      uint64_t v30 = (v29 + 40) & ~v29;
      uint64_t v31 = (v152 + v29 + v30) & ~v29;
      uint64_t v32 = (void *)swift_allocObject();
      unsigned __int8 v32[2] = 0;
      v32[3] = 0;
      void v32[4] = v155;
      unint64_t v33 = (char *)v32 + v30;
      uint64_t v14 = v166;
      ((void (*)(char *, uint64_t, uint64_t))v50)(v33, v24, v25);
      ((void (*)(char *, uint64_t, uint64_t))v50)((char *)v32 + v31, v147, v25);
      *(void *)((char *)v32 + ((v31 + v160) & 0xFFFFFFFFFFFFFFF8)) = v75;
      swift_retain();
      sub_C4208(v26, (uint64_t)&unk_26F608, (uint64_t)v32, &qword_26F588);
      sub_55F38(v26, &qword_26D908);
      NSString v15 = v137;
      uint64_t v16 = (*(uint64_t (**)(uint64_t, uint64_t))(v167 + 8))(v21, v25);
    }
    else
    {
      NSString v15 = v137;
      (*v137)(v38[48], v38[40]);
      uint64_t v16 = swift_release();
    }
    unint64_t v13 = v168;
  }
  swift_release();
  uint64_t v76 = *v134;
  if (*(void *)(*v134 + 16) || *(void *)(*v135 + 16))
  {
    uint64_t v77 = v38[47];
    uint64_t v78 = v38[45];
    uint64_t v79 = v38[40];
    sub_1FB100();
    swift_bridgeObjectRetain();
    uint64_t v80 = swift_bridgeObjectRetain();
    uint64_t v81 = sub_1EF3EC(v80, v76);
    uint64_t v82 = *v36;
    v82(v77, v78, v79);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v170 = (void *)*v130;
    uint64_t *v130 = 0x8000000000000000;
    sub_711F8(v81, (uint64_t)_swiftEmptyArrayStorage, v77, isUniquelyReferenced_nonNull_native);
    uint64_t *v130 = (uint64_t)v170;
    swift_bridgeObjectRelease();
    uint64_t v84 = *v15;
    (*v15)(v77, v79);
    swift_endAccess();
    uint64_t v85 = swift_bridgeObjectRetain();
    uint64_t v86 = sub_4AB04(v85);
    swift_bridgeObjectRelease();
    uint64_t v170 = v86;
    swift_retain();
    sub_C43F4((uint64_t *)&v170);
    swift_release();
    uint64_t v87 = (uint64_t)v170;
    uint64_t v88 = *v135;
    swift_bridgeObjectRetain_n();
    uint64_t v89 = sub_4AB04(v88);
    swift_bridgeObjectRelease();
    uint64_t v170 = v89;
    sub_C43F4((uint64_t *)&v170);
    swift_bridgeObjectRelease();
    uint64_t v162 = (uint64_t)v170;
    uint64_t v170 = 0;
    unint64_t v171 = 0xE000000000000000;
    sub_1FC050(61);
    v175._object = (void *)0x8000000000218620;
    v175._uint64_t countAndFlagsBits = 0xD000000000000010;
    sub_1FB8F0(v175);
    sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
    v176._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v176);
    swift_bridgeObjectRelease();
    v177._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v177._object = (void *)0x8000000000218750;
    sub_1FB8F0(v177);
    v178._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v178);
    swift_bridgeObjectRelease();
    v179._uint64_t countAndFlagsBits = 0x73444920726F6620;
    v179._object = (void *)0xE900000000000020;
    sub_1FB8F0(v179);
    uint64_t v90 = swift_bridgeObjectRetain();
    uint64_t v91 = sub_4AB04(v90);
    swift_bridgeObjectRelease();
    v172[0] = (uint64_t)v91;
    sub_C43F4(v172);
    uint64_t v142 = v165[46];
    uint64_t v144 = v165[47];
    uint64_t v92 = v165[45];
    uint64_t v149 = v165[49];
    uint64_t v154 = v92;
    uint64_t v93 = v165[40];
    uint64_t v146 = v165[37];
    uint64_t v157 = v165[32];
    swift_bridgeObjectRelease();
    v180._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v180);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v94 = sub_1FBC60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v94 - 8) + 56))(v146, 1, 1, v94);
    v82(v144, v92, v93);
    v82(v142, v149, v93);
    uint64_t v95 = *(unsigned __int8 *)(v167 + 80);
    uint64_t v96 = (v95 + 32) & ~v95;
    unint64_t v150 = (v96 + v160) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v97 = (v150 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v140 = (v97 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v98 = (v95 + v140 + 8) & ~v95;
    uint64_t v99 = swift_allocObject();
    uint64_t v100 = v99 + v96;
    *(void *)(v99 + 16) = 0;
    *(void *)(v99 + 24) = 0;
    uint64_t v101 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 32);
    v101(v100, v144, v93);
    *(void *)(v99 + v150) = v157;
    *(void *)(v99 + v97) = v87;
    uint64_t v36 = v164;
    *(void *)(v99 + v140) = v162;
    v101(v99 + v98, v142, v93);
    swift_retain();
    sub_C4208(v146, (uint64_t)&unk_26F5D8, v99, &qword_26F588);
    sub_55F38(v146, &qword_26D908);
    NSString v15 = v137;
    v84(v154, v93);
    uint64_t v38 = v165;
  }
  uint64_t v102 = *v133;
  if (*(void *)(*v133 + 16))
  {
    uint64_t v103 = v38[47];
    uint64_t v104 = v38[44];
    uint64_t v105 = v38[40];
    sub_1FB100();
    uint64_t v106 = *v36;
    v106(v103, v104, v105);
    swift_beginAccess();
    swift_bridgeObjectRetain();
    char v107 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v170 = (void *)*v130;
    uint64_t *v130 = 0x8000000000000000;
    sub_711F8(v102, (uint64_t)_swiftEmptyArrayStorage, v103, v107);
    uint64_t *v130 = (uint64_t)v170;
    swift_bridgeObjectRelease();
    uint64_t v108 = *v15;
    (*v15)(v103, v105);
    swift_endAccess();
    uint64_t v109 = v38[22];
    uint64_t v110 = swift_bridgeObjectRetain();
    double v111 = sub_4AB04(v110);
    swift_bridgeObjectRelease();
    uint64_t v170 = v111;
    swift_retain();
    sub_C43F4((uint64_t *)&v170);
    swift_release();
    uint64_t v169 = (uint64_t)v170;
    uint64_t v170 = 0;
    unint64_t v171 = 0xE000000000000000;
    sub_1FC050(63);
    v181._object = (void *)0x8000000000218620;
    v181._uint64_t countAndFlagsBits = 0xD000000000000010;
    sub_1FB8F0(v181);
    sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
    v182._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v182);
    swift_bridgeObjectRelease();
    v183._uint64_t countAndFlagsBits = 0xD000000000000020;
    v183._object = (void *)0x8000000000218640;
    sub_1FB8F0(v183);
    v184._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v184);
    swift_bridgeObjectRelease();
    v185._uint64_t countAndFlagsBits = 0x73444920726F6620;
    v185._object = (void *)0xE900000000000020;
    sub_1FB8F0(v185);
    swift_bridgeObjectRetain_n();
    double v112 = sub_4AB04(v109);
    swift_bridgeObjectRelease();
    v172[0] = (uint64_t)v112;
    sub_C43F4(v172);
    uint64_t v113 = v38[46];
    uint64_t v151 = v38[47];
    uint64_t v114 = v38[44];
    uint64_t v156 = v38[49];
    uint64_t v158 = v114;
    uint64_t v115 = v38[40];
    uint64_t v116 = v38[37];
    uint64_t v163 = v38[32];
    swift_bridgeObjectRelease();
    v186._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v186);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v117 = sub_1FBC60();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v117 - 8) + 56))(v116, 1, 1, v117);
    v106(v151, v114, v115);
    v106(v113, v156, v115);
    uint64_t v118 = *(unsigned __int8 *)(v167 + 80);
    uint64_t v119 = (v118 + 32) & ~v118;
    unint64_t v120 = (v119 + v160) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v121 = (v120 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v122 = (v118 + v121 + 8) & ~v118;
    uint64_t v123 = swift_allocObject();
    uint64_t v124 = v123 + v119;
    *(void *)(v123 + 16) = 0;
    *(void *)(v123 + 24) = 0;
    uint64_t v125 = *(void (**)(uint64_t, uint64_t, uint64_t))(v167 + 32);
    v125(v124, v151, v115);
    *(void *)(v123 + v120) = v163;
    *(void *)(v123 + v121) = v169;
    v125(v123 + v122, v113, v115);
    swift_retain();
    sub_C4208(v116, (uint64_t)&unk_26F5E8, v123, &qword_26F588);
    sub_55F38(v116, &qword_26D908);
    v108(v158, v115);
  }
  v38[51] = sub_12124(&qword_26F588);
  sub_12124(&qword_26D670);
  sub_1FBC80();
  v38[52] = _swiftEmptyDictionarySingleton;
  uint64_t v126 = qword_26F248;
  uint64_t v127 = sub_DAEAC(&qword_26F530, (void (*)(uint64_t))type metadata accessor for RequestListActor.ActorType);
  uint64_t v128 = (void *)swift_task_alloc();
  v38[53] = v128;
  *uint64_t v128 = v38;
  v128[1] = sub_CBE18;
  uint64_t v16 = v38[33];
  uint64_t v19 = v38[34];
  uint64_t v17 = v126;
  uint64_t v18 = v127;
  int64_t v20 = v38 + 26;
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v16, v17, v18, v19, v20);
}

uint64_t sub_CBE18()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 432) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 400);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_CC968;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 400);
    uint64_t v4 = sub_CBF50;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_CBF50()
{
  uint64_t v1 = v0[51];
  uint64_t v2 = v0[33];
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1) == 1)
  {
    uint64_t v3 = v0[52];
    uint64_t v4 = v0[49];
    uint64_t v5 = v0[40];
    uint64_t v6 = v0[41];
    uint64_t v7 = (void *)v0[27];
    (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v5);
    *uint64_t v7 = v3;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = (uint64_t (*)(void))v0[1];
    return v8();
  }
  uint64_t v91 = v0[54];
  uint64_t v10 = *(void *)(v2 + *(int *)(v1 + 48));
  (*(void (**)(void, uint64_t, void))(v0[41] + 32))(v0[43], v2, v0[40]);
  v0[17] = 0;
  v0[18] = 0xE000000000000000;
  sub_1FC050(68);
  uint64_t v11 = v0[18];
  v0[19] = v0[17];
  v0[20] = v11;
  v94._object = (void *)0x8000000000218620;
  v94._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v94);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v95._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v95);
  swift_bridgeObjectRelease();
  v96._uint64_t countAndFlagsBits = 0xD000000000000020;
  v96._object = (void *)0x8000000000218670;
  sub_1FB8F0(v96);
  v97._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v97);
  swift_bridgeObjectRelease();
  v98._uint64_t countAndFlagsBits = 0x74697720726F6620;
  v98._object = (void *)0xEE00207344492068;
  sub_1FB8F0(v98);
  swift_bridgeObjectRetain_n();
  uint64_t v12 = sub_4ABEC(v10);
  swift_bridgeObjectRelease();
  v0[23] = v12;
  sub_C43F4(v0 + 23);
  if (v91)
  {
    return swift_release();
  }
  uint64_t v86 = v0 + 24;
  uint64_t v13 = v0[52];
  swift_bridgeObjectRelease();
  v99._uint64_t countAndFlagsBits = sub_1FBAD0();
  sub_1FB8F0(v99);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v0[24] = v13;
  uint64_t v78 = v10 + 64;
  uint64_t v15 = -1;
  uint64_t v16 = -1 << *(unsigned char *)(v10 + 32);
  if (-v16 < 64) {
    uint64_t v15 = ~(-1 << -(char)v16);
  }
  unint64_t v17 = v15 & *(void *)(v10 + 64);
  unint64_t v18 = (unint64_t)(63 - v16) >> 6;
  uint64_t v19 = swift_bridgeObjectRetain();
  uint64_t v24 = 0;
  uint64_t v76 = v0;
  uint64_t v92 = (void *)v0[52];
  int64_t v77 = v18;
  uint64_t v74 = v10 + 112;
  unint64_t v75 = v18 - 6;
  uint64_t v79 = v10;
  char v89 = isUniquelyReferenced_nonNull_native;
  if (!v17) {
    goto LABEL_13;
  }
LABEL_12:
  uint64_t v88 = (v17 - 1) & v17;
  unint64_t v25 = __clz(__rbit64(v17)) | (v24 << 6);
  for (i = v24; ; unint64_t v25 = __clz(__rbit64(v28)) + (i << 6))
  {
    uint64_t v30 = *(void *)(*(void *)(v10 + 48) + 8 * v25);
    uint64_t v31 = *(void *)(v10 + 56) + 80 * v25;
    char v32 = *(unsigned char *)v31;
    uint64_t v33 = *(void *)(v31 + 8);
    uint64_t v34 = *(void *)(v31 + 16);
    uint64_t v35 = *(void *)(v31 + 24);
    char v36 = *(unsigned char *)(v31 + 32);
    uint64_t v37 = *(void *)(v31 + 40);
    uint64_t v84 = *(void *)(v31 + 48);
    uint64_t v81 = *(void *)(v31 + 64);
    uint64_t v82 = *(void *)(v31 + 56);
    char v80 = *(unsigned char *)(v31 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!v33) {
      goto LABEL_42;
    }
    uint64_t v87 = i;
    unint64_t v38 = sub_56168(v30);
    uint64_t v39 = v92[2];
    BOOL v40 = (v20 & 1) == 0;
    uint64_t v19 = v39 + v40;
    if (__OFADD__(v39, v40))
    {
      __break(1u);
LABEL_58:
      __break(1u);
LABEL_59:
      __break(1u);
      return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v19, v20, v21, v22, v23);
    }
    char v41 = v20;
    if (v92[3] < v19) {
      break;
    }
    if ((v89 & 1) == 0) {
      uint64_t v19 = (uint64_t)sub_121E44();
    }
LABEL_36:
    int64_t v42 = (void *)*v86;
    uint64_t v92 = (void *)*v86;
    if (v41)
    {
      uint64_t v43 = 80 * v38;
      uint64_t v44 = v42[7] + 80 * v38;
      char v85 = *(unsigned char *)v44;
      uint64_t v45 = (void *)*v86;
      uint64_t v46 = *(void *)(v44 + 8);
      uint64_t v47 = *(void *)(v44 + 16);
      uint64_t v48 = *(void *)(v44 + 24);
      char v49 = *(unsigned char *)(v44 + 32);
      long long v83 = *(_OWORD *)(v44 + 40);
      uint64_t v50 = *(void *)(v44 + 56);
      uint64_t v51 = *(void *)(v44 + 64);
      char v90 = *(unsigned char *)(v44 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v52 = v45[7] + v43;
      swift_bridgeObjectRelease();
      uint64_t v19 = swift_bridgeObjectRelease();
      *(unsigned char *)uint64_t v52 = v85;
      *(void *)(v52 + 8) = v46;
      *(void *)(v52 + 16) = v47;
      *(void *)(v52 + 24) = v48;
      *(unsigned char *)(v52 + 32) = v49;
      *(_OWORD *)(v52 + 40) = v83;
      *(void *)(v52 + 56) = v50;
      *(void *)(v52 + 64) = v51;
      uint64_t v24 = v87;
      unint64_t v17 = v88;
      *(unsigned char *)(v52 + 72) = v90;
    }
    else
    {
      v42[(v38 >> 6) + 8] |= 1 << v38;
      *(void *)(v42[6] + 8 * v38) = v30;
      uint64_t v53 = v42[7] + 80 * v38;
      *(unsigned char *)uint64_t v53 = v32;
      *(void *)(v53 + 8) = v33;
      *(void *)(v53 + 16) = v34;
      *(void *)(v53 + 24) = v35;
      *(unsigned char *)(v53 + 32) = v36;
      *(void *)(v53 + 40) = v37;
      *(void *)(v53 + 48) = v84;
      *(void *)(v53 + 56) = v82;
      *(void *)(v53 + 64) = v81;
      *(unsigned char *)(v53 + 72) = v80;
      uint64_t v54 = v42[2];
      BOOL v55 = __OFADD__(v54, 1);
      uint64_t v56 = v54 + 1;
      if (v55) {
        goto LABEL_58;
      }
      void v42[2] = v56;
      uint64_t v24 = v87;
      unint64_t v17 = v88;
    }
    uint64_t v10 = v79;
    char v89 = 1;
    if (v17) {
      goto LABEL_12;
    }
LABEL_13:
    int64_t v27 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      goto LABEL_59;
    }
    if (v27 >= v77) {
      goto LABEL_42;
    }
    unint64_t v28 = *(void *)(v78 + 8 * v27);
    uint64_t i = v24 + 1;
    if (!v28)
    {
      uint64_t i = v24 + 2;
      if (v24 + 2 >= v77) {
        goto LABEL_42;
      }
      unint64_t v28 = *(void *)(v78 + 8 * i);
      if (!v28)
      {
        uint64_t i = v24 + 3;
        if (v24 + 3 >= v77) {
          goto LABEL_42;
        }
        unint64_t v28 = *(void *)(v78 + 8 * i);
        if (!v28)
        {
          uint64_t i = v24 + 4;
          if (v24 + 4 >= v77) {
            goto LABEL_42;
          }
          unint64_t v28 = *(void *)(v78 + 8 * i);
          if (!v28)
          {
            uint64_t i = v24 + 5;
            if (v24 + 5 >= v77) {
              goto LABEL_42;
            }
            unint64_t v28 = *(void *)(v78 + 8 * i);
            if (!v28)
            {
              uint64_t v29 = v24;
              while (v75 != v29)
              {
                unint64_t v28 = *(void *)(v74 + 8 * v29++);
                if (v28)
                {
                  uint64_t i = v29 + 5;
                  goto LABEL_28;
                }
              }
LABEL_42:
              uint64_t v57 = v76[32];
              swift_bridgeObjectRelease();
              uint64_t v58 = v76;
              sub_1226C();
              swift_bridgeObjectRelease();
              swift_beginAccess();
              uint64_t v59 = *(void *)(v57 + 88);
              if (*(void *)(v59 + 16) && (unint64_t v60 = sub_4C9C4(v76[43]), (v61 & 1) != 0))
              {
                uint64_t v62 = *(void *)(*(void *)(v59 + 56) + 16 * v60 + 8);
                swift_endAccess();
                uint64_t v63 = *(void *)(v62 + 16);
                if (v63)
                {
                  uint64_t v64 = *(void *)(type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord(0) - 8);
                  uint64_t v65 = v62
                      + ((*(unsigned __int8 *)(v64 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v64 + 80));
                  uint64_t v66 = *(void *)(v64 + 72);
                  swift_bridgeObjectRetain();
                  swift_bridgeObjectRetain();
                  do
                  {
                    sub_D8820(v65, v79, v76[49], v76[43]);
                    v65 += v66;
                    --v63;
                  }
                  while (v63);
                  swift_bridgeObjectRelease();
                }
                else
                {
                  swift_bridgeObjectRetain();
                }
                swift_bridgeObjectRelease();
                uint64_t v58 = v76;
                uint64_t v67 = v76[43];
                swift_bridgeObjectRelease();
                swift_beginAccess();
                uint64_t v68 = sub_1E6BD4(v67);
                swift_endAccess();
                sub_DA178(v68);
              }
              else
              {
                swift_endAccess();
                swift_bridgeObjectRelease();
              }
              unint64_t v69 = v58 + 26;
              (*(void (**)(void, void))(v58[41] + 8))(v58[43], v58[40]);
              v58[52] = v92;
              unint64_t v70 = v58;
              uint64_t v71 = qword_26F248;
              uint64_t v72 = sub_DAEAC(&qword_26F530, (void (*)(uint64_t))type metadata accessor for RequestListActor.ActorType);
              uint64_t v73 = (void *)swift_task_alloc();
              v70[53] = v73;
              *uint64_t v73 = v70;
              v73[1] = sub_CBE18;
              uint64_t v19 = v70[33];
              uint64_t v22 = v70[34];
              uint64_t v20 = v71;
              uint64_t v21 = v72;
              uint64_t v23 = v69;
              return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v19, v20, v21, v22, v23);
            }
          }
        }
      }
    }
LABEL_28:
    uint64_t v88 = (v28 - 1) & v28;
  }
  sub_11A550(v19, v89 & 1);
  uint64_t v19 = sub_56168(v30);
  if ((v41 & 1) == (v20 & 1))
  {
    unint64_t v38 = v19;
    goto LABEL_36;
  }
  return sub_1FC770();
}

uint64_t sub_CC968()
{
  uint64_t v1 = v0[49];
  uint64_t v2 = v0[40];
  uint64_t v3 = v0[41];
  (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_CCAB4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a8;
  v8[8] = v10;
  v8[5] = a6;
  v8[6] = a7;
  v8[3] = a4;
  v8[4] = a5;
  v8[2] = a1;
  return _swift_task_switch(sub_CCAE8, 0, 0);
}

uint64_t sub_CCAE8()
{
  uint64_t v1 = (_OWORD *)swift_task_alloc();
  *(void *)(v0 + 72) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  long long v3 = *(_OWORD *)(v0 + 56);
  v1[1] = *(_OWORD *)(v0 + 24);
  v1[2] = v2;
  v1[3] = v3;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v4;
  uint64_t v5 = sub_12124(&qword_26F588);
  *uint64_t v4 = v0;
  v4[1] = sub_CCBEC;
  uint64_t v6 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v6, 0, 0, 0xD000000000000043, 0x8000000000218770, sub_DAA94, v1, v5);
}

uint64_t sub_CCBEC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 88) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_CCD28, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    long long v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_CCD28()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_CCD8C(uint64_t a1, uint64_t a2, uint64_t a3, char *a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v52 = a6;
  uint64_t v53 = a7;
  uint64_t v50 = a2;
  uint64_t v51 = a5;
  uint64_t v47 = a3;
  uint64_t v48 = a4;
  uint64_t v49 = a1;
  uint64_t v7 = sub_12124(&qword_26F610);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v43 = v9;
  uint64_t v10 = (char *)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1FB110();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(void *)(v12 + 64);
  uint64_t v14 = __chkstk_darwin(v11);
  __chkstk_darwin(v14);
  uint64_t v16 = (char *)&v40 - v15;
  uint64_t v17 = sub_12124(&qword_26D908);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v40 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_1FBC60();
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56);
  uint64_t v45 = v19;
  v21(v19, 1, 1, v20);
  uint64_t v42 = v12;
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  uint64_t v44 = v16;
  v22(v16, v47, v11);
  uint64_t v46 = (char *)&v40 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = v11;
  v22(v46, (uint64_t)v48, v11);
  uint64_t v23 = v8;
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v8 + 16);
  uint64_t v25 = v49;
  uint64_t v48 = v10;
  uint64_t v49 = v7;
  v24(v10, v25, v7);
  uint64_t v26 = qword_26C310;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_26F248;
  uint64_t v40 = qword_26F248;
  uint64_t v41 = sub_DAEAC(&qword_26F530, (void (*)(uint64_t))type metadata accessor for RequestListActor.ActorType);
  uint64_t v28 = v42;
  uint64_t v29 = *(unsigned __int8 *)(v42 + 80);
  uint64_t v30 = (v29 + 40) & ~v29;
  uint64_t v31 = (v13 + v29 + v30) & ~v29;
  unint64_t v32 = (v13 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v23 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v23 + 80);
  unint64_t v34 = (v43 + v33 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v35 = (char *)swift_allocObject();
  uint64_t v36 = v41;
  *((void *)v35 + 2) = v27;
  *((void *)v35 + 3) = v36;
  *((void *)v35 + 4) = v50;
  uint64_t v37 = *(void (**)(char *, char *, uint64_t))(v28 + 32);
  uint64_t v38 = v47;
  v37(&v35[v30], v44, v47);
  v37(&v35[v31], v46, v38);
  *(void *)&v35[v32] = v51;
  (*(void (**)(char *, char *, uint64_t))(v23 + 32))(&v35[v33], v48, v49);
  *(void *)&v35[v34] = v52;
  *(void *)&v35[(v34 + 15) & 0xFFFFFFFFFFFFFFF8] = v53;
  swift_retain();
  sub_64EB8((uint64_t)v45, (uint64_t)&unk_26F630, (uint64_t)v35);
  return swift_release();
}

uint64_t sub_CD194(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[18] = v14;
  v8[19] = v15;
  unsigned char v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  uint64_t v9 = sub_1FB110();
  v8[20] = v9;
  v8[21] = *(void *)(v9 - 8);
  v8[22] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord(0);
  v8[23] = v10;
  v8[24] = *(void *)(v10 - 8);
  v8[25] = swift_task_alloc();
  v8[26] = sub_12124(&qword_26F588);
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  v8[29] = swift_task_alloc();
  v8[30] = swift_task_alloc();
  if (qword_26C310 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_26F248;
  v8[31] = qword_26F248;
  return _swift_task_switch(sub_CD358, v11, 0);
}

uint64_t sub_CD358()
{
  uint64_t v1 = v0[13] + 88;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16) && (unint64_t v3 = sub_4C9C4(v0[14]), (v4 & 1) != 0))
  {
    uint64_t v5 = v0[25];
    uint64_t v6 = v0[20];
    uint64_t v7 = v0[21];
    uint64_t v37 = v0[17];
    uint64_t v8 = v0[15];
    uint64_t v33 = v0[23];
    uint64_t v34 = v0[16];
    uint64_t v9 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    swift_endAccess();
    uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v35(v5, v8, v6);
    uint64_t v12 = v5 + *(int *)(v33 + 24);
    uint64_t v13 = sub_12124(&qword_26F610);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v37, v13);
    *(void *)(v5 + *(int *)(v33 + 20)) = v34;
    uint64_t v38 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_42958(0, *(void *)(v10 + 16) + 1, 1, v10);
    }
    unint64_t v15 = *(void *)(v10 + 16);
    unint64_t v14 = *(void *)(v10 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t v10 = sub_42958(v14 > 1, v15 + 1, 1, v10);
    }
    uint64_t v17 = v0[24];
    uint64_t v16 = v0[25];
    uint64_t v19 = v0[21];
    uint64_t v18 = v0[22];
    uint64_t v20 = v0[20];
    uint64_t v21 = v0[14];
    *(void *)(v10 + 16) = v15 + 1;
    sub_DAA2C(v16, v10+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v15, type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord);
    v35(v18, v21, v20);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = *(void *)v1;
    *(void *)uint64_t v1 = 0x8000000000000000;
    sub_711F8(v38, v10, v18, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v1 = v39;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  else
  {
    uint64_t v25 = v0[13];
    swift_endAccess();
    sub_1FB100();
    sub_51B70(v25 + 104, (uint64_t)(v0 + 2));
    uint64_t v26 = v0[5];
    uint64_t v27 = v0[6];
    sub_5D64(v0 + 2, v26);
    uint64_t v28 = swift_bridgeObjectRetain();
    uint64_t v29 = sub_4AB04(v28);
    v0[32] = v29;
    swift_bridgeObjectRelease();
    uint64_t v30 = swift_bridgeObjectRetain();
    uint64_t v31 = sub_4AB04(v30);
    v0[33] = v31;
    swift_bridgeObjectRelease();
    uint64_t v36 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v27 + 8) + **(int **)(v27 + 8));
    unint64_t v32 = (void *)swift_task_alloc();
    v0[34] = v32;
    *unint64_t v32 = v0;
    v32[1] = sub_CD78C;
    return v36(v29, v31, v26, v27);
  }
}

uint64_t sub_CD78C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 280) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 248);
    uint64_t v6 = sub_CDC4C;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 248);
    uint64_t v8 = *(void *)(v4 + 208);
    swift_release();
    *(void *)(v4 + 288) = a1;
    *(_DWORD *)(v4 + 296) = *(_DWORD *)(v8 + 48);
    swift_release();
    uint64_t v6 = sub_CD8E8;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_CD8E8()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(int *)(v0 + 296);
  uint64_t v23 = *(void *)(v0 + 280);
  uint64_t v3 = *(void *)(v0 + 232);
  uint64_t v2 = *(void *)(v0 + 240);
  uint64_t v4 = *(void *)(v0 + 208);
  uint64_t v5 = *(void *)(v0 + 160);
  uint64_t v6 = *(void *)(v0 + 168);
  *(void *)(v2 + v1) = *(void *)(v0 + 288);
  sub_1264C(v0 + 16);
  sub_1FC050(42);
  v27._object = (void *)0x80000000002186D0;
  v27._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_1FB8F0(v27);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v28._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 32;
  v29._object = (void *)0xE100000000000000;
  sub_1FB8F0(v29);
  v30._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x656E727574657220;
  v31._object = (void *)0xEE00207344492064;
  sub_1FB8F0(v31);
  uint64_t v7 = *(int *)(v4 + 48);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8(v3, v2, v5);
  uint64_t v9 = *(void *)(v2 + v1);
  *(void *)(v3 + v7) = v9;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_4ABEC(v9);
  swift_bridgeObjectRelease();
  uint64_t v24 = v10;
  sub_C43F4((uint64_t *)&v24);
  if (v23)
  {
    return swift_release();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 232);
    uint64_t v12 = *(void *)(v0 + 240);
    uint64_t v14 = *(void *)(v0 + 216);
    uint64_t v20 = *(void *)(v0 + 224);
    uint64_t v21 = *(void *)(v0 + 208);
    uint64_t v22 = *(int *)(v0 + 296);
    uint64_t v16 = *(void *)(v0 + 160);
    uint64_t v15 = *(void *)(v0 + 168);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
    v32._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v8(v20, v12, v16);
    uint64_t v17 = *(void *)(v12 + v22);
    uint64_t v18 = *(int *)(v21 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v20, v16);
    *(void *)(v14 + v18) = v17;
    swift_bridgeObjectRetain();
    sub_12124(&qword_26F610);
    sub_1FBBF0();
    sub_55F38(v12, &qword_26F588);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_CDC4C()
{
  uint64_t v1 = v0[30];
  uint64_t v2 = v0[21];
  uint64_t v3 = v0[20];
  swift_release();
  swift_release();
  sub_1264C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_CDD44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return _swift_task_switch(sub_CDD6C, 0, 0);
}

uint64_t sub_CDD6C()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = sub_12124(&qword_26F588);
  *uint64_t v3 = v0;
  v3[1] = sub_CDE68;
  uint64_t v5 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000043, 0x8000000000218770, sub_DA6A4, v1, v4);
}

uint64_t sub_CDE68()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_CDFA4, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_CDFA4()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_CE008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned char v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  uint64_t v9 = sub_1FB110();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord(0);
  v8[21] = v10;
  v8[22] = *(void *)(v10 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = sub_12124(&qword_26F588);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  if (qword_26C310 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_26F248;
  v8[29] = qword_26F248;
  return _swift_task_switch(sub_CE1C0, v11, 0);
}

uint64_t sub_CE1C0()
{
  uint64_t v1 = v0[13] + 88;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16) && (unint64_t v3 = sub_4C9C4(v0[14]), (v4 & 1) != 0))
  {
    uint64_t v5 = v0[23];
    uint64_t v33 = v0[21];
    uint64_t v7 = v0[18];
    uint64_t v6 = v0[19];
    uint64_t v8 = v0[16];
    uint64_t v36 = v0[17];
    uint64_t v9 = v0[15];
    uint64_t v10 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
    uint64_t v12 = *v10;
    uint64_t v11 = v10[1];
    swift_endAccess();
    uint64_t v34 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
    v34(v5, v9, v7);
    uint64_t v13 = v11;
    uint64_t v14 = v5 + *(int *)(v33 + 24);
    uint64_t v15 = sub_12124(&qword_26F610);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 16))(v14, v36, v15);
    *(void *)(v5 + *(int *)(v33 + 20)) = v8;
    swift_bridgeObjectRetain();
    uint64_t v37 = v12;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v13 = sub_42958(0, *(void *)(v13 + 16) + 1, 1, v13);
    }
    unint64_t v17 = *(void *)(v13 + 16);
    unint64_t v16 = *(void *)(v13 + 24);
    if (v17 >= v16 >> 1) {
      uint64_t v13 = sub_42958(v16 > 1, v17 + 1, 1, v13);
    }
    uint64_t v19 = v0[22];
    uint64_t v18 = v0[23];
    uint64_t v21 = v0[19];
    uint64_t v20 = v0[20];
    uint64_t v22 = v0[18];
    uint64_t v23 = v0[14];
    *(void *)(v13 + 16) = v17 + 1;
    sub_DAA2C(v18, v13+ ((*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80))+ *(void *)(v19 + 72) * v17, type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord);
    v34(v20, v23, v22);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v38 = *(void *)v1;
    *(void *)uint64_t v1 = 0x8000000000000000;
    sub_711F8(v37, v13, v20, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v1 = v38;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v21 + 8))(v20, v22);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v25 = (uint64_t (*)(void))v0[1];
    return v25();
  }
  else
  {
    uint64_t v27 = v0[13];
    swift_endAccess();
    sub_1FB100();
    sub_51B70(v27 + 104, (uint64_t)(v0 + 2));
    uint64_t v28 = v0[5];
    uint64_t v29 = v0[6];
    sub_5D64(v0 + 2, v28);
    uint64_t v30 = swift_bridgeObjectRetain();
    Swift::String v31 = sub_4AB04(v30);
    v0[30] = v31;
    swift_bridgeObjectRelease();
    uint64_t v35 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v29 + 16) + **(int **)(v29 + 16));
    Swift::String v32 = (void *)swift_task_alloc();
    v0[31] = v32;
    *Swift::String v32 = v0;
    v32[1] = sub_CE5D0;
    return v35(v31, v28, v29);
  }
}

uint64_t sub_CE5D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 256) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = *(void *)(v4 + 232);
    uint64_t v6 = sub_CEA7C;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 232);
    uint64_t v8 = *(void *)(v4 + 192);
    swift_release();
    *(void *)(v4 + 264) = a1;
    *(_DWORD *)(v4 + 272) = *(_DWORD *)(v8 + 48);
    uint64_t v6 = sub_CE718;
    uint64_t v5 = v7;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_CE718()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(int *)(v0 + 272);
  uint64_t v23 = *(void *)(v0 + 256);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152);
  *(void *)(v2 + v1) = *(void *)(v0 + 264);
  sub_1264C(v0 + 16);
  sub_1FC050(42);
  v27._object = (void *)0x80000000002186D0;
  v27._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_1FB8F0(v27);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v28._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 32;
  v29._object = (void *)0xE100000000000000;
  sub_1FB8F0(v29);
  v30._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x656E727574657220;
  v31._object = (void *)0xEE00207344492064;
  sub_1FB8F0(v31);
  uint64_t v7 = *(int *)(v4 + 48);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8(v3, v2, v5);
  uint64_t v9 = *(void *)(v2 + v1);
  *(void *)(v3 + v7) = v9;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_4ABEC(v9);
  swift_bridgeObjectRelease();
  uint64_t v24 = v10;
  sub_C43F4((uint64_t *)&v24);
  if (v23)
  {
    return swift_release();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 208);
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v22 = *(int *)(v0 + 272);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
    v32._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v8(v20, v12, v16);
    uint64_t v17 = *(void *)(v12 + v22);
    uint64_t v18 = *(int *)(v21 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v20, v16);
    *(void *)(v14 + v18) = v17;
    swift_bridgeObjectRetain();
    sub_12124(&qword_26F610);
    sub_1FBBF0();
    sub_55F38(v12, &qword_26F588);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_CEA7C()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[18];
  swift_release();
  sub_1264C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_CEB68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[11] = a7;
  v8[12] = a8;
  v8[9] = a5;
  v8[10] = a6;
  v8[7] = a1;
  v8[8] = a4;
  v8[13] = sub_12124(&qword_26F588);
  v8[14] = swift_task_alloc();
  v8[15] = swift_task_alloc();
  return _swift_task_switch(sub_CEC18, 0, 0);
}

uint64_t sub_CEC18()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_1FB110();
  v0[16] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v0[17] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[18] = v6;
  v0[19] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v2, v4);
  sub_51B70(v3 + 104, (uint64_t)(v0 + 2));
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  sub_5D64(v0 + 2, v7);
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[20] = v9;
  void *v9 = v0;
  v9[1] = sub_CEDA4;
  uint64_t v11 = v0[10];
  uint64_t v10 = v0[11];
  return v13(v11, v10, v7, v8);
}

uint64_t sub_CEDA4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_CF1B8;
  }
  else
  {
    *(_DWORD *)(v3 + 184) = *(_DWORD *)(*(void *)(v3 + 104) + 48);
    uint64_t v4 = sub_CEEC4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_CEEC4()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(v0 + 104);
  uint64_t v5 = *(void *)(v0 + 112);
  *(void *)(v3 + *(int *)(v0 + 184)) = v1;
  swift_bridgeObjectRetain();
  sub_1264C(v0 + 16);
  sub_1FC050(45);
  v24._object = (void *)0x8000000000218620;
  v24._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v24);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v25._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v25);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 0x7473657571657220;
  v26._object = (void *)0xE900000000000020;
  sub_1FB8F0(v26);
  v27._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x656E727574657220;
  v28._object = (void *)0xEE00207344492064;
  sub_1FB8F0(v28);
  uint64_t v6 = *(int *)(v4 + 48);
  v18(v5, v3, v2);
  *(void *)(v5 + v6) = v1;
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_4ABEC(v1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v7;
  sub_C43F4((uint64_t *)&v21);
  if (v20)
  {
    return swift_release();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 136);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 144);
    uint64_t v11 = *(void *)(v0 + 120);
    uint64_t v12 = *(void *)(v0 + 128);
    uint64_t v14 = *(void *)(v0 + 104);
    uint64_t v13 = *(void *)(v0 + 112);
    uint64_t v15 = *(void *)(v0 + 56);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v12);
    v29._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(int *)(v14 + 48);
    v19(v15, v11, v12);
    *(void *)(v15 + v16) = v9;
    sub_55F38(v11, &qword_26F588);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_CF1B8()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[15];
  sub_1264C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_CF254(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v7[7] = a1;
  v7[12] = sub_12124(&qword_26F588);
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  return _swift_task_switch(sub_CF304, 0, 0);
}

uint64_t sub_CF304()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = sub_1FB110();
  v0[15] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v0[16] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[17] = v6;
  v0[18] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v2, v4);
  sub_51B70(v3 + 104, (uint64_t)(v0 + 2));
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  sub_5D64(v0 + 2, v7);
  uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[19] = v9;
  void *v9 = v0;
  v9[1] = sub_CF490;
  uint64_t v10 = v0[10];
  return v12(v10, v7, v8);
}

uint64_t sub_CF490(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 160) = a1;
  *(void *)(v3 + 168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_CF8A4;
  }
  else
  {
    *(_DWORD *)(v3 + 176) = *(_DWORD *)(*(void *)(v3 + 96) + 48);
    uint64_t v4 = sub_CF5B0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_CF5B0()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 160);
  uint64_t v20 = *(void *)(v0 + 168);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  *(void *)(v3 + *(int *)(v0 + 176)) = v1;
  swift_bridgeObjectRetain();
  sub_1264C(v0 + 16);
  sub_1FC050(45);
  v24._object = (void *)0x8000000000218620;
  v24._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v24);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v25._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v25);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 0x7473657571657220;
  v26._object = (void *)0xE900000000000020;
  sub_1FB8F0(v26);
  v27._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x656E727574657220;
  v28._object = (void *)0xEE00207344492064;
  sub_1FB8F0(v28);
  uint64_t v6 = *(int *)(v4 + 48);
  v18(v5, v3, v2);
  *(void *)(v5 + v6) = v1;
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_4ABEC(v1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v7;
  sub_C43F4((uint64_t *)&v21);
  if (v20)
  {
    return swift_release();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 160);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v15 = *(void *)(v0 + 56);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v12);
    v29._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(int *)(v14 + 48);
    v19(v15, v11, v12);
    *(void *)(v15 + v16) = v9;
    sub_55F38(v11, &qword_26F588);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_CF8A4()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  sub_1264C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_CF940(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[31] = a3;
  v4[32] = a4;
  v4[29] = a1;
  v4[30] = a2;
  sub_12124(&qword_26F500);
  v4[33] = swift_task_alloc();
  uint64_t v5 = sub_12124(&qword_26F508);
  v4[34] = v5;
  v4[35] = *(void *)(v5 - 8);
  v4[36] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v4[37] = swift_task_alloc();
  v4[38] = swift_task_alloc();
  v4[39] = swift_task_alloc();
  sub_12124(&qword_26F510);
  v4[40] = swift_task_alloc();
  v4[41] = swift_task_alloc();
  uint64_t v6 = sub_1FB110();
  v4[42] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  v4[43] = v7;
  v4[44] = *(void *)(v7 + 64);
  v4[45] = swift_task_alloc();
  v4[46] = swift_task_alloc();
  v4[47] = swift_task_alloc();
  v4[48] = swift_task_alloc();
  v4[49] = swift_task_alloc();
  v4[50] = swift_task_alloc();
  if (qword_26C310 != -1) {
    swift_once();
  }
  uint64_t v8 = qword_26F248;
  v4[51] = qword_26F248;
  return _swift_task_switch(sub_CFBA0, v8, 0);
}

uint64_t sub_CFBA0()
{
  double v111 = v0;
  uint64_t v2 = v0[43];
  uint64_t v1 = v0[44];
  uint64_t v3 = v0[32];
  sub_1FB100();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_50A6C(v4);
  swift_bridgeObjectRelease();
  v0[26] = v5;
  char v90 = v0 + 26;
  long long v83 = (uint64_t *)(v3 + 96);
  swift_beginAccess();
  uint64_t v6 = *(void *)(v3 + 96);
  uint64_t v84 = v6 + 64;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & *(void *)(v6 + 64);
  uint64_t v10 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  uint64_t v11 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  uint64_t v87 = v1 + 7;
  uint64_t v12 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  int64_t v85 = (unint64_t)(63 - v8) >> 6;
  uint64_t v91 = v6;
  uint64_t v13 = swift_bridgeObjectRetain();
  int64_t v103 = 0;
  uint64_t v88 = (void (**)(uint64_t, uint64_t))(v2 + 8);
  uint64_t v89 = v2;
  uint64_t v102 = (void (**)(char *, uint64_t, uint64_t))(v2 + 32);
  uint64_t v86 = (void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16);
  if (!v9) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v18 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v19 = v18 | (v103 << 6);
  while (2)
  {
    uint64_t v20 = v0[40];
    (*(void (**)(uint64_t, unint64_t, void))(v2 + 16))(v20, *(void *)(v91 + 48) + *(void *)(v2 + 72) * v19, v0[42]);
    uint64_t v21 = *(void *)(v91 + 56);
    uint64_t v22 = sub_12124(&qword_26F518);
    *(_OWORD *)(v20 + *(int *)(v22 + 48)) = *(_OWORD *)(v21 + 16 * v19);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(v20, 0, 1, v22);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v28 = v0[41];
      sub_55844(v0[40], v28, &qword_26F510);
      uint64_t v29 = sub_12124(&qword_26F518);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v29 - 8) + 48))(v28, 1, v29) == 1)
      {
        swift_release();
        uint64_t v54 = *v90;
        if (*(void *)(*v90 + 16))
        {
          uint64_t v55 = v0[48];
          uint64_t v56 = v0[46];
          uint64_t v57 = v0[42];
          sub_1FB100();
          char v107 = *v10;
          (*v10)(v55, v56, v57);
          swift_beginAccess();
          swift_bridgeObjectRetain();
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          v109[0] = *v83;
          *long long v83 = 0x8000000000000000;
          sub_71238(v54, (uint64_t)_swiftEmptyArrayStorage, v55, isUniquelyReferenced_nonNull_native);
          *long long v83 = v109[0];
          swift_bridgeObjectRelease();
          uint64_t v59 = *v12;
          (*v12)(v55, v57);
          swift_endAccess();
          uint64_t v60 = v0[26];
          uint64_t v61 = swift_bridgeObjectRetain();
          uint64_t v62 = sub_4AB04(v61);
          swift_bridgeObjectRelease();
          v109[0] = (uint64_t)v62;
          swift_retain();
          sub_C43F4(v109);
          swift_release();
          uint64_t v105 = v109[0];
          v109[0] = 0;
          v109[1] = 0xE000000000000000;
          sub_1FC050(63);
          v113._object = (void *)0x8000000000218620;
          uint64_t v63 = v0;
          v113._uint64_t countAndFlagsBits = 0xD000000000000010;
          sub_1FB8F0(v113);
          sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
          v114._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v114);
          swift_bridgeObjectRelease();
          v115._uint64_t countAndFlagsBits = 0xD000000000000020;
          v115._object = (void *)0x8000000000218640;
          sub_1FB8F0(v115);
          v116._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v116);
          swift_bridgeObjectRelease();
          v117._uint64_t countAndFlagsBits = 0x73444920726F6620;
          v117._object = (void *)0xE900000000000020;
          sub_1FB8F0(v117);
          swift_bridgeObjectRetain_n();
          uint64_t v64 = sub_4AB04(v60);
          swift_bridgeObjectRelease();
          v110[0] = (uint64_t)v64;
          sub_C43F4(v110);
          uint64_t v65 = v0[47];
          uint64_t v66 = v0[48];
          uint64_t v67 = v0[46];
          uint64_t v96 = v63[50];
          uint64_t v98 = v63[46];
          uint64_t v68 = v63[42];
          uint64_t v69 = v63[37];
          uint64_t v94 = v63[47];
          uint64_t v101 = v63[32];
          swift_bridgeObjectRelease();
          v118._uint64_t countAndFlagsBits = sub_1FBAD0();
          sub_1FB8F0(v118);
          swift_bridgeObjectRelease();
          swift_release();
          swift_bridgeObjectRelease();
          uint64_t v70 = sub_1FBC60();
          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 56))(v69, 1, 1, v70);
          v107(v66, v67, v68);
          v107(v65, v96, v68);
          uint64_t v71 = *(unsigned __int8 *)(v89 + 80);
          uint64_t v72 = (v71 + 32) & ~v71;
          unint64_t v73 = (v72 + v87) & 0xFFFFFFFFFFFFFFF8;
          unint64_t v74 = (v73 + 15) & 0xFFFFFFFFFFFFFFF8;
          uint64_t v108 = v59;
          uint64_t v75 = (v71 + v74 + 8) & ~v71;
          uint64_t v76 = swift_allocObject();
          uint64_t v77 = v76 + v72;
          *(void *)(v76 + 16) = 0;
          *(void *)(v76 + 24) = 0;
          uint64_t v78 = *(void (**)(uint64_t, uint64_t, uint64_t))(v89 + 32);
          v78(v77, v66, v68);
          *(void *)(v76 + v73) = v101;
          *(void *)(v76 + v74) = v105;
          v78(v76 + v75, v94, v68);
          swift_retain();
          sub_C4208(v69, (uint64_t)&unk_26F528, v76, &qword_26F4D8);
          sub_55F38(v69, &qword_26D908);
          v108(v98, v68);
          uint64_t v0 = v63;
        }
        v0[52] = sub_12124(&qword_26F4D8);
        sub_12124(&qword_26D670);
        sub_1FBC80();
        v0[53] = _swiftEmptyDictionarySingleton;
        uint64_t v79 = qword_26F248;
        uint64_t v80 = sub_DAEAC(&qword_26F530, (void (*)(uint64_t))type metadata accessor for RequestListActor.ActorType);
        uint64_t v81 = (void *)swift_task_alloc();
        v0[54] = v81;
        *uint64_t v81 = v0;
        v81[1] = sub_D0828;
        uint64_t v13 = v0[33];
        uint64_t v16 = v0[34];
        uint64_t v14 = v79;
        uint64_t v15 = v80;
        uint64_t v17 = v0 + 27;
        return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v13, v14, v15, v16, v17);
      }
      uint64_t v30 = *(void *)(v0[41] + *(int *)(v29 + 48));
      uint64_t v104 = *v11;
      unint64_t v106 = v9;
      ((void (*)(void))*v11)(v0[49]);
      swift_bridgeObjectRetain();
      uint64_t v31 = swift_bridgeObjectRetain();
      uint64_t v32 = sub_E9B0C(v31, v30);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v32 + 16))
      {
        uint64_t v33 = v0[48];
        uint64_t v92 = v0[49];
        uint64_t v34 = v0[47];
        uint64_t v93 = v0[50];
        uint64_t v35 = v0[42];
        uint64_t v36 = v2;
        uint64_t v37 = v0[39];
        uint64_t v95 = v0[44];
        uint64_t v100 = v0[38];
        uint64_t v99 = v0[32];
        sub_10648C(v32);
        uint64_t v38 = sub_1FBC60();
        uint64_t v97 = *(void *)(v38 - 8);
        (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v97 + 56))(v37, 1, 1, v38);
        uint64_t v39 = *(void (**)(uint64_t, uint64_t, uint64_t))(v36 + 16);
        v39(v33, v92, v35);
        v39(v34, v93, v35);
        uint64_t v40 = *(unsigned __int8 *)(v36 + 80);
        uint64_t v41 = (v40 + 40) & ~v40;
        uint64_t v42 = (v95 + v40 + v41) & ~v40;
        uint64_t v43 = (char *)swift_allocObject();
        *((void *)v43 + 2) = 0;
        *((void *)v43 + 3) = 0;
        *((void *)v43 + 4) = v99;
        v104(&v43[v41], v33, v35);
        uint64_t v44 = v35;
        uint64_t v11 = v102;
        v104(&v43[v42], v34, v44);
        *(void *)&v43[(v42 + v87) & 0xFFFFFFFFFFFFFFF8] = v32;
        sub_5606C(v37, v100, &qword_26D908);
        LODWORD(v42) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v97 + 48))(v100, 1, v38);
        swift_retain();
        uint64_t v45 = v0[38];
        if (v42 == 1)
        {
          sub_55F38(v0[38], &qword_26D908);
        }
        else
        {
          sub_1FBC50();
          (*(void (**)(uint64_t, uint64_t))(v97 + 8))(v45, v38);
        }
        uint64_t v2 = v89;
        if (*((void *)v43 + 2))
        {
          swift_getObjectType();
          swift_unknownObjectRetain();
          uint64_t v46 = sub_1FBBD0();
          uint64_t v48 = v47;
          swift_unknownObjectRelease();
        }
        else
        {
          uint64_t v46 = 0;
          uint64_t v48 = 0;
        }
        uint64_t v49 = *(void *)v0[30];
        sub_12124(&qword_26F4D8);
        uint64_t v50 = v48 | v46;
        if (v48 | v46)
        {
          uint64_t v50 = (uint64_t)(v0 + 2);
          v0[2] = 0;
          v0[3] = 0;
          v0[4] = v46;
          v0[5] = v48;
        }
        uint64_t v51 = v0[49];
        uint64_t v52 = v0[42];
        uint64_t v53 = v0[39];
        v0[12] = 1;
        v0[13] = v50;
        v0[14] = v49;
        swift_task_create();
        swift_release();
        sub_55F38(v53, &qword_26D908);
        uint64_t v12 = v88;
        uint64_t v13 = ((uint64_t (*)(uint64_t, uint64_t))*v88)(v51, v52);
        uint64_t v10 = v86;
        unint64_t v9 = v106;
        if (v106) {
          goto LABEL_6;
        }
      }
      else
      {
        (*v12)(v0[49], v0[42]);
        uint64_t v13 = swift_release();
        if (v9) {
          goto LABEL_6;
        }
      }
LABEL_8:
      int64_t v23 = v103 + 1;
      if (__OFADD__(v103, 1))
      {
        __break(1u);
        goto LABEL_44;
      }
      if (v23 < v85)
      {
        unint64_t v24 = *(void *)(v84 + 8 * v23);
        if (v24) {
          goto LABEL_11;
        }
        int64_t v25 = v103 + 2;
        ++v103;
        if (v23 + 1 < v85)
        {
          unint64_t v24 = *(void *)(v84 + 8 * v25);
          if (v24) {
            goto LABEL_14;
          }
          int64_t v103 = v23 + 1;
          if (v23 + 2 < v85)
          {
            unint64_t v24 = *(void *)(v84 + 8 * (v23 + 2));
            if (v24)
            {
              v23 += 2;
              goto LABEL_11;
            }
            int64_t v25 = v23 + 3;
            int64_t v103 = v23 + 2;
            if (v23 + 3 < v85) {
              break;
            }
          }
        }
      }
LABEL_25:
      uint64_t v26 = v0[40];
      uint64_t v27 = sub_12124(&qword_26F518);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v26, 1, 1, v27);
      unint64_t v9 = 0;
    }
    unint64_t v24 = *(void *)(v84 + 8 * v25);
    if (v24)
    {
LABEL_14:
      int64_t v23 = v25;
LABEL_11:
      unint64_t v9 = (v24 - 1) & v24;
      unint64_t v19 = __clz(__rbit64(v24)) + (v23 << 6);
      int64_t v103 = v23;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v85)
    {
      int64_t v103 = v85 - 1;
      goto LABEL_25;
    }
    unint64_t v24 = *(void *)(v84 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_11;
    }
  }
LABEL_44:
  __break(1u);
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v13, v14, v15, v16, v17);
}

uint64_t sub_D0828()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 440) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 408);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_D1284;
    uint64_t v5 = v3;
  }
  else
  {
    uint64_t v5 = *(void *)(v2 + 408);
    uint64_t v4 = sub_D0958;
  }
  return _swift_task_switch(v4, v5, 0);
}

uint64_t sub_D0958()
{
  uint64_t v1 = v0[52];
  uint64_t v2 = v0[33];
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v1 - 8) + 48))(v2, 1, v1);
  uint64_t v4 = v0[50];
  if (v3 == 1)
  {
    uint64_t v5 = v0[53];
    uint64_t v7 = v0[42];
    uint64_t v6 = v0[43];
    uint64_t v8 = (void *)v0[29];
    (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v4, v7);
    *uint64_t v8 = v5;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v9 = (uint64_t (*)(void))v0[1];
    return v9();
  }
  uint64_t v73 = v0[55];
  uint64_t v11 = *(void *)(v2 + *(int *)(v1 + 48));
  (*(void (**)(void, uint64_t, void))(v0[43] + 32))(v0[45], v2, v0[42]);
  v0[21] = 0;
  v0[22] = 0xE000000000000000;
  sub_1FC050(68);
  uint64_t v12 = v0[22];
  v0[23] = v0[21];
  v0[24] = v12;
  v76._object = (void *)0x8000000000218620;
  v76._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v76);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v77._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v77);
  swift_bridgeObjectRelease();
  v78._uint64_t countAndFlagsBits = 0xD000000000000020;
  v78._object = (void *)0x8000000000218670;
  sub_1FB8F0(v78);
  uint64_t v13 = v11;
  v79._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v79);
  swift_bridgeObjectRelease();
  v80._uint64_t countAndFlagsBits = 0x74697720726F6620;
  v80._object = (void *)0xEE00207344492068;
  sub_1FB8F0(v80);
  swift_bridgeObjectRetain_n();
  uint64_t v14 = sub_4ABEC(v11);
  swift_bridgeObjectRelease();
  v0[28] = v14;
  sub_C43F4(v0 + 28);
  if (v73)
  {
    return swift_release();
  }
  uint64_t v72 = v0 + 25;
  uint64_t v15 = v0[53];
  swift_bridgeObjectRelease();
  v81._uint64_t countAndFlagsBits = sub_1FBAD0();
  sub_1FB8F0(v81);
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v0[25] = v15;
  uint64_t v71 = v11 + 64;
  uint64_t v17 = -1;
  uint64_t v18 = -1 << *(unsigned char *)(v11 + 32);
  if (-v18 < 64) {
    uint64_t v17 = ~(-1 << -(char)v18);
  }
  unint64_t v19 = v17 & *(void *)(v11 + 64);
  unint64_t v20 = (unint64_t)(63 - v18) >> 6;
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v26 = 0;
  uint64_t v69 = v0;
  int64_t v70 = v20;
  unint64_t v74 = (void *)v0[53];
  uint64_t v67 = v13 + 112;
  unint64_t v68 = v20 - 6;
  while (1)
  {
    if (v19)
    {
      uint64_t v32 = (v19 - 1) & v19;
      unint64_t v33 = __clz(__rbit64(v19)) | (v26 << 6);
      uint64_t v34 = v26;
    }
    else
    {
      int64_t v35 = v26 + 1;
      if (__OFADD__(v26, 1)) {
        goto LABEL_60;
      }
      if (v35 >= v70) {
        goto LABEL_42;
      }
      unint64_t v36 = *(void *)(v71 + 8 * v35);
      uint64_t v34 = v26 + 1;
      if (!v36)
      {
        uint64_t v34 = v26 + 2;
        if (v26 + 2 >= v70) {
          goto LABEL_42;
        }
        unint64_t v36 = *(void *)(v71 + 8 * v34);
        if (!v36)
        {
          uint64_t v34 = v26 + 3;
          if (v26 + 3 >= v70) {
            goto LABEL_42;
          }
          unint64_t v36 = *(void *)(v71 + 8 * v34);
          if (!v36)
          {
            uint64_t v34 = v26 + 4;
            if (v26 + 4 >= v70) {
              goto LABEL_42;
            }
            unint64_t v36 = *(void *)(v71 + 8 * v34);
            if (!v36)
            {
              uint64_t v34 = v26 + 5;
              if (v26 + 5 >= v70) {
                goto LABEL_42;
              }
              unint64_t v36 = *(void *)(v71 + 8 * v34);
              if (!v36)
              {
                uint64_t v37 = v26;
                while (v68 != v37)
                {
                  unint64_t v36 = *(void *)(v67 + 8 * v37++);
                  if (v36)
                  {
                    uint64_t v34 = v37 + 5;
                    goto LABEL_31;
                  }
                }
LABEL_42:
                uint64_t v38 = v13;
LABEL_43:
                uint64_t v52 = v69[32];
                uint64_t v53 = v38;
                swift_bridgeObjectRelease();
                sub_1226C();
                swift_bridgeObjectRelease();
                swift_beginAccess();
                uint64_t v54 = *(void *)(v52 + 96);
                if (*(void *)(v54 + 16) && (unint64_t v55 = sub_4C9C4(v69[45]), (v56 & 1) != 0))
                {
                  uint64_t v57 = *(void *)(*(void *)(v54 + 56) + 16 * v55 + 8);
                  swift_endAccess();
                  uint64_t v58 = *(void *)(v57 + 16);
                  if (v58)
                  {
                    uint64_t v59 = *(void *)(type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord(0)
                                    - 8);
                    uint64_t v60 = v57
                        + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
                    uint64_t v61 = *(void *)(v59 + 72);
                    swift_bridgeObjectRetain();
                    swift_bridgeObjectRetain();
                    do
                    {
                      sub_D8E6C(v60, v53, v69[50], v69[45]);
                      v60 += v61;
                      --v58;
                    }
                    while (v58);
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRetain();
                  }
                  swift_bridgeObjectRelease();
                  uint64_t v62 = v69[45];
                  swift_bridgeObjectRelease();
                  swift_beginAccess();
                  uint64_t v63 = sub_1E6C00(v62);
                  swift_endAccess();
                  sub_DA178(v63);
                }
                else
                {
                  swift_endAccess();
                  swift_bridgeObjectRelease();
                }
                (*(void (**)(void, void))(v69[43] + 8))(v69[45], v69[42]);
                v69[53] = v74;
                uint64_t v64 = qword_26F248;
                uint64_t v65 = sub_DAEAC(&qword_26F530, (void (*)(uint64_t))type metadata accessor for RequestListActor.ActorType);
                uint64_t v66 = (void *)swift_task_alloc();
                v69[54] = v66;
                *uint64_t v66 = v69;
                v66[1] = sub_D0828;
                uint64_t v21 = v69[33];
                uint64_t v24 = v69[34];
                uint64_t v22 = v64;
                uint64_t v23 = v65;
                int64_t v25 = v69 + 27;
                return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v21, v22, v23, v24, v25);
              }
            }
          }
        }
      }
LABEL_31:
      uint64_t v32 = (v36 - 1) & v36;
      unint64_t v33 = __clz(__rbit64(v36)) + (v34 << 6);
    }
    uint64_t v38 = v13;
    uint64_t v39 = *(void *)(*(void *)(v13 + 48) + 8 * v33);
    uint64_t v40 = (uint64_t *)(*(void *)(v13 + 56) + 16 * v33);
    uint64_t v42 = *v40;
    uint64_t v41 = v40[1];
    swift_bridgeObjectRetain();
    if (!v41) {
      goto LABEL_43;
    }
    unint64_t v43 = sub_56168(v39);
    uint64_t v44 = v74[2];
    BOOL v45 = (v22 & 1) == 0;
    uint64_t v21 = v44 + v45;
    if (__OFADD__(v44, v45))
    {
      __break(1u);
LABEL_59:
      __break(1u);
LABEL_60:
      __break(1u);
      return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v21, v22, v23, v24, v25);
    }
    char v46 = v22;
    if (v74[3] < v21) {
      break;
    }
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      uint64_t v21 = (uint64_t)sub_122030();
    }
LABEL_39:
    uint64_t v47 = (void *)*v72;
    unint64_t v74 = (void *)*v72;
    if (v46)
    {
      uint64_t v27 = 16 * v43;
      uint64_t v28 = (uint64_t *)(v47[7] + 16 * v43);
      uint64_t v30 = *v28;
      uint64_t v29 = v28[1];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v31 = (void *)(v47[7] + v27);
      uint64_t v21 = swift_bridgeObjectRelease();
      *uint64_t v31 = v30;
      v31[1] = v29;
    }
    else
    {
      v47[(v43 >> 6) + 8] |= 1 << v43;
      *(void *)(v47[6] + 8 * v43) = v39;
      uint64_t v48 = (void *)(v47[7] + 16 * v43);
      *uint64_t v48 = v42;
      v48[1] = v41;
      uint64_t v49 = v47[2];
      BOOL v50 = __OFADD__(v49, 1);
      uint64_t v51 = v49 + 1;
      if (v50) {
        goto LABEL_59;
      }
      v47[2] = v51;
    }
    char isUniquelyReferenced_nonNull_native = 1;
    uint64_t v26 = v34;
    unint64_t v19 = v32;
    uint64_t v13 = v38;
  }
  sub_11A870(v21, isUniquelyReferenced_nonNull_native & 1);
  uint64_t v21 = sub_56168(v39);
  if ((v46 & 1) == (v22 & 1))
  {
    unint64_t v43 = v21;
    goto LABEL_39;
  }
  return sub_1FC770();
}

uint64_t sub_D1284()
{
  uint64_t v1 = v0[50];
  uint64_t v3 = v0[42];
  uint64_t v2 = v0[43];
  (*(void (**)(void, void))(v0[35] + 8))(v0[36], v0[34]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_D13D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[5] = a6;
  v7[6] = a7;
  v7[3] = a4;
  v7[4] = a5;
  v7[2] = a1;
  return _swift_task_switch(sub_D1400, 0, 0);
}

uint64_t sub_D1400()
{
  uint64_t v1 = swift_task_alloc();
  *(void *)(v0 + 56) = v1;
  long long v2 = *(_OWORD *)(v0 + 40);
  *(_OWORD *)(v1 + 16) = *(_OWORD *)(v0 + 24);
  *(_OWORD *)(v1 + 32) = v2;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v3;
  uint64_t v4 = sub_12124(&qword_26F4D8);
  *uint64_t v3 = v0;
  v3[1] = sub_D14FC;
  uint64_t v5 = *(void *)(v0 + 16);
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(v5, 0, 0, 0xD000000000000027, 0x80000000002186A0, sub_D9290, v1, v4);
}

uint64_t sub_D14FC()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_DB938, 0, 0);
  }
  else
  {
    swift_task_dealloc();
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_D1638(uint64_t a1, uint64_t a2, char *a3, char *a4, uint64_t a5, uint64_t *a6, uint64_t a7, uint64_t a8)
{
  uint64_t v44 = a8;
  uint64_t v45 = a2;
  uint64_t v41 = a7;
  uint64_t v42 = a4;
  uint64_t v46 = a5;
  uint64_t v39 = a3;
  uint64_t v43 = a1;
  uint64_t v8 = sub_12124(a6);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v40 = v10;
  uint64_t v11 = (char *)&v37 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1FB110();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(void *)(v13 + 64);
  uint64_t v15 = __chkstk_darwin(v12);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v37 - v16;
  uint64_t v18 = sub_12124(&qword_26D908);
  __chkstk_darwin(v18 - 8);
  unint64_t v20 = (char *)&v37 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_1FBC60();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v38 = v20;
  v22(v20, 1, 1, v21);
  uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v37 = v17;
  v23(v17, v39, v12);
  uint64_t v39 = (char *)&v37 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  v23(v39, v42, v12);
  uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 16);
  uint64_t v25 = v43;
  uint64_t v42 = v11;
  uint64_t v43 = v8;
  v24(v11, v25, v8);
  uint64_t v26 = qword_26C310;
  swift_retain();
  swift_bridgeObjectRetain();
  if (v26 != -1) {
    swift_once();
  }
  uint64_t v27 = qword_26F248;
  uint64_t v28 = sub_DAEAC(&qword_26F530, (void (*)(uint64_t))type metadata accessor for RequestListActor.ActorType);
  uint64_t v29 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v30 = (v29 + 40) & ~v29;
  uint64_t v31 = (v14 + v29 + v30) & ~v29;
  unint64_t v32 = (v14 + v31 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (*(unsigned __int8 *)(v9 + 80) + v32 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v34 = (char *)swift_allocObject();
  *((void *)v34 + 2) = v27;
  *((void *)v34 + 3) = v28;
  *((void *)v34 + 4) = v45;
  int64_t v35 = *(void (**)(char *, char *, uint64_t))(v13 + 32);
  v35(&v34[v30], v37, v12);
  v35(&v34[v31], v39, v12);
  *(void *)&v34[v32] = v46;
  (*(void (**)(char *, char *, uint64_t))(v9 + 32))(&v34[v33], v42, v43);
  swift_retain();
  sub_64EB8((uint64_t)v38, v44, (uint64_t)v34);
  return swift_release();
}

uint64_t sub_D19DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  unsigned char v8[16] = a7;
  v8[17] = a8;
  v8[14] = a5;
  v8[15] = a6;
  v8[13] = a4;
  uint64_t v9 = sub_1FB110();
  v8[18] = v9;
  v8[19] = *(void *)(v9 - 8);
  v8[20] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord(0);
  v8[21] = v10;
  v8[22] = *(void *)(v10 - 8);
  v8[23] = swift_task_alloc();
  v8[24] = sub_12124(&qword_26F4D8);
  v8[25] = swift_task_alloc();
  v8[26] = swift_task_alloc();
  v8[27] = swift_task_alloc();
  v8[28] = swift_task_alloc();
  if (qword_26C310 != -1) {
    swift_once();
  }
  uint64_t v11 = qword_26F248;
  v8[29] = qword_26F248;
  return _swift_task_switch(sub_D1B94, v11, 0);
}

uint64_t sub_D1B94()
{
  uint64_t v1 = v0[13] + 96;
  swift_beginAccess();
  uint64_t v2 = *(void *)v1;
  if (*(void *)(*(void *)v1 + 16) && (unint64_t v3 = sub_4C9C4(v0[14]), (v4 & 1) != 0))
  {
    uint64_t v5 = v0[23];
    uint64_t v6 = v0[18];
    uint64_t v7 = v0[19];
    uint64_t v34 = v0[17];
    uint64_t v8 = v0[15];
    uint64_t v30 = v0[21];
    uint64_t v31 = v0[16];
    uint64_t v9 = (uint64_t *)(*(void *)(v2 + 56) + 16 * v3);
    uint64_t v11 = *v9;
    uint64_t v10 = v9[1];
    swift_endAccess();
    unint64_t v32 = *(void (**)(uint64_t, uint64_t, uint64_t))(v7 + 16);
    v32(v5, v8, v6);
    uint64_t v12 = v5 + *(int *)(v30 + 24);
    uint64_t v13 = sub_12124(&qword_26F548);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(v12, v34, v13);
    *(void *)(v5 + *(int *)(v30 + 20)) = v31;
    uint64_t v35 = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_42C0C(0, *(void *)(v10 + 16) + 1, 1, v10);
    }
    unint64_t v15 = *(void *)(v10 + 16);
    unint64_t v14 = *(void *)(v10 + 24);
    if (v15 >= v14 >> 1) {
      uint64_t v10 = sub_42C0C(v14 > 1, v15 + 1, 1, v10);
    }
    uint64_t v17 = v0[22];
    uint64_t v16 = v0[23];
    uint64_t v19 = v0[19];
    uint64_t v18 = v0[20];
    uint64_t v20 = v0[18];
    uint64_t v21 = v0[14];
    *(void *)(v10 + 16) = v15 + 1;
    sub_DAA2C(v16, v10+ ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80))+ *(void *)(v17 + 72) * v15, type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord);
    v32(v18, v21, v20);
    swift_beginAccess();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v36 = *(void *)v1;
    *(void *)uint64_t v1 = 0x8000000000000000;
    sub_71238(v35, v10, v18, isUniquelyReferenced_nonNull_native);
    *(void *)uint64_t v1 = v36;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v19 + 8))(v18, v20);
    swift_endAccess();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v23 = (uint64_t (*)(void))v0[1];
    return v23();
  }
  else
  {
    uint64_t v25 = v0[13];
    swift_endAccess();
    sub_1FB100();
    sub_51B70(v25 + 144, (uint64_t)(v0 + 2));
    uint64_t v26 = v0[5];
    uint64_t v27 = v0[6];
    sub_5D64(v0 + 2, v26);
    unint64_t v33 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8) + **(int **)(v27 + 8));
    uint64_t v28 = (void *)swift_task_alloc();
    v0[30] = v28;
    *uint64_t v28 = v0;
    v28[1] = sub_D1F8C;
    uint64_t v29 = v0[16];
    return v33(v29, v26, v27);
  }
}

uint64_t sub_D1F8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 248) = v1;
  swift_task_dealloc();
  uint64_t v5 = *(void *)(v4 + 232);
  if (v1)
  {
    uint64_t v6 = sub_D2438;
  }
  else
  {
    uint64_t v7 = *(void *)(v4 + 192);
    *(void *)(v4 + 256) = a1;
    *(_DWORD *)(v4 + 264) = *(_DWORD *)(v7 + 48);
    uint64_t v6 = sub_D20D4;
  }
  return _swift_task_switch(v6, v5, 0);
}

uint64_t sub_D20D4()
{
  uint64_t v25 = v0;
  uint64_t v1 = *(int *)(v0 + 264);
  uint64_t v23 = *(void *)(v0 + 248);
  uint64_t v3 = *(void *)(v0 + 216);
  uint64_t v2 = *(void *)(v0 + 224);
  uint64_t v4 = *(void *)(v0 + 192);
  uint64_t v5 = *(void *)(v0 + 144);
  uint64_t v6 = *(void *)(v0 + 152);
  *(void *)(v2 + v1) = *(void *)(v0 + 256);
  sub_1264C(v0 + 16);
  sub_1FC050(42);
  v27._object = (void *)0x80000000002186D0;
  v27._uint64_t countAndFlagsBits = 0xD000000000000015;
  sub_1FB8F0(v27);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v28._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v28);
  swift_bridgeObjectRelease();
  v29._uint64_t countAndFlagsBits = 32;
  v29._object = (void *)0xE100000000000000;
  sub_1FB8F0(v29);
  v30._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v30);
  swift_bridgeObjectRelease();
  v31._uint64_t countAndFlagsBits = 0x656E727574657220;
  v31._object = (void *)0xEE00207344492064;
  sub_1FB8F0(v31);
  uint64_t v7 = *(int *)(v4 + 48);
  uint64_t v8 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  v8(v3, v2, v5);
  uint64_t v9 = *(void *)(v2 + v1);
  *(void *)(v3 + v7) = v9;
  swift_bridgeObjectRetain_n();
  uint64_t v10 = sub_4ABEC(v9);
  swift_bridgeObjectRelease();
  uint64_t v24 = v10;
  sub_C43F4((uint64_t *)&v24);
  if (v23)
  {
    return swift_release();
  }
  else
  {
    uint64_t v13 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 224);
    uint64_t v14 = *(void *)(v0 + 200);
    uint64_t v20 = *(void *)(v0 + 208);
    uint64_t v21 = *(void *)(v0 + 192);
    uint64_t v22 = *(int *)(v0 + 264);
    uint64_t v16 = *(void *)(v0 + 144);
    uint64_t v15 = *(void *)(v0 + 152);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v13, v16);
    v32._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v32);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    v8(v20, v12, v16);
    uint64_t v17 = *(void *)(v12 + v22);
    uint64_t v18 = *(int *)(v21 + 48);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 32))(v14, v20, v16);
    *(void *)(v14 + v18) = v17;
    swift_bridgeObjectRetain();
    sub_12124(&qword_26F548);
    sub_1FBBF0();
    sub_55F38(v12, &qword_26F4D8);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
    return v19();
  }
}

uint64_t sub_D2438()
{
  uint64_t v1 = v0[28];
  uint64_t v2 = v0[19];
  uint64_t v3 = v0[18];
  sub_1264C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_D2510(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[10] = a6;
  v7[11] = a7;
  v7[8] = a4;
  v7[9] = a5;
  v7[7] = a1;
  v7[12] = sub_12124(&qword_26F4D8);
  v7[13] = swift_task_alloc();
  v7[14] = swift_task_alloc();
  return _swift_task_switch(sub_D25C0, 0, 0);
}

uint64_t sub_D25C0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[8];
  uint64_t v4 = sub_1FB110();
  v0[15] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v0[16] = v5;
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  v0[17] = v6;
  v0[18] = (v5 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v1, v3, v4);
  sub_51B70(v2 + 144, (uint64_t)(v0 + 2));
  uint64_t v7 = v0[5];
  uint64_t v8 = v0[6];
  sub_5D64(v0 + 2, v7);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_50A6C(v9);
  v0[19] = v10;
  swift_bridgeObjectRelease();
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[20] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_D2768;
  return v13(v10, v7, v8);
}

uint64_t sub_D2768(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 168) = a1;
  *(void *)(v3 + 176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_D2B84;
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 96);
    swift_bridgeObjectRelease();
    *(_DWORD *)(v3 + 184) = *(_DWORD *)(v5 + 48);
    uint64_t v4 = sub_D2890;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_D2890()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v20 = *(void *)(v0 + 176);
  uint64_t v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
  uint64_t v3 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120);
  uint64_t v4 = *(void *)(v0 + 96);
  uint64_t v5 = *(void *)(v0 + 104);
  *(void *)(v3 + *(int *)(v0 + 184)) = v1;
  swift_bridgeObjectRetain();
  sub_1264C(v0 + 16);
  sub_1FC050(45);
  v24._object = (void *)0x8000000000218620;
  v24._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v24);
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v25._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v25);
  swift_bridgeObjectRelease();
  v26._uint64_t countAndFlagsBits = 0x7473657571657220;
  v26._object = (void *)0xE900000000000020;
  sub_1FB8F0(v26);
  v27._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v27);
  swift_bridgeObjectRelease();
  v28._uint64_t countAndFlagsBits = 0x656E727574657220;
  v28._object = (void *)0xEE00207344492064;
  sub_1FB8F0(v28);
  uint64_t v6 = *(int *)(v4 + 48);
  v18(v5, v3, v2);
  *(void *)(v5 + v6) = v1;
  swift_bridgeObjectRetain_n();
  uint64_t v7 = sub_4ABEC(v1);
  swift_bridgeObjectRelease();
  uint64_t v21 = v7;
  sub_C43F4((uint64_t *)&v21);
  if (v20)
  {
    return swift_release();
  }
  else
  {
    uint64_t v9 = *(void *)(v0 + 168);
    uint64_t v10 = *(void *)(v0 + 128);
    uint64_t v19 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 136);
    uint64_t v11 = *(void *)(v0 + 112);
    uint64_t v12 = *(void *)(v0 + 120);
    uint64_t v14 = *(void *)(v0 + 96);
    uint64_t v13 = *(void *)(v0 + 104);
    uint64_t v15 = *(void *)(v0 + 56);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v13, v12);
    v29._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v29);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v16 = *(int *)(v14 + 48);
    v19(v15, v11, v12);
    *(void *)(v15 + v16) = v9;
    sub_55F38(v11, &qword_26F4D8);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v17 = *(uint64_t (**)(void))(v0 + 8);
    return v17();
  }
}

uint64_t sub_D2B84()
{
  uint64_t v1 = v0[15];
  uint64_t v2 = v0[16];
  uint64_t v3 = v0[14];
  swift_bridgeObjectRelease();
  sub_1264C((uint64_t)(v0 + 2));
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v3, v1);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

void sub_D2C34(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v10 = sub_12124(&qword_26F4F0);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v13 = (*(unsigned __int8 *)(v11 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v14 = (char *)swift_allocObject();
  *((void *)v14 + 2) = a2;
  *((void *)v14 + 3) = a3;
  *((void *)v14 + 4) = a4;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(&v14[v13], (char *)aBlock - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), v10);
  *(void *)&v14[(v12 + v13 + 7) & 0xFFFFFFFFFFFFFFF8] = a5;
  aBlock[4] = sub_D9B48;
  aBlock[5] = v14;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D8;
  aBlock[3] = &unk_25E030;
  uint64_t v15 = _Block_copy(aBlock);
  id v16 = a2;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v16 performBlock:v15];
  _Block_release(v15);
}

void sub_D2E24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v197 = a4;
  uint64_t v196 = a3;
  uint64_t v214 = a2;
  uint64_t v204 = sub_1FB0E0();
  int64_t v217 = *(void *)(v204 - 8);
  __chkstk_darwin(v204);
  uint64_t v203 = (char *)&v194 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CachedPersonalizationBookMetadataGenre();
  Class ObjCClassFromMetadata = (Class)swift_getObjCClassFromMetadata();
  uint64_t v7 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithEntityName:v9];

  id v199 = v10;
  uint64_t v201 = v6;
  unint64_t v11 = sub_1FBE30();
  if (!v11) {
    unint64_t v11 = (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v218 = 0;
  if (v11 >> 62) {
    goto LABEL_25;
  }
  uint64_t v12 = *(void *)((char *)&dword_10 + (v11 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  for (uint64_t i = (void *)a1; v12; uint64_t i = (void *)a1)
  {
    id v220 = (id)(v11 & 0xC000000000000001);
    unint64_t v221 = _swiftEmptyDictionarySingleton;
    a1 = 4;
    while (1)
    {
      id v14 = v220 ? (id)sub_1FC090() : *(id *)(v11 + 8 * a1);
      id v15 = v14;
      uint64_t v16 = a1 - 3;
      if (__OFADD__(a1 - 4, 1)) {
        break;
      }
      unint64_t v17 = (unint64_t)[v14 genreID];
      if ((v17 & 0x8000000000000000) != 0)
      {
LABEL_205:
        sub_1FC210();
        __break(1u);
LABEL_206:
        sub_1FC770();
        __break(1u);
        return;
      }
      unint64_t v18 = v17;
      uint64_t v19 = v221;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v222[0] = v19;
      unint64_t v22 = sub_56168(v18);
      uint64_t v23 = v19[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24)) {
        goto LABEL_23;
      }
      char v26 = v21;
      if (v19[3] >= v25)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_1224A8();
        }
      }
      else
      {
        sub_11AF78(v25, isUniquelyReferenced_nonNull_native);
        uint64_t v27 = sub_56168(v18);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_206;
        }
        unint64_t v22 = v27;
      }
      Swift::String v29 = v222[0];
      unint64_t v221 = v222[0];
      if (v26)
      {
        uint64_t v13 = *((void *)v222[0] + 7);

        *(void *)(v13 + 8 * v22) = v15;
      }
      else
      {
        *((void *)v222[0] + (v22 >> 6) + 8) |= 1 << v22;
        uint64_t v30 = 8 * v22;
        *(void *)(v29[6] + v30) = v18;
        *(void *)(v29[7] + v30) = v15;
        uint64_t v31 = v29[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_24;
        }
        v29[2] = v33;
      }
      swift_bridgeObjectRelease();
      ++a1;
      if (v16 == v12) {
        goto LABEL_27;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_1FC270();
    swift_bridgeObjectRelease();
  }
  unint64_t v221 = _swiftEmptyDictionarySingleton;
LABEL_27:
  swift_bridgeObjectRelease_n();
  uint64_t v34 = type metadata accessor for CachedPersonalizationBookMetadataAuthor();
  Class v205 = (Class)swift_getObjCClassFromMetadata();
  uint64_t v35 = NSStringFromClass(v205);
  sub_1FB810();

  id v36 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v37 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v38 = [v36 initWithEntityName:v37];

  id v198 = v38;
  uint64_t v206 = v34;
  uint64_t v39 = v218;
  uint64_t v40 = sub_1FBE30();
  if (v39)
  {
    swift_errorRelease();
    uint64_t v195 = 0;
  }
  else
  {
    unint64_t v41 = v40;
    uint64_t v195 = 0;
    if (v40) {
      goto LABEL_31;
    }
  }
  unint64_t v41 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_31:
  if (v41 >> 62) {
    goto LABEL_55;
  }
  uint64_t v42 = *(void *)((char *)&dword_10 + (v41 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (v42)
  {
    id v220 = (id)(v41 & 0xC000000000000001);
    uint64_t v43 = _swiftEmptyDictionarySingleton;
    uint64_t v44 = 4;
    while (1)
    {
      id v48 = v220 ? (id)sub_1FC090() : *(id *)(v41 + 8 * v44);
      id v49 = v48;
      uint64_t v50 = v44 - 3;
      if (__OFADD__(v44 - 4, 1)) {
        break;
      }
      uint64_t v51 = v43;
      uint64_t v52 = v42;
      unint64_t v53 = (unint64_t)[v48 authorID];
      if ((v53 & 0x8000000000000000) != 0) {
        goto LABEL_205;
      }
      unint64_t v54 = v53;
      unint64_t v55 = v51;
      char v56 = swift_isUniquelyReferenced_nonNull_native();
      v222[0] = v55;
      unint64_t v58 = sub_56168(v54);
      uint64_t v59 = v55[2];
      BOOL v60 = (v57 & 1) == 0;
      uint64_t v61 = v59 + v60;
      if (__OFADD__(v59, v60)) {
        goto LABEL_53;
      }
      char v62 = v57;
      if (v55[3] >= v61)
      {
        if (v56)
        {
          uint64_t v65 = v222[0];
          if (v57) {
            goto LABEL_34;
          }
        }
        else
        {
          sub_1224B4();
          uint64_t v65 = v222[0];
          if (v62) {
            goto LABEL_34;
          }
        }
      }
      else
      {
        sub_11AF84(v61, v56);
        uint64_t v63 = sub_56168(v54);
        if ((v62 & 1) != (v64 & 1)) {
          goto LABEL_206;
        }
        unint64_t v58 = v63;
        uint64_t v65 = v222[0];
        if (v62)
        {
LABEL_34:
          uint64_t v45 = v65;
          uint64_t v46 = v65[7];

          *(void *)(v46 + 8 * v58) = v49;
          goto LABEL_35;
        }
      }
      v65[(v58 >> 6) + 8] |= 1 << v58;
      uint64_t v66 = 8 * v58;
      *(void *)(v65[6] + v66) = v54;
      *(void *)(v65[7] + v66) = v49;
      uint64_t v67 = v65[2];
      BOOL v32 = __OFADD__(v67, 1);
      uint64_t v68 = v67 + 1;
      if (v32) {
        goto LABEL_54;
      }
      uint64_t v45 = v65;
      v65[2] = v68;
LABEL_35:
      swift_bridgeObjectRelease();
      ++v44;
      uint64_t v42 = v52;
      BOOL v47 = v50 == v52;
      uint64_t v43 = v45;
      if (v47) {
        goto LABEL_57;
      }
    }
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    swift_bridgeObjectRetain_n();
    uint64_t v42 = sub_1FC270();
    swift_bridgeObjectRelease();
  }
  uint64_t v43 = _swiftEmptyDictionarySingleton;
LABEL_57:
  swift_bridgeObjectRelease_n();
  uint64_t v69 = *(void *)(v214 + 64);
  uint64_t v207 = v214 + 64;
  uint64_t v70 = 1 << *(unsigned char *)(v214 + 32);
  if (v70 < 64) {
    uint64_t v71 = ~(-1 << v70);
  }
  else {
    uint64_t v71 = -1;
  }
  unint64_t v72 = v71 & v69;
  int64_t v208 = (unint64_t)(v70 + 63) >> 6;
  uint64_t v202 = (void (**)(char *, uint64_t))(v217 + 8);
  swift_bridgeObjectRetain();
  int64_t v73 = 0;
  unint64_t v74 = i;
  while (1)
  {
LABEL_63:
    if (v72)
    {
      uint64_t v216 = (v72 - 1) & v72;
      int64_t v217 = v73;
      unint64_t v75 = __clz(__rbit64(v72)) | (v73 << 6);
    }
    else
    {
      BOOL v32 = __OFADD__(v73, 1);
      int64_t v76 = v73 + 1;
      if (v32) {
        goto LABEL_192;
      }
      if (v76 >= v208)
      {
LABEL_171:
        swift_release();
        sub_D4488(v74);
        if ([v74 hasChanges])
        {
          v222[0] = 0;
          if ([v74 save:v222])
          {
            uint64_t v174 = v222[0];
          }
          else
          {
            Swift::String v181 = v222[0];
            sub_1FAEB0();

            swift_willThrow();
            if (qword_26C320 != -1) {
              swift_once();
            }
            uint64_t v182 = sub_1FB430();
            sub_6DBC8(v182, (uint64_t)qword_2A5BD0);
            swift_errorRetain();
            swift_errorRetain();
            Swift::String v183 = sub_1FB410();
            os_log_type_t v184 = sub_1FBDA0();
            if (os_log_type_enabled(v183, v184))
            {
              Swift::String v185 = (uint8_t *)swift_slowAlloc();
              Swift::String v186 = (void *)swift_slowAlloc();
              *(_DWORD *)Swift::String v185 = 138412290;
              swift_errorRetain();
              uint64_t v187 = (void *)_swift_stdlib_bridgeErrorToNSError();
              v222[0] = v187;
              sub_1FBED0();
              *Swift::String v186 = v187;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl(&dword_0, v183, v184, "Failed to save cache insertions %@", v185, 0xCu);
              sub_12124(&qword_26F4F8);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();

              swift_errorRelease();
            }
            else
            {
              swift_errorRelease();
              swift_errorRelease();
              swift_errorRelease();
            }
          }
        }
        v222[0] = 0;
        sub_12124(&qword_26F4F0);
        sub_1FBBF0();

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return;
      }
      unint64_t v77 = *(void *)(v207 + 8 * v76);
      if (!v77)
      {
        int64_t v78 = v76 + 1;
        if (v76 + 1 >= v208) {
          goto LABEL_171;
        }
        unint64_t v77 = *(void *)(v207 + 8 * v78);
        if (!v77)
        {
          int64_t v78 = v76 + 2;
          if (v76 + 2 >= v208) {
            goto LABEL_171;
          }
          unint64_t v77 = *(void *)(v207 + 8 * v78);
          if (!v77)
          {
            int64_t v78 = v76 + 3;
            if (v76 + 3 >= v208) {
              goto LABEL_171;
            }
            unint64_t v77 = *(void *)(v207 + 8 * v78);
            if (!v77)
            {
              while (1)
              {
                int64_t v76 = v78 + 1;
                if (__OFADD__(v78, 1)) {
                  goto LABEL_197;
                }
                if (v76 >= v208) {
                  goto LABEL_171;
                }
                unint64_t v77 = *(void *)(v207 + 8 * v76);
                ++v78;
                if (v77) {
                  goto LABEL_75;
                }
              }
            }
          }
        }
        int64_t v76 = v78;
      }
LABEL_75:
      uint64_t v216 = (v77 - 1) & v77;
      int64_t v217 = v76;
      unint64_t v75 = __clz(__rbit64(v77)) + (v76 << 6);
    }
    unint64_t v79 = *(void *)(*(void *)(v214 + 48) + 8 * v75);
    Swift::String v80 = (unsigned __int8 *)(*(void *)(v214 + 56) + 80 * v75);
    int v81 = *v80;
    uint64_t v83 = *((void *)v80 + 1);
    uint64_t v82 = *((void *)v80 + 2);
    int64_t v212 = *((void *)v80 + 3);
    unint64_t v213 = v79;
    int v84 = v80[32];
    int v210 = v81;
    LODWORD(v211) = v84;
    uint64_t v85 = *((void *)v80 + 6);
    double v209 = (void (*)(char *, uint64_t))*((void *)v80 + 5);
    uint64_t v86 = v80[56];
    uint64_t v87 = *((void *)v80 + 8);
    unsigned __int8 v88 = v80[72];
    type metadata accessor for CachedPersonalizationBookMetadata();
    uint64_t v89 = (objc_class *)swift_getObjCClassFromMetadata();
    uint64_t v218 = v83;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v90 = NSStringFromClass(v89);
    if (!v90)
    {
      sub_1FB810();
      char v90 = (NSString *)sub_1FB7E0();
      unint64_t v74 = i;
      swift_bridgeObjectRelease();
    }
    id v220 = self;
    uint64_t v91 = [v220 insertNewObjectForEntityForName:v90 inManagedObjectContext:v74];

    uint64_t v92 = swift_dynamicCastClass();
    if (v92) {
      break;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (qword_26C320 != -1) {
      swift_once();
    }
    uint64_t v105 = sub_1FB430();
    sub_6DBC8(v105, (uint64_t)qword_2A5BD0);
    int64_t v103 = sub_1FB410();
    os_log_type_t v106 = sub_1FBDA0();
    BOOL v107 = os_log_type_enabled(v103, v106);
    unint64_t v72 = v216;
    int64_t v73 = v217;
    if (v107)
    {
      uint64_t v108 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v108 = 0;
      _os_log_impl(&dword_0, v103, v106, "Failed to create metadata", v108, 2u);
      swift_slowDealloc();
    }
    else
    {
LABEL_62:
    }
  }
  uint64_t v93 = (void *)v92;
  uint64_t v215 = v91;
  if (v86 == 2) {
    goto LABEL_101;
  }
  uint64_t v94 = (void *)v92;
  type metadata accessor for CachedPersonalizationBookMetadataSeriesMembership();
  uint64_t v95 = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v96 = NSStringFromClass(v95);
  if (!v96)
  {
    sub_1FB810();
    uint64_t v96 = (NSString *)sub_1FB7E0();
    unint64_t v74 = i;
    swift_bridgeObjectRelease();
  }
  id v97 = [v220 insertNewObjectForEntityForName:v96 inManagedObjectContext:v74];

  uint64_t v98 = (void *)swift_dynamicCastClass();
  if (!v98)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (qword_26C320 != -1) {
      swift_once();
    }
    uint64_t v99 = sub_1FB430();
    sub_6DBC8(v99, (uint64_t)qword_2A5BD0);
    uint64_t v100 = sub_1FB410();
    os_log_type_t v101 = sub_1FBDA0();
    BOOL v102 = os_log_type_enabled(v100, v101);
    unint64_t v74 = i;
    unint64_t v72 = v216;
    int64_t v73 = v217;
    int64_t v103 = v215;
    if (v102)
    {
      uint64_t v104 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v104 = 0;
      _os_log_impl(&dword_0, v100, v101, "Failed to create series membership", v104, 2u);
      swift_slowDealloc();
    }

    goto LABEL_62;
  }
  if (v85 < 0) {
    goto LABEL_202;
  }
  uint64_t v109 = v98;
  [v98 setSeriesID:v85];
  if (v88) {
    uint64_t v110 = 0;
  }
  else {
    uint64_t v110 = v87;
  }
  if (v110 < 0) {
    goto LABEL_203;
  }
  [v109 setMappedSeriesID:];
  [v109 setOrdinal:v209];
  [v109 setIsOrdered:v86 & 1];
  uint64_t v93 = v94;
  [v94 setSeriesMembership:v109];

  unint64_t v74 = i;
LABEL_101:
  if ((v213 & 0x8000000000000000) != 0) {
    goto LABEL_200;
  }
  [v93 setAssetID:];
  if (v211) {
    int64_t v111 = 0;
  }
  else {
    int64_t v111 = v212;
  }
  if (v111 < 0)
  {
LABEL_201:
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    swift_once();
LABEL_175:
    uint64_t v175 = sub_1FB430();
    sub_6DBC8(v175, (uint64_t)qword_2A5BD0);
    Swift::String v176 = sub_1FB410();
    os_log_type_t v177 = sub_1FBDA0();
    BOOL v178 = os_log_type_enabled(v176, v177);
    Swift::String v179 = v215;
    if (v178)
    {
      Swift::String v180 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)Swift::String v180 = 0;
      _os_log_impl(&dword_0, v176, v177, "Failed to insert author object into database", v180, 2u);
      swift_slowDealloc();
    }

    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
    swift_release();

    goto LABEL_187;
  }
  [v93 setMappedAssetID];
  uint64_t v112 = v203;
  sub_1FB0D0();
  Class isa = sub_1FB060().super.isa;
  double v209 = *v202;
  v209(v112, v204);
  [v93 setLastAccessDate:isa];

  if (v210) {
    uint64_t v114 = 2;
  }
  else {
    uint64_t v114 = 1;
  }
  unint64_t v213 = (unint64_t)v93;
  [v93 setMediaType:v114];
  uint64_t v115 = *(void *)(v82 + 56);
  uint64_t v211 = v82 + 56;
  uint64_t v116 = 1 << *(unsigned char *)(v82 + 32);
  if (v116 < 64) {
    uint64_t v117 = ~(-1 << v116);
  }
  else {
    uint64_t v117 = -1;
  }
  unint64_t v118 = v117 & v115;
  int64_t v212 = (unint64_t)(v116 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v119 = 0;
  id v120 = v220;
  while (2)
  {
    if (v118)
    {
      unint64_t v122 = __clz(__rbit64(v118));
      v118 &= v118 - 1;
      unint64_t v123 = v122 | (v119 << 6);
LABEL_129:
      uint64_t v126 = *(void *)(*(void *)(v82 + 48) + 8 * v123);
      if (v43[2] && (uint64_t v127 = sub_56168(v126), (v128 & 1) != 0))
      {
        id v129 = *(id *)(v43[7] + 8 * v127);
      }
      else
      {
        uint64_t v130 = NSStringFromClass(v205);
        if (!v130)
        {
          sub_1FB810();
          uint64_t v130 = (NSString *)sub_1FB7E0();
          swift_bridgeObjectRelease();
        }
        id v131 = [v120 insertNewObjectForEntityForName:v130 inManagedObjectContext:v74];

        int64_t v132 = (void *)swift_dynamicCastClass();
        if (!v132)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();

          if (qword_26C320 != -1) {
            goto LABEL_204;
          }
          goto LABEL_175;
        }
        if (v126 < 0)
        {
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
          goto LABEL_198;
        }
        id v129 = v132;
        [v132 setAuthorID:v126];
        id v133 = v131;
        char v134 = swift_isUniquelyReferenced_nonNull_native();
        v222[0] = v43;
        unint64_t v136 = sub_56168(v126);
        uint64_t v137 = v43[2];
        BOOL v138 = (v135 & 1) == 0;
        uint64_t v139 = v137 + v138;
        if (__OFADD__(v137, v138)) {
          goto LABEL_191;
        }
        char v140 = v135;
        if (v43[3] >= v139)
        {
          if ((v134 & 1) == 0) {
            sub_1224B4();
          }
        }
        else
        {
          sub_11AF84(v139, v134);
          uint64_t v141 = sub_56168(v126);
          if ((v140 & 1) != (v142 & 1)) {
            goto LABEL_206;
          }
          unint64_t v136 = v141;
        }
        id v120 = v220;
        uint64_t v43 = v222[0];
        if (v140)
        {
          uint64_t v121 = *((void *)v222[0] + 7);

          *(void *)(v121 + 8 * v136) = v129;
        }
        else
        {
          *((void *)v222[0] + (v136 >> 6) + 8) |= 1 << v136;
          uint64_t v143 = 8 * v136;
          *(void *)(v43[6] + v143) = v126;
          *(void *)(v43[7] + v143) = v129;
          uint64_t v144 = v43[2];
          BOOL v32 = __OFADD__(v144, 1);
          uint64_t v145 = v144 + 1;
          if (v32) {
            goto LABEL_194;
          }
          void v43[2] = v145;
        }
        swift_bridgeObjectRelease();
        unint64_t v74 = i;
      }
      [(id)v213 addAuthorsObject:v129];

      continue;
    }
    break;
  }
  BOOL v32 = __OFADD__(v119++, 1);
  if (v32) {
    goto LABEL_193;
  }
  if (v119 < v212)
  {
    unint64_t v124 = *(void *)(v211 + 8 * v119);
    if (!v124)
    {
      int64_t v125 = v119 + 1;
      if (v119 + 1 >= v212) {
        goto LABEL_149;
      }
      unint64_t v124 = *(void *)(v211 + 8 * v125);
      if (!v124)
      {
        int64_t v125 = v119 + 2;
        if (v119 + 2 >= v212) {
          goto LABEL_149;
        }
        unint64_t v124 = *(void *)(v211 + 8 * v125);
        if (!v124)
        {
          int64_t v125 = v119 + 3;
          if (v119 + 3 >= v212) {
            goto LABEL_149;
          }
          unint64_t v124 = *(void *)(v211 + 8 * v125);
          if (!v124)
          {
            while (1)
            {
              int64_t v119 = v125 + 1;
              if (__OFADD__(v125, 1)) {
                break;
              }
              if (v119 >= v212) {
                goto LABEL_149;
              }
              unint64_t v124 = *(void *)(v211 + 8 * v119);
              ++v125;
              if (v124) {
                goto LABEL_128;
              }
            }
LABEL_198:
            __break(1u);
LABEL_199:
            __break(1u);
LABEL_200:
            __break(1u);
            goto LABEL_201;
          }
        }
      }
      int64_t v119 = v125;
    }
LABEL_128:
    unint64_t v118 = (v124 - 1) & v124;
    unint64_t v123 = __clz(__rbit64(v124)) + (v119 << 6);
    goto LABEL_129;
  }
LABEL_149:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v146 = *(void *)(v218 + 16);
  if (!v146)
  {
LABEL_170:
    swift_bridgeObjectRelease();
    [(id)v213 setGenresKnown:1];

    unint64_t v72 = v216;
    int64_t v73 = v217;
    goto LABEL_63;
  }
  uint64_t v147 = v218 + 40;
  while (2)
  {
    uint64_t v149 = *(void *)(v147 - 8);
    if (v221[2])
    {
      uint64_t v150 = sub_56168(*(void *)(v147 - 8));
      if (v151)
      {
        id v152 = *(id *)(v221[7] + 8 * v150);
LABEL_153:
        [(id)v213 addLeafGenresObject:v152];

        v147 += 16;
        if (!--v146) {
          goto LABEL_170;
        }
        continue;
      }
    }
    break;
  }
  swift_bridgeObjectRetain();
  uint64_t v153 = NSStringFromClass(ObjCClassFromMetadata);
  if (!v153)
  {
    sub_1FB810();
    uint64_t v153 = (NSString *)sub_1FB7E0();
    swift_bridgeObjectRelease();
  }
  id v154 = [v220 insertNewObjectForEntityForName:v153 inManagedObjectContext:v74];

  uint64_t v155 = (void *)swift_dynamicCastClass();
  if (v155)
  {
    if (v149 < 0) {
      goto LABEL_195;
    }
    id v152 = v155;
    [v155 setGenreID:v149];
    Class v156 = sub_1FBAA0().super.isa;
    swift_bridgeObjectRelease();
    [v152 setPath:v156];

    uint64_t v157 = v203;
    sub_1FB0D0();
    Class v158 = sub_1FB060().super.isa;
    v209(v157, v204);
    [v152 setLastAccessDate:v158];

    id v159 = v154;
    uint64_t v160 = v221;
    char v161 = swift_isUniquelyReferenced_nonNull_native();
    v222[0] = v160;
    unint64_t v163 = sub_56168(v149);
    uint64_t v164 = v160[2];
    BOOL v165 = (v162 & 1) == 0;
    uint64_t v166 = v164 + v165;
    if (__OFADD__(v164, v165)) {
      goto LABEL_196;
    }
    char v167 = v162;
    if (v160[3] >= v166)
    {
      if ((v161 & 1) == 0) {
        sub_1224A8();
      }
    }
    else
    {
      sub_11AF78(v166, v161);
      uint64_t v168 = sub_56168(v149);
      if ((v167 & 1) != (v169 & 1)) {
        goto LABEL_206;
      }
      unint64_t v163 = v168;
    }
    uint64_t v170 = v222[0];
    unint64_t v221 = v222[0];
    if (v167)
    {
      uint64_t v148 = *((void *)v222[0] + 7);

      *(void *)(v148 + 8 * v163) = v152;
    }
    else
    {
      *((void *)v222[0] + (v163 >> 6) + 8) |= 1 << v163;
      uint64_t v171 = 8 * v163;
      *(void *)(v170[6] + v171) = v149;
      *(void *)(v170[7] + v171) = v152;
      uint64_t v172 = v170[2];
      BOOL v32 = __OFADD__(v172, 1);
      uint64_t v173 = v172 + 1;
      if (v32) {
        goto LABEL_199;
      }
      v170[2] = v173;
    }
    swift_bridgeObjectRelease();
    unint64_t v74 = i;
    goto LABEL_153;
  }
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  if (qword_26C320 != -1) {
    swift_once();
  }
  uint64_t v188 = sub_1FB430();
  sub_6DBC8(v188, (uint64_t)qword_2A5BD0);
  uint64_t v189 = sub_1FB410();
  os_log_type_t v190 = sub_1FBDA0();
  BOOL v191 = os_log_type_enabled(v189, v190);
  uint64_t v192 = v215;
  if (v191)
  {
    unint64_t v193 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v193 = 0;
    _os_log_impl(&dword_0, v189, v190, "Failed to insert genre object into database", v193, 2u);
    swift_slowDealloc();
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

LABEL_187:
}

void sub_D4488(void *a1)
{
  uint64_t v2 = v1;
  type metadata accessor for CachedPersonalizationBookMetadata();
  Class ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v5 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v6 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v7 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v26 = [v6 initWithEntityName:v7];

  uint64_t v8 = sub_1FBE20();
  uint64_t v9 = *(void *)(v2 + 40);
  if (v9 < 0)
  {
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v10 = v8 - v9;
  if (__OFSUB__(v8, v9))
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if ((v10 & 0x8000000000000000) == 0 && v10)
  {
    unint64_t v11 = NSStringFromClass(ObjCClassFromMetadata);
    sub_1FB810();

    id v12 = objc_allocWithZone((Class)NSFetchRequest);
    NSString v13 = sub_1FB7E0();
    swift_bridgeObjectRelease();
    id v14 = [v12 initWithEntityName:v13];

    sub_12124(&qword_26F5A0);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = xmmword_2083F0;
    id v16 = objc_allocWithZone((Class)NSSortDescriptor);
    NSString v17 = sub_1FB7E0();
    id v18 = [v16 initWithKey:v17 ascending:1];

    *(void *)(v15 + 32) = v18;
    sub_1FBAE0();
    sub_D9BE0(0, &qword_26F5A8);
    Class isa = sub_1FBAA0().super.isa;
    swift_bridgeObjectRelease();
    [v14 setSortDescriptors:isa];

    [v14 setFetchLimit:v10];
    unint64_t v20 = sub_1FBE30();
    unint64_t v25 = v20;
    if (v20 >> 62)
    {
      swift_bridgeObjectRetain();
      uint64_t v21 = sub_1FC270();
      swift_bridgeObjectRelease();
      if (!v21) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v21 = *(void *)((char *)&dword_10 + (v20 & 0xFFFFFFFFFFFFFF8));
      if (!v21)
      {
LABEL_15:

        swift_bridgeObjectRelease();
        goto LABEL_16;
      }
    }
    if (v21 >= 1)
    {
      for (uint64_t i = 0; i != v21; ++i)
      {
        if ((v25 & 0xC000000000000001) != 0) {
          id v23 = (id)sub_1FC090();
        }
        else {
          id v23 = *(id *)(v25 + 8 * i + 32);
        }
        BOOL v24 = v23;
        [a1 deleteObject:v23 v26];
      }
      goto LABEL_15;
    }
LABEL_21:
    __break(1u);
    return;
  }
LABEL_16:
}

void sub_D4984(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_12124(&qword_26F4F0);
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(void *)(v9 + 64);
  __chkstk_darwin(v8);
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))((char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v8);
  unint64_t v11 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = a3;
  *(void *)(v12 + 24) = a2;
  (*(void (**)(unint64_t, char *, uint64_t))(v9 + 32))(v12 + v11, (char *)aBlock - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0), v8);
  *(void *)(v12 + ((v10 + v11 + 7) & 0xFFFFFFFFFFFFFFF8)) = a4;
  aBlock[4] = sub_D83DC;
  aBlock[5] = v12;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D8;
  aBlock[3] = &unk_25DEA0;
  NSString v13 = _Block_copy(aBlock);
  swift_bridgeObjectRetain();
  id v14 = a2;
  swift_release();
  [v14 performBlock:v13];
  _Block_release(v13);
}

uint64_t sub_D4B64(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v39 = a3;
  id v43 = a2;
  uint64_t v40 = sub_1FB0E0();
  __chkstk_darwin(v40);
  id v6 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v41 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v42 = (unint64_t)(v8 + 63) >> 6;
  unint64_t v11 = (void (**)(char *, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  int64_t v12 = 0;
  if (v10) {
    goto LABEL_8;
  }
LABEL_9:
  while (2)
  {
    int64_t v18 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_40:
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      swift_once();
      goto LABEL_35;
    }
    if (v18 < v42)
    {
      unint64_t v19 = *(void *)(v41 + 8 * v18);
      ++v12;
      if (v19) {
        goto LABEL_22;
      }
      int64_t v12 = v18 + 1;
      if (v18 + 1 >= v42) {
        break;
      }
      unint64_t v19 = *(void *)(v41 + 8 * v12);
      if (v19) {
        goto LABEL_22;
      }
      int64_t v12 = v18 + 2;
      if (v18 + 2 >= v42) {
        break;
      }
      unint64_t v19 = *(void *)(v41 + 8 * v12);
      if (v19)
      {
LABEL_22:
        unint64_t v10 = (v19 - 1) & v19;
        for (unint64_t i = __clz(__rbit64(v19)) + (v12 << 6); ; unint64_t i = v16 | (v12 << 6))
        {
          uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * i);
          type metadata accessor for CachedPersonalizationBookMetadataGenre();
          Class ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
          swift_bridgeObjectRetain();
          id v23 = NSStringFromClass(ObjCClassFromMetadata);
          if (!v23)
          {
            sub_1FB810();
            id v23 = (NSString *)sub_1FB7E0();
            swift_bridgeObjectRelease();
          }
          id v24 = [self insertNewObjectForEntityForName:v23 inManagedObjectContext:v43];

          unint64_t v25 = (void *)swift_dynamicCastClass();
          if (v25) {
            break;
          }
          swift_bridgeObjectRelease();

          if (qword_26C320 != -1) {
            swift_once();
          }
          uint64_t v26 = sub_1FB430();
          sub_6DBC8(v26, (uint64_t)qword_2A5BD0);
          v15.super.Class isa = (Class)sub_1FB410();
          os_log_type_t v27 = sub_1FBDA0();
          if (!os_log_type_enabled((os_log_t)v15.super.isa, v27)) {
            goto LABEL_7;
          }
          char v28 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)char v28 = 0;
          _os_log_impl(&dword_0, (os_log_t)v15.super.isa, v27, "Failed to create genre metadata", v28, 2u);
          swift_slowDealloc();

          if (!v10) {
            goto LABEL_9;
          }
LABEL_8:
          unint64_t v16 = __clz(__rbit64(v10));
          v10 &= v10 - 1;
        }
        if (v21 < 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        NSString v13 = v25;
        [v25 setGenreID:v21];
        Class isa = sub_1FBAA0().super.isa;
        swift_bridgeObjectRelease();
        [v13 setPath:isa];

        sub_1FB0D0();
        v15.super.Class isa = sub_1FB060().super.isa;
        (*v11)(v6, v40);
        [v13 setLastAccessDate:v15.super.isa];

LABEL_7:
        if (!v10) {
          continue;
        }
        goto LABEL_8;
      }
      int64_t v20 = v18 + 3;
      if (v20 < v42)
      {
        unint64_t v19 = *(void *)(v41 + 8 * v20);
        if (v19)
        {
          int64_t v12 = v20;
          goto LABEL_22;
        }
        while (1)
        {
          int64_t v12 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_41;
          }
          if (v12 >= v42) {
            goto LABEL_31;
          }
          unint64_t v19 = *(void *)(v41 + 8 * v12);
          ++v20;
          if (v19) {
            goto LABEL_22;
          }
        }
      }
    }
    break;
  }
LABEL_31:
  swift_release();
  id v29 = v43;
  if ((objc_msgSend(v43, "hasChanges", v39) & 1) == 0) {
    goto LABEL_38;
  }
  id v44 = 0;
  if ([v29 save:&v44])
  {
    id v30 = v44;
    goto LABEL_38;
  }
  id v31 = v44;
  sub_1FAEB0();

  swift_willThrow();
  if (qword_26C320 != -1) {
    goto LABEL_42;
  }
LABEL_35:
  uint64_t v32 = sub_1FB430();
  sub_6DBC8(v32, (uint64_t)qword_2A5BD0);
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v33 = sub_1FB410();
  os_log_type_t v34 = sub_1FBDA0();
  if (os_log_type_enabled(v33, v34))
  {
    uint64_t v35 = (uint8_t *)swift_slowAlloc();
    id v36 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v35 = 138412290;
    swift_errorRetain();
    NSString v37 = (void *)_swift_stdlib_bridgeErrorToNSError();
    id v44 = v37;
    sub_1FBED0();
    *id v36 = v37;
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v33, v34, "Failed to save cache insertions %@", v35, 0xCu);
    sub_12124(&qword_26F4F8);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
LABEL_38:
  id v44 = 0;
  sub_12124(&qword_26F4F0);
  return sub_1FBBF0();
}

uint64_t sub_D5188(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_B06F4;
  v7[9] = a2;
  v7[10] = v6;
  v7[8] = a1;
  return _swift_task_switch(sub_C67FC, 0, 0);
}

uint64_t sub_D5248(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_DB910;
  v5[8] = a1;
  v5[9] = v4;
  return _swift_task_switch(sub_C6E24, 0, 0);
}

uint64_t sub_D52F8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_DB910;
  v5[8] = a1;
  v5[9] = v4;
  return _swift_task_switch(sub_C94D4, 0, 0);
}

void *sub_D53A8(void *a1)
{
  id v1 = [a1 authors];
  if (v1)
  {
    uint64_t v2 = v1;
    type metadata accessor for CachedPersonalizationBookMetadataAuthor();
    sub_DAEAC(&qword_26F638, (void (*)(uint64_t))type metadata accessor for CachedPersonalizationBookMetadataAuthor);
    sub_1FBCB0();
  }
  return _swiftEmptySetSingleton;
}

void sub_D574C(void *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [a1 seriesMembership];
  if (!v3) {
    goto LABEL_6;
  }
  uint64_t v4 = v3;
  unint64_t v5 = (unint64_t)[v3 seriesID];
  if ((v5 & 0x8000000000000000) == 0)
  {
    unint64_t v6 = v5;
    id v7 = [v4 ordinal];
    unsigned int v8 = [v4 isOrdered];
    id v9 = [v4 mappedSeriesID];
    if (v9)
    {
      unint64_t v10 = (unint64_t)[v4 mappedSeriesID];

      if ((v10 & 0x8000000000000000) != 0) {
        goto LABEL_5;
      }
    }
    else
    {

      unint64_t v10 = 0;
    }
    BOOL v11 = v9 == 0;
    uint64_t v12 = v8;
    *(void *)a2 = v7;
    *(void *)(a2 + 8) = v6;
    goto LABEL_9;
  }
LABEL_5:
  sub_1FC210();
  __break(1u);
LABEL_6:
  unint64_t v10 = 0;
  BOOL v11 = 0;
  *(void *)a2 = 0;
  *(void *)(a2 + 8) = 0;
  uint64_t v12 = 2;
LABEL_9:
  *(void *)(a2 + 16) = v12;
  *(void *)(a2 + 24) = v10;
  *(unsigned char *)(a2 + 32) = v11;
}

uint64_t sub_D5890(uint64_t a1, unint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_D5964(v12, 0, 0, 1, a1, a2);
  uint64_t v7 = v12[0];
  if (v6)
  {
    uint64_t v8 = v6;
    ObjectType = (void *)swift_getObjectType();
    v12[0] = v8;
    uint64_t v9 = *a3;
    if (*a3)
    {
      sub_560E0((uint64_t)v12, *a3);
      *a3 = v9 + 32;
    }
  }
  else
  {
    ObjectType = &type metadata for _StringGuts;
    v12[0] = a1;
    v12[1] = a2;
    uint64_t v10 = *a3;
    if (*a3)
    {
      sub_560E0((uint64_t)v12, *a3);
      *a3 = v10 + 32;
    }
    swift_bridgeObjectRetain();
  }
  sub_1264C((uint64_t)v12);
  return v7;
}

uint64_t sub_D5964(uint64_t *a1, char *__dst, uint64_t a3, char a4, uint64_t a5, unint64_t a6)
{
  if ((a6 & 0x2000000000000000) != 0)
  {
    if ((a4 & 1) == 0)
    {
      if (__dst)
      {
        uint64_t v11 = HIBYTE(a6) & 0xF;
        if (a3 - (uint64_t)__dst > v11)
        {
          __src[0] = a5;
          __src[1] = a6 & 0xFFFFFFFFFFFFFFLL;
          if (__src >= (void *)&__dst[v11] || (char *)__src + v11 <= __dst)
          {
            memcpy(__dst, __src, HIBYTE(a6) & 0xF);
            sub_1FBEE0();
            uint64_t result = 0;
            *a1 = (uint64_t)__dst;
            return result;
          }
          goto LABEL_17;
        }
      }
    }
LABEL_13:
    uint64_t result = sub_D5B20(a5, a6);
    *a1 = v12;
    return result;
  }
  if ((a6 & 0x1000000000000000) != 0) {
    goto LABEL_13;
  }
  if ((a5 & 0x1000000000000000) != 0)
  {
    uint64_t v8 = (a6 & 0xFFFFFFFFFFFFFFFLL) + 32;
    goto LABEL_5;
  }
  uint64_t v8 = sub_1FC130();
  if (!v8)
  {
    sub_1FC210();
    __break(1u);
LABEL_17:
    uint64_t result = sub_1FC2B0();
    __break(1u);
    return result;
  }
LABEL_5:
  *a1 = v8;
  if ((a6 & 0x8000000000000000) != 0) {
    return 0;
  }
  else {
    return swift_unknownObjectRetain();
  }
}

uint64_t sub_D5B20(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = (uint64_t)sub_D5BB8(a1, a2);
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_D5D30(0, *(void *)(v2 + 16) + 1, 1, (char *)v2);
  }
  unint64_t v4 = *(void *)(v2 + 16);
  unint64_t v3 = *(void *)(v2 + 24);
  if (v4 >= v3 >> 1) {
    uint64_t v2 = sub_D5D30(v3 > 1, v4 + 1, 1, (char *)v2);
  }
  *(void *)(v2 + 16) = v4 + 1;
  *(unsigned char *)(v2 + 32 + v4) = 0;
  return v2;
}

void *sub_D5BB8(uint64_t a1, unint64_t a2)
{
  if ((a2 & 0x1000000000000000) != 0) {
    goto LABEL_10;
  }
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v2 = HIBYTE(a2) & 0xF;
  }
  else {
    uint64_t v2 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (v2)
  {
    while (1)
    {
      unint64_t v3 = sub_43E08(v2, 0);
      if (v2 < 0) {
        break;
      }
      unint64_t v4 = v3;
      uint64_t v5 = sub_1FC060();
      if (v6) {
        goto LABEL_14;
      }
      if (v5 == v2) {
        return v4;
      }
      sub_1FC210();
      __break(1u);
LABEL_10:
      uint64_t v2 = sub_1FB900();
      if (!v2) {
        return _swiftEmptyArrayStorage;
      }
    }
    sub_1FC2B0();
    __break(1u);
LABEL_14:
    uint64_t result = (void *)sub_1FC210();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_D5D30(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D348);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  NSString v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_bridgeObjectRelease();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void sub_D5E84(uint64_t a1)
{
  sub_C7AAC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

void sub_D5E94(uint64_t a1)
{
  sub_C76A0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

void sub_D5E9C(uint64_t a1)
{
  sub_C98DC(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t type metadata accessor for RequestListActor.ActorType()
{
  return self;
}

uint64_t type metadata accessor for MetadataCache()
{
  return self;
}

uint64_t method lookup function for MetadataCache(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for MetadataCache);
}

uint64_t dispatch thunk of MetadataCache.__allocating_init(bookFetchService:genreFetchService:maxItemCount:subfolder:)()
{
  return (*(uint64_t (**)(void))(v0 + 176))();
}

uint64_t destroy for MetadataCache.GenreMetadataRequest()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

ValueMetadata *type metadata accessor for MetadataCache.GenreMetadataRequest()
{
  return &type metadata for MetadataCache.GenreMetadataRequest;
}

void *_s20BooksPersonalization13MetadataCacheC15MetadataRequestVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BookClusteringResult(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *assignWithTake for BookClusteringResult(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for MetadataCache.MetadataRequest()
{
  return &type metadata for MetadataCache.MetadataRequest;
}

uint64_t sub_D6064()
{
  uint64_t v1 = sub_12124(&qword_26F4B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_release();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_D6144()
{
  uint64_t v1 = *(void *)(sub_12124(&qword_26F4B0) - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = (void *)v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_C9AB8(v2, v3, v4, v5);
}

uint64_t sub_D61B0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_D61C0()
{
  return swift_release();
}

uint64_t sub_D61C8(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  char v56 = a5;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = -v6;
  uint64_t v49 = a1;
  uint64_t v50 = a1 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  uint64_t v51 = v7;
  uint64_t v52 = 0;
  uint64_t v53 = v10 & v8;
  uint64_t v54 = a2;
  uint64_t v55 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_749C0((uint64_t)&v38);
  uint64_t v11 = v40;
  if (v40)
  {
    while (1)
    {
      uint64_t v14 = v38;
      char v15 = v39;
      uint64_t v16 = v41;
      uint64_t v17 = v42;
      char v32 = v43;
      uint64_t v33 = v44;
      uint64_t v34 = v45;
      uint64_t v35 = v46;
      uint64_t v36 = v47;
      char v37 = v48;
      int64_t v18 = (void *)*v56;
      unint64_t v20 = sub_56168(v38);
      uint64_t v21 = v18[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t v23 = v21 + v22;
      if (__OFADD__(v21, v22)) {
        break;
      }
      char v24 = v19;
      if (v18[3] >= v23)
      {
        if ((a4 & 1) == 0) {
          sub_121E44();
        }
      }
      else
      {
        sub_11A550(v23, a4 & 1);
        uint64_t v25 = sub_56168(v14);
        if ((v24 & 1) != (v26 & 1)) {
          goto LABEL_19;
        }
        unint64_t v20 = v25;
      }
      os_log_type_t v27 = (void *)*v56;
      if (v24)
      {
        uint64_t v13 = v27[7] + 80 * v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(unsigned char *)uint64_t v13 = v15;
        *(void *)(v13 + 8) = v11;
        *(void *)(v13 + 16) = v16;
        *(void *)(v13 + 24) = v17;
        *(unsigned char *)(v13 + 32) = v32;
        *(void *)(v13 + 40) = v33;
        *(void *)(v13 + 48) = v34;
        *(void *)(v13 + 56) = v35;
        *(void *)(v13 + 64) = v36;
        *(unsigned char *)(v13 + 72) = v37;
      }
      else
      {
        v27[(v20 >> 6) + 8] |= 1 << v20;
        *(void *)(v27[6] + 8 * v20) = v14;
        uint64_t v28 = v27[7] + 80 * v20;
        *(unsigned char *)uint64_t v28 = v15;
        *(void *)(v28 + 8) = v11;
        *(void *)(v28 + 16) = v16;
        *(void *)(v28 + 24) = v17;
        *(unsigned char *)(v28 + 32) = v32;
        *(void *)(v28 + 40) = v33;
        *(void *)(v28 + 48) = v34;
        *(void *)(v28 + 56) = v35;
        *(void *)(v28 + 64) = v36;
        *(unsigned char *)(v28 + 72) = v37;
        uint64_t v29 = v27[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_18;
        }
        v27[2] = v31;
      }
      sub_749C0((uint64_t)&v38);
      uint64_t v11 = v40;
      a4 = 1;
      if (!v40) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1FC770();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1226C();
    return swift_release();
  }
  return result;
}

uint64_t sub_D6460(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v7 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = ~v7;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v10 = -v7;
  uint64_t v50 = a1;
  uint64_t v51 = a1 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  uint64_t v52 = v8;
  uint64_t v53 = 0;
  uint64_t v54 = v11 & v9;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_74BBC(&v47);
  uint64_t v12 = v49;
  if (!v49) {
    goto LABEL_26;
  }
  uint64_t v13 = v47;
  uint64_t v46 = v48;
  uint64_t v14 = (void *)*a5;
  unint64_t v16 = sub_56168(v47);
  uint64_t v17 = v14[2];
  BOOL v18 = (v15 & 1) == 0;
  uint64_t v19 = v17 + v18;
  if (__OFADD__(v17, v18))
  {
LABEL_27:
    __break(1u);
    goto LABEL_28;
  }
  char v20 = v15;
  if (v14[3] >= v19)
  {
    if (a4)
    {
      uint64_t v23 = (void *)*a5;
      if (v15) {
        goto LABEL_12;
      }
    }
    else
    {
      sub_122030();
      uint64_t v23 = (void *)*a5;
      if (v20) {
        goto LABEL_12;
      }
    }
LABEL_14:
    v23[(v16 >> 6) + 8] |= 1 << v16;
    *(void *)(v23[6] + 8 * v16) = v13;
    uint64_t v25 = (void *)(v23[7] + 16 * v16);
    *uint64_t v25 = v46;
    v25[1] = v12;
    uint64_t v26 = v23[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27)
    {
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
    v23[2] = v28;
LABEL_16:
    sub_74BBC(&v47);
    for (uint64_t i = v49; v49; uint64_t i = v49)
    {
      uint64_t v31 = v47;
      uint64_t v32 = v48;
      uint64_t v33 = (void *)*a5;
      unint64_t v34 = sub_56168(v47);
      uint64_t v36 = v33[2];
      BOOL v37 = (v35 & 1) == 0;
      BOOL v27 = __OFADD__(v36, v37);
      uint64_t v38 = v36 + v37;
      if (v27) {
        goto LABEL_27;
      }
      char v39 = v35;
      if (v33[3] < v38)
      {
        sub_11A870(v38, 1);
        unint64_t v34 = sub_56168(v31);
        if ((v39 & 1) != (v40 & 1)) {
          goto LABEL_29;
        }
      }
      uint64_t v41 = (void *)*a5;
      if (v39)
      {
        BOOL v30 = (void *)(v41[7] + 16 * v34);
        swift_bridgeObjectRelease();
        void *v30 = v32;
        v30[1] = i;
      }
      else
      {
        v41[(v34 >> 6) + 8] |= 1 << v34;
        *(void *)(v41[6] + 8 * v34) = v31;
        uint64_t v42 = (void *)(v41[7] + 16 * v34);
        *uint64_t v42 = v32;
        v42[1] = i;
        uint64_t v43 = v41[2];
        BOOL v27 = __OFADD__(v43, 1);
        uint64_t v44 = v43 + 1;
        if (v27) {
          goto LABEL_28;
        }
        v41[2] = v44;
      }
      sub_74BBC(&v47);
    }
LABEL_26:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1226C();
    return swift_release();
  }
  sub_11A870(v19, a4 & 1);
  uint64_t v21 = sub_56168(v13);
  if ((v20 & 1) == (v22 & 1))
  {
    unint64_t v16 = v21;
    uint64_t v23 = (void *)*a5;
    if ((v20 & 1) == 0) {
      goto LABEL_14;
    }
LABEL_12:
    char v24 = (void *)(v23[7] + 16 * v16);
    swift_bridgeObjectRelease();
    *char v24 = v46;
    v24[1] = v12;
    goto LABEL_16;
  }
LABEL_29:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

Swift::Int sub_D6734(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v78 = 0;
      uint64_t v79 = *v2;
      for (uint64_t i = 1; i != v3; ++i)
      {
        unint64_t v81 = *(void *)(v79 + 8 * i);
        uint64_t v82 = v78;
        do
        {
          unint64_t v83 = *(void *)(v79 + v82);
          if (v81 >= v83) {
            break;
          }
          if (!v79) {
            goto LABEL_141;
          }
          *(void *)(v79 + v82 + 8) = v83;
          *(void *)(v79 + v82) = v81;
          v82 -= 8;
        }
        while (v82 != -8);
        v78 += 8;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v95 = result;
  Swift::Int v96 = v3;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v94 = v8;
      if (v12 >= 2)
      {
        uint64_t v84 = *v2;
        do
        {
          unint64_t v85 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_132;
          }
          if (!v84) {
            goto LABEL_145;
          }
          uint64_t v86 = v11;
          uint64_t v87 = v11 + 32;
          uint64_t v88 = *(void *)&v11[16 * v85 + 32];
          uint64_t v89 = *(void *)&v11[16 * v12 + 24];
          sub_D6DC0((char *)(v84 + 8 * v88), (char *)(v84 + 8 * *(void *)&v87[16 * v12 - 16]), v84 + 8 * v89, __dst);
          if (v1) {
            break;
          }
          if (v89 < v88) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v86 = sub_70B24((uint64_t)v86);
          }
          if (v85 >= *((void *)v86 + 2)) {
            goto LABEL_134;
          }
          char v90 = &v86[16 * v85 + 32];
          *(void *)char v90 = v88;
          *((void *)v90 + 1) = v89;
          unint64_t v91 = *((void *)v86 + 2);
          if (v12 > v91) {
            goto LABEL_135;
          }
          memmove(&v86[16 * v12 + 16], &v86[16 * v12 + 32], 16 * (v91 - v12));
          uint64_t v11 = v86;
          *((void *)v86 + 2) = v91 - 1;
          unint64_t v12 = v91 - 1;
        }
        while (v91 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v94[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v94 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    Swift::Int v3 = v96;
    uint64_t v94 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *v2;
  uint64_t v92 = v2;
  uint64_t v93 = *v2 - 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v97 = *v2;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 < v3)
    {
      unint64_t v14 = *(void *)(v10 + 8 * v9);
      unint64_t v15 = *(void *)(v10 + 8 * v13);
      Swift::Int v9 = v13 + 2;
      if (v13 + 2 < v3)
      {
        unint64_t v16 = v14;
        while (1)
        {
          unint64_t v17 = *(void *)(v10 + 8 * v9);
          if (v14 < v15 == v17 >= v16) {
            break;
          }
          ++v9;
          unint64_t v16 = v17;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v15)
      {
        if (v9 < v13) {
          goto LABEL_138;
        }
        if (v13 < v9)
        {
          Swift::Int v18 = v9 - 1;
          Swift::Int v19 = v13;
          do
          {
            if (v19 != v18)
            {
              if (!v10) {
                goto LABEL_144;
              }
              uint64_t v20 = *(void *)(v10 + 8 * v19);
              *(void *)(v10 + 8 * v19) = *(void *)(v10 + 8 * v18);
              *(void *)(v10 + 8 * v18) = v20;
            }
            BOOL v59 = ++v19 < v18--;
          }
          while (v59);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_47;
    }
    if (__OFSUB__(v9, v13)) {
      goto LABEL_136;
    }
    if (v9 - v13 >= v95) {
      goto LABEL_47;
    }
    Swift::Int v21 = v13 + v95;
    if (__OFADD__(v13, v95)) {
      goto LABEL_139;
    }
    if (v21 >= v3) {
      Swift::Int v21 = v3;
    }
    if (v21 < v13) {
      break;
    }
    if (v9 != v21)
    {
      char v22 = (unint64_t *)(v93 + 8 * v9);
      do
      {
        unint64_t v23 = *(void *)(v10 + 8 * v9);
        Swift::Int v24 = v13;
        uint64_t v25 = v22;
        do
        {
          unint64_t v26 = *v25;
          if (v23 >= *v25) {
            break;
          }
          if (!v10) {
            goto LABEL_142;
          }
          *uint64_t v25 = v23;
          v25[1] = v26;
          --v25;
          ++v24;
        }
        while (v9 != v24);
        ++v9;
        ++v22;
      }
      while (v9 != v21);
      Swift::Int v9 = v21;
    }
LABEL_47:
    if (v9 < v13) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_7004C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v28 = *((void *)v11 + 2);
    unint64_t v27 = *((void *)v11 + 3);
    unint64_t v12 = v28 + 1;
    uint64_t v10 = v97;
    if (v28 >= v27 >> 1)
    {
      unint64_t v77 = sub_7004C((char *)(v27 > 1), v28 + 1, 1, v11);
      uint64_t v10 = v97;
      uint64_t v11 = v77;
    }
    *((void *)v11 + 2) = v12;
    uint64_t v29 = v11 + 32;
    BOOL v30 = &v11[16 * v28 + 32];
    *(void *)BOOL v30 = v13;
    *((void *)v30 + 1) = v9;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v36 = &v29[16 * v12];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_120;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_121;
          }
          unint64_t v43 = v12 - 2;
          uint64_t v44 = &v29[16 * v12 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_123;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_126;
          }
          if (v48 >= v39)
          {
            uint64_t v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_130;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_84;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v60 = *((void *)v11 + 4);
            uint64_t v61 = *((void *)v11 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_78;
          }
          uint64_t v33 = *((void *)v11 + 4);
          uint64_t v32 = *((void *)v11 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_122;
        }
        unint64_t v43 = v12 - 2;
        uint64_t v49 = &v29[16 * v12 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_125;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_128;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_129;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_84:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_86;
        }
LABEL_78:
        if (v54) {
          goto LABEL_124;
        }
        char v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_127;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_86:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v12)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v10) {
          goto LABEL_143;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        int64_t v73 = v29;
        unint64_t v74 = &v29[16 * v31];
        uint64_t v75 = *((void *)v74 + 1);
        sub_D6DC0((char *)(v10 + 8 * *(void *)v71), (char *)(v10 + 8 * *(void *)v74), v10 + 8 * v75, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v75 < v72) {
          goto LABEL_117;
        }
        if (v31 > *((void *)v11 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v73[16 * v70 + 8] = v75;
        unint64_t v76 = *((void *)v11 + 2);
        if (v31 >= v76) {
          goto LABEL_119;
        }
        unint64_t v12 = v76 - 1;
        memmove(v74, v74 + 16, 16 * (v76 - 1 - v31));
        uint64_t v29 = v73;
        *((void *)v11 + 2) = v76 - 1;
        uint64_t v10 = v97;
        if (v76 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v96;
    if (v9 >= v96)
    {
      uint64_t v8 = v94;
      uint64_t v2 = v92;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_D6DC0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 7;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 3;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 7;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 3;
  Swift::Int v24 = __src;
  unint64_t v23 = __dst;
  if (v10 >= v12 >> 3)
  {
    if (v11 >= -7)
    {
      if (__dst != a2 || &a2[8 * v13] <= __dst) {
        memmove(__dst, a2, 8 * v13);
      }
      unint64_t v16 = &v4[8 * v13];
      char v22 = v16;
      Swift::Int v24 = v6;
      if (v7 < v6 && v11 >= 8)
      {
        unint64_t v17 = (unint64_t *)(a3 - 8);
        while (1)
        {
          Swift::Int v18 = (char *)(v17 + 1);
          Swift::Int v19 = v6 - 8;
          unint64_t v20 = *((void *)v6 - 1);
          if (*((void *)v16 - 1) >= v20)
          {
            char v22 = v16 - 8;
            if (v18 < v16 || v17 >= (unint64_t *)v16 || v18 != v16) {
              *unint64_t v17 = *((void *)v16 - 1);
            }
            v16 -= 8;
            if (v6 <= v7) {
              goto LABEL_42;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= (unint64_t *)v6) {
              *unint64_t v17 = v20;
            }
            Swift::Int v24 = v6 - 8;
            v6 -= 8;
            if (v19 <= v7) {
              goto LABEL_42;
            }
          }
          --v17;
          if (v16 <= v4) {
            goto LABEL_42;
          }
        }
      }
      goto LABEL_42;
    }
  }
  else if (v8 >= -7)
  {
    if (__dst != __src || &__src[8 * v10] <= __dst) {
      memmove(__dst, __src, 8 * v10);
    }
    unint64_t v14 = &v4[8 * v10];
    char v22 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 8)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            *(void *)uint64_t v7 = *(void *)v4;
          }
          v4 += 8;
          unint64_t v23 = v4;
          unint64_t v15 = v6;
        }
        else
        {
          unint64_t v15 = v6 + 8;
          if (v7 < v6 || v7 >= v15 || v7 != v6) {
            *(void *)uint64_t v7 = *(void *)v6;
          }
        }
        v7 += 8;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v15;
      }
      while ((unint64_t)v15 < a3);
      Swift::Int v24 = v7;
    }
LABEL_42:
    sub_704E8((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_D7030(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_D71B8((unint64_t *)((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0)), v5, v3, a2);
    swift_release();
  }
  else
  {
    int64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_D71B8((unint64_t *)v8, v5, v3, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_D71B8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a3 + 16);
  uint64_t v6 = 0;
  if (v5)
  {
    uint64_t v7 = 0;
    uint64_t v8 = a4 + 56;
    uint64_t v9 = a3 + 32;
    uint64_t v10 = ~(-1 << *(unsigned char *)(a4 + 32));
    do
    {
      uint64_t v15 = *(void *)(v9 + 8 * v7);
      uint64_t v16 = sub_1FC7D0();
      uint64_t v17 = v16 & v10;
      unint64_t v11 = (v16 & (unint64_t)v10) >> 6;
      uint64_t v12 = 1 << (v16 & v10);
      if ((v12 & *(void *)(v8 + 8 * v11)) != 0)
      {
        uint64_t v18 = *(void *)(a4 + 48);
        if (*(void *)(v18 + 8 * v17) == v15)
        {
LABEL_4:
          uint64_t v13 = v11;
          unint64_t v14 = a1[v11];
          a1[v13] = v12 | v14;
          if ((v12 & v14) == 0 && __OFADD__(v6++, 1))
          {
            __break(1u);
            break;
          }
        }
        else
        {
          for (uint64_t i = v17 + 1; ; uint64_t i = v20 + 1)
          {
            unint64_t v20 = i & v10;
            if (((*(void *)(v8 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              break;
            }
            if (*(void *)(v18 + 8 * v20) == v15)
            {
              unint64_t v11 = v20 >> 6;
              uint64_t v12 = 1 << v20;
              goto LABEL_4;
            }
          }
        }
      }
      ++v7;
    }
    while (v7 != v5);
  }
  swift_retain();
  return sub_105C18(a1, a2, v6, a4);
}

uint64_t sub_D7304(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  uint64_t v9 = (unint64_t *)(a1 + 72);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

uint64_t sub_D738C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v5 = a1[4];
  char v6 = *((unsigned char *)a1 + 40);
  char v7 = *((unsigned char *)a1 + 80);
  *(unsigned char *)(a2 + 8) = *((unsigned char *)a1 + 8);
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  *(unsigned char *)(a2 + 40) = v6;
  long long v8 = *((_OWORD *)a1 + 4);
  *(_OWORD *)(a2 + 48) = *((_OWORD *)a1 + 3);
  *(_OWORD *)(a2 + 64) = v8;
  *(unsigned char *)(a2 + 80) = v7;
  *(void *)a2 = v2;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_D73FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(_OWORD *)a2 = *(_OWORD *)a1;
  return swift_bridgeObjectRetain();
}

uint64_t sub_D7414(void *a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (!(a2 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_31:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
LABEL_30:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1FC270();
  if (!v4) {
    goto LABEL_31;
  }
LABEL_3:
  unint64_t v33 = v2;
  unint64_t v34 = v2 & 0xC000000000000001;
  uint64_t v5 = 4;
  uint64_t v32 = v4;
  while (1)
  {
    if (v34) {
      id v8 = (id)sub_1FC090();
    }
    else {
      id v8 = *(id *)(v2 + 8 * v5);
    }
    uint64_t v9 = v8;
    uint64_t v7 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
      goto LABEL_30;
    }
    unint64_t v10 = (unint64_t)[v8 assetID];
    if ((v10 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v11 = v10;
    unint64_t v43 = v9;
    sub_C8660(v9, (uint64_t)&v44);
    uint64_t v12 = v45;
    if (v45)
    {
      unint64_t v2 = v44;
      uint64_t v35 = v46;
      uint64_t v36 = v47;
      char v37 = v48;
      uint64_t v38 = v49;
      uint64_t v39 = v50;
      uint64_t v40 = v51;
      uint64_t v41 = v52;
      char v42 = v53;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v54 = a1;
      unint64_t v15 = sub_56168(v11);
      uint64_t v16 = a1[2];
      BOOL v17 = (v14 & 1) == 0;
      uint64_t v18 = v16 + v17;
      if (__OFADD__(v16, v17)) {
        goto LABEL_28;
      }
      char v19 = v14;
      if (a1[3] >= v18)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_121E44();
        }
      }
      else
      {
        sub_11A550(v18, isUniquelyReferenced_nonNull_native);
        uint64_t v20 = sub_56168(v11);
        if ((v19 & 1) != (v21 & 1)) {
          goto LABEL_33;
        }
        unint64_t v15 = v20;
      }
      char v26 = v2 & 1;
      a1 = v54;
      if (v19)
      {
        uint64_t v6 = v54[7] + 80 * v15;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(unsigned char *)uint64_t v6 = v26;
        *(void *)(v6 + 8) = v12;
        *(void *)(v6 + 16) = v35;
        *(void *)(v6 + 24) = v36;
        *(unsigned char *)(v6 + 32) = v37 & 1;
        *(void *)(v6 + 40) = v38;
        *(void *)(v6 + 48) = v39;
        *(void *)(v6 + 56) = v40;
        *(void *)(v6 + 64) = v41;
        *(unsigned char *)(v6 + 72) = v42;
      }
      else
      {
        v54[(v15 >> 6) + 8] |= 1 << v15;
        *(void *)(a1[6] + 8 * v15) = v11;
        uint64_t v27 = a1[7] + 80 * v15;
        *(unsigned char *)uint64_t v27 = v26;
        *(void *)(v27 + 8) = v12;
        *(void *)(v27 + 16) = v35;
        *(void *)(v27 + 24) = v36;
        *(unsigned char *)(v27 + 32) = v37 & 1;
        *(void *)(v27 + 40) = v38;
        *(void *)(v27 + 48) = v39;
        *(void *)(v27 + 56) = v40;
        *(void *)(v27 + 64) = v41;
        *(unsigned char *)(v27 + 72) = v42;
        uint64_t v28 = a1[2];
        BOOL v29 = __OFADD__(v28, 1);
        uint64_t v30 = v28 + 1;
        if (v29) {
          goto LABEL_29;
        }
        a1[2] = v30;
      }

      swift_bridgeObjectRelease();
      uint64_t v4 = v32;
      unint64_t v2 = v33;
      uint64_t v7 = v5 - 3;
    }
    else
    {
      uint64_t v22 = sub_56168(v11);
      if (v23)
      {
        unint64_t v24 = v22;
        char v25 = swift_isUniquelyReferenced_nonNull_native();
        char v54 = a1;
        if ((v25 & 1) == 0)
        {
          sub_121E44();
          a1 = v54;
        }
        sub_14C9D8(v24, (uint64_t)a1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
      }
    }
    ++v5;
    if (v7 == v4) {
      goto LABEL_31;
    }
  }
  sub_1FC210();
  __break(1u);
LABEL_33:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_D77E8(uint64_t a1, unint64_t a2)
{
  if (!(a2 >> 62))
  {
    uint64_t v4 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
    if (v4) {
      goto LABEL_3;
    }
LABEL_22:
    swift_bridgeObjectRelease();
    return a1;
  }
LABEL_21:
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1FC270();
  if (!v4) {
    goto LABEL_22;
  }
LABEL_3:
  uint64_t v5 = 4;
  p_base_props = &SeedBasedSuggestionsService.base_props;
  while (1)
  {
    if ((a2 & 0xC000000000000001) != 0) {
      id v7 = (id)sub_1FC090();
    }
    else {
      id v7 = *(id *)(a2 + 8 * v5);
    }
    id v8 = v7;
    uint64_t v9 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
      __break(1u);
      __break(1u);
      goto LABEL_21;
    }
    unint64_t v10 = [v7 p_base_props[270]];
    if ((v10 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v11 = v10;
    id v12 = [v8 path];
    if (v12)
    {
      uint64_t v13 = v12;
      self;
      if (swift_dynamicCastObjCClass()) {
        sub_1FBAB0();
      }
    }
    uint64_t v14 = sub_56168(v11);
    if (v15)
    {
      unint64_t v16 = v14;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_122030();
      }
      sub_14CB88(v16, a1);

      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      p_base_props = (__objc2_prop_list **)(&SeedBasedSuggestionsService + 64);
    }
    else
    {
    }
    ++v5;
    if (v9 == v4) {
      goto LABEL_22;
    }
  }
  sub_1FC210();
  __break(1u);
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_D7B34(void *a1)
{
  uint64_t v2 = sub_1FB0E0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB080();
  type metadata accessor for CachedPersonalizationBookMetadataGenre();
  Class ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v7 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v8 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v9 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v10 = [v8 initWithEntityName:v9];

  sub_12124(&qword_26F4B8);
  uint64_t v11 = swift_allocObject();
  *(_OWORD *)(v11 + 16) = xmmword_2026C0;
  *(void *)(v11 + 56) = &type metadata for String;
  strcpy((char *)(v11 + 32), "lastAccessDate");
  *(unsigned char *)(v11 + 47) = -18;
  *(void *)(v11 + 88) = v2;
  id v12 = sub_51BD4((uint64_t *)(v11 + 64));
  (*(void (**)(uint64_t *, char *, uint64_t))(v3 + 16))(v12, v5, v2);
  *(void *)(v11 + 120) = &type metadata for String;
  strcpy((char *)(v11 + 96), "lastAccessDate");
  *(unsigned char *)(v11 + 111) = -18;
  NSString v13 = sub_1FB7E0();
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  id v15 = [self predicateWithFormat:v13 argumentArray:isa];

  [v10 setPredicate:v15];
  unint64_t v16 = sub_1FBE30();
  unint64_t v17 = v16;
  uint64_t v23 = v2;
  if (!(v16 >> 62))
  {
    uint64_t v18 = *(void *)((char *)&dword_10 + (v16 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v18) {
      goto LABEL_3;
    }
LABEL_10:

    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v23);
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1FC270();
  uint64_t v18 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v18 >= 1)
  {
    for (uint64_t i = 0; i != v18; ++i)
    {
      if ((v17 & 0xC000000000000001) != 0) {
        id v21 = (id)sub_1FC090();
      }
      else {
        id v21 = *(id *)(v17 + 8 * i + 32);
      }
      uint64_t v22 = v21;
      [a1 deleteObject:v21 v23];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_D8030()
{
  uint64_t v1 = sub_12124(&qword_26F4B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 64) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D8120(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_12124(&qword_26F4B0) - 8);
  uint64_t v5 = v1[2];
  uint64_t v6 = v1[3];
  id v7 = (void *)v1[4];
  uint64_t v8 = v1[5];
  uint64_t v9 = v1[6];
  uint64_t v10 = v1[7];
  uint64_t v11 = (uint64_t)v1 + ((*(unsigned __int8 *)(v4 + 80) + 64) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
  id v12 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v12;
  void *v12 = v2;
  v12[1] = sub_98BD4;
  return sub_CA0B0(a1, v5, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_D8238(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_98BD4;
  return sub_CF940(a1, a2, v7, v6);
}

void sub_D82EC(uint64_t a1)
{
  sub_D4984(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32));
}

uint64_t sub_D82F8()
{
  uint64_t v1 = sub_12124(&qword_26F4F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_bridgeObjectRelease();

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

uint64_t sub_D83DC()
{
  uint64_t v1 = *(void *)(sub_12124(&qword_26F4F0) - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = *(void **)(v0 + 24);
  uint64_t v4 = v0 + ((*(unsigned __int8 *)(v1 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  return sub_D4B64(v2, v3, v4);
}

uint64_t sub_D8474(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1FB110() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  unint64_t v7 = (*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = v1 + ((v5 + v8 + 8) & ~v5);
  id v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *id v15 = v2;
  v15[1] = sub_98BD4;
  return sub_D2510(a1, v9, v10, v12, v11, v13, v14);
}

uint64_t type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord(uint64_t a1)
{
  return sub_DA140(a1, (uint64_t *)&unk_26F6A8);
}

uint64_t sub_D85E4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, unsigned char *))
{
  char v25 = (unint64_t *)result;
  uint64_t v26 = 0;
  int64_t v6 = 0;
  uint64_t v27 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v36 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v10 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v11 = v10 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v20 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v20 >= v36) {
      return sub_73250(v25, a2, v26, a3);
    }
    unint64_t v21 = *(void *)(v27 + 8 * v20);
    ++v6;
    if (!v21)
    {
      int64_t v6 = v20 + 1;
      if (v20 + 1 >= v36) {
        return sub_73250(v25, a2, v26, a3);
      }
      unint64_t v21 = *(void *)(v27 + 8 * v6);
      if (!v21)
      {
        int64_t v6 = v20 + 2;
        if (v20 + 2 >= v36) {
          return sub_73250(v25, a2, v26, a3);
        }
        unint64_t v21 = *(void *)(v27 + 8 * v6);
        if (!v21) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v21 - 1) & v21;
    unint64_t v11 = __clz(__rbit64(v21)) + (v6 << 6);
LABEL_5:
    uint64_t v12 = *(void *)(*(void *)(a3 + 48) + 8 * v11);
    uint64_t v13 = *(void *)(a3 + 56) + 80 * v11;
    uint64_t v14 = *(void *)(v13 + 8);
    uint64_t v15 = *(void *)(v13 + 16);
    uint64_t v16 = *(void *)(v13 + 24);
    char v17 = *(unsigned char *)(v13 + 32);
    char v18 = *(unsigned char *)(v13 + 72);
    v28[0] = *(unsigned char *)v13;
    uint64_t v29 = v14;
    uint64_t v30 = v15;
    uint64_t v31 = v16;
    char v32 = v17;
    long long v33 = *(_OWORD *)(v13 + 40);
    long long v34 = *(_OWORD *)(v13 + 56);
    char v35 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v19 = a4(v12, v28);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
    if (v19)
    {
      *(unint64_t *)((char *)v25 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      if (__OFADD__(v26++, 1))
      {
        __break(1u);
        return sub_73250(v25, a2, v26, a3);
      }
    }
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36) {
    return sub_73250(v25, a2, v26, a3);
  }
  unint64_t v21 = *(void *)(v27 + 8 * v22);
  if (v21)
  {
    int64_t v6 = v22;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v6 >= v36) {
      return sub_73250(v25, a2, v26, a3);
    }
    unint64_t v21 = *(void *)(v27 + 8 * v6);
    ++v22;
    if (v21) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_D8820(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = a4;
  uint64_t v15 = sub_12124(&qword_26F588);
  __chkstk_darwin(v15);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_D8CE0(v8, (uint64_t)sub_DAE48, (uint64_t)v17, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_D85E4);
  swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_1FC050(59);
  v22._object = (void *)0x8000000000218620;
  v22._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v22);
  uint64_t v10 = sub_1FB110();
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v23._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 0x69796C7070757320;
  v24._object = (void *)0xEF2073444920676ELL;
  sub_1FB8F0(v24);
  swift_retain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_4ABEC(v11);
  swift_release();
  unint64_t v21 = v12;
  sub_C43F4((uint64_t *)&v21);
  if (v4)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    v25._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v25);
    swift_release();
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0xD000000000000016;
    v26._object = (void *)0x80000000002186F0;
    sub_1FB8F0(v26);
    v27._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord(0);
    uint64_t v13 = *(int *)(v15 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v16, v10);
    *(void *)&v7[v13] = v9;
    sub_12124(&qword_26F610);
    return sub_1FBBF0();
  }
  return result;
}

uint64_t sub_D8B04(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(uint64_t, void *))
{
  Swift::String v22 = (unint64_t *)result;
  uint64_t v23 = 0;
  int64_t v6 = 0;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (1)
  {
    if (v9)
    {
      unint64_t v11 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v12 = v11 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v17 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v17 >= v10) {
      return sub_73544(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v25 + 8 * v17);
    ++v6;
    if (!v18)
    {
      int64_t v6 = v17 + 1;
      if (v17 + 1 >= v10) {
        return sub_73544(v22, a2, v23, a3);
      }
      unint64_t v18 = *(void *)(v25 + 8 * v6);
      if (!v18)
      {
        int64_t v6 = v17 + 2;
        if (v17 + 2 >= v10) {
          return sub_73544(v22, a2, v23, a3);
        }
        unint64_t v18 = *(void *)(v25 + 8 * v6);
        if (!v18) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v12 = __clz(__rbit64(v18)) + (v6 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(*(void *)(a3 + 48) + 8 * v12);
    uint64_t v14 = (void *)(*(void *)(a3 + 56) + 16 * v12);
    uint64_t v15 = v14[1];
    v24[0] = *v14;
    v24[1] = v15;
    swift_bridgeObjectRetain();
    char v16 = a4(v13, v24);
    uint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
      *(unint64_t *)((char *)v22 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      if (__OFADD__(v23++, 1))
      {
        __break(1u);
        return sub_73544(v22, a2, v23, a3);
      }
    }
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v10) {
    return sub_73544(v22, a2, v23, a3);
  }
  unint64_t v18 = *(void *)(v25 + 8 * v19);
  if (v18)
  {
    int64_t v6 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v6 >= v10) {
      return sub_73544(v22, a2, v23, a3);
    }
    unint64_t v18 = *(void *)(v25 + 8 * v6);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_D8CE0(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t a3, uint64_t (*a4)(char *, unint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v6 = v4;
  uint64_t v9 = isStackAllocationSafe;
  char v10 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v11 = (unint64_t)((1 << v10) + 63) >> 6;
  size_t v12 = 8 * v11;
  if ((v10 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v12);
    uint64_t v13 = a4((char *)&v16 - ((v12 + 15) & 0x3FFFFFFFFFFFFFF0), v11, v9, a2, a3);
    if (v4) {
      swift_willThrow();
    }
    else {
      return v13;
    }
  }
  else
  {
    uint64_t v14 = (void *)swift_slowAlloc();
    bzero(v14, v12);
    uint64_t v6 = a4((char *)v14, v11, v9, a2, a3);
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_D8E6C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v16 = a4;
  uint64_t v15 = sub_12124(&qword_26F4D8);
  __chkstk_darwin(v15);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = a1;
  uint64_t v8 = swift_bridgeObjectRetain();
  uint64_t v9 = sub_D8CE0(v8, (uint64_t)sub_D9474, (uint64_t)v17, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t, uint64_t))sub_D8B04);
  swift_bridgeObjectRelease();
  uint64_t v19 = 0;
  unint64_t v20 = 0xE000000000000000;
  sub_1FC050(59);
  v22._object = (void *)0x8000000000218620;
  v22._uint64_t countAndFlagsBits = 0xD000000000000010;
  sub_1FB8F0(v22);
  uint64_t v10 = sub_1FB110();
  sub_DAEAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
  v23._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v23);
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = 0x69796C7070757320;
  v24._object = (void *)0xEF2073444920676ELL;
  sub_1FB8F0(v24);
  swift_retain();
  uint64_t v11 = swift_bridgeObjectRetain();
  size_t v12 = sub_4ABEC(v11);
  swift_release();
  unint64_t v21 = v12;
  sub_C43F4((uint64_t *)&v21);
  if (v4)
  {
    uint64_t result = swift_release();
    __break(1u);
  }
  else
  {
    swift_release();
    v25._uint64_t countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v25);
    swift_release();
    swift_bridgeObjectRelease();
    v26._uint64_t countAndFlagsBits = 0xD000000000000016;
    v26._object = (void *)0x80000000002186F0;
    sub_1FB8F0(v26);
    v27._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord(0);
    uint64_t v13 = *(int *)(v15 + 48);
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(v7, v16, v10);
    *(void *)&v7[v13] = v9;
    sub_12124(&qword_26F548);
    return sub_1FBBF0();
  }
  return result;
}

uint64_t sub_D9154(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1FB110() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = (v7 + v5 + v6) & ~v5;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = v1 + v6;
  uint64_t v11 = v1 + v8;
  uint64_t v12 = *(void *)(v1 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[5] = v11;
  v13[6] = v12;
  v13[3] = v9;
  v13[4] = v10;
  v13[1] = sub_98BD4;
  v13[2] = a1;
  return _swift_task_switch(sub_D1400, 0, 0);
}

uint64_t sub_D9290(uint64_t a1)
{
  return sub_D1638(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), &qword_26F548, (uint64_t)&unk_25DF28, (uint64_t)&unk_26F558);
}

uint64_t sub_D92D4()
{
  return sub_DA6F4(&qword_26F548);
}

uint64_t sub_D92E0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1FB110() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (v8 + v6 + v7) & ~v6;
  unint64_t v10 = (v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(sub_12124(&qword_26F548) - 8) + 80);
  uint64_t v12 = v11 + v10 + 8;
  uint64_t v13 = v1[2];
  uint64_t v14 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = (uint64_t)v1 + v7;
  uint64_t v17 = (uint64_t)v1 + v9;
  uint64_t v18 = *(void *)((char *)v1 + v10);
  uint64_t v19 = (uint64_t)v1 + (v12 & ~v11);
  unint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v20;
  *unint64_t v20 = v3;
  v20[1] = sub_98BD4;
  return sub_D19DC(a1, v13, v14, v15, v16, v17, v18, v19);
}

BOOL sub_D9474(uint64_t a1, uint64_t a2)
{
  return sub_DAE60(a1, a2, type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord);
}

uint64_t sub_D948C()
{
  uint64_t v1 = sub_12124(&qword_26F560);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

void sub_D9568()
{
  sub_12124(&qword_26F560);

  sub_C7894();
}

uint64_t sub_D95FC()
{
  uint64_t v1 = sub_12124(&qword_26F568);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 56) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

void sub_D96EC()
{
  uint64_t v1 = *(void *)(sub_12124(&qword_26F568) - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (void *)v0[5];
  uint64_t v6 = v0[6];
  uint64_t v7 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 56) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_C7CA8(v2, v3, v4, v5, v6, v7);
}

uint64_t sub_D975C()
{
  uint64_t v1 = sub_12124(&qword_26F568);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 80) & ~v3;
  uint64_t v5 = v4 + *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v5, v6);
}

uint64_t sub_D985C(uint64_t a1)
{
  sub_12124(&qword_26F568);
  uint64_t v3 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v5 = (void *)v1[4];
  uint64_t v6 = v1[5];
  uint64_t v7 = v1[6];
  uint64_t v8 = v1[7];
  uint64_t v9 = v1[8];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *unint64_t v10 = v2;
  v10[1] = sub_5958;
  return sub_C8B6C(a1, v3, v4, v5, v6, v7, v8, v9);
}

uint64_t sub_D9988(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  unint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *unint64_t v10 = v3;
  v10[1] = sub_98BD4;
  return sub_CA940(a1, a2, v6, v7, v9, v8);
}

void sub_D9A50(uint64_t a1)
{
  sub_D2C34(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_D9A5C()
{
  uint64_t v1 = sub_12124(&qword_26F4F0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  swift_bridgeObjectRelease();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

void sub_D9B48()
{
  uint64_t v1 = *(void *)(sub_12124(&qword_26F4F0) - 8);
  uint64_t v2 = v0[2];
  uint64_t v3 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v5 = (uint64_t)v0 + ((*(unsigned __int8 *)(v1 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80));

  sub_D2E24(v2, v3, v4, v5);
}

uint64_t sub_D9BE0(uint64_t a1, unint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2)
  {
    self;
    uint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, a2);
  }
  return result;
}

uint64_t sub_D9C1C()
{
  uint64_t v1 = sub_1FB110();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v3 + ((((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_unknownObjectRelease();
  unint64_t v9 = v0 + v4;
  unint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_D9D4C(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1FB110() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  unint64_t v7 = (*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + v7);
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = v1 + v6;
  uint64_t v15 = *(void *)(v1 + v9);
  uint64_t v16 = v1 + ((v5 + v9 + 8) & ~v5);
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  *uint64_t v17 = v2;
  v17[1] = sub_98BD4;
  return sub_CEB68(a1, v10, v11, v14, v12, v13, v15, v16);
}

uint64_t sub_D9EB0()
{
  uint64_t v1 = sub_1FB110();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  unint64_t v7 = (v3 + ((((v5 + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v3;
  uint64_t v8 = v7 + v5;
  swift_unknownObjectRelease();
  unint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  swift_release();
  swift_bridgeObjectRelease();
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_D9FD0(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1FB110() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  unint64_t v7 = (*(void *)(v4 + 64) + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = *(void *)(v1 + v7);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = v1 + ((v5 + v8 + 8) & ~v5);
  uint64_t v15 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v15;
  *uint64_t v15 = v2;
  v15[1] = sub_98BD4;
  return sub_CF254(a1, v9, v10, v12, v11, v13, v14);
}

uint64_t type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord(uint64_t a1)
{
  return sub_DA140(a1, (uint64_t *)&unk_26F748);
}

uint64_t sub_DA140(uint64_t a1, uint64_t *a2)
{
  uint64_t result = *a2;
  if (!*a2) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_DA178(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_DA1B8()
{
  uint64_t v1 = sub_1FB110();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  unint64_t v8 = (((((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v9 = v0 + v4;
  uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v8 + 8, v6);
}

uint64_t sub_DA2F0(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1FB110() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (v8 + v6 + v7) & ~v6;
  unint64_t v10 = (v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v11 = (v10 + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = *(void *)(v1 + 32);
  uint64_t v13 = v1 + v7;
  uint64_t v14 = v1 + v9;
  uint64_t v15 = *(void *)(v1 + v10);
  uint64_t v16 = *(void *)(v1 + v11);
  uint64_t v17 = *(void *)(v1 + ((v11 + 15) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v18 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v18;
  *uint64_t v18 = v3;
  v18[7] = v16;
  v18[8] = v17;
  v18[5] = v14;
  v18[6] = v15;
  v18[3] = v12;
  v18[4] = v13;
  v18[1] = sub_98BD4;
  unsigned __int16 v18[2] = a1;
  return _swift_task_switch(sub_CCAE8, 0, 0);
}

uint64_t sub_DA458()
{
  uint64_t v1 = sub_1FB110();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = v3 | 7;
  uint64_t v7 = (v5 + v3 + v4) & ~v3;
  unint64_t v8 = ((v5 + v7 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v9 = v0 + v4;
  unint64_t v10 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  v10(v0 + v7, v1);
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v8, v6);
}

uint64_t sub_DA568(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1FB110() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = (v7 + v5 + v6) & ~v5;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v10 = v1 + v6;
  uint64_t v11 = v1 + v8;
  uint64_t v12 = *(void *)(v1 + ((v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v13;
  *uint64_t v13 = v2;
  v13[5] = v11;
  v13[6] = v12;
  v13[3] = v9;
  v13[4] = v10;
  v13[1] = sub_5958;
  v13[2] = a1;
  return _swift_task_switch(sub_CDD6C, 0, 0);
}

uint64_t sub_DA6A4(uint64_t a1)
{
  return sub_D1638(a1, *(void *)(v1 + 16), *(char **)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), &qword_26F610, (uint64_t)&unk_25E108, (uint64_t)&unk_26F620);
}

uint64_t sub_DA6E8()
{
  return sub_DA6F4(&qword_26F610);
}

uint64_t sub_DA6F4(uint64_t *a1)
{
  uint64_t v3 = sub_1FB110();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 40) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64);
  uint64_t v8 = (v7 + v5 + v6) & ~v5;
  unint64_t v9 = (v7 + v8 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v10 = sub_12124(a1);
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(unsigned __int8 *)(v11 + 80);
  uint64_t v13 = (v12 + v9 + 8) & ~v12;
  uint64_t v18 = v13 + *(void *)(v11 + 64);
  uint64_t v14 = v5 | v12 | 7;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v15 = v1 + v6;
  uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
  v16(v15, v3);
  v16(v1 + v8, v3);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v11 + 8))(v1 + v13, v10);

  return _swift_deallocObject(v1, v18, v14);
}

uint64_t sub_DA898(uint64_t a1)
{
  uint64_t v3 = v2;
  uint64_t v5 = *(void *)(sub_1FB110() - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v7 = (v6 + 40) & ~v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = (v8 + v6 + v7) & ~v6;
  unint64_t v10 = (v8 + v9 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(sub_12124(&qword_26F610) - 8) + 80);
  uint64_t v12 = v11 + v10 + 8;
  uint64_t v13 = v1[2];
  uint64_t v14 = v1[3];
  uint64_t v15 = v1[4];
  uint64_t v16 = (uint64_t)v1 + v7;
  uint64_t v17 = (uint64_t)v1 + v9;
  uint64_t v18 = *(void *)((char *)v1 + v10);
  uint64_t v19 = (uint64_t)v1 + (v12 & ~v11);
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v20;
  *uint64_t v20 = v3;
  v20[1] = sub_98BD4;
  return sub_CE008(a1, v13, v14, v15, v16, v17, v18, v19);
}

uint64_t sub_DAA2C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_DAA94(uint64_t a1)
{
  return sub_CCD8C(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(char **)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48), *(void *)(v1 + 56));
}

uint64_t sub_DAAA4()
{
  uint64_t v1 = sub_1FB110();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 40) & ~v3;
  uint64_t v5 = *(void *)(v2 + 64);
  uint64_t v6 = (v5 + v3 + v4) & ~v3;
  unint64_t v7 = (v5 + v6 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v15 = sub_12124(&qword_26F610);
  uint64_t v8 = *(void *)(v15 - 8);
  uint64_t v9 = *(unsigned __int8 *)(v8 + 80);
  uint64_t v10 = (v9 + v7 + 8) & ~v9;
  uint64_t v16 = v3 | v9 | 7;
  unint64_t v14 = ((((*(void *)(v8 + 64) + v10 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 8;
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v11 = v0 + v4;
  uint64_t v12 = *(void (**)(uint64_t, uint64_t))(v2 + 8);
  v12(v11, v1);
  v12(v0 + v6, v1);
  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v0 + v10, v15);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, v14, v16);
}

uint64_t sub_DAC70(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1FB110() - 8);
  uint64_t v4 = *(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = (v4 + 40) & ~v4;
  uint64_t v6 = *(void *)(v3 + 64);
  uint64_t v7 = (v6 + v4 + v5) & ~v4;
  unint64_t v8 = (v6 + v7 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = *(void *)(sub_12124(&qword_26F610) - 8);
  unint64_t v10 = (*(unsigned __int8 *)(v9 + 80) + v8 + 8) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  uint64_t v11 = v1[2];
  uint64_t v12 = v1[3];
  uint64_t v13 = v1[4];
  uint64_t v14 = *(void *)((char *)v1 + v8);
  uint64_t v15 = (uint64_t)v1 + v10;
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  *uint64_t v16 = v2;
  v16[1] = sub_98BD4;
  return sub_CD194(a1, v11, v12, v13, (uint64_t)v1 + v5, (uint64_t)v1 + v7, v14, v15);
}

BOOL sub_DAE48(uint64_t a1, uint64_t a2)
{
  return sub_DAE60(a1, a2, type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord);
}

BOOL sub_DAE60(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v6 = *(void *)(v5 + *(int *)(a3(0) + 20));

  return sub_395FC(a1, v6);
}

uint64_t sub_DAEAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t *sub_DAEF4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_DAF9C(a1, a2, a3, &qword_26F548);
}

uint64_t sub_DAF00(uint64_t a1, uint64_t a2)
{
  return sub_DB0C0(a1, a2, &qword_26F548);
}

uint64_t sub_DAF0C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB18C(a1, a2, a3, &qword_26F548);
}

uint64_t sub_DAF18(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB260(a1, a2, a3, &qword_26F548);
}

uint64_t sub_DAF24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB34C(a1, a2, a3, &qword_26F548);
}

uint64_t sub_DAF30(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB41C(a1, a2, a3, &qword_26F548);
}

uint64_t sub_DAF3C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DAF50);
}

uint64_t sub_DAF50(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB50C(a1, a2, a3, &qword_26F548);
}

uint64_t sub_DAF5C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DAF70);
}

uint64_t sub_DAF70(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_DB65C(a1, a2, a3, a4, &qword_26F548);
}

void sub_DAF7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

uint64_t *sub_DAF90(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  return sub_DAF9C(a1, a2, a3, &qword_26F610);
}

uint64_t *sub_DAF9C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t *a4)
{
  int v6 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v6 & 0x20000) != 0)
  {
    uint64_t v14 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v14 + ((v6 + 16) & ~(unint64_t)v6));
    swift_retain();
  }
  else
  {
    uint64_t v9 = sub_1FB110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
    uint64_t v10 = *(int *)(a3 + 24);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    uint64_t v11 = (char *)a1 + v10;
    uint64_t v12 = (char *)a2 + v10;
    swift_bridgeObjectRetain();
    uint64_t v13 = sub_12124(a4);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v13 - 8) + 16))(v11, v12, v13);
  }
  return a1;
}

uint64_t sub_DB0B4(uint64_t a1, uint64_t a2)
{
  return sub_DB0C0(a1, a2, &qword_26F610);
}

uint64_t sub_DB0C0(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v6 - 8) + 8))(a1, v6);
  swift_bridgeObjectRelease();
  uint64_t v7 = a1 + *(int *)(a2 + 24);
  uint64_t v8 = sub_12124(a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v8 - 8) + 8);

  return v9(v7, v8);
}

uint64_t sub_DB180(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB18C(a1, a2, a3, &qword_26F610);
}

uint64_t sub_DB18C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_12124(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 16))(v10, v11, v12);
  return a1;
}

uint64_t sub_DB254(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB260(a1, a2, a3, &qword_26F610);
}

uint64_t sub_DB260(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 24))(a1, a2, v8);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_12124(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t sub_DB340(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB34C(a1, a2, a3, &qword_26F610);
}

uint64_t sub_DB34C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
  uint64_t v9 = *(int *)(a3 + 24);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_12124(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 32))(v10, v11, v12);
  return a1;
}

uint64_t sub_DB410(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB41C(a1, a2, a3, &qword_26F610);
}

uint64_t sub_DB41C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 40))(a1, a2, v8);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  uint64_t v9 = *(int *)(a3 + 24);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_12124(a4);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_DB4EC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_DB500);
}

uint64_t sub_DB500(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_DB50C(a1, a2, a3, &qword_26F610);
}

uint64_t sub_DB50C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v8 = sub_1FB110();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a2)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
    return v10(a1, a2, v8);
  }
  else if (a2 == 0x7FFFFFFF)
  {
    unint64_t v12 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v12 >= 0xFFFFFFFF) {
      LODWORD(v12) = -1;
    }
    return (v12 + 1);
  }
  else
  {
    uint64_t v13 = sub_12124(a4);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + *(int *)(a3 + 24);
    return v14(v16, a2, v15);
  }
}

uint64_t sub_DB63C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_DB650);
}

uint64_t sub_DB650(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  return sub_DB65C(a1, a2, a3, a4, &qword_26F610);
}

uint64_t sub_DB65C(uint64_t a1, uint64_t a2, int a3, uint64_t a4, uint64_t *a5)
{
  uint64_t result = sub_1FB110();
  uint64_t v11 = *(void *)(result - 8);
  if (*(_DWORD *)(v11 + 84) == a3)
  {
    unint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
    return v12(a1, a2, a2, result);
  }
  else if (a3 == 0x7FFFFFFF)
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  else
  {
    uint64_t v13 = sub_12124(a5);
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56);
    uint64_t v15 = v13;
    uint64_t v16 = a1 + *(int *)(a4 + 24);
    return v14(v16, a2, a2, v15);
  }
  return result;
}

void sub_DB79C(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_DB7B0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t *a4, uint64_t *a5)
{
  sub_1FB110();
  if (v7 <= 0x3F)
  {
    sub_DB89C(319, a4, a5);
    if (v8 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void sub_DB89C(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_121C4(a3);
    sub_121C4(&qword_26D670);
    unint64_t v4 = sub_1FBC00();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t sub_DB93C@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_984D0(v5);
  }
  unint64_t v6 = *(void *)(v5 + 16);
  if (v6 <= a1)
  {
    __break(1u);
    goto LABEL_15;
  }
  unint64_t v7 = v6 - 1;
  uint64_t v8 = *(void *)(sub_12124(&qword_26D588) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = v5 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80)) + v9 * a1;
  uint64_t result = sub_55844(v10, a2, &qword_26D588);
  if ((uint64_t)(v7 - a1) < 0)
  {
LABEL_15:
    uint64_t result = sub_1FC2B0();
    __break(1u);
    return result;
  }
  if (v9 > 0 || v10 >= v10 + v9 + v9 * (v7 - a1))
  {
    uint64_t result = swift_arrayInitWithTakeFrontToBack();
  }
  else if (v9)
  {
    uint64_t result = swift_arrayInitWithTakeBackToFront();
  }
  *(void *)(v5 + 16) = v7;
  *uint64_t v2 = v5;
  return result;
}

uint64_t sub_DBAC4@<X0>(unint64_t a1@<X0>, uint64_t a2@<X8>)
{
  unint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v5 = sub_984E4(v5);
  }
  unint64_t v6 = v5[2];
  if (v6 <= a1)
  {
    __break(1u);
  }
  else
  {
    unint64_t v7 = v6 - 1;
    uint64_t v8 = &v5[7 * a1];
    long long v10 = *((_OWORD *)v8 + 2);
    uint64_t v9 = v8 + 4;
    char v11 = *((unsigned char *)v9 + 48);
    long long v12 = *((_OWORD *)v9 + 1);
    long long v13 = *((_OWORD *)v9 + 2);
    *(_OWORD *)a2 = v10;
    *(_OWORD *)(a2 + 16) = v12;
    *(_OWORD *)(a2 + 32) = v13;
    *(unsigned char *)(a2 + 48) = v11;
    if ((uint64_t)(v7 - a1) >= 0)
    {
      uint64_t result = (uint64_t)memmove(v9, v9 + 7, 56 * (v7 - a1));
      void v5[2] = v7;
      *uint64_t v2 = v5;
      return result;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_DBBBC(unint64_t a1, unint64_t a2)
{
  uint64_t v9 = sub_12124(&qword_26D588) - 8;
  uint64_t v10 = __chkstk_darwin(v9);
  long long v12 = (char *)&v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v10);
  uint64_t v16 = (char *)&v17 - v15;
  if (a1 != a2)
  {
    if ((a1 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      unint64_t v3 = *v2;
      unint64_t v5 = *(void *)(*v2 + 16);
      if (v5 > a1)
      {
        uint64_t v18 = v2;
        unint64_t v4 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
        unint64_t v6 = *(unint64_t **)(v14 + 72);
        uint64_t v2 = (unint64_t *)((void)v6 * a1);
        sub_EE0DC(v3 + v4 + (void)v6 * a1, (uint64_t)&v17 - v15);
        if (v5 > a2)
        {
          unint64_t v5 = (void)v6 * a2;
          sub_EE0DC(v3 + v4 + (void)v6 * a2, (uint64_t)v12);
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          unint64_t v6 = v18;
          *uint64_t v18 = v3;
          if (result) {
            goto LABEL_6;
          }
          goto LABEL_13;
        }
LABEL_12:
        __break(1u);
LABEL_13:
        uint64_t result = sub_984D0(v3);
        unint64_t v3 = result;
        *unint64_t v6 = result;
LABEL_6:
        if (*(void *)(v3 + 16) <= a1)
        {
          __break(1u);
        }
        else
        {
          uint64_t result = sub_EE2F8((uint64_t)v12, (uint64_t)v2 + v3 + v4);
          if (*(void *)(*v6 + 16) > a2) {
            return sub_EE2F8((uint64_t)v16, *v6 + v4 + v5);
          }
        }
        __break(1u);
        return result;
      }
    }
    __break(1u);
    goto LABEL_12;
  }
  return result;
}

unint64_t sub_DBD70(unint64_t result, unint64_t a2)
{
  if (result != a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else
    {
      uint64_t v2 = (void *)*v3;
      unint64_t v11 = *(void *)(*v3 + 16);
      if (v11 > result)
      {
        unint64_t v4 = a2;
        if (v11 > a2)
        {
          Swift::String v27 = v3;
          uint64_t v28 = 7 * result;
          uint64_t v12 = (uint64_t)&v2[7 * result + 4];
          uint64_t v19 = 7 * a2;
          uint64_t v20 = *(void *)(v12 + 40);
          uint64_t v13 = (uint64_t)&v2[7 * a2 + 4];
          uint64_t v5 = *(void *)v13;
          uint64_t v6 = *(void *)(v13 + 8);
          unint64_t v3 = *(void **)(v13 + 16);
          uint64_t v7 = *(void *)(v13 + 24);
          uint64_t v8 = *(void *)(v13 + 32);
          uint64_t v9 = *(void *)(v13 + 40);
          char v10 = *(unsigned char *)(v13 + 48);
          uint64_t v24 = *(void *)(v12 + 8);
          uint64_t v25 = *(void *)v12;
          uint64_t v22 = *(void *)(v12 + 24);
          uint64_t v23 = *(void *)(v12 + 16);
          uint64_t v21 = *(void *)(v12 + 32);
          char v26 = *(unsigned char *)(v12 + 48);
          sub_EDE0C(*(void *)v12);
          sub_EDE0C(v5);
          if (swift_isUniquelyReferenced_nonNull_native()) {
            goto LABEL_6;
          }
          goto LABEL_12;
        }
LABEL_11:
        __break(1u);
LABEL_12:
        uint64_t v2 = sub_984E4(v2);
LABEL_6:
        uint64_t v14 = v2 + 4;
        uint64_t v15 = &v2[v28 + 4];
        uint64_t v16 = *v15;
        *uint64_t v15 = v5;
        v15[1] = v6;
        _OWORD v15[2] = (uint64_t)v3;
        v15[3] = v7;
        v15[4] = v8;
        v15[5] = v9;
        *((unsigned char *)v15 + 48) = v10;
        uint64_t result = sub_EDDAC(v16);
        if (v2[2] <= v4)
        {
          __break(1u);
        }
        else
        {
          uint64_t v17 = &v14[v19];
          uint64_t v18 = v14[v19];
          *uint64_t v17 = v25;
          v17[1] = v24;
          v17[2] = v23;
          v17[3] = v22;
          id v17[4] = v21;
          void v17[5] = v20;
          *((unsigned char *)v17 + 48) = v26;
          uint64_t result = sub_EDDAC(v18);
          *Swift::String v27 = v2;
        }
        return result;
      }
    }
    __break(1u);
    goto LABEL_11;
  }
  return result;
}

Swift::Int sub_DBF0C(uint64_t (*a1)(long long *, _OWORD *), uint64_t a2)
{
  uint64_t v5 = *v2;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v5 = sub_124778(v5);
  }
  Swift::Int result = sub_E7A5C(a1, a2);
  *uint64_t v2 = v5;
  return result;
}

Swift::Int sub_DBF90(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1247DC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_E8688(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_DBFFC()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_26F790);
  sub_6DBC8(v0, (uint64_t)qword_26F790);
  return sub_1FB420();
}

BOOL sub_DC080(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 72) < *(double *)(a1 + 72);
}

uint64_t sub_DC094(long long *a1, uint64_t a2, uint64_t a3, double *a4, int a5, uint64_t a6, uint64_t a7, uint64_t a8, double a9, double a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  uint64_t v226 = a7;
  *(void *)&long long v227 = a8;
  int v222 = a5;
  unint64_t v229 = a4;
  uint64_t v225 = a3;
  uint64_t v223 = a2;
  uint64_t v23 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v211 = *(void *)(v23 - 8);
  uint64_t v24 = __chkstk_darwin(v23 - 8);
  uint64_t v200 = (char *)&v199 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v24);
  uint64_t v212 = (uint64_t)&v199 - v26;
  uint64_t v27 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v207 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27 - 8);
  uint64_t v210 = (uint64_t)&v199 - ((v29 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v28);
  double v209 = (char *)&v199 - v30;
  char v32 = (double **)*((void *)a1 + 2);
  uint64_t v31 = *((void *)a1 + 3);
  uint64_t v33 = *((void *)a1 + 4);
  uint64_t v34 = *((void *)a1 + 5);
  uint64_t v35 = *((void *)a1 + 6);
  long long v263 = *a1;
  uint64_t v264 = v32;
  uint64_t v265 = v31;
  uint64_t v266 = v33;
  uint64_t v267 = v34;
  uint64_t v268 = v35;
  uint64_t v262 = a6;
  swift_bridgeObjectRetain();
  uint64_t v215 = (void *)a6;
  swift_bridgeObjectRetain();
  uint64_t v224 = v32;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_DBF0C((uint64_t (*)(long long *, _OWORD *))sub_DC080, 0);
  *(void *)&long long v228 = 0;
  uint64_t v220 = a13;
  uint64_t v219 = a12;
  v222 &= 1u;
  uint64_t v221 = v262;
  swift_bridgeObjectRetain();
  uint64_t v36 = v225;
  swift_bridgeObjectRetain();
  uint64_t v37 = v223;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v208 = a19;
  uint64_t v216 = a18;
  int64_t v217 = (double *)a15;
  uint64_t v218 = a14;
  sub_DD608((uint64_t *)&v263, v37, v36, (uint64_t)v229, v222, v221, v226, v227, (double *)&v248, a9, a10, a11, v219, v220, a14, a15, a16, a17, a18,
    a19);
  uint64_t v247 = &off_2569E8;
  uint64_t v38 = v224;
  if (v224[2]
    && ((unint64_t v39 = sub_4C7F4(0), (v40 & 1) != 0)
     || v38[2]
     && ((unint64_t v39 = sub_4C7F4(0xAu), (v41 & 1) != 0)
      || v38[2] && ((unint64_t v39 = sub_4C7F4(9u), (v42 & 1) != 0) || v38[2] && (unint64_t v39 = sub_4C7F4(0xBu), (v43 & 1) != 0)))))
  {
    uint64_t v44 = (uint64_t)&v38[7][3 * v39];
    unsigned int v45 = *(unsigned __int8 *)(v44 + 8);
    uint64_t v46 = *(void *)v44;
    uint64_t v47 = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v46 = 0;
    unsigned int v45 = 0;
    uint64_t v47 = 0;
  }
  uint64_t v48 = v228;
  long long v243 = v258;
  long long v244 = v259;
  long long v245 = v260;
  uint64_t v246 = v261;
  long long v239 = v254;
  long long v240 = v255;
  long long v241 = v256;
  long long v242 = v257;
  long long v235 = v250;
  long long v236 = v251;
  long long v237 = v252;
  long long v238 = v253;
  long long v233 = v248;
  long long v234 = v249;
  uint64_t v201 = v45;
  uint64_t v202 = v46;
  uint64_t v276 = v46;
  uint64_t v277 = v45;
  uint64_t v203 = v47;
  double v278 = *(double *)&v47;
  uint64_t v205 = sub_DEE60(&v276);
  uint64_t v232 = v49;
  uint64_t v50 = swift_bridgeObjectRetain();
  uint64_t v51 = sub_E9690(v50);
  *(void *)&long long v227 = v48;
  uint64_t v52 = *(void *)(v51 + 56);
  *(void *)&long long v228 = v51 + 56;
  uint64_t v53 = 1 << *(unsigned char *)(v51 + 32);
  uint64_t v54 = -1;
  if (v53 < 64) {
    uint64_t v54 = ~(-1 << v53);
  }
  unint64_t v55 = v54 & v52;
  unint64_t v229 = (double *)((unint64_t)(v53 + 63) >> 6);
  swift_retain();
  uint64_t v56 = 0;
  uint64_t v57 = _swiftEmptyArrayStorage;
  if (!v55) {
    goto LABEL_15;
  }
LABEL_14:
  unint64_t v58 = __clz(__rbit64(v55));
  v55 &= v55 - 1;
  for (unint64_t i = v58 | (v56 << 6); ; unint64_t i = __clz(__rbit64(v61)) + (v56 << 6))
  {
    int64_t v63 = v57[2];
    int64_t v64 = v63 + 2;
    if (__OFADD__(v63, 2))
    {
LABEL_131:
      __break(1u);
      goto LABEL_132;
    }
    uint64_t v65 = *(void *)(v51 + 48) + 40 * i;
    uint64_t v66 = *(void *)(v65 + 8);
    uint64_t v67 = *(void *)(v65 + 24);
    char v68 = *(unsigned char *)(v65 + 32);
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (!isUniquelyReferenced_nonNull_native || (unint64_t v70 = v57[3], v71 = v70 >> 1, (uint64_t)(v70 >> 1) < v64))
    {
      if (v63 <= v64) {
        int64_t v72 = v63 + 2;
      }
      else {
        int64_t v72 = v63;
      }
      uint64_t v57 = sub_43154(isUniquelyReferenced_nonNull_native, v72, 1, v57);
      unint64_t v70 = v57[3];
      unint64_t v71 = v70 >> 1;
    }
    unint64_t v73 = v57[2];
    unint64_t v74 = v73 + 1;
    if (v71 <= v73)
    {
      uint64_t v57 = sub_43154((void *)(v70 > 1), v73 + 1, 1, v57);
      unint64_t v70 = v57[3];
      unint64_t v71 = v70 >> 1;
    }
    v57[2] = v74;
    uint64_t v75 = &v57[2 * v73];
    v75[4] = v66;
    *((unsigned char *)v75 + 40) = 0;
    if (v71 <= v74) {
      uint64_t v57 = sub_43154((void *)(v70 > 1), v73 + 2, 1, v57);
    }
    v57[2] = v73 + 2;
    unint64_t v76 = &v57[2 * v74];
    v76[4] = v67;
    *((unsigned char *)v76 + 40) = v68;
    if (v55) {
      goto LABEL_14;
    }
LABEL_15:
    uint64_t v60 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      goto LABEL_136;
    }
    if (v60 >= (uint64_t)v229) {
      goto LABEL_46;
    }
    unint64_t v61 = *(void *)(v228 + 8 * v60);
    ++v56;
    if (!v61)
    {
      uint64_t v56 = v60 + 1;
      if (v60 + 1 >= (uint64_t)v229) {
        goto LABEL_46;
      }
      unint64_t v61 = *(void *)(v228 + 8 * v56);
      if (!v61)
      {
        uint64_t v56 = v60 + 2;
        if (v60 + 2 >= (uint64_t)v229) {
          goto LABEL_46;
        }
        unint64_t v61 = *(void *)(v228 + 8 * v56);
        if (!v61)
        {
          uint64_t v56 = v60 + 3;
          if (v60 + 3 >= (uint64_t)v229) {
            goto LABEL_46;
          }
          unint64_t v61 = *(void *)(v228 + 8 * v56);
          if (!v61)
          {
            uint64_t v56 = v60 + 4;
            if (v60 + 4 >= (uint64_t)v229) {
              goto LABEL_46;
            }
            unint64_t v61 = *(void *)(v228 + 8 * v56);
            if (!v61) {
              break;
            }
          }
        }
      }
    }
LABEL_32:
    unint64_t v55 = (v61 - 1) & v61;
  }
  uint64_t v62 = v60 + 5;
  if (v62 >= (uint64_t)v229) {
    goto LABEL_46;
  }
  unint64_t v61 = *(void *)(v228 + 8 * v62);
  if (v61)
  {
    uint64_t v56 = v62;
    goto LABEL_32;
  }
  while (1)
  {
    uint64_t v56 = v62 + 1;
    if (__OFADD__(v62, 1))
    {
      __break(1u);
LABEL_140:
      __break(1u);
LABEL_141:
      __break(1u);
LABEL_142:
      __break(1u);
LABEL_143:
      sub_1FC220();
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    if (v56 >= (uint64_t)v229) {
      break;
    }
    unint64_t v61 = *(void *)(v228 + 8 * v56);
    ++v62;
    if (v61) {
      goto LABEL_32;
    }
  }
LABEL_46:
  swift_release_n();
  uint64_t v77 = sub_516C0((uint64_t)v57);
  swift_bridgeObjectRelease();
  Swift::Int v78 = swift_bridgeObjectRetain();
  Swift::Int v79 = sub_EB2D0(v78, v77);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v80 = *(void *)(v79 + 16);
  if (v80)
  {
    unint64_t v81 = (uint64_t *)(v79 + 32);
    do
    {
      uint64_t v82 = *v81;
      v81 += 19;
      sub_73A4((uint64_t *)&v233, v82);
      --v80;
    }
    while (v80);
  }
  swift_bridgeObjectRelease();
  if (qword_26C328 != -1) {
    goto LABEL_138;
  }
  while (2)
  {
    uint64_t v83 = sub_1FB430();
    uint64_t v84 = sub_6DBC8(v83, (uint64_t)qword_26F790);
    uint64_t v85 = v205;
    swift_bridgeObjectRetain_n();
    uint64_t v199 = v84;
    uint64_t v86 = sub_1FB410();
    os_log_type_t v87 = sub_1FBDC0();
    if (os_log_type_enabled(v86, v87))
    {
      uint64_t v88 = (uint8_t *)swift_slowAlloc();
      *(void *)&long long v233 = swift_slowAlloc();
      *(_DWORD *)uint64_t v88 = 136315138;
      uint64_t v89 = sub_DFB7C(v85);
      uint64_t v276 = sub_D5890(v89, v90, (uint64_t *)&v233);
      sub_1FBED0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v86, v87, "highScoringItemRecommendations=%s", v88, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v91 = (uint64_t)v209;
    uint64_t v276 = v85;
    uint64_t v277 = 0;
    double v278 = a9;
    uint64_t v279 = v218;
    v280 = v217;
    uint64_t v281 = v216;
    char v282 = 0;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_E0230((uint64_t)&v276);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v204 = 80;
    uint64_t v92 = v208;
LABEL_54:
    uint64_t v93 = swift_allocObject();
    uint64_t v206 = v93;
    *(void *)(v93 + 16) = &off_256A40;
    uint64_t v224 = (double **)(v93 + 16);
    uint64_t v94 = swift_bridgeObjectRetain();
    Swift::Int v95 = sub_E07B0(v94);
    unint64_t v97 = v96;
    swift_bridgeObjectRelease();
    uint64_t v216 = v95[2];
    if (v97 != v216)
    {
      uint64_t v214 = v95;
      uint64_t v215 = v95 + 4;
      unint64_t v108 = v97;
      unint64_t v213 = v97;
      while ((v97 & 0x8000000000000000) == 0)
      {
        if (v108 >= v95[2]) {
          goto LABEL_134;
        }
        uint64_t v109 = &v215[7 * v108];
        long long v110 = *(_OWORD *)v109;
        long long v111 = *((_OWORD *)v109 + 1);
        long long v112 = *((_OWORD *)v109 + 2);
        char v273 = *((unsigned char *)v109 + 48);
        long long v271 = v111;
        long long v272 = v112;
        long long v270 = v110;
        a9 = *((double *)&v110 + 1);
        uint64_t v223 = v108;
        if (v273)
        {
          uint64_t v119 = *v109;
          long long v120 = *(_OWORD *)(v109 + 1);
          long long v227 = *(_OWORD *)(v109 + 3);
          long long v228 = v120;
          uint64_t v121 = v109[5];
          char v122 = *((unsigned char *)v109 + 48);
          unint64_t v123 = v224;
          swift_beginAccess();
          unint64_t v229 = *v123;
          uint64_t v124 = *((void *)v229 + 2);
          if (v124 <= v92)
          {
            sub_EB640((uint64_t)&v270);
            sub_EB640((uint64_t)&v270);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              unint64_t v229 = (double *)sub_42EE4(0, *((void *)v229 + 2) + 1, 1, v229);
            }
            unint64_t v127 = *((void *)v229 + 2);
            unint64_t v126 = *((void *)v229 + 3);
            if (v127 >= v126 >> 1) {
              unint64_t v229 = (double *)sub_42EE4((void *)(v126 > 1), v127 + 1, 1, v229);
            }
            char v128 = v229;
            *((void *)v229 + 2) = v127 + 1;
            id v129 = v128 + 4;
            uint64_t v130 = (uint64_t)&v128[7 * v127 + 4];
            *(void *)uint64_t v130 = v119;
            *(_OWORD *)(v130 + 8) = v228;
            *(_OWORD *)(v130 + 24) = v227;
            *(void *)(v130 + 40) = v121;
            *(unsigned char *)(v130 + 48) = v122;
            *unint64_t v123 = v128;
            if (v127 >= 2)
            {
              int64_t v217 = v128 + 4;
              while (1)
              {
                unint64_t v135 = v127 >> 1;
                unint64_t v136 = *((void *)v229 + 2);
                if (v127 >> 1 >= v136) {
                  break;
                }
                uint64_t v137 = &v129[7 * v135];
                uint64_t v138 = *(void *)v137;
                if (!*(void *)v137) {
                  goto LABEL_140;
                }
                if (v127 >= v136) {
                  goto LABEL_130;
                }
                uint64_t v139 = &v129[7 * v127];
                uint64_t v140 = *(void *)v139;
                if (!*(void *)v139) {
                  goto LABEL_141;
                }
                double v141 = v137[1];
                double v142 = v139[1];
                if (v142 >= v141) {
                  goto LABEL_65;
                }
                if (v127 != v135)
                {
                  uint64_t v144 = *((void *)v137 + 2);
                  uint64_t v143 = *((void *)v137 + 3);
                  uint64_t v226 = *((void *)v137 + 4);
                  *(void *)&long long v227 = v143;
                  uint64_t v225 = *((void *)v137 + 5);
                  LODWORD(v228) = *((unsigned __int8 *)v137 + 48);
                  uint64_t v145 = *((void *)v139 + 2);
                  uint64_t v146 = *((void *)v139 + 4);
                  uint64_t v147 = *((void *)v139 + 5);
                  int v148 = *((unsigned __int8 *)v139 + 48);
                  uint64_t v220 = *((void *)v139 + 3);
                  uint64_t v221 = v145;
                  uint64_t v218 = v147;
                  uint64_t v219 = v146;
                  int v222 = v148;
                  sub_EDE0C(v140);
                  sub_EDE0C(v138);
                  uint64_t v149 = *(void *)v139;
                  *(void *)uint64_t v139 = v138;
                  v139[1] = v141;
                  uint64_t v150 = v229;
                  uint64_t v151 = v227;
                  *((void *)v139 + 2) = v144;
                  *((void *)v139 + 3) = v151;
                  uint64_t v152 = v225;
                  *((void *)v139 + 4) = v226;
                  *((void *)v139 + 5) = v152;
                  *((unsigned char *)v139 + 48) = v228;
                  sub_EDDAC(v149);
                  if (v135 >= *((void *)v150 + 2)) {
                    goto LABEL_135;
                  }
                  uint64_t v131 = *(void *)v137;
                  *(void *)uint64_t v137 = v140;
                  v137[1] = v142;
                  uint64_t v132 = v220;
                  *((void *)v137 + 2) = v221;
                  *((void *)v137 + 3) = v132;
                  uint64_t v133 = v218;
                  *((void *)v137 + 4) = v219;
                  *((void *)v137 + 5) = v133;
                  *((unsigned char *)v137 + 48) = v222;
                  sub_EDDAC(v131);
                  *uint64_t v224 = v150;
                  id v129 = v217;
                }
                BOOL v134 = v127 > 3;
                v127 >>= 1;
                if (!v134) {
                  goto LABEL_65;
                }
              }
              __break(1u);
LABEL_130:
              __break(1u);
              goto LABEL_131;
            }
          }
          else
          {
            if (!v124) {
              goto LABEL_137;
            }
            if (v124 == 1) {
              goto LABEL_143;
            }
            if (!*((void *)v229 + 11)) {
              goto LABEL_142;
            }
            double v125 = v229[12];
            sub_EB640((uint64_t)&v270);
            if (v125 < a9)
            {
              sub_E7438();
              sub_E0230((uint64_t)&v270);
            }
          }
LABEL_65:
          swift_endAccess();
          sub_EB694((uint64_t)&v270);
          uint64_t v92 = v208;
          uint64_t v91 = (uint64_t)v209;
        }
        else
        {
          uint64_t v113 = v270;
          long long v243 = v258;
          long long v244 = v259;
          long long v245 = v260;
          uint64_t v246 = v261;
          long long v239 = v254;
          long long v240 = v255;
          long long v241 = v256;
          long long v242 = v257;
          long long v235 = v250;
          long long v236 = v251;
          long long v237 = v252;
          long long v238 = v253;
          long long v233 = v248;
          long long v234 = v249;
          uint64_t v114 = v232;
          sub_EB640((uint64_t)&v270);
          sub_EB640((uint64_t)&v270);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          size_t v115 = sub_E0910(v113, v114);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v116 = *(void *)(v115 + 16);
          if (v116)
          {
            sub_EB694((uint64_t)&v270);
            uint64_t v117 = v115
                 + ((*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80));
            uint64_t v118 = *(void *)(v207 + 72);
            do
            {
              sub_EB6E8(v117, v91, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
              sub_E2450(v91, (uint64_t)v269);
              swift_beginAccess();
              sub_E2380((uint64_t)v269, v92);
              swift_endAccess();
              sub_37898(v91, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
              sub_EB694((uint64_t)v269);
              v117 += v118;
              --v116;
            }
            while (v116);
            swift_bridgeObjectRelease();
            sub_EB694((uint64_t)&v270);
          }
          else
          {
            swift_bridgeObjectRelease();
            uint64_t v153 = *((void *)&v272 + 1);
            uint64_t v154 = v272;
            uint64_t v155 = *((void *)&v271 + 1);
            uint64_t v156 = v271;
            sub_EB694((uint64_t)&v270);
            v274[0] = v113;
            *(double *)&v274[1] = a9;
            v274[2] = v156;
            v274[3] = v155;
            v274[4] = v154;
            v274[5] = v153;
            char v275 = 1;
            swift_beginAccess();
            sub_E2380((uint64_t)v274, v92);
            swift_endAccess();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
        }
        unint64_t v108 = v223 + 1;
        unint64_t v97 = v213;
        Swift::Int v95 = v214;
        if (v223 + 1 == v216) {
          goto LABEL_55;
        }
      }
LABEL_133:
      __break(1u);
LABEL_134:
      __break(1u);
LABEL_135:
      __break(1u);
LABEL_136:
      __break(1u);
LABEL_137:
      __break(1u);
LABEL_138:
      swift_once();
      continue;
    }
    break;
  }
LABEL_55:
  swift_bridgeObjectRelease();
  sub_12124(&qword_26F7B0);
  uint64_t v98 = swift_allocObject();
  uint64_t v99 = v206;
  *(void *)(v98 + 16) = sub_EB750;
  *(void *)(v98 + 24) = v99;
  swift_beginAccess();
  swift_retain();
  uint64_t v100 = swift_bridgeObjectRetain();
  os_log_type_t v101 = sub_E07B0(v100);
  unint64_t v103 = v102;
  swift_bridgeObjectRelease();
  sub_12124(&qword_26F7B8);
  uint64_t v104 = swift_allocObject();
  *(void *)(v104 + 16) = v101;
  *(void *)(v104 + 24) = v103;
  unint64_t v105 = v101[2];
  if (v103 != v105)
  {
    if (v103 <= v105) {
      unint64_t v106 = v101[2];
    }
    else {
      unint64_t v106 = v103;
    }
    uint64_t v107 = v204 + 56 * v103;
    while (v106 != v103)
    {
      if (*((unsigned char *)v101 + v107) != 1)
      {
        swift_bridgeObjectRelease();
        swift_setDeallocating();
        swift_deallocClassInstance();
        swift_setDeallocating();
        swift_release();
        swift_deallocClassInstance();
        swift_bridgeObjectRelease();
        uint64_t v157 = *(_UNKNOWN ***)(v206 + 16);
        swift_bridgeObjectRetain();
        swift_release();
        uint64_t v247 = v157;
        goto LABEL_54;
      }
      ++v103;
      v107 += 56;
      if (v105 == v103)
      {
        *(void *)(v104 + 24) = v105;
        goto LABEL_99;
      }
    }
LABEL_132:
    __break(1u);
    goto LABEL_133;
  }
LABEL_99:
  swift_release();
  swift_setDeallocating();
  swift_release();
  swift_deallocClassInstance();
  swift_release();
  uint64_t v158 = swift_bridgeObjectRetain();
  id v159 = sub_E07B0(v158);
  uint64_t v161 = v160;
  swift_bridgeObjectRelease();
  uint64_t v162 = sub_EA324((uint64_t)v159, v161);
  swift_bridgeObjectRelease();
  sub_E3004(v162, (uint64_t)&v233);
  swift_release();
  unint64_t v163 = (double *)v233;
  if ((void)v233)
  {
    uint64_t v164 = swift_bridgeObjectRetain();
    sub_EDDAC(v164);
  }
  else
  {
    unint64_t v163 = (double *)_swiftEmptyArrayStorage;
  }
  uint64_t v165 = (uint64_t)v200;
  uint64_t v166 = v212;
  int64_t v167 = *((void *)v163 + 2);
  unint64_t v229 = v163;
  if (v167)
  {
    *(void *)&long long v233 = _swiftEmptyArrayStorage;
    sub_46818(0, v167, 0);
    uint64_t v168 = (uint64_t)v163
         + ((*(unsigned __int8 *)(v207 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v207 + 80));
    uint64_t v169 = *(void *)(v207 + 72);
    do
    {
      uint64_t v170 = v210;
      sub_EB6E8(v168, v210, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8(v170, v166, type metadata accessor for CollectionRecommendation);
      sub_37898(v170, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v171 = (void *)v233;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46818(0, v171[2] + 1, 1);
        uint64_t v171 = (void *)v233;
      }
      unint64_t v173 = v171[2];
      unint64_t v172 = v171[3];
      if (v173 >= v172 >> 1)
      {
        sub_46818(v172 > 1, v173 + 1, 1);
        uint64_t v171 = (void *)v233;
      }
      v171[2] = v173 + 1;
      uint64_t v166 = v212;
      sub_EDE6C(v212, (uint64_t)v171+ ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80))+ *(void *)(v211 + 72) * v173, type metadata accessor for CollectionRecommendation);
      v168 += v169;
      --v167;
    }
    while (v167);
  }
  else
  {
    uint64_t v171 = _swiftEmptyArrayStorage;
  }
  uint64_t v231 = v171;
  *(void *)&long long v233 = _swiftEmptyArrayStorage;
  uint64_t v174 = v171[2];
  if (v174)
  {
    uint64_t v175 = (uint64_t)v171
         + ((*(unsigned __int8 *)(v211 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v211 + 80));
    uint64_t v176 = *(void *)(v211 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_EB6E8(v175, v165, type metadata accessor for CollectionRecommendation);
      os_log_type_t v177 = CollectionRecommendation.books.getter();
      sub_37898(v165, type metadata accessor for CollectionRecommendation);
      sub_A9A60((uint64_t)v177);
      v175 += v176;
      --v174;
    }
    while (v174);
    BOOL v178 = (void *)v233;
    int64_t v179 = *(void *)(v233 + 16);
    if (v179) {
      goto LABEL_115;
    }
LABEL_121:
    swift_bridgeObjectRelease();
    Swift::String v180 = _swiftEmptyArrayStorage;
  }
  else
  {
    swift_bridgeObjectRetain();
    BOOL v178 = _swiftEmptyArrayStorage;
    int64_t v179 = _swiftEmptyArrayStorage[2];
    if (!v179) {
      goto LABEL_121;
    }
LABEL_115:
    *(void *)&long long v233 = _swiftEmptyArrayStorage;
    sub_46538(0, v179, 0);
    Swift::String v180 = (void *)v233;
    unint64_t v181 = *(void *)(v233 + 16);
    uint64_t v182 = 4;
    do
    {
      uint64_t v183 = v178[v182];
      *(void *)&long long v233 = v180;
      unint64_t v184 = v180[3];
      if (v181 >= v184 >> 1)
      {
        sub_46538(v184 > 1, v181 + 1, 1);
        Swift::String v180 = (void *)v233;
      }
      v180[2] = v181 + 1;
      v180[v181 + 4] = v183;
      v182 += 10;
      ++v181;
      --v179;
    }
    while (v179);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v185 = v180[2];
  Swift::String v186 = v229;
  if (v185)
  {
    uint64_t v187 = v180 + 4;
    do
    {
      uint64_t v188 = *v187++;
      sub_73A4((uint64_t *)&v233, v188);
      --v185;
    }
    while (v185);
  }
  swift_bridgeObjectRelease();
  long long v243 = v258;
  long long v244 = v259;
  long long v245 = v260;
  uint64_t v246 = v261;
  long long v239 = v254;
  long long v240 = v255;
  long long v241 = v256;
  long long v242 = v257;
  long long v235 = v250;
  long long v236 = v251;
  long long v237 = v252;
  long long v238 = v253;
  long long v233 = v248;
  long long v234 = v249;
  v230[0] = v202;
  v230[1] = v201;
  v230[2] = v203;
  uint64_t v189 = v232;
  swift_bridgeObjectRetain();
  os_log_type_t v190 = sub_ECAC0(v230, v205, (uint64_t)v186, v189);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_EDC98((uint64_t)&v248);
  sub_A9BBC((uint64_t)v190);
  uint64_t v191 = (uint64_t)v231;
  swift_bridgeObjectRetain_n();
  uint64_t v192 = sub_1FB410();
  os_log_type_t v193 = sub_1FBDC0();
  if (os_log_type_enabled(v192, v193))
  {
    uint64_t v194 = (uint8_t *)swift_slowAlloc();
    *(void *)&long long v233 = swift_slowAlloc();
    *(_DWORD *)uint64_t v194 = 136315138;
    uint64_t v195 = sub_1EF6A4(v191);
    v230[0] = sub_D5890(v195, v196, (uint64_t *)&v233);
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v192, v193, "collectionRecommendations=%s", v194, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  swift_beginAccess();
  uint64_t v197 = v231;
  swift_bridgeObjectRelease();
  return (uint64_t)v197;
}

uint64_t sub_DD608@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, int a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, double *a9@<X8>, double a10@<D0>, double a11@<D1>, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20)
{
  uint64_t v251 = a7;
  uint64_t v252 = a8;
  LODWORD(v21) = a5;
  uint64_t v250 = a3;
  long long v253 = a9;
  uint64_t v269 = 0;
  uint64_t v26 = *a1;
  uint64_t v27 = a1[2];
  uint64_t v248 = a1[1];
  uint64_t v249 = v26;
  uint64_t v29 = a1[3];
  uint64_t v28 = a1[4];
  uint64_t v31 = a1[5];
  uint64_t v30 = a1[6];
  uint64_t v255 = v28;
  uint64_t v256 = v30;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v263 = a17;
  swift_bridgeObjectRetain();
  uint64_t v254 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v257 = v31;
  swift_bridgeObjectRetain();
  char v32 = sub_AC930(0);
  unint64_t v278 = sub_16BBC8(v32);
  swift_bridgeObjectRelease();
  uint64_t v33 = sub_AC930(0);
  unint64_t v277 = sub_16BBC8(v33);
  swift_bridgeObjectRelease();
  uint64_t v34 = sub_AC924(0);
  unint64_t v285 = sub_161674((uint64_t)v34);
  uint64_t v35 = sub_AC918(0);
  unint64_t v284 = sub_161680((uint64_t)v35);
  uint64_t v274 = v29;
  uint64_t v275 = a2;
  uint64_t v266 = sub_AE3D8(a6);
  uint64_t v267 = a6;
  if (!v266)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v271 = 0;
    uint64_t v276 = 0;
    goto LABEL_108;
  }
  uint64_t v279 = v29 + 56;
  uint64_t v36 = a2 + 56;
  uint64_t v264 = (uint64_t)&v305 + 8;
  uint64_t v265 = a6 + 32;
  swift_bridgeObjectRetain();
  uint64_t v270 = a4 + 56;
  long long v271 = 0;
  uint64_t v276 = 0;
  unint64_t v37 = 0;
  int64_t v273 = a4;
  LODWORD(v272) = v21;
LABEL_5:
  sub_6D4FC(v37, 1, a6);
  unint64_t v38 = v265 + 152 * v37;
  long long v39 = *(_OWORD *)(v38 + 112);
  long long v298 = *(_OWORD *)(v38 + 96);
  long long v299 = v39;
  long long v300 = *(_OWORD *)(v38 + 128);
  char v301 = *(unsigned char *)(v38 + 144);
  long long v40 = *(_OWORD *)(v38 + 48);
  long long v294 = *(_OWORD *)(v38 + 32);
  long long v295 = v40;
  long long v41 = *(_OWORD *)(v38 + 80);
  long long v296 = *(_OWORD *)(v38 + 64);
  long long v297 = v41;
  long long v42 = *(_OWORD *)(v38 + 16);
  long long v292 = *(_OWORD *)v38;
  long long v293 = v42;
  uint64_t v286 = *((void *)&v297 + 1);
  BOOL v43 = __OFADD__(v37, 1);
  unint64_t v44 = v37 + 1;
  if (v43) {
    goto LABEL_267;
  }
  int64_t v268 = v44;
  char v282 = (char *)*((void *)&v297 + 1);
  uint64_t v45 = *(void *)(*((void *)&v297 + 1) + 56);
  v280 = (const char *)(*((void *)&v297 + 1) + 56);
  uint64_t v46 = 1 << *(unsigned char *)(*((void *)&v297 + 1) + 32);
  if (v46 < 64) {
    uint64_t v47 = ~(-1 << v46);
  }
  else {
    uint64_t v47 = -1;
  }
  unint64_t v48 = v47 & v45;
  sub_54834((uint64_t)&v292);
  sub_EE360((uint64_t)&v286);
  uint64_t v49 = 0;
  uint64_t v281 = (const char *)((unint64_t)(v46 + 63) >> 6);
LABEL_12:
  while (v48)
  {
    unint64_t v53 = __clz(__rbit64(v48));
    v48 &= v48 - 1;
    unint64_t v54 = v53 | (v49 << 6);
LABEL_25:
    uint64_t v57 = *(void *)(*((void *)v282 + 6) + 8 * v54);
    uint64_t v58 = *(void *)(a4 + 16);
    if (v21)
    {
      if (!v58) {
        goto LABEL_40;
      }
      uint64_t v64 = sub_1FC7D0();
      uint64_t v65 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v66 = v64 & ~v65;
      if (((*(void *)(v270 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
        goto LABEL_40;
      }
      uint64_t v67 = *(void *)(a4 + 48);
      if (*(void *)(v67 + 8 * v66) != v57)
      {
        uint64_t v68 = ~v65;
        while (1)
        {
          unint64_t v66 = (v66 + 1) & v68;
          if (((*(void *)(v270 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
            break;
          }
          if (*(void *)(v67 + 8 * v66) == v57) {
            goto LABEL_12;
          }
        }
LABEL_40:
        if (!*(void *)(v29 + 16)) {
          goto LABEL_51;
        }
        uint64_t v69 = sub_1FC7D0();
        uint64_t v70 = -1 << *(unsigned char *)(v29 + 32);
        unint64_t v71 = v69 & ~v70;
        if ((*(void *)(v279 + ((v71 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v71))
        {
          uint64_t v72 = *(void *)(v29 + 48);
          if (*(void *)(v72 + 8 * v71) == v57)
          {
LABEL_51:
            sub_54834((uint64_t)&v292);
            sub_52958((uint64_t)v271);
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v287 = v278;
            unint64_t v76 = sub_56168(v57);
            uint64_t v77 = *(void *)(v278 + 16);
            BOOL v78 = (v75 & 1) == 0;
            uint64_t v79 = v77 + v78;
            if (__OFADD__(v77, v78)) {
              goto LABEL_263;
            }
            char v80 = v75;
            if (*(void *)(v278 + 24) >= v79)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_12095C();
              }
            }
            else
            {
              sub_117678(v79, isUniquelyReferenced_nonNull_native);
              uint64_t v81 = sub_56168(v57);
              if ((v80 & 1) != (v82 & 1)) {
                goto LABEL_280;
              }
              unint64_t v76 = v81;
            }
            a2 = v275;
            uint64_t v21 = (void *)v287;
            swift_bridgeObjectRelease();
            if (v80)
            {
              swift_bridgeObjectRetain();
            }
            else
            {
              v21[(v76 >> 6) + 8] |= 1 << v76;
              uint64_t v83 = 8 * v76;
              *(void *)(v21[6] + v83) = v57;
              *(void *)(v21[7] + v83) = _swiftEmptyArrayStorage;
              uint64_t v84 = v21[2];
              uint64_t v85 = v84 + 1;
              BOOL v86 = __OFADD__(v84, 1);
              swift_bridgeObjectRetain();
              if (v86) {
                goto LABEL_266;
              }
              _OWORD v21[2] = v85;
            }
            uint64_t v50 = v21[7];
            unint64_t v278 = (unint64_t)v21;
            swift_bridgeObjectRelease();
            sub_6D51C();
            uint64_t v51 = *(void **)(*(void *)(v50 + 8 * v76) + 16);
            sub_6D568(v51);
            sub_6D5AC((uint64_t)v51, (uint64_t)&v292);
            AuthorRecommendationSource.id.getter(v52);
            long long v271 = sub_E31E8;
            a4 = v273;
            uint64_t v29 = v274;
            LOBYTE(v21) = v272;
          }
          else
          {
            uint64_t v73 = ~v70;
            while (1)
            {
              unint64_t v71 = (v71 + 1) & v73;
              if (((*(void *)(v279 + ((v71 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v71) & 1) == 0) {
                break;
              }
              if (*(void *)(v72 + 8 * v71) == v57) {
                goto LABEL_51;
              }
            }
          }
        }
      }
    }
    else if (v58)
    {
      uint64_t v59 = sub_1FC7D0();
      uint64_t v60 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v61 = v59 & ~v60;
      if ((*(void *)(v270 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61))
      {
        uint64_t v62 = *(void *)(a4 + 48);
        if (*(void *)(v62 + 8 * v61) == v57) {
          goto LABEL_40;
        }
        uint64_t v63 = ~v60;
        while (1)
        {
          unint64_t v61 = (v61 + 1) & v63;
          if (((*(void *)(v270 + ((v61 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v61) & 1) == 0) {
            break;
          }
          if (*(void *)(v62 + 8 * v61) == v57) {
            goto LABEL_40;
          }
        }
      }
    }
  }
  BOOL v43 = __OFADD__(v49++, 1);
  if (v43) {
    goto LABEL_252;
  }
  if (v49 >= (uint64_t)v281)
  {
LABEL_63:
    swift_release();
    os_log_type_t v87 = (const char *)v297;
    uint64_t v88 = *(void *)(v297 + 56);
    uint64_t v281 = (const char *)(v297 + 56);
    uint64_t v89 = 1 << *(unsigned char *)(v297 + 32);
    if (v89 < 64) {
      uint64_t v90 = ~(-1 << v89);
    }
    else {
      uint64_t v90 = -1;
    }
    unint64_t v91 = v90 & v88;
    char v282 = (char *)((unint64_t)(v89 + 63) >> 6);
    swift_bridgeObjectRetain();
    uint64_t v92 = 0;
    v280 = v87;
    while (1)
    {
      while (!v91)
      {
        BOOL v43 = __OFADD__(v92++, 1);
        if (v43) {
          goto LABEL_253;
        }
        if (v92 >= (uint64_t)v282)
        {
LABEL_104:
          swift_release();
          long long v304 = v294;
          long long v305 = v295;
          uint64_t v306 = v296;
          long long v302 = v292;
          long long v303 = v293;
          sub_55844(v264, (uint64_t)v307, &qword_26F7C8);
          uint64_t v121 = sub_55844((uint64_t)v307, (uint64_t)v308, &qword_26F7C8);
          uint64_t v122 = v309;
          if (v309)
          {
            __chkstk_darwin(v121);
            sub_EE398((uint64_t)v307);
            sub_EBA5C(v122, (void (*)(unsigned char *, uint64_t))sub_EE38C);
            sub_7A018((uint64_t)&v292);
            sub_EE3C4((uint64_t)v307);
          }
          else
          {
            sub_7A018((uint64_t)&v292);
          }
          a6 = v267;
          unint64_t v37 = v268;
          if (v268 != v266) {
            goto LABEL_5;
          }
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_108:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          if (v255 > 0)
          {
            uint64_t v123 = sub_AE3D8(v263);
            if (v123)
            {
              uint64_t v124 = v123;
              swift_bridgeObjectRetain();
              uint64_t v125 = 0;
              v280 = "http://localhost:18060";
              uint64_t v281 = "booksBySuggestedAuthors";
              char v282 = "ry";
              while (1)
              {
                uint64_t v126 = v125 + 1;
                if (__OFADD__(v125, 1)) {
                  goto LABEL_270;
                }
                switch(*(unsigned char *)(v263 + v125 + 32))
                {
                  case 2:
                    goto LABEL_264;
                  default:
                    char v127 = sub_1FC5F0();
                    swift_bridgeObjectRelease();
                    if (v127)
                    {
                      swift_bridgeObjectRelease_n();
                      int v128 = 1;
                      goto LABEL_118;
                    }
                    ++v125;
                    if (v126 == v124)
                    {
                      swift_bridgeObjectRelease_n();
                      goto LABEL_117;
                    }
                    break;
                }
              }
            }
          }
          swift_bridgeObjectRelease();
LABEL_117:
          int v128 = 0;
          goto LABEL_118;
        }
        unint64_t v99 = *(void *)&v281[8 * v92];
        if (!v99)
        {
          uint64_t v100 = v92 + 1;
          if (v92 + 1 >= (uint64_t)v282) {
            goto LABEL_104;
          }
          unint64_t v99 = *(void *)&v281[8 * v100];
          if (!v99)
          {
            uint64_t v100 = v92 + 2;
            if (v92 + 2 >= (uint64_t)v282) {
              goto LABEL_104;
            }
            unint64_t v99 = *(void *)&v281[8 * v100];
            if (!v99)
            {
              uint64_t v100 = v92 + 3;
              if (v92 + 3 >= (uint64_t)v282) {
                goto LABEL_104;
              }
              unint64_t v99 = *(void *)&v281[8 * v100];
              if (!v99)
              {
                while (1)
                {
                  uint64_t v92 = v100 + 1;
                  if (__OFADD__(v100, 1)) {
                    goto LABEL_261;
                  }
                  if (v92 >= (uint64_t)v282) {
                    goto LABEL_104;
                  }
                  unint64_t v99 = *(void *)&v281[8 * v92];
                  ++v100;
                  if (v99) {
                    goto LABEL_82;
                  }
                }
              }
            }
          }
          uint64_t v92 = v100;
        }
LABEL_82:
        unint64_t v91 = (v99 - 1) & v99;
        unint64_t v98 = __clz(__rbit64(v99)) + (v92 << 6);
        if (*(void *)(a2 + 16)) {
          goto LABEL_83;
        }
      }
      unint64_t v97 = __clz(__rbit64(v91));
      v91 &= v91 - 1;
      unint64_t v98 = v97 | (v92 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_83:
        uint64_t v101 = *(void *)(*((void *)v87 + 6) + 8 * v98);
        uint64_t v102 = sub_1FC7D0();
        uint64_t v103 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v104 = v102 & ~v103;
        if ((*(void *)(v36 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104))
        {
          uint64_t v105 = *(void *)(a2 + 48);
          if (*(void *)(v105 + 8 * v104) == v101)
          {
LABEL_88:
            sub_54834((uint64_t)&v292);
            sub_52958((uint64_t)v276);
            char v107 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&long long v287 = v277;
            unint64_t v109 = sub_56168(v101);
            uint64_t v110 = *(void *)(v277 + 16);
            BOOL v111 = (v108 & 1) == 0;
            uint64_t v112 = v110 + v111;
            if (__OFADD__(v110, v111)) {
              goto LABEL_262;
            }
            char v113 = v108;
            if (*(void *)(v277 + 24) >= v112)
            {
              if ((v107 & 1) == 0) {
                sub_12095C();
              }
            }
            else
            {
              sub_117678(v112, v107);
              uint64_t v114 = sub_56168(v101);
              if ((v113 & 1) != (v115 & 1)) {
                goto LABEL_280;
              }
              unint64_t v109 = v114;
            }
            a2 = v275;
            uint64_t v116 = (void *)v287;
            swift_bridgeObjectRelease();
            if (v113)
            {
              uint64_t v93 = swift_bridgeObjectRetain();
            }
            else
            {
              v116[(v109 >> 6) + 8] |= 1 << v109;
              uint64_t v117 = 8 * v109;
              *(void *)(v116[6] + v117) = v101;
              *(void *)(v116[7] + v117) = _swiftEmptyArrayStorage;
              uint64_t v118 = v116[2];
              uint64_t v119 = v118 + 1;
              BOOL v120 = __OFADD__(v118, 1);
              swift_bridgeObjectRetain();
              if (v120)
              {
                __break(1u);
LABEL_266:
                __break(1u);
LABEL_267:
                __break(1u);
LABEL_268:
                __break(1u);
LABEL_269:
                __break(1u);
LABEL_270:
                __break(1u);
                goto LABEL_271;
              }
              v116[2] = v119;
              uint64_t v93 = (uint64_t)v116;
            }
            uint64_t v94 = *(void *)(v93 + 56);
            unint64_t v277 = v93;
            swift_bridgeObjectRelease();
            sub_6D51C();
            Swift::Int v95 = *(void **)(*(void *)(v94 + 8 * v109) + 16);
            sub_6D568(v95);
            sub_6D5AC((uint64_t)v95, (uint64_t)&v292);
            AuthorRecommendationSource.id.getter(v96);
            uint64_t v276 = sub_E31E8;
            a4 = v273;
            uint64_t v29 = v274;
            LOBYTE(v21) = v272;
            os_log_type_t v87 = v280;
          }
          else
          {
            uint64_t v106 = ~v103;
            while (1)
            {
              unint64_t v104 = (v104 + 1) & v106;
              if (((*(void *)(v36 + ((v104 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v104) & 1) == 0) {
                break;
              }
              if (*(void *)(v105 + 8 * v104) == v101) {
                goto LABEL_88;
              }
            }
          }
        }
      }
    }
  }
  unint64_t v55 = *(void *)&v280[8 * v49];
  if (v55)
  {
LABEL_24:
    unint64_t v48 = (v55 - 1) & v55;
    unint64_t v54 = __clz(__rbit64(v55)) + (v49 << 6);
    goto LABEL_25;
  }
  uint64_t v56 = v49 + 1;
  if (v49 + 1 >= (uint64_t)v281) {
    goto LABEL_63;
  }
  unint64_t v55 = *(void *)&v280[8 * v56];
  if (v55) {
    goto LABEL_23;
  }
  uint64_t v56 = v49 + 2;
  if (v49 + 2 >= (uint64_t)v281) {
    goto LABEL_63;
  }
  unint64_t v55 = *(void *)&v280[8 * v56];
  if (v55) {
    goto LABEL_23;
  }
  uint64_t v56 = v49 + 3;
  if (v49 + 3 >= (uint64_t)v281) {
    goto LABEL_63;
  }
  unint64_t v55 = *(void *)&v280[8 * v56];
  if (v55)
  {
LABEL_23:
    uint64_t v49 = v56;
    goto LABEL_24;
  }
  while (1)
  {
    uint64_t v49 = v56 + 1;
    if (__OFADD__(v56, 1)) {
      break;
    }
    if (v49 >= (uint64_t)v281) {
      goto LABEL_63;
    }
    unint64_t v55 = *(void *)&v280[8 * v49];
    ++v56;
    if (v55) {
      goto LABEL_24;
    }
  }
  __break(1u);
LABEL_261:
  __break(1u);
LABEL_262:
  __break(1u);
LABEL_263:
  __break(1u);
LABEL_264:
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  int v128 = 1;
LABEL_118:
  if (!*(void *)(v254 + 16)) {
    goto LABEL_247;
  }
  sub_4C7F4(2u);
  if ((v129 & 1) == 0)
  {
    if (*(void *)(v254 + 16))
    {
      sub_4C7F4(5u);
      char v132 = v131;
      swift_bridgeObjectRelease();
      if (v132)
      {
LABEL_258:
        unint64_t v239 = v278;
        goto LABEL_259;
      }
      unint64_t v130 = v278;
      if (((v128 ^ 1) & 1) == 0) {
        goto LABEL_124;
      }
      goto LABEL_248;
    }
LABEL_247:
    swift_bridgeObjectRelease();
    unint64_t v130 = v278;
    if (v128) {
      goto LABEL_124;
    }
LABEL_248:
    unint64_t v239 = v130;
    goto LABEL_259;
  }
  swift_bridgeObjectRelease();
  unint64_t v130 = v278;
LABEL_124:
  uint64_t v133 = *(void *)(v130 + 64);
  unint64_t v258 = v130 + 64;
  uint64_t v134 = 1 << *(unsigned char *)(v130 + 32);
  if (v134 < 64) {
    uint64_t v135 = ~(-1 << v134);
  }
  else {
    uint64_t v135 = -1;
  }
  unint64_t v136 = v135 & v133;
  int64_t v259 = (unint64_t)(v134 + 63) >> 6;
  swift_bridgeObjectRetain();
  unint64_t v137 = v278;
  uint64_t v138 = 0;
  unint64_t v260 = v278;
  if (!v136) {
    goto LABEL_136;
  }
LABEL_132:
  unint64_t v141 = __clz(__rbit64(v136));
  uint64_t v142 = (v136 - 1) & v136;
  uint64_t v264 = v138;
  unint64_t v143 = v141 | (v138 << 6);
LABEL_147:
  uint64_t v150 = 8 * v143;
  uint64_t v151 = *(void *)(v137 + 56);
  uint64_t v261 = *(void *)(*(void *)(v137 + 48) + v150);
  unint64_t v262 = v142;
  uint64_t v152 = *(void *)(v151 + v150);
  if (sub_A92A0(v152) < 2) {
    goto LABEL_130;
  }
  sub_6D4FC(0, 1, v152);
  uint64_t v153 = *(void *)(v152 + 32);
  uint64_t v272 = v152 + 32;
  char v154 = *(unsigned char *)(v152 + 40);
  uint64_t v155 = *(void *)(v152 + 48);
  char v156 = *(unsigned char *)(v152 + 56);
  uint64_t v157 = *(void *)(v152 + 64);
  char v158 = *(unsigned char *)(v152 + 72);
  uint64_t v159 = *(void *)(v152 + 80);
  uint64_t v160 = *(void *)(v152 + 104);
  *(void *)&long long v287 = v153;
  BYTE8(v287) = v154;
  *(void *)&long long v288 = v155;
  BYTE8(v288) = v156;
  *(void *)&long long v289 = v157;
  BYTE8(v289) = v158;
  *(void *)&v290[0] = v159;
  *(_OWORD *)((char *)v290 + 8) = *(_OWORD *)(v152 + 88);
  *((void *)&v290[1] + 1) = v160;
  swift_bridgeObjectRetain();
  uint64_t v161 = sub_A4488();
  uint64_t v162 = sub_AE3D8(v152);
  if (v162 >= 1) {
    uint64_t v163 = 1;
  }
  else {
    uint64_t v163 = v162;
  }
  if (v162 < 0) {
    uint64_t v164 = 1;
  }
  else {
    uint64_t v164 = v163;
  }
  if (v162 < v164) {
    goto LABEL_273;
  }
  uint64_t v165 = *(void *)(v152 + 16);
  if (v165 < v164)
  {
LABEL_274:
    __break(1u);
LABEL_275:
    __break(1u);
LABEL_276:
    __break(1u);
LABEL_277:
    __break(1u);
LABEL_278:
    __break(1u);
  }
  if (v164 < 0) {
    goto LABEL_275;
  }
  if (v165 < v162) {
    goto LABEL_276;
  }
  if (v162 < 2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_130;
  }
  v247[1] = v152;
  int64_t v268 = v162;
  uint64_t v166 = v163;
  uint64_t v266 = v164;
  swift_bridgeObjectRetain();
  int64_t v167 = v166;
  uint64_t v265 = v166 + 1;
LABEL_160:
  uint64_t v281 = (const char *)v161;
  int64_t v273 = v167;
  uint64_t v168 = v272 + 152 * v167;
  long long v169 = *(_OWORD *)(v168 + 16);
  long long v287 = *(_OWORD *)v168;
  long long v288 = v169;
  long long v170 = *(_OWORD *)(v168 + 32);
  long long v171 = *(_OWORD *)(v168 + 48);
  long long v172 = *(_OWORD *)(v168 + 80);
  v290[1] = *(_OWORD *)(v168 + 64);
  v290[2] = v172;
  long long v289 = v170;
  v290[0] = v171;
  long long v173 = *(_OWORD *)(v168 + 96);
  long long v174 = *(_OWORD *)(v168 + 112);
  long long v175 = *(_OWORD *)(v168 + 128);
  char v291 = *(unsigned char *)(v168 + 144);
  v290[4] = v174;
  v290[5] = v175;
  v290[3] = v173;
  uint64_t v176 = v289;
  char v177 = BYTE8(v289);
  uint64_t v178 = *(void *)&v290[0];
  uint64_t v179 = *(void *)&v290[1];
  v280 = (const char *)v289;
  LODWORD(v279) = BYTE8(v289);
  if (!*(void *)&v290[1])
  {
    sub_54834((uint64_t)&v287);
    sub_5480C(v176, v177);
    swift_bridgeObjectRetain();
    uint64_t v212 = (char *)sub_AC86C(0);
    goto LABEL_216;
  }
  sub_54834((uint64_t)&v287);
  sub_5480C(v176, v177);
  uint64_t v270 = v178;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  uint64_t v283 = sub_AC878(0);
  uint64_t v180 = v179 + 64;
  uint64_t v181 = 1 << *(unsigned char *)(v179 + 32);
  if (v181 < 64) {
    uint64_t v182 = ~(-1 << v181);
  }
  else {
    uint64_t v182 = -1;
  }
  unint64_t v183 = v182 & *(void *)(v179 + 64);
  char v282 = (char *)((unint64_t)(v181 + 63) >> 6);
  swift_bridgeObjectRetain();
  uint64_t v184 = 0;
  uint64_t v185 = v179;
  while (1)
  {
    if (v183)
    {
      unint64_t v186 = __clz(__rbit64(v183));
      v183 &= v183 - 1;
      unint64_t v187 = v186 | (v184 << 6);
    }
    else
    {
      BOOL v43 = __OFADD__(v184++, 1);
      if (v43) {
        goto LABEL_257;
      }
      if (v184 >= (uint64_t)v282)
      {
LABEL_209:
        swift_release();
        swift_bridgeObjectRelease();
        uint64_t v205 = v283;
        uint64_t v206 = sub_AE3D8((uint64_t)v283);
        if (v206)
        {
          int64_t v207 = v206;
          uint64_t v283 = (uint64_t *)sub_135628();
          sub_135634(v207);
          if (v207 < 0) {
            goto LABEL_272;
          }
          uint64_t v208 = 4;
          do
          {
            uint64_t v209 = v205[v208];
            sub_1356AC();
            uint64_t v210 = v283[2];
            sub_135708(v210);
            uint64_t v211 = sub_135730(v210, v209);
            AuthorRecommendationSource.id.getter(v211);
            v208 += 70;
            --v207;
          }
          while (v207);
          swift_bridgeObjectRelease();
          uint64_t v212 = (char *)v283;
        }
        else
        {
          uint64_t v212 = (char *)sub_AC86C(0);
          swift_bridgeObjectRelease();
        }
LABEL_216:
        sub_AE3D8((uint64_t)v212);
        unint64_t v213 = (unsigned char *)sub_1FBCD0();
        uint64_t v214 = sub_AE3D8((uint64_t)v212);
        char v282 = v212;
        if (v214)
        {
          uint64_t v215 = v214;
          if (v214 < 1) {
            goto LABEL_269;
          }
          uint64_t v216 = 0;
          int64_t v217 = v212 + 32;
          for (unint64_t i = v213 + 56; ; unint64_t i = v213 + 56)
          {
LABEL_220:
            uint64_t v219 = v217[v216++];
            uint64_t v220 = sub_1FC7D0();
            uint64_t v221 = -1 << v213[32];
            unint64_t v222 = v220 & ~v221;
            if ((*(void *)&i[(v222 >> 3) & 0xFFFFFFFFFFFFFF8] >> v222))
            {
              uint64_t v223 = *((void *)v213 + 6);
              if (*(void *)(v223 + 8 * v222) == v219)
              {
LABEL_219:
                if (v216 == v215) {
                  break;
                }
                goto LABEL_220;
              }
              uint64_t v224 = ~v221;
              while (1)
              {
                unint64_t v222 = (v222 + 1) & v224;
                if (((*(void *)&i[(v222 >> 3) & 0xFFFFFFFFFFFFFF8] >> v222) & 1) == 0) {
                  break;
                }
                if (*(void *)(v223 + 8 * v222) == v219) {
                  goto LABEL_219;
                }
              }
            }
            char v225 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v283 = (uint64_t *)v213;
            sub_C020(v219, v222, v225);
            unint64_t v213 = v283;
            swift_bridgeObjectRelease();
            if (v216 == v215) {
              break;
            }
          }
        }
        swift_bridgeObjectRelease();
        sub_54820((uint64_t)v280, v279);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v226 = (uint64_t)v281;
        char v227 = v281[32];
        unsigned int v228 = v227 & 0x3F;
        unint64_t v229 = (unint64_t)((1 << v227) + 63) >> 6;
        size_t v230 = 8 * v229;
        uint64_t isStackAllocationSafe = swift_bridgeObjectRetain();
        if (v228 <= 0xD
          || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
        {
          __chkstk_darwin(isStackAllocationSafe);
          bzero((char *)v247 - ((v230 + 15) & 0x3FFFFFFFFFFFFFF0), v230);
          uint64_t v232 = v229;
          uint64_t v233 = v269;
          uint64_t v234 = sub_E9C94((uint64_t)v247 - ((v230 + 15) & 0x3FFFFFFFFFFFFFF0), v232, v226, (uint64_t)v213);
          uint64_t v269 = v233;
          if (v233) {
            goto LABEL_281;
          }
          uint64_t v161 = v234;
          swift_bridgeObjectRelease();
        }
        else
        {
          long long v235 = (void *)swift_slowAlloc();
          bzero(v235, v230);
          uint64_t v236 = v229;
          uint64_t v237 = v269;
          uint64_t v238 = sub_E9C94((uint64_t)v235, v236, v226, (uint64_t)v213);
          uint64_t v269 = v237;
          if (v237) {
            goto LABEL_282;
          }
          uint64_t v161 = v238;
          swift_bridgeObjectRelease();
          swift_slowDealloc();
        }
        swift_bridgeObjectRelease();
        sub_7A018((uint64_t)&v287);
        swift_bridgeObjectRelease();
        if (!*(void *)(v161 + 16))
        {
          swift_bridgeObjectRelease_n();
          swift_release();
          goto LABEL_244;
        }
        int64_t v167 = v273 + 1;
        if (v273 + 1 != v268)
        {
          if (v265 < v266 || v167 >= v268) {
            goto LABEL_268;
          }
          goto LABEL_160;
        }
        swift_release();
        swift_bridgeObjectRelease_n();
LABEL_130:
        unint64_t v139 = sub_56168(v261);
        unint64_t v137 = v278;
        uint64_t v138 = v264;
        unint64_t v136 = v262;
        if (v140)
        {
          uint64_t v144 = v260;
          int v145 = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v146 = v144;
          *(void *)&long long v287 = v144;
          if (!v145)
          {
            sub_12095C();
            uint64_t v146 = v287;
          }
          unint64_t v260 = v146;
          sub_14D01C(v139, v146);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
LABEL_244:
          unint64_t v137 = v278;
          uint64_t v138 = v264;
          unint64_t v136 = v262;
          if (!v262) {
            goto LABEL_136;
          }
          goto LABEL_132;
        }
        if (v262) {
          goto LABEL_132;
        }
LABEL_136:
        BOOL v43 = __OFADD__(v138, 1);
        uint64_t v147 = v138 + 1;
        if (v43) {
          goto LABEL_277;
        }
        if (v147 >= v259) {
          goto LABEL_254;
        }
        unint64_t v148 = *(void *)(v258 + 8 * v147);
        if (v148) {
          goto LABEL_146;
        }
        uint64_t v149 = v147 + 1;
        if (v147 + 1 >= v259) {
          goto LABEL_254;
        }
        unint64_t v148 = *(void *)(v258 + 8 * v149);
        if (v148) {
          goto LABEL_145;
        }
        uint64_t v149 = v147 + 2;
        if (v147 + 2 >= v259) {
          goto LABEL_254;
        }
        unint64_t v148 = *(void *)(v258 + 8 * v149);
        if (v148) {
          goto LABEL_145;
        }
        uint64_t v149 = v147 + 3;
        if (v147 + 3 >= v259) {
          goto LABEL_254;
        }
        unint64_t v148 = *(void *)(v258 + 8 * v149);
        if (!v148)
        {
          while (1)
          {
            uint64_t v147 = v149 + 1;
            if (__OFADD__(v149, 1)) {
              goto LABEL_278;
            }
            if (v147 >= v259) {
              goto LABEL_254;
            }
            unint64_t v148 = *(void *)(v258 + 8 * v147);
            ++v149;
            if (v148) {
              goto LABEL_146;
            }
          }
        }
LABEL_145:
        uint64_t v147 = v149;
LABEL_146:
        uint64_t v142 = (v148 - 1) & v148;
        uint64_t v264 = v147;
        unint64_t v143 = __clz(__rbit64(v148)) + (v147 << 6);
        goto LABEL_147;
      }
      unint64_t v188 = *(void *)(v180 + 8 * v184);
      if (!v188)
      {
        uint64_t v189 = v184 + 1;
        if (v184 + 1 >= (uint64_t)v282) {
          goto LABEL_209;
        }
        unint64_t v188 = *(void *)(v180 + 8 * v189);
        if (!v188)
        {
          uint64_t v189 = v184 + 2;
          if (v184 + 2 >= (uint64_t)v282) {
            goto LABEL_209;
          }
          unint64_t v188 = *(void *)(v180 + 8 * v189);
          if (!v188)
          {
            uint64_t v189 = v184 + 3;
            if (v184 + 3 >= (uint64_t)v282) {
              goto LABEL_209;
            }
            unint64_t v188 = *(void *)(v180 + 8 * v189);
            if (!v188)
            {
              uint64_t v189 = v184 + 4;
              if (v184 + 4 >= (uint64_t)v282) {
                goto LABEL_209;
              }
              unint64_t v188 = *(void *)(v180 + 8 * v189);
              if (!v188)
              {
                uint64_t v189 = v184 + 5;
                if (v184 + 5 >= (uint64_t)v282) {
                  goto LABEL_209;
                }
                unint64_t v188 = *(void *)(v180 + 8 * v189);
                if (!v188)
                {
                  while (1)
                  {
                    uint64_t v184 = v189 + 1;
                    if (__OFADD__(v189, 1)) {
                      break;
                    }
                    if (v184 >= (uint64_t)v282) {
                      goto LABEL_209;
                    }
                    unint64_t v188 = *(void *)(v180 + 8 * v184);
                    ++v189;
                    if (v188) {
                      goto LABEL_181;
                    }
                  }
LABEL_271:
                  __break(1u);
LABEL_272:
                  __break(1u);
LABEL_273:
                  __break(1u);
                  goto LABEL_274;
                }
              }
            }
          }
        }
        uint64_t v184 = v189;
      }
LABEL_181:
      unint64_t v183 = (v188 - 1) & v188;
      unint64_t v187 = __clz(__rbit64(v188)) + (v184 << 6);
    }
    uint64_t v190 = *(void *)(*(void *)(v179 + 56) + 8 * v187);
    uint64_t v191 = sub_AE3D8(v190);
    uint64_t v192 = v283;
    uint64_t v193 = sub_AE3D8((uint64_t)v283);
    int64_t v194 = v193 + v191;
    if (__OFADD__(v193, v191)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v195 = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (!v195 || (int64_t v196 = (unint64_t)v192[3] >> 1, v196 < v194))
    {
      if (v192[2] <= v194) {
        int64_t v197 = v194;
      }
      else {
        int64_t v197 = v192[2];
      }
      uint64_t v192 = sub_41974(v195, v197, 1, v192);
      uint64_t v283 = v192;
      int64_t v196 = (unint64_t)v192[3] >> 1;
    }
    uint64_t v198 = v192[2];
    uint64_t v199 = v196 - v198;
    if (sub_AE3D8(v190))
    {
      if (v199 < v191)
      {
        __break(1u);
LABEL_256:
        __break(1u);
LABEL_257:
        __break(1u);
        goto LABEL_258;
      }
      if (v191 < 0
        || ((unint64_t v200 = (unint64_t)&v192[70 * v198 + 4], v190 + 32 < v200 + 560 * v191)
          ? (BOOL v201 = v200 >= v190 + 32 + 560 * v191)
          : (BOOL v201 = 1),
            !v201))
      {
        sub_1FC2B0();
        __break(1u);
LABEL_280:
        sub_1FC770();
        __break(1u);
LABEL_281:
        swift_bridgeObjectRelease();
        swift_willThrow();
        swift_errorRelease();
        __break(1u);
LABEL_282:
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_slowDealloc();
        __break(1u);
        JUMPOUT(0xDEE30);
      }
      swift_arrayInitWithCopy();
      uint64_t v179 = v185;
      if (v191)
      {
        uint64_t v202 = v192[2];
        BOOL v43 = __OFADD__(v202, v191);
        uint64_t v203 = v202 + v191;
        if (v43) {
          goto LABEL_256;
        }
        v192[2] = v203;
      }
    }
    else
    {
      if (v191 > 0) {
        goto LABEL_251;
      }
      uint64_t v191 = 0;
      uint64_t v179 = v185;
    }
    uint64_t v204 = swift_bridgeObjectRelease();
    if (v191 == v199) {
      uint64_t v283 = v192;
    }
    else {
      AuthorRecommendationSource.id.getter(v204);
    }
  }
  __break(1u);
LABEL_251:
  __break(1u);
LABEL_252:
  __break(1u);
LABEL_253:
  __break(1u);
LABEL_254:
  swift_release();
  unint64_t v239 = v260;
LABEL_259:
  sub_52958((uint64_t)v271);
  uint64_t result = sub_52958((uint64_t)v276);
  unint64_t v242 = v284;
  unint64_t v241 = v285;
  long long v243 = v253;
  *(void *)long long v253 = v249;
  *((void *)v243 + 1) = v248;
  *((void *)v243 + 2) = v254;
  *((void *)v243 + 3) = v274;
  *((void *)v243 + 4) = v255;
  *((void *)v243 + 5) = v257;
  *((void *)v243 + 6) = v256;
  *((void *)v243 + 7) = v275;
  *((void *)v243 + 8) = v250;
  *((void *)v243 + 9) = v239;
  *((void *)v243 + 10) = v277;
  *((void *)v243 + 11) = v241;
  uint64_t v244 = v267;
  *((void *)v243 + 12) = v242;
  *((void *)v243 + 13) = v244;
  v243[14] = a11;
  uint64_t v245 = v252;
  *((void *)v243 + 15) = v251;
  *((void *)v243 + 16) = v245;
  v243[17] = a10;
  *((void *)v243 + 18) = a12;
  *((void *)v243 + 19) = a13;
  *((void *)v243 + 20) = a14;
  *((void *)v243 + 21) = a15;
  uint64_t v246 = v263;
  *((void *)v243 + 22) = a16;
  *((void *)v243 + 23) = v246;
  *((void *)v243 + 24) = a18;
  *((void *)v243 + 25) = a19;
  *((void *)v243 + 26) = a20;
  return result;
}

uint64_t sub_DEE60(uint64_t *a1)
{
  uint64_t v3 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v120 = *(void *)(v3 - 8);
  uint64_t v121 = v3;
  __chkstk_darwin(v3);
  uint64_t v126 = (uint64_t)&v116 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26F7C0);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v116 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v147 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v8 = *(void *)(v147 - 8);
  uint64_t v9 = __chkstk_darwin(v147);
  uint64_t v133 = (char *)&v116 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v144 = (uint64_t)&v116 - v11;
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  long long v15 = v1[7];
  long long v190 = v1[6];
  long long v191 = v15;
  long long v192 = v1[8];
  uint64_t v16 = *((void *)v1 + 19);
  uint64_t v193 = *((void *)v1 + 18);
  long long v17 = v1[3];
  long long v186 = v1[2];
  long long v187 = v17;
  long long v18 = v1[5];
  long long v188 = v1[4];
  long long v189 = v18;
  long long v19 = v1[1];
  long long v184 = *v1;
  long long v185 = v19;
  long long v20 = v1[11];
  long long v180 = v1[10];
  long long v181 = v20;
  long long v182 = v1[12];
  uint64_t v183 = *((void *)v1 + 26);
  uint64_t v179 = _swiftEmptySetSingleton;
  uint64_t v178 = _swiftEmptySetSingleton;
  char v177 = _swiftEmptySetSingleton;
  if (!v14 || v16 < 1) {
    goto LABEL_98;
  }
  uint64_t v21 = v16;
  unint64_t v148 = sub_1617D8((uint64_t)_swiftEmptyArrayStorage);
  long long v22 = v1[7];
  long long v170 = v1[6];
  long long v171 = v22;
  long long v172 = v1[8];
  uint64_t v23 = *((void *)v1 + 18);
  long long v24 = v1[3];
  long long v166 = v1[2];
  long long v167 = v24;
  long long v25 = v1[5];
  long long v168 = v1[4];
  long long v169 = v25;
  long long v26 = v1[1];
  long long v164 = *v1;
  long long v165 = v26;
  uint64_t v173 = v23;
  uint64_t v143 = v21;
  uint64_t v174 = v21;
  long long v27 = v1[11];
  v175[0] = v1[10];
  v175[1] = v27;
  v175[2] = v1[12];
  uint64_t v176 = *((void *)v1 + 26);
  uint64_t v28 = sub_E35D8();
  uint64_t v119 = *((void *)v28 + 2);
  if (!v119)
  {
    swift_bridgeObjectRelease();
    char v113 = 0;
    uint64_t v114 = _swiftEmptyArrayStorage;
LABEL_101:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_102;
  }
  unint64_t v29 = 0;
  uint64_t v125 = 0;
  uint64_t v30 = v14 + 56;
  uint64_t v118 = v28 + 32;
  uint64_t v142 = v175;
  int v128 = _swiftEmptyArrayStorage;
  char v129 = v7;
  unint64_t v141 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v31 = (uint64_t)v133;
  uint64_t v131 = v12;
  uint64_t v132 = v13;
  uint64_t v130 = v14 + 56;
  uint64_t v117 = v28;
  while (2)
  {
    char v32 = &v118[152 * v29];
    long long v33 = *((_OWORD *)v32 + 2);
    long long v34 = *((_OWORD *)v32 + 3);
    long long v35 = *((_OWORD *)v32 + 5);
    long long v158 = *((_OWORD *)v32 + 4);
    long long v159 = v35;
    long long v156 = v33;
    long long v157 = v34;
    long long v36 = *((_OWORD *)v32 + 6);
    long long v37 = *((_OWORD *)v32 + 7);
    long long v38 = *((_OWORD *)v32 + 8);
    char v163 = v32[144];
    long long v161 = v37;
    long long v162 = v38;
    long long v160 = v36;
    long long v39 = *((_OWORD *)v32 + 1);
    long long v154 = *(_OWORD *)v32;
    long long v155 = v39;
    uint64_t v40 = 1 << *(unsigned char *)(v14 + 32);
    if (v40 < 64) {
      uint64_t v41 = ~(-1 << v40);
    }
    else {
      uint64_t v41 = -1;
    }
    unint64_t v151 = v41 & *(void *)(v14 + 56);
    uint64_t v145 = *((void *)&v161 + 1);
    uint64_t v146 = v162;
    uint64_t v135 = v154;
    LODWORD(v42) = BYTE8(v154);
    uint64_t v122 = v155;
    unint64_t v123 = v29 + 1;
    int v124 = BYTE8(v155);
    sub_54834((uint64_t)&v154);
    int64_t v149 = (unint64_t)(v40 + 63) >> 6;
    swift_bridgeObjectRetain();
    int64_t v43 = 0;
    int v127 = v42;
LABEL_10:
    unint64_t v44 = v151;
    while (1)
    {
      while (v44)
      {
        unint64_t v45 = __clz(__rbit64(v44));
        v44 &= v44 - 1;
        unint64_t v46 = v45 | (v43 << 6);
        if ((v13 & 1) == 0)
        {
LABEL_28:
          int v50 = *(unsigned __int8 *)(*(void *)(v14 + 48) + v46);
          int64_t v150 = v43;
          unint64_t v151 = v44;
          if (v50)
          {
            if (v50 != 1) {
              goto LABEL_36;
            }
            if (v42)
            {
LABEL_35:
              swift_bridgeObjectRelease();
              int64_t v43 = v150;
              unint64_t v44 = v151;
              goto LABEL_36;
            }
          }
          else if ((v42 & 1) == 0)
          {
            goto LABEL_35;
          }
          char v51 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          int64_t v43 = v150;
          unint64_t v44 = v151;
          if (v51)
          {
LABEL_36:
            unint64_t v52 = v148;
            if (*(void *)(v148 + 16) && (v53 = sub_4CC78(v50), int64_t v43 = v150, v44 = v151, (v54 & 1) != 0))
            {
              if (*(void *)(*(void *)(v52 + 56) + 8 * v53) < v12) {
                goto LABEL_41;
              }
            }
            else if (v12 > 0)
            {
LABEL_41:
              if ((v146 & 1) == 0) {
                goto LABEL_57;
              }
              unint64_t v55 = v177;
              if (!v177[2]) {
                goto LABEL_57;
              }
              uint64_t v56 = sub_1FC7D0();
              uint64_t v57 = -1 << *((unsigned char *)v55 + 32);
              unint64_t v58 = v56 & ~v57;
              if (((*(void *)((char *)v55 + ((v58 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v58) & 1) == 0) {
                goto LABEL_57;
              }
              uint64_t v59 = v55[6];
              if (*(void *)(v59 + 8 * v58) != v145)
              {
                uint64_t v60 = ~v57;
                while (1)
                {
                  unint64_t v58 = (v58 + 1) & v60;
                  if (((*(void *)((char *)v55 + ((v58 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v58) & 1) == 0) {
                    break;
                  }
                  if (*(void *)(v59 + 8 * v58) == v145) {
                    goto LABEL_48;
                  }
                }
LABEL_57:
                long long v170 = v190;
                long long v171 = v191;
                long long v172 = v192;
                long long v166 = v186;
                long long v167 = v187;
                long long v168 = v188;
                long long v169 = v189;
                long long v164 = v184;
                long long v165 = v185;
                uint64_t v173 = v193;
                uint64_t v69 = v142;
                uint64_t v174 = v143;
                long long v70 = v181;
                *uint64_t v142 = v180;
                v69[1] = v70;
                unsigned __int8 v69[2] = v182;
                *((void *)v69 + 6) = v183;
                v152[6] = v160;
                v152[7] = v161;
                v152[8] = v162;
                char v153 = v163;
                v152[2] = v156;
                v152[3] = v157;
                v152[4] = v158;
                v152[5] = v159;
                v152[0] = v154;
                v152[1] = v155;
                sub_E3B5C((uint64_t *)v152, (uint64_t)v7);
                if ((*v141)(v7, 1, v147) == 1)
                {
                  sub_55F38((uint64_t)v7, &qword_26F7C0);
                  int64_t v43 = v150;
                  goto LABEL_10;
                }
                uint64_t v71 = v144;
                sub_EDE6C((uint64_t)v7, v144, type metadata accessor for CollectionRecommendation);
                sub_EB6E8(v71, v31, type metadata accessor for CollectionRecommendation);
                int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
                int v134 = v50;
                if (EnumCaseMultiPayload == 9)
                {
                  uint64_t v73 = *(void *)v31;
                  uint64_t v74 = *(void *)(v31 + 16);
                  uint64_t v75 = *(void *)(v31 + 24);
                  uint64_t v76 = *(void *)(v31 + 32);
                  uint64_t v77 = *(void *)(v31 + 40);
                  uint64_t v139 = *(void *)(v31 + 48);
                  uint64_t v140 = v76;
                  uint64_t v78 = *(void *)(v31 + 56);
                  uint64_t v79 = *(void *)(v31 + 64);
                  uint64_t v137 = *(void *)(v31 + 72);
                  uint64_t v138 = v78;
                  long long v136 = *(_OWORD *)(v31 + 80);
                  char v80 = v178;
                  swift_bridgeObjectRetain();
                  sub_7B974(v74, v75, v140, v77, v139, v138, v79);
                  if (v80[2]
                    && (uint64_t v81 = sub_1FC7D0(),
                        uint64_t v82 = -1 << *((unsigned char *)v80 + 32),
                        unint64_t v83 = v81 & ~v82,
                        uint64_t v12 = v131,
                        LOBYTE(v13) = v132,
                        uint64_t v30 = v130,
                        ((*(void *)((char *)v80 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v83) & 1) != 0))
                  {
                    uint64_t v84 = v80[6];
                    uint64_t v7 = v129;
                    uint64_t v31 = (uint64_t)v133;
                    if (*(void *)(v84 + 8 * v83) == v73)
                    {
LABEL_65:
                      swift_bridgeObjectRelease();
                      sub_73A4((uint64_t *)&v164, v135);
                      sub_37898(v144, type metadata accessor for CollectionRecommendation);
                      int64_t v43 = v150;
                      goto LABEL_10;
                    }
                    uint64_t v85 = ~v82;
                    while (1)
                    {
                      unint64_t v83 = (v83 + 1) & v85;
                      if (((*(void *)((char *)v80 + ((v83 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v83) & 1) == 0) {
                        break;
                      }
                      if (*(void *)(v84 + 8 * v83) == v73) {
                        goto LABEL_65;
                      }
                    }
                    swift_bridgeObjectRelease();
                  }
                  else
                  {
                    swift_bridgeObjectRelease();
                    uint64_t v7 = v129;
                  }
                  uint64_t v71 = v144;
                  LOBYTE(v50) = v134;
                }
                else
                {
                  sub_37898(v31, type metadata accessor for CollectionRecommendation);
                }
                uint64_t v86 = v126;
                sub_EB6E8(v71, v126, type metadata accessor for CollectionRecommendation);
                uint64_t v87 = v121;
                *(unsigned char *)(v86 + *(int *)(v121 + 20)) = v50;
                *(unsigned char *)(v86 + *(int *)(v87 + 24)) = 0;
                *(void *)(v86 + *(int *)(v87 + 28)) = 0;
                unint64_t v88 = (unint64_t)v128;
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v88 = sub_42C40(0, *(void *)(v88 + 16) + 1, 1, v88);
                }
                unint64_t v90 = *(void *)(v88 + 16);
                unint64_t v89 = *(void *)(v88 + 24);
                if (v90 >= v89 >> 1) {
                  unint64_t v88 = sub_42C40(v89 > 1, v90 + 1, 1, v88);
                }
                *(void *)(v88 + 16) = v90 + 1;
                unint64_t v91 = (*(unsigned __int8 *)(v120 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v120 + 80);
                int v128 = (void *)v88;
                sub_EDE6C(v126, v88 + v91 + *(void *)(v120 + 72) * v90, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                if ((v124 & 1) == 0)
                {
                  uint64_t v92 = v122;
                  sub_73A4((uint64_t *)&v164, v122);
                  sub_73A4((uint64_t *)&v164, v92);
                }
                sub_73A4((uint64_t *)&v164, v135);
                sub_52958((uint64_t)v125);
                unint64_t v93 = v148;
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                *(void *)&long long v164 = v93;
                unint64_t v96 = sub_4CC78(v134);
                uint64_t v97 = *(void *)(v93 + 16);
                BOOL v98 = (v95 & 1) == 0;
                uint64_t v99 = v97 + v98;
                uint64_t v31 = (uint64_t)v133;
                if (!__OFADD__(v97, v98))
                {
                  char v100 = v95;
                  if (*(void *)(v93 + 24) < v99)
                  {
                    sub_11B240(v99, isUniquelyReferenced_nonNull_native);
                    unint64_t v101 = sub_4CC78(v134);
                    if ((v100 & 1) == (v102 & 1))
                    {
                      unint64_t v96 = v101;
                      goto LABEL_81;
                    }
LABEL_109:
                    uint64_t result = sub_1FC770();
                    __break(1u);
                    return result;
                  }
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_12265C();
                  }
LABEL_81:
                  LOBYTE(v13) = v132;
                  uint64_t v103 = (void *)v164;
                  swift_bridgeObjectRelease();
                  if (v100)
                  {
                    swift_bridgeObjectRetain();
                    goto LABEL_88;
                  }
                  v103[(v96 >> 6) + 8] |= 1 << v96;
                  *(unsigned char *)(v103[6] + v96) = v134;
                  *(void *)(v103[7] + 8 * v96) = 0;
                  uint64_t v104 = v103[2];
                  uint64_t v105 = v104 + 1;
                  BOOL v106 = __OFADD__(v104, 1);
                  swift_bridgeObjectRetain();
                  if (!v106)
                  {
                    v103[2] = v105;
                    uint64_t v31 = (uint64_t)v133;
LABEL_88:
                    uint64_t v107 = v103[7];
                    unint64_t v148 = (unint64_t)v103;
                    swift_bridgeObjectRelease();
                    uint64_t v108 = *(void *)(v107 + 8 * v96);
                    BOOL v109 = __OFADD__(v108, 1);
                    uint64_t v110 = v108 + 1;
                    uint64_t v12 = v131;
                    if (!v109)
                    {
                      *(void *)(v107 + 8 * v96) = v110;
                      uint64_t v111 = v128[2];
                      sub_37898(v144, type metadata accessor for CollectionRecommendation);
                      uint64_t v125 = sub_E3B54;
                      uint64_t v30 = v130;
                      int64_t v43 = v150;
                      if (v111 != v143) {
                        goto LABEL_10;
                      }
                      sub_7A018((uint64_t)&v154);
                      swift_bridgeObjectRelease();
                      swift_release();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      return (uint64_t)v128;
                    }
LABEL_107:
                    __break(1u);
                  }
                  __break(1u);
                  goto LABEL_109;
                }
LABEL_106:
                __break(1u);
                goto LABEL_107;
              }
LABEL_48:
              unint64_t v61 = v179;
              uint64_t v42 = v135;
              uint64_t v62 = sub_1FC7D0();
              uint64_t v63 = -1 << *((unsigned char *)v61 + 32);
              unint64_t v64 = v62 & ~v63;
              uint64_t v65 = v61 + 7;
              if (((*(void *)((char *)v61 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v64) & 1) == 0) {
                goto LABEL_92;
              }
              uint64_t v66 = v61[6];
              BOOL v67 = *(void *)(v66 + 8 * v64) == v42;
              LOBYTE(v42) = v127;
              int64_t v43 = v150;
              unint64_t v44 = v151;
              if (!v67)
              {
                uint64_t v68 = ~v63;
                unint64_t v64 = (v64 + 1) & v68;
                if (((*(void *)((char *)v65 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0) {
                  goto LABEL_91;
                }
                unint64_t v44 = v151;
                if (*(void *)(v66 + 8 * v64) != v135)
                {
                  unint64_t v64 = (v64 + 1) & v68;
                  if ((*(void *)((char *)v65 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64))
                  {
                    uint64_t v42 = v135;
                    while (*(void *)(v66 + 8 * v64) != v135)
                    {
                      unint64_t v64 = (v64 + 1) & v68;
                      if (((*(void *)((char *)v65 + ((v64 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v64) & 1) == 0) {
                        goto LABEL_92;
                      }
                    }
                  }
                  else
                  {
LABEL_91:
                    uint64_t v42 = v135;
LABEL_92:
                    char v112 = swift_isUniquelyReferenced_nonNull_native();
                    *(void *)&long long v164 = v61;
                    sub_C020(v42, v64, v112);
                    uint64_t v179 = (void *)v164;
                    swift_bridgeObjectRelease();
                  }
                  LOBYTE(v42) = v127;
                  int64_t v43 = v150;
                  goto LABEL_10;
                }
              }
            }
          }
        }
      }
      int64_t v47 = v43 + 1;
      if (__OFADD__(v43, 1))
      {
        __break(1u);
LABEL_105:
        __break(1u);
        goto LABEL_106;
      }
      if (v47 >= v149) {
        goto LABEL_95;
      }
      unint64_t v48 = *(void *)(v30 + 8 * v47);
      ++v43;
      if (!v48)
      {
        int64_t v43 = v47 + 1;
        if (v47 + 1 >= v149) {
          goto LABEL_95;
        }
        unint64_t v48 = *(void *)(v30 + 8 * v43);
        if (!v48)
        {
          int64_t v43 = v47 + 2;
          if (v47 + 2 >= v149) {
            goto LABEL_95;
          }
          unint64_t v48 = *(void *)(v30 + 8 * v43);
          if (!v48) {
            break;
          }
        }
      }
LABEL_27:
      unint64_t v44 = (v48 - 1) & v48;
      unint64_t v46 = __clz(__rbit64(v48)) + (v43 << 6);
      if ((v13 & 1) == 0) {
        goto LABEL_28;
      }
    }
    int64_t v49 = v47 + 3;
    if (v49 < v149)
    {
      unint64_t v48 = *(void *)(v30 + 8 * v49);
      if (!v48)
      {
        while (1)
        {
          int64_t v43 = v49 + 1;
          if (__OFADD__(v49, 1)) {
            goto LABEL_105;
          }
          if (v43 >= v149) {
            goto LABEL_95;
          }
          unint64_t v48 = *(void *)(v30 + 8 * v43);
          ++v49;
          if (v48) {
            goto LABEL_27;
          }
        }
      }
      int64_t v43 = v49;
      goto LABEL_27;
    }
LABEL_95:
    swift_release();
    sub_7A018((uint64_t)&v154);
    unint64_t v29 = v123;
    if (v123 == v119)
    {
      swift_bridgeObjectRelease();
      uint64_t v114 = v128;
      char v113 = v125;
      goto LABEL_101;
    }
    if (v123 < *((void *)v117 + 2)) {
      continue;
    }
    break;
  }
  __break(1u);
LABEL_98:
  char v113 = 0;
  uint64_t v114 = _swiftEmptyArrayStorage;
LABEL_102:
  sub_52958((uint64_t)v113);
  return (uint64_t)v114;
}

uint64_t sub_DFB7C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0x202020200A5BLL;
  unint64_t v23 = 0xE600000000000000;
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v21 = _swiftEmptyArrayStorage;
    sub_46588(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    uint64_t v7 = v21;
    do
    {
      sub_EB6E8(v8, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v10 = sub_E65B0();
      uint64_t v12 = v11;
      sub_37898((uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46588(0, v7[2] + 1, 1);
        uint64_t v7 = v21;
      }
      unint64_t v14 = v7[2];
      unint64_t v13 = v7[3];
      if (v14 >= v13 >> 1)
      {
        sub_46588(v13 > 1, v14 + 1, 1);
        uint64_t v7 = v21;
      }
      v7[2] = v14 + 1;
      long long v15 = &v7[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  uint64_t v21 = v7;
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v16 = sub_1FB7B0();
  long long v18 = v17;
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = v16;
  v24._object = v18;
  sub_1FB8F0(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 93;
  v25._object = (void *)0xE100000000000000;
  sub_1FB8F0(v25);
  return v22;
}

uint64_t sub_DFDD4(uint64_t a1)
{
  uint64_t v3 = sub_12124(&qword_26D588);
  unint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3 - 8);
  uint64_t v40 = (char *)&v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v39 = (uint64_t)&v37 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v37 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  long long v38 = (char *)&v37 - v13;
  __chkstk_darwin(v12);
  unint64_t v15 = (unint64_t)&v37 - v14;
  sub_EB6E8(a1, (uint64_t)&v37 - v14, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  uint64_t v16 = type metadata accessor for ScoredCollectionRecommendation();
  unint64_t v17 = *(void *)(v16 - 8);
  (*(void (**)(unint64_t, void, uint64_t, uint64_t))(v17 + 56))(v15, 0, 1, v16);
  uint64_t v18 = *v1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
LABEL_29:
  }
    uint64_t v18 = sub_42C74(0, *(void *)(v18 + 16) + 1, 1, v18);
  unint64_t v20 = *(void *)(v18 + 16);
  unint64_t v19 = *(void *)(v18 + 24);
  if (v20 >= v19 >> 1) {
    uint64_t v18 = sub_42C74(v19 > 1, v20 + 1, 1, v18);
  }
  *(void *)(v18 + 16) = v20 + 1;
  unint64_t v21 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v44 = *(void *)(v4 + 72);
  uint64_t result = sub_55844(v15, v18 + v21 + v44 * v20, &qword_26D588);
  *uint64_t v1 = v18;
  unint64_t v23 = *(void *)(v18 + 16);
  uint64_t v18 = (uint64_t)v38;
  if (v23 >= 3)
  {
    unint64_t v15 = v23 - 1;
    unint64_t v42 = v21;
    int64_t v43 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v17 + 48);
    while (1)
    {
      unint64_t v4 = v15 >> 1;
      unint64_t v17 = *v1;
      if (v15 >> 1 >= *(void *)(*v1 + 16))
      {
        __break(1u);
LABEL_24:
        __break(1u);
LABEL_25:
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v25 = v16;
      uint64_t v16 = v17 + v21;
      unint64_t v41 = v4 * v44;
      sub_EE0DC(v17 + v21 + v4 * v44, v18);
      long long v26 = *v43;
      uint64_t v27 = v25;
      uint64_t result = (*v43)(v18, 1, v25);
      if (result == 1) {
        break;
      }
      if ((int64_t)v15 >= *(void *)(v17 + 16)) {
        goto LABEL_24;
      }
      unint64_t v17 = v15 * v44;
      sub_EE0DC(v16 + v15 * v44, (uint64_t)v11);
      uint64_t v16 = v25;
      uint64_t result = v26((uint64_t)v11, 1, v25);
      if (result == 1) {
        goto LABEL_31;
      }
      uint64_t v28 = *(int *)(v25 + 28);
      double v29 = *(double *)(v18 + v28);
      double v30 = *(double *)&v11[v28];
      sub_37898((uint64_t)v11, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t result = sub_37898(v18, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      unint64_t v21 = v42;
      if (v30 >= v29) {
        return result;
      }
      if (v15 != v4)
      {
        unint64_t v31 = *v1;
        uint64_t v16 = *(void *)(*v1 + 16);
        if ((uint64_t)v15 >= v16) {
          goto LABEL_25;
        }
        uint64_t v18 = (uint64_t)v11;
        uint64_t v11 = v40;
        unint64_t v32 = v31 + v42;
        sub_EE0DC(v31 + v42 + v17, v39);
        if (v4 >= v16) {
          goto LABEL_26;
        }
        uint64_t v33 = v32 + v41;
        unint64_t v34 = v41;
        sub_EE0DC(v33, (uint64_t)v11);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        *uint64_t v1 = v31;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v31 = sub_984D0(v31);
          *uint64_t v1 = v31;
        }
        uint64_t v11 = (char *)v18;
        uint64_t v16 = v27;
        uint64_t v18 = (uint64_t)v38;
        if ((int64_t)v15 >= *(void *)(v31 + 16)) {
          goto LABEL_27;
        }
        unint64_t v36 = v31 + v42;
        unint64_t v21 = v42;
        sub_EE2F8((uint64_t)v40, v36 + v17);
        if (v4 >= *(void *)(*v1 + 16)) {
          goto LABEL_28;
        }
        uint64_t result = sub_EE2F8(v39, *v1 + v21 + v34);
      }
      BOOL v24 = v15 > 3;
      v15 >>= 1;
      if (!v24) {
        return result;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
  }
  return result;
}

uint64_t sub_E0230(uint64_t a1)
{
  uint64_t v3 = *(uint64_t **)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  double v4 = *(double *)(a1 + 16);
  long long v29 = *(_OWORD *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 40);
  LOBYTE(v6) = *(unsigned char *)(a1 + 48) & 1;
  uint64_t v7 = (void *)*v1;
  sub_EB640(a1);
  double v30 = v7;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  if ((result & 1) == 0)
  {
LABEL_20:
    uint64_t result = (uint64_t)sub_42EE4(0, v30[2] + 1, 1, v30);
    double v30 = (void *)result;
  }
  unint64_t v10 = v30[2];
  unint64_t v9 = v30[3];
  if (v10 >= v9 >> 1)
  {
    uint64_t result = (uint64_t)sub_42EE4((void *)(v9 > 1), v10 + 1, 1, v30);
    double v30 = (void *)result;
  }
  v30[2] = v10 + 1;
  uint64_t v11 = v30 + 4;
  uint64_t v12 = (uint64_t)&v30[7 * v10 + 4];
  *(void *)uint64_t v12 = v3;
  *(void *)(v12 + 8) = v2;
  *(double *)(v12 + 16) = v4;
  *(_OWORD *)(v12 + 24) = v29;
  *(void *)(v12 + 40) = v5;
  *(unsigned char *)(v12 + 48) = (_BYTE)v6;
  void *v19 = v30;
  if (v10 >= 2)
  {
    while (1)
    {
      unint64_t v14 = v10 >> 1;
      unint64_t v15 = v30[2];
      if (v10 >> 1 >= v15)
      {
        __break(1u);
LABEL_18:
        __break(1u);
LABEL_19:
        __break(1u);
        goto LABEL_20;
      }
      uint64_t v6 = &v11[7 * v14];
      uint64_t v5 = *v6;
      if (!*v6) {
        break;
      }
      if (v10 >= v15) {
        goto LABEL_18;
      }
      uint64_t v3 = &v11[7 * v10];
      uint64_t v2 = *v3;
      if (!*v3) {
        goto LABEL_22;
      }
      double v16 = *((double *)v6 + 1);
      double v4 = *((double *)v3 + 1);
      if (v4 >= v16) {
        return result;
      }
      if (v10 != v14)
      {
        uint64_t v25 = v6[4];
        uint64_t v26 = v6[2];
        uint64_t v28 = v6[3];
        *(void *)&long long v29 = v6[5];
        char v27 = *((unsigned char *)v6 + 48);
        uint64_t v22 = v3[3];
        uint64_t v23 = v3[2];
        uint64_t v20 = v3[5];
        uint64_t v21 = v3[4];
        char v24 = *((unsigned char *)v3 + 48);
        sub_EDE0C(v2);
        sub_EDE0C(v5);
        uint64_t v17 = *v3;
        *uint64_t v3 = v5;
        *((double *)v3 + 1) = v16;
        v3[2] = v26;
        v3[3] = v28;
        v3[4] = v25;
        v3[5] = v29;
        *((unsigned char *)v3 + 48) = v27;
        sub_EDDAC(v17);
        if (v14 >= v30[2]) {
          goto LABEL_19;
        }
        uint64_t v18 = *v6;
        *uint64_t v6 = v2;
        *((double *)v6 + 1) = v4;
        v6[2] = v23;
        v6[3] = v22;
        v6[4] = v21;
        v6[5] = v20;
        *((unsigned char *)v6 + 48) = v24;
        uint64_t result = sub_EDDAC(v18);
        uint64_t v11 = v30 + 4;
        void *v19 = v30;
      }
      BOOL v13 = v10 > 3;
      v10 >>= 1;
      if (!v13) {
        return result;
      }
    }
    __break(1u);
LABEL_22:
    __break(1u);
  }
  return result;
}

void *sub_E04A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v27 = (uint64_t)v23 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v26 = (uint64_t)v23 - v6;
  uint64_t v7 = sub_12124(&qword_26D588) - 8;
  uint64_t v8 = __chkstk_darwin(v7);
  unint64_t v10 = (char *)v23 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  BOOL v13 = (char *)v23 - v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v15 = a1 + ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80));
  uint64_t v16 = *(void *)(v11 + 72);
  v23[1] = a1;
  uint64_t v24 = v3;
  uint64_t v17 = (unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48);
  swift_bridgeObjectRetain();
  uint64_t v18 = _swiftEmptyArrayStorage;
  uint64_t v25 = v2;
  do
  {
    sub_EE0DC(v15, (uint64_t)v13);
    sub_55844((uint64_t)v13, (uint64_t)v10, &qword_26D588);
    if ((*v17)(v10, 1, v2) == 1)
    {
      sub_55F38((uint64_t)v10, &qword_26D588);
    }
    else
    {
      uint64_t v19 = v26;
      sub_EDE6C((uint64_t)v10, v26, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EDE6C(v19, v27, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v18 = (void *)sub_42C40(0, v18[2] + 1, 1, (unint64_t)v18);
      }
      unint64_t v21 = v18[2];
      unint64_t v20 = v18[3];
      if (v21 >= v20 >> 1) {
        uint64_t v18 = (void *)sub_42C40(v20 > 1, v21 + 1, 1, (unint64_t)v18);
      }
      unsigned __int16 v18[2] = v21 + 1;
      sub_EDE6C(v27, (uint64_t)v18+ ((*(unsigned __int8 *)(v24 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v24 + 80))+ *(void *)(v24 + 72) * v21, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v2 = v25;
    }
    v15 += v16;
    --v14;
  }
  while (v14);
  swift_bridgeObjectRelease();
  return v18;
}

void *sub_E07B0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = a1;
  swift_bridgeObjectRetain_n();
  uint64_t v3 = 0;
  uint64_t v4 = _swiftEmptyArrayStorage;
  uint64_t v15 = v2;
  do
  {
    uint64_t v6 = v2 + v3;
    uint64_t v7 = *(void *)(v2 + v3 + 32);
    if (v7)
    {
      long long v16 = *(_OWORD *)(v6 + 40);
      char v8 = *(unsigned char *)(v6 + 80);
      uint64_t v10 = *(void *)(v6 + 64);
      uint64_t v9 = *(void *)(v6 + 72);
      uint64_t v11 = *(void *)(v6 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v4 = sub_4300C(0, v4[2] + 1, 1, v4);
      }
      unint64_t v13 = v4[2];
      unint64_t v12 = v4[3];
      if (v13 >= v12 >> 1) {
        uint64_t v4 = sub_4300C((void *)(v12 > 1), v13 + 1, 1, v4);
      }
      v4[2] = v13 + 1;
      uint64_t v5 = &v4[7 * v13];
      v5[4] = v7;
      *(_OWORD *)(v5 + 5) = v16;
      v5[7] = v11;
      v5[8] = v10;
      v5[9] = v9;
      *((unsigned char *)v5 + 80) = v8 & 1;
      uint64_t v2 = v15;
    }
    v3 += 56;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease_n();
  return v4;
}

size_t sub_E0910(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_12124(&qword_26D588);
  unint64_t v219 = *(void *)(v5 - 8);
  int64_t v6 = v219;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v181 = (uint64_t)&v171 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v180 = (uint64_t)&v171 - v9;
  uint64_t v191 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v10 = __chkstk_darwin(v191);
  uint64_t v190 = (uint64_t)&v171 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v189 = (uint64_t)&v171 - v12;
  uint64_t v13 = sub_12124(&qword_26D928);
  uint64_t v14 = __chkstk_darwin(v13 - 8);
  uint64_t v203 = (char *)&v171 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  uint64_t v202 = (char *)&v171 - v16;
  uint64_t v201 = sub_12124(&qword_26D088);
  uint64_t v218 = *(void *)(v201 - 8);
  uint64_t v17 = __chkstk_darwin(v201);
  long long v188 = (char *)&v171 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v187 = (char *)&v171 - v19;
  uint64_t v20 = type metadata accessor for ScoredCollectionRecommendation();
  int64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v174 = (uint64_t)&v171 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = __chkstk_darwin(v22);
  uint64_t v179 = (uint64_t)&v171 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  uint64_t v173 = (uint64_t)&v171 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v178 = (uint64_t)&v171 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  unint64_t v32 = (char *)&v171 - v31;
  __chkstk_darwin(v30);
  unint64_t v34 = (char *)&v171 - v33;
  long long v35 = v2[11];
  long long v242 = v2[10];
  long long v243 = v35;
  long long v244 = v2[12];
  uint64_t v245 = *((void *)v2 + 26);
  long long v36 = v2[7];
  long long v238 = v2[6];
  long long v239 = v36;
  long long v37 = v2[9];
  long long v240 = v2[8];
  long long v241 = v37;
  long long v38 = v2[3];
  long long v234 = v2[2];
  long long v235 = v38;
  long long v39 = v2[5];
  long long v236 = v2[4];
  long long v237 = v39;
  long long v40 = v2[1];
  long long v232 = *v2;
  long long v233 = v40;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_EBF58(a1, a2, &v223);
  uint64_t v41 = swift_allocObject();
  sub_12124(&qword_26D580);
  int64_t v42 = v6;
  int64_t v43 = v21;
  uint64_t v44 = v20;
  unint64_t v45 = (*(unsigned __int8 *)(v219 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v219 + 80);
  uint64_t v177 = *(void *)(v42 + 72);
  uint64_t v46 = swift_allocObject();
  *(_OWORD *)(v46 + 16) = xmmword_1FD2A0;
  unint64_t v176 = v45;
  (*(void (**)(unint64_t, uint64_t, uint64_t, uint64_t))(v43 + 56))(v46 + v45, 1, 1, v20);
  *(void *)(v41 + 16) = v46;
  uint64_t v47 = a1;
  uint64_t v194 = v41 + 16;
  uint64_t v48 = swift_allocObject();
  long long v49 = v243;
  *(_OWORD *)(v48 + 184) = v242;
  *(_OWORD *)(v48 + 200) = v49;
  *(_OWORD *)(v48 + 216) = v244;
  long long v50 = v239;
  *(_OWORD *)(v48 + 120) = v238;
  *(_OWORD *)(v48 + 136) = v50;
  long long v51 = v241;
  *(_OWORD *)(v48 + 152) = v240;
  *(_OWORD *)(v48 + 168) = v51;
  long long v52 = v235;
  *(_OWORD *)(v48 + 56) = v234;
  *(_OWORD *)(v48 + 72) = v52;
  long long v53 = v237;
  *(_OWORD *)(v48 + 88) = v236;
  *(_OWORD *)(v48 + 104) = v53;
  long long v54 = v233;
  *(_OWORD *)(v48 + 24) = v232;
  *(void *)(v48 + 16) = v41;
  *(void *)(v48 + 232) = v245;
  uint64_t v205 = v48;
  *(_OWORD *)(v48 + 40) = v54;
  unint64_t v222 = _swiftEmptyArrayStorage;
  uint64_t v55 = *(void *)(a1 + 16);
  swift_retain();
  sub_EDFA0((uint64_t)&v232);
  swift_bridgeObjectRetain();
  uint64_t v175 = v41;
  swift_retain();
  sub_EDFA0((uint64_t)&v232);
  int64_t v207 = (int *)v44;
  uint64_t v220 = a1;
  if (v55)
  {
    unint64_t v56 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
    unint64_t v219 = v43;
    uint64_t v57 = *(void *)(v43 + 72);
    uint64_t v58 = v47 + v56;
    uint64_t v59 = _swiftEmptyArrayStorage;
    do
    {
      sub_EB6E8(v58, (uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      if (v34[*(int *)(v44 + 24)] == 1)
      {
        sub_EDE6C((uint64_t)v34, (uint64_t)v32, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_46A20(0, v59[2] + 1, 1);
        }
        uint64_t v59 = v222;
        unint64_t v61 = v222[2];
        unint64_t v60 = v222[3];
        if (v61 >= v60 >> 1)
        {
          sub_46A20(v60 > 1, v61 + 1, 1);
          uint64_t v59 = v222;
        }
        v59[2] = v61 + 1;
        sub_EDE6C((uint64_t)v32, (uint64_t)v59 + v56 + v61 * v57, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
        uint64_t v44 = (uint64_t)v207;
      }
      else
      {
        sub_37898((uint64_t)v34, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      }
      v58 += v57;
      --v55;
    }
    while (v55);
    uint64_t v62 = v222;
    int64_t v43 = v219;
  }
  else
  {
    uint64_t v62 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  uint64_t v63 = v62[2];
  uint64_t v64 = swift_release();
  uint64_t v66 = v202;
  uint64_t v65 = v203;
  uint64_t v67 = v201;
  if (v63)
  {
    uint64_t v68 = 0;
  }
  else
  {
    __chkstk_darwin(v64);
    *(&v171 - 4) = (uint64_t)&v223;
    *(&v171 - 3) = (uint64_t)&v232;
    long long v169 = sub_EDF94;
    uint64_t v170 = v205;
    uint64_t v69 = swift_bridgeObjectRetain();
    uint64_t v68 = 0;
    sub_1572B0(v69, (void (*)(unsigned char *, uint64_t *))sub_EE154);
    swift_bridgeObjectRelease();
  }
  uint64_t v70 = v194;
  swift_beginAccess();
  if (*(void *)(*(void *)v70 + 16) == 1 && v63 < (uint64_t)v234)
  {
    v247[0] = *((void *)&v243 + 1);
    uint64_t v192 = *(void *)(*((void *)&v243 + 1) + 16);
    if (v192)
    {
      int64_t v71 = v43;
      uint64_t v72 = v244;
      uint64_t v246 = v244;
      uint64_t v182 = *((void *)&v243 + 1) + 32;
      uint64_t v183 = *((void *)&v243 + 1);
      uint64_t v208 = v244 + 32;
      uint64_t v195 = (unsigned int (**)(char *, uint64_t, uint64_t))(v218 + 48);
      uint64_t v210 = *(void *)(v244 + 16);
      long long v186 = (void (**)(char *, char *, uint64_t))(v218 + 32);
      long long v185 = (void (**)(uint64_t, char *, uint64_t))(v218 + 16);
      long long v172 = (unsigned int (**)(uint64_t, uint64_t, int *))(v71 + 48);
      long long v184 = (void (**)(char *, uint64_t))(v218 + 8);
      swift_bridgeObjectRetain();
      uint64_t v73 = v183;
      unint64_t v74 = 0;
      uint64_t v199 = "ry";
      unint64_t v200 = "http://localhost:18060";
      int64_t v197 = "booksYouMightLike";
      uint64_t v198 = "booksBySuggestedAuthors";
      int64_t v196 = "mangaYouMightLike";
      uint64_t v204 = v72;
      do
      {
        if (v74 >= *(void *)(v73 + 16)) {
          goto LABEL_114;
        }
        if (v210)
        {
          unint64_t v193 = v74;
          uint64_t v213 = *(unsigned __int8 *)(v182 + v74);
          uint64_t v75 = v227;
          swift_bridgeObjectRetain();
          unint64_t v76 = 0;
          uint64_t v209 = v75;
          while (2)
          {
            if (v76 >= *(void *)(v72 + 16))
            {
              __break(1u);
LABEL_112:
              __break(1u);
LABEL_113:
              __break(1u);
LABEL_114:
              __break(1u);
LABEL_115:
              __break(1u);
LABEL_116:
              __break(1u);
LABEL_117:
              __break(1u);
LABEL_118:
              __break(1u);
LABEL_119:
              LODWORD(v170) = 0;
              long long v169 = (uint64_t (*)(uint64_t))(&dword_1C + 1);
              sub_1FC220();
              __break(1u);
              JUMPOUT(0xE20C4);
            }
            int v212 = *(unsigned __int8 *)(v208 + v76);
            if (*(void *)(v75 + 16))
            {
              unint64_t v78 = sub_4C7F4(v213);
              uint64_t v79 = _swiftEmptyDictionarySingleton;
              if (v80)
              {
                uint64_t v79 = *(void **)(*(void *)(v75 + 56) + 8 * v78);
                swift_bridgeObjectRetain();
              }
            }
            else
            {
              uint64_t v79 = _swiftEmptyDictionarySingleton;
            }
            uint64_t v81 = v79[2];
            uint64_t v220 = v76;
            if (v81 && (unint64_t v82 = sub_4CC78(v212), (v83 & 1) != 0)) {
              uint64_t v84 = *(void *)(v79[7] + 8 * v82);
            }
            else {
              uint64_t v84 = 0;
            }
            ++v220;
            swift_bridgeObjectRelease();
            switch(v213)
            {
              case 1:
                uint64_t v77 = swift_bridgeObjectRelease();
                goto LABEL_26;
              default:
                char v85 = sub_1FC5F0();
                uint64_t v77 = swift_bridgeObjectRelease();
                if (v85)
                {
LABEL_26:
                  if (v84 > 0) {
                    goto LABEL_27;
                  }
                }
                else if (v84 == 0x7FFFFFFFFFFFFFFFLL)
                {
                  goto LABEL_27;
                }
                uint64_t v86 = v223;
                switch((int)v213)
                {
                  case 1:
                    unint64_t v87 = v240;
                    swift_bridgeObjectRetain();
                    uint64_t v88 = swift_bridgeObjectRetain();
                    uint64_t v89 = sub_EB758(v88, v86, v212);
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
                    if ((v87 & 0x8000000000000000) != 0) {
                      goto LABEL_112;
                    }
                    if (v87)
                    {
                      if (*(void *)(v89 + 16) >= v87) {
                        unint64_t v90 = v87;
                      }
                      else {
                        unint64_t v90 = *(void *)(v89 + 16);
                      }
                    }
                    else
                    {
                      unint64_t v90 = 0;
                    }
                    sub_1FC730();
                    swift_unknownObjectRetain_n();
                    unint64_t v101 = (void *)swift_dynamicCastClass();
                    if (!v101)
                    {
                      swift_bridgeObjectRelease();
                      unint64_t v101 = _swiftEmptyArrayStorage;
                    }
                    uint64_t v102 = v101[2];
                    swift_release();
                    uint64_t v206 = v68;
                    if (v102 == v90)
                    {
                      uint64_t v103 = (void *)swift_dynamicCastClass();
                      uint64_t v104 = v207;
                      if (!v103)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v103 = _swiftEmptyArrayStorage;
                      }
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v103 = sub_4BE8C(v89, v89 + 32, 0, (2 * v90) | 1);
                      uint64_t v104 = v207;
                    }
                    swift_bridgeObjectRelease();
                    int64_t v105 = v103[2];
                    if (v105)
                    {
                      v221[0] = _swiftEmptyArrayStorage;
                      sub_467B8(0, v105, 0);
                      uint64_t v106 = 0;
                      uint64_t v107 = (void *)v221[0];
                      uint64_t v211 = v103;
                      do
                      {
                        uint64_t v218 = v103[v106 + 4];
                        int v217 = LOBYTE(v103[v106 + 5]);
                        uint64_t v216 = v103[v106 + 6];
                        int v215 = LOBYTE(v103[v106 + 7]);
                        uint64_t v108 = v103[v106 + 8];
                        char v109 = v103[v106 + 9];
                        uint64_t v110 = v103[v106 + 10];
                        uint64_t v214 = v103[v106 + 11];
                        uint64_t v111 = v103[v106 + 12];
                        uint64_t v112 = v103[v106 + 13];
                        sub_5480C(v108, v109);
                        v221[0] = v107;
                        unint64_t v113 = v107[2];
                        unint64_t v114 = v107[3];
                        unint64_t v219 = v113 + 1;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (v113 >= v114 >> 1)
                        {
                          sub_467B8(v114 > 1, v219, 1);
                          uint64_t v107 = (void *)v221[0];
                        }
                        uint64_t v115 = v218;
                        v107[2] = v219;
                        uint64_t v116 = &v107[10 * v113];
                        v116[4] = v115;
                        *((unsigned char *)v116 + 40) = v217;
                        v116[6] = v216;
                        *((unsigned char *)v116 + 56) = v215;
                        v116[8] = v108;
                        *((unsigned char *)v116 + 72) = v109;
                        uint64_t v117 = v214;
                        v116[10] = v110;
                        v116[11] = v117;
                        v116[12] = v111;
                        v116[13] = v112;
                        v106 += 19;
                        --v105;
                        uint64_t v103 = v211;
                      }
                      while (v105);
                      swift_release();
                      uint64_t v66 = v202;
                      uint64_t v65 = v203;
                      uint64_t v67 = v201;
                      uint64_t v104 = v207;
                    }
                    else
                    {
                      swift_release();
                      uint64_t v107 = _swiftEmptyArrayStorage;
                    }
                    uint64_t v68 = v206;
                    uint64_t v72 = v204;
                    if (v107[2] < *((uint64_t *)&v239 + 1)) {
                      goto LABEL_85;
                    }
                    v221[0] = v107;
                    sub_12124(&qword_26D6A0);
                    sub_52CC0(&qword_26D930, &qword_26D6A0);
                    sub_1FB3D0();
                    if ((*v195)(v66, 1, v67) == 1)
                    {
                      uint64_t v118 = (uint64_t)v66;
                      goto LABEL_88;
                    }
                    long double v135 = *((double *)&v240 + 1);
                    long long v136 = v187;
                    (*v186)(v187, v66, v67);
                    uint64_t v137 = v189;
                    (*v185)(v189, v136, v67);
                    swift_storeEnumTagMultiPayload();
                    double v138 = sub_1EFB9C(v135);
                    uint64_t v139 = v178;
                    sub_EB6E8(v137, v178, type metadata accessor for CollectionRecommendation);
                    *(unsigned char *)(v139 + v104[5]) = v212;
                    *(unsigned char *)(v139 + v104[6]) = 1;
                    *(double *)(v139 + v104[7]) = v138;
                    uint64_t v140 = v245;
                    uint64_t v141 = v194;
                    swift_beginAccess();
                    uint64_t v142 = *(void *)(*(void *)v141 + 16);
                    BOOL v143 = v142 <= v140;
                    uint64_t v144 = v180;
                    if (v143) {
                      goto LABEL_95;
                    }
                    if (!v142) {
                      goto LABEL_116;
                    }
                    if (v142 == 1) {
                      goto LABEL_119;
                    }
                    sub_EE0DC(*(void *)v141 + v176 + v177, v180);
                    if ((*v172)(v144, 1, v104) == 1) {
                      goto LABEL_117;
                    }
                    uint64_t v145 = v144;
                    uint64_t v146 = v173;
                    sub_EDE6C(v145, v173, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                    double v147 = *(double *)(v146 + v104[7]);
                    sub_37898(v146, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                    uint64_t v72 = v204;
                    if (v147 < v138)
                    {
                      sub_E6EC4();
LABEL_95:
                      sub_DFDD4(v139);
                      uint64_t v72 = v204;
                    }
                    swift_endAccess();
                    sub_37898(v139, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                    sub_37898(v189, type metadata accessor for CollectionRecommendation);
                    (*v184)(v187, v67);
                    break;
                  case 2:
                    __chkstk_darwin(v77);
                    long long v169 = (uint64_t (*)(uint64_t))&v232;
                    uint64_t v93 = __chkstk_darwin(*((void *)&v237 + 1));
                    *(&v171 - 10) = v94;
                    *(&v171 - 9) = v86;
                    *((unsigned char *)&v171 - 64) = v212;
                    *(&v171 - 7) = v95;
                    *(&v171 - 6) = (uint64_t)sub_EE148;
                    *(&v171 - 5) = v96;
                    *(&v171 - 4) = (uint64_t)sub_EDF94;
                    *(&v171 - 3) = v205;
                    LOBYTE(v169) = 1;
                    sub_EBBF4(v93, (void (*)(unsigned char *, uint64_t))sub_EE150);
                    break;
                  case 3:
                    uint64_t v91 = __chkstk_darwin(v237);
                    *(&v171 - 10) = v92;
                    *(&v171 - 9) = v86;
                    *((unsigned char *)&v171 - 64) = v212;
                    *(&v171 - 7) = (uint64_t)&v232;
                    *(&v171 - 6) = (uint64_t)sub_E5604;
                    *(&v171 - 5) = 0;
                    *(&v171 - 4) = (uint64_t)sub_EDF94;
                    *(&v171 - 3) = v205;
                    LOBYTE(v169) = 1;
                    goto LABEL_49;
                  case 5:
                    uint64_t v91 = __chkstk_darwin(*((void *)&v236 + 1));
                    *(&v171 - 10) = v97;
                    *(&v171 - 9) = v86;
                    *((unsigned char *)&v171 - 64) = v212;
                    *(&v171 - 7) = (uint64_t)&v232;
                    *(&v171 - 6) = (uint64_t)sub_E560C;
                    *(&v171 - 5) = 0;
                    *(&v171 - 4) = (uint64_t)sub_EDF94;
                    *(&v171 - 3) = v205;
                    LOBYTE(v169) = 1;
LABEL_49:
                    sub_EBDC8(v91, (void (*)(uint64_t *, uint64_t))sub_EE144);
                    break;
                  case 8:
                    sub_EDFA0((uint64_t)&v232);
                    swift_bridgeObjectRetain();
                    uint64_t v98 = swift_bridgeObjectRetain();
                    uint64_t v99 = sub_EA9CC(v98, (uint64_t)&v232, v86, v212);
                    swift_bridgeObjectRelease();
                    sub_EDC98((uint64_t)&v232);
                    swift_bridgeObjectRelease();
                    if ((v240 & 0x8000000000000000) != 0) {
                      goto LABEL_113;
                    }
                    if ((void)v240)
                    {
                      if (*(void *)(v99 + 16) >= (unint64_t)v240) {
                        uint64_t v100 = v240;
                      }
                      else {
                        uint64_t v100 = *(void *)(v99 + 16);
                      }
                    }
                    else
                    {
                      uint64_t v100 = 0;
                    }
                    sub_1FC730();
                    swift_unknownObjectRetain_n();
                    uint64_t v119 = (void *)swift_dynamicCastClass();
                    if (!v119)
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v119 = _swiftEmptyArrayStorage;
                    }
                    uint64_t v120 = v119[2];
                    swift_release();
                    uint64_t v206 = v68;
                    if (v120 == v100)
                    {
                      uint64_t v121 = (void *)swift_dynamicCastClass();
                      if (!v121)
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v121 = _swiftEmptyArrayStorage;
                      }
                    }
                    else
                    {
                      swift_bridgeObjectRelease();
                      uint64_t v121 = sub_4BE8C(v99, v99 + 32, 0, (2 * v100) | 1);
                    }
                    swift_bridgeObjectRelease();
                    int64_t v122 = v121[2];
                    if (v122)
                    {
                      v221[0] = _swiftEmptyArrayStorage;
                      sub_467B8(0, v122, 0);
                      uint64_t v123 = 0;
                      int v124 = (void *)v221[0];
                      uint64_t v211 = v121;
                      do
                      {
                        uint64_t v218 = v121[v123 + 4];
                        int v217 = LOBYTE(v121[v123 + 5]);
                        uint64_t v216 = v121[v123 + 6];
                        int v215 = LOBYTE(v121[v123 + 7]);
                        uint64_t v125 = v121[v123 + 8];
                        char v126 = v121[v123 + 9];
                        uint64_t v127 = v121[v123 + 10];
                        uint64_t v214 = v121[v123 + 11];
                        uint64_t v128 = v121[v123 + 12];
                        uint64_t v129 = v121[v123 + 13];
                        sub_5480C(v125, v126);
                        v221[0] = v124;
                        unint64_t v130 = v124[2];
                        unint64_t v131 = v124[3];
                        unint64_t v219 = v130 + 1;
                        swift_bridgeObjectRetain();
                        swift_bridgeObjectRetain();
                        if (v130 >= v131 >> 1)
                        {
                          sub_467B8(v131 > 1, v219, 1);
                          int v124 = (void *)v221[0];
                        }
                        uint64_t v132 = v218;
                        _OWORD v124[2] = v219;
                        uint64_t v133 = &v124[10 * v130];
                        v133[4] = v132;
                        *((unsigned char *)v133 + 40) = v217;
                        v133[6] = v216;
                        *((unsigned char *)v133 + 56) = v215;
                        v133[8] = v125;
                        *((unsigned char *)v133 + 72) = v126;
                        uint64_t v134 = v214;
                        v133[10] = v127;
                        v133[11] = v134;
                        v133[12] = v128;
                        v133[13] = v129;
                        v123 += 19;
                        --v122;
                        uint64_t v121 = v211;
                      }
                      while (v122);
                      swift_release();
                      uint64_t v66 = v202;
                      uint64_t v65 = v203;
                      uint64_t v67 = v201;
                    }
                    else
                    {
                      swift_release();
                      int v124 = _swiftEmptyArrayStorage;
                    }
                    uint64_t v68 = v206;
                    uint64_t v72 = v204;
                    if (v124[2] < *((uint64_t *)&v239 + 1))
                    {
LABEL_85:
                      swift_bridgeObjectRelease();
                      break;
                    }
                    v221[0] = v124;
                    sub_12124(&qword_26D6A0);
                    sub_52CC0(&qword_26D930, &qword_26D6A0);
                    sub_1FB3D0();
                    if ((*v195)(v65, 1, v67) != 1)
                    {
                      unint64_t v148 = v188;
                      (*v186)(v188, v65, v67);
                      uint64_t v149 = *(int *)(sub_12124(&qword_26D9C8) + 48);
                      uint64_t v150 = v190;
                      (*v185)(v190, v148, v67);
                      *(unsigned char *)(v150 + v149) = 2;
                      swift_storeEnumTagMultiPayload();
                      double v151 = sub_1EFB9C(*((long double *)&v240 + 1));
                      uint64_t v152 = v150;
                      uint64_t v153 = v179;
                      sub_EB6E8(v152, v179, type metadata accessor for CollectionRecommendation);
                      long long v154 = v207;
                      *(unsigned char *)(v153 + v207[5]) = v212;
                      *(unsigned char *)(v153 + v154[6]) = 1;
                      *(double *)(v153 + v154[7]) = v151;
                      uint64_t v155 = v245;
                      uint64_t v156 = v194;
                      swift_beginAccess();
                      uint64_t v157 = *(void *)(*(void *)v156 + 16);
                      BOOL v143 = v157 <= v155;
                      uint64_t v158 = v181;
                      if (v143) {
                        goto LABEL_103;
                      }
                      if (!v157) {
                        goto LABEL_115;
                      }
                      if (v157 == 1) {
                        goto LABEL_119;
                      }
                      sub_EE0DC(*(void *)v156 + v176 + v177, v181);
                      if ((*v172)(v158, 1, v154) == 1) {
                        goto LABEL_118;
                      }
                      uint64_t v159 = v158;
                      uint64_t v160 = v174;
                      sub_EDE6C(v159, v174, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                      double v161 = *(double *)(v160 + v154[7]);
                      sub_37898(v160, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                      uint64_t v72 = v204;
                      if (v161 < v151)
                      {
                        sub_E6EC4();
LABEL_103:
                        sub_DFDD4(v153);
                        uint64_t v72 = v204;
                      }
                      swift_endAccess();
                      sub_37898(v153, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
                      sub_37898(v190, type metadata accessor for CollectionRecommendation);
                      (*v184)(v188, v67);
                      break;
                    }
                    uint64_t v118 = (uint64_t)v65;
LABEL_88:
                    sub_55F38(v118, &qword_26D928);
                    break;
                  default:
                    break;
                }
LABEL_27:
                uint64_t v75 = v209;
                unint64_t v76 = v220;
                if (v220 != v210) {
                  continue;
                }
                sub_EE0B0((uint64_t)&v246);
                uint64_t v73 = v183;
                unint64_t v74 = v193;
                break;
            }
            break;
          }
        }
        ++v74;
      }
      while (v74 != v192);
      sub_EE0B0((uint64_t)v247);
    }
    v221[0] = v223;
    sub_EE0B0((uint64_t)v221);
    uint64_t v231 = v224;
    sub_EE0B0((uint64_t)&v231);
    uint64_t v230 = v225;
    sub_EE0B0((uint64_t)&v230);
    uint64_t v229 = v226;
    sub_EE0B0((uint64_t)&v229);
    uint64_t v228 = v227;
    long long v162 = &v228;
  }
  else
  {
    v221[0] = v223;
    sub_EE0B0((uint64_t)v221);
    v247[0] = v224;
    sub_EE0B0((uint64_t)v247);
    uint64_t v246 = v225;
    sub_EE0B0((uint64_t)&v246);
    uint64_t v231 = v226;
    sub_EE0B0((uint64_t)&v231);
    uint64_t v230 = v227;
    long long v162 = &v230;
  }
  sub_EE0B0((uint64_t)v162);
  uint64_t v163 = swift_bridgeObjectRetain();
  long long v164 = sub_E04A4(v163);
  unint64_t v166 = v165;
  swift_bridgeObjectRelease();
  size_t v167 = sub_EA058((uint64_t)v164, v166);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  sub_EDC98((uint64_t)&v232);
  swift_release();
  return v167;
}

uint64_t sub_E2114(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = sub_12124(&qword_26D588);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v18 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = *(void *)(*(void *)v2 + 16);
  if (v13 > a2)
  {
    if (v13)
    {
      if (v13 == 1)
      {
LABEL_13:
        uint64_t result = sub_1FC220();
        __break(1u);
        return result;
      }
      sub_EE0DC(*(void *)v2+ *(void *)(v6 + 72)+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80)), (uint64_t)v8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1)
      {
        sub_EDE6C((uint64_t)v8, (uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
        uint64_t v14 = *(int *)(v9 + 28);
        double v15 = *(double *)(a1 + v14);
        double v16 = *(double *)&v12[v14];
        uint64_t result = sub_37898((uint64_t)v12, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
        if (v16 < v15)
        {
          sub_E6EC4();
          return sub_DFDD4(a1);
        }
        return result;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_13;
  }

  return sub_DFDD4(a1);
}

uint64_t sub_E2380(uint64_t result, uint64_t a2)
{
  uint64_t v3 = result;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(*v2 + 16);
  if (v5 <= a2) {
    goto LABEL_7;
  }
  if (!v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  if (v5 == 1)
  {
LABEL_13:
    uint64_t result = sub_1FC220();
    __break(1u);
    return result;
  }
  if (!*(void *)(v4 + 88))
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  if (*(double *)(v4 + 96) >= *(double *)(result + 8)) {
    return result;
  }
  sub_E7438();
LABEL_7:

  return sub_E0230(v3);
}

uint64_t sub_E2450@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v97 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v6 = __chkstk_darwin(v97);
  uint64_t v8 = (char *)&v79 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v83 = (uint64_t)&v79 - v9;
  uint64_t v84 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v10 = *(void *)(v84 - 8);
  uint64_t v11 = __chkstk_darwin(v84);
  uint64_t v89 = (char *)&v79 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v99 = (uint64_t)&v79 - v14;
  __chkstk_darwin(v13);
  double v16 = (char *)&v79 - v15;
  uint64_t v86 = a1;
  CollectionRecommendation.collectionRecommendationType.getter((char *)v100);
  uint64_t v98 = LOBYTE(v100[0]);
  uint64_t v17 = v3[3];
  long double v18 = 1.0;
  double v19 = 1.0;
  if (*(void *)(v17 + 16))
  {
    unint64_t v20 = sub_4C7F4(v98);
    if (v21) {
      double v19 = *(double *)(*(void *)(v17 + 56) + 8 * v20);
    }
  }
  uint64_t v22 = v3[4];
  if (*(void *)(v22 + 16))
  {
    unint64_t v23 = sub_4C7F4(v98);
    if (v24) {
      long double v18 = *(double *)(*(void *)(v22 + 56) + 8 * v23);
    }
  }
  uint64_t v87 = v22;
  uint64_t v88 = v17;
  v102[0] = *(double *)v3;
  uint64_t v25 = _swiftEmptyArrayStorage;
  unint64_t v101 = _swiftEmptyArrayStorage;
  uint64_t v26 = *(void *)(*(void *)&v102[0] + 16);
  uint64_t v27 = swift_bridgeObjectRetain();
  unint64_t v85 = v27;
  uint64_t v90 = v26;
  if (v26)
  {
    uint64_t v81 = v3;
    uint64_t v82 = a2;
    unint64_t v96 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v28 = v27 + v96;
    uint64_t v80 = v10;
    uint64_t v29 = *(void *)(v10 + 72);
    unint64_t v94 = (unint64_t)"ry";
    unint64_t v95 = (unint64_t)"http://localhost:18060";
    uint64_t v92 = "booksYouMightLike";
    uint64_t v93 = "booksBySuggestedAuthors";
    unint64_t v91 = (unint64_t)"mangaYouMightLike";
    uint64_t v30 = v26;
    while (1)
    {
      sub_EB6E8(v28, (uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8((uint64_t)v16, (uint64_t)v8, type metadata accessor for CollectionRecommendation);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
          sub_37898((uint64_t)v8, type metadata accessor for CollectionRecommendation);
          unint64_t v31 = 0xE500000000000000;
          uint64_t v32 = 0x736B6F6F62;
          break;
        case 2u:
          uint64_t v33 = sub_12124(&qword_26D090);
          memcpy(v100, &v8[*(int *)(v33 + 48)], 0x229uLL);
          sub_124B4(v100);
          swift_bridgeObjectRelease();
          uint64_t v34 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v8, v34);
          uint64_t v32 = 0xD000000000000010;
          unint64_t v31 = v95 | 0x8000000000000000;
          break;
        case 3u:
          uint64_t v35 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v8, v35);
          uint64_t v32 = 0x417942736B6F6F62;
          unint64_t v31 = 0xED0000726F687475;
          break;
        case 4u:
          uint64_t v36 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v8, v36);
          uint64_t v32 = 0xD000000000000017;
          unint64_t v31 = v94 | 0x8000000000000000;
          break;
        case 5u:
          uint64_t v37 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v8, v37);
          uint64_t v32 = 0x476E49736B6F6F62;
          uint64_t v38 = 1701998181;
          goto LABEL_26;
        case 6u:
          uint64_t v39 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v8, v39);
          long long v40 = v93;
          goto LABEL_20;
        case 7u:
          uint64_t v41 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v41 - 8) + 8))(v8, v41);
          long long v40 = v92;
LABEL_20:
          unint64_t v31 = (unint64_t)v40 | 0x8000000000000000;
          uint64_t v32 = 0xD000000000000011;
          break;
        case 8u:
          uint64_t v42 = sub_12124(&qword_26D088);
          (*(void (**)(char *, uint64_t))(*(void *)(v42 - 8) + 8))(v8, v42);
          uint64_t v32 = 0xD000000000000013;
          unint64_t v31 = v91 | 0x8000000000000000;
          break;
        case 9u:
          sub_37898((uint64_t)v8, type metadata accessor for CollectionRecommendation);
          unint64_t v31 = 0xE600000000000000;
          uint64_t v32 = 0x736569726573;
          break;
        case 0xAu:
          sub_37898((uint64_t)v8, type metadata accessor for CollectionRecommendation);
          unsigned int v43 = 1954047342;
          goto LABEL_25;
        case 0xBu:
          sub_37898((uint64_t)v8, type metadata accessor for CollectionRecommendation);
          unsigned int v43 = 1701998445;
LABEL_25:
          uint64_t v32 = v43 | 0x65536E4900000000;
          uint64_t v38 = 1936025970;
LABEL_26:
          unint64_t v31 = v38 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          sub_37898((uint64_t)v8, type metadata accessor for CollectionRecommendation);
          unint64_t v31 = 0xE400000000000000;
          uint64_t v32 = 1802465122;
          break;
      }
      unint64_t v44 = 0xE400000000000000;
      uint64_t v45 = 1802465122;
      switch(v98)
      {
        case 1:
          unint64_t v44 = 0xE500000000000000;
          uint64_t v45 = 0x736B6F6F62;
          break;
        case 2:
          uint64_t v45 = 0xD000000000000010;
          unint64_t v44 = v95 | 0x8000000000000000;
          break;
        case 3:
          uint64_t v45 = 0x417942736B6F6F62;
          unint64_t v44 = 0xED0000726F687475;
          break;
        case 4:
          uint64_t v45 = 0xD000000000000017;
          unint64_t v44 = v94 | 0x8000000000000000;
          break;
        case 5:
          uint64_t v45 = 0x476E49736B6F6F62;
          uint64_t v46 = 1701998181;
          goto LABEL_41;
        case 6:
          uint64_t v47 = v93;
          goto LABEL_35;
        case 7:
          uint64_t v47 = v92;
LABEL_35:
          unint64_t v44 = (unint64_t)v47 | 0x8000000000000000;
          uint64_t v45 = 0xD000000000000011;
          break;
        case 8:
          uint64_t v45 = 0xD000000000000013;
          unint64_t v44 = v91 | 0x8000000000000000;
          break;
        case 9:
          unint64_t v44 = 0xE600000000000000;
          uint64_t v45 = 0x736569726573;
          break;
        case 10:
          unsigned int v48 = 1954047342;
          goto LABEL_40;
        case 11:
          unsigned int v48 = 1701998445;
LABEL_40:
          uint64_t v45 = v48 | 0x65536E4900000000;
          uint64_t v46 = 1936025970;
LABEL_41:
          unint64_t v44 = v46 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      if (v32 == v45 && v31 == v44) {
        break;
      }
      char v49 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v49) {
        goto LABEL_46;
      }
      sub_37898((uint64_t)v16, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
LABEL_10:
      v28 += v29;
      if (!--v30)
      {
        uint64_t v25 = v101;
        uint64_t v3 = v81;
        a2 = v82;
        uint64_t v10 = v80;
        goto LABEL_52;
      }
    }
    swift_bridgeObjectRelease_n();
LABEL_46:
    sub_EDE6C((uint64_t)v16, v99, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      sub_46A20(0, v25[2] + 1, 1);
    }
    uint64_t v25 = v101;
    unint64_t v51 = v101[2];
    unint64_t v50 = v101[3];
    if (v51 >= v50 >> 1)
    {
      sub_46A20(v50 > 1, v51 + 1, 1);
      uint64_t v25 = v101;
    }
    _OWORD v25[2] = v51 + 1;
    sub_EDE6C(v99, (uint64_t)v25 + v96 + v51 * v29, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    goto LABEL_10;
  }
LABEL_52:
  sub_EE0B0((uint64_t)v102);
  uint64_t v52 = v25[2];
  swift_release();
  uint64_t v53 = v86;
  uint64_t v54 = v83;
  sub_EB6E8(v86, v83, type metadata accessor for CollectionRecommendation);
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v56 = (uint64_t)v89;
  if (EnumCaseMultiPayload == 5)
  {
    uint64_t v57 = *(void *)(v54 + *(int *)(sub_12124(&qword_26D998) + 48));
    uint64_t v58 = sub_12124(&qword_26D088);
    (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v54, v58);
    uint64_t v59 = v3[5];
    double v60 = 1.0;
    if (*(void *)(v59 + 16))
    {
      uint64_t v61 = sub_56168(v57);
      if (v62) {
        double v60 = *(double *)(*(void *)(v59 + 56) + 8 * v61);
      }
    }
  }
  else
  {
    sub_37898(v54, type metadata accessor for CollectionRecommendation);
    double v60 = 1.0;
  }
  double v63 = *(double *)(v53 + *(int *)(v84 + 28));
  double v65 = *((double *)v3 + 1);
  long double v64 = *((double *)v3 + 2);
  sub_EB6E8(v53, v56, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  unint64_t v66 = v85;
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    unint64_t v66 = sub_42C40(0, v90 + 1, 1, v66);
  }
  unint64_t v68 = *(void *)(v66 + 16);
  unint64_t v67 = *(void *)(v66 + 24);
  uint64_t v69 = v90;
  if (v68 >= v67 >> 1)
  {
    unint64_t v76 = v66;
    uint64_t v77 = v90;
    uint64_t v78 = sub_42C40(v67 > 1, v68 + 1, 1, v76);
    uint64_t v69 = v77;
    unint64_t v66 = v78;
  }
  long double v70 = v63 * pow(v64, (double)v69);
  long double v71 = v65 + v60 * (v19 * (v70 * pow(v18, (double)v52)));
  *(void *)(v66 + 16) = v68 + 1;
  sub_EDE6C(v56, v66+ ((*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80))+ *(void *)(v10 + 72) * v68, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  uint64_t v72 = v3[5];
  uint64_t v73 = v88;
  swift_bridgeObjectRetain();
  uint64_t v74 = v87;
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  *(void *)a2 = v66;
  *(long double *)(a2 + 8) = v71;
  *(long double *)(a2 + 16) = v64;
  *(void *)(a2 + 24) = v73;
  *(void *)(a2 + 32) = v74;
  *(void *)(a2 + 40) = v72;
  *(unsigned char *)(a2 + 48) = 0;
  return result;
}

uint64_t sub_E2F98@<X0>(void *a1@<X8>)
{
  swift_beginAccess();
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_E07B0(v2);
  uint64_t v5 = v4;
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v3;
  a1[1] = v5;
  return result;
}

uint64_t sub_E3004@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *(void *)(result + 16);
  if (v3)
  {
    uint64_t v4 = *(void *)(result + 32);
    double v6 = *(double *)(result + 40);
    uint64_t v5 = *(void *)(result + 48);
    uint64_t v7 = *(void *)(result + 56);
    uint64_t v8 = *(void *)(result + 64);
    uint64_t v9 = *(void *)(result + 72);
    char v19 = *(unsigned char *)(result + 80);
    uint64_t v10 = v3 - 1;
    if (v3 == 1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v11 = result;
      uint64_t v18 = a2;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = (double *)(v11 + 136);
      do
      {
        double v13 = *(v12 - 5);
        if (v6 < v13)
        {
          char v19 = *(unsigned char *)v12;
          uint64_t v15 = *((void *)v12 - 2);
          uint64_t v14 = *((void *)v12 - 1);
          uint64_t v16 = *((void *)v12 - 3);
          uint64_t v5 = *((void *)v12 - 4);
          uint64_t v17 = *((void *)v12 - 6);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v4 = v17;
          double v6 = v13;
          uint64_t v7 = v16;
          uint64_t v8 = v15;
          uint64_t v9 = v14;
        }
        v12 += 7;
        --v10;
      }
      while (v10);
      uint64_t result = swift_bridgeObjectRelease();
      a2 = v18;
    }
    *(void *)a2 = v4;
    *(double *)(a2 + 8) = v6;
    *(void *)(a2 + 16) = v5;
    *(void *)(a2 + 24) = v7;
    *(void *)(a2 + 32) = v8;
    *(void *)(a2 + 40) = v9;
    *(unsigned char *)(a2 + 48) = v19 & 1;
  }
  else
  {
    *(unsigned char *)(a2 + 48) = 0;
    *(_OWORD *)(a2 + 16) = 0u;
    *(_OWORD *)(a2 + 32) = 0u;
    *(_OWORD *)a2 = 0u;
  }
  return result;
}

uint64_t sub_E31A4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    uint64_t v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v5 < v2) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

void sub_E31E8(void *a1@<X8>)
{
  *a1 = &_swiftEmptyArrayStorage;
}

char *sub_E31F8(char *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    char v10 = *result;
    uint64_t v11 = (const void *)(a2 + 32);
    swift_bridgeObjectRetain();
    memcpy(__dst, v11, 0x229uLL);
    uint64_t v12 = v5 - 1;
    for (uint64_t i = 592; ; i += 560)
    {
      memcpy(__src, __dst, 0x229uLL);
      sub_12384(__dst);
      sub_E32E0(__src, a3, a4, a5, v10);
      sub_124B4(__dst);
      if (!v12) {
        break;
      }
      memcpy(__dst, (const void *)(a2 + i), 0x229uLL);
      --v12;
    }
    return (char *)swift_bridgeObjectRelease();
  }
  return result;
}

void *sub_E32E0(void *__src, uint64_t a2, unint64_t a3, void *a4, char a5)
{
  memcpy(__dst, __src, 0x229uLL);
  sub_12384(__dst);
  sub_54834(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v41 = *(void **)a2;
  uint64_t v11 = v41;
  *(void *)a2 = 0x8000000000000000;
  unint64_t v13 = sub_4C880(__dst);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
    goto LABEL_21;
  }
  LOBYTE(v5) = v12;
  if (v11[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      goto LABEL_23;
    }
  }
  else
  {
    sub_11BA18(v16, isUniquelyReferenced_nonNull_native);
    uint64_t v11 = v41;
    unint64_t v17 = sub_4C880(__dst);
    if ((v5 & 1) != (v18 & 1)) {
      goto LABEL_24;
    }
    unint64_t v13 = v17;
  }
  while (1)
  {
    *(void *)a2 = v11;
    swift_bridgeObjectRelease();
    char v19 = *(void **)a2;
    if ((v5 & 1) == 0)
    {
      sub_11A60(v13, __dst, _swiftEmptyArrayStorage, *(void *)a2);
      sub_12384(__dst);
    }
    uint64_t v5 = v19[7];
    uint64_t v11 = *(void **)(v5 + 8 * v13);
    char v20 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v5 + 8 * v13) = v11;
    if ((v20 & 1) == 0)
    {
LABEL_21:
      uint64_t v11 = sub_41DE0(0, v11[2] + 1, 1, v11);
      *(void *)(v5 + 8 * v13) = v11;
    }
    unint64_t v22 = v11[2];
    unint64_t v21 = v11[3];
    if (v22 >= v21 >> 1)
    {
      uint64_t v11 = sub_41DE0((void *)(v21 > 1), v22 + 1, 1, v11);
      *(void *)(v5 + 8 * v13) = v11;
    }
    void v11[2] = v22 + 1;
    unint64_t v23 = &v11[19 * v22];
    long long v24 = *(_OWORD *)(a3 + 16);
    *((_OWORD *)v23 + 2) = *(_OWORD *)a3;
    *((_OWORD *)v23 + 3) = v24;
    long long v25 = *(_OWORD *)(a3 + 32);
    long long v26 = *(_OWORD *)(a3 + 48);
    long long v27 = *(_OWORD *)(a3 + 80);
    *((_OWORD *)v23 + 6) = *(_OWORD *)(a3 + 64);
    *((_OWORD *)v23 + 7) = v27;
    *((_OWORD *)v23 + 4) = v25;
    *((_OWORD *)v23 + 5) = v26;
    long long v28 = *(_OWORD *)(a3 + 96);
    long long v29 = *(_OWORD *)(a3 + 112);
    long long v30 = *(_OWORD *)(a3 + 128);
    *((unsigned char *)v23 + 176) = *(unsigned char *)(a3 + 144);
    *((_OWORD *)v23 + 9) = v29;
    *((_OWORD *)v23 + 10) = v30;
    *((_OWORD *)v23 + 8) = v28;
    sub_124B4(__dst);
    sub_12384(__dst);
    a2 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v41 = (void *)*a4;
    unint64_t v31 = v41;
    *a4 = 0x8000000000000000;
    a3 = sub_4C880(__dst);
    uint64_t v33 = v31[2];
    BOOL v34 = (v32 & 1) == 0;
    uint64_t v35 = v33 + v34;
    if (!__OFADD__(v33, v34)) {
      break;
    }
    __break(1u);
LABEL_23:
    sub_12299C();
    uint64_t v11 = v41;
  }
  char v36 = v32;
  if (v31[3] >= v35)
  {
    if ((a2 & 1) == 0)
    {
      sub_122990();
      unint64_t v31 = v41;
    }
    goto LABEL_17;
  }
  sub_11BA0C(v35, a2);
  unint64_t v31 = v41;
  unint64_t v37 = sub_4C880(__dst);
  if ((v36 & 1) != (v38 & 1))
  {
LABEL_24:
    uint64_t result = (void *)sub_1FC770();
    __break(1u);
    return result;
  }
  a3 = v37;
LABEL_17:
  *a4 = v31;
  swift_bridgeObjectRelease();
  if ((v36 & 1) == 0)
  {
    sub_11A60(a3, __dst, _swiftEmptySetSingleton, *a4);
    sub_12384(__dst);
  }
  sub_7A44(&v41, a5 & 1);
  return sub_124B4(__dst);
}

char *sub_E35D8()
{
  double v1 = *(double *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 120);
  uint64_t v2 = *(void *)(v0 + 128);
  uint64_t v4 = *(void *)(*(void *)(v0 + 104) + 16);
  uint64_t v5 = swift_bridgeObjectRetain();
  double v6 = (double *)sub_4BCC4(v5);
  swift_bridgeObjectRelease();
  if (qword_26C328 != -1) {
    goto LABEL_20;
  }
  while (1)
  {
    uint64_t v7 = sub_1FB430();
    sub_6DBC8(v7, (uint64_t)qword_26F790);
    swift_retain_n();
    uint64_t v8 = sub_1FB410();
    os_log_type_t v9 = sub_1FBDC0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v26 = v2;
      char v10 = (uint8_t *)swift_slowAlloc();
      uint64_t v27 = swift_slowAlloc();
      *(_DWORD *)char v10 = 136315138;
      uint64_t v11 = sub_E39A0((uint64_t)v6);
      sub_D5890(v11, v12, &v27);
      sub_1FBED0();
      swift_release_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v8, v9, "selectCandidateSingleBooks clusterableBooksAscendingByScore=%s", v10, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      uint64_t v2 = v26;
      swift_slowDealloc();

      if (!v4) {
        goto LABEL_8;
      }
    }
    else
    {

      swift_release_n();
      if (!v4) {
        goto LABEL_8;
      }
    }
    uint64_t v13 = *((void *)v6 + 2);
    if (v13) {
      break;
    }
LABEL_19:
    __break(1u);
LABEL_20:
    swift_once();
  }
  if (v4 != 1)
  {
    double v16 = v6[13] + 0.0;
    uint64_t v17 = -1;
    uint64_t v18 = 1;
    uint64_t v19 = 32;
    while (v13 != v18)
    {
      double v20 = v6[v19];
      if (v18 >= v3 && v2 >= v4 + v17 && v1 * (v16 / (double)v18) <= v20)
      {
        uint64_t v14 = sub_4BBB4((char *)v6, (uint64_t)(v6 + 4), v18, (2 * v13) | 1);
        swift_release();
        swift_retain_n();
        unint64_t v21 = sub_1FB410();
        os_log_type_t v22 = sub_1FBDC0();
        if (os_log_type_enabled(v21, v22))
        {
          unint64_t v23 = (uint8_t *)swift_slowAlloc();
          uint64_t v27 = swift_slowAlloc();
          *(_DWORD *)unint64_t v23 = 136315138;
          uint64_t v24 = sub_E39A0((uint64_t)v14);
          sub_D5890(v24, v25, &v27);
          sub_1FBED0();
          swift_release_n();
          swift_bridgeObjectRelease();
          _os_log_impl(&dword_0, v21, v22, "selectCandidateSingleBooks candidates=%s", v23, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_release_n();
        }
        return v14;
      }
      ++v18;
      double v16 = v16 + v20;
      --v17;
      v19 += 19;
      if (v4 == v18) {
        goto LABEL_8;
      }
    }
    goto LABEL_19;
  }
LABEL_8:
  swift_release();
  return (char *)_swiftEmptyArrayStorage;
}

uint64_t sub_E39A0(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46588(0, v1, 0);
    uint64_t v3 = a1 + 32;
    do
    {
      sub_E6CE0();
      uint64_t v5 = v4;
      uint64_t v7 = v6;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      if (v9 >= v8 >> 1) {
        sub_46588(v8 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      char v10 = &_swiftEmptyArrayStorage[2 * v9];
      void v10[4] = v5;
      void v10[5] = v7;
      v3 += 152;
      --v1;
    }
    while (v1);
  }
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v11 = sub_1FB7B0();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  v15._uint64_t countAndFlagsBits = v11;
  v15._object = v13;
  sub_1FB8F0(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 93;
  v16._object = (void *)0xE100000000000000;
  sub_1FB8F0(v16);
  return 0x202020200A5BLL;
}

void sub_E3B54(void *a1@<X8>)
{
  *a1 = 0;
}

uint64_t sub_E3B5C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v38 = *a1;
  uint64_t v39 = *((unsigned __int8 *)a1 + 8);
  char v45 = *((unsigned char *)a1 + 24);
  uint64_t v42 = a1[4];
  uint64_t v43 = *((unsigned __int8 *)a1 + 40);
  uint64_t v4 = a1[6];
  uint64_t v40 = a1[2];
  uint64_t v41 = a1[7];
  unint64_t v5 = a1[8];
  uint64_t v6 = a1[9];
  uint64_t v7 = a1[15];
  uint64_t v44 = a1[14];
  uint64_t v8 = *((unsigned __int8 *)a1 + 128);
  uint64_t v9 = a1[17];
  char v10 = *((unsigned char *)a1 + 144);
  uint64_t v11 = *(void *)(v2 + 144);
  if ((sub_39B60(0xAu, v11) & 1) == 0 && (sub_39B60(0xBu, v11) & 1) == 0 || v8 == 2)
  {
LABEL_15:
    char v27 = v45;
    if (!(v45 & 1 | ((sub_39B60(9u, v11) & 1) == 0)))
    {
      sub_5480C(v42, v43);
      swift_bridgeObjectRetain();
      if (v5)
      {
        swift_bridgeObjectRetain();
        sub_5480C(v42, v43);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        unint64_t v29 = v5;
      }
      else
      {
        sub_5480C(v42, v43);
        swift_bridgeObjectRetain();
        unint64_t v29 = sub_160EB0((uint64_t)_swiftEmptyArrayStorage);
      }
      swift_bridgeObjectRetain();
      sub_54820(v42, v43);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a2 = v40;
      *(unsigned char *)(a2 + 8) = v39;
      *(void *)(a2 + 16) = v38;
      *(void *)(a2 + 24) = v39;
      *(void *)(a2 + 32) = v40;
      *(void *)(a2 + 40) = 0;
      *(void *)(a2 + 48) = v42;
      *(void *)(a2 + 56) = v43;
      *(void *)(a2 + 64) = v4;
      *(void *)(a2 + 72) = v41;
      *(void *)(a2 + 80) = v5;
      *(void *)(a2 + 88) = v6;
      *(void *)(a2 + 96) = v29;
      *(void *)(a2 + 104) = v6;
      uint64_t v35 = type metadata accessor for CollectionRecommendation(0);
      swift_storeEnumTagMultiPayload();
      unint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 - 8) + 56);
      uint64_t v33 = a2;
      uint64_t v34 = 0;
      uint64_t v32 = v35;
      goto LABEL_29;
    }
    if ((sub_39B60(0, v11) & 1) == 0) {
      goto LABEL_26;
    }
LABEL_17:
    *(void *)a2 = v38;
    *(unsigned char *)(a2 + 8) = v39;
    *(void *)(a2 + 16) = v40;
    *(unsigned char *)(a2 + 24) = v27;
    uint64_t v25 = v42;
    char v24 = v43;
    *(void *)(a2 + 32) = v42;
    *(unsigned char *)(a2 + 40) = v43;
    *(void *)(a2 + 48) = v4;
    *(void *)(a2 + 56) = v41;
    *(void *)(a2 + 64) = v5;
    *(void *)(a2 + 72) = v6;
    uint64_t v26 = type metadata accessor for CollectionRecommendation(0);
    goto LABEL_18;
  }
  uint64_t v12 = v8 & 1;
  v47[0] = v44;
  v47[1] = v7;
  char v48 = v12;
  uint64_t v49 = v9;
  char v50 = v10 & 1;
  uint64_t v13 = swift_bridgeObjectRetain();
  sub_E9518(v13, (uint64_t)v47);
  uint64_t v14 = swift_bridgeObjectRetain();
  Swift::String v15 = sub_4BD98(v14);
  swift_release();
  uint64_t v46 = v15;
  sub_DBF90((uint64_t *)&v46);
  swift_release();
  Swift::String v16 = v46;
  int64_t v17 = v46[2];
  if (!v17)
  {
    swift_release();
    uint64_t v18 = _swiftEmptyArrayStorage;
    if (_swiftEmptyArrayStorage[2]) {
      goto LABEL_10;
    }
    goto LABEL_14;
  }
  unint64_t v36 = v5;
  uint64_t v37 = v4;
  uint64_t v46 = _swiftEmptyArrayStorage;
  sub_469F8(0, v17, 0);
  uint64_t v18 = v46;
  unint64_t v19 = v46[2];
  uint64_t v20 = 4;
  do
  {
    uint64_t v21 = v16[v20];
    uint64_t v46 = v18;
    unint64_t v22 = v18[3];
    if (v19 >= v22 >> 1)
    {
      sub_469F8(v22 > 1, v19 + 1, 1);
      uint64_t v18 = v46;
    }
    unsigned __int16 v18[2] = v19 + 1;
    v18[v19 + 4] = v21;
    v20 += 5;
    ++v19;
    --v17;
  }
  while (v17);
  swift_release();
  unint64_t v5 = v36;
  uint64_t v4 = v37;
  if (!v18[2])
  {
LABEL_14:
    swift_bridgeObjectRelease();
    goto LABEL_15;
  }
LABEL_10:
  uint64_t v23 = v18[4];
  swift_bridgeObjectRelease();
  if (!v12)
  {
    if (sub_39B60(0xBu, v11))
    {
      *(void *)a2 = v38;
      *(unsigned char *)(a2 + 8) = v39;
      *(void *)(a2 + 16) = v40;
      *(unsigned char *)(a2 + 24) = v45;
      uint64_t v25 = v42;
      char v24 = v43;
      *(void *)(a2 + 32) = v42;
      *(unsigned char *)(a2 + 40) = v43;
      *(void *)(a2 + 48) = v4;
      *(void *)(a2 + 56) = v41;
      *(void *)(a2 + 64) = v5;
      *(void *)(a2 + 72) = v6;
      uint64_t v26 = type metadata accessor for CollectionRecommendation(0);
LABEL_18:
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v26 - 8) + 56))(a2, 0, 1, v26);
      sub_5480C(v25, v24);
      swift_bridgeObjectRetain();
      return swift_bridgeObjectRetain();
    }
    goto LABEL_26;
  }
  if (__OFADD__(v23, 1))
  {
    __break(1u);
    uint64_t result = swift_release();
    __break(1u);
    return result;
  }
  char v27 = v45;
  if (v23 + 1 == v44 && (sub_39B60(0xAu, v11) & 1) != 0) {
    goto LABEL_17;
  }
LABEL_26:
  uint64_t v30 = type metadata accessor for CollectionRecommendation(0);
  unint64_t v31 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v30 - 8) + 56);
  uint64_t v32 = v30;
  uint64_t v33 = a2;
  uint64_t v34 = 1;
LABEL_29:

  return v31(v33, v34, 1, v32);
}

uint64_t sub_E40C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 208);
  swift_beginAccess();
  sub_E2114(a1, v4);
  return swift_endAccess();
}

uint64_t sub_E4128(unsigned __int8 *a1, uint64_t a2, uint64_t *a3, long long *a4, void (*a5)(void), uint64_t a6)
{
  int v8 = *a1;
  uint64_t v9 = *(void *)a2;
  uint64_t v10 = *(void *)(a2 + 16);
  uint64_t v49 = v10 + 56;
  uint64_t v11 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v10 + 56);
  int64_t v50 = (unint64_t)(v11 + 63) >> 6;
  if (*(unsigned char *)(a2 + 8)) {
    uint64_t v9 = 1;
  }
  uint64_t v51 = v9;
  swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (v13)
  {
    unint64_t v16 = __clz(__rbit64(v13));
    v13 &= v13 - 1;
    unint64_t v17 = v16 | (v14 << 6);
LABEL_21:
    unsigned __int8 v21 = *(unsigned char *)(*(void *)(v10 + 48) + v17);
    uint64_t v22 = a3[4];
    if (*(void *)(v22 + 16))
    {
      unint64_t v23 = sub_4C7F4(v8);
      char v24 = _swiftEmptyDictionarySingleton;
      if (v25)
      {
        char v24 = *(void **)(*(void *)(v22 + 56) + 8 * v23);
        swift_bridgeObjectRetain();
      }
      if (!v24[2]) {
        goto LABEL_30;
      }
LABEL_27:
      unint64_t v26 = sub_4CC78(v21);
      if ((v27 & 1) == 0) {
        goto LABEL_30;
      }
      uint64_t v28 = *(void *)(v24[7] + 8 * v26);
      uint64_t v29 = swift_bridgeObjectRelease();
      if (v28 < v51) {
        goto LABEL_31;
      }
    }
    else
    {
      char v24 = _swiftEmptyDictionarySingleton;
      if (_swiftEmptyDictionarySingleton[2]) {
        goto LABEL_27;
      }
LABEL_30:
      uint64_t v29 = swift_bridgeObjectRelease();
      if (v51 > 0)
      {
LABEL_31:
        uint64_t v30 = *a3;
        switch(v8)
        {
          case 1:
            long long v31 = a4[11];
            long long v63 = a4[10];
            long long v64 = v31;
            long long v65 = a4[12];
            uint64_t v66 = *((void *)a4 + 26);
            long long v32 = a4[7];
            long long v59 = a4[6];
            long long v60 = v32;
            long long v33 = a4[9];
            long long v61 = a4[8];
            long long v62 = v33;
            long long v34 = a4[3];
            long long v55 = a4[2];
            long long v35 = a4[4];
            long long v36 = a4[5];
            long long v56 = v34;
            long long v57 = v35;
            long long v58 = v36;
            long long v37 = a4[1];
            long long v53 = *a4;
            long long v54 = v37;
            unsigned __int8 v52 = v21;
            sub_E4690(&v52, v30, 0, a5, a6);
            break;
          case 2:
            __chkstk_darwin(v29);
            uint64_t v38 = __chkstk_darwin(*((void *)a4 + 11));
            sub_EBBF4(v38, (void (*)(unsigned char *, uint64_t))sub_EE150);
            break;
          case 3:
            uint64_t v15 = __chkstk_darwin(*((void *)a4 + 10));
            goto LABEL_7;
          case 5:
            uint64_t v15 = __chkstk_darwin(*((void *)a4 + 9));
LABEL_7:
            sub_EBDC8(v15, (void (*)(uint64_t *, uint64_t))sub_EE144);
            break;
          case 8:
            long long v39 = a4[11];
            long long v63 = a4[10];
            long long v64 = v39;
            long long v65 = a4[12];
            uint64_t v66 = *((void *)a4 + 26);
            long long v40 = a4[7];
            long long v59 = a4[6];
            long long v60 = v40;
            long long v41 = a4[9];
            long long v61 = a4[8];
            long long v62 = v41;
            long long v42 = a4[3];
            long long v55 = a4[2];
            long long v43 = a4[4];
            long long v44 = a4[5];
            long long v56 = v42;
            long long v57 = v43;
            long long v58 = v44;
            long long v45 = a4[1];
            long long v53 = *a4;
            long long v54 = v45;
            unsigned __int8 v52 = v21;
            sub_E4CCC(&v52, v30, 0, a5, a6);
            break;
          default:
            continue;
        }
      }
    }
  }
  if (__OFADD__(v14++, 1))
  {
    __break(1u);
    goto LABEL_42;
  }
  if (v14 >= v50) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v49 + 8 * v14);
  if (v19)
  {
LABEL_20:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v14 << 6);
    goto LABEL_21;
  }
  int64_t v20 = v14 + 1;
  if (v14 + 1 >= v50) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v49 + 8 * v20);
  if (v19) {
    goto LABEL_19;
  }
  int64_t v20 = v14 + 2;
  if (v14 + 2 >= v50) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v49 + 8 * v20);
  if (v19)
  {
LABEL_19:
    int64_t v14 = v20;
    goto LABEL_20;
  }
  int64_t v20 = v14 + 3;
  if (v14 + 3 < v50)
  {
    unint64_t v19 = *(void *)(v49 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v14 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v14 >= v50) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v49 + 8 * v14);
        ++v20;
        if (v19) {
          goto LABEL_20;
        }
      }
LABEL_42:
      __break(1u);
      JUMPOUT(0xE4670);
    }
    goto LABEL_19;
  }
  return swift_release();
}

uint64_t sub_E4690(unsigned __int8 *a1, uint64_t a2, int a3, void (*a4)(void), uint64_t a5)
{
  LODWORD(v8) = a3;
  uint64_t v11 = (int *)type metadata accessor for ScoredCollectionRecommendation();
  __chkstk_darwin(v11);
  uint64_t v63 = (uint64_t)&v55 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v61 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v61);
  long long v62 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_12124(&qword_26D928);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_12124(&qword_26D088);
  uint64_t v64 = *(void *)(v17 - 8);
  uint64_t v65 = v17;
  __chkstk_darwin(v17);
  long long v60 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  int64_t v19 = v5[16];
  uint64_t v66 = v5[15];
  long double v20 = *((double *)v5 + 17);
  swift_bridgeObjectRetain();
  uint64_t v21 = swift_bridgeObjectRetain();
  int v59 = (int)a1;
  uint64_t v22 = sub_EB758(v21, a2, (char)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v23 = sub_3E3A8(v19, v22);
  uint64_t v25 = v24;
  uint64_t v27 = v26;
  unint64_t v29 = v28;
  int v67 = v8;
  if ((v28 & 1) == 0) {
    goto LABEL_2;
  }
  uint64_t v8 = a5;
  long long v31 = a4;
  sub_1FC730();
  swift_unknownObjectRetain_n();
  long long v32 = (void *)swift_dynamicCastClass();
  if (!v32)
  {
    swift_unknownObjectRelease();
    long long v32 = _swiftEmptyArrayStorage;
  }
  uint64_t v33 = v32[2];
  swift_release();
  if (__OFSUB__(v29 >> 1, v27))
  {
    __break(1u);
    goto LABEL_24;
  }
  if (v33 != (v29 >> 1) - v27)
  {
LABEL_24:
    swift_unknownObjectRelease();
    a4 = v31;
    a5 = v8;
    LOBYTE(v8) = v67;
LABEL_2:
    uint64_t v30 = sub_4BE8C(v23, v25, v27, v29);
    goto LABEL_9;
  }
  uint64_t v30 = (void *)swift_dynamicCastClass();
  a4 = v31;
  a5 = v8;
  LOBYTE(v8) = v67;
  if (!v30)
  {
    swift_unknownObjectRelease();
    uint64_t v30 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease();
  int64_t v34 = v30[2];
  if (v34)
  {
    long long v55 = v16;
    long long v56 = v11;
    uint64_t v57 = a5;
    long long v58 = a4;
    uint64_t v74 = _swiftEmptyArrayStorage;
    sub_467B8(0, v34, 0);
    uint64_t v35 = 0;
    long long v36 = v74;
    unint64_t v68 = v30;
    do
    {
      long long v37 = &v30[v35];
      uint64_t v73 = v30[v35 + 4];
      int v72 = LOBYTE(v30[v35 + 5]);
      uint64_t v71 = v30[v35 + 6];
      int v70 = LOBYTE(v30[v35 + 7]);
      uint64_t v38 = v30[v35 + 8];
      char v39 = v30[v35 + 9];
      uint64_t v40 = v30[v35 + 10];
      uint64_t v69 = v37[11];
      uint64_t v41 = v37[12];
      uint64_t v42 = v37[13];
      sub_5480C(v38, v39);
      uint64_t v74 = v36;
      unint64_t v43 = v36[2];
      unint64_t v44 = v36[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v43 >= v44 >> 1)
      {
        sub_467B8(v44 > 1, v43 + 1, 1);
        long long v36 = v74;
      }
      v36[2] = v43 + 1;
      long long v45 = &v36[10 * v43];
      v45[4] = v73;
      *((unsigned char *)v45 + 40) = v72;
      v45[6] = v71;
      *((unsigned char *)v45 + 56) = v70;
      v45[8] = v38;
      *((unsigned char *)v45 + 72) = v39;
      uint64_t v46 = v69;
      v45[10] = v40;
      v45[11] = v46;
      v45[12] = v41;
      v45[13] = v42;
      v35 += 19;
      --v34;
      uint64_t v30 = v68;
    }
    while (v34);
    swift_release();
    a4 = v58;
    LOBYTE(v8) = v67;
    uint64_t v11 = v56;
    unint64_t v16 = v55;
  }
  else
  {
    swift_release();
    long long v36 = _swiftEmptyArrayStorage;
  }
  if (v36[2] >= v66)
  {
    uint64_t v74 = v36;
    sub_12124(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    sub_1FB3D0();
    uint64_t v49 = v64;
    uint64_t v48 = v65;
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v64 + 48))(v16, 1, v65) == 1)
    {
      return sub_55F38((uint64_t)v16, &qword_26D928);
    }
    else
    {
      int64_t v50 = v16;
      uint64_t v51 = v60;
      (*(void (**)(char *, char *, uint64_t))(v49 + 32))(v60, v50, v48);
      uint64_t v52 = (uint64_t)v62;
      (*(void (**)(char *, char *, uint64_t))(v49 + 16))(v62, v51, v48);
      swift_storeEnumTagMultiPayload();
      double v53 = sub_1EFB9C(v20);
      uint64_t v54 = v63;
      sub_EB6E8(v52, v63, type metadata accessor for CollectionRecommendation);
      *(unsigned char *)(v54 + v11[5]) = v59;
      *(unsigned char *)(v54 + v11[6]) = v8 & 1;
      *(double *)(v54 + v11[7]) = v53;
      a4(v54);
      sub_37898(v54, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898(v52, type metadata accessor for CollectionRecommendation);
      return (*(uint64_t (**)(char *, uint64_t))(v49 + 8))(v51, v48);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_E4CCC(unsigned __int8 *a1, uint64_t a2, int a3, void (*a4)(void), uint64_t a5)
{
  uint64_t v11 = (int *)type metadata accessor for ScoredCollectionRecommendation();
  __chkstk_darwin(v11);
  uint64_t v65 = (uint64_t)&v58 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v63);
  uint64_t v64 = (char *)&v58 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_12124(&qword_26D928);
  __chkstk_darwin(v14 - 8);
  uint64_t v66 = (char *)&v58 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v68 = sub_12124(&qword_26D088);
  uint64_t v67 = *(void *)(v68 - 8);
  __chkstk_darwin(v68);
  long long v62 = (char *)&v58 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  LODWORD(a1) = *a1;
  long long v17 = *(_OWORD *)(v5 + 176);
  long long v81 = *(_OWORD *)(v5 + 160);
  long long v82 = v17;
  long long v83 = *(_OWORD *)(v5 + 192);
  uint64_t v84 = *(void *)(v5 + 208);
  long long v18 = *(_OWORD *)(v5 + 112);
  v77[6] = *(_OWORD *)(v5 + 96);
  long long v78 = v18;
  long long v19 = *(_OWORD *)(v5 + 144);
  long long v79 = *(_OWORD *)(v5 + 128);
  long long v80 = v19;
  long long v20 = *(_OWORD *)(v5 + 48);
  v77[2] = *(_OWORD *)(v5 + 32);
  v77[3] = v20;
  long long v21 = *(_OWORD *)(v5 + 80);
  v77[4] = *(_OWORD *)(v5 + 64);
  v77[5] = v21;
  long long v22 = *(_OWORD *)(v5 + 16);
  v77[0] = *(_OWORD *)v5;
  v77[1] = v22;
  sub_EDFA0((uint64_t)v77);
  swift_bridgeObjectRetain();
  uint64_t v23 = swift_bridgeObjectRetain();
  int v61 = (int)a1;
  uint64_t v24 = sub_EA9CC(v23, (uint64_t)v77, a2, (char)a1);
  swift_bridgeObjectRelease();
  sub_EDC98((uint64_t)v77);
  swift_bridgeObjectRelease();
  int64_t v25 = sub_3E3A8(v79, v24);
  uint64_t v27 = v26;
  uint64_t v29 = v28;
  unint64_t v31 = v30;
  if ((v30 & 1) == 0) {
    goto LABEL_2;
  }
  sub_1FC730();
  swift_unknownObjectRetain_n();
  uint64_t v33 = (void *)swift_dynamicCastClass();
  if (!v33)
  {
    swift_unknownObjectRelease();
    uint64_t v33 = _swiftEmptyArrayStorage;
  }
  uint64_t v34 = v33[2];
  swift_release();
  if (__OFSUB__(v31 >> 1, v29))
  {
    __break(1u);
    goto LABEL_22;
  }
  if (v34 != (v31 >> 1) - v29)
  {
LABEL_22:
    swift_unknownObjectRelease();
LABEL_2:
    long long v32 = sub_4BE8C(v25, v27, v29, v31);
    goto LABEL_9;
  }
  long long v32 = (void *)swift_dynamicCastClass();
  if (!v32)
  {
    swift_unknownObjectRelease();
    long long v32 = _swiftEmptyArrayStorage;
  }
LABEL_9:
  swift_unknownObjectRelease();
  int64_t v35 = v32[2];
  if (v35)
  {
    long long v58 = v11;
    int v59 = a3;
    uint64_t v60 = a5;
    uint64_t v69 = a4;
    unint64_t v76 = _swiftEmptyArrayStorage;
    sub_467B8(0, v35, 0);
    uint64_t v36 = 0;
    long long v37 = v76;
    int v70 = v32;
    do
    {
      uint64_t v38 = &v32[v36];
      uint64_t v75 = v32[v36 + 4];
      int v74 = LOBYTE(v32[v36 + 5]);
      uint64_t v73 = v32[v36 + 6];
      int v72 = LOBYTE(v32[v36 + 7]);
      uint64_t v39 = v32[v36 + 8];
      char v40 = v32[v36 + 9];
      uint64_t v41 = v32[v36 + 10];
      uint64_t v71 = v38[11];
      uint64_t v42 = v38[12];
      uint64_t v43 = v38[13];
      sub_5480C(v39, v40);
      unint64_t v76 = v37;
      unint64_t v44 = v37[2];
      unint64_t v45 = v37[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v44 >= v45 >> 1)
      {
        sub_467B8(v45 > 1, v44 + 1, 1);
        long long v37 = v76;
      }
      v37[2] = v44 + 1;
      uint64_t v46 = &v37[10 * v44];
      v46[4] = v75;
      *((unsigned char *)v46 + 40) = v74;
      v46[6] = v73;
      *((unsigned char *)v46 + 56) = v72;
      v46[8] = v39;
      *((unsigned char *)v46 + 72) = v40;
      uint64_t v47 = v71;
      v46[10] = v41;
      v46[11] = v47;
      v46[12] = v42;
      v46[13] = v43;
      v36 += 19;
      --v35;
      long long v32 = v70;
    }
    while (v35);
    swift_release();
    a4 = v69;
    LOBYTE(a3) = v59;
    uint64_t v11 = v58;
  }
  else
  {
    swift_release();
    long long v37 = _swiftEmptyArrayStorage;
  }
  if (v37[2] < *((uint64_t *)&v78 + 1)) {
    return swift_bridgeObjectRelease();
  }
  unint64_t v76 = v37;
  sub_12124(&qword_26D6A0);
  sub_52CC0(&qword_26D930, &qword_26D6A0);
  uint64_t v49 = (uint64_t)v66;
  sub_1FB3D0();
  uint64_t v50 = v67;
  uint64_t v51 = v68;
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v67 + 48))(v49, 1, v68) == 1) {
    return sub_55F38(v49, &qword_26D928);
  }
  uint64_t v52 = *(void (**)(char *, uint64_t, uint64_t))(v50 + 32);
  uint64_t v69 = a4;
  double v53 = v62;
  v52(v62, v49, v51);
  uint64_t v54 = *(int *)(sub_12124(&qword_26D9C8) + 48);
  uint64_t v55 = (uint64_t)v64;
  (*(void (**)(char *, char *, uint64_t))(v50 + 16))(v64, v53, v51);
  *(unsigned char *)(v55 + v54) = 2;
  swift_storeEnumTagMultiPayload();
  double v56 = sub_1EFB9C(*((long double *)&v79 + 1));
  uint64_t v57 = v65;
  sub_EB6E8(v55, v65, type metadata accessor for CollectionRecommendation);
  *(unsigned char *)(v57 + v11[5]) = v61;
  *(unsigned char *)(v57 + v11[6]) = a3 & 1;
  *(double *)(v57 + v11[7]) = v56;
  v69(v57);
  sub_37898(v57, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898(v55, type metadata accessor for CollectionRecommendation);
  return (*(uint64_t (**)(char *, uint64_t))(v50 + 8))(v53, v51);
}

uint64_t sub_E53DC(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(a2 + 16);
  if (!v2) {
    return 1;
  }
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return 1;
  }
  int64_t v4 = 0;
  if (v2 >= v3) {
    uint64_t v5 = result;
  }
  else {
    uint64_t v5 = a2;
  }
  if (v2 >= v3) {
    uint64_t v6 = a2;
  }
  else {
    uint64_t v6 = result;
  }
  uint64_t v7 = v5 + 56;
  uint64_t v8 = -1 << *(unsigned char *)(v5 + 32);
  if (-v8 < 64) {
    uint64_t v9 = ~(-1 << -(char)v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 56);
  int64_t v11 = (unint64_t)(63 - v8) >> 6;
  uint64_t v12 = v6 + 56;
  while (1)
  {
    while (1)
    {
      int64_t v13 = v4;
      if (!v10) {
        break;
      }
      unint64_t v14 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v15 = v14 | (v4 << 6);
      if (*(void *)(v6 + 16))
      {
LABEL_29:
        uint64_t v19 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
        uint64_t result = sub_1FC7D0();
        uint64_t v20 = -1 << *(unsigned char *)(v6 + 32);
        unint64_t v21 = result & ~v20;
        if ((*(void *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = *(void *)(v6 + 48);
          if (*(void *)(v22 + 8 * v21) == v19)
          {
LABEL_34:
            swift_bridgeObjectRetain();
            uint64_t v24 = 0;
LABEL_35:
            sub_1226C();
            return v24;
          }
          uint64_t v23 = ~v20;
          while (1)
          {
            unint64_t v21 = (v21 + 1) & v23;
            if (((*(void *)(v12 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              break;
            }
            if (*(void *)(v22 + 8 * v21) == v19) {
              goto LABEL_34;
            }
          }
        }
      }
    }
    int64_t v16 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v16 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v4;
    if (!v17)
    {
      int64_t v4 = v13 + 2;
      if (v13 + 2 >= v11) {
        goto LABEL_38;
      }
      unint64_t v17 = *(void *)(v7 + 8 * v4);
      if (!v17)
      {
        int64_t v4 = v13 + 3;
        if (v13 + 3 >= v11) {
          goto LABEL_38;
        }
        unint64_t v17 = *(void *)(v7 + 8 * v4);
        if (!v17)
        {
          int64_t v18 = v13 + 4;
          if (v13 + 4 >= v11)
          {
LABEL_38:
            swift_bridgeObjectRetain();
            uint64_t v24 = 1;
            goto LABEL_35;
          }
          unint64_t v17 = *(void *)(v7 + 8 * v18);
          int64_t v4 = v13 + 4;
          if (!v17) {
            break;
          }
        }
      }
    }
LABEL_28:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v4 << 6);
    if (*(void *)(v6 + 16)) {
      goto LABEL_29;
    }
  }
  while (1)
  {
    int64_t v4 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v4 >= v11) {
      goto LABEL_38;
    }
    unint64_t v17 = *(void *)(v7 + 8 * v4);
    ++v18;
    if (v17) {
      goto LABEL_28;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_E5604@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_E5614(a1, a2, a3);
}

uint64_t sub_E560C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_E5614(a1, a2, a3);
}

uint64_t sub_E5614@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v5 = *a2;
  uint64_t v6 = sub_12124(&qword_26D998);
  uint64_t v7 = *(int *)(v6 + 48);
  uint64_t v8 = *(int *)(v6 + 64);
  uint64_t v9 = sub_12124(&qword_26D088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a3, a1, v9);
  *(void *)(a3 + v7) = v5;
  *(unsigned char *)(a3 + v8) = 2;
  type metadata accessor for CollectionRecommendation(0);

  return swift_storeEnumTagMultiPayload();
}

void *sub_E56D4@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  memcpy(v22, a2, 0x229uLL);
  uint64_t v8 = *(void *)(a3 + 96);
  if (!*(void *)(v8 + 16))
  {
    unint64_t v15 = (void *)(a4 + *(int *)(sub_12124(&qword_26D090) + 48));
    uint64_t v16 = sub_12124(&qword_26D088);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(a4, a1, v16);
    unint64_t v17 = v15;
    int64_t v18 = a2;
LABEL_6:
    memcpy(v17, v18, 0x229uLL);
    uint64_t v12 = sub_12124(&qword_26D090);
    int64_t v11 = _swiftEmptySetSingleton;
    goto LABEL_7;
  }
  sub_12384(v22);
  unint64_t v9 = sub_4C880(v22);
  if ((v10 & 1) == 0)
  {
    sub_124B4(v22);
    uint64_t v19 = (void *)(a4 + *(int *)(sub_12124(&qword_26D090) + 48));
    uint64_t v20 = sub_12124(&qword_26D088);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(a4, a1, v20);
    int64_t v18 = v22;
    unint64_t v17 = v19;
    goto LABEL_6;
  }
  int64_t v11 = *(void **)(*(void *)(v8 + 56) + 8 * v9);
  swift_bridgeObjectRetain();
  sub_124B4(v22);
  uint64_t v12 = sub_12124(&qword_26D090);
  int64_t v13 = (void *)(a4 + *(int *)(v12 + 48));
  uint64_t v14 = sub_12124(&qword_26D088);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 16))(a4, a1, v14);
  memcpy(v13, v22, 0x229uLL);
LABEL_7:
  *(void *)(a4 + *(int *)(v12 + 64)) = v11;
  type metadata accessor for CollectionRecommendation(0);
  swift_storeEnumTagMultiPayload();
  return sub_12384(v22);
}

uint64_t sub_E58D4(void *a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(char *, unsigned char *), uint64_t a8, void (*a9)(char *), uint64_t a10, unsigned __int8 a11)
{
  uint64_t v67 = a8;
  uint64_t v68 = a7;
  unsigned __int8 v16 = a11;
  uint64_t v70 = a10;
  uint64_t v69 = a9;
  unint64_t v17 = (int *)type metadata accessor for ScoredCollectionRecommendation();
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v59 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v20 - 8);
  uint64_t v66 = (char *)&v59 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_12124(&qword_26D928);
  __chkstk_darwin(v22 - 8);
  uint64_t v73 = (char *)&v59 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_12124(&qword_26D088);
  uint64_t v71 = *(void *)(v24 - 8);
  uint64_t v72 = v24;
  __chkstk_darwin(v24);
  uint64_t v65 = (char *)&v59 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  memcpy(v82, a1, 0x229uLL);
  uint64_t result = sub_39F84(a1, a3);
  if (result) {
    return result;
  }
  swift_bridgeObjectRetain();
  uint64_t v27 = swift_bridgeObjectRetain();
  uint64_t v28 = sub_EB758(v27, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v29 = sub_3E3A8(*(void *)(a6 + 128), v28);
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  unint64_t v35 = v34;
  uint64_t v63 = a6;
  uint64_t v64 = v19;
  if (v34)
  {
    long long v37 = v17;
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v38 = (void *)swift_dynamicCastClass();
    if (!v38)
    {
      swift_unknownObjectRelease();
      uint64_t v38 = _swiftEmptyArrayStorage;
    }
    uint64_t v39 = v38[2];
    swift_release();
    if (__OFSUB__(v35 >> 1, v33))
    {
      __break(1u);
    }
    else if (v39 == (v35 >> 1) - v33)
    {
      uint64_t v36 = (void *)swift_dynamicCastClass();
      unint64_t v17 = v37;
      a6 = v63;
      uint64_t v19 = v64;
      if (!v36)
      {
        swift_unknownObjectRelease();
        uint64_t v36 = _swiftEmptyArrayStorage;
      }
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
    unint64_t v17 = v37;
    a6 = v63;
    uint64_t v19 = v64;
  }
  uint64_t v36 = sub_4BE8C(v29, v31, v33, v35);
LABEL_10:
  swift_unknownObjectRelease();
  int64_t v40 = v36[2];
  if (v40)
  {
    uint64_t v60 = v17;
    int v61 = a11;
    int v62 = a5;
    long long v81 = _swiftEmptyArrayStorage;
    sub_467B8(0, v40, 0);
    uint64_t v41 = 0;
    uint64_t v42 = v81;
    int v74 = v36;
    do
    {
      uint64_t v79 = v36[v41 + 4];
      int v78 = LOBYTE(v36[v41 + 5]);
      uint64_t v77 = v36[v41 + 6];
      int v76 = LOBYTE(v36[v41 + 7]);
      uint64_t v43 = v36[v41 + 8];
      char v44 = v36[v41 + 9];
      uint64_t v45 = v36[v41 + 10];
      uint64_t v75 = v36[v41 + 11];
      uint64_t v46 = v36[v41 + 12];
      uint64_t v47 = v36[v41 + 13];
      sub_5480C(v43, v44);
      unint64_t v48 = v42[2];
      unint64_t v49 = v42[3];
      int64_t v80 = v48 + 1;
      long long v81 = v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 >= v49 >> 1)
      {
        sub_467B8(v49 > 1, v80, 1);
        uint64_t v42 = v81;
      }
      uint64_t v50 = v79;
      void v42[2] = v80;
      uint64_t v51 = &v42[10 * v48];
      v51[4] = v50;
      *((unsigned char *)v51 + 40) = v78;
      v51[6] = v77;
      *((unsigned char *)v51 + 56) = v76;
      v51[8] = v43;
      *((unsigned char *)v51 + 72) = v44;
      uint64_t v36 = v74;
      uint64_t v52 = v75;
      v51[10] = v45;
      v51[11] = v52;
      v51[12] = v46;
      v51[13] = v47;
      v41 += 19;
      --v40;
    }
    while (v40);
    swift_release();
    unsigned __int8 v16 = v61;
    LOBYTE(a5) = v62;
    unint64_t v17 = v60;
    a6 = v63;
    uint64_t v19 = v64;
  }
  else
  {
    swift_release();
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  uint64_t v53 = (uint64_t)v73;
  if (v42[2] >= *(void *)(a6 + 120))
  {
    long long v81 = v42;
    sub_12124(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    sub_1FB3D0();
    uint64_t v55 = v71;
    uint64_t v54 = v72;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v71 + 48))(v53, 1, v72) == 1)
    {
      return sub_55F38(v53, &qword_26D928);
    }
    else
    {
      double v56 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v55 + 32))(v65, v53, v54);
      uint64_t v57 = (uint64_t)v66;
      v68(v56, v82);
      double v58 = sub_1EFB9C(*(long double *)(a6 + 136));
      sub_EB6E8(v57, (uint64_t)v19, type metadata accessor for CollectionRecommendation);
      v19[v17[5]] = a5;
      v19[v17[6]] = v16 & 1;
      *(double *)&v19[v17[7]] = v58;
      v69(v19);
      sub_37898((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898(v57, type metadata accessor for CollectionRecommendation);
      return (*(uint64_t (**)(char *, uint64_t))(v55 + 8))(v56, v72);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_E5EF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, int a5, uint64_t a6, void (*a7)(void, void), uint64_t a8, void (*a9)(char *), uint64_t a10, unsigned __int8 a11)
{
  int v67 = a11;
  uint64_t v68 = a9;
  uint64_t v69 = a10;
  uint64_t v18 = type metadata accessor for ScoredCollectionRecommendation();
  __chkstk_darwin(v18);
  uint64_t v20 = (char *)&v59 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v21 - 8);
  uint64_t v66 = (char *)&v59 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_12124(&qword_26D928);
  __chkstk_darwin(v23 - 8);
  uint64_t v72 = (char *)&v59 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_12124(&qword_26D088);
  uint64_t v70 = *(void *)(v25 - 8);
  uint64_t v71 = v25;
  __chkstk_darwin(v25);
  uint64_t v65 = (char *)&v59 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = a1;
  uint64_t result = sub_395FC(a1, a3);
  if (result) {
    return result;
  }
  uint64_t v63 = v18;
  swift_bridgeObjectRetain();
  uint64_t v28 = swift_bridgeObjectRetain();
  uint64_t v29 = sub_EB758(v28, a4, a5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v30 = sub_3E3A8(*(void *)(a6 + 128), v29);
  uint64_t v32 = v31;
  uint64_t v34 = v33;
  unint64_t v36 = v35;
  uint64_t v64 = a8;
  if (v35)
  {
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v38 = (void *)swift_dynamicCastClass();
    if (!v38)
    {
      swift_unknownObjectRelease();
      uint64_t v38 = _swiftEmptyArrayStorage;
    }
    uint64_t v39 = v38[2];
    swift_release();
    if (__OFSUB__(v36 >> 1, v34))
    {
      __break(1u);
    }
    else if (v39 == (v36 >> 1) - v34)
    {
      long long v37 = (void *)swift_dynamicCastClass();
      if (!v37)
      {
        swift_unknownObjectRelease();
        long long v37 = _swiftEmptyArrayStorage;
      }
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
  }
  long long v37 = sub_4BE8C(v30, v32, v34, v36);
LABEL_10:
  swift_unknownObjectRelease();
  int64_t v40 = v37[2];
  if (v40)
  {
    uint64_t v59 = a7;
    uint64_t v60 = a6;
    int v61 = v20;
    int v62 = a5;
    uint64_t v79 = _swiftEmptyArrayStorage;
    sub_467B8(0, v40, 0);
    uint64_t v41 = 0;
    uint64_t v42 = v79;
    uint64_t v73 = v37;
    do
    {
      uint64_t v78 = v37[v41 + 4];
      int v77 = LOBYTE(v37[v41 + 5]);
      uint64_t v76 = v37[v41 + 6];
      int v75 = LOBYTE(v37[v41 + 7]);
      uint64_t v43 = v37[v41 + 8];
      char v44 = v37[v41 + 9];
      uint64_t v45 = v37[v41 + 10];
      uint64_t v74 = v37[v41 + 11];
      uint64_t v46 = v37[v41 + 12];
      uint64_t v47 = v37[v41 + 13];
      sub_5480C(v43, v44);
      uint64_t v79 = v42;
      unint64_t v48 = v42[2];
      unint64_t v49 = v42[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v48 >= v49 >> 1)
      {
        sub_467B8(v49 > 1, v48 + 1, 1);
        uint64_t v42 = v79;
      }
      void v42[2] = v48 + 1;
      uint64_t v50 = &v42[10 * v48];
      v50[4] = v78;
      *((unsigned char *)v50 + 40) = v77;
      v50[6] = v76;
      *((unsigned char *)v50 + 56) = v75;
      v50[8] = v43;
      *((unsigned char *)v50 + 72) = v44;
      long long v37 = v73;
      uint64_t v51 = v74;
      v50[10] = v45;
      v50[11] = v51;
      v50[12] = v46;
      v50[13] = v47;
      v41 += 19;
      --v40;
    }
    while (v40);
    swift_release();
    LOBYTE(a5) = v62;
    uint64_t v20 = v61;
    a6 = v60;
    a7 = v59;
  }
  else
  {
    swift_release();
    uint64_t v42 = _swiftEmptyArrayStorage;
  }
  uint64_t v52 = (uint64_t)v72;
  if (v42[2] >= *(void *)(a6 + 120))
  {
    uint64_t v79 = v42;
    sub_12124(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    sub_1FB3D0();
    uint64_t v54 = v70;
    uint64_t v53 = v71;
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v52, 1, v71) == 1)
    {
      return sub_55F38(v52, &qword_26D928);
    }
    else
    {
      uint64_t v55 = v65;
      (*(void (**)(char *, uint64_t, uint64_t))(v54 + 32))(v65, v52, v53);
      uint64_t v56 = (uint64_t)v66;
      a7(v55, &v80);
      double v57 = sub_1EFB9C(*(long double *)(a6 + 136));
      sub_EB6E8(v56, (uint64_t)v20, type metadata accessor for CollectionRecommendation);
      uint64_t v58 = v63;
      v20[*(int *)(v63 + 20)] = a5;
      v20[*(int *)(v58 + 24)] = v67 & 1;
      *(double *)&v20[*(int *)(v58 + 28)] = v57;
      v68(v20);
      sub_37898((uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898(v56, type metadata accessor for CollectionRecommendation);
      return (*(uint64_t (**)(char *, uint64_t))(v54 + 8))(v55, v53);
    }
  }
  else
  {
    return swift_bridgeObjectRelease();
  }
}

BOOL sub_E6554(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 8) < *(double *)(a1 + 8);
}

BOOL sub_E6568(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 8) >= *(double *)(a2 + 8);
}

BOOL sub_E657C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a2 + 8) >= *(double *)(a1 + 8);
}

BOOL sub_E6590(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 8) < *(double *)(a2 + 8);
}

BOOL sub_E65A4(uint64_t *a1, uint64_t *a2)
{
  return sub_18314(*a1, *a2);
}

uint64_t sub_E65B0()
{
  uint64_t v6 = 0;
  unint64_t v7 = 0xE000000000000000;
  sub_1FC050(29);
  v8._uint64_t countAndFlagsBits = 123;
  v8._object = (void *)0xE100000000000000;
  sub_1FB8F0(v8);
  CollectionRecommendation.collectionRecommendationType.getter(&v5);
  v9._uint64_t countAndFlagsBits = CollectionRecommendationType.rawValue.getter();
  sub_1FB8F0(v9);
  swift_bridgeObjectRelease();
  v10._uint64_t countAndFlagsBits = 0x7954616964656D20;
  v10._object = (void *)0xEB000000003D6570;
  sub_1FB8F0(v10);
  uint64_t v1 = type metadata accessor for ScoredCollectionRecommendation();
  if (*(unsigned char *)(v0 + *(int *)(v1 + 20)))
  {
    if (*(unsigned char *)(v0 + *(int *)(v1 + 20)) == 1)
    {
      unint64_t v2 = (void *)0xE90000000000006BLL;
      v3._uint64_t countAndFlagsBits = 0x6F6F626F69647561;
    }
    else
    {
      unint64_t v2 = (void *)0xE500000000000000;
      v3._uint64_t countAndFlagsBits = 0x646578696DLL;
    }
  }
  else
  {
    unint64_t v2 = (void *)0xE500000000000000;
    v3._uint64_t countAndFlagsBits = 0x6B6F6F6265;
  }
  v3._object = v2;
  sub_1FB8F0(v3);
  swift_bridgeObjectRelease();
  v11._uint64_t countAndFlagsBits = 0x3D65726F637320;
  v11._object = (void *)0xE700000000000000;
  sub_1FB8F0(v11);
  sub_1FBCA0();
  v12._uint64_t countAndFlagsBits = 32;
  v12._object = (void *)0xE100000000000000;
  sub_1FB8F0(v12);
  v13._uint64_t countAndFlagsBits = CollectionRecommendation.clusteringDebugDescription.getter();
  sub_1FB8F0(v13);
  swift_bridgeObjectRelease();
  v14._uint64_t countAndFlagsBits = 125;
  v14._object = (void *)0xE100000000000000;
  sub_1FB8F0(v14);
  return v6;
}

uint64_t CollectionRecommendation.clusteringDebugDescription.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v2);
  int64_t v4 = (char *)&v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_EB6E8(v1, (uint64_t)v4, type metadata accessor for CollectionRecommendation);
  if (swift_getEnumCaseMultiPayload() == 9)
  {
    char v5 = *(void **)v4;
    uint64_t v6 = *((void *)v4 + 2);
    uint64_t v7 = *((void *)v4 + 3);
    uint64_t v40 = v1;
    *(void *)&long long v41 = v6;
    uint64_t v8 = *((void *)v4 + 4);
    uint64_t v9 = *((void *)v4 + 5);
    uint64_t v10 = *((void *)v4 + 6);
    uint64_t v11 = *((void *)v4 + 7);
    uint64_t v12 = *((void *)v4 + 8);
    long long v39 = *((_OWORD *)v4 + 5);
    uint64_t v13 = *((void *)v4 + 13);
    uint64_t v43 = 0x3D736569726573;
    unint64_t v44 = 0xE700000000000000;
    uint64_t v45 = v5;
    v46._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v46);
    swift_bridgeObjectRelease();
    v47._uint64_t countAndFlagsBits = 58;
    v47._object = (void *)0xE100000000000000;
    sub_1FB8F0(v47);
    sub_12124(&qword_26D7F0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1FD2A0;
    *(void *)(v14 + 56) = &type metadata for Double;
    *(void *)(v14 + 64) = &protocol witness table for Double;
    *(void *)(v14 + 32) = v13;
    sub_7B974(v41, v7, v8, v9, v10, v11, v12);
    v15._uint64_t countAndFlagsBits = sub_1FB840();
  }
  else
  {
    sub_37898((uint64_t)v4, type metadata accessor for CollectionRecommendation);
    unsigned __int8 v16 = CollectionRecommendation.books.getter();
    unint64_t v17 = v16;
    if (v16[2] >= 3uLL) {
      int64_t v18 = 3;
    }
    else {
      int64_t v18 = v16[2];
    }
    if (v18)
    {
      uint64_t v40 = v1;
      uint64_t v45 = _swiftEmptyArrayStorage;
      sub_46588(0, v18, 0);
      uint64_t v19 = 0;
      uint64_t v20 = v45;
      long long v41 = xmmword_1FD2A0;
      do
      {
        uint64_t v21 = v17[v19 + 4];
        char v22 = v17[v19 + 5];
        uint64_t v23 = v17[v19 + 13];
        uint64_t v43 = 0;
        unint64_t v44 = 0xE000000000000000;
        uint64_t v42 = v21;
        v48._uint64_t countAndFlagsBits = sub_1FC580();
        sub_1FB8F0(v48);
        swift_bridgeObjectRelease();
        v49._uint64_t countAndFlagsBits = 58;
        v49._object = (void *)0xE100000000000000;
        sub_1FB8F0(v49);
        LOBYTE(v42) = v22;
        sub_1FC1D0();
        v50._uint64_t countAndFlagsBits = 58;
        v50._object = (void *)0xE100000000000000;
        sub_1FB8F0(v50);
        sub_12124(&qword_26D7F0);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = v41;
        *(void *)(v24 + 56) = &type metadata for Double;
        *(void *)(v24 + 64) = &protocol witness table for Double;
        *(void *)(v24 + 32) = v23;
        v51._uint64_t countAndFlagsBits = sub_1FB840();
        sub_1FB8F0(v51);
        swift_bridgeObjectRelease();
        uint64_t v25 = v43;
        unint64_t v26 = v44;
        uint64_t v45 = v20;
        unint64_t v28 = v20[2];
        unint64_t v27 = v20[3];
        if (v28 >= v27 >> 1)
        {
          sub_46588(v27 > 1, v28 + 1, 1);
          uint64_t v20 = v45;
        }
        v20[2] = v28 + 1;
        uint64_t v29 = &v20[2 * v28];
        v29[4] = v25;
        v29[5] = v26;
        v19 += 10;
      }
      while (10 * v18 != v19);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = _swiftEmptyArrayStorage;
    }
    uint64_t v43 = (uint64_t)v20;
    sub_12124(&qword_26C6D8);
    sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
    uint64_t v30 = sub_1FB7B0();
    uint64_t v32 = v31;
    swift_bridgeObjectRelease();
    uint64_t v43 = 0x28736B6F6F62;
    unint64_t v44 = 0xE600000000000000;
    uint64_t v33 = (void *)CollectionRecommendation.books.getter()[2];
    swift_bridgeObjectRelease();
    uint64_t v45 = v33;
    v52._uint64_t countAndFlagsBits = sub_1FC580();
    sub_1FB8F0(v52);
    swift_bridgeObjectRelease();
    v53._uint64_t countAndFlagsBits = 15657;
    v53._object = (void *)0xE200000000000000;
    sub_1FB8F0(v53);
    v54._uint64_t countAndFlagsBits = v30;
    v54._object = v32;
    sub_1FB8F0(v54);
    swift_bridgeObjectRelease();
    unint64_t v34 = CollectionRecommendation.books.getter()[2];
    swift_bridgeObjectRelease();
    if (v34 <= 3) {
      v15._uint64_t countAndFlagsBits = 0;
    }
    else {
      v15._uint64_t countAndFlagsBits = 10911970;
    }
    if (v34 <= 3) {
      unint64_t v35 = (void *)0xE000000000000000;
    }
    else {
      unint64_t v35 = (void *)0xA300000000000000;
    }
    v15._object = v35;
  }
  sub_1FB8F0(v15);
  swift_bridgeObjectRelease();
  uint64_t v36 = v43;
  long long v37 = (void *)v44;
  uint64_t v43 = 123;
  unint64_t v44 = 0xE100000000000000;
  CollectionRecommendation.collectionRecommendationType.getter((char *)&v45);
  v55._uint64_t countAndFlagsBits = CollectionRecommendationType.rawValue.getter();
  sub_1FB8F0(v55);
  swift_bridgeObjectRelease();
  v56._uint64_t countAndFlagsBits = 32;
  v56._object = (void *)0xE100000000000000;
  sub_1FB8F0(v56);
  v57._uint64_t countAndFlagsBits = v36;
  v57._object = v37;
  sub_1FB8F0(v57);
  swift_bridgeObjectRelease();
  v58._uint64_t countAndFlagsBits = 125;
  v58._object = (void *)0xE100000000000000;
  sub_1FB8F0(v58);
  return v43;
}

BOOL sub_E6C7C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 28)) < *(double *)(a1 + *(int *)(a3 + 28));
}

BOOL sub_E6C94(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 28)) >= *(double *)(a2 + *(int *)(a3 + 28));
}

BOOL sub_E6CAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a2 + *(int *)(a3 + 28)) >= *(double *)(a1 + *(int *)(a3 + 28));
}

BOOL sub_E6CC4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return *(double *)(a1 + *(int *)(a3 + 28)) < *(double *)(a2 + *(int *)(a3 + 28));
}

void sub_E6CE0()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(void *)(v0 + 72);
  v8._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v8);
  swift_bridgeObjectRelease();
  v9._uint64_t countAndFlagsBits = 58;
  v9._object = (void *)0xE100000000000000;
  sub_1FB8F0(v9);
  sub_1FC1D0();
  v10._uint64_t countAndFlagsBits = 58;
  v10._object = (void *)0xE100000000000000;
  sub_1FB8F0(v10);
  sub_12124(&qword_26D7F0);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_1FD2A0;
  *(void *)(v3 + 56) = &type metadata for Double;
  *(void *)(v3 + 64) = &protocol witness table for Double;
  *(void *)(v3 + 32) = v2;
  v11._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v11);
  swift_bridgeObjectRelease();
  v12._uint64_t countAndFlagsBits = 58;
  v12._object = (void *)0xE100000000000000;
  sub_1FB8F0(v12);
  if (v1)
  {
    uint64_t v4 = swift_bridgeObjectRetain();
    sub_E774C(v4);
    sub_12124(&qword_26C6D8);
    sub_5578C();
    uint64_t v5 = sub_1FB6F0();
    uint64_t v7 = v6;
    swift_bridgeObjectRelease();
    swift_release();
    v13._uint64_t countAndFlagsBits = v5;
    v13._object = v7;
    sub_1FB8F0(v13);
    swift_bridgeObjectRelease();
  }
  else
  {
    __break(1u);
  }
}

unint64_t sub_E6E94@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1617D8((uint64_t)_swiftEmptyArrayStorage);
  *a1 = result;
  return result;
}

uint64_t sub_E6EC4()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_12124(&qword_26D588);
  uint64_t v59 = *(void *)(v2 - 8);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v55 = (uint64_t)&v52 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v56 = (uint64_t)&v52 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  Swift::String v9 = (char *)&v52 - v8;
  uint64_t v10 = __chkstk_darwin(v7);
  uint64_t v61 = (uint64_t)&v52 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v53 = (uint64_t)&v52 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v57 = (uint64_t)&v52 - v15;
  __chkstk_darwin(v14);
  unint64_t v17 = (char *)&v52 - v16;
  uint64_t v18 = *(void *)(*v0 + 16);
  if (v18 == 1)
  {
LABEL_42:
    uint64_t result = sub_1FC220();
    __break(1u);
    return result;
  }
  sub_DBBBC(1uLL, v18 - 1);
  sub_DB93C(*(void *)(*v0 + 16) - 1, (uint64_t)v17);
  uint64_t result = sub_55F38((uint64_t)v17, &qword_26D588);
  unint64_t v20 = *v0;
  unint64_t v21 = *(void *)(*v0 + 16);
  if (v21 >= 3)
  {
    unint64_t v22 = 2;
    unint64_t v23 = 1;
    Swift::String v54 = v9;
    Swift::String v58 = v0;
    while (1)
    {
      if ((uint64_t)v22 < (uint64_t)(v21 - 1))
      {
        if (v22 >= v21) {
          goto LABEL_32;
        }
        unint64_t v60 = v23;
        unint64_t v24 = v20 + ((*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80));
        uint64_t v25 = *(void *)(v59 + 72);
        uint64_t v26 = v57;
        sub_EE0DC(v24 + v25 * v22, v57);
        uint64_t v27 = type metadata accessor for ScoredCollectionRecommendation();
        unint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 48);
        if (v28(v26, 1, v27) == 1) {
          goto LABEL_40;
        }
        if ((v22 | 1) >= *(void *)(v20 + 16)) {
          goto LABEL_33;
        }
        uint64_t v29 = v24 + v25 * (v22 | 1);
        uint64_t v30 = v53;
        sub_EE0DC(v29, v53);
        if (v28(v30, 1, v27) == 1) {
          goto LABEL_41;
        }
        uint64_t v31 = *(int *)(v27 + 28);
        uint64_t v32 = v57;
        double v33 = *(double *)(v57 + v31);
        double v34 = *(double *)(v30 + v31);
        sub_37898(v30, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
        sub_37898(v32, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
        if (v34 < v33) {
          v22 |= 1uLL;
        }
        unint64_t v20 = *v1;
        unint64_t v21 = *(void *)(*v1 + 16);
        unint64_t v23 = v60;
      }
      if (v23 >= v21) {
        break;
      }
      unint64_t v35 = (*(unsigned __int8 *)(v59 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v59 + 80);
      unint64_t v36 = v20 + v35;
      uint64_t v37 = *(void *)(v59 + 72);
      unint64_t v38 = v23;
      unint64_t v60 = v37 * v23;
      uint64_t v39 = v61;
      sub_EE0DC(v20 + v35 + v37 * v23, v61);
      uint64_t v40 = type metadata accessor for ScoredCollectionRecommendation();
      long long v41 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v40 - 8) + 48);
      if (v41(v39, 1, v40) == 1) {
        goto LABEL_38;
      }
      if (v22 >= *(void *)(v20 + 16)) {
        goto LABEL_30;
      }
      unint64_t v42 = v37 * v22;
      uint64_t v43 = v36 + v37 * v22;
      uint64_t v44 = (uint64_t)v54;
      sub_EE0DC(v43, (uint64_t)v54);
      if (v41(v44, 1, v40) == 1) {
        goto LABEL_39;
      }
      uint64_t v45 = *(int *)(v40 + 28);
      uint64_t v46 = v61;
      double v47 = *(double *)(v61 + v45);
      double v48 = *(double *)(v44 + v45);
      sub_37898(v44, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t result = sub_37898(v46, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v1 = v58;
      if (v48 >= v47) {
        return result;
      }
      if (v38 != v22)
      {
        unint64_t v49 = *v58;
        unint64_t v50 = *(void *)(*v58 + 16);
        if (v38 >= v50) {
          goto LABEL_34;
        }
        sub_EE0DC(v49 + v35 + v60, v56);
        if (v22 >= v50) {
          goto LABEL_35;
        }
        sub_EE0DC(v49 + v35 + v42, v55);
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v1 = v58;
        *Swift::String v58 = v49;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          unint64_t v49 = sub_984D0(v49);
          *uint64_t v1 = v49;
        }
        if (v38 >= *(void *)(v49 + 16)) {
          goto LABEL_36;
        }
        sub_EE2F8(v55, v49 + v35 + v60);
        if (v22 >= *(void *)(*v1 + 16)) {
          goto LABEL_37;
        }
        uint64_t result = sub_EE2F8(v56, *v1 + v35 + v42);
      }
      if ((uint64_t)(v22 + 0x4000000000000000) < 0) {
        goto LABEL_31;
      }
      unint64_t v23 = v22;
      unint64_t v20 = *v1;
      unint64_t v21 = *(void *)(*v1 + 16);
      v22 *= 2;
      if (v21 <= v22) {
        return result;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  return result;
}

uint64_t sub_E7438()
{
  uint64_t v1 = *(void *)(*v0 + 16);
  if (v1 == 1)
  {
LABEL_35:
    uint64_t result = sub_1FC220();
    __break(1u);
    return result;
  }
  sub_DBD70(1uLL, v1 - 1);
  sub_DBAC4(*(void *)(*v0 + 16) - 1, (uint64_t)&v31);
  uint64_t result = sub_EDDAC(v31);
  uint64_t v30 = (void *)*v0;
  unint64_t v3 = *(void *)(*v0 + 16);
  if (v3 >= 3)
  {
    unint64_t v4 = 2;
    unint64_t v5 = 1;
    unint64_t v22 = v0;
    while (1)
    {
      if ((uint64_t)v4 < (uint64_t)(v3 - 1))
      {
        unint64_t v3 = v30[2];
        if (v4 >= v3) {
          goto LABEL_28;
        }
        uint64_t v6 = (uint64_t)&v30[7 * v4 + 4];
        if (!*(void *)v6) {
          goto LABEL_33;
        }
        if ((v4 | 1) >= v3) {
          goto LABEL_29;
        }
        uint64_t v7 = (uint64_t)&v30[7 * (v4 | 1) + 4];
        if (!*(void *)v7) {
          goto LABEL_34;
        }
        if (*(double *)(v7 + 8) < *(double *)(v6 + 8)) {
          v4 |= 1uLL;
        }
      }
      if (v5 >= v3) {
        break;
      }
      uint64_t v8 = 7 * v5;
      uint64_t v9 = (uint64_t)&v30[7 * v5 + 4];
      uint64_t v10 = *(void *)v9;
      if (!*(void *)v9) {
        goto LABEL_31;
      }
      if (v4 >= v3) {
        goto LABEL_26;
      }
      uint64_t v11 = (uint64_t)&v30[7 * v4 + 4];
      uint64_t v12 = *(void *)v11;
      if (!*(void *)v11) {
        goto LABEL_32;
      }
      double v13 = *(double *)(v9 + 8);
      double v14 = *(double *)(v11 + 8);
      if (v14 >= v13) {
        return result;
      }
      if (v5 != v4)
      {
        uint64_t v15 = *(void *)(v11 + 16);
        uint64_t v28 = *(void *)(v11 + 24);
        uint64_t v16 = *(void *)(v11 + 32);
        uint64_t v29 = *(void *)(v11 + 40);
        char v17 = *(unsigned char *)(v11 + 48);
        uint64_t v25 = *(void *)(v9 + 24);
        uint64_t v26 = *(void *)(v9 + 16);
        uint64_t v23 = *(void *)(v9 + 40);
        uint64_t v24 = *(void *)(v9 + 32);
        char v27 = *(unsigned char *)(v9 + 48);
        sub_EDE0C(v10);
        sub_EDE0C(v12);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v30 = sub_984E4(v30);
        }
        uint64_t v18 = &v30[v8 + 4];
        uint64_t v19 = *v18;
        *uint64_t v18 = v12;
        *((double *)v18 + 1) = v14;
        unsigned __int16 v18[2] = v15;
        v18[3] = v28;
        v18[4] = v16;
        v18[5] = v29;
        *((unsigned char *)v18 + 48) = v17;
        sub_EDDAC(v19);
        if (v4 >= v30[2]) {
          goto LABEL_30;
        }
        uint64_t v20 = (uint64_t)&v30[7 * v4 + 4];
        uint64_t v21 = *(void *)v20;
        *(void *)uint64_t v20 = v10;
        *(double *)(v20 + 8) = v13;
        *(void *)(v20 + 16) = v26;
        *(void *)(v20 + 24) = v25;
        *(void *)(v20 + 32) = v24;
        *(void *)(v20 + 40) = v23;
        *(unsigned char *)(v20 + 48) = v27;
        uint64_t result = sub_EDDAC(v21);
        *unint64_t v22 = v30;
      }
      if ((uint64_t)(v4 + 0x4000000000000000) < 0) {
        goto LABEL_27;
      }
      unint64_t v5 = v4;
      unint64_t v3 = v30[2];
      v4 *= 2;
      if (v3 <= v4) {
        return result;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  return result;
}

void *sub_E774C(uint64_t a1)
{
  sub_12124(&qword_26F7A8);
  uint64_t result = (void *)sub_1FC280();
  int64_t v3 = 0;
  uint64_t v31 = a1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v5 = a1 + 64;
  uint64_t v4 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v5 - 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v4;
  uint64_t v28 = v5;
  int64_t v29 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v30 = result + 8;
  char v27 = result;
  if ((v8 & v4) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  for (unint64_t i = v10 | (v3 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v3 << 6))
  {
    char v15 = *(unsigned char *)(*(void *)(v31 + 48) + i);
    int64_t v16 = *(void *)(*(void *)(*(void *)(v31 + 56) + 8 * i) + 16);
    if (v16)
    {
      char v32 = *(unsigned char *)(*(void *)(v31 + 48) + i);
      unint64_t v33 = i;
      unint64_t v34 = v9;
      int64_t v35 = v3;
      swift_bridgeObjectRetain();
      sub_46588(0, v16, 0);
      uint64_t v17 = 32;
      do
      {
        uint64_t v18 = sub_1FC580();
        uint64_t v20 = v19;
        unint64_t v22 = _swiftEmptyArrayStorage[2];
        unint64_t v21 = _swiftEmptyArrayStorage[3];
        if (v22 >= v21 >> 1) {
          sub_46588(v21 > 1, v22 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v22 + 1;
        uint64_t v23 = &_swiftEmptyArrayStorage[2 * v22];
        void v23[4] = v18;
        v23[5] = v20;
        v17 += 560;
        --v16;
      }
      while (v16);
      swift_bridgeObjectRelease();
      uint64_t result = v27;
      unint64_t v9 = v34;
      int64_t v3 = v35;
      unint64_t i = v33;
      char v15 = v32;
    }
    *(void *)((char *)v30 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(result[6] + i) = v15;
    *(void *)(result[7] + 8 * i) = _swiftEmptyArrayStorage;
    uint64_t v24 = result[2];
    BOOL v25 = __OFADD__(v24, 1);
    uint64_t v26 = v24 + 1;
    if (v25)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      goto LABEL_31;
    }
    result[2] = v26;
    if (v9) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1)) {
      goto LABEL_30;
    }
    if (v12 >= v29) {
      return result;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v29) {
        return result;
      }
      unint64_t v13 = *(void *)(v28 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v29) {
          return result;
        }
        unint64_t v13 = *(void *)(v28 + 8 * v3);
        if (!v13) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v9 = (v13 - 1) & v13;
  }
  int64_t v14 = v12 + 3;
  if (v14 >= v29) {
    return result;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v29) {
      return result;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_18;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for ScoredCollectionRecommendation()
{
  uint64_t result = qword_26F828;
  if (!qword_26F828) {
    return swift_getSingletonMetadata();
  }
  return result;
}

Swift::Int sub_E7A5C(uint64_t (*a1)(long long *, _OWORD *), uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v205 = a2;
  Swift::Int v5 = v2[1];
  Swift::Int result = sub_1FC570(v5);
  if (result >= v5)
  {
    if (v5 < 0) {
      goto LABEL_139;
    }
    if (v5) {
      return sub_6F5D8(0, v5, 1, a1);
    }
    return result;
  }
  if (v5 >= 0) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = v5 + 1;
  }
  if (v5 <= -2) {
    goto LABEL_148;
  }
  uint64_t v152 = v2;
  Swift::Int v153 = result;
  if (v5 < 2)
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
    uint64_t v159 = (char *)&_swiftEmptyArrayStorage[4];
    long long v154 = _swiftEmptyArrayStorage;
    if (v5 != 1)
    {
      unint64_t v67 = _swiftEmptyArrayStorage[2];
LABEL_104:
      uint64_t v141 = v10;
      if (v67 >= 2)
      {
        uint64_t v142 = *v152;
        do
        {
          unint64_t v143 = v67 - 2;
          if (v67 < 2) {
            goto LABEL_134;
          }
          if (!v142) {
            goto LABEL_147;
          }
          uint64_t v144 = *(void *)&v141[16 * v143 + 32];
          uint64_t v145 = *(void *)&v141[16 * v67 + 24];
          sub_E8DD8((char *)(v142 + 152 * v144), (char *)(v142 + 152 * *(void *)&v141[16 * v67 + 16]), v142 + 152 * v145, v159, (uint64_t (*)(unsigned char *, unsigned char *))a1);
          if (v4) {
            break;
          }
          if (v145 < v144) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v141 = sub_70B24((uint64_t)v141);
          }
          if (v143 >= *((void *)v141 + 2)) {
            goto LABEL_136;
          }
          uint64_t v146 = &v141[16 * v143 + 32];
          *(void *)uint64_t v146 = v144;
          *((void *)v146 + 1) = v145;
          unint64_t v147 = *((void *)v141 + 2);
          if (v67 > v147) {
            goto LABEL_137;
          }
          memmove(&v141[16 * v67 + 16], &v141[16 * v67 + 32], 16 * (v147 - v67));
          *((void *)v141 + 2) = v147 - 1;
          uint64_t v4 = 0;
          unint64_t v67 = v147 - 1;
        }
        while (v147 > 2);
      }
LABEL_117:
      swift_bridgeObjectRelease();
      v154[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v8 = v7 >> 1;
    uint64_t v9 = sub_1FBB40();
    *(void *)(v9 + 16) = v8;
    long long v154 = (void *)v9;
    uint64_t v159 = (char *)(v9 + 32);
  }
  Swift::Int v11 = 0;
  uint64_t v12 = *v2;
  uint64_t v150 = *v2 - 152;
  uint64_t v151 = *v2 + 304;
  unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v155 = v5;
  uint64_t v156 = *v2;
  while (1)
  {
    Swift::Int v13 = v11;
    if (v11 + 1 >= v5)
    {
      ++v11;
LABEL_42:
      if (v11 < v13) {
        goto LABEL_138;
      }
      goto LABEL_43;
    }
    Swift::Int v157 = v11 + 1;
    int64_t v14 = (long long *)(v12 + 152 * (v11 + 1));
    long long v15 = v14[1];
    long long v185 = *v14;
    long long v186 = v15;
    long long v16 = v14[2];
    long long v17 = v14[3];
    long long v18 = v14[5];
    long long v189 = v14[4];
    long long v190 = v18;
    long long v187 = v16;
    long long v188 = v17;
    long long v19 = v14[6];
    long long v20 = v14[7];
    long long v21 = v14[8];
    char v194 = *((unsigned char *)v14 + 144);
    long long v192 = v20;
    long long v193 = v21;
    long long v191 = v19;
    long long v181 = v14[6];
    long long v182 = v14[7];
    long long v183 = v14[8];
    char v184 = *((unsigned char *)v14 + 144);
    long long v177 = v14[2];
    long long v178 = v14[3];
    long long v179 = v14[4];
    long long v180 = v14[5];
    long long v175 = *v14;
    long long v176 = v14[1];
    unint64_t v22 = (long long *)(v12 + 152 * v11);
    long long v23 = v22[1];
    long long v195 = *v22;
    long long v196 = v23;
    long long v24 = v22[2];
    long long v25 = v22[3];
    long long v26 = v22[5];
    long long v199 = v22[4];
    long long v200 = v26;
    long long v197 = v24;
    long long v198 = v25;
    long long v27 = v22[6];
    long long v28 = v22[7];
    long long v29 = v22[8];
    char v204 = *((unsigned char *)v22 + 144);
    long long v202 = v28;
    long long v203 = v29;
    long long v201 = v27;
    long long v171 = v22[6];
    long long v172 = v22[7];
    long long v173 = v22[8];
    char v174 = *((unsigned char *)v22 + 144);
    long long v167 = v22[2];
    long long v168 = v22[3];
    long long v169 = v22[4];
    long long v170 = v22[5];
    long long v165 = *v22;
    long long v166 = v22[1];
    sub_54834((uint64_t)&v185);
    sub_54834((uint64_t)&v195);
    int v30 = a1(&v175, &v165);
    if (v4)
    {
      sub_7A018((uint64_t)&v195);
      sub_7A018((uint64_t)&v185);
      goto LABEL_117;
    }
    int v31 = v30;
    sub_7A018((uint64_t)&v195);
    sub_7A018((uint64_t)&v185);
    v11 += 2;
    if (v13 + 2 < v5) {
      break;
    }
LABEL_22:
    if (v31) {
      goto LABEL_23;
    }
LABEL_33:
    Swift::Int v63 = v157;
    if (v11 >= v5) {
      goto LABEL_42;
    }
    if (__OFSUB__(v11, v13)) {
      goto LABEL_140;
    }
    if (v11 - v13 >= v153) {
      goto LABEL_42;
    }
    if (__OFADD__(v13, v153)) {
      goto LABEL_141;
    }
    if (v13 + v153 >= v5) {
      Swift::Int v64 = v5;
    }
    else {
      Swift::Int v64 = v13 + v153;
    }
    if (v64 < v13)
    {
LABEL_142:
      __break(1u);
      goto LABEL_143;
    }
    if (v11 == v64) {
      goto LABEL_42;
    }
    uint64_t v120 = (long long *)(v12 + 152 * v11);
    Swift::Int v148 = v64;
    do
    {
      uint64_t v149 = v120;
      while (1)
      {
        long long v121 = v120[1];
        long long v185 = *v120;
        long long v186 = v121;
        long long v122 = v120[2];
        long long v123 = v120[3];
        long long v124 = v120[5];
        long long v189 = v120[4];
        long long v190 = v124;
        long long v187 = v122;
        long long v188 = v123;
        long long v125 = v120[6];
        long long v126 = v120[7];
        long long v127 = v120[8];
        char v194 = *((unsigned char *)v120 + 144);
        long long v192 = v126;
        long long v193 = v127;
        long long v191 = v125;
        long long v181 = v120[6];
        long long v182 = v120[7];
        long long v183 = v120[8];
        char v184 = *((unsigned char *)v120 + 144);
        long long v177 = v120[2];
        long long v178 = v120[3];
        long long v179 = v120[4];
        long long v180 = v120[5];
        long long v175 = *v120;
        long long v176 = v120[1];
        long long v128 = *(long long *)((char *)v120 - 136);
        long long v195 = *(long long *)((char *)v120 - 152);
        long long v196 = v128;
        long long v129 = *(long long *)((char *)v120 - 120);
        long long v130 = *(long long *)((char *)v120 - 104);
        long long v131 = *(long long *)((char *)v120 - 72);
        long long v199 = *(long long *)((char *)v120 - 88);
        long long v200 = v131;
        long long v197 = v129;
        long long v198 = v130;
        long long v132 = *(long long *)((char *)v120 - 56);
        long long v133 = *(long long *)((char *)v120 - 40);
        long long v134 = *(long long *)((char *)v120 - 24);
        char v204 = *((unsigned char *)v120 - 8);
        long long v202 = v133;
        long long v203 = v134;
        long long v201 = v132;
        long long v171 = *(long long *)((char *)v120 - 56);
        long long v172 = *(long long *)((char *)v120 - 40);
        long long v173 = *(long long *)((char *)v120 - 24);
        char v174 = *((unsigned char *)v120 - 8);
        long long v167 = *(long long *)((char *)v120 - 120);
        long long v168 = *(long long *)((char *)v120 - 104);
        long long v169 = *(long long *)((char *)v120 - 88);
        long long v170 = *(long long *)((char *)v120 - 72);
        long long v165 = *(long long *)((char *)v120 - 152);
        long long v166 = *(long long *)((char *)v120 - 136);
        sub_54834((uint64_t)&v185);
        sub_54834((uint64_t)&v195);
        char v135 = a1(&v175, &v165);
        sub_7A018((uint64_t)&v195);
        sub_7A018((uint64_t)&v185);
        if ((v135 & 1) == 0) {
          break;
        }
        if (!v12) {
          goto LABEL_145;
        }
        uint64_t v136 = (uint64_t)v120 - 152;
        long long v181 = v120[6];
        long long v182 = v120[7];
        long long v183 = v120[8];
        char v184 = *((unsigned char *)v120 + 144);
        long long v177 = v120[2];
        long long v178 = v120[3];
        long long v179 = v120[4];
        long long v180 = v120[5];
        long long v175 = *v120;
        long long v176 = v120[1];
        long long v137 = *(long long *)((char *)v120 - 40);
        v120[6] = *(long long *)((char *)v120 - 56);
        v120[7] = v137;
        v120[8] = *(long long *)((char *)v120 - 24);
        *((void *)v120 + 18) = *((void *)v120 - 1);
        long long v138 = *(long long *)((char *)v120 - 104);
        v120[2] = *(long long *)((char *)v120 - 120);
        v120[3] = v138;
        long long v139 = *(long long *)((char *)v120 - 72);
        v120[4] = *(long long *)((char *)v120 - 88);
        v120[5] = v139;
        long long v140 = *(long long *)((char *)v120 - 136);
        *uint64_t v120 = *(long long *)((char *)v120 - 152);
        v120[1] = v140;
        *(_OWORD *)(v136 + 96) = v181;
        *(_OWORD *)(v136 + 112) = v182;
        *(_OWORD *)(v136 + 128) = v183;
        *(unsigned char *)(v136 + 144) = v184;
        *(_OWORD *)(v136 + 32) = v177;
        *(_OWORD *)(v136 + 48) = v178;
        *(_OWORD *)(v136 + 64) = v179;
        *(_OWORD *)(v136 + 80) = v180;
        *(_OWORD *)uint64_t v136 = v175;
        *(_OWORD *)(v136 + 16) = v176;
        if (v11 == v63) {
          break;
        }
        ++v63;
        uint64_t v120 = (long long *)((char *)v120 - 152);
      }
      ++v11;
      uint64_t v120 = (long long *)((char *)v149 + 152);
      Swift::Int v63 = v157;
    }
    while (v11 != v148);
    Swift::Int v11 = v148;
    if (v148 < v13) {
      goto LABEL_138;
    }
LABEL_43:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v10 = sub_7004C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v66 = *((void *)v10 + 2);
    unint64_t v65 = *((void *)v10 + 3);
    unint64_t v67 = v66 + 1;
    if (v66 >= v65 >> 1) {
      unint64_t v10 = sub_7004C((char *)(v65 > 1), v66 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v67;
    uint64_t v68 = v10 + 32;
    uint64_t v69 = &v10[16 * v66 + 32];
    *(void *)uint64_t v69 = v13;
    *((void *)v69 + 1) = v11;
    if (v66)
    {
      Swift::Int v158 = v11;
      while (1)
      {
        unint64_t v70 = v67 - 1;
        if (v67 >= 4)
        {
          int v75 = &v68[16 * v67];
          uint64_t v76 = *((void *)v75 - 8);
          uint64_t v77 = *((void *)v75 - 7);
          BOOL v81 = __OFSUB__(v77, v76);
          uint64_t v78 = v77 - v76;
          if (v81) {
            goto LABEL_123;
          }
          uint64_t v80 = *((void *)v75 - 6);
          uint64_t v79 = *((void *)v75 - 5);
          BOOL v81 = __OFSUB__(v79, v80);
          uint64_t v73 = v79 - v80;
          char v74 = v81;
          if (v81) {
            goto LABEL_124;
          }
          unint64_t v82 = v67 - 2;
          long long v83 = &v68[16 * v67 - 32];
          uint64_t v85 = *(void *)v83;
          uint64_t v84 = *((void *)v83 + 1);
          BOOL v81 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          if (v81) {
            goto LABEL_126;
          }
          BOOL v81 = __OFADD__(v73, v86);
          uint64_t v87 = v73 + v86;
          if (v81) {
            goto LABEL_129;
          }
          if (v87 >= v78)
          {
            int64_t v105 = &v68[16 * v70];
            uint64_t v107 = *(void *)v105;
            uint64_t v106 = *((void *)v105 + 1);
            BOOL v81 = __OFSUB__(v106, v107);
            uint64_t v108 = v106 - v107;
            if (v81) {
              goto LABEL_133;
            }
            BOOL v98 = v73 < v108;
            goto LABEL_80;
          }
        }
        else
        {
          if (v67 != 3)
          {
            uint64_t v99 = *((void *)v10 + 4);
            uint64_t v100 = *((void *)v10 + 5);
            BOOL v81 = __OFSUB__(v100, v99);
            uint64_t v92 = v100 - v99;
            char v93 = v81;
            goto LABEL_74;
          }
          uint64_t v72 = *((void *)v10 + 4);
          uint64_t v71 = *((void *)v10 + 5);
          BOOL v81 = __OFSUB__(v71, v72);
          uint64_t v73 = v71 - v72;
          char v74 = v81;
        }
        if (v74) {
          goto LABEL_125;
        }
        unint64_t v82 = v67 - 2;
        uint64_t v88 = &v68[16 * v67 - 32];
        uint64_t v90 = *(void *)v88;
        uint64_t v89 = *((void *)v88 + 1);
        BOOL v91 = __OFSUB__(v89, v90);
        uint64_t v92 = v89 - v90;
        char v93 = v91;
        if (v91) {
          goto LABEL_128;
        }
        unint64_t v94 = &v68[16 * v70];
        uint64_t v96 = *(void *)v94;
        uint64_t v95 = *((void *)v94 + 1);
        BOOL v81 = __OFSUB__(v95, v96);
        uint64_t v97 = v95 - v96;
        if (v81) {
          goto LABEL_131;
        }
        if (__OFADD__(v92, v97)) {
          goto LABEL_132;
        }
        if (v92 + v97 >= v73)
        {
          BOOL v98 = v73 < v97;
LABEL_80:
          if (v98) {
            unint64_t v70 = v82;
          }
          goto LABEL_82;
        }
LABEL_74:
        if (v93) {
          goto LABEL_127;
        }
        unint64_t v101 = &v68[16 * v70];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v81 = __OFSUB__(v102, v103);
        uint64_t v104 = v102 - v103;
        if (v81) {
          goto LABEL_130;
        }
        if (v104 < v92) {
          goto LABEL_91;
        }
LABEL_82:
        unint64_t v109 = v70 - 1;
        if (v70 - 1 >= v67)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v12) {
          goto LABEL_144;
        }
        uint64_t v110 = v4;
        uint64_t v111 = v10;
        uint64_t v112 = v12;
        unint64_t v113 = &v68[16 * v109];
        uint64_t v114 = *(void *)v113;
        uint64_t v115 = v68;
        unint64_t v116 = v70;
        uint64_t v117 = &v68[16 * v70];
        uint64_t v118 = *((void *)v117 + 1);
        sub_E8DD8((char *)(v112 + 152 * *(void *)v113), (char *)(v112 + 152 * *(void *)v117), v112 + 152 * v118, v159, (uint64_t (*)(unsigned char *, unsigned char *))a1);
        if (v110) {
          goto LABEL_117;
        }
        if (v118 < v114) {
          goto LABEL_120;
        }
        if (v116 > *((void *)v111 + 2)) {
          goto LABEL_121;
        }
        *(void *)unint64_t v113 = v114;
        *(void *)&v115[16 * v109 + 8] = v118;
        unint64_t v119 = *((void *)v111 + 2);
        if (v116 >= v119) {
          goto LABEL_122;
        }
        unint64_t v10 = v111;
        unint64_t v67 = v119 - 1;
        memmove(v117, v117 + 16, 16 * (v119 - 1 - v116));
        uint64_t v68 = v115;
        *((void *)v111 + 2) = v119 - 1;
        uint64_t v12 = v156;
        Swift::Int v11 = v158;
        uint64_t v4 = 0;
        if (v119 <= 2) {
          goto LABEL_91;
        }
      }
    }
    unint64_t v67 = 1;
LABEL_91:
    Swift::Int v5 = v155;
    if (v11 >= v155) {
      goto LABEL_104;
    }
  }
  char v32 = v10;
  Swift::Int v33 = v13 + 3;
  for (uint64_t i = v151 + 152 * v13; ; i += 152)
  {
    long long v35 = *(_OWORD *)(i + 16);
    long long v165 = *(_OWORD *)i;
    long long v166 = v35;
    long long v36 = *(_OWORD *)(i + 32);
    long long v37 = *(_OWORD *)(i + 48);
    long long v38 = *(_OWORD *)(i + 80);
    long long v169 = *(_OWORD *)(i + 64);
    long long v170 = v38;
    long long v167 = v36;
    long long v168 = v37;
    long long v39 = *(_OWORD *)(i + 96);
    long long v40 = *(_OWORD *)(i + 112);
    long long v41 = *(_OWORD *)(i + 128);
    char v174 = *(unsigned char *)(i + 144);
    long long v172 = v40;
    long long v173 = v41;
    long long v171 = v39;
    long long v42 = *(_OWORD *)(i + 112);
    v163[6] = *(_OWORD *)(i + 96);
    v163[7] = v42;
    v163[8] = *(_OWORD *)(i + 128);
    char v164 = *(unsigned char *)(i + 144);
    long long v43 = *(_OWORD *)(i + 48);
    v163[2] = *(_OWORD *)(i + 32);
    v163[3] = v43;
    long long v44 = *(_OWORD *)(i + 80);
    v163[4] = *(_OWORD *)(i + 64);
    v163[5] = v44;
    long long v45 = *(_OWORD *)(i + 16);
    v163[0] = *(_OWORD *)i;
    v163[1] = v45;
    long long v46 = *(_OWORD *)(i - 136);
    long long v175 = *(_OWORD *)(i - 152);
    long long v176 = v46;
    long long v47 = *(_OWORD *)(i - 120);
    long long v48 = *(_OWORD *)(i - 104);
    long long v49 = *(_OWORD *)(i - 72);
    long long v179 = *(_OWORD *)(i - 88);
    long long v180 = v49;
    long long v177 = v47;
    long long v178 = v48;
    long long v50 = *(_OWORD *)(i - 56);
    long long v51 = *(_OWORD *)(i - 40);
    long long v52 = *(_OWORD *)(i - 24);
    char v184 = *(unsigned char *)(i - 8);
    long long v182 = v51;
    long long v183 = v52;
    long long v181 = v50;
    long long v53 = *(_OWORD *)(i - 40);
    v161[6] = *(_OWORD *)(i - 56);
    v161[7] = v53;
    v161[8] = *(_OWORD *)(i - 24);
    char v162 = *(unsigned char *)(i - 8);
    long long v54 = *(_OWORD *)(i - 104);
    v161[2] = *(_OWORD *)(i - 120);
    v161[3] = v54;
    long long v55 = *(_OWORD *)(i - 72);
    v161[4] = *(_OWORD *)(i - 88);
    v161[5] = v55;
    long long v56 = *(_OWORD *)(i - 136);
    v161[0] = *(_OWORD *)(i - 152);
    v161[1] = v56;
    sub_54834((uint64_t)&v165);
    sub_54834((uint64_t)&v175);
    int v57 = a1(v163, v161);
    sub_7A018((uint64_t)&v175);
    sub_7A018((uint64_t)&v165);
    if ((v31 ^ v57))
    {
      Swift::Int v58 = v33 - 1;
      Swift::Int v5 = v155;
      unint64_t v10 = v32;
      Swift::Int v11 = v58;
      goto LABEL_22;
    }
    if (v155 == v33) {
      break;
    }
    ++v33;
  }
  Swift::Int v5 = v155;
  unint64_t v10 = v32;
  Swift::Int v11 = v155;
  if ((v31 & 1) == 0) {
    goto LABEL_33;
  }
LABEL_23:
  if (v11 >= v13)
  {
    if (v13 < v11)
    {
      uint64_t v59 = (_OWORD *)(v150 + 152 * v11);
      Swift::Int v60 = v11;
      Swift::Int v61 = v13;
      int v62 = (_OWORD *)(v12 + 152 * v13);
      do
      {
        if (v61 != --v60)
        {
          if (!v12) {
            goto LABEL_146;
          }
          long long v181 = v62[6];
          long long v182 = v62[7];
          long long v183 = v62[8];
          char v184 = *((unsigned char *)v62 + 144);
          long long v177 = v62[2];
          long long v178 = v62[3];
          long long v179 = v62[4];
          long long v180 = v62[5];
          long long v175 = *v62;
          long long v176 = v62[1];
          memmove(v62, v59, 0x98uLL);
          v59[6] = v181;
          v59[7] = v182;
          v59[8] = v183;
          *((unsigned char *)v59 + 144) = v184;
          v59[2] = v177;
          v59[3] = v178;
          v59[4] = v179;
          v59[5] = v180;
          *uint64_t v59 = v175;
          v59[1] = v176;
        }
        ++v61;
        uint64_t v59 = (_OWORD *)((char *)v59 - 152);
        int v62 = (_OWORD *)((char *)v62 + 152);
      }
      while (v61 < v60);
      Swift::Int v5 = v155;
    }
    goto LABEL_33;
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_E8688(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v95 = *a1;
      uint64_t v96 = -1;
      uint64_t v97 = 1;
      uint64_t v98 = *a1;
      do
      {
        uint64_t v99 = v96;
        uint64_t v100 = v98;
        do
        {
          uint64_t v101 = v100 + 40;
          uint64_t v102 = *(void *)(v100 + 40);
          if (v102 >= *(void *)v100) {
            break;
          }
          if (!v95) {
            goto LABEL_141;
          }
          uint64_t v103 = *(void *)(v100 + 48);
          char v104 = *(unsigned char *)(v100 + 56);
          uint64_t v105 = *(void *)(v100 + 64);
          Swift::Int result = *(unsigned __int8 *)(v100 + 72);
          long long v106 = *(_OWORD *)(v100 + 16);
          *(_OWORD *)uint64_t v101 = *(_OWORD *)v100;
          *(_OWORD *)(v100 + 56) = v106;
          uint64_t v107 = *(void *)(v100 + 32);
          *(void *)uint64_t v100 = v102;
          *(void *)(v100 + 8) = v103;
          *(unsigned char *)(v100 + 16) = v104;
          *(void *)(v100 + 24) = v105;
          *(unsigned char *)(v100 + 32) = result;
          v100 -= 40;
          *(void *)(v101 + 32) = v107;
        }
        while (!__CFADD__(v99++, 1));
        ++v97;
        v98 += 40;
        --v96;
      }
      while (v97 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v125 = v1;
  uint64_t v118 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      unint64_t v109 = v12;
      uint64_t v120 = v9;
      if (v13 >= 2)
      {
        uint64_t v110 = *v118;
        do
        {
          unint64_t v111 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v110) {
            goto LABEL_145;
          }
          uint64_t v112 = v109;
          uint64_t v113 = *(void *)&v109[16 * v111 + 32];
          uint64_t v114 = *(void *)&v109[16 * v13 + 24];
          sub_E9278((char *)(v110 + 40 * v113), (char *)(v110 + 40 * *(void *)&v109[16 * v13 + 16]), v110 + 40 * v114, __dst);
          if (v125) {
            break;
          }
          if (v114 < v113) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v112 = sub_70B24((uint64_t)v112);
          }
          if (v111 >= *((void *)v112 + 2)) {
            goto LABEL_134;
          }
          uint64_t v115 = &v112[16 * v111 + 32];
          *(void *)uint64_t v115 = v113;
          *((void *)v115 + 1) = v114;
          unint64_t v116 = *((void *)v112 + 2);
          if (v13 > v116) {
            goto LABEL_135;
          }
          memmove(&v112[16 * v13 + 16], &v112[16 * v13 + 32], 16 * (v116 - v13));
          unint64_t v109 = v112;
          *((void *)v112 + 2) = v116 - 1;
          unint64_t v13 = v116 - 1;
        }
        while (v116 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v120[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v120 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    uint64_t v120 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v119 = *a1 + 40;
  uint64_t v117 = *a1 - 40;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v121 = v6;
  Swift::Int v122 = v3;
  uint64_t v123 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 40 * v10);
      uint64_t v16 = *(void *)(v11 + 40 * v14);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        long long v17 = (void *)(v119 + 40 * v14);
        long long v18 = v17;
        while (1)
        {
          uint64_t v19 = v18[5];
          v18 += 5;
          if (v15 < v16 == v19 >= *v17) {
            break;
          }
          ++v10;
          long long v17 = v18;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 40 * v10;
          uint64_t v21 = 40 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              char v25 = *(unsigned char *)(v11 + v21 + 16);
              uint64_t v26 = v11 + v20;
              uint64_t v27 = *(void *)(v11 + v21 + 24);
              char v28 = *(unsigned char *)(v11 + v21 + 32);
              long long v29 = *(_OWORD *)(v11 + v21);
              uint64_t v30 = *(void *)(v11 + v20 - 8);
              long long v31 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v31;
              *(void *)(v24 + 32) = v30;
              *(_OWORD *)(v26 - 40) = v29;
              *(unsigned char *)(v26 - 24) = v25;
              *(void *)(v26 - 16) = v27;
              *(unsigned char *)(v26 - 8) = v28;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v32 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v32 >= v3) {
      Swift::Int v32 = v3;
    }
    if (v32 < v14) {
      break;
    }
    if (v10 != v32)
    {
      uint64_t v33 = v117 + 40 * v10;
      do
      {
        Swift::Int v34 = v14;
        uint64_t v35 = v33;
        do
        {
          uint64_t v36 = v35 + 40;
          uint64_t v37 = *(void *)(v35 + 40);
          if (v37 >= *(void *)v35) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v38 = *(void *)(v35 + 48);
          char v39 = *(unsigned char *)(v35 + 56);
          uint64_t v40 = *(void *)(v35 + 64);
          char v41 = *(unsigned char *)(v35 + 72);
          long long v42 = *(_OWORD *)(v35 + 16);
          *(_OWORD *)uint64_t v36 = *(_OWORD *)v35;
          *(_OWORD *)(v35 + 56) = v42;
          uint64_t v43 = *(void *)(v35 + 32);
          *(void *)uint64_t v35 = v37;
          *(void *)(v35 + 8) = v38;
          *(unsigned char *)(v35 + 16) = v39;
          *(void *)(v35 + 24) = v40;
          *(unsigned char *)(v35 + 32) = v41;
          v35 -= 40;
          ++v34;
          *(void *)(v36 + 32) = v43;
        }
        while (v10 != v34);
        ++v10;
        v33 += 40;
      }
      while (v10 != v32);
      Swift::Int v10 = v32;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_7004C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v45 = *((void *)v12 + 2);
    unint64_t v44 = *((void *)v12 + 3);
    unint64_t v13 = v45 + 1;
    uint64_t v11 = v123;
    if (v45 >= v44 >> 1)
    {
      unint64_t v94 = sub_7004C((char *)(v44 > 1), v45 + 1, 1, v12);
      uint64_t v11 = v123;
      uint64_t v12 = v94;
    }
    *((void *)v12 + 2) = v13;
    long long v46 = v12 + 32;
    long long v47 = &v12[16 * v45 + 32];
    *(void *)long long v47 = v14;
    *((void *)v47 + 1) = v10;
    if (v45)
    {
      while (1)
      {
        unint64_t v48 = v13 - 1;
        if (v13 >= 4)
        {
          long long v53 = &v46[16 * v13];
          uint64_t v54 = *((void *)v53 - 8);
          uint64_t v55 = *((void *)v53 - 7);
          BOOL v59 = __OFSUB__(v55, v54);
          uint64_t v56 = v55 - v54;
          if (v59) {
            goto LABEL_120;
          }
          uint64_t v58 = *((void *)v53 - 6);
          uint64_t v57 = *((void *)v53 - 5);
          BOOL v59 = __OFSUB__(v57, v58);
          uint64_t v51 = v57 - v58;
          char v52 = v59;
          if (v59) {
            goto LABEL_121;
          }
          unint64_t v60 = v13 - 2;
          Swift::Int v61 = &v46[16 * v13 - 32];
          uint64_t v63 = *(void *)v61;
          uint64_t v62 = *((void *)v61 + 1);
          BOOL v59 = __OFSUB__(v62, v63);
          uint64_t v64 = v62 - v63;
          if (v59) {
            goto LABEL_123;
          }
          BOOL v59 = __OFADD__(v51, v64);
          uint64_t v65 = v51 + v64;
          if (v59) {
            goto LABEL_126;
          }
          if (v65 >= v56)
          {
            long long v83 = &v46[16 * v48];
            uint64_t v85 = *(void *)v83;
            uint64_t v84 = *((void *)v83 + 1);
            BOOL v59 = __OFSUB__(v84, v85);
            uint64_t v86 = v84 - v85;
            if (v59) {
              goto LABEL_130;
            }
            BOOL v76 = v51 < v86;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v77 = *((void *)v12 + 4);
            uint64_t v78 = *((void *)v12 + 5);
            BOOL v59 = __OFSUB__(v78, v77);
            uint64_t v70 = v78 - v77;
            char v71 = v59;
            goto LABEL_77;
          }
          uint64_t v50 = *((void *)v12 + 4);
          uint64_t v49 = *((void *)v12 + 5);
          BOOL v59 = __OFSUB__(v49, v50);
          uint64_t v51 = v49 - v50;
          char v52 = v59;
        }
        if (v52) {
          goto LABEL_122;
        }
        unint64_t v60 = v13 - 2;
        unint64_t v66 = &v46[16 * v13 - 32];
        uint64_t v68 = *(void *)v66;
        uint64_t v67 = *((void *)v66 + 1);
        BOOL v69 = __OFSUB__(v67, v68);
        uint64_t v70 = v67 - v68;
        char v71 = v69;
        if (v69) {
          goto LABEL_125;
        }
        uint64_t v72 = &v46[16 * v48];
        uint64_t v74 = *(void *)v72;
        uint64_t v73 = *((void *)v72 + 1);
        BOOL v59 = __OFSUB__(v73, v74);
        uint64_t v75 = v73 - v74;
        if (v59) {
          goto LABEL_128;
        }
        if (__OFADD__(v70, v75)) {
          goto LABEL_129;
        }
        if (v70 + v75 >= v51)
        {
          BOOL v76 = v51 < v75;
LABEL_83:
          if (v76) {
            unint64_t v48 = v60;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v71) {
          goto LABEL_124;
        }
        uint64_t v79 = &v46[16 * v48];
        uint64_t v81 = *(void *)v79;
        uint64_t v80 = *((void *)v79 + 1);
        BOOL v59 = __OFSUB__(v80, v81);
        uint64_t v82 = v80 - v81;
        if (v59) {
          goto LABEL_127;
        }
        if (v82 < v70) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v87 = v48 - 1;
        if (v48 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v88 = v12;
        uint64_t v89 = &v46[16 * v87];
        uint64_t v90 = *(void *)v89;
        BOOL v91 = &v46[16 * v48];
        uint64_t v92 = *((void *)v91 + 1);
        sub_E9278((char *)(v11 + 40 * *(void *)v89), (char *)(v11 + 40 * *(void *)v91), v11 + 40 * v92, __dst);
        if (v125) {
          goto LABEL_93;
        }
        if (v92 < v90) {
          goto LABEL_117;
        }
        if (v48 > *((void *)v88 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v89 = v90;
        *(void *)&v46[16 * v87 + 8] = v92;
        unint64_t v93 = *((void *)v88 + 2);
        if (v48 >= v93) {
          goto LABEL_119;
        }
        uint64_t v12 = v88;
        unint64_t v13 = v93 - 1;
        memmove(&v46[16 * v48], v91 + 16, 16 * (v93 - 1 - v48));
        *((void *)v88 + 2) = v93 - 1;
        uint64_t v11 = v123;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v121;
    Swift::Int v3 = v122;
    if (v10 >= v122)
    {
      uint64_t v9 = v120;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_E8DD8(char *a1, char *__src, unint64_t a3, char *__dst, uint64_t (*a5)(unsigned char *, unsigned char *))
{
  uint64_t v7 = __dst;
  uint64_t v9 = __src;
  uint64_t v10 = __src - a1;
  uint64_t v11 = (__src - a1) / 152;
  uint64_t v12 = a3 - (void)__src;
  uint64_t v13 = (uint64_t)(a3 - (void)__src) / 152;
  __srca = a1;
  uint64_t v89 = a1;
  uint64_t v88 = __dst;
  if (v11 >= v13)
  {
    if (v12 <= -152) {
      goto LABEL_49;
    }
    uint64_t v37 = 152 * v13;
    if (__dst != __src || &__src[v37] <= __dst) {
      memmove(__dst, __src, 152 * v13);
    }
    uint64_t v38 = &v7[v37];
    unint64_t v87 = &v7[v37];
    uint64_t v89 = v9;
    if (__srca >= v9 || v12 < 152) {
      goto LABEL_48;
    }
    for (uint64_t i = (char *)(a3 - 152); ; uint64_t i = v58 - 152)
    {
      long long v39 = *(_OWORD *)(v38 - 136);
      long long v67 = *(_OWORD *)(v38 - 152);
      long long v68 = v39;
      long long v40 = *(_OWORD *)(v38 - 120);
      long long v41 = *(_OWORD *)(v38 - 104);
      long long v42 = *(_OWORD *)(v38 - 72);
      long long v71 = *(_OWORD *)(v38 - 88);
      long long v72 = v42;
      long long v69 = v40;
      long long v70 = v41;
      long long v43 = *(_OWORD *)(v38 - 56);
      long long v44 = *(_OWORD *)(v38 - 40);
      long long v45 = *(_OWORD *)(v38 - 24);
      char v76 = *(v38 - 8);
      long long v74 = v44;
      long long v75 = v45;
      long long v73 = v43;
      memmove(__dsta, v38 - 152, 0x91uLL);
      long long v46 = v9 - 152;
      long long v47 = *(_OWORD *)(v9 - 136);
      long long v77 = *(_OWORD *)(v9 - 152);
      long long v78 = v47;
      long long v48 = *(_OWORD *)(v9 - 120);
      long long v49 = *(_OWORD *)(v9 - 104);
      long long v50 = *(_OWORD *)(v9 - 72);
      long long v81 = *(_OWORD *)(v9 - 88);
      long long v82 = v50;
      long long v79 = v48;
      long long v80 = v49;
      long long v51 = *(_OWORD *)(v9 - 56);
      long long v52 = *(_OWORD *)(v9 - 40);
      long long v53 = *(_OWORD *)(v9 - 24);
      char v86 = *(v9 - 8);
      long long v84 = v52;
      long long v85 = v53;
      long long v83 = v51;
      memmove(v65, v9 - 152, 0x91uLL);
      sub_54834((uint64_t)&v67);
      sub_54834((uint64_t)&v77);
      char v54 = a5(__dsta, v65);
      if (v5)
      {
        unint64_t v87 = v38;
        uint64_t v89 = v9;
LABEL_44:
        sub_7A018((uint64_t)&v77);
        sub_7A018((uint64_t)&v67);
        goto LABEL_48;
      }
      char v55 = v54;
      uint64_t v56 = v7;
      uint64_t v57 = i + 152;
      sub_7A018((uint64_t)&v77);
      sub_7A018((uint64_t)&v67);
      if (v55)
      {
        if (v57 != v9)
        {
          v9 -= 152;
LABEL_37:
          uint64_t v7 = v56;
          uint64_t v58 = i;
          unint64_t v60 = __srca;
          goto LABEL_38;
        }
        uint64_t v58 = i;
        BOOL v59 = i >= v9;
        v9 -= 152;
      }
      else
      {
        long long v46 = v38 - 152;
        if (v57 != v38)
        {
          v38 -= 152;
          goto LABEL_37;
        }
        uint64_t v58 = i;
        BOOL v59 = i >= v38;
        v38 -= 152;
      }
      uint64_t v7 = v56;
      unint64_t v60 = __srca;
      if (!v59)
      {
        if (v38 <= v56) {
          goto LABEL_41;
        }
        goto LABEL_39;
      }
LABEL_38:
      memmove(v58, v46, 0x98uLL);
      if (v38 <= v7) {
        goto LABEL_41;
      }
LABEL_39:
      if (v9 <= v60)
      {
LABEL_41:
        unint64_t v87 = v38;
        uint64_t v89 = v9;
        goto LABEL_48;
      }
    }
  }
  if (v10 <= -152)
  {
LABEL_49:
    uint64_t result = sub_1FC2B0();
    __break(1u);
    return result;
  }
  size_t v14 = 152 * v11;
  if (__dst != a1 || &a1[v14] <= __dst) {
    memmove(__dst, a1, v14);
  }
  uint64_t v15 = &v7[v14];
  unint64_t v87 = &v7[v14];
  if ((unint64_t)v9 >= a3 || v10 < 152) {
    goto LABEL_48;
  }
  uint64_t v16 = v7;
  while (1)
  {
    long long v17 = *((_OWORD *)v9 + 1);
    long long v67 = *(_OWORD *)v9;
    long long v68 = v17;
    long long v18 = *((_OWORD *)v9 + 2);
    long long v19 = *((_OWORD *)v9 + 3);
    long long v20 = *((_OWORD *)v9 + 5);
    long long v71 = *((_OWORD *)v9 + 4);
    long long v72 = v20;
    long long v69 = v18;
    long long v70 = v19;
    long long v21 = *((_OWORD *)v9 + 6);
    long long v22 = *((_OWORD *)v9 + 7);
    long long v23 = *((_OWORD *)v9 + 8);
    char v76 = v9[144];
    long long v74 = v22;
    long long v75 = v23;
    long long v73 = v21;
    memmove(__dsta, v9, 0x91uLL);
    long long v24 = *((_OWORD *)v16 + 1);
    long long v77 = *(_OWORD *)v16;
    long long v78 = v24;
    long long v25 = *((_OWORD *)v16 + 2);
    long long v26 = *((_OWORD *)v16 + 3);
    long long v27 = *((_OWORD *)v16 + 5);
    long long v81 = *((_OWORD *)v16 + 4);
    long long v82 = v27;
    long long v79 = v25;
    long long v80 = v26;
    long long v28 = *((_OWORD *)v16 + 6);
    long long v29 = *((_OWORD *)v16 + 7);
    long long v30 = *((_OWORD *)v16 + 8);
    char v86 = v16[144];
    long long v84 = v29;
    long long v85 = v30;
    long long v83 = v28;
    memmove(v65, v16, 0x91uLL);
    sub_54834((uint64_t)&v67);
    sub_54834((uint64_t)&v77);
    char v31 = a5(__dsta, v65);
    if (v5)
    {
      uint64_t v88 = v7;
      uint64_t v89 = __srca;
      goto LABEL_44;
    }
    char v32 = v31;
    sub_7A018((uint64_t)&v77);
    sub_7A018((uint64_t)&v67);
    if ((v32 & 1) == 0)
    {
      uint64_t v7 = v16 + 152;
      uint64_t v33 = v16;
      Swift::Int v34 = __srca;
      BOOL v35 = __srca == v16;
      v16 += 152;
      if (v35) {
        goto LABEL_16;
      }
LABEL_15:
      memmove(v34, v33, 0x98uLL);
      goto LABEL_16;
    }
    uint64_t v33 = v9;
    Swift::Int v34 = __srca;
    BOOL v35 = __srca == v9;
    v9 += 152;
    if (!v35) {
      goto LABEL_15;
    }
LABEL_16:
    uint64_t v36 = v34 + 152;
    if (v16 >= v15)
    {
      uint64_t v88 = v7;
      goto LABEL_47;
    }
    if ((unint64_t)v9 >= a3) {
      break;
    }
    __srca = v34 + 152;
  }
  uint64_t v88 = v7;
  uint64_t v36 = v34 + 152;
LABEL_47:
  uint64_t v89 = v36;
LABEL_48:
  sub_705A4((void **)&v89, (const void **)&v88, &v87);
  return 1;
}

uint64_t sub_E9278(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  char v31 = __dst;
  char v32 = __src;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      uint64_t v19 = 40 * v11;
      if (__dst != a2 || &a2[v19] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      long long v20 = &v4[v19];
      long long v30 = &v4[v19];
      char v32 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v21 = a3 - 40;
        long long v22 = v6;
        while (1)
        {
          long long v23 = (char *)(v21 + 40);
          uint64_t v24 = *((void *)v22 - 5);
          v22 -= 40;
          if (*((void *)v20 - 5) >= v24)
          {
            long long v30 = v20 - 40;
            if (v23 < v20 || v21 >= (unint64_t)v20 || v23 != v20)
            {
              long long v27 = *(_OWORD *)(v20 - 40);
              long long v28 = *(_OWORD *)(v20 - 24);
              *(void *)(v21 + 32) = *((void *)v20 - 1);
              *(_OWORD *)unint64_t v21 = v27;
              *(_OWORD *)(v21 + 16) = v28;
            }
            long long v22 = v6;
            v20 -= 40;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v23 != v6 || v21 >= (unint64_t)v6)
            {
              long long v25 = *(_OWORD *)v22;
              long long v26 = *((_OWORD *)v22 + 1);
              *(void *)(v21 + 32) = *((void *)v22 + 4);
              *(_OWORD *)unint64_t v21 = v25;
              *(_OWORD *)(v21 + 16) = v26;
            }
            char v32 = v22;
            if (v22 <= v7) {
              goto LABEL_38;
            }
          }
          v21 -= 40;
          Swift::Int v6 = v22;
          if (v20 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -39)
  {
    size_t v12 = 40 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    uint64_t v13 = &v4[v12];
    long long v30 = &v4[v12];
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4)
          {
            long long v17 = *(_OWORD *)v4;
            long long v18 = *((_OWORD *)v4 + 1);
            *((void *)v7 + 4) = *((void *)v4 + 4);
            *(_OWORD *)uint64_t v7 = v17;
            *((_OWORD *)v7 + 1) = v18;
          }
          v4 += 40;
          char v31 = v4;
          size_t v14 = v6;
        }
        else
        {
          size_t v14 = v6 + 40;
          if (v7 < v6 || v7 >= v14 || v7 != v6)
          {
            long long v15 = *(_OWORD *)v6;
            long long v16 = *((_OWORD *)v6 + 1);
            *((void *)v7 + 4) = *((void *)v6 + 4);
            *(_OWORD *)uint64_t v7 = v15;
            *((_OWORD *)v7 + 1) = v16;
          }
        }
        v7 += 40;
        if (v4 >= v13) {
          break;
        }
        Swift::Int v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      char v32 = v7;
    }
LABEL_38:
    sub_708E8((void **)&v32, (const void **)&v31, &v30);
    return 1;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_E9518(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_E97F4((uint64_t)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    swift_release();
    if (v2) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v8 = sub_E97F4((uint64_t)v9, v6, v4, a2);
    swift_release();
    swift_slowDealloc();
  }
  return v8;
}

uint64_t sub_E9690(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_E998C((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    size_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_E998C((uint64_t)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_E97F4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = (unint64_t *)result;
  uint64_t v7 = 0;
  int64_t v8 = 0;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(a3 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (v12)
  {
    unint64_t v15 = __clz(__rbit64(v12));
    v12 &= v12 - 1;
    unint64_t v16 = v15 | (v8 << 6);
LABEL_18:
    uint64_t v20 = *(void *)(a3 + 48) + 40 * v16;
    uint64_t v21 = *(void *)(a4 + 8);
    if (*(void *)(v20 + 8) == v21 || (*(unsigned char *)(v20 + 32) & 1) == 0 && *(void *)(v20 + 24) == v21)
    {
      *(void *)(result + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      BOOL v14 = __OFADD__(v7++, 1);
      if (v14) {
        goto LABEL_29;
      }
    }
  }
  BOOL v14 = __OFADD__(v8++, 1);
  if (v14)
  {
    __break(1u);
    goto LABEL_28;
  }
  if (v8 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v8);
  if (v17)
  {
LABEL_17:
    unint64_t v19 = __clz(__rbit64(v17));
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v16 = v19 + (v8 << 6);
    goto LABEL_18;
  }
  int64_t v18 = v8 + 1;
  if (v8 + 1 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v8 + 2;
  if (v8 + 2 >= v13) {
    goto LABEL_26;
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17) {
    goto LABEL_16;
  }
  int64_t v18 = v8 + 3;
  if (v8 + 3 >= v13)
  {
LABEL_26:
    swift_retain();
    return sub_105E60(v6, a2, v7, a3);
  }
  unint64_t v17 = *(void *)(v9 + 8 * v18);
  if (v17)
  {
LABEL_16:
    int64_t v8 = v18;
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v8 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v8 >= v13) {
      goto LABEL_26;
    }
    unint64_t v17 = *(void *)(v9 + 8 * v8);
    ++v18;
    if (v17) {
      goto LABEL_17;
    }
  }
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_E998C(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(unsigned char *)(*(void *)(a3 + 48) + 40 * v14 + 16) == 1)
    {
      *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_105E60(v5, a2, v6, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_E9B0C(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v3 = isStackAllocationSafe;
  char v4 = *(unsigned char *)(a2 + 32);
  unint64_t v5 = (unint64_t)((1 << v4) + 63) >> 6;
  size_t v6 = 8 * v5;
  if ((v4 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v6);
    uint64_t v7 = sub_E9C94((uint64_t)&v10 - ((v6 + 15) & 0x3FFFFFFFFFFFFFF0), v5, a2, v3);
    swift_release();
  }
  else
  {
    uint64_t v8 = (void *)swift_slowAlloc();
    bzero(v8, v6);
    uint64_t v7 = sub_E9C94((uint64_t)v8, v5, a2, v3);
    swift_release();
    swift_slowDealloc();
  }
  return v7;
}

uint64_t sub_E9C94(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v45 = (unint64_t *)result;
  uint64_t v6 = 0;
  if (*(void *)(a4 + 16) < *(void *)(a3 + 16))
  {
    int64_t v7 = 0;
    uint64_t v8 = a4 + 56;
    uint64_t v9 = 1 << *(unsigned char *)(a4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(a4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = a3 + 56;
    while (1)
    {
LABEL_6:
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v7 << 6);
      }
      else
      {
        int64_t v16 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
          __break(1u);
LABEL_62:
          __break(1u);
          goto LABEL_63;
        }
        if (v16 >= v12) {
          goto LABEL_60;
        }
        unint64_t v17 = *(void *)(v8 + 8 * v16);
        ++v7;
        if (!v17)
        {
          int64_t v7 = v16 + 1;
          if (v16 + 1 >= v12) {
            goto LABEL_60;
          }
          unint64_t v17 = *(void *)(v8 + 8 * v7);
          if (!v17)
          {
            int64_t v7 = v16 + 2;
            if (v16 + 2 >= v12) {
              goto LABEL_60;
            }
            unint64_t v17 = *(void *)(v8 + 8 * v7);
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v12)
              {
LABEL_60:
                swift_retain();
                return sub_105C18(v45, a2, v6, a3);
              }
              unint64_t v17 = *(void *)(v8 + 8 * v18);
              if (!v17)
              {
                while (1)
                {
                  int64_t v7 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    break;
                  }
                  if (v7 >= v12) {
                    goto LABEL_60;
                  }
                  unint64_t v17 = *(void *)(v8 + 8 * v7);
                  ++v18;
                  if (v17) {
                    goto LABEL_21;
                  }
                }
LABEL_63:
                __break(1u);
                goto LABEL_64;
              }
              int64_t v7 = v18;
            }
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v7 << 6);
      }
      uint64_t v19 = *(void *)(*(void *)(a4 + 48) + 8 * v15);
      uint64_t result = sub_1FC7D0();
      uint64_t v20 = -1 << *(unsigned char *)(a3 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      uint64_t v23 = 1 << v21;
      if (((1 << v21) & *(void *)(v13 + 8 * (v21 >> 6))) != 0)
      {
        uint64_t v24 = *(void *)(a3 + 48);
        if (*(void *)(v24 + 8 * v21) != v19)
        {
          for (unint64_t i = v21 + 1; ; unint64_t i = v26 + 1)
          {
            unint64_t v26 = i & ~v20;
            if (((*(void *)(v13 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
              goto LABEL_6;
            }
            if (*(void *)(v24 + 8 * v26) == v19) {
              break;
            }
          }
          unint64_t v22 = v26 >> 6;
          uint64_t v23 = 1 << v26;
        }
        v45[v22] |= v23;
        BOOL v27 = __OFADD__(v6++, 1);
        if (v27) {
          break;
        }
      }
    }
    __break(1u);
  }
  int64_t v28 = 0;
  uint64_t v29 = a3 + 56;
  uint64_t v30 = 1 << *(unsigned char *)(a3 + 32);
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  else {
    uint64_t v31 = -1;
  }
  unint64_t v32 = v31 & *(void *)(a3 + 56);
  int64_t v46 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v33 = a4 + 56;
  while (v32)
  {
    unint64_t v34 = __clz(__rbit64(v32));
    v32 &= v32 - 1;
    unint64_t v35 = v34 | (v28 << 6);
LABEL_52:
    uint64_t v39 = *(void *)(*(void *)(a3 + 48) + 8 * v35);
    uint64_t result = sub_1FC7D0();
    uint64_t v40 = -1 << *(unsigned char *)(a4 + 32);
    unint64_t v41 = result & ~v40;
    if ((*(void *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41))
    {
      uint64_t v42 = *(void *)(a4 + 48);
      if (*(void *)(v42 + 8 * v41) == v39)
      {
LABEL_57:
        *(unint64_t *)((char *)v45 + ((v35 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v35;
        BOOL v27 = __OFADD__(v6++, 1);
        if (v27)
        {
          __break(1u);
          goto LABEL_60;
        }
      }
      else
      {
        uint64_t v43 = ~v40;
        while (1)
        {
          unint64_t v41 = (v41 + 1) & v43;
          if (((*(void *)(v33 + ((v41 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v41) & 1) == 0) {
            break;
          }
          if (*(void *)(v42 + 8 * v41) == v39) {
            goto LABEL_57;
          }
        }
      }
    }
  }
  int64_t v36 = v28 + 1;
  if (__OFADD__(v28, 1)) {
    goto LABEL_62;
  }
  if (v36 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v36);
  ++v28;
  if (v37) {
    goto LABEL_51;
  }
  int64_t v28 = v36 + 1;
  if (v36 + 1 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v28);
  if (v37) {
    goto LABEL_51;
  }
  int64_t v28 = v36 + 2;
  if (v36 + 2 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v28);
  if (v37)
  {
LABEL_51:
    unint64_t v32 = (v37 - 1) & v37;
    unint64_t v35 = __clz(__rbit64(v37)) + (v28 << 6);
    goto LABEL_52;
  }
  int64_t v38 = v36 + 3;
  if (v38 >= v46) {
    goto LABEL_60;
  }
  unint64_t v37 = *(void *)(v29 + 8 * v38);
  if (v37)
  {
    int64_t v28 = v38;
    goto LABEL_51;
  }
  while (1)
  {
    int64_t v28 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v28 >= v46) {
      goto LABEL_60;
    }
    unint64_t v37 = *(void *)(v29 + 8 * v28);
    ++v38;
    if (v37) {
      goto LABEL_51;
    }
  }
LABEL_64:
  __break(1u);
  return result;
}

size_t sub_EA058(uint64_t a1, unint64_t a2)
{
  uint64_t v39 = type metadata accessor for ScoredCollectionRecommendation();
  __chkstk_darwin(v39);
  unint64_t v5 = (char *)v38 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v42 = v6;
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  unint64_t v8 = *(void *)(a1 + 16);
  size_t result = swift_bridgeObjectRetain();
  uint64_t v10 = _swiftEmptyArrayStorage;
  v38[1] = a1;
  uint64_t v11 = 0;
  if (v8 == a2)
  {
LABEL_2:
    size_t result = swift_bridgeObjectRelease();
    unint64_t v12 = v10[3];
    if (v12 < 2) {
      return (size_t)v10;
    }
    unint64_t v13 = v12 >> 1;
    BOOL v14 = __OFSUB__(v13, v11);
    uint64_t v15 = v13 - v11;
    if (!v14)
    {
      void v10[2] = v15;
      return (size_t)v10;
    }
  }
  else
  {
    uint64_t v16 = (v7 + 32) & ~v7;
    unint64_t v17 = (char *)_swiftEmptyArrayStorage + v16;
    uint64_t v43 = v16;
    uint64_t v44 = a1 + v16;
    uint64_t v18 = v7 | 7;
    if (v8 <= a2) {
      unint64_t v19 = a2;
    }
    else {
      unint64_t v19 = v8;
    }
    uint64_t v20 = _swiftEmptyArrayStorage;
    uint64_t v21 = v42;
    unint64_t v22 = v8;
    unint64_t v23 = v19;
    unint64_t v40 = v19;
    uint64_t v41 = v18;
    while (v23 != a2)
    {
      uint64_t v24 = *(void *)(v21 + 72);
      size_t result = sub_EB6E8(v44 + v24 * a2, (uint64_t)v5, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      if (v11)
      {
        uint64_t v10 = v20;
        BOOL v14 = __OFSUB__(v11--, 1);
        if (v14) {
          goto LABEL_35;
        }
      }
      else
      {
        unint64_t v25 = v20[3];
        if ((uint64_t)((v25 >> 1) + 0x4000000000000000) < 0) {
          goto LABEL_37;
        }
        int64_t v26 = v25 & 0xFFFFFFFFFFFFFFFELL;
        if (v26 <= 1) {
          uint64_t v27 = 1;
        }
        else {
          uint64_t v27 = v26;
        }
        sub_12124(&qword_26D578);
        uint64_t v28 = v43;
        uint64_t v10 = (void *)swift_allocObject();
        size_t result = j__malloc_size(v10);
        if (!v24) {
          goto LABEL_38;
        }
        int64_t v29 = result - v28;
        if (result - v28 == 0x8000000000000000 && v24 == -1) {
          goto LABEL_39;
        }
        unint64_t v31 = v22;
        uint64_t v32 = v29 / v24;
        void v10[2] = v27;
        v10[3] = 2 * (v29 / v24);
        uint64_t v33 = (char *)v10 + v28;
        uint64_t v34 = v20[3] >> 1;
        uint64_t v35 = v34 * v24;
        if (v20[2])
        {
          if (v10 < v20 || v33 >= (char *)v20 + v43 + v35)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v10 != v20)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          v20[2] = 0;
        }
        unint64_t v17 = &v33[v35];
        uint64_t v37 = (v32 & 0x7FFFFFFFFFFFFFFFLL) - v34;
        size_t result = swift_release();
        uint64_t v21 = v42;
        unint64_t v22 = v31;
        unint64_t v23 = v40;
        BOOL v14 = __OFSUB__(v37, 1);
        uint64_t v11 = v37 - 1;
        if (v14)
        {
LABEL_35:
          __break(1u);
          break;
        }
      }
      ++a2;
      size_t result = sub_EDE6C((uint64_t)v5, (uint64_t)v17, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      v17 += v24;
      uint64_t v20 = v10;
      if (v22 == a2) {
        goto LABEL_2;
      }
    }
    __break(1u);
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
LABEL_39:
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_EA324(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v4 = v2 - a2;
  if (v2 == a2)
  {
    uint64_t v5 = 0;
LABEL_27:
    unint64_t v25 = v3[3];
    if (v25 < 2) {
      return (uint64_t)v3;
    }
    unint64_t v26 = v25 >> 1;
    BOOL v14 = __OFSUB__(v26, v5);
    uint64_t v27 = v26 - v5;
    if (!v14)
    {
      v3[2] = v27;
      return (uint64_t)v3;
    }
  }
  else
  {
    if (v2 <= a2) {
      goto LABEL_33;
    }
    if (a2 < 0)
    {
LABEL_34:
      __break(1u);
    }
    else if (v2)
    {
      uint64_t v7 = result;
      size_t result = swift_bridgeObjectRetain();
      uint64_t v5 = 0;
      uint64_t v8 = 56 * a2;
      uint64_t v9 = &_swiftEmptyArrayStorage[4];
      uint64_t v28 = result;
      while (1)
      {
        uint64_t v10 = *(void *)(v7 + v8 + 32);
        long long v30 = *(_OWORD *)(v7 + v8 + 40);
        uint64_t v11 = *(void *)(v7 + v8 + 56);
        uint64_t v12 = *(void *)(v7 + v8 + 64);
        uint64_t v13 = *(void *)(v7 + v8 + 72);
        char v29 = *(unsigned char *)(v7 + v8 + 80);
        if (v5)
        {
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          size_t result = swift_bridgeObjectRetain();
          BOOL v14 = __OFSUB__(v5--, 1);
          if (v14) {
            goto LABEL_31;
          }
        }
        else
        {
          unint64_t v15 = v3[3];
          if ((uint64_t)((v15 >> 1) + 0x4000000000000000) < 0) {
            goto LABEL_32;
          }
          int64_t v16 = v15 & 0xFFFFFFFFFFFFFFFELL;
          if (v16 <= 1) {
            uint64_t v17 = 1;
          }
          else {
            uint64_t v17 = v16;
          }
          sub_12124(&qword_26D590);
          uint64_t v18 = (void *)swift_allocObject();
          uint64_t v19 = (uint64_t)(j__malloc_size(v18) - 32) / 56;
          unsigned __int16 v18[2] = v17;
          v18[3] = 2 * v19;
          uint64_t v20 = v18 + 4;
          uint64_t v21 = v3[3] >> 1;
          size_t v22 = 7 * v21;
          uint64_t v23 = (v19 & 0x7FFFFFFFFFFFFFFFLL) - v21;
          uint64_t v9 = &v18[7 * v21 + 4];
          if (v3[2])
          {
            if (v18 != v3 || v20 >= &v3[v22 + 4]) {
              memmove(v20, v3 + 4, v22 * 8);
            }
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            v3[2] = 0;
          }
          else
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
          }
          size_t result = swift_release();
          uint64_t v3 = v18;
          uint64_t v7 = v28;
          BOOL v14 = __OFSUB__(v23, 1);
          uint64_t v5 = v23 - 1;
          if (v14)
          {
LABEL_31:
            __break(1u);
LABEL_32:
            __break(1u);
LABEL_33:
            __break(1u);
            goto LABEL_34;
          }
        }
        void *v9 = v10;
        *(_OWORD *)(v9 + 1) = v30;
        v9[3] = v11;
        v9[4] = v12;
        v9[5] = v13;
        *((unsigned char *)v9 + 48) = v29;
        v9 += 7;
        v8 += 56;
        if (!--v4)
        {
          size_t result = swift_bridgeObjectRelease();
          goto LABEL_27;
        }
      }
    }
    __break(1u);
  }
  __break(1u);
  return result;
}

BOOL sub_EA580(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = &v31[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = __chkstk_darwin(v5);
  uint64_t v10 = &v31[-v9];
  uint64_t v11 = __chkstk_darwin(v8);
  uint64_t v13 = &v31[-v12];
  __chkstk_darwin(v11);
  unint64_t v15 = &v31[-v14];
  CollectionRecommendation.collectionRecommendationType.getter(&v33);
  CollectionRecommendation.collectionRecommendationType.getter(&v32);
  uint64_t v16 = CollectionRecommendationType.rawValue.getter();
  uint64_t v18 = v17;
  if (v16 == CollectionRecommendationType.rawValue.getter() && v18 == v19)
  {
    swift_bridgeObjectRelease_n();
    sub_EB6E8(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_EB6E8(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  }
  else
  {
    char v20 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_EB6E8(a1, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_EB6E8(a2, (uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    if ((v20 & 1) == 0)
    {
      sub_37898((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      goto LABEL_22;
    }
  }
  uint64_t v21 = *(int *)(v4 + 20);
  int v22 = v15[v21];
  int v23 = v13[v21];
  if (!v22)
  {
    unint64_t v25 = 0xE500000000000000;
    uint64_t v24 = 0x6B6F6F6265;
    if (!v23) {
      goto LABEL_15;
    }
    goto LABEL_11;
  }
  if (v22 != 1)
  {
    unint64_t v25 = 0xE500000000000000;
    uint64_t v24 = 0x646578696DLL;
    if (!v23) {
      goto LABEL_15;
    }
LABEL_11:
    if (v23 == 1)
    {
      unint64_t v26 = 0xE90000000000006BLL;
      if (v24 != 0x6F6F626F69647561) {
        goto LABEL_20;
      }
    }
    else
    {
      unint64_t v26 = 0xE500000000000000;
      if (v24 != 0x646578696DLL) {
        goto LABEL_20;
      }
    }
LABEL_18:
    if (v25 == v26)
    {
      swift_bridgeObjectRelease_n();
      sub_37898((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
LABEL_21:
      double v28 = *(double *)&v10[*(int *)(v4 + 28)];
      sub_37898((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      double v29 = *(double *)&v7[*(int *)(v4 + 28)];
      sub_37898((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      return v28 == v29;
    }
    goto LABEL_20;
  }
  uint64_t v24 = 0x6F6F626F69647561;
  unint64_t v25 = 0xE90000000000006BLL;
  if (v23) {
    goto LABEL_11;
  }
LABEL_15:
  unint64_t v26 = 0xE500000000000000;
  if (v24 == 0x6B6F6F6265) {
    goto LABEL_18;
  }
LABEL_20:
  char v27 = sub_1FC5F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_37898((uint64_t)v13, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_EB6E8(a1, (uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_EB6E8(a2, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  if (v27) {
    goto LABEL_21;
  }
LABEL_22:
  sub_37898((uint64_t)v7, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898((uint64_t)v10, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  return 0;
}

uint64_t sub_EA9CC(uint64_t result, uint64_t a2, uint64_t a3, char a4)
{
  unint64_t v4 = *(void *)(result + 16);
  if (!v4) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v7 = 0;
  uint64_t v8 = result + 32;
  uint64_t v9 = a3 + 56;
  uint64_t v10 = _swiftEmptyArrayStorage;
  do
  {
    int64_t v38 = v10;
    if (v7 <= v4) {
      unint64_t v11 = v4;
    }
    else {
      unint64_t v11 = v7;
    }
    while (1)
    {
      if (v7 == v11)
      {
        __break(1u);
        return result;
      }
      uint64_t v13 = v8 + 152 * v7;
      long long v14 = *(_OWORD *)(v13 + 112);
      long long v46 = *(_OWORD *)(v13 + 96);
      long long v47 = v14;
      long long v48 = *(_OWORD *)(v13 + 128);
      char v49 = *(unsigned char *)(v13 + 144);
      long long v15 = *(_OWORD *)(v13 + 48);
      long long v42 = *(_OWORD *)(v13 + 32);
      long long v43 = v15;
      long long v16 = *(_OWORD *)(v13 + 80);
      long long v44 = *(_OWORD *)(v13 + 64);
      long long v45 = v16;
      long long v17 = *(_OWORD *)(v13 + 16);
      long long v40 = *(_OWORD *)v13;
      long long v41 = v17;
      ++v7;
      uint64_t v18 = v45;
      uint64_t v19 = *(void *)(a2 + 56);
      sub_54834((uint64_t)&v40);
      if (sub_E53DC(v18, v19)) {
        goto LABEL_23;
      }
      int v20 = BYTE8(v40);
      if (*(void *)(a3 + 16))
      {
        uint64_t v21 = v40;
        uint64_t v22 = sub_1FC7D0();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        if ((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24))
        {
          uint64_t v25 = *(void *)(a3 + 48);
          if (*(void *)(v25 + 8 * v24) == v21) {
            goto LABEL_23;
          }
          uint64_t v26 = ~v23;
          while (1)
          {
            unint64_t v24 = (v24 + 1) & v26;
            if (((*(void *)(v9 + ((v24 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v24) & 1) == 0) {
              break;
            }
            if (*(void *)(v25 + 8 * v24) == v21) {
              goto LABEL_23;
            }
          }
        }
      }
      if (a4) {
        break;
      }
      if (!v20) {
        goto LABEL_25;
      }
      char v27 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v27) {
        goto LABEL_26;
      }
LABEL_23:
      size_t result = sub_7A018((uint64_t)&v40);
      if (v7 == v4) {
        return (uint64_t)v38;
      }
    }
    if (a4 != 1) {
      goto LABEL_26;
    }
    if ((v20 & 1) == 0)
    {
      char v12 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_26;
      }
      goto LABEL_23;
    }
LABEL_25:
    swift_bridgeObjectRelease();
LABEL_26:
    uint64_t v10 = v38;
    size_t result = swift_isUniquelyReferenced_nonNull_native();
    long long v50 = v38;
    if ((result & 1) == 0)
    {
      size_t result = sub_467D8(0, v38[2] + 1, 1);
      uint64_t v10 = v50;
    }
    unint64_t v29 = v10[2];
    unint64_t v28 = v10[3];
    if (v29 >= v28 >> 1)
    {
      size_t result = sub_467D8(v28 > 1, v29 + 1, 1);
      uint64_t v10 = v50;
    }
    void v10[2] = v29 + 1;
    long long v30 = &v10[19 * v29];
    long long v31 = v41;
    *((_OWORD *)v30 + 2) = v40;
    *((_OWORD *)v30 + 3) = v31;
    long long v32 = v42;
    long long v33 = v43;
    long long v34 = v45;
    *((_OWORD *)v30 + 6) = v44;
    *((_OWORD *)v30 + 7) = v34;
    *((_OWORD *)v30 + 4) = v32;
    *((_OWORD *)v30 + 5) = v33;
    long long v35 = v46;
    long long v36 = v47;
    long long v37 = v48;
    *((unsigned char *)v30 + 176) = v49;
    *((_OWORD *)v30 + 9) = v36;
    *((_OWORD *)v30 + 10) = v37;
    *((_OWORD *)v30 + 8) = v35;
  }
  while (v7 != v4);
  return (uint64_t)v10;
}

uint64_t sub_EACC4(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v6 = a2 + 56;
  unint64_t v7 = _swiftEmptyArrayStorage;
  do
  {
    if (v4 <= v2) {
      unint64_t v8 = v2;
    }
    else {
      unint64_t v8 = v4;
    }
    while (1)
    {
      if (v4 == v8)
      {
        __break(1u);
        return result;
      }
      uint64_t v9 = v5 + 152 * v4;
      long long v10 = *(_OWORD *)(v9 + 112);
      long long v35 = *(_OWORD *)(v9 + 96);
      long long v36 = v10;
      long long v37 = *(_OWORD *)(v9 + 128);
      char v38 = *(unsigned char *)(v9 + 144);
      long long v11 = *(_OWORD *)(v9 + 48);
      long long v31 = *(_OWORD *)(v9 + 32);
      long long v32 = v11;
      long long v12 = *(_OWORD *)(v9 + 80);
      long long v33 = *(_OWORD *)(v9 + 64);
      long long v34 = v12;
      long long v13 = *(_OWORD *)(v9 + 16);
      long long v29 = *(_OWORD *)v9;
      long long v30 = v13;
      ++v4;
      if (!*(void *)(a2 + 16)) {
        break;
      }
      uint64_t v14 = v29;
      size_t result = sub_1FC7D0();
      uint64_t v15 = -1 << *(unsigned char *)(a2 + 32);
      unint64_t v16 = result & ~v15;
      if (((*(void *)(v6 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
        break;
      }
      uint64_t v17 = *(void *)(a2 + 48);
      if (*(void *)(v17 + 8 * v16) != v14)
      {
        uint64_t v18 = ~v15;
        do
        {
          unint64_t v16 = (v16 + 1) & v18;
          if (((*(void *)(v6 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
            goto LABEL_15;
          }
        }
        while (*(void *)(v17 + 8 * v16) != v14);
      }
      if (v4 == v2) {
        return (uint64_t)v7;
      }
    }
LABEL_15:
    sub_54834((uint64_t)&v29);
    size_t result = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v39 = v7;
    if ((result & 1) == 0)
    {
      size_t result = sub_467D8(0, v7[2] + 1, 1);
      unint64_t v7 = v39;
    }
    unint64_t v20 = v7[2];
    unint64_t v19 = v7[3];
    if (v20 >= v19 >> 1)
    {
      size_t result = sub_467D8(v19 > 1, v20 + 1, 1);
      unint64_t v7 = v39;
    }
    v7[2] = v20 + 1;
    uint64_t v21 = &v7[19 * v20];
    long long v22 = v30;
    *((_OWORD *)v21 + 2) = v29;
    *((_OWORD *)v21 + 3) = v22;
    long long v23 = v31;
    long long v24 = v32;
    long long v25 = v34;
    *((_OWORD *)v21 + 6) = v33;
    *((_OWORD *)v21 + 7) = v25;
    *((_OWORD *)v21 + 4) = v23;
    *((_OWORD *)v21 + 5) = v24;
    long long v26 = v35;
    long long v27 = v36;
    long long v28 = v37;
    *((unsigned char *)v21 + 176) = v38;
    *((_OWORD *)v21 + 9) = v27;
    *((_OWORD *)v21 + 10) = v28;
    *((_OWORD *)v21 + 8) = v26;
  }
  while (v4 != v2);
  return (uint64_t)v7;
}

uint64_t sub_EAEBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v13 >= v8) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v10;
    if (!v14)
    {
      int64_t v10 = v13 + 1;
      if (v13 + 1 >= v8) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v4 + 8 * v10);
      if (!v14)
      {
        int64_t v10 = v13 + 2;
        if (v13 + 2 >= v8) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v4 + 8 * v10);
        if (!v14)
        {
          int64_t v10 = v13 + 3;
          if (v13 + 3 >= v8) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v4 + 8 * v10);
          if (!v14)
          {
            int64_t v15 = v13 + 4;
            if (v15 >= v8)
            {
LABEL_29:
              swift_release();
              return 0;
            }
            unint64_t v14 = *(void *)(v4 + 8 * v15);
            int64_t v10 = v15;
            if (!v14) {
              break;
            }
          }
        }
      }
    }
LABEL_21:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v10 << 6);
LABEL_22:
    if (*(unsigned char *)(*(void *)(a1 + 48) + v12))
    {
      if (*(unsigned char *)(*(void *)(a1 + 48) + v12) != 1) {
        goto LABEL_28;
      }
      if (*(unsigned char *)(a2 + 8))
      {
LABEL_30:
        swift_release();
        swift_bridgeObjectRelease();
        return 1;
      }
    }
    else if ((*(unsigned char *)(a2 + 8) & 1) == 0)
    {
      goto LABEL_30;
    }
    char v16 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    if (v16)
    {
LABEL_28:
      swift_release();
      return 1;
    }
  }
  while (1)
  {
    int64_t v10 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v10);
    ++v15;
    if (v14) {
      goto LABEL_21;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_EB0E8(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  uint64_t v5 = result + 32;
  uint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v25 = result + 32;
  do
  {
    long long v36 = v6;
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    uint64_t v8 = v5 + 152 * v4;
    for (unint64_t i = v4; ; ++i)
    {
      if (v7 == i)
      {
        __break(1u);
        return result;
      }
      long long v10 = *(_OWORD *)(v8 + 112);
      long long v32 = *(_OWORD *)(v8 + 96);
      long long v33 = v10;
      long long v34 = *(_OWORD *)(v8 + 128);
      char v35 = *(unsigned char *)(v8 + 144);
      long long v11 = *(_OWORD *)(v8 + 48);
      long long v28 = *(_OWORD *)(v8 + 32);
      long long v29 = v11;
      long long v12 = *(_OWORD *)(v8 + 80);
      long long v30 = *(_OWORD *)(v8 + 64);
      long long v31 = v12;
      long long v13 = *(_OWORD *)(v8 + 16);
      unint64_t v4 = i + 1;
      long long v26 = *(_OWORD *)v8;
      long long v27 = v13;
      sub_54834((uint64_t)&v26);
      sub_54834((uint64_t)&v26);
      char v14 = sub_EAEBC(a2, (uint64_t)&v26);
      sub_7A018((uint64_t)&v26);
      if ((v14 & 1) == 0) {
        break;
      }
      uint64_t result = sub_7A018((uint64_t)&v26);
      v8 += 152;
      if (v2 == v4) {
        return (uint64_t)v36;
      }
    }
    uint64_t v6 = v36;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0) {
      uint64_t result = sub_467D8(0, v6[2] + 1, 1);
    }
    unint64_t v16 = v6[2];
    unint64_t v15 = v6[3];
    if (v16 >= v15 >> 1) {
      uint64_t result = sub_467D8(v15 > 1, v16 + 1, 1);
    }
    v6[2] = v16 + 1;
    uint64_t v17 = &v6[19 * v16];
    long long v18 = v27;
    *((_OWORD *)v17 + 2) = v26;
    *((_OWORD *)v17 + 3) = v18;
    long long v19 = v28;
    long long v20 = v29;
    long long v21 = v31;
    *((_OWORD *)v17 + 6) = v30;
    *((_OWORD *)v17 + 7) = v21;
    *((_OWORD *)v17 + 4) = v19;
    *((_OWORD *)v17 + 5) = v20;
    long long v22 = v32;
    long long v23 = v33;
    long long v24 = v34;
    *((unsigned char *)v17 + 176) = v35;
    *((_OWORD *)v17 + 9) = v23;
    *((_OWORD *)v17 + 10) = v24;
    *((_OWORD *)v17 + 8) = v22;
    uint64_t v5 = v25;
  }
  while (v2 - 1 != i);
  return (uint64_t)v6;
}

Swift::Int sub_EB2D0(Swift::Int result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (Swift::Int)_swiftEmptyArrayStorage;
  }
  unint64_t v4 = 0;
  Swift::Int v49 = result + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = _swiftEmptyArrayStorage;
  unint64_t v35 = v2;
  do
  {
    long long v34 = v6;
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    while (1)
    {
      if (v4 == v7)
      {
        __break(1u);
        return result;
      }
      Swift::Int v8 = v49 + 152 * v4;
      long long v9 = *(_OWORD *)(v8 + 112);
      long long v44 = *(_OWORD *)(v8 + 96);
      long long v45 = v9;
      long long v46 = *(_OWORD *)(v8 + 128);
      char v47 = *(unsigned char *)(v8 + 144);
      long long v10 = *(_OWORD *)(v8 + 48);
      long long v40 = *(_OWORD *)(v8 + 32);
      long long v41 = v10;
      long long v11 = *(_OWORD *)(v8 + 80);
      long long v42 = *(_OWORD *)(v8 + 64);
      long long v43 = v11;
      long long v12 = *(_OWORD *)(v8 + 16);
      long long v38 = *(_OWORD *)v8;
      long long v39 = v12;
      ++v4;
      char v13 = v46;
      if (v46 == 2) {
        goto LABEL_6;
      }
      uint64_t v37 = v45;
      if (*(void *)(a2 + 16)) {
        break;
      }
LABEL_28:
      if (v37 != 1 && (v13 & 1) != 0) {
        goto LABEL_30;
      }
LABEL_6:
      if (v4 == v2) {
        return (Swift::Int)v34;
      }
    }
    Swift::UInt64 v14 = *((void *)&v45 + 1);
    Swift::UInt64 v36 = *((void *)&v46 + 1);
    char v15 = v47;
    sub_1FC7E0();
    sub_1FC800(1u);
    sub_1FC820(v14);
    uint64_t result = sub_1FC830();
    unint64_t v2 = v35;
    uint64_t v16 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v17 = result & ~v16;
    if (((*(void *)(v5 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0)
    {
LABEL_16:
      if (*(void *)(a2 + 16))
      {
        sub_1FC7E0();
        if (v15)
        {
          sub_1FC800(0);
        }
        else
        {
          sub_1FC800(1u);
          sub_1FC820(v36);
        }
        uint64_t result = sub_1FC830();
        uint64_t v20 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v21 = result & ~v20;
        unint64_t v2 = v35;
        if ((*(void *)(v5 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21))
        {
          uint64_t v22 = ~v20;
          while (1)
          {
            uint64_t v23 = *(void *)(a2 + 48) + 16 * v21;
            if (*(unsigned char *)(v23 + 8))
            {
              if (v15) {
                goto LABEL_30;
              }
            }
            else if ((v15 & 1) == 0 && *(void *)v23 == v36)
            {
              goto LABEL_30;
            }
            unint64_t v21 = (v21 + 1) & v22;
            if (((*(void *)(v5 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
              goto LABEL_28;
            }
          }
        }
      }
      goto LABEL_28;
    }
    uint64_t v18 = ~v16;
    while (1)
    {
      uint64_t v19 = *(void *)(a2 + 48) + 16 * v17;
      if ((*(unsigned char *)(v19 + 8) & 1) == 0 && *(void *)v19 == v14) {
        break;
      }
      unint64_t v17 = (v17 + 1) & v18;
      if (((*(void *)(v5 + ((v17 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v17) & 1) == 0) {
        goto LABEL_16;
      }
    }
LABEL_30:
    sub_54834((uint64_t)&v38);
    uint64_t v6 = v34;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    long long v48 = v34;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_467D8(0, v34[2] + 1, 1);
      unint64_t v2 = v35;
      uint64_t v6 = v48;
    }
    unint64_t v25 = v6[2];
    unint64_t v24 = v6[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_467D8(v24 > 1, v25 + 1, 1);
      unint64_t v2 = v35;
      uint64_t v6 = v48;
    }
    v6[2] = v25 + 1;
    long long v26 = &v6[19 * v25];
    long long v27 = v39;
    *((_OWORD *)v26 + 2) = v38;
    *((_OWORD *)v26 + 3) = v27;
    long long v28 = v40;
    long long v29 = v41;
    long long v30 = v43;
    *((_OWORD *)v26 + 6) = v42;
    *((_OWORD *)v26 + 7) = v30;
    *((_OWORD *)v26 + 4) = v28;
    *((_OWORD *)v26 + 5) = v29;
    long long v31 = v44;
    long long v32 = v45;
    long long v33 = v46;
    *((unsigned char *)v26 + 176) = v47;
    *((_OWORD *)v26 + 9) = v32;
    *((_OWORD *)v26 + 10) = v33;
    *((_OWORD *)v26 + 8) = v31;
  }
  while (v4 != v2);
  return (Swift::Int)v6;
}

uint64_t sub_EB608()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_EB640(uint64_t a1)
{
  return a1;
}

uint64_t sub_EB694(uint64_t a1)
{
  return a1;
}

uint64_t sub_EB6E8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_EB750@<X0>(void *a1@<X8>)
{
  return sub_E2F98(a1);
}

uint64_t sub_EB758(uint64_t result, uint64_t a2, char a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v6 = 0;
  uint64_t v7 = result + 32;
  uint64_t v8 = a2 + 56;
  long long v9 = _swiftEmptyArrayStorage;
  do
  {
    long long v34 = v9;
    if (v6 <= v3) {
      unint64_t v10 = v3;
    }
    else {
      unint64_t v10 = v6;
    }
    while (1)
    {
      while (1)
      {
        if (v6 == v10)
        {
          __break(1u);
          return result;
        }
        uint64_t v12 = v7 + 152 * v6;
        long long v13 = *(_OWORD *)(v12 + 112);
        long long v41 = *(_OWORD *)(v12 + 96);
        long long v42 = v13;
        long long v43 = *(_OWORD *)(v12 + 128);
        char v44 = *(unsigned char *)(v12 + 144);
        long long v14 = *(_OWORD *)(v12 + 48);
        long long v37 = *(_OWORD *)(v12 + 32);
        long long v38 = v14;
        long long v15 = *(_OWORD *)(v12 + 80);
        long long v39 = *(_OWORD *)(v12 + 64);
        long long v40 = v15;
        long long v16 = *(_OWORD *)(v12 + 16);
        long long v35 = *(_OWORD *)v12;
        long long v36 = v16;
        ++v6;
        char v17 = BYTE8(v35);
        if (!*(void *)(a2 + 16)) {
          break;
        }
        uint64_t v18 = v35;
        uint64_t result = sub_1FC7D0();
        uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v20 = result & ~v19;
        if (((*(void *)(v8 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
          break;
        }
        uint64_t v21 = *(void *)(a2 + 48);
        if (*(void *)(v21 + 8 * v20) != v18)
        {
          uint64_t v22 = ~v19;
          do
          {
            unint64_t v20 = (v20 + 1) & v22;
            if (((*(void *)(v8 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
              goto LABEL_17;
            }
          }
          while (*(void *)(v21 + 8 * v20) != v18);
        }
        if (v6 == v3) {
          return (uint64_t)v34;
        }
      }
LABEL_17:
      if (a3) {
        break;
      }
      if ((v17 & 1) == 0) {
        goto LABEL_26;
      }
      char v23 = sub_1FC5F0();
      sub_54834((uint64_t)&v35);
      swift_bridgeObjectRelease();
      if (v23) {
        goto LABEL_27;
      }
LABEL_23:
      uint64_t result = sub_7A018((uint64_t)&v35);
      if (v6 == v3) {
        return (uint64_t)v34;
      }
    }
    if (a3 != 1)
    {
      sub_54834((uint64_t)&v35);
      goto LABEL_27;
    }
    if ((v17 & 1) == 0)
    {
      char v11 = sub_1FC5F0();
      sub_54834((uint64_t)&v35);
      swift_bridgeObjectRelease();
      if (v11) {
        goto LABEL_27;
      }
      goto LABEL_23;
    }
LABEL_26:
    sub_54834((uint64_t)&v35);
    swift_bridgeObjectRelease();
LABEL_27:
    long long v9 = v34;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    long long v45 = v34;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_467D8(0, v34[2] + 1, 1);
      long long v9 = v45;
    }
    unint64_t v25 = v9[2];
    unint64_t v24 = v9[3];
    if (v25 >= v24 >> 1)
    {
      uint64_t result = sub_467D8(v24 > 1, v25 + 1, 1);
      long long v9 = v45;
    }
    void v9[2] = v25 + 1;
    long long v26 = &v9[19 * v25];
    long long v27 = v36;
    *((_OWORD *)v26 + 2) = v35;
    *((_OWORD *)v26 + 3) = v27;
    long long v28 = v37;
    long long v29 = v38;
    long long v30 = v40;
    *((_OWORD *)v26 + 6) = v39;
    *((_OWORD *)v26 + 7) = v30;
    *((_OWORD *)v26 + 4) = v28;
    *((_OWORD *)v26 + 5) = v29;
    long long v31 = v41;
    long long v32 = v42;
    long long v33 = v43;
    *((unsigned char *)v26 + 176) = v44;
    *((_OWORD *)v26 + 9) = v32;
    *((_OWORD *)v26 + 10) = v33;
    *((_OWORD *)v26 + 8) = v31;
  }
  while (v6 != v3);
  return (uint64_t)v9;
}

uint64_t sub_EBA5C(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v4 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v4 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v4 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    v17[0] = *(unsigned char *)(*(void *)(a1 + 48) + v12);
    uint64_t v18 = v13;
    swift_bridgeObjectRetain();
    a2(v17, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_EBBF4(uint64_t a1, void (*a2)(unsigned char *, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v4 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v4 + 8 * v10);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = (const void *)(*(void *)(a1 + 48) + 560 * v12);
    memcpy(__dst, v13, 0x229uLL);
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    memmove(__src, v13, 0x229uLL);
    void __src[70] = v14;
    memcpy(v18, __src, sizeof(v18));
    sub_12384(__dst);
    swift_bridgeObjectRetain();
    a2(v18, v14);
    uint64_t result = (uint64_t)sub_EE240(__src);
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_EBDC8(uint64_t a1, void (*a2)(uint64_t *, uint64_t))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v15 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v16 = *(void *)(v4 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v16 = *(void *)(v4 + 8 * v10);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
    unint64_t v12 = __clz(__rbit64(v16)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = 8 * v12;
    uint64_t v14 = *(void *)(*(void *)(a1 + 56) + v13);
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + v13);
    swift_bridgeObjectRetain();
    a2(&v18, v14);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_EBF58@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v112 = a3;
  uint64_t v128 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v5 = __chkstk_darwin(v128);
  unint64_t v7 = (char *)&v112 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v5);
  int64_t v10 = (char *)&v112 - v9;
  __chkstk_darwin(v8);
  uint64_t v120 = (uint64_t)&v112 - v11;
  uint64_t v119 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v12 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  uint64_t v14 = (char *)&v112 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v131 = _swiftEmptySetSingleton;
  unint64_t v124 = sub_1618D4((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v118 = *(void *)(a1 + 16);
  if (v118)
  {
    unint64_t v116 = v10;
    uint64_t v117 = v7;
    int64_t v15 = 0;
    unint64_t v16 = 0;
    unint64_t v17 = 0;
    uint64_t v114 = a1 + ((*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80));
    uint64_t v115 = v12;
    uint64_t v18 = _swiftEmptySetSingleton;
    long long v122 = xmmword_1FD2A0;
    uint64_t v19 = _swiftEmptySetSingleton;
    long long v126 = v14;
    uint64_t v113 = a1;
    while (v17 < *(void *)(a1 + 16))
    {
      long long v127 = v15;
      uint64_t v123 = v16;
      uint64_t v20 = *(void *)(v115 + 72);
      unint64_t v125 = v17;
      sub_EB6E8(v114 + v20 * v17, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v21 = CollectionRecommendation.booksIDs.getter();
      uint64_t v22 = v21[2];
      if (v22)
      {
        uint64_t v23 = 0;
        Swift::Int v121 = v21;
        unint64_t v24 = v21 + 4;
        uint64_t v25 = a2 + 56;
        while (1)
        {
          uint64_t v26 = v24[v23++];
          uint64_t v27 = sub_1FC7D0();
          uint64_t v28 = -1 << *(unsigned char *)(a2 + 32);
          unint64_t v29 = v27 & ~v28;
          if (((*(void *)(v25 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
            goto LABEL_13;
          }
          uint64_t v30 = *(void *)(a2 + 48);
          if (*(void *)(v30 + 8 * v29) == v26)
          {
LABEL_6:
            if (v23 == v22) {
              goto LABEL_15;
            }
          }
          else
          {
            uint64_t v31 = ~v28;
            while (1)
            {
              unint64_t v29 = (v29 + 1) & v31;
              if (((*(void *)(v25 + ((v29 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v29) & 1) == 0) {
                break;
              }
              if (*(void *)(v30 + 8 * v29) == v26) {
                goto LABEL_6;
              }
            }
LABEL_13:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v130[0] = a2;
            sub_C020(v26, v29, isUniquelyReferenced_nonNull_native);
            a2 = v130[0];
            swift_bridgeObjectRelease();
            if (v23 == v22)
            {
LABEL_15:
              swift_bridgeObjectRelease();
              uint64_t v14 = v126;
              goto LABEL_17;
            }
            uint64_t v25 = a2 + 56;
          }
        }
      }
      swift_bridgeObjectRelease();
LABEL_17:
      uint64_t v33 = v120;
      sub_EB6E8((uint64_t)v14, v120, type metadata accessor for CollectionRecommendation);
      if (swift_getEnumCaseMultiPayload() != 5)
      {
        sub_37898(v33, type metadata accessor for CollectionRecommendation);
        long long v35 = _swiftEmptyArrayStorage;
        uint64_t v37 = _swiftEmptyArrayStorage[2];
        if (!v37) {
          goto LABEL_31;
        }
LABEL_19:
        uint64_t v38 = 0;
        Swift::Int v121 = v35;
        long long v39 = v35 + 4;
        for (unint64_t i = v18 + 7; ; unint64_t i = v18 + 7)
        {
          while (2)
          {
            uint64_t v41 = v39[v38++];
            uint64_t v42 = sub_1FC7D0();
            uint64_t v43 = -1 << *((unsigned char *)v18 + 32);
            unint64_t v44 = v42 & ~v43;
            if ((*(void *)((char *)i + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44))
            {
              uint64_t v45 = v18[6];
              if (*(void *)(v45 + 8 * v44) == v41)
              {
LABEL_20:
                if (v38 == v37) {
                  goto LABEL_29;
                }
                continue;
              }
              uint64_t v46 = ~v43;
              while (1)
              {
                unint64_t v44 = (v44 + 1) & v46;
                if (((*(void *)((char *)i + ((v44 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v44) & 1) == 0) {
                  break;
                }
                if (*(void *)(v45 + 8 * v44) == v41) {
                  goto LABEL_20;
                }
              }
            }
            break;
          }
          char v47 = swift_isUniquelyReferenced_nonNull_native();
          v130[0] = v18;
          sub_C020(v41, v44, v47);
          uint64_t v18 = (void *)v130[0];
          swift_bridgeObjectRelease();
          if (v38 == v37)
          {
LABEL_29:
            swift_bridgeObjectRelease();
            uint64_t v14 = v126;
            goto LABEL_32;
          }
        }
      }
      uint64_t v34 = *(void *)(v33 + *(int *)(sub_12124(&qword_26D998) + 48));
      sub_12124(&qword_26D3C0);
      long long v35 = (void *)swift_allocObject();
      *((_OWORD *)v35 + 1) = v122;
      _OWORD v35[4] = v34;
      uint64_t v36 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v36 - 8) + 8))(v33, v36);
      uint64_t v37 = v35[2];
      if (v37) {
        goto LABEL_19;
      }
LABEL_31:
      swift_bridgeObjectRelease();
LABEL_32:
      uint64_t v48 = (uint64_t)v116;
      sub_EB6E8((uint64_t)v14, (uint64_t)v116, type metadata accessor for CollectionRecommendation);
      if (swift_getEnumCaseMultiPayload() == 2)
      {
        uint64_t v49 = sub_12124(&qword_26D090);
        memcpy(v130, (const void *)(v48 + *(int *)(v49 + 48)), 0x229uLL);
        swift_bridgeObjectRelease();
        sub_12124(&qword_26D3C8);
        long long v50 = (void *)swift_allocObject();
        *((_OWORD *)v50 + 1) = v122;
        memcpy(v50 + 4, v130, 0x229uLL);
        uint64_t v51 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v51 - 8) + 8))(v48, v51);
        uint64_t v52 = v50[2];
        if (!v52) {
          goto LABEL_39;
        }
      }
      else
      {
        sub_37898(v48, type metadata accessor for CollectionRecommendation);
        long long v50 = _swiftEmptyArrayStorage;
        uint64_t v52 = _swiftEmptyArrayStorage[2];
        if (!v52) {
          goto LABEL_39;
        }
      }
      uint64_t v53 = v52 - 1;
      for (uint64_t j = 4; ; j += 70)
      {
        memcpy(v132, &v50[j], 0x229uLL);
        sub_12384(v132);
        sub_74A0(v129, v132);
        memcpy(v130, v129, 0x229uLL);
        sub_124B4(v130);
        if (!v53) {
          break;
        }
        --v53;
      }
LABEL_39:
      swift_bridgeObjectRelease();
      uint64_t v55 = (uint64_t)v117;
      sub_EB6E8((uint64_t)v14, (uint64_t)v117, type metadata accessor for CollectionRecommendation);
      if (swift_getEnumCaseMultiPayload() == 3)
      {
        uint64_t v56 = *(void *)(v55 + *(int *)(sub_12124(&qword_26D998) + 48));
        sub_12124(&qword_26D3C0);
        uint64_t v57 = (void *)swift_allocObject();
        *((_OWORD *)v57 + 1) = v122;
        v57[4] = v56;
        uint64_t v58 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t))(*(void *)(v58 - 8) + 8))(v55, v58);
        uint64_t v59 = v57[2];
        if (v59) {
          goto LABEL_41;
        }
        goto LABEL_53;
      }
      sub_37898(v55, type metadata accessor for CollectionRecommendation);
      uint64_t v57 = _swiftEmptyArrayStorage;
      uint64_t v59 = _swiftEmptyArrayStorage[2];
      if (v59)
      {
LABEL_41:
        uint64_t v60 = 0;
        Swift::Int v121 = v57;
        Swift::Int v61 = v57 + 4;
        uint64_t v62 = v19 + 7;
        while (1)
        {
          uint64_t v63 = v61[v60++];
          uint64_t v64 = sub_1FC7D0();
          uint64_t v65 = -1 << *((unsigned char *)v19 + 32);
          unint64_t v66 = v64 & ~v65;
          if (((*(void *)((char *)v62 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
            goto LABEL_49;
          }
          uint64_t v67 = v19[6];
          if (*(void *)(v67 + 8 * v66) == v63)
          {
LABEL_42:
            if (v60 == v59) {
              goto LABEL_51;
            }
          }
          else
          {
            uint64_t v68 = ~v65;
            while (1)
            {
              unint64_t v66 = (v66 + 1) & v68;
              if (((*(void *)((char *)v62 + ((v66 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v66) & 1) == 0) {
                break;
              }
              if (*(void *)(v67 + 8 * v66) == v63) {
                goto LABEL_42;
              }
            }
LABEL_49:
            char v69 = swift_isUniquelyReferenced_nonNull_native();
            v130[0] = v19;
            sub_C020(v63, v66, v69);
            uint64_t v19 = (void *)v130[0];
            swift_bridgeObjectRelease();
            if (v60 == v59)
            {
LABEL_51:
              swift_bridgeObjectRelease();
              uint64_t v14 = v126;
              goto LABEL_54;
            }
            uint64_t v62 = v19 + 7;
          }
        }
      }
LABEL_53:
      swift_bridgeObjectRelease();
LABEL_54:
      CollectionRecommendation.collectionRecommendationType.getter((char *)v130);
      sub_52958((uint64_t)v127);
      unsigned __int8 v70 = v130[0];
      LODWORD(v127) = v14[*(int *)(v119 + 20)];
      long long v71 = (void *)v124;
      char v72 = swift_isUniquelyReferenced_nonNull_native();
      v130[0] = v71;
      unint64_t v74 = sub_4C7F4(v70);
      uint64_t v75 = v71[2];
      BOOL v76 = (v73 & 1) == 0;
      uint64_t v77 = v75 + v76;
      if (__OFADD__(v75, v76)) {
        goto LABEL_82;
      }
      char v78 = v73;
      if (v71[3] >= v77)
      {
        if ((v72 & 1) == 0)
        {
          sub_1227EC();
          long long v71 = (void *)v130[0];
        }
      }
      else
      {
        sub_11B574(v77, v72);
        long long v79 = (void *)v130[0];
        unint64_t v80 = sub_4C7F4(v70);
        if ((v78 & 1) != (v81 & 1)) {
          goto LABEL_87;
        }
        unint64_t v74 = v80;
        long long v71 = v79;
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      if ((v78 & 1) == 0)
      {
        unint64_t v82 = sub_1617D8((uint64_t)_swiftEmptyArrayStorage);
        v71[(v74 >> 6) + 8] |= 1 << v74;
        *(unsigned char *)(v71[6] + v74) = v70;
        *(void *)(v71[7] + 8 * v74) = v82;
        uint64_t v83 = v71[2];
        BOOL v84 = __OFADD__(v83, 1);
        uint64_t v85 = v83 + 1;
        if (v84) {
          goto LABEL_85;
        }
        v71[2] = v85;
      }
      uint64_t v86 = v71[7];
      unint64_t v124 = (unint64_t)v71;
      swift_bridgeObjectRelease();
      uint64_t v87 = 8 * v74;
      sub_52958((uint64_t)v123);
      char v88 = swift_isUniquelyReferenced_nonNull_native();
      v130[0] = *(void *)(v86 + 8 * v74);
      uint64_t v89 = v130[0];
      *(void *)(v86 + 8 * v74) = 0x8000000000000000;
      unint64_t v91 = sub_4CC78(v127);
      uint64_t v92 = *(void *)(v89 + 16);
      BOOL v93 = (v90 & 1) == 0;
      uint64_t v94 = v92 + v93;
      if (__OFADD__(v92, v93)) {
        goto LABEL_83;
      }
      char v95 = v90;
      if (*(void *)(v89 + 24) >= v94)
      {
        if ((v88 & 1) == 0)
        {
          sub_12265C();
          uint64_t v89 = v130[0];
        }
      }
      else
      {
        sub_11B240(v94, v88);
        uint64_t v89 = v130[0];
        unint64_t v96 = sub_4CC78(v127);
        if ((v95 & 1) != (v97 & 1)) {
          goto LABEL_88;
        }
        unint64_t v91 = v96;
      }
      unint64_t v98 = v125;
      *(void *)(v86 + v87) = v89;
      swift_bridgeObjectRelease();
      uint64_t v99 = *(void **)(v86 + v87);
      if (v95)
      {
        uint64_t v100 = swift_bridgeObjectRetain();
        uint64_t v14 = v126;
      }
      else
      {
        v99[(v91 >> 6) + 8] |= 1 << v91;
        *(unsigned char *)(v99[6] + v91) = (_BYTE)v127;
        *(void *)(v99[7] + 8 * v91) = 0;
        uint64_t v101 = v99[2];
        uint64_t v102 = v101 + 1;
        BOOL v103 = __OFADD__(v101, 1);
        uint64_t v100 = swift_bridgeObjectRetain();
        uint64_t v14 = v126;
        if (v103) {
          goto LABEL_86;
        }
        *(void *)(v100 + 16) = v102;
        unint64_t v98 = v125;
      }
      uint64_t v104 = *(void *)(v100 + 56);
      swift_bridgeObjectRelease();
      uint64_t v105 = *(void *)(v104 + 8 * v91);
      BOOL v84 = __OFADD__(v105, 1);
      uint64_t v106 = v105 + 1;
      if (v84) {
        goto LABEL_84;
      }
      unint64_t v17 = v98 + 1;
      *(void *)(v104 + 8 * v91) = v106;
      sub_37898((uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      unint64_t v16 = sub_E3B54;
      int64_t v15 = sub_E6E94;
      a1 = v113;
      if (v17 == v118)
      {
        swift_bridgeObjectRelease();
        uint64_t v107 = sub_E3B54;
        uint64_t v108 = sub_E6E94;
        unint64_t v109 = v131;
        goto LABEL_80;
      }
    }
    __break(1u);
LABEL_82:
    __break(1u);
LABEL_83:
    __break(1u);
LABEL_84:
    __break(1u);
LABEL_85:
    __break(1u);
LABEL_86:
    __break(1u);
LABEL_87:
    sub_1FC770();
    __break(1u);
LABEL_88:
    uint64_t result = sub_1FC770();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v108 = 0;
    uint64_t v107 = 0;
    unint64_t v109 = _swiftEmptySetSingleton;
    uint64_t v18 = _swiftEmptySetSingleton;
    uint64_t v19 = _swiftEmptySetSingleton;
LABEL_80:
    sub_52958((uint64_t)v108);
    uint64_t result = sub_52958((uint64_t)v107);
    unint64_t v111 = v112;
    *uint64_t v112 = a2;
    v111[1] = v18;
    v111[2] = v109;
    v111[3] = v19;
    v111[4] = v124;
  }
  return result;
}

const char *sub_ECAC0(uint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_12124(&qword_26F7C0);
  __chkstk_darwin(v9 - 8);
  uint64_t v146 = (uint64_t)&v133 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v149 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v140 = *(void *)(v149 - 8);
  uint64_t v11 = __chkstk_darwin(v149);
  uint64_t v142 = (uint64_t)&v133 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v141 = (uint64_t)&v133 - v14;
  __chkstk_darwin(v13);
  uint64_t v152 = (uint64_t)&v133 - v15;
  uint64_t v150 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v16 = *(void *)(v150 - 8);
  uint64_t v17 = __chkstk_darwin(v150);
  unint64_t v144 = (unint64_t)&v133 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v143 = (uint64_t)&v133 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v151 = (uint64_t)&v133 - v22;
  __chkstk_darwin(v21);
  uint64_t v145 = (char *)&v133 - v23;
  uint64_t v153 = *a1;
  uint64_t v24 = a1[1];
  uint64_t v25 = a1[2];
  long long v26 = v4[5];
  long long v178 = v4[4];
  long long v179 = v26;
  uint64_t v27 = *((void *)v4 + 13);
  uint64_t v180 = *((void *)v4 + 12);
  long long v28 = v4[1];
  long long v174 = *v4;
  long long v175 = v28;
  long long v29 = v4[3];
  long long v176 = v4[2];
  long long v177 = v29;
  long long v30 = v4[9];
  long long v31 = v4[7];
  long long v172 = v4[8];
  long long v173 = v30;
  long long v171 = v31;
  uint64_t v32 = *((void *)v4 + 20);
  uint64_t v147 = v27;
  uint64_t v148 = v32;
  long long v170 = *(long long *)((char *)v4 + 200);
  long long v33 = *(long long *)((char *)v4 + 168);
  long long v169 = *(long long *)((char *)v4 + 184);
  long long v168 = v33;
  uint64_t v154 = v25;
  if (!v25 || (v24 & 1) != 0) {
    return (const char *)_swiftEmptyArrayStorage;
  }
  uint64_t v133 = a4;
  uint64_t v34 = _swiftEmptyArrayStorage;
  long long v35 = (void *)sub_1617D8((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v36 = *(void *)(a2 + 16);
  uint64_t v134 = v16;
  uint64_t v135 = a3;
  if (v36)
  {
    uint64_t v37 = a2 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v38 = *(void *)(v16 + 72);
    long long v139 = (char *)a2;
    swift_bridgeObjectRetain();
    long long v39 = v145;
    do
    {
      sub_EB6E8(v37, (uint64_t)v39, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      unsigned __int8 v40 = v39[*(int *)(v150 + 20)];
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)&v167[0] = v35;
      unint64_t v43 = sub_4CC78(v40);
      uint64_t v44 = v35[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_112;
      }
      char v47 = v42;
      if (v35[3] >= v46)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_12265C();
          long long v35 = *(void **)&v167[0];
        }
      }
      else
      {
        sub_11B240(v46, isUniquelyReferenced_nonNull_native);
        long long v35 = *(void **)&v167[0];
        unint64_t v48 = sub_4CC78(v40);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_118;
        }
        unint64_t v43 = v48;
      }
      swift_bridgeObjectRelease();
      if ((v47 & 1) == 0)
      {
        v35[(v43 >> 6) + 8] |= 1 << v43;
        *(unsigned char *)(v35[6] + v43) = v40;
        *(void *)(v35[7] + 8 * v43) = 0;
        uint64_t v50 = v35[2];
        BOOL v51 = __OFADD__(v50, 1);
        uint64_t v52 = v50 + 1;
        if (v51) {
          goto LABEL_114;
        }
        _OWORD v35[2] = v52;
      }
      uint64_t v53 = v35[7];
      uint64_t v54 = *(void *)(v53 + 8 * v43);
      BOOL v51 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v51) {
        goto LABEL_113;
      }
      *(void *)(v53 + 8 * v43) = v55;
      long long v39 = v145;
      sub_37898((uint64_t)v145, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      v37 += v38;
      --v36;
    }
    while (v36);
    swift_bridgeObjectRelease();
    uint64_t v16 = v134;
    a3 = v135;
    uint64_t v34 = _swiftEmptyArrayStorage;
  }
  *(void *)&long long v157 = _swiftEmptyArrayStorage;
  uint64_t v57 = *(void *)(a3 + 16);
  swift_bridgeObjectRetain();
  if (v57)
  {
    unint64_t v58 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
    uint64_t v59 = *(void *)(v16 + 72);
    uint64_t v60 = a3 + v58;
    uint64_t v145 = "http://localhost:18060";
    long long v138 = "booksBySuggestedAuthors";
    long long v139 = "ry";
    uint64_t v136 = "mangaYouMightLike";
    long long v137 = "booksYouMightLike";
    do
    {
      uint64_t v61 = v151;
      sub_EB6E8(v60, v151, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_EB6E8(v61, v152, type metadata accessor for CollectionRecommendation);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 1u:
        case 9u:
        case 0xAu:
        case 0xBu:
          sub_37898(v152, type metadata accessor for CollectionRecommendation);
          goto LABEL_29;
        case 2u:
          uint64_t v62 = sub_12124(&qword_26D090);
          uint64_t v63 = v152;
          memcpy(v167, (const void *)(v152 + *(int *)(v62 + 48)), 0x229uLL);
          sub_124B4(v167);
          swift_bridgeObjectRelease();
          uint64_t v64 = sub_12124(&qword_26D088);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v64 - 8) + 8))(v63, v64);
          goto LABEL_29;
        case 3u:
        case 5u:
        case 6u:
        case 7u:
          uint64_t v65 = sub_12124(&qword_26D088);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v65 - 8) + 8))(v152, v65);
          goto LABEL_29;
        case 4u:
        case 8u:
          uint64_t v66 = sub_12124(&qword_26D088);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v66 - 8) + 8))(v152, v66);
LABEL_29:
          char v67 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v67) {
            goto LABEL_21;
          }
          sub_EDE6C(v151, v143, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_46A20(0, v34[2] + 1, 1);
          }
          uint64_t v34 = (void *)v157;
          unint64_t v69 = *(void *)(v157 + 16);
          unint64_t v68 = *(void *)(v157 + 24);
          if (v69 >= v68 >> 1)
          {
            sub_46A20(v68 > 1, v69 + 1, 1);
            uint64_t v34 = (void *)v157;
          }
          v34[2] = v69 + 1;
          sub_EDE6C(v143, (uint64_t)v34 + v58 + v69 * v59, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
          break;
        default:
          sub_37898(v152, type metadata accessor for CollectionRecommendation);
          swift_bridgeObjectRelease();
LABEL_21:
          sub_37898(v151, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
          break;
      }
      v60 += v59;
      --v57;
    }
    while (v57);
    unsigned __int8 v70 = (void *)v157;
    uint64_t v16 = v134;
    uint64_t v34 = _swiftEmptyArrayStorage;
  }
  else
  {
    unsigned __int8 v70 = _swiftEmptyArrayStorage;
  }
  swift_bridgeObjectRelease();
  int64_t v71 = v70[2];
  if (v71)
  {
    *(void *)&v167[0] = _swiftEmptyArrayStorage;
    sub_46A5C(0, v71, 0);
    uint64_t v72 = (uint64_t)v70 + ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80));
    uint64_t v73 = *(void *)(v16 + 72);
    do
    {
      uint64_t v74 = v144;
      sub_EB6E8(v72, v144, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      char v75 = *(unsigned char *)(v74 + *(int *)(v150 + 20));
      sub_37898(v74, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v34 = *(void **)&v167[0];
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46A5C(0, v34[2] + 1, 1);
        uint64_t v34 = *(void **)&v167[0];
      }
      unint64_t v77 = v34[2];
      unint64_t v76 = v34[3];
      if (v77 >= v76 >> 1)
      {
        sub_46A5C(v76 > 1, v77 + 1, 1);
        uint64_t v34 = *(void **)&v167[0];
      }
      v34[2] = v77 + 1;
      *((unsigned char *)v34 + v77 + 32) = v75;
      v72 += v73;
      --v71;
    }
    while (v71);
  }
  swift_release();
  uint64_t v78 = sub_5160C((uint64_t)v34);
  swift_bridgeObjectRelease();
  uint64_t v79 = v133;
  swift_bridgeObjectRetain();
  uint64_t v80 = swift_bridgeObjectRetain();
  uint64_t v81 = sub_EACC4(v80, v79);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v82 = sub_EB0E8(v81, v78);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v139 = *(char **)(v82 + 16);
  if (!v139)
  {
LABEL_106:
    swift_bridgeObjectRelease();
    uint64_t v132 = 0;
    uint64_t v145 = (const char *)_swiftEmptyArrayStorage;
    goto LABEL_108;
  }
  unint64_t v83 = 0;
  uint64_t v143 = 0;
  uint64_t v150 = v154 + 56;
  long long v138 = (const char *)(v82 + 32);
  uint64_t v145 = (const char *)_swiftEmptyArrayStorage;
  BOOL v84 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v140 + 48);
  long long v137 = (const char *)v82;
  while (2)
  {
    uint64_t v85 = &v138[152 * v83];
    long long v86 = *((_OWORD *)v85 + 2);
    long long v87 = *((_OWORD *)v85 + 3);
    long long v88 = *((_OWORD *)v85 + 5);
    long long v161 = *((_OWORD *)v85 + 4);
    long long v162 = v88;
    long long v159 = v86;
    long long v160 = v87;
    long long v89 = *((_OWORD *)v85 + 6);
    long long v90 = *((_OWORD *)v85 + 7);
    long long v91 = *((_OWORD *)v85 + 8);
    char v166 = v85[144];
    long long v164 = v90;
    long long v165 = v91;
    long long v163 = v89;
    long long v92 = *((_OWORD *)v85 + 1);
    long long v157 = *(_OWORD *)v85;
    long long v158 = v92;
    unint64_t v144 = v83 + 1;
    uint64_t v93 = 1 << *(unsigned char *)(v154 + 32);
    if (v93 < 64) {
      uint64_t v94 = ~(-1 << v93);
    }
    else {
      uint64_t v94 = -1;
    }
    unint64_t v95 = v94 & *(void *)(v154 + 56);
    LODWORD(v151) = BYTE8(v157);
    sub_54834((uint64_t)&v157);
    uint64_t v152 = (unint64_t)(v93 + 63) >> 6;
    swift_bridgeObjectRetain();
    uint64_t v96 = 0;
    while (v95)
    {
      unint64_t v97 = __clz(__rbit64(v95));
      v95 &= v95 - 1;
      unint64_t v98 = v97 | (v96 << 6);
LABEL_66:
      uint64_t v102 = *(void *)(v154 + 48);
      int v103 = *(unsigned __int8 *)(v102 + v98);
      if (*(unsigned char *)(v102 + v98))
      {
        if (v103 != 1) {
          goto LABEL_73;
        }
        if (v151)
        {
LABEL_75:
          swift_bridgeObjectRelease();
          if (v35[2]) {
            goto LABEL_76;
          }
LABEL_79:
          if (v153 > 0)
          {
LABEL_80:
            v167[4] = v178;
            v167[5] = v179;
            v167[0] = v174;
            v167[1] = v175;
            v167[2] = v176;
            v167[3] = v177;
            *(void *)&v167[6] = v180;
            *((void *)&v167[6] + 1) = v147;
            v167[8] = v172;
            v167[9] = v173;
            v167[7] = v171;
            *(void *)&v167[10] = v148;
            *(_OWORD *)((char *)&v167[11] + 8) = v169;
            *(_OWORD *)((char *)&v167[12] + 8) = v170;
            *(_OWORD *)((char *)&v167[10] + 8) = v168;
            v155[6] = v163;
            v155[7] = v164;
            v155[8] = v165;
            char v156 = v166;
            v155[2] = v159;
            v155[3] = v160;
            v155[4] = v161;
            v155[5] = v162;
            v155[0] = v157;
            v155[1] = v158;
            uint64_t v108 = v146;
            sub_E3B5C((uint64_t *)v155, v146);
            if ((*v84)(v108, 1, v149) == 1)
            {
              sub_55F38(v108, &qword_26F7C0);
            }
            else
            {
              uint64_t v109 = v108;
              uint64_t v110 = v141;
              sub_EDE6C(v109, v141, type metadata accessor for CollectionRecommendation);
              sub_EB6E8(v110, v142, type metadata accessor for CollectionRecommendation);
              if (swift_isUniquelyReferenced_nonNull_native()) {
                unint64_t v111 = v145;
              }
              else {
                unint64_t v111 = (const char *)sub_41F08(0, *((void *)v145 + 2) + 1, 1, (unint64_t)v145);
              }
              unint64_t v113 = *((void *)v111 + 2);
              unint64_t v112 = *((void *)v111 + 3);
              if (v113 >= v112 >> 1) {
                unint64_t v111 = (const char *)sub_41F08(v112 > 1, v113 + 1, 1, (unint64_t)v111);
              }
              *((void *)v111 + 2) = v113 + 1;
              unint64_t v114 = (*(unsigned __int8 *)(v140 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v140 + 80);
              uint64_t v145 = v111;
              sub_EDE6C(v142, (uint64_t)&v111[v114 + *(void *)(v140 + 72) * v113], type metadata accessor for CollectionRecommendation);
              sub_52958(v143);
              LODWORD(v143) = swift_isUniquelyReferenced_nonNull_native();
              *(void *)&v167[0] = v35;
              unint64_t v116 = sub_4CC78(v103);
              uint64_t v117 = v35[2];
              BOOL v118 = (v115 & 1) == 0;
              uint64_t v119 = v117 + v118;
              if (__OFADD__(v117, v118)) {
                goto LABEL_115;
              }
              char v120 = v115;
              if (v35[3] >= v119)
              {
                if ((v143 & 1) == 0)
                {
                  char v131 = v115;
                  sub_12265C();
                  char v120 = v131;
                }
              }
              else
              {
                char v121 = v115;
                sub_11B240(v119, v143);
                unint64_t v122 = sub_4CC78(v103);
                char v120 = v121;
                if ((v121 & 1) != (v123 & 1)) {
                  goto LABEL_118;
                }
                unint64_t v116 = v122;
              }
              long long v35 = *(void **)&v167[0];
              swift_bridgeObjectRelease();
              if (v120)
              {
                swift_bridgeObjectRetain();
              }
              else
              {
                v35[(v116 >> 6) + 8] |= 1 << v116;
                *(unsigned char *)(v35[6] + v116) = v103;
                *(void *)(v35[7] + 8 * v116) = 0;
                uint64_t v124 = v35[2];
                uint64_t v125 = v124 + 1;
                BOOL v126 = __OFADD__(v124, 1);
                swift_bridgeObjectRetain();
                if (v126) {
                  goto LABEL_117;
                }
                _OWORD v35[2] = v125;
              }
              uint64_t v127 = v35[7];
              swift_bridgeObjectRelease();
              uint64_t v128 = *(void *)(v127 + 8 * v116);
              BOOL v51 = __OFADD__(v128, 1);
              uint64_t v129 = v128 + 1;
              if (v51) {
                goto LABEL_116;
              }
              *(void *)(v127 + 8 * v116) = v129;
              uint64_t v130 = *((void *)v145 + 2);
              sub_37898(v141, type metadata accessor for CollectionRecommendation);
              uint64_t v143 = (uint64_t)sub_E3B54;
              if (v130 == v148)
              {
                sub_7A018((uint64_t)&v157);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_release();
                return v145;
              }
            }
          }
        }
        else
        {
          char v104 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v104)
          {
LABEL_73:
            if (!v35[2]) {
              goto LABEL_79;
            }
LABEL_76:
            unint64_t v106 = sub_4CC78(v103);
            if ((v107 & 1) == 0) {
              goto LABEL_79;
            }
            if (*(void *)(v35[7] + 8 * v106) < v153) {
              goto LABEL_80;
            }
          }
        }
      }
      else
      {
        if ((v151 & 1) == 0) {
          goto LABEL_75;
        }
        char v105 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        if (v105) {
          goto LABEL_73;
        }
      }
    }
    uint64_t v99 = v96 + 1;
    if (__OFADD__(v96, 1))
    {
      __break(1u);
      goto LABEL_111;
    }
    if (v99 >= v152) {
      goto LABEL_103;
    }
    unint64_t v100 = *(void *)(v150 + 8 * v99);
    ++v96;
    if (v100) {
      goto LABEL_65;
    }
    uint64_t v96 = v99 + 1;
    if (v99 + 1 >= v152) {
      goto LABEL_103;
    }
    unint64_t v100 = *(void *)(v150 + 8 * v96);
    if (v100) {
      goto LABEL_65;
    }
    uint64_t v96 = v99 + 2;
    if (v99 + 2 >= v152) {
      goto LABEL_103;
    }
    unint64_t v100 = *(void *)(v150 + 8 * v96);
    if (v100)
    {
LABEL_65:
      unint64_t v95 = (v100 - 1) & v100;
      unint64_t v98 = __clz(__rbit64(v100)) + (v96 << 6);
      goto LABEL_66;
    }
    uint64_t v101 = v99 + 3;
    if (v101 < v152)
    {
      unint64_t v100 = *(void *)(v150 + 8 * v101);
      if (!v100)
      {
        while (1)
        {
          uint64_t v96 = v101 + 1;
          if (__OFADD__(v101, 1)) {
            break;
          }
          if (v96 >= v152) {
            goto LABEL_103;
          }
          unint64_t v100 = *(void *)(v150 + 8 * v96);
          ++v101;
          if (v100) {
            goto LABEL_65;
          }
        }
LABEL_111:
        __break(1u);
LABEL_112:
        __break(1u);
LABEL_113:
        __break(1u);
LABEL_114:
        __break(1u);
LABEL_115:
        __break(1u);
LABEL_116:
        __break(1u);
LABEL_117:
        __break(1u);
LABEL_118:
        sub_1FC770();
        __break(1u);
        JUMPOUT(0xEDC68);
      }
      uint64_t v96 = v101;
      goto LABEL_65;
    }
LABEL_103:
    swift_release();
    sub_7A018((uint64_t)&v157);
    unint64_t v83 = v144;
    if ((char *)v144 != v139)
    {
      if (v144 >= *((void *)v137 + 2))
      {
        __break(1u);
        goto LABEL_106;
      }
      continue;
    }
    break;
  }
  swift_bridgeObjectRelease();
  uint64_t v132 = v143;
LABEL_108:
  swift_bridgeObjectRelease();
  sub_52958(v132);
  return v145;
}

uint64_t sub_EDC98(uint64_t a1)
{
  return a1;
}

uint64_t sub_EDDAC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_EDE0C(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_EDE6C(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_EDED4()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 240, 7);
}

uint64_t sub_EDF94(uint64_t a1)
{
  return sub_E40C8(a1, *(void *)(v1 + 16), v1 + 24);
}

uint64_t sub_EDFA0(uint64_t a1)
{
  return a1;
}

uint64_t sub_EE0B0(uint64_t a1)
{
  return a1;
}

uint64_t sub_EE0DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

void *sub_EE148@<X0>(uint64_t a1@<X0>, const void *a2@<X1>, uint64_t a3@<X8>)
{
  return sub_E56D4(a1, a2, *(void *)(v3 + 16), a3);
}

uint64_t sub_EE154(unsigned __int8 *a1, uint64_t a2)
{
  return sub_E4128(a1, a2, *(uint64_t **)(v2 + 16), *(long long **)(v2 + 24), *(void (**)(void))(v2 + 32), *(void *)(v2 + 40));
}

uint64_t sub_EE160(uint64_t *a1, uint64_t a2)
{
  return sub_E5EF4(*a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(unsigned __int8 *)(v2 + 32), *(void *)(v2 + 40), *(void (**)(void, void))(v2 + 48), *(void *)(v2 + 56), *(void (**)(char *))(v2 + 64), *(void *)(v2 + 72), *(unsigned char *)(v2 + 80));
}

uint64_t sub_EE1A4(void *__src, uint64_t a2)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *(void *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 40);
  unint64_t v7 = *(void (**)(char *, unsigned char *))(v2 + 48);
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v9 = *(void (**)(char *))(v2 + 64);
  uint64_t v10 = *(void *)(v2 + 72);
  unsigned __int8 v11 = *(unsigned char *)(v2 + 80);
  int v12 = *(unsigned __int8 *)(v2 + 32);
  memcpy(__dst, __src, 0x229uLL);
  return sub_E58D4(__dst, a2, v4, v5, v12, v6, v7, v8, v9, v10, v11);
}

void *sub_EE240(void *a1)
{
  uint64_t v2 = a1[12];
  uint64_t v3 = a1[13];
  uint64_t v4 = a1[14];
  uint64_t v5 = a1[15];
  uint64_t v6 = a1[16];
  unint64_t v7 = a1[17];
  uint64_t v9 = a1[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1255C(v9, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_EE2F8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D588);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_EE360(uint64_t a1)
{
  return a1;
}

char *sub_EE38C(char *a1, uint64_t a2)
{
  return sub_E31F8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_EE398(uint64_t a1)
{
  return a1;
}

uint64_t sub_EE3C4(uint64_t a1)
{
  return a1;
}

uint64_t destroy for ScoredCollectionRecommendationSet()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScoredCollectionRecommendationSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v3;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScoredCollectionRecommendationSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

__n128 initializeWithTake for FeatureAffinityInfo(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t assignWithTake for ScoredCollectionRecommendationSet(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoredCollectionRecommendationSet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoredCollectionRecommendationSet(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredCollectionRecommendationSet()
{
  return &type metadata for ScoredCollectionRecommendationSet;
}

uint64_t sub_EE688(uint64_t a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *(void *)a1 = *a2;
    a1 = v9 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    type metadata accessor for CollectionRecommendation(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_27;
      case 2u:
        uint64_t v11 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = sub_12124(&qword_26D090);
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = (uint64_t)a2 + v13;
        *(void *)uint64_t v14 = *(uint64_t *)((char *)a2 + v13);
        *(unsigned char *)(v14 + 8) = *((unsigned char *)a2 + v13 + 8);
        uint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 24);
        *(void *)(v14 + 16) = *(uint64_t *)((char *)a2 + v13 + 16);
        *(void *)(v14 + 24) = v16;
        *(unsigned char *)(v14 + 40) = *((unsigned char *)a2 + v13 + 40);
        *(void *)(v14 + 32) = *(uint64_t *)((char *)a2 + v13 + 32);
        *(unsigned char *)(v14 + 80) = *((unsigned char *)a2 + v13 + 80);
        long long v17 = *(_OWORD *)((char *)a2 + v13 + 64);
        *(_OWORD *)(v14 + 48) = *(_OWORD *)((char *)a2 + v13 + 48);
        *(_OWORD *)(v14 + 64) = v17;
        unint64_t v18 = *(uint64_t *)((char *)a2 + v13 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v18 >> 1 == 0xFFFFFFFF)
        {
          long long v19 = *(_OWORD *)(v15 + 136);
          *(_OWORD *)(v14 + 120) = *(_OWORD *)(v15 + 120);
          *(_OWORD *)(v14 + 136) = v19;
          *(void *)(v14 + 152) = *(void *)(v15 + 152);
          long long v20 = *(_OWORD *)(v15 + 104);
          *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
          *(_OWORD *)(v14 + 104) = v20;
        }
        else
        {
          uint64_t v27 = *(void *)(v15 + 88);
          uint64_t v45 = v12;
          uint64_t v28 = *(void *)(v15 + 104);
          uint64_t v29 = *(void *)(v15 + 112);
          uint64_t v41 = *(void *)(v15 + 120);
          uint64_t v42 = *(void *)(v15 + 96);
          uint64_t v40 = *(void *)(v15 + 128);
          uint64_t v43 = *(void *)(v15 + 144);
          uint64_t v44 = *(void *)(v15 + 152);
          sub_1244C();
          *(void *)(v14 + 88) = v27;
          *(void *)(v14 + 96) = v42;
          *(void *)(v14 + 104) = v28;
          *(void *)(v14 + 112) = v29;
          *(void *)(v14 + 120) = v41;
          *(void *)(v14 + 128) = v40;
          *(void *)(v14 + 136) = v18;
          *(void *)(v14 + 144) = v43;
          uint64_t v12 = v45;
          *(void *)(v14 + 152) = v44;
        }
        memcpy((void *)(v14 + 160), (const void *)(v15 + 160), 0x179uLL);
        *(void *)(v14 + 544) = *(void *)(v15 + 544);
        *(unsigned char *)(v14 + 552) = *(unsigned char *)(v15 + 552);
        *(void *)(a1 + *(int *)(v12 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v12 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 3u:
      case 5u:
        uint64_t v21 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = sub_12124(&qword_26D998);
        *(void *)(a1 + *(int *)(v22 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v22 + 48));
        *(unsigned char *)(a1 + *(int *)(v22 + 64)) = *((unsigned char *)a2 + *(int *)(v22 + 64));
        goto LABEL_27;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v23 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = sub_12124(&qword_26D9C8);
        *(unsigned char *)(a1 + *(int *)(v24 + 48)) = *((unsigned char *)a2 + *(int *)(v24 + 48));
        goto LABEL_27;
      case 9u:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v25 = a2[8];
        if (v25)
        {
          *(void *)(a1 + 16) = a2[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
          *(void *)(a1 + 32) = a2[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
          int v26 = *((unsigned __int8 *)a2 + 56);
          *(void *)(a1 + 48) = a2[6];
          if (v26 == 255)
          {
            *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          }
          else
          {
            *(unsigned char *)(a1 + 56) = v26 & 1;
            swift_bridgeObjectRetain();
          }
          uint64_t v34 = a2[9];
          uint64_t v35 = a2[10];
          *(void *)(a1 + 64) = v25;
          *(void *)(a1 + 72) = v34;
          uint64_t v36 = a2[11];
          uint64_t v37 = a2[12];
          *(void *)(a1 + 80) = v35;
          *(void *)(a1 + 88) = v36;
          *(void *)(a1 + 96) = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
          *(_OWORD *)(a1 + 64) = v32;
          *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
          *(void *)(a1 + 96) = a2[12];
          long long v33 = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
          *(_OWORD *)(a1 + 32) = v33;
        }
        *(void *)(a1 + 104) = a2[13];
        goto LABEL_27;
      case 0xAu:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        unint64_t v7 = a2 + 4;
        int v8 = *((unsigned __int8 *)a2 + 40);
        if (v8 != 255) {
          goto LABEL_21;
        }
        *(void *)(a1 + 32) = *v7;
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        break;
      case 0xBu:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        unint64_t v7 = a2 + 4;
        int v8 = *((unsigned __int8 *)a2 + 40);
        if (v8 != 255) {
          goto LABEL_21;
        }
        *(void *)(a1 + 32) = *v7;
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        break;
      default:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        unint64_t v7 = a2 + 4;
        int v8 = *((unsigned __int8 *)a2 + 40);
        if (v8 == 255)
        {
          *(void *)(a1 + 32) = *v7;
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        }
        else
        {
LABEL_21:
          *(void *)(a1 + 32) = *v7;
          *(unsigned char *)(a1 + 40) = v8 & 1;
          swift_bridgeObjectRetain();
        }
        break;
    }
    uint64_t v30 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v30;
    uint64_t v31 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_27:
    swift_storeEnumTagMultiPayload();
    uint64_t v38 = a3[6];
    *(unsigned char *)(a1 + a3[5]) = *((unsigned char *)a2 + a3[5]);
    *(unsigned char *)(a1 + v38) = *((unsigned char *)a2 + v38);
    *(void *)(a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
  }
  return a1;
}

uint64_t sub_EEE88(uint64_t a1)
{
  type metadata accessor for CollectionRecommendation(0);
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 10:
    case 11:
      if (*(unsigned __int8 *)(a1 + 40) != 255) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_7;
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      uint64_t v3 = sub_12124(&qword_26D088);
      long long v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 2:
      uint64_t v5 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = a1 + *(int *)(sub_12124(&qword_26D090) + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v6 + 136) >> 1 != 0xFFFFFFFFLL) {
        sub_12578();
      }
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 9:
      uint64_t result = *(void *)(a1 + 64);
      if (!result) {
        return result;
      }
      if (*(unsigned __int8 *)(a1 + 56) != 255) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

uint64_t sub_EF09C(uint64_t a1, uint64_t a2, int *a3)
{
  type metadata accessor for CollectionRecommendation(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v8 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
      goto LABEL_25;
    case 2u:
      uint64_t v9 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
      uint64_t v10 = sub_12124(&qword_26D090);
      uint64_t v11 = *(int *)(v10 + 48);
      uint64_t v12 = a1 + v11;
      uint64_t v13 = a2 + v11;
      *(void *)uint64_t v12 = *(void *)(a2 + v11);
      *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
      uint64_t v14 = *(void *)(a2 + v11 + 24);
      *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
      *(void *)(v12 + 24) = v14;
      *(unsigned char *)(v12 + 40) = *(unsigned char *)(a2 + v11 + 40);
      *(void *)(v12 + 32) = *(void *)(a2 + v11 + 32);
      *(unsigned char *)(v12 + 80) = *(unsigned char *)(a2 + v11 + 80);
      long long v15 = *(_OWORD *)(a2 + v11 + 64);
      *(_OWORD *)(v12 + 48) = *(_OWORD *)(a2 + v11 + 48);
      *(_OWORD *)(v12 + 64) = v15;
      unint64_t v16 = *(void *)(a2 + v11 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v16 >> 1 == 0xFFFFFFFF)
      {
        long long v17 = *(_OWORD *)(v13 + 136);
        *(_OWORD *)(v12 + 120) = *(_OWORD *)(v13 + 120);
        *(_OWORD *)(v12 + 136) = v17;
        *(void *)(v12 + 152) = *(void *)(v13 + 152);
        long long v18 = *(_OWORD *)(v13 + 104);
        *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
        *(_OWORD *)(v12 + 104) = v18;
      }
      else
      {
        uint64_t v25 = *(void *)(v13 + 88);
        uint64_t v43 = v10;
        uint64_t v26 = *(void *)(v13 + 104);
        uint64_t v27 = *(void *)(v13 + 112);
        uint64_t v39 = *(void *)(v13 + 120);
        uint64_t v40 = *(void *)(v13 + 96);
        uint64_t v38 = *(void *)(v13 + 128);
        uint64_t v41 = *(void *)(v13 + 144);
        uint64_t v42 = *(void *)(v13 + 152);
        sub_1244C();
        *(void *)(v12 + 88) = v25;
        *(void *)(v12 + 96) = v40;
        *(void *)(v12 + 104) = v26;
        *(void *)(v12 + 112) = v27;
        *(void *)(v12 + 120) = v39;
        *(void *)(v12 + 128) = v38;
        *(void *)(v12 + 136) = v16;
        *(void *)(v12 + 144) = v41;
        uint64_t v10 = v43;
        *(void *)(v12 + 152) = v42;
      }
      memcpy((void *)(v12 + 160), (const void *)(v13 + 160), 0x179uLL);
      *(void *)(v12 + 544) = *(void *)(v13 + 544);
      *(unsigned char *)(v12 + 552) = *(unsigned char *)(v13 + 552);
      *(void *)(a1 + *(int *)(v10 + 64)) = *(void *)(a2 + *(int *)(v10 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 3u:
    case 5u:
      uint64_t v19 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = sub_12124(&qword_26D998);
      *(void *)(a1 + *(int *)(v20 + 48)) = *(void *)(a2 + *(int *)(v20 + 48));
      *(unsigned char *)(a1 + *(int *)(v20 + 64)) = *(unsigned char *)(a2 + *(int *)(v20 + 64));
      goto LABEL_25;
    case 4u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v21 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
      uint64_t v22 = sub_12124(&qword_26D9C8);
      *(unsigned char *)(a1 + *(int *)(v22 + 48)) = *(unsigned char *)(a2 + *(int *)(v22 + 48));
      goto LABEL_25;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v23 = *(void *)(a2 + 64);
      if (v23)
      {
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        int v24 = *(unsigned __int8 *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        if (v24 == 255)
        {
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        }
        else
        {
          *(unsigned char *)(a1 + 56) = v24 & 1;
          swift_bridgeObjectRetain();
        }
        uint64_t v32 = *(void *)(a2 + 72);
        uint64_t v33 = *(void *)(a2 + 80);
        *(void *)(a1 + 64) = v23;
        *(void *)(a1 + 72) = v32;
        uint64_t v34 = *(void *)(a2 + 88);
        uint64_t v35 = *(void *)(a2 + 96);
        *(void *)(a1 + 80) = v33;
        *(void *)(a1 + 88) = v34;
        *(void *)(a1 + 96) = v35;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v30 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v30;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        long long v31 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v31;
      }
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      goto LABEL_25;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v6 = (void *)(a2 + 32);
      int v7 = *(unsigned __int8 *)(a2 + 40);
      if (v7 != 255) {
        goto LABEL_19;
      }
      *(void *)(a1 + 32) = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      break;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v6 = (void *)(a2 + 32);
      int v7 = *(unsigned __int8 *)(a2 + 40);
      if (v7 != 255) {
        goto LABEL_19;
      }
      *(void *)(a1 + 32) = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      break;
    default:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v6 = (void *)(a2 + 32);
      int v7 = *(unsigned __int8 *)(a2 + 40);
      if (v7 == 255)
      {
        *(void *)(a1 + 32) = *v6;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      }
      else
      {
LABEL_19:
        *(void *)(a1 + 32) = *v6;
        *(unsigned char *)(a1 + 40) = v7 & 1;
        swift_bridgeObjectRetain();
      }
      break;
  }
  uint64_t v28 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v28;
  uint64_t v29 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v29;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_25:
  swift_storeEnumTagMultiPayload();
  uint64_t v36 = a3[6];
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + v36) = *(unsigned char *)(a2 + v36);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_EF84C(uint64_t a1, uint64_t a2, int *a3)
{
  if (a1 != a2)
  {
    sub_37898(a1, type metadata accessor for CollectionRecommendation);
    type metadata accessor for CollectionRecommendation(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v10 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        goto LABEL_26;
      case 2u:
        uint64_t v11 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(a1, a2, v11);
        uint64_t v12 = sub_12124(&qword_26D090);
        uint64_t v13 = *(int *)(v12 + 48);
        uint64_t v14 = a1 + v13;
        uint64_t v15 = a2 + v13;
        *(void *)uint64_t v14 = *(void *)(a2 + v13);
        *(unsigned char *)(v14 + 8) = *(unsigned char *)(a2 + v13 + 8);
        *(void *)(v14 + 16) = *(void *)(a2 + v13 + 16);
        *(void *)(v14 + 24) = *(void *)(a2 + v13 + 24);
        uint64_t v16 = *(void *)(a2 + v13 + 32);
        *(unsigned char *)(v14 + 40) = *(unsigned char *)(v15 + 40);
        *(void *)(v14 + 32) = v16;
        long long v18 = *(_OWORD *)(v15 + 48);
        long long v17 = *(_OWORD *)(v15 + 64);
        *(unsigned char *)(v14 + 80) = *(unsigned char *)(v15 + 80);
        *(_OWORD *)(v14 + 48) = v18;
        *(_OWORD *)(v14 + 64) = v17;
        unint64_t v19 = *(void *)(v15 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v19 >> 1 == 0xFFFFFFFF)
        {
          *(_OWORD *)(v14 + 88) = *(_OWORD *)(v15 + 88);
          long long v20 = *(_OWORD *)(v15 + 104);
          long long v21 = *(_OWORD *)(v15 + 120);
          long long v22 = *(_OWORD *)(v15 + 136);
          *(void *)(v14 + 152) = *(void *)(v15 + 152);
          *(_OWORD *)(v14 + 120) = v21;
          *(_OWORD *)(v14 + 136) = v22;
          *(_OWORD *)(v14 + 104) = v20;
        }
        else
        {
          uint64_t v35 = *(void *)(v15 + 88);
          uint64_t v48 = v12;
          uint64_t v36 = *(void *)(v15 + 104);
          uint64_t v37 = *(void *)(v15 + 112);
          uint64_t v44 = *(void *)(v15 + 120);
          uint64_t v45 = *(void *)(v15 + 96);
          uint64_t v43 = *(void *)(v15 + 128);
          uint64_t v46 = *(void *)(v15 + 144);
          uint64_t v47 = *(void *)(v15 + 152);
          sub_1244C();
          *(void *)(v14 + 88) = v35;
          *(void *)(v14 + 96) = v45;
          *(void *)(v14 + 104) = v36;
          *(void *)(v14 + 112) = v37;
          *(void *)(v14 + 120) = v44;
          *(void *)(v14 + 128) = v43;
          *(void *)(v14 + 136) = v19;
          *(void *)(v14 + 144) = v46;
          uint64_t v12 = v48;
          *(void *)(v14 + 152) = v47;
        }
        memcpy((void *)(v14 + 160), (const void *)(v15 + 160), 0x179uLL);
        *(void *)(v14 + 544) = *(void *)(v15 + 544);
        *(unsigned char *)(v14 + 552) = *(unsigned char *)(v15 + 552);
        *(void *)(a1 + *(int *)(v12 + 64)) = *(void *)(a2 + *(int *)(v12 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
      case 5u:
        uint64_t v23 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = sub_12124(&qword_26D998);
        *(void *)(a1 + *(int *)(v24 + 48)) = *(void *)(a2 + *(int *)(v24 + 48));
        *(unsigned char *)(a1 + *(int *)(v24 + 64)) = *(unsigned char *)(a2 + *(int *)(v24 + 64));
        goto LABEL_26;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v25 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v25 - 8) + 16))(a1, a2, v25);
        uint64_t v26 = sub_12124(&qword_26D9C8);
        *(unsigned char *)(a1 + *(int *)(v26 + 48)) = *(unsigned char *)(a2 + *(int *)(v26 + 48));
        goto LABEL_26;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        if (*(void *)(a2 + 64))
        {
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v27 = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v27;
          uint64_t v28 = (uint64_t *)(a2 + 48);
          int v29 = *(unsigned __int8 *)(a2 + 56);
          if (v29 == 255)
          {
            uint64_t v30 = *v28;
            *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
            *(void *)(a1 + 48) = v30;
          }
          else
          {
            *(void *)(a1 + 48) = *v28;
            *(unsigned char *)(a1 + 56) = v29 & 1;
            swift_bridgeObjectRetain();
          }
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v38 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v38;
          long long v39 = *(_OWORD *)(a2 + 48);
          long long v40 = *(_OWORD *)(a2 + 64);
          long long v41 = *(_OWORD *)(a2 + 80);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(_OWORD *)(a1 + 64) = v40;
          *(_OWORD *)(a1 + 80) = v41;
          *(_OWORD *)(a1 + 48) = v39;
        }
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        goto LABEL_26;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v31 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v31;
        int v7 = (uint64_t *)(a2 + 32);
        int v8 = *(unsigned __int8 *)(a2 + 40);
        if (v8 != 255) {
          goto LABEL_20;
        }
        uint64_t v32 = *v7;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v32;
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v33 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v33;
        int v7 = (uint64_t *)(a2 + 32);
        int v8 = *(unsigned __int8 *)(a2 + 40);
        if (v8 != 255) {
          goto LABEL_20;
        }
        uint64_t v34 = *v7;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v34;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v6 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v6;
        int v7 = (uint64_t *)(a2 + 32);
        int v8 = *(unsigned __int8 *)(a2 + 40);
        if (v8 == 255)
        {
          uint64_t v9 = *v7;
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v9;
        }
        else
        {
LABEL_20:
          *(void *)(a1 + 32) = *v7;
          *(unsigned char *)(a1 + 40) = v8 & 1;
          swift_bridgeObjectRetain();
        }
        break;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_26:
    swift_storeEnumTagMultiPayload();
  }
  *(unsigned char *)(a1 + a3[5]) = *(unsigned char *)(a2 + a3[5]);
  *(unsigned char *)(a1 + a3[6]) = *(unsigned char *)(a2 + a3[6]);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

unsigned char *sub_F0074(unsigned char *a1, unsigned char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for CollectionRecommendation(0);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v7 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      goto LABEL_7;
    case 2u:
      uint64_t v8 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
      uint64_t v9 = sub_12124(&qword_26D090);
      memcpy(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], 0x229uLL);
      *(void *)&a1[*(int *)(v9 + 64)] = *(void *)&a2[*(int *)(v9 + 64)];
      goto LABEL_7;
    case 3u:
    case 5u:
      uint64_t v10 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
      uint64_t v11 = sub_12124(&qword_26D998);
      *(void *)&a1[*(int *)(v11 + 48)] = *(void *)&a2[*(int *)(v11 + 48)];
      a1[*(int *)(v11 + 64)] = a2[*(int *)(v11 + 64)];
      goto LABEL_7;
    case 4u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v12 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
      uint64_t v13 = sub_12124(&qword_26D9C8);
      a1[*(int *)(v13 + 48)] = a2[*(int *)(v13 + 48)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
      break;
  }
  uint64_t v14 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v14] = a2[v14];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

unsigned char *sub_F04B0(unsigned char *a1, unsigned char *a2, int *a3)
{
  if (a1 != a2)
  {
    sub_37898((uint64_t)a1, type metadata accessor for CollectionRecommendation);
    uint64_t v6 = type metadata accessor for CollectionRecommendation(0);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        goto LABEL_8;
      case 2u:
        uint64_t v8 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v8 - 8) + 32))(a1, a2, v8);
        uint64_t v9 = sub_12124(&qword_26D090);
        memcpy(&a1[*(int *)(v9 + 48)], &a2[*(int *)(v9 + 48)], 0x229uLL);
        *(void *)&a1[*(int *)(v9 + 64)] = *(void *)&a2[*(int *)(v9 + 64)];
        goto LABEL_8;
      case 3u:
      case 5u:
        uint64_t v10 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v10 - 8) + 32))(a1, a2, v10);
        uint64_t v11 = sub_12124(&qword_26D998);
        *(void *)&a1[*(int *)(v11 + 48)] = *(void *)&a2[*(int *)(v11 + 48)];
        a1[*(int *)(v11 + 64)] = a2[*(int *)(v11 + 64)];
        goto LABEL_8;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v12 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v12 - 8) + 32))(a1, a2, v12);
        uint64_t v13 = sub_12124(&qword_26D9C8);
        a1[*(int *)(v13 + 48)] = a2[*(int *)(v13 + 48)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(v6 - 8) + 64));
        break;
    }
  }
  uint64_t v14 = a3[6];
  a1[a3[5]] = a2[a3[5]];
  a1[v14] = a2[v14];
  *(void *)&a1[a3[7]] = *(void *)&a2[a3[7]];
  return a1;
}

uint64_t sub_F0910(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_F0924);
}

uint64_t sub_F0924(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unsigned int v10 = *(unsigned __int8 *)(a1 + *(int *)(a3 + 24));
    if (v10 >= 2) {
      return ((v10 + 2147483646) & 0x7FFFFFFF) + 1;
    }
    else {
      return 0;
    }
  }
}

uint64_t sub_F09F4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_F0A08);
}

uint64_t sub_F0A08(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = type metadata accessor for CollectionRecommendation(0);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unsigned int v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(unsigned char *)(a1 + *(int *)(a4 + 24)) = a2 + 1;
  }
  return result;
}

uint64_t sub_F0AC4()
{
  uint64_t result = type metadata accessor for CollectionRecommendation(319);
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

unint64_t sub_F0B74()
{
  unint64_t result = qword_26F868;
  if (!qword_26F868)
  {
    type metadata accessor for ScoredCollectionRecommendation();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F868);
  }
  return result;
}

unint64_t sub_F0BD0()
{
  unint64_t result = qword_26F870;
  if (!qword_26F870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F870);
  }
  return result;
}

uint64_t sub_F0C2C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16) && (sub_4C328(a1, a2), (v3 & 1) != 0)) {
    return swift_bridgeObjectRetain();
  }
  else {
    return 0;
  }
}

unint64_t sub_F0C70(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = HIBYTE(a2) & 0xF;
  uint64_t v5 = a1 & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = a1 & 0xFFFFFFFFFFFFLL;
  }
  if (!v6)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  if ((a2 & 0x1000000000000000) != 0)
  {
    unint64_t v8 = sub_4DED4(a1, a2, 10);
    char v10 = v22;
    goto LABEL_39;
  }
  if ((a2 & 0x2000000000000000) == 0)
  {
    if ((a1 & 0x1000000000000000) != 0) {
      uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
    }
    else {
      uint64_t v7 = (unsigned __int8 *)sub_1FC130();
    }
    unint64_t v8 = (unint64_t)sub_4DEBC(v7, v5, 10);
    char v10 = v9 & 1;
    goto LABEL_39;
  }
  v23[0] = a1;
  v23[1] = a2 & 0xFFFFFFFFFFFFFFLL;
  if (a1 == 43)
  {
    if (!v4) {
      goto LABEL_52;
    }
    if (v4 == 1 || (BYTE1(a1) - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (BYTE1(a1) - 48);
    uint64_t v15 = v4 - 2;
    if (v15)
    {
      uint64_t v16 = (unsigned __int8 *)v23 + 2;
      while (1)
      {
        unsigned int v17 = *v16 - 48;
        if (v17 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v17);
        unint64_t v8 = 10 * v8 + v17;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v16;
        if (!--v15) {
          goto LABEL_39;
        }
      }
    }
LABEL_38:
    char v10 = 0;
    goto LABEL_39;
  }
  if (a1 != 45)
  {
    if (!v4 || (a1 - 48) > 9u) {
      goto LABEL_36;
    }
    unint64_t v8 = (a1 - 48);
    uint64_t v18 = v4 - 1;
    if (v18)
    {
      long long v20 = (unsigned __int8 *)v23 + 1;
      while (1)
      {
        unsigned int v21 = *v20 - 48;
        if (v21 > 9) {
          goto LABEL_36;
        }
        if (!is_mul_ok(v8, 0xAuLL)) {
          goto LABEL_36;
        }
        BOOL v14 = __CFADD__(10 * v8, v21);
        unint64_t v8 = 10 * v8 + v21;
        if (v14) {
          goto LABEL_36;
        }
        char v10 = 0;
        ++v20;
        if (!--v18) {
          goto LABEL_39;
        }
      }
    }
    goto LABEL_38;
  }
  if (v4)
  {
    if (v4 != 1 && (BYTE1(a1) - 48) <= 9u)
    {
      unint64_t v2 = 0;
      unint64_t v8 = -(uint64_t)(BYTE1(a1) - 48);
      if (BYTE1(a1) == 48)
      {
        uint64_t v11 = v4 - 2;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v23 + 2;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_36;
            }
            if (!is_mul_ok(v8, 0xAuLL)) {
              goto LABEL_36;
            }
            BOOL v14 = 10 * v8 >= v13;
            unint64_t v8 = 10 * v8 - v13;
            if (!v14) {
              goto LABEL_36;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_39;
            }
          }
        }
        goto LABEL_38;
      }
      goto LABEL_53;
    }
LABEL_36:
    unint64_t v8 = 0;
    char v10 = 1;
    goto LABEL_39;
  }
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  char v10 = 1;
  unint64_t v8 = v2;
LABEL_39:
  swift_bridgeObjectRelease();
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_F0ED0(void (*a1)(uint64_t *__return_ptr, char *))
{
  uint64_t v4 = sub_1FB0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26D638);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5606C(v1, (uint64_t)v10, &qword_26D638);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1) {
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
  a1(&v12, v7);
  if (v2) {
    return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v12;
}

uint64_t BookHistoryServiceType.fetchBookHistory(for:limit:configuration:)(uint64_t a1, uint64_t a2, void *__src, uint64_t a4, uint64_t a5)
{
  memcpy(v5 + 2, __src, 0x460uLL);
  v5[142] = 0;
  uint64_t v12 = (uint64_t (*)(void *, uint64_t, uint64_t, void *, uint64_t, uint64_t))(*(void *)(a5 + 8)
                                                                                       + **(int **)(a5 + 8));
  char v10 = (void *)swift_task_alloc();
  v5[143] = v10;
  *char v10 = v5;
  v10[1] = sub_F11E8;
  return v12(v5 + 142, a1, a2, v5 + 2, a4, a5);
}

uint64_t sub_F11E8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 1152) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_F1324, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_F1324()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

Swift::Int sub_F133C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1246EC(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_10350C(v5);
  *a1 = v2;
  return result;
}

Swift::Int sub_F13A8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_124700(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_103BF0(v5);
  *a1 = v2;
  return result;
}

uint64_t Dictionary<>.mostRecentBookHistories(limit:scorerConfig:)(int64_t a1, const void *a2, uint64_t a3)
{
  memcpy(__dst, a2, 0x16BuLL);
  if (*(void *)(a3 + 16) <= a1)
  {
    swift_bridgeObjectRetain();
    return a3;
  }
  sub_8CFA4((uint64_t)__dst);
  uint64_t v5 = sub_1075A0(a3, __dst);
  sub_8D5A4((uint64_t)__dst);
  unsigned int v17 = v5;
  swift_bridgeObjectRetain();
  sub_F133C((uint64_t *)&v17);
  swift_bridgeObjectRelease();
  if (a1 < 0)
  {
    __break(1u);
  }
  else
  {
    uint64_t v6 = v17;
    if (v17[2] >= (unint64_t)a1)
    {
      uint64_t v7 = _swiftEmptyArrayStorage;
      if (a1)
      {
        unsigned int v17 = _swiftEmptyArrayStorage;
        uint64_t v8 = v6 + 4;
        sub_46538(0, a1, 0);
        uint64_t v7 = v17;
        unint64_t v9 = v17[2];
        do
        {
          uint64_t v11 = *v8;
          v8 += 2;
          uint64_t v10 = v11;
          unsigned int v17 = v7;
          unint64_t v12 = v7[3];
          if (v9 >= v12 >> 1)
          {
            sub_46538(v12 > 1, v9 + 1, 1);
            uint64_t v7 = v17;
          }
          v7[2] = v9 + 1;
          v7[v9++ + 4] = v10;
          --a1;
        }
        while (a1);
      }
      uint64_t v13 = sub_50A6C((uint64_t)v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      uint64_t v14 = swift_bridgeObjectRetain();
      uint64_t v15 = sub_106160(v14, v13);
      swift_release();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v15;
    }
  }
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t BookHistory.CollectionAddition.debugDescription.getter()
{
  uint64_t v1 = *v0;
  if (v0[4])
  {
    uint64_t v2 = v0[1];
    sub_12124(&qword_26D7F0);
    uint64_t v3 = swift_allocObject();
    *(_OWORD *)(v3 + 16) = xmmword_1FD2A0;
    *(void *)(v3 + 56) = &type metadata for Double;
    *(void *)(v3 + 64) = &protocol witness table for Double;
    *(void *)(v3 + 32) = v1;
    v7._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v7);
    swift_bridgeObjectRelease();
    v8._uint64_t countAndFlagsBits = 0x20646E6120;
    v8._object = (void *)0xE500000000000000;
    sub_1FB8F0(v8);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1FD2A0;
    *(void *)(v4 + 56) = &type metadata for Double;
    *(void *)(v4 + 64) = &protocol witness table for Double;
    *(void *)(v4 + 32) = v2;
    v9._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v9);
    swift_bridgeObjectRelease();
    return 538996329;
  }
  else
  {
    sub_12124(&qword_26D7F0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1FD2A0;
    *(void *)(v6 + 56) = &type metadata for Double;
    *(void *)(v6 + 64) = &protocol witness table for Double;
    *(void *)(v6 + 32) = v1;
    return sub_1FB840();
  }
}

void BookHistory.CollectionAddition.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)v0;
  if (*(unsigned char *)(v0 + 32))
  {
    Swift::UInt v3 = *(void *)(v0 + 16);
    Swift::UInt v2 = *(void *)(v0 + 24);
    Swift::UInt64 v4 = *(void *)(v0 + 8);
    sub_1FC7F0(1uLL);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = v1;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    sub_1FC820(v5);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v4;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
    sub_1FC7F0(v3);
    sub_1FC7F0(v2);
  }
  else
  {
    sub_1FC7F0(0);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v7 = v1;
    }
    else {
      Swift::UInt64 v7 = 0;
    }
    sub_1FC820(v7);
  }
}

uint64_t sub_F17DC()
{
  return 0x5373646E6F636573;
}

uint64_t sub_F17FC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x5373646E6F636573 && a2 == 0xEC00000065636E69)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_F18AC(uint64_t a1)
{
  unint64_t v2 = sub_1078F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F18E8(uint64_t a1)
{
  unint64_t v2 = sub_1078F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F1924()
{
  if (*v0) {
    return 1868983913;
  }
  else {
    return 0x6C61767265746E69;
  }
}

uint64_t sub_F1958@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10A768(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F1980(uint64_t a1)
{
  unint64_t v2 = sub_10784C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F19BC(uint64_t a1)
{
  unint64_t v2 = sub_10784C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F19F8()
{
  if (*v0) {
    return 0x6E496465646461;
  }
  else {
    return 0x74416465646461;
  }
}

uint64_t sub_F1A2C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10A84C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F1A54(uint64_t a1)
{
  unint64_t v2 = sub_1077F8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F1A90(uint64_t a1)
{
  unint64_t v2 = sub_1077F8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BookHistory.CollectionAddition.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26F880);
  uint64_t v27 = *(void *)(v3 - 8);
  uint64_t v28 = v3;
  __chkstk_darwin(v3);
  uint64_t v26 = (char *)&v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26F888);
  uint64_t v24 = *(void *)(v5 - 8);
  uint64_t v25 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)&v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = sub_12124(&qword_26F890);
  uint64_t v8 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v10 = (char *)&v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v1;
  uint64_t v12 = v1[1];
  uint64_t v13 = v1[2];
  uint64_t v22 = v1[3];
  uint64_t v23 = v13;
  char v14 = *((unsigned char *)v1 + 32);
  sub_5D64(a1, a1[3]);
  sub_1077F8();
  sub_1FC870();
  if (v14)
  {
    LOBYTE(v32) = 1;
    sub_10784C();
    uint64_t v15 = v26;
    uint64_t v16 = v30;
    sub_1FC440();
    uint64_t v32 = v11;
    uint64_t v33 = v12;
    char v31 = 0;
    sub_12124(&qword_26F8A8);
    sub_107948(&qword_26F8B0);
    uint64_t v18 = v28;
    uint64_t v17 = v29;
    sub_1FC530();
    if (!v17)
    {
      uint64_t v32 = v23;
      uint64_t v33 = v22;
      char v31 = 1;
      sub_1078A0();
      sub_1FC530();
    }
    (*(void (**)(char *, uint64_t))(v27 + 8))(v15, v18);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v16);
  }
  else
  {
    LOBYTE(v32) = 0;
    sub_1078F4();
    uint64_t v20 = v30;
    sub_1FC440();
    uint64_t v21 = v25;
    sub_1FC500();
    (*(void (**)(char *, uint64_t))(v24 + 8))(v7, v21);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v20);
  }
}

Swift::Int BookHistory.CollectionAddition.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  Swift::UInt v4 = *(void *)(v0 + 16);
  Swift::UInt v3 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  sub_1FC7E0();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
    Swift::UInt64 v1 = 0;
  }
  if (v5)
  {
    sub_1FC7F0(1uLL);
    sub_1FC820(v1);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
    sub_1FC7F0(v4);
    sub_1FC7F0(v3);
  }
  else
  {
    sub_1FC7F0(0);
    sub_1FC820(v1);
  }
  return sub_1FC830();
}

uint64_t BookHistory.CollectionAddition.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  char v31 = a2;
  uint64_t v32 = sub_12124(&qword_26F8C8);
  uint64_t v34 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  Swift::UInt v4 = &v29[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_12124(&qword_26F8D0);
  uint64_t v33 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  char v7 = &v29[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = sub_12124(&qword_26F8D8);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = &v29[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = a1[3];
  uint64_t v35 = a1;
  sub_5D64(a1, v12);
  sub_1077F8();
  uint64_t v13 = v36;
  sub_1FC850();
  if (v13) {
    goto LABEL_6;
  }
  uint64_t v14 = v9;
  uint64_t v15 = sub_1FC430();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_1FC0F0();
    swift_allocError();
    unint64_t v19 = v18;
    sub_12124(&qword_26F030);
    void *v19 = &type metadata for BookHistory.CollectionAddition;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v11, v8);
LABEL_6:
    uint64_t v20 = (uint64_t)v35;
    return sub_1264C(v20);
  }
  int v16 = *(unsigned __int8 *)(v15 + 32);
  if (v16)
  {
    uint64_t v36 = v15;
    LOBYTE(v39) = 1;
    sub_10784C();
    sub_1FC2F0();
    int v30 = v16;
    sub_12124(&qword_26F8A8);
    LOBYTE(v38) = 0;
    sub_107948(&qword_26F8E0);
    uint64_t v22 = v32;
    uint64_t v23 = v4;
    sub_1FC3F0();
    uint64_t v25 = v39;
    uint64_t v26 = v40;
    char v37 = 1;
    sub_1079AC();
    sub_1FC3F0();
    (*(void (**)(unsigned char *, uint64_t))(v34 + 8))(v23, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v11, v8);
    long long v27 = v38;
  }
  else
  {
    int v30 = *(unsigned __int8 *)(v15 + 32);
    LOBYTE(v39) = 0;
    sub_1078F4();
    sub_1FC2F0();
    sub_1FC3C0();
    uint64_t v25 = v24;
    (*(void (**)(unsigned char *, uint64_t))(v33 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t))(v14 + 8))(v11, v8);
    uint64_t v26 = 0;
    long long v27 = 0uLL;
  }
  uint64_t v20 = (uint64_t)v35;
  uint64_t v28 = v31;
  *char v31 = v25;
  v28[1] = v26;
  *((_OWORD *)v28 + 1) = v27;
  *((unsigned char *)v28 + 32) = v30;
  return sub_1264C(v20);
}

Swift::Int sub_F24D8()
{
  double v1 = *(double *)v0;
  double v2 = *(double *)(v0 + 8);
  Swift::UInt v4 = *(void *)(v0 + 16);
  Swift::UInt v3 = *(void *)(v0 + 24);
  char v5 = *(unsigned char *)(v0 + 32);
  sub_1FC7E0();
  if (v5)
  {
    sub_1FC7F0(1uLL);
    sub_106BEC(v1, v2);
    sub_1FC7F0(v4);
    sub_1FC7F0(v3);
  }
  else
  {
    sub_1FC7F0(0);
    if ((*(void *)&v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = *(void *)&v1;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
  }
  return sub_1FC830();
}

uint64_t sub_F2588@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return BookHistory.CollectionAddition.init(from:)(a1, a2);
}

uint64_t sub_F25A0(void *a1)
{
  return BookHistory.CollectionAddition.encode(to:)(a1);
}

uint64_t sub_F25B8(void *a1, int a2)
{
  int v24 = a2;
  uint64_t v3 = sub_12124(&qword_26FE00);
  uint64_t v22 = *(void *)(v3 - 8);
  uint64_t v23 = v3;
  __chkstk_darwin(v3);
  uint64_t v21 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26FE08);
  uint64_t v19 = *(void *)(v5 - 8);
  uint64_t v20 = v5;
  __chkstk_darwin(v5);
  char v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26FE10);
  uint64_t v18 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26FE18);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v17 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_10B128();
  sub_1FC870();
  if ((_BYTE)v24)
  {
    if (v24 == 1)
    {
      char v26 = 1;
      sub_10B1D0();
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v19 + 8))(v7, v20);
    }
    else
    {
      char v27 = 2;
      sub_10B17C();
      uint64_t v15 = v21;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v22 + 8))(v15, v23);
    }
  }
  else
  {
    char v25 = 0;
    sub_10B224();
    sub_1FC440();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v10, v8);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_F2924(uint64_t a1)
{
  unint64_t v2 = sub_10B1D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F2960(uint64_t a1)
{
  unint64_t v2 = sub_10B1D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F299C()
{
  uint64_t v1 = 0x6974616D6F747561;
  if (*v0 != 1) {
    uint64_t v1 = 0x6E776F6E6B6E75;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x796C6C61756E616DLL;
  }
}

uint64_t sub_F2A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10A940(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F2A2C(uint64_t a1)
{
  unint64_t v2 = sub_10B128();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F2A68(uint64_t a1)
{
  unint64_t v2 = sub_10B128();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F2AA4(uint64_t a1)
{
  unint64_t v2 = sub_10B224();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F2AE0(uint64_t a1)
{
  unint64_t v2 = sub_10B224();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F2B1C(uint64_t a1)
{
  unint64_t v2 = sub_10B17C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F2B58(uint64_t a1)
{
  unint64_t v2 = sub_10B17C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *sub_F2B94@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_10AABC(a1);
  if (!v2) {
    *a2 = (_BYTE)result;
  }
  return result;
}

uint64_t sub_F2BC0(void *a1)
{
  return sub_F25B8(a1, *v1);
}

void BookHistory.MarkedFinishedInfo.hash(into:)()
{
  Swift::UInt64 v1 = *((void *)v0 + 1);
  Swift::UInt64 v2 = *((void *)v0 + 2);
  Swift::UInt v4 = *((void *)v0 + 3);
  Swift::UInt v3 = *((void *)v0 + 4);
  unsigned __int8 v5 = v0[40];
  sub_1FC7F0(*v0);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) == 0) {
    Swift::UInt64 v1 = 0;
  }
  if (v5)
  {
    sub_1FC7F0(1uLL);
    sub_1FC820(v1);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
    sub_1FC7F0(v4);
    sub_1FC7F0(v3);
  }
  else
  {
    sub_1FC7F0(0);
    sub_1FC820(v1);
  }
}

uint64_t sub_F2C74()
{
  if (*v0) {
    return 0xD00000000000001ALL;
  }
  else {
    return 0x73696E616863656DLL;
  }
}

uint64_t sub_F2CB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10B02C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_F2CE0(uint64_t a1)
{
  unint64_t v2 = sub_107A00();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F2D1C(uint64_t a1)
{
  unint64_t v2 = sub_107A00();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BookHistory.MarkedFinishedInfo.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26F8F0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v8 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v15 = *((void *)v1 + 2);
  uint64_t v16 = v9;
  uint64_t v10 = *((void *)v1 + 3);
  uint64_t v13 = *((void *)v1 + 4);
  uint64_t v14 = v10;
  int v22 = v1[40];
  sub_5D64(a1, a1[3]);
  sub_107A00();
  sub_1FC870();
  LOBYTE(v17) = v8;
  char v23 = 0;
  sub_107A54();
  sub_1FC530();
  if (!v2)
  {
    uint64_t v17 = v16;
    uint64_t v18 = v15;
    uint64_t v19 = v14;
    uint64_t v20 = v13;
    char v21 = v22;
    char v23 = 1;
    sub_107AA8();
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int BookHistory.MarkedFinishedInfo.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Swift::UInt64 v3 = *((void *)v0 + 1);
  Swift::UInt64 v2 = *((void *)v0 + 2);
  Swift::UInt v5 = *((void *)v0 + 3);
  Swift::UInt v4 = *((void *)v0 + 4);
  unsigned __int8 v6 = v0[40];
  sub_1FC7E0();
  sub_1FC7F0(v1);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v3;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  if (v6)
  {
    sub_1FC7F0(1uLL);
    sub_1FC820(v7);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = v2;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    sub_1FC820(v8);
    sub_1FC7F0(v5);
    sub_1FC7F0(v4);
  }
  else
  {
    sub_1FC7F0(0);
    sub_1FC820(v7);
  }
  return sub_1FC830();
}

uint64_t BookHistory.MarkedFinishedInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26F910);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt64 v8 = (char *)v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_107A00();
  sub_1FC850();
  if (!v2)
  {
    char v16 = 0;
    sub_107AFC();
    sub_1FC3F0();
    char v9 = v14[0];
    char v16 = 1;
    sub_107B50();
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v10 = v15;
    long long v11 = v14[0];
    long long v12 = v14[1];
    *(unsigned char *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v11;
    *(_OWORD *)(a2 + 24) = v12;
    *(unsigned char *)(a2 + 40) = v10;
  }
  return sub_1264C((uint64_t)a1);
}

void sub_F31D8()
{
  double v1 = *((double *)v0 + 1);
  double v2 = *((double *)v0 + 2);
  Swift::UInt v4 = *((void *)v0 + 3);
  Swift::UInt v3 = *((void *)v0 + 4);
  unsigned __int8 v5 = v0[40];
  sub_1FC7F0(*v0);
  if (v5)
  {
    sub_1FC7F0(1uLL);
    sub_106BEC(v1, v2);
    sub_1FC7F0(v4);
    sub_1FC7F0(v3);
  }
  else
  {
    sub_1FC7F0(0);
    if ((*(void *)&v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = *(void *)&v1;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
  }
}

Swift::Int sub_F3274()
{
  Swift::UInt v1 = *v0;
  double v2 = *((double *)v0 + 1);
  double v3 = *((double *)v0 + 2);
  Swift::UInt v5 = *((void *)v0 + 3);
  Swift::UInt v4 = *((void *)v0 + 4);
  unsigned __int8 v6 = v0[40];
  sub_1FC7E0();
  sub_1FC7F0(v1);
  if (v6)
  {
    sub_1FC7F0(1uLL);
    sub_106BEC(v2, v3);
    sub_1FC7F0(v5);
    sub_1FC7F0(v4);
  }
  else
  {
    sub_1FC7F0(0);
    if ((*(void *)&v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v7 = *(void *)&v2;
    }
    else {
      Swift::UInt64 v7 = 0;
    }
    sub_1FC820(v7);
  }
  return sub_1FC830();
}

uint64_t sub_F333C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BookHistory.MarkedFinishedInfo.init(from:)(a1, a2);
}

uint64_t sub_F3354(void *a1)
{
  return BookHistory.MarkedFinishedInfo.encode(to:)(a1);
}

unint64_t sub_F336C(char a1)
{
  unint64_t result = 0xD000000000000019;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0x6E49776569766572;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 7:
    case 15:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000015;
      break;
    case 9:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 10:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000021;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    case 13:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 14:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 16:
      unint64_t result = 0xD000000000000022;
      break;
    case 17:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_F3524()
{
  return sub_F336C(*v0);
}

uint64_t sub_F352C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10B278(a1, a2);
  *a3 = result;
  return result;
}

void sub_F3554(unsigned char *a1@<X8>)
{
  *a1 = 18;
}

uint64_t sub_F3560(uint64_t a1)
{
  unint64_t v2 = sub_107BA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F359C(uint64_t a1)
{
  unint64_t v2 = sub_107BA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F35D8(uint64_t a1)
{
  unint64_t v2 = sub_107C4C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3614(uint64_t a1)
{
  unint64_t v2 = sub_107C4C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3650(uint64_t a1)
{
  unint64_t v2 = sub_107BF8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F368C(uint64_t a1)
{
  unint64_t v2 = sub_107BF8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F36C8(uint64_t a1)
{
  unint64_t v2 = sub_107CA0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3704(uint64_t a1)
{
  unint64_t v2 = sub_107CA0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3740(uint64_t a1)
{
  unint64_t v2 = sub_108138();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F377C(uint64_t a1)
{
  unint64_t v2 = sub_108138();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F37B8(uint64_t a1)
{
  unint64_t v2 = sub_10818C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F37F4(uint64_t a1)
{
  unint64_t v2 = sub_10818C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3830(uint64_t a1)
{
  unint64_t v2 = sub_108090();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F386C(uint64_t a1)
{
  unint64_t v2 = sub_108090();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F38A8(uint64_t a1)
{
  unint64_t v2 = sub_1080E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F38E4(uint64_t a1)
{
  unint64_t v2 = sub_1080E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3920(uint64_t a1)
{
  unint64_t v2 = sub_107E44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F395C(uint64_t a1)
{
  unint64_t v2 = sub_107E44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3998(uint64_t a1)
{
  unint64_t v2 = sub_107F94();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F39D4(uint64_t a1)
{
  unint64_t v2 = sub_107F94();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3A10(uint64_t a1)
{
  unint64_t v2 = sub_107E98();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3A4C(uint64_t a1)
{
  unint64_t v2 = sub_107E98();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3A88(uint64_t a1)
{
  unint64_t v2 = sub_107CF4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3AC4(uint64_t a1)
{
  unint64_t v2 = sub_107CF4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3B00(uint64_t a1)
{
  unint64_t v2 = sub_107F40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3B3C(uint64_t a1)
{
  unint64_t v2 = sub_107F40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3B78(uint64_t a1)
{
  unint64_t v2 = sub_107FE8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3BB4(uint64_t a1)
{
  unint64_t v2 = sub_107FE8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3BF0(uint64_t a1)
{
  unint64_t v2 = sub_10803C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3C2C(uint64_t a1)
{
  unint64_t v2 = sub_10803C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3C68(uint64_t a1)
{
  unint64_t v2 = sub_107D48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3CA4(uint64_t a1)
{
  unint64_t v2 = sub_107D48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3CE0(uint64_t a1)
{
  unint64_t v2 = sub_107EEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3D1C(uint64_t a1)
{
  unint64_t v2 = sub_107EEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3D58(uint64_t a1)
{
  unint64_t v2 = sub_107DF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3D94(uint64_t a1)
{
  unint64_t v2 = sub_107DF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_F3DD0(uint64_t a1)
{
  unint64_t v2 = sub_107D9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F3E0C(uint64_t a1)
{
  unint64_t v2 = sub_107D9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

_UNKNOWN **static BookHistory.Feature.allCases.getter()
{
  return &off_2528E8;
}

uint64_t BookHistory.Feature.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_12124(&qword_26F928);
  uint64_t v104 = *(void *)(v4 - 8);
  uint64_t v105 = v4;
  __chkstk_darwin(v4);
  int v103 = (char *)&v55 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_12124(&qword_26F930);
  uint64_t v101 = *(void *)(v6 - 8);
  uint64_t v102 = v6;
  __chkstk_darwin(v6);
  unint64_t v100 = (char *)&v55 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26F938);
  uint64_t v98 = *(void *)(v8 - 8);
  uint64_t v99 = v8;
  __chkstk_darwin(v8);
  unint64_t v97 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_12124(&qword_26F940);
  uint64_t v95 = *(void *)(v10 - 8);
  uint64_t v96 = v10;
  __chkstk_darwin(v10);
  uint64_t v94 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_12124(&qword_26F948);
  uint64_t v92 = *(void *)(v12 - 8);
  uint64_t v93 = v12;
  __chkstk_darwin(v12);
  long long v91 = (char *)&v55 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_12124(&qword_26F950);
  uint64_t v89 = *(void *)(v14 - 8);
  uint64_t v90 = v14;
  __chkstk_darwin(v14);
  long long v88 = (char *)&v55 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_12124(&qword_26F958);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v85 = (char *)&v55 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v84 = sub_12124(&qword_26F960);
  uint64_t v83 = *(void *)(v84 - 8);
  __chkstk_darwin(v84);
  uint64_t v82 = (char *)&v55 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v81 = sub_12124(&qword_26F968);
  uint64_t v80 = *(void *)(v81 - 8);
  __chkstk_darwin(v81);
  uint64_t v79 = (char *)&v55 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_12124(&qword_26F970);
  uint64_t v77 = *(void *)(v78 - 8);
  __chkstk_darwin(v78);
  unint64_t v76 = (char *)&v55 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v75 = sub_12124(&qword_26F978);
  uint64_t v74 = *(void *)(v75 - 8);
  __chkstk_darwin(v75);
  uint64_t v73 = (char *)&v55 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_12124(&qword_26F980);
  uint64_t v71 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  unsigned __int8 v70 = (char *)&v55 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v69 = sub_12124(&qword_26F988);
  uint64_t v68 = *(void *)(v69 - 8);
  __chkstk_darwin(v69);
  char v67 = (char *)&v55 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v66 = sub_12124(&qword_26F990);
  uint64_t v65 = *(void *)(v66 - 8);
  __chkstk_darwin(v66);
  uint64_t v64 = (char *)&v55 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v63 = sub_12124(&qword_26F998);
  uint64_t v62 = *(void *)(v63 - 8);
  __chkstk_darwin(v63);
  uint64_t v61 = (char *)&v55 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v60 = sub_12124(&qword_26F9A0);
  uint64_t v59 = *(void *)(v60 - 8);
  __chkstk_darwin(v60);
  unint64_t v58 = (char *)&v55 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = sub_12124(&qword_26F9A8);
  uint64_t v57 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v28 = (char *)&v55 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = sub_12124(&qword_26F9B0);
  uint64_t v56 = *(void *)(v29 - 8);
  __chkstk_darwin(v29);
  char v31 = (char *)&v55 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_12124(&qword_26F9B8);
  uint64_t v33 = *(void *)(v32 - 8);
  uint64_t v107 = v32;
  uint64_t v108 = v33;
  __chkstk_darwin(v32);
  uint64_t v35 = (char *)&v55 - ((v34 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = *v2;
  sub_5D64(a1, a1[3]);
  sub_107BA4();
  unint64_t v106 = v35;
  sub_1FC870();
  switch(v36)
  {
    case 1:
      char v109 = 1;
      sub_108138();
      uint64_t v39 = v106;
      uint64_t v40 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v28, v26);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v39, v40);
    case 2:
      char v109 = 2;
      sub_1080E4();
      uint64_t v42 = v58;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v42, v60);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 3:
      char v109 = 3;
      sub_108090();
      uint64_t v43 = v61;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v62 + 8))(v43, v63);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 4:
      char v109 = 4;
      sub_10803C();
      uint64_t v44 = v64;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v44, v66);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 5:
      char v109 = 5;
      sub_107FE8();
      uint64_t v45 = v67;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v68 + 8))(v45, v69);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 6:
      char v109 = 6;
      sub_107F94();
      uint64_t v46 = v70;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v71 + 8))(v46, v72);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 7:
      char v109 = 7;
      sub_107F40();
      uint64_t v47 = v73;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v74 + 8))(v47, v75);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 8:
      char v109 = 8;
      sub_107EEC();
      uint64_t v48 = v76;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v77 + 8))(v48, v78);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 9:
      char v109 = 9;
      sub_107E98();
      char v49 = v79;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v49, v81);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 10:
      char v109 = 10;
      sub_107E44();
      uint64_t v50 = v82;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v84);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 11:
      char v109 = 11;
      sub_107DF0();
      BOOL v51 = v85;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v86 + 8))(v51, v87);
      return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
    case 12:
      char v109 = 12;
      sub_107D9C();
      uint64_t v52 = v88;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      uint64_t v54 = v89;
      uint64_t v53 = v90;
      goto LABEL_20;
    case 13:
      char v109 = 13;
      sub_107D48();
      uint64_t v52 = v91;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      uint64_t v54 = v92;
      uint64_t v53 = v93;
      goto LABEL_20;
    case 14:
      char v109 = 14;
      sub_107CF4();
      uint64_t v52 = v94;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      uint64_t v54 = v95;
      uint64_t v53 = v96;
      goto LABEL_20;
    case 15:
      char v109 = 15;
      sub_107CA0();
      uint64_t v52 = v97;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      uint64_t v54 = v98;
      uint64_t v53 = v99;
      goto LABEL_20;
    case 16:
      char v109 = 16;
      sub_107C4C();
      uint64_t v52 = v100;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      uint64_t v54 = v101;
      uint64_t v53 = v102;
      goto LABEL_20;
    case 17:
      char v109 = 17;
      sub_107BF8();
      uint64_t v52 = v103;
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      uint64_t v54 = v104;
      uint64_t v53 = v105;
LABEL_20:
      (*(void (**)(char *, uint64_t))(v54 + 8))(v52, v53);
      break;
    default:
      char v109 = 0;
      sub_10818C();
      long long v38 = v106;
      uint64_t v37 = v107;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v56 + 8))(v31, v29);
      break;
  }
  return (*(uint64_t (**)(char *, uint64_t))(v108 + 8))(v38, v37);
}

uint64_t BookHistory.Feature.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v132 = a2;
  uint64_t v3 = sub_12124(&qword_26FA58);
  uint64_t v114 = *(void *)(v3 - 8);
  uint64_t v115 = v3;
  __chkstk_darwin(v3);
  char v131 = (char *)&v76 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_12124(&qword_26FA60);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v127 = (char *)&v76 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v111 = sub_12124(&qword_26FA68);
  uint64_t v110 = *(void *)(v111 - 8);
  __chkstk_darwin(v111);
  BOOL v126 = (char *)&v76 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v109 = sub_12124(&qword_26FA70);
  uint64_t v108 = *(void *)(v109 - 8);
  __chkstk_darwin(v109);
  uint64_t v125 = (char *)&v76 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_12124(&qword_26FA78);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v124 = (char *)&v76 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v105 = sub_12124(&qword_26FA80);
  uint64_t v104 = *(void *)(v105 - 8);
  __chkstk_darwin(v105);
  char v123 = (char *)&v76 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_12124(&qword_26FA88);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  unint64_t v122 = (char *)&v76 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v101 = sub_12124(&qword_26FA90);
  uint64_t v100 = *(void *)(v101 - 8);
  __chkstk_darwin(v101);
  char v121 = (char *)&v76 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v99 = sub_12124(&qword_26FA98);
  uint64_t v98 = *(void *)(v99 - 8);
  __chkstk_darwin(v99);
  char v120 = (char *)&v76 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = sub_12124(&qword_26FAA0);
  uint64_t v96 = *(void *)(v97 - 8);
  __chkstk_darwin(v97);
  uint64_t v119 = (char *)&v76 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v95 = sub_12124(&qword_26FAA8);
  uint64_t v94 = *(void *)(v95 - 8);
  __chkstk_darwin(v95);
  uint64_t v130 = (char *)&v76 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_12124(&qword_26FAB0);
  uint64_t v93 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v129 = (char *)&v76 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v91 = sub_12124(&qword_26FAB8);
  uint64_t v90 = *(void *)(v91 - 8);
  __chkstk_darwin(v91);
  uint64_t v128 = (char *)&v76 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v89 = sub_12124(&qword_26FAC0);
  uint64_t v88 = *(void *)(v89 - 8);
  __chkstk_darwin(v89);
  BOOL v118 = (char *)&v76 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v87 = sub_12124(&qword_26FAC8);
  uint64_t v86 = *(void *)(v87 - 8);
  __chkstk_darwin(v87);
  uint64_t v117 = (char *)&v76 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v85 = sub_12124(&qword_26FAD0);
  uint64_t v84 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  unint64_t v116 = (char *)&v76 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v83 = sub_12124(&qword_26FAD8);
  uint64_t v82 = *(void *)(v83 - 8);
  __chkstk_darwin(v83);
  uint64_t v21 = (char *)&v76 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_12124(&qword_26FAE0);
  uint64_t v81 = *(void *)(v22 - 8);
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)&v76 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_12124(&qword_26FAE8);
  uint64_t v26 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v28 = (char *)&v76 - ((v27 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v29 = a1[3];
  uint64_t v133 = a1;
  sub_5D64(a1, v29);
  sub_107BA4();
  uint64_t v30 = v134;
  sub_1FC850();
  uint64_t v134 = v30;
  if (!v30)
  {
    uint64_t v78 = v24;
    uint64_t v77 = v22;
    uint64_t v79 = v21;
    char v31 = v128;
    uint64_t v32 = v129;
    uint64_t v34 = v130;
    uint64_t v33 = v131;
    uint64_t v80 = v26;
    uint64_t v35 = v132;
    uint64_t v36 = v28;
    uint64_t v37 = sub_1FC430();
    if (*(void *)(v37 + 16) == 1)
    {
      char v38 = *(unsigned char *)(v37 + 32);
      switch(v38)
      {
        case 1:
          char v135 = 1;
          sub_108138();
          uint64_t v46 = v79;
          uint64_t v47 = v134;
          sub_1FC2F0();
          uint64_t v134 = v47;
          if (v47) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v82 + 8))(v46, v83);
          break;
        case 2:
          char v135 = 2;
          sub_1080E4();
          uint64_t v48 = v116;
          uint64_t v49 = v134;
          sub_1FC2F0();
          uint64_t v134 = v49;
          if (v49) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v84 + 8))(v48, v85);
          break;
        case 3:
          char v135 = 3;
          sub_108090();
          uint64_t v50 = v117;
          uint64_t v51 = v134;
          sub_1FC2F0();
          uint64_t v134 = v51;
          if (v51) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v86 + 8))(v50, v87);
          break;
        case 4:
          char v135 = 4;
          sub_10803C();
          uint64_t v52 = v118;
          uint64_t v53 = v134;
          sub_1FC2F0();
          uint64_t v134 = v53;
          if (v53) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v88 + 8))(v52, v89);
          break;
        case 5:
          char v135 = 5;
          sub_107FE8();
          uint64_t v54 = v134;
          sub_1FC2F0();
          uint64_t v134 = v54;
          if (v54) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v90 + 8))(v31, v91);
          break;
        case 6:
          char v135 = 6;
          sub_107F94();
          uint64_t v55 = v134;
          sub_1FC2F0();
          uint64_t v134 = v55;
          if (v55) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v93 + 8))(v32, v92);
          break;
        case 7:
          char v135 = 7;
          sub_107F40();
          uint64_t v56 = v134;
          sub_1FC2F0();
          uint64_t v134 = v56;
          if (v56) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v94 + 8))(v34, v95);
          break;
        case 8:
          char v135 = 8;
          sub_107EEC();
          uint64_t v57 = v119;
          uint64_t v58 = v134;
          sub_1FC2F0();
          uint64_t v134 = v58;
          if (v58) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v96 + 8))(v57, v97);
          break;
        case 9:
          char v135 = 9;
          sub_107E98();
          uint64_t v59 = v120;
          uint64_t v60 = v134;
          sub_1FC2F0();
          uint64_t v134 = v60;
          if (v60) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v98 + 8))(v59, v99);
          break;
        case 10:
          char v135 = 10;
          sub_107E44();
          uint64_t v61 = v121;
          uint64_t v62 = v134;
          sub_1FC2F0();
          uint64_t v134 = v62;
          if (v62) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v100 + 8))(v61, v101);
          break;
        case 11:
          char v135 = 11;
          sub_107DF0();
          uint64_t v63 = v122;
          uint64_t v64 = v134;
          sub_1FC2F0();
          uint64_t v134 = v64;
          if (v64) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v102 + 8))(v63, v103);
          break;
        case 12:
          char v135 = 12;
          sub_107D9C();
          uint64_t v65 = v123;
          uint64_t v66 = v134;
          sub_1FC2F0();
          uint64_t v134 = v66;
          if (v66) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v104 + 8))(v65, v105);
          break;
        case 13:
          char v135 = 13;
          sub_107D48();
          char v67 = v124;
          uint64_t v68 = v134;
          sub_1FC2F0();
          uint64_t v134 = v68;
          if (v68) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v106 + 8))(v67, v107);
          break;
        case 14:
          char v135 = 14;
          sub_107CF4();
          uint64_t v69 = v125;
          uint64_t v70 = v134;
          sub_1FC2F0();
          uint64_t v134 = v70;
          if (v70) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v108 + 8))(v69, v109);
          break;
        case 15:
          char v135 = 15;
          sub_107CA0();
          uint64_t v71 = v126;
          uint64_t v72 = v134;
          sub_1FC2F0();
          uint64_t v134 = v72;
          if (v72) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v110 + 8))(v71, v111);
          break;
        case 16:
          char v135 = 16;
          sub_107C4C();
          uint64_t v73 = v127;
          uint64_t v74 = v134;
          sub_1FC2F0();
          uint64_t v134 = v74;
          if (v74) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v112 + 8))(v73, v113);
          break;
        case 17:
          char v135 = 17;
          sub_107BF8();
          uint64_t v75 = v134;
          sub_1FC2F0();
          uint64_t v134 = v75;
          if (v75) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v114 + 8))(v33, v115);
          break;
        default:
          char v135 = 0;
          sub_10818C();
          uint64_t v39 = v78;
          uint64_t v40 = v134;
          sub_1FC2F0();
          uint64_t v134 = v40;
          if (v40) {
            goto LABEL_7;
          }
          (*(void (**)(char *, uint64_t))(v81 + 8))(v39, v77);
          break;
      }
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v36, v25);
      *uint64_t v35 = v38;
    }
    else
    {
      uint64_t v41 = sub_1FC0F0();
      uint64_t v42 = swift_allocError();
      uint64_t v44 = v43;
      sub_12124(&qword_26F030);
      *uint64_t v44 = &type metadata for BookHistory.Feature;
      sub_1FC300();
      sub_1FC0C0();
      (*(void (**)(void *, void, uint64_t))(*(void *)(v41 - 8) + 104))(v44, enum case for DecodingError.typeMismatch(_:), v41);
      uint64_t v134 = v42;
      swift_willThrow();
LABEL_7:
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v80 + 8))(v36, v25);
    }
  }
  return sub_1264C((uint64_t)v133);
}

void sub_F6108(void *a1@<X8>)
{
  *a1 = &off_2528E8;
}

uint64_t sub_F6118@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return BookHistory.Feature.init(from:)(a1, a2);
}

uint64_t sub_F6130(void *a1)
{
  return BookHistory.Feature.encode(to:)(a1);
}

__n128 BookHistory.markedFinishedInfo.getter@<Q0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 72);
  char v3 = *(unsigned char *)(v1 + 80);
  __n128 result = *(__n128 *)(v1 + 40);
  long long v5 = *(_OWORD *)(v1 + 56);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v5;
  *(void *)(a1 + 32) = v2;
  *(unsigned char *)(a1 + 40) = v3;
  return result;
}

__n128 BookHistory.reviewInfo.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = *(unsigned char *)(v1 + 104);
  __n128 result = *(__n128 *)(v1 + 88);
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

uint64_t BookHistory.secondsSinceMoreLikeThis.getter()
{
  return *(void *)(v0 + 112);
}

uint64_t BookHistory.secondsSinceLessLikeThis.getter()
{
  return *(void *)(v0 + 128);
}

uint64_t BookHistory.secondsSinceExplicitDecline.getter()
{
  return *(void *)(v0 + 144);
}

uint64_t BookHistory.secondsSinceLastRead.getter()
{
  return *(void *)(v0 + 160);
}

uint64_t BookHistory.secondsSincePurchased.getter()
{
  return *(void *)(v0 + 176);
}

uint64_t BookHistory.secondsSinceFirstDownloadedViaFamilySharing.getter()
{
  return *(void *)(v0 + 192);
}

__n128 BookHistory.addedToWantToRead.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 240);
  __n128 result = *(__n128 *)(v1 + 208);
  long long v4 = *(_OWORD *)(v1 + 224);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t BookHistory.secondsSinceRemovedFromWantToRead.getter()
{
  return *(void *)(v0 + 248);
}

__n128 BookHistory.sampled.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 296);
  __n128 result = *(__n128 *)(v1 + 264);
  long long v4 = *(_OWORD *)(v1 + 280);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

uint64_t BookHistory.secondsSinceProductPageViewed.getter()
{
  return *(void *)(v0 + 304);
}

uint64_t BookHistory.secondsSinceFirstRecommended.getter()
{
  return *(void *)(v0 + 320);
}

uint64_t BookHistory.daysRecommendedCount.getter()
{
  return *(void *)(v0 + 336);
}

uint64_t BookHistory.consecutiveDaysNotRecommendedCount.getter()
{
  return *(void *)(v0 + 352);
}

uint64_t BookHistory.daysRecommendationPassedOverCount.getter()
{
  return *(void *)(v0 + 368);
}

uint64_t BookHistory.init(storeID:readFractionHighWaterMark:sampleReadFractionHighWaterMark:markedFinishedInfo:reviewInfo:secondsSinceMoreLikeThis:secondsSinceLessLikeThis:secondsSinceExplicitDecline:secondsSinceLastRead:secondsSincePurchased:secondsSinceFirstDownloadedViaFamilySharing:addedToWantToRead:secondsSinceRemovedFromWantToRead:sampled:secondsSinceProductPageViewed:secondsSinceFirstRecommended:daysRecommendedCount:consecutiveDaysNotRecommendedCount:daysRecommendationPassedOverCount:)@<X0>(uint64_t a1@<X0>, double a2@<X1>, char a3@<W2>, double a4@<X3>, char a5@<W4>, uint64_t *a6@<X5>, long long *a7@<X6>, double a8@<X7>, uint64_t a9@<X8>, char a10, double a11, char a12, double a13, char a14, double a15, char a16, double a17, char a18, double a19, char a20,long long *a21,double a22,char a23,long long *a24,double a25,char a26,double a27,char a28,double a29,char a30,double a31,char a32,double a33,char a34)
{
  double v34 = a8;
  double v36 = *(double *)a6;
  long long v37 = *(_OWORD *)(a6 + 1);
  long long v38 = *(_OWORD *)(a6 + 3);
  int v39 = *((unsigned __int8 *)a6 + 40);
  long long v40 = *a7;
  char v41 = *((unsigned char *)a7 + 16);
  long long v42 = *a21;
  long long v43 = a21[1];
  int v44 = *((unsigned __int8 *)a21 + 32);
  long long v45 = *a24;
  long long v46 = a24[1];
  int v47 = *((unsigned __int8 *)a24 + 32);
  if ((a3 & 1) == 0)
  {
    char v48 = 0;
    if (a2 < 0.0 || a2 > 1.0)
    {
      double v34 = a2;
      goto LABEL_54;
    }
  }
  if ((a5 & 1) == 0)
  {
    char v48 = 1;
    if (a4 < 0.0 || a4 > 1.0)
    {
      double v34 = a4;
      goto LABEL_54;
    }
  }
  if (v39 != 255 && *(double *)&v37 < 0.0)
  {
    double v34 = *((double *)a6 + 1);
    char v48 = 2;
LABEL_54:
    sub_1081E0();
    swift_allocError();
    *(void *)uint64_t v49 = a1;
    *(double *)(v49 + 8) = v34;
    *(unsigned char *)(v49 + 16) = v48;
    return swift_willThrow();
  }
  if ((a10 & 1) == 0 && a8 < 0.0)
  {
    char v48 = 4;
    goto LABEL_54;
  }
  if ((a12 & 1) == 0 && a11 < 0.0)
  {
    char v48 = 5;
    double v34 = a11;
    goto LABEL_54;
  }
  if ((a14 & 1) == 0 && a13 < 0.0)
  {
    char v48 = 6;
    double v34 = a13;
    goto LABEL_54;
  }
  if ((a16 & 1) == 0 && a15 < 0.0)
  {
    char v48 = 7;
    double v34 = a15;
    goto LABEL_54;
  }
  if ((a18 & 1) == 0 && a17 < 0.0)
  {
    char v48 = 8;
    double v34 = a17;
    goto LABEL_54;
  }
  if ((a20 & 1) == 0 && a19 < 0.0)
  {
    char v48 = 9;
    double v34 = a19;
    goto LABEL_54;
  }
  if (v44 != 255 && *(double *)&v42 < 0.0)
  {
    double v34 = *(double *)a21;
    char v48 = 10;
    goto LABEL_54;
  }
  if ((a23 & 1) == 0 && a22 < 0.0)
  {
    char v48 = 11;
    double v34 = a22;
    goto LABEL_54;
  }
  if (v47 != 255 && *(double *)&v45 < 0.0)
  {
    double v34 = *(double *)a24;
    char v48 = 12;
    goto LABEL_54;
  }
  if ((a26 & 1) == 0 && a25 < 0.0)
  {
    char v48 = 13;
    double v34 = a25;
    goto LABEL_54;
  }
  if ((a28 & 1) == 0 && a27 < 0.0)
  {
    char v48 = 13;
    double v34 = a27;
    goto LABEL_54;
  }
  if ((a30 & 1) == 0 && (*(void *)&a29 & 0x8000000000000000) != 0)
  {
    char v48 = 15;
    double v34 = a29;
    goto LABEL_54;
  }
  if ((a32 & 1) == 0 && (*(void *)&a31 & 0x8000000000000000) != 0)
  {
    char v48 = 16;
    double v34 = a31;
    goto LABEL_54;
  }
  if ((a34 & 1) == 0 && (*(void *)&a33 & 0x8000000000000000) != 0)
  {
    char v48 = 17;
    double v34 = a33;
    goto LABEL_54;
  }
  *(void *)a9 = a1;
  *(double *)(a9 + 8) = a2;
  *(double *)(a9 + 24) = a4;
  uint64_t result = a34 & 1;
  *(unsigned char *)(a9 + 16) = a3 & 1;
  *(unsigned char *)(a9 + 32) = a5 & 1;
  *(double *)(a9 + 40) = v36;
  *(_OWORD *)(a9 + 48) = v37;
  *(_OWORD *)(a9 + 64) = v38;
  *(unsigned char *)(a9 + 80) = v39;
  *(_OWORD *)(a9 + 88) = v40;
  *(unsigned char *)(a9 + 104) = v41;
  *(double *)(a9 + 112) = a8;
  *(unsigned char *)(a9 + 120) = a10 & 1;
  *(double *)(a9 + 128) = a11;
  *(unsigned char *)(a9 + 136) = a12 & 1;
  *(double *)(a9 + 144) = a13;
  *(unsigned char *)(a9 + 152) = a14 & 1;
  *(double *)(a9 + 160) = a15;
  *(unsigned char *)(a9 + 168) = a16 & 1;
  *(double *)(a9 + 176) = a17;
  *(unsigned char *)(a9 + 184) = a18 & 1;
  *(double *)(a9 + 192) = a19;
  *(unsigned char *)(a9 + 200) = a20 & 1;
  *(_OWORD *)(a9 + 208) = v42;
  *(_OWORD *)(a9 + 224) = v43;
  *(unsigned char *)(a9 + 240) = v44;
  *(double *)(a9 + 248) = a22;
  *(unsigned char *)(a9 + 256) = a23 & 1;
  *(_OWORD *)(a9 + 264) = v45;
  *(_OWORD *)(a9 + 280) = v46;
  *(unsigned char *)(a9 + 296) = v47;
  *(double *)(a9 + 304) = a25;
  *(unsigned char *)(a9 + 312) = a26 & 1;
  *(double *)(a9 + 320) = a27;
  *(unsigned char *)(a9 + 328) = a28 & 1;
  *(double *)(a9 + 336) = a29;
  *(unsigned char *)(a9 + 344) = a30 & 1;
  *(double *)(a9 + 352) = a31;
  *(unsigned char *)(a9 + 360) = a32 & 1;
  *(double *)(a9 + 368) = a33;
  *(unsigned char *)(a9 + 376) = a34 & 1;
  return result;
}

unint64_t BookHistory.debugDescription.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  char v2 = *(unsigned char *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  char v4 = *(unsigned char *)(v0 + 32);
  uint64_t v27 = *(void *)(v0 + 40);
  uint64_t v5 = *(void *)(v0 + 88);
  int v35 = *(unsigned __int8 *)(v0 + 80);
  char v36 = *(unsigned char *)(v0 + 104);
  uint64_t v6 = *(void *)(v0 + 112);
  uint64_t v7 = *(void *)(v0 + 128);
  char v37 = *(unsigned char *)(v0 + 120);
  char v38 = *(unsigned char *)(v0 + 136);
  uint64_t v8 = *(void *)(v0 + 144);
  uint64_t v9 = *(void *)(v0 + 176);
  char v39 = *(unsigned char *)(v0 + 152);
  char v40 = *(unsigned char *)(v0 + 184);
  uint64_t v28 = *(void *)(v0 + 192);
  char v41 = *(unsigned char *)(v0 + 200);
  int v42 = *(unsigned __int8 *)(v0 + 240);
  uint64_t v29 = *(void *)(v0 + 248);
  int v10 = *(unsigned __int8 *)(v0 + 296);
  char v43 = *(unsigned char *)(v0 + 256);
  char v44 = *(unsigned char *)(v0 + 312);
  uint64_t v30 = *(void *)(v0 + 304);
  uint64_t v31 = *(void *)(v0 + 320);
  uint64_t v32 = *(void *)(v0 + 336);
  uint64_t v33 = *(void *)(v0 + 352);
  uint64_t v34 = *(void *)(v0 + 368);
  char v45 = *(unsigned char *)(v0 + 328);
  char v46 = *(unsigned char *)(v0 + 344);
  char v47 = *(unsigned char *)(v0 + 360);
  char v48 = *(unsigned char *)(v0 + 376);
  sub_1FC050(22);
  swift_bridgeObjectRelease();
  v49._uint64_t countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v49);
  swift_bridgeObjectRelease();
  if ((v2 & 1) == 0)
  {
    sub_1FC050(29);
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D7F0);
    uint64_t v11 = swift_allocObject();
    *(_OWORD *)(v11 + 16) = xmmword_1FD2A0;
    *(void *)(v11 + 56) = &type metadata for Double;
    *(void *)(v11 + 64) = &protocol witness table for Double;
    *(void *)(v11 + 32) = v1;
    v50._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v50);
    swift_bridgeObjectRelease();
    v51._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    v51._object = (void *)0x8000000000218CB0;
    sub_1FB8F0(v51);
    swift_bridgeObjectRelease();
  }
  if ((v4 & 1) == 0)
  {
    sub_1FC050(35);
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D7F0);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_1FD2A0;
    *(void *)(v12 + 56) = &type metadata for Double;
    *(void *)(v12 + 64) = &protocol witness table for Double;
    *(void *)(v12 + 32) = v3;
    v52._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v52);
    swift_bridgeObjectRelease();
    v53._uint64_t countAndFlagsBits = 0xD000000000000021;
    v53._object = (void *)0x8000000000218C80;
    sub_1FB8F0(v53);
    swift_bridgeObjectRelease();
  }
  if (v35 == 255)
  {
    if (v36) {
      goto LABEL_7;
    }
  }
  else
  {
    v58._uint64_t countAndFlagsBits = 0xD000000000000010;
    v58._object = (void *)0x8000000000218C40;
    sub_1FB8F0(v58);
    if ((_BYTE)v27)
    {
      if (v27 == 1)
      {
        v16._uint64_t countAndFlagsBits = 0x6974616D6F747561;
        v16._object = (void *)0xED0000796C6C6163;
      }
      else
      {
        v16._uint64_t countAndFlagsBits = 0x6E776F6E6B6E75;
        v16._object = (void *)0xE700000000000000;
      }
    }
    else
    {
      v16._uint64_t countAndFlagsBits = 0x796C6C61756E616DLL;
      v16._object = (void *)0xE800000000000000;
    }
    sub_1FB8F0(v16);
    sub_1FC050(31);
    swift_bridgeObjectRelease();
    v63._uint64_t countAndFlagsBits = BookHistory.CollectionAddition.debugDescription.getter();
    sub_1FB8F0(v63);
    swift_bridgeObjectRelease();
    v64._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
    v64._object = (void *)0x8000000000218C60;
    sub_1FB8F0(v64);
    swift_bridgeObjectRelease();
    if (v36)
    {
LABEL_7:
      if (v37) {
        goto LABEL_8;
      }
      goto LABEL_33;
    }
  }
  sub_1FC050(17);
  v65._uint64_t countAndFlagsBits = 0x4977656976657220;
  v65._object = (void *)0xEC0000003D6F666ELL;
  sub_1FB8F0(v65);
  sub_12124(&qword_26D7F0);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_1FD2A0;
  *(void *)(v19 + 56) = &type metadata for Double;
  *(void *)(v19 + 64) = &protocol witness table for Double;
  *(void *)(v19 + 32) = v5;
  v66._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v66);
  swift_bridgeObjectRelease();
  v67._uint64_t countAndFlagsBits = 44;
  v67._object = (void *)0xE100000000000000;
  sub_1FB8F0(v67);
  sub_1FBCA0();
  v68._uint64_t countAndFlagsBits = 0;
  v68._object = (void *)0xE000000000000000;
  sub_1FB8F0(v68);
  swift_bridgeObjectRelease();
  if (v37)
  {
LABEL_8:
    if (v38) {
      goto LABEL_9;
    }
    goto LABEL_34;
  }
LABEL_33:
  sub_1FC050(28);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v20 = swift_allocObject();
  *(_OWORD *)(v20 + 16) = xmmword_1FD2A0;
  *(void *)(v20 + 56) = &type metadata for Double;
  *(void *)(v20 + 64) = &protocol witness table for Double;
  *(void *)(v20 + 32) = v6;
  v69._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v69);
  swift_bridgeObjectRelease();
  v70._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v70._object = (void *)0x8000000000218C20;
  sub_1FB8F0(v70);
  swift_bridgeObjectRelease();
  if (v38)
  {
LABEL_9:
    if (v39) {
      goto LABEL_10;
    }
    goto LABEL_35;
  }
LABEL_34:
  sub_1FC050(28);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v21 = swift_allocObject();
  *(_OWORD *)(v21 + 16) = xmmword_1FD2A0;
  *(void *)(v21 + 56) = &type metadata for Double;
  *(void *)(v21 + 64) = &protocol witness table for Double;
  *(void *)(v21 + 32) = v7;
  v71._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v71);
  swift_bridgeObjectRelease();
  v72._uint64_t countAndFlagsBits = 0xD00000000000001ALL;
  v72._object = (void *)0x8000000000218C00;
  sub_1FB8F0(v72);
  swift_bridgeObjectRelease();
  if (v39)
  {
LABEL_10:
    if (v40) {
      goto LABEL_11;
    }
    goto LABEL_36;
  }
LABEL_35:
  sub_1FC050(31);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v22 = swift_allocObject();
  *(_OWORD *)(v22 + 16) = xmmword_1FD2A0;
  *(void *)(v22 + 56) = &type metadata for Double;
  *(void *)(v22 + 64) = &protocol witness table for Double;
  *(void *)(v22 + 32) = v8;
  v73._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v73);
  swift_bridgeObjectRelease();
  v74._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
  v74._object = (void *)0x8000000000218BE0;
  sub_1FB8F0(v74);
  swift_bridgeObjectRelease();
  if (v40)
  {
LABEL_11:
    if (v41) {
      goto LABEL_12;
    }
    goto LABEL_37;
  }
LABEL_36:
  sub_1FC050(25);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_1FD2A0;
  *(void *)(v23 + 56) = &type metadata for Double;
  *(void *)(v23 + 64) = &protocol witness table for Double;
  *(void *)(v23 + 32) = v9;
  v75._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v75);
  swift_bridgeObjectRelease();
  v76._uint64_t countAndFlagsBits = 0xD000000000000017;
  v76._object = (void *)0x8000000000218BC0;
  sub_1FB8F0(v76);
  swift_bridgeObjectRelease();
  if (v41)
  {
LABEL_12:
    if (v42 == 255) {
      goto LABEL_13;
    }
    goto LABEL_38;
  }
LABEL_37:
  sub_1FC050(47);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v24 = swift_allocObject();
  *(_OWORD *)(v24 + 16) = xmmword_1FD2A0;
  *(void *)(v24 + 56) = &type metadata for Double;
  *(void *)(v24 + 64) = &protocol witness table for Double;
  *(void *)(v24 + 32) = v28;
  v77._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v77);
  swift_bridgeObjectRelease();
  v78._uint64_t countAndFlagsBits = 0xD00000000000002DLL;
  v78._object = (void *)0x8000000000218B90;
  sub_1FB8F0(v78);
  swift_bridgeObjectRelease();
  if (v42 == 255)
  {
LABEL_13:
    if (v43) {
      goto LABEL_14;
    }
    goto LABEL_39;
  }
LABEL_38:
  sub_1FC050(33);
  swift_bridgeObjectRelease();
  v79._uint64_t countAndFlagsBits = BookHistory.CollectionAddition.debugDescription.getter();
  sub_1FB8F0(v79);
  swift_bridgeObjectRelease();
  v80._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v80._object = (void *)0x8000000000218A60;
  sub_1FB8F0(v80);
  swift_bridgeObjectRelease();
  if (v43)
  {
LABEL_14:
    if (v10 == 255) {
      goto LABEL_15;
    }
    goto LABEL_40;
  }
LABEL_39:
  sub_1FC050(37);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v25 = swift_allocObject();
  *(_OWORD *)(v25 + 16) = xmmword_1FD2A0;
  *(void *)(v25 + 56) = &type metadata for Double;
  *(void *)(v25 + 64) = &protocol witness table for Double;
  *(void *)(v25 + 32) = v29;
  v81._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v81);
  swift_bridgeObjectRelease();
  v82._uint64_t countAndFlagsBits = 0xD000000000000023;
  v82._object = (void *)0x8000000000218B60;
  sub_1FB8F0(v82);
  swift_bridgeObjectRelease();
  if (v10 == 255)
  {
LABEL_15:
    if (v44) {
      goto LABEL_16;
    }
    goto LABEL_41;
  }
LABEL_40:
  sub_1FC050(23);
  swift_bridgeObjectRelease();
  v83._uint64_t countAndFlagsBits = BookHistory.CollectionAddition.debugDescription.getter();
  sub_1FB8F0(v83);
  swift_bridgeObjectRelease();
  v84._uint64_t countAndFlagsBits = 0xD000000000000015;
  v84._object = (void *)0x8000000000218A80;
  sub_1FB8F0(v84);
  swift_bridgeObjectRelease();
  if (v44)
  {
LABEL_16:
    if (v45) {
      goto LABEL_18;
    }
    goto LABEL_17;
  }
LABEL_41:
  sub_1FC050(33);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v26 = swift_allocObject();
  *(_OWORD *)(v26 + 16) = xmmword_1FD2A0;
  *(void *)(v26 + 56) = &type metadata for Double;
  *(void *)(v26 + 64) = &protocol witness table for Double;
  *(void *)(v26 + 32) = v30;
  v85._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v85);
  swift_bridgeObjectRelease();
  v86._uint64_t countAndFlagsBits = 0xD00000000000001FLL;
  v86._object = (void *)0x8000000000218B40;
  sub_1FB8F0(v86);
  swift_bridgeObjectRelease();
  if ((v45 & 1) == 0)
  {
LABEL_17:
    sub_1FC050(32);
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D7F0);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_1FD2A0;
    *(void *)(v13 + 56) = &type metadata for Double;
    *(void *)(v13 + 64) = &protocol witness table for Double;
    *(void *)(v13 + 32) = v31;
    v54._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v54);
    swift_bridgeObjectRelease();
    v55._uint64_t countAndFlagsBits = 0xD00000000000001ELL;
    v55._object = (void *)0x8000000000218B20;
    sub_1FB8F0(v55);
    swift_bridgeObjectRelease();
  }
LABEL_18:
  if (v46)
  {
    if (v47) {
      goto LABEL_20;
    }
LABEL_27:
    sub_1FC050(38);
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D7F0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1FD2A0;
    *(void *)(v18 + 56) = &type metadata for Int;
    *(void *)(v18 + 64) = &protocol witness table for Int;
    *(void *)(v18 + 32) = v33;
    v61._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v61);
    swift_bridgeObjectRelease();
    v62._uint64_t countAndFlagsBits = 0xD000000000000024;
    v62._object = (void *)0x8000000000218AD0;
    sub_1FB8F0(v62);
    swift_bridgeObjectRelease();
    if (v48) {
      return 0xD000000000000014;
    }
    goto LABEL_21;
  }
  sub_1FC050(24);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D7F0);
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1FD2A0;
  *(void *)(v17 + 56) = &type metadata for Int;
  *(void *)(v17 + 64) = &protocol witness table for Int;
  *(void *)(v17 + 32) = v32;
  v59._uint64_t countAndFlagsBits = sub_1FB840();
  sub_1FB8F0(v59);
  swift_bridgeObjectRelease();
  v60._uint64_t countAndFlagsBits = 0xD000000000000016;
  v60._object = (void *)0x8000000000218B00;
  sub_1FB8F0(v60);
  swift_bridgeObjectRelease();
  if ((v47 & 1) == 0) {
    goto LABEL_27;
  }
LABEL_20:
  if ((v48 & 1) == 0)
  {
LABEL_21:
    sub_1FC050(37);
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D7F0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1FD2A0;
    *(void *)(v14 + 56) = &type metadata for Int;
    *(void *)(v14 + 64) = &protocol witness table for Int;
    *(void *)(v14 + 32) = v34;
    v56._uint64_t countAndFlagsBits = sub_1FB840();
    sub_1FB8F0(v56);
    swift_bridgeObjectRelease();
    v57._uint64_t countAndFlagsBits = 0xD000000000000023;
    v57._object = (void *)0x8000000000218AA0;
    sub_1FB8F0(v57);
    swift_bridgeObjectRelease();
  }
  return 0xD000000000000014;
}

void BookHistory.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 16);
  Swift::UInt64 v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 32);
  Swift::UInt v5 = *(unsigned __int8 *)(v0 + 40);
  Swift::UInt64 v6 = *(void *)(v0 + 48);
  Swift::UInt64 v29 = *(void *)(v0 + 56);
  Swift::UInt v30 = *(void *)(v0 + 64);
  Swift::UInt v31 = *(void *)(v0 + 72);
  int v7 = *(unsigned __int8 *)(v0 + 80);
  Swift::UInt64 v38 = *(void *)(v0 + 88);
  Swift::UInt64 v39 = *(void *)(v0 + 96);
  int v54 = *(unsigned __int8 *)(v0 + 104);
  Swift::UInt64 v40 = *(void *)(v0 + 112);
  int v55 = *(unsigned __int8 *)(v0 + 120);
  Swift::UInt64 v41 = *(void *)(v0 + 128);
  int v56 = *(unsigned __int8 *)(v0 + 136);
  Swift::UInt64 v42 = *(void *)(v0 + 144);
  int v57 = *(unsigned __int8 *)(v0 + 152);
  Swift::UInt64 v43 = *(void *)(v0 + 160);
  int v58 = *(unsigned __int8 *)(v0 + 168);
  Swift::UInt64 v44 = *(void *)(v0 + 176);
  int v59 = *(unsigned __int8 *)(v0 + 184);
  Swift::UInt64 v45 = *(void *)(v0 + 192);
  int v60 = *(unsigned __int8 *)(v0 + 200);
  Swift::UInt64 v32 = *(void *)(v0 + 216);
  Swift::UInt v33 = *(void *)(v0 + 224);
  Swift::UInt v34 = *(void *)(v0 + 232);
  int v8 = *(unsigned __int8 *)(v0 + 240);
  Swift::UInt64 v46 = *(void *)(v0 + 208);
  Swift::UInt64 v47 = *(void *)(v0 + 248);
  int v61 = *(unsigned __int8 *)(v0 + 256);
  Swift::UInt64 v35 = *(void *)(v0 + 272);
  Swift::UInt v36 = *(void *)(v0 + 280);
  Swift::UInt v37 = *(void *)(v0 + 288);
  int v9 = *(unsigned __int8 *)(v0 + 296);
  Swift::UInt64 v48 = *(void *)(v0 + 264);
  Swift::UInt64 v49 = *(void *)(v0 + 304);
  Swift::UInt64 v50 = *(void *)(v0 + 320);
  Swift::UInt v51 = *(void *)(v0 + 336);
  Swift::UInt v52 = *(void *)(v0 + 352);
  Swift::UInt v53 = *(void *)(v0 + 368);
  int v62 = *(unsigned __int8 *)(v0 + 312);
  int v63 = *(unsigned __int8 *)(v0 + 328);
  int v64 = *(unsigned __int8 *)(v0 + 344);
  int v65 = *(unsigned __int8 *)(v0 + 360);
  int v66 = *(unsigned __int8 *)(v0 + 376);
  sub_1FC820(*(void *)v0);
  if (v2 == 1)
  {
    sub_1FC800(0);
    if (!v4) {
      goto LABEL_3;
    }
LABEL_17:
    sub_1FC800(0);
    if (v7 != 255) {
      goto LABEL_7;
    }
LABEL_18:
    sub_1FC800(0);
    if (!v54) {
      goto LABEL_54;
    }
    goto LABEL_19;
  }
  sub_1FC800(1u);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v12 = v1;
  }
  else {
    Swift::UInt64 v12 = 0;
  }
  sub_1FC820(v12);
  if (v4) {
    goto LABEL_17;
  }
LABEL_3:
  sub_1FC800(1u);
  if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v10 = v3;
  }
  else {
    Swift::UInt64 v10 = 0;
  }
  sub_1FC820(v10);
  if (v7 == 255) {
    goto LABEL_18;
  }
LABEL_7:
  sub_1FC800(1u);
  sub_1FC7F0(v5);
  if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v11 = v6;
  }
  else {
    Swift::UInt64 v11 = 0;
  }
  if ((v7 & 1) == 0)
  {
    sub_1FC7F0(0);
    sub_1FC820(v11);
    if (!v54) {
      goto LABEL_54;
    }
LABEL_19:
    sub_1FC800(0);
    if (v55) {
      goto LABEL_61;
    }
    goto LABEL_20;
  }
  sub_1FC7F0(1uLL);
  sub_1FC820(v11);
  if ((v29 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v20 = v29;
  }
  else {
    Swift::UInt64 v20 = 0;
  }
  sub_1FC820(v20);
  sub_1FC7F0(v30);
  sub_1FC7F0(v31);
  if (v54) {
    goto LABEL_19;
  }
LABEL_54:
  sub_1FC800(1u);
  if ((v38 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v21 = v38;
  }
  else {
    Swift::UInt64 v21 = 0;
  }
  sub_1FC820(v21);
  if ((v39 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v22 = v39;
  }
  else {
    Swift::UInt64 v22 = 0;
  }
  sub_1FC820(v22);
  if (v55)
  {
LABEL_61:
    sub_1FC800(0);
    if (v56) {
      goto LABEL_62;
    }
    goto LABEL_24;
  }
LABEL_20:
  sub_1FC800(1u);
  if ((v40 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v13 = v40;
  }
  else {
    Swift::UInt64 v13 = 0;
  }
  sub_1FC820(v13);
  if (v56)
  {
LABEL_62:
    sub_1FC800(0);
    if (v57) {
      goto LABEL_63;
    }
    goto LABEL_28;
  }
LABEL_24:
  sub_1FC800(1u);
  if ((v41 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v14 = v41;
  }
  else {
    Swift::UInt64 v14 = 0;
  }
  sub_1FC820(v14);
  if (v57)
  {
LABEL_63:
    sub_1FC800(0);
    if (v58) {
      goto LABEL_64;
    }
    goto LABEL_32;
  }
LABEL_28:
  sub_1FC800(1u);
  if ((v42 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v15 = v42;
  }
  else {
    Swift::UInt64 v15 = 0;
  }
  sub_1FC820(v15);
  if (v58)
  {
LABEL_64:
    sub_1FC800(0);
    if (v59) {
      goto LABEL_65;
    }
    goto LABEL_36;
  }
LABEL_32:
  sub_1FC800(1u);
  if ((v43 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v16 = v43;
  }
  else {
    Swift::UInt64 v16 = 0;
  }
  sub_1FC820(v16);
  if (v59)
  {
LABEL_65:
    sub_1FC800(0);
    if (v60) {
      goto LABEL_66;
    }
    goto LABEL_40;
  }
LABEL_36:
  sub_1FC800(1u);
  if ((v44 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v17 = v44;
  }
  else {
    Swift::UInt64 v17 = 0;
  }
  sub_1FC820(v17);
  if (v60)
  {
LABEL_66:
    sub_1FC800(0);
    if (v8 == 255) {
      goto LABEL_67;
    }
    goto LABEL_44;
  }
LABEL_40:
  sub_1FC800(1u);
  if ((v45 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v18 = v45;
  }
  else {
    Swift::UInt64 v18 = 0;
  }
  sub_1FC820(v18);
  if (v8 == 255)
  {
LABEL_67:
    sub_1FC800(0);
    if (v61) {
      goto LABEL_68;
    }
    goto LABEL_79;
  }
LABEL_44:
  sub_1FC800(1u);
  if ((v46 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v19 = v46;
  }
  else {
    Swift::UInt64 v19 = 0;
  }
  if (v8)
  {
    sub_1FC7F0(1uLL);
    sub_1FC820(v19);
    if ((v32 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v24 = v32;
    }
    else {
      Swift::UInt64 v24 = 0;
    }
    sub_1FC820(v24);
    sub_1FC7F0(v33);
    sub_1FC7F0(v34);
    if (v61)
    {
LABEL_68:
      sub_1FC800(0);
      if (v9 != 255) {
        goto LABEL_69;
      }
LABEL_83:
      sub_1FC800(0);
      if (!v62) {
        goto LABEL_96;
      }
      goto LABEL_84;
    }
  }
  else
  {
    sub_1FC7F0(0);
    sub_1FC820(v19);
    if (v61) {
      goto LABEL_68;
    }
  }
LABEL_79:
  sub_1FC800(1u);
  if ((v47 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v25 = v47;
  }
  else {
    Swift::UInt64 v25 = 0;
  }
  sub_1FC820(v25);
  if (v9 == 255) {
    goto LABEL_83;
  }
LABEL_69:
  sub_1FC800(1u);
  if ((v48 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v23 = v48;
  }
  else {
    Swift::UInt64 v23 = 0;
  }
  if ((v9 & 1) == 0)
  {
    sub_1FC7F0(0);
    sub_1FC820(v23);
    if (!v62) {
      goto LABEL_96;
    }
LABEL_84:
    sub_1FC800(0);
    if (v63) {
      goto LABEL_100;
    }
    goto LABEL_85;
  }
  sub_1FC7F0(1uLL);
  sub_1FC820(v23);
  if ((v35 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v27 = v35;
  }
  else {
    Swift::UInt64 v27 = 0;
  }
  sub_1FC820(v27);
  sub_1FC7F0(v36);
  sub_1FC7F0(v37);
  if (v62) {
    goto LABEL_84;
  }
LABEL_96:
  sub_1FC800(1u);
  if ((v49 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v28 = v49;
  }
  else {
    Swift::UInt64 v28 = 0;
  }
  sub_1FC820(v28);
  if (v63)
  {
LABEL_100:
    sub_1FC800(0);
    if (v64) {
      goto LABEL_101;
    }
LABEL_89:
    sub_1FC800(1u);
    sub_1FC7F0(v51);
    if (v65) {
      goto LABEL_102;
    }
    goto LABEL_90;
  }
LABEL_85:
  sub_1FC800(1u);
  if ((v50 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v26 = v50;
  }
  else {
    Swift::UInt64 v26 = 0;
  }
  sub_1FC820(v26);
  if (!v64) {
    goto LABEL_89;
  }
LABEL_101:
  sub_1FC800(0);
  if (v65)
  {
LABEL_102:
    sub_1FC800(0);
    if (v66) {
      goto LABEL_103;
    }
LABEL_91:
    sub_1FC800(1u);
    sub_1FC7F0(v53);
    return;
  }
LABEL_90:
  sub_1FC800(1u);
  sub_1FC7F0(v52);
  if (!v66) {
    goto LABEL_91;
  }
LABEL_103:
  sub_1FC800(0);
}

unint64_t sub_F7A58(char a1)
{
  unint64_t result = 0x444965726F7473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0x6E49776569766572;
      break;
    case 5:
      unint64_t result = 0xD000000000000018;
      break;
    case 6:
      unint64_t result = 0xD000000000000018;
      break;
    case 7:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 8:
    case 16:
      unint64_t result = 0xD000000000000014;
      break;
    case 9:
      unint64_t result = 0xD000000000000015;
      break;
    case 10:
      unint64_t result = 0xD00000000000002BLL;
      break;
    case 11:
      unint64_t result = 0xD000000000000011;
      break;
    case 12:
      unint64_t result = 0xD000000000000021;
      break;
    case 13:
      unint64_t result = 0x64656C706D6173;
      break;
    case 14:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 15:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 17:
      unint64_t result = 0xD000000000000022;
      break;
    case 18:
      unint64_t result = 0xD000000000000021;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_F7C98()
{
  return sub_F7A58(*v0);
}

uint64_t sub_F7CA0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_10B8E8(a1, a2);
  *a3 = result;
  return result;
}

void sub_F7CC8(unsigned char *a1@<X8>)
{
  *a1 = 19;
}

uint64_t sub_F7CD4(uint64_t a1)
{
  unint64_t v2 = sub_108234();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_F7D10(uint64_t a1)
{
  unint64_t v2 = sub_108234();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BookHistory.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26FAF8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::UInt64 v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v58 = v1[1];
  uint64_t v59 = v7;
  int v67 = *((unsigned __int8 *)v1 + 16);
  uint64_t v57 = v1[3];
  int v56 = *((unsigned __int8 *)v1 + 32);
  uint64_t v55 = v1[5];
  uint64_t v8 = v1[7];
  uint64_t v49 = v1[6];
  uint64_t v50 = v8;
  uint64_t v9 = v1[8];
  uint64_t v52 = v1[9];
  uint64_t v53 = v9;
  int v51 = *((unsigned __int8 *)v1 + 80);
  uint64_t v10 = v1[12];
  uint64_t v46 = v1[11];
  uint64_t v47 = v10;
  int v48 = *((unsigned __int8 *)v1 + 104);
  uint64_t v45 = v1[14];
  int v44 = *((unsigned __int8 *)v1 + 120);
  uint64_t v43 = v1[16];
  int v42 = *((unsigned __int8 *)v1 + 136);
  uint64_t v41 = v1[18];
  int v40 = *((unsigned __int8 *)v1 + 152);
  uint64_t v39 = v1[20];
  int v38 = *((unsigned __int8 *)v1 + 168);
  uint64_t v36 = v1[22];
  int v37 = *((unsigned __int8 *)v1 + 184);
  uint64_t v34 = v1[24];
  int v35 = *((unsigned __int8 *)v1 + 200);
  uint64_t v29 = v1[26];
  uint64_t v33 = v1[27];
  uint64_t v32 = v1[28];
  uint64_t v31 = v1[29];
  int v30 = *((unsigned __int8 *)v1 + 240);
  uint64_t v27 = v1[31];
  int v28 = *((unsigned __int8 *)v1 + 256);
  uint64_t v22 = v1[33];
  uint64_t v26 = v1[34];
  uint64_t v25 = v1[35];
  uint64_t v24 = v1[36];
  int v23 = *((unsigned __int8 *)v1 + 296);
  uint64_t v20 = v1[38];
  uint64_t v18 = v1[40];
  v16[1] = v1[42];
  uint64_t v54 = v1[44];
  v16[0] = v1[46];
  int v21 = *((unsigned __int8 *)v1 + 312);
  int v19 = *((unsigned __int8 *)v1 + 328);
  int v17 = *((unsigned __int8 *)v1 + 344);
  int v11 = *((unsigned __int8 *)v1 + 360);
  int v12 = *((unsigned __int8 *)v1 + 376);
  sub_5D64(a1, a1[3]);
  sub_108234();
  sub_1FC870();
  LOBYTE(v61) = 0;
  uint64_t v13 = v60;
  sub_1FC560();
  if (!v13)
  {
    LODWORD(v60) = v11;
    uint64_t v15 = v55;
    LODWORD(v59) = v12;
    LOBYTE(v61) = 1;
    sub_1FC470();
    LOBYTE(v61) = 2;
    sub_1FC470();
    uint64_t v61 = v15;
    uint64_t v62 = v49;
    uint64_t v63 = v50;
    uint64_t v64 = v53;
    uint64_t v65 = v52;
    char v66 = v51;
    char v68 = 3;
    sub_108288();
    sub_1FC4A0();
    uint64_t v61 = v46;
    uint64_t v62 = v47;
    LOBYTE(v63) = v48;
    char v68 = 4;
    sub_1082DC();
    sub_1FC4A0();
    LOBYTE(v61) = 5;
    sub_1FC470();
    LOBYTE(v61) = 6;
    sub_1FC470();
    LOBYTE(v61) = 7;
    sub_1FC470();
    LOBYTE(v61) = 8;
    sub_1FC470();
    LOBYTE(v61) = 9;
    sub_1FC470();
    LOBYTE(v61) = 10;
    sub_1FC470();
    uint64_t v61 = v29;
    uint64_t v62 = v33;
    uint64_t v63 = v32;
    uint64_t v64 = v31;
    LOBYTE(v65) = v30;
    char v68 = 11;
    sub_107AA8();
    sub_1FC4A0();
    LOBYTE(v61) = 12;
    sub_1FC470();
    uint64_t v61 = v22;
    uint64_t v62 = v26;
    uint64_t v63 = v25;
    uint64_t v64 = v24;
    LOBYTE(v65) = v23;
    char v68 = 13;
    sub_1FC4A0();
    LOBYTE(v61) = 14;
    sub_1FC470();
    LOBYTE(v61) = 15;
    sub_1FC470();
    LOBYTE(v61) = 16;
    sub_1FC490();
    LOBYTE(v61) = 17;
    sub_1FC490();
    LOBYTE(v61) = 18;
    sub_1FC490();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int BookHistory.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t BookHistory.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26FB18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_108234();
  sub_1FC850();
  if (!v2)
  {
    LOBYTE(v93) = 0;
    uint64_t v9 = sub_1FC420();
    LOBYTE(v93) = 1;
    uint64_t v10 = sub_1FC330();
    int v100 = v11;
    LOBYTE(v93) = 2;
    uint64_t v77 = sub_1FC330();
    int v78 = v12;
    char v99 = 3;
    sub_108330();
    sub_1FC360();
    unint64_t v76 = v93;
    uint64_t v75 = v94;
    uint64_t v74 = v95;
    uint64_t v73 = v96;
    uint64_t v72 = v97;
    int v71 = v98;
    char v99 = 4;
    sub_108384();
    sub_1FC360();
    unint64_t v70 = v93;
    uint64_t v69 = v94;
    int v68 = v95;
    LOBYTE(v93) = 5;
    uint64_t v66 = sub_1FC330();
    int v67 = v13;
    LOBYTE(v93) = 6;
    uint64_t v64 = sub_1FC330();
    int v65 = v14;
    LOBYTE(v93) = 7;
    uint64_t v62 = sub_1FC330();
    int v63 = v15;
    LOBYTE(v93) = 8;
    uint64_t v60 = sub_1FC330();
    int v61 = v16;
    LOBYTE(v93) = 9;
    uint64_t v58 = sub_1FC330();
    int v59 = v17;
    LOBYTE(v93) = 10;
    uint64_t v56 = sub_1FC330();
    int v57 = v18;
    char v99 = 11;
    unint64_t v55 = sub_107B50();
    sub_1FC360();
    unint64_t v54 = v93;
    uint64_t v53 = v94;
    uint64_t v52 = v95;
    uint64_t v51 = v96;
    int v50 = v97;
    LOBYTE(v93) = 12;
    uint64_t v49 = sub_1FC330();
    int v48 = v19;
    char v99 = 13;
    sub_1FC360();
    unint64_t v55 = v93;
    uint64_t v47 = v94;
    uint64_t v46 = v95;
    uint64_t v45 = v96;
    int v44 = v97;
    LOBYTE(v93) = 14;
    uint64_t v43 = sub_1FC330();
    int v42 = v20;
    LOBYTE(v93) = 15;
    uint64_t v41 = sub_1FC330();
    int v40 = v21;
    LOBYTE(v93) = 16;
    uint64_t v39 = sub_1FC350();
    int v38 = v22;
    LOBYTE(v93) = 17;
    uint64_t v37 = sub_1FC350();
    int v36 = v23;
    LOBYTE(v93) = 18;
    uint64_t v35 = sub_1FC350();
    char v26 = v25;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    char v91 = v68;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v10;
    *(void *)(a2 + 24) = v77;
    uint64_t v27 = v75;
    *(void *)(a2 + 40) = v76;
    *(void *)(a2 + 48) = v27;
    uint64_t v28 = v73;
    *(void *)(a2 + 56) = v74;
    *(void *)(a2 + 64) = v28;
    *(void *)(a2 + 72) = v72;
    *(unsigned char *)(a2 + 80) = v71;
    uint64_t v29 = v69;
    *(void *)(a2 + 88) = v70;
    *(void *)(a2 + 96) = v29;
    *(void *)(a2 + 112) = v66;
    *(void *)(a2 + 128) = v64;
    *(void *)(a2 + 144) = v62;
    *(void *)(a2 + 160) = v60;
    *(void *)(a2 + 176) = v58;
    *(void *)(a2 + 192) = v56;
    char v99 = v100 & 1;
    char v30 = v78 & 1;
    char v92 = v78 & 1;
    char v90 = v67 & 1;
    char v89 = v65 & 1;
    char v88 = v63 & 1;
    char v87 = v61 & 1;
    char v86 = v59 & 1;
    char v85 = v57 & 1;
    char v84 = v48 & 1;
    char v83 = v42 & 1;
    char v82 = v40 & 1;
    char v81 = v38 & 1;
    char v80 = v36 & 1;
    char v79 = v26 & 1;
    *(unsigned char *)(a2 + 16) = v100 & 1;
    *(unsigned char *)(a2 + 32) = v30;
    *(unsigned char *)(a2 + 104) = v91;
    *(unsigned char *)(a2 + 120) = v90;
    *(unsigned char *)(a2 + 136) = v89;
    *(unsigned char *)(a2 + 152) = v88;
    *(unsigned char *)(a2 + 168) = v87;
    *(unsigned char *)(a2 + 184) = v86;
    *(unsigned char *)(a2 + 200) = v85;
    uint64_t v31 = v53;
    *(void *)(a2 + 208) = v54;
    *(void *)(a2 + 216) = v31;
    uint64_t v32 = v51;
    *(void *)(a2 + 224) = v52;
    *(void *)(a2 + 232) = v32;
    *(unsigned char *)(a2 + 240) = v50;
    *(void *)(a2 + 248) = v49;
    *(unsigned char *)(a2 + 256) = v84;
    uint64_t v33 = v47;
    *(void *)(a2 + 264) = v55;
    *(void *)(a2 + 272) = v33;
    uint64_t v34 = v45;
    *(void *)(a2 + 280) = v46;
    *(void *)(a2 + 288) = v34;
    *(unsigned char *)(a2 + 296) = v44;
    *(void *)(a2 + 304) = v43;
    *(unsigned char *)(a2 + 312) = v83;
    *(void *)(a2 + 320) = v41;
    *(unsigned char *)(a2 + 328) = v82;
    *(void *)(a2 + 336) = v39;
    *(unsigned char *)(a2 + 344) = v81;
    *(void *)(a2 + 352) = v37;
    *(unsigned char *)(a2 + 360) = v80;
    *(void *)(a2 + 368) = v35;
    *(unsigned char *)(a2 + 376) = v79;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_F8DCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return BookHistory.init(from:)(a1, a2);
}

uint64_t sub_F8DE4(void *a1)
{
  return BookHistory.encode(to:)(a1);
}

Swift::Int sub_F8E00()
{
  return sub_1FC830();
}

void sub_F8E3C(void *a1@<X8>)
{
  *a1 = *v1;
}

_UNKNOWN **sub_F8E48()
{
  return off_25ED10[*v0];
}

uint64_t sub_F8E5C@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, char *a3@<X8>)
{
  uint64_t v6 = sub_1FB430();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = 0xD000000000000019;
  if (a1 == 0xD000000000000019 && a2 == 0x8000000000216B00)
  {
    char v11 = 0;
  }
  else
  {
    uint64_t result = sub_1FC5F0();
    char v11 = 0;
    if ((result & 1) == 0)
    {
      uint64_t result = 0xD000000000000012;
      if (a1 == 0xD000000000000012 && a2 == 0x8000000000218D80 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
      {
        char v11 = 1;
      }
      else
      {
        uint64_t result = 0xD00000000000001FLL;
        if (a1 == 0xD00000000000001FLL && a2 == 0x8000000000216B20 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
        {
          char v11 = 2;
        }
        else if (a1 == 0x6E49776569766572 && a2 == 0xEA00000000006F66 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
        {
          char v11 = 3;
        }
        else if (a1 == 0xD000000000000018 && a2 == 0x8000000000218DA0 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
        {
          char v11 = 4;
        }
        else if (a1 == 0xD000000000000018 && a2 == 0x8000000000218DC0 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
        {
          char v11 = 5;
        }
        else
        {
          uint64_t result = 0xD00000000000001BLL;
          if (a1 == 0xD00000000000001BLL && a2 == 0x8000000000218DE0 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
          {
            char v11 = 6;
          }
          else if (a1 == 0xD000000000000014 && a2 == 0x8000000000218E00 {
                 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
          }
          {
            char v11 = 7;
          }
          else
          {
            uint64_t result = 0xD000000000000015;
            if (a1 == 0xD000000000000015 && a2 == 0x8000000000218E20 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
            {
              char v11 = 8;
            }
            else
            {
              uint64_t result = 0xD00000000000002BLL;
              if (a1 == 0xD00000000000002BLL && a2 == 0x8000000000218E40
                || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
              {
                char v11 = 9;
              }
              else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000000218E70 {
                     || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
              }
              {
                char v11 = 10;
              }
              else if (a1 == 0xD000000000000021 && a2 == 0x8000000000218E90 {
                     || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
              }
              {
                char v11 = 11;
              }
              else
              {
                uint64_t result = 0xD000000000000013;
                if (a1 == 0xD000000000000013 && a2 == 0x8000000000218EC0
                  || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
                {
                  char v11 = 12;
                }
                else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000000218EE0 {
                       || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
                }
                {
                  char v11 = 13;
                }
                else
                {
                  uint64_t result = 0xD00000000000001CLL;
                  if (a1 == 0xD00000000000001CLL && a2 == 0x8000000000218F00
                    || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
                  {
                    char v11 = 14;
                  }
                  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000218F20 {
                         || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
                  }
                  {
                    char v11 = 15;
                  }
                  else
                  {
                    uint64_t result = 0xD000000000000022;
                    if (a1 == 0xD000000000000022 && a2 == 0x8000000000218F40
                      || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
                    {
                      char v11 = 16;
                    }
                    else if (a1 == 0xD000000000000021 && a2 == 0x8000000000218F70 {
                           || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
                    }
                    {
                      char v11 = 17;
                    }
                    else
                    {
                      sub_948FC();
                      sub_1FBEA0();
                      sub_1FB440();
                      swift_bridgeObjectRetain_n();
                      int v12 = sub_1FB410();
                      os_log_type_t v13 = sub_1FBDA0();
                      if (os_log_type_enabled(v12, v13))
                      {
                        int v14 = (uint8_t *)swift_slowAlloc();
                        uint64_t v16 = swift_slowAlloc();
                        uint64_t v18 = v16;
                        *(_DWORD *)int v14 = 136315138;
                        int v15 = v14 + 4;
                        swift_bridgeObjectRetain();
                        uint64_t v17 = sub_D5890(a1, a2, &v18);
                        sub_1FBED0();
                        swift_bridgeObjectRelease_n();
                        _os_log_impl(&dword_0, v12, v13, "Unknown BookHistory.Feature: %s", v14, 0xCu);
                        swift_arrayDestroy();
                        swift_slowDealloc();
                        swift_slowDealloc();
                      }
                      else
                      {

                        swift_bridgeObjectRelease_n();
                      }
                      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v9, v6);
                      char v11 = 18;
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
  *a3 = v11;
  return result;
}

uint64_t sub_F95F4()
{
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  qword_2A5BE8 = result;
  return result;
}

uint64_t sub_F9660()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5BF0);
  sub_6DBC8(v0, (uint64_t)qword_2A5BF0);
  if (qword_26C330 != -1) {
    swift_once();
  }
  id v1 = (id)qword_2A5BE8;
  return sub_1FB440();
}

uint64_t sub_F96EC(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[163] = v4;
  v5[162] = a3;
  v5[161] = a2;
  uint64_t v8 = type metadata accessor for StoreBookRating();
  v5[164] = v8;
  v5[165] = *(void *)(v8 - 8);
  v5[166] = swift_task_alloc();
  v5[167] = swift_task_alloc();
  sub_12124(&qword_26FE68);
  v5[168] = swift_task_alloc();
  uint64_t v9 = type metadata accessor for StoreBook.Origin(0);
  v5[169] = v9;
  v5[170] = *(void *)(v9 - 8);
  v5[171] = swift_task_alloc();
  v5[172] = swift_task_alloc();
  sub_12124(&qword_26FE70);
  v5[173] = swift_task_alloc();
  v5[174] = swift_task_alloc();
  v5[175] = swift_task_alloc();
  v5[176] = swift_task_alloc();
  v5[177] = swift_task_alloc();
  v5[178] = swift_task_alloc();
  v5[179] = swift_task_alloc();
  v5[180] = swift_task_alloc();
  uint64_t v10 = sub_1FB0E0();
  v5[181] = v10;
  v5[182] = *(void *)(v10 - 8);
  v5[183] = swift_task_alloc();
  v5[184] = swift_task_alloc();
  v5[185] = swift_task_alloc();
  v5[186] = swift_task_alloc();
  v5[187] = swift_task_alloc();
  sub_12124(&qword_26D638);
  v5[188] = swift_task_alloc();
  v5[189] = swift_task_alloc();
  v5[190] = swift_task_alloc();
  v5[191] = swift_task_alloc();
  v5[192] = swift_task_alloc();
  v5[193] = swift_task_alloc();
  v5[194] = swift_task_alloc();
  v5[195] = swift_task_alloc();
  v5[196] = swift_task_alloc();
  v5[197] = swift_task_alloc();
  v5[198] = swift_task_alloc();
  v5[199] = swift_task_alloc();
  v5[200] = swift_task_alloc();
  v5[201] = swift_task_alloc();
  v5[202] = swift_task_alloc();
  v5[203] = swift_task_alloc();
  v5[204] = swift_task_alloc();
  uint64_t v11 = type metadata accessor for StoreBook(0);
  v5[205] = v11;
  v5[206] = *(void *)(v11 - 8);
  v5[207] = swift_task_alloc();
  v5[208] = swift_task_alloc();
  v5[209] = swift_task_alloc();
  uint64_t v12 = sub_1FB430();
  v5[210] = v12;
  v5[211] = *(void *)(v12 - 8);
  v5[212] = swift_task_alloc();
  v5[213] = *a1;
  memcpy(v5 + 98, (const void *)(a4 + 88), 0x16BuLL);
  return _swift_task_switch(sub_F9B74, 0, 0);
}

uint64_t sub_F9B74()
{
  id v1 = (void *)v0[163];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  sub_5D64(v1 + 7, v2);
  sub_12124(&qword_26FE78);
  uint64_t v4 = swift_allocObject();
  *(_OWORD *)(v4 + 32) = xmmword_1FD2A0;
  if (qword_26C360 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_2721A8;
  *(void *)(v4 + 48) = qword_2721A8;
  *(void *)(v4 + 56) = 16;
  uint64_t v6 = v5 | 0x13;
  swift_setDeallocating();
  swift_deallocClassInstance();
  v0[158] = v6;
  uint64_t v9 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[214] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_F9D1C;
  return v9(v0 + 158, v2, v3);
}

uint64_t sub_F9D1C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1720) = a1;
  *(void *)(v3 + 1728) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_FE2C4;
  }
  else {
    uint64_t v4 = sub_F9E34;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_F9E34()
{
  uint64_t v1 = *(void **)(v0 + 1304);
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  sub_5D64(v1 + 7, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 1736) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_F9F38;
  return v6(v2, v3);
}

uint64_t sub_F9F38(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1744) = a1;
  *(void *)(v3 + 1752) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_FE554;
  }
  else {
    uint64_t v4 = sub_FA050;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_FA050()
{
  uint64_t v79 = isUniquelyReferenced_nonNull_native;
  uint64_t v1 = *(void *)(isUniquelyReferenced_nonNull_native + 1744);
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v69 = (void *)(isUniquelyReferenced_nonNull_native + 1248);
    int v78 = _swiftEmptyArrayStorage;
    sub_46588(0, v2, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = sub_14D538(v1);
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    uint64_t v71 = v1;
    uint64_t v73 = v1 + 56;
    do
    {
      if (v4 < 0 || v4 >= 1 << *(unsigned char *)(v1 + 32))
      {
        __break(1u);
LABEL_44:
        __break(1u);
LABEL_45:
        __break(1u);
        goto LABEL_46;
      }
      if (((*(void *)(v73 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
        goto LABEL_44;
      }
      if (*(_DWORD *)(v1 + 36) != v6) {
        goto LABEL_45;
      }
      *uint64_t v69 = *(void *)(*(void *)(v1 + 48) + 8 * v4);
      uint64_t v9 = sub_1FC580();
      uint64_t v11 = v10;
      int v78 = v3;
      unint64_t v13 = v3[2];
      unint64_t v12 = v3[3];
      uint64_t isUniquelyReferenced_nonNull_native = v13 + 1;
      if (v13 >= v12 >> 1)
      {
        sub_46588(v12 > 1, v13 + 1, 1);
        uint64_t v3 = v78;
      }
      uint64_t v14 = v76[218];
      v3[2] = isUniquelyReferenced_nonNull_native;
      int v15 = &v3[2 * v13];
      v15[4] = v9;
      v15[5] = v11;
      uint64_t v16 = sub_14D5DC(v4, v6, v8 & 1, v14);
      uint64_t v4 = v16;
      uint64_t v6 = v17;
      char v8 = v18 & 1;
      --v2;
      uint64_t v1 = v71;
    }
    while (v2);
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v76;
    sub_55F94(v16, v17, v18 & 1);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v19 = sub_507F8((uint64_t)v3);
  *(void *)(isUniquelyReferenced_nonNull_native + 1760) = v19;
  swift_bridgeObjectRelease();
  if (!*(void *)(v19 + 16)) {
    goto LABEL_22;
  }
  if (qword_26C338 != -1) {
    goto LABEL_48;
  }
  while (1)
  {
    uint64_t v20 = *(void *)(isUniquelyReferenced_nonNull_native + 1696);
    uint64_t v21 = *(void *)(isUniquelyReferenced_nonNull_native + 1688);
    uint64_t v22 = *(void *)(isUniquelyReferenced_nonNull_native + 1680);
    uint64_t v23 = sub_6DBC8(v22, (uint64_t)qword_2A5BF0);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v21 + 16))(v20, v23, v22);
    swift_bridgeObjectRetain_n();
    uint64_t v24 = sub_1FB410();
    char v25 = (void *)isUniquelyReferenced_nonNull_native;
    os_log_type_t v26 = sub_1FBDC0();
    if (os_log_type_enabled(v24, v26))
    {
      uint64_t v27 = *(void *)(isUniquelyReferenced_nonNull_native + 1752);
      uint64_t v28 = (uint8_t *)swift_slowAlloc();
      uint64_t v77 = swift_slowAlloc();
      *(_DWORD *)uint64_t v28 = 136315138;
      uint64_t v29 = swift_bridgeObjectRetain();
      char v30 = sub_4A93C(v29);
      swift_bridgeObjectRelease();
      int v78 = v30;
      swift_retain();
      sub_F13A8((uint64_t *)&v78);
      if (v27)
      {
        swift_bridgeObjectRelease();
        return swift_release();
      }
      uint64_t v70 = v25[211];
      uint64_t v72 = v25[210];
      uint64_t v74 = v25[212];
      swift_release();
      uint64_t v35 = sub_1FBAD0();
      unint64_t v37 = v36;
      swift_release();
      v25[157] = sub_D5890(v35, v37, &v77);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      _os_log_impl(&dword_0, v24, v26, "Excluding hidden purchases from book history %s", v28, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      (*(void (**)(uint64_t, uint64_t))(v70 + 8))(v74, v72);
    }
    else
    {
      uint64_t v32 = *(void *)(isUniquelyReferenced_nonNull_native + 1696);
      uint64_t v33 = v25[211];
      uint64_t v34 = v25[210];
      swift_bridgeObjectRelease_n();

      (*(void (**)(uint64_t, uint64_t))(v33 + 8))(v32, v34);
    }
    uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v25;
LABEL_22:
    uint64_t v38 = *(void *)(isUniquelyReferenced_nonNull_native + 1720);
    uint64_t v39 = *(void *)(v38 + 16);
    if (!v39) {
      break;
    }
    uint64_t v40 = *(void *)(isUniquelyReferenced_nonNull_native + 1648);
    uint64_t v41 = *(void *)(isUniquelyReferenced_nonNull_native + 1640);
    uint64_t v42 = v38 + ((*(unsigned __int8 *)(v40 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v40 + 80));
    uint64_t v43 = *(void *)(v40 + 72);
    swift_bridgeObjectRetain();
    int v44 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v46 = *(void *)(isUniquelyReferenced_nonNull_native + 1672);
      uint64_t v47 = *(void *)(isUniquelyReferenced_nonNull_native + 1664);
      sub_10C188(v42, v46, type metadata accessor for StoreBook);
      uint64_t v48 = *(void *)(v46 + *(int *)(v41 + 20));
      sub_10C188(v46, v47, type metadata accessor for StoreBook);
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      int v78 = v44;
      unint64_t v50 = sub_56168(v48);
      uint64_t v51 = v44[2];
      BOOL v52 = (v49 & 1) == 0;
      uint64_t v53 = v51 + v52;
      if (__OFADD__(v51, v52)) {
        break;
      }
      char v54 = v49;
      if (v44[3] >= v53)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_120320();
          int v44 = v78;
        }
      }
      else
      {
        sub_116770(v53, isUniquelyReferenced_nonNull_native);
        int v44 = v78;
        uint64_t v55 = sub_56168(v48);
        if ((v54 & 1) != (v56 & 1))
        {
          return sub_1FC770();
        }
        unint64_t v50 = v55;
      }
      uint64_t v57 = v76[208];
      if (v54)
      {
        sub_10C0E4(v57, v44[7] + v50 * v43);
      }
      else
      {
        v44[(v50 >> 6) + 8] |= 1 << v50;
        *(void *)(v44[6] + 8 * v50) = v48;
        sub_10C014(v57, v44[7] + v50 * v43, type metadata accessor for StoreBook);
        uint64_t v58 = v44[2];
        BOOL v59 = __OFADD__(v58, 1);
        uint64_t v60 = v58 + 1;
        if (v59) {
          goto LABEL_47;
        }
        v44[2] = v60;
      }
      uint64_t isUniquelyReferenced_nonNull_native = (uint64_t)v76;
      uint64_t v45 = v76[209];
      swift_bridgeObjectRelease();
      sub_10C1F0(v45, type metadata accessor for StoreBook);
      v42 += v43;
      if (!--v39)
      {
        swift_bridgeObjectRelease();
        goto LABEL_37;
      }
    }
LABEL_46:
    __break(1u);
LABEL_47:
    __break(1u);
LABEL_48:
    swift_once();
  }
  int v44 = _swiftEmptyDictionarySingleton;
LABEL_37:
  *(void *)(isUniquelyReferenced_nonNull_native + 1768) = v44;
  int v61 = *(void **)(isUniquelyReferenced_nonNull_native + 1304);
  uint64_t v62 = *(void *)(isUniquelyReferenced_nonNull_native + 1288);
  *(_OWORD *)(isUniquelyReferenced_nonNull_native + 1776) = *(_OWORD *)(isUniquelyReferenced_nonNull_native + 976);
  *(void *)(isUniquelyReferenced_nonNull_native + 1792) = sub_106C38(v62);
  uint64_t v63 = v61[5];
  uint64_t v64 = v61[6];
  sub_5D64(v61 + 2, v63);
  uint64_t v65 = sub_50890((uint64_t)&off_252B90);
  *(void *)(isUniquelyReferenced_nonNull_native + 1800) = v65;
  uint64_t v66 = OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone;
  *(void *)(isUniquelyReferenced_nonNull_native + 1808) = OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone;
  uint64_t v75 = (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t))(*(void *)(v64 + 40) + **(int **)(v64 + 40));
  int v67 = (char *)v61 + v66;
  int v68 = (void *)swift_task_alloc();
  *(void *)(isUniquelyReferenced_nonNull_native + 1816) = v68;
  void *v68 = isUniquelyReferenced_nonNull_native;
  v68[1] = sub_FA7B0;
  return v75(v65, v67, v63, v64);
}

uint64_t sub_FA7B0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1824) = a1;
  *(void *)(v3 + 1832) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_FE7EC;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_FA8D0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_FA8D0()
{
  uint64_t v1 = v0[226];
  int64_t v2 = (char *)v0[163];
  uint64_t v3 = *((void *)v2 + 5);
  uint64_t v4 = *((void *)v2 + 6);
  sub_5D64((void *)v2 + 2, v3);
  uint64_t v5 = sub_50890((uint64_t)&off_252BB8);
  v0[230] = v5;
  char v8 = (uint64_t (*)(uint64_t, char *, uint64_t, uint64_t))(*(void *)(v4 + 40) + **(int **)(v4 + 40));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[231] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_FAA04;
  return v8(v5, &v2[v1], v3, v4);
}

uint64_t sub_FAA04(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1856) = a1;
  *(void *)(v3 + 1864) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_FEAB4;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_FAB24;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_FAB24()
{
  uint64_t v28 = v0;
  uint64_t v1 = v0[213];
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void *)(v1 + 16);
    if (v2)
    {
      os_log_type_t v26 = v0;
      uint64_t v3 = v0 + 159;
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
      uint64_t v5 = _swiftEmptyArrayStorage;
      do
      {
        *uint64_t v3 = *(void *)(v1 + 8 * v4 + 32);
        uint64_t v6 = sub_1FC580();
        uint64_t v8 = v7;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_41864(0, v5[2] + 1, 1, v5);
        }
        unint64_t v10 = v5[2];
        unint64_t v9 = v5[3];
        if (v10 >= v9 >> 1) {
          uint64_t v5 = sub_41864((void *)(v9 > 1), v10 + 1, 1, v5);
        }
        ++v4;
        uint64_t v5[2] = v10 + 1;
        uint64_t v11 = &v5[2 * v10];
        _DWORD v11[4] = v6;
        v11[5] = v8;
      }
      while (v2 != v4);
      swift_bridgeObjectRelease();
      uint64_t v0 = v26;
    }
    else
    {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v0[233];
    uint64_t v27 = v5;
    swift_bridgeObjectRetain();
    sub_F13A8((uint64_t *)&v27);
    if (v18)
    {
      return swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      v0[237] = v27;
      uint64_t v19 = (void *)v0[163];
      uint64_t v20 = v19[5];
      uint64_t v21 = v19[6];
      sub_5D64(v19 + 2, v20);
      char v25 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 + 48) + **(int **)(v21 + 48));
      uint64_t v22 = (void *)swift_task_alloc();
      v0[238] = v22;
      *uint64_t v22 = v0;
      v22[1] = sub_FB59C;
      uint64_t v23 = v0[204];
      return v25(v23, v20, v21);
    }
  }
  else
  {
    unint64_t v12 = (void *)v0[163];
    uint64_t v13 = v12[5];
    uint64_t v14 = v12[6];
    sub_5D64(v12 + 2, v13);
    uint64_t v24 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + **(int **)(v14 + 8));
    int v15 = (void *)swift_task_alloc();
    v0[234] = v15;
    *int v15 = v0;
    v15[1] = sub_FAE90;
    uint64_t v16 = v0[224];
    return v24(v16, v13, v14);
  }
}

uint64_t sub_FAE90(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[235] = a1;
  v3[236] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v3[1];
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_FB250, 0, 0);
  }
}

uint64_t sub_FB250()
{
  uint64_t v31 = v0;
  uint64_t v1 = v0[215];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v0[206];
    uint64_t v4 = v0[205];
    char v30 = _swiftEmptyArrayStorage;
    sub_46588(0, v2, 0);
    uint64_t v5 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v6 = *(void *)(v3 + 72);
    do
    {
      uint64_t v7 = v0[207];
      sub_10C188(v5, v7, type metadata accessor for StoreBook);
      v0[160] = *(void *)(v7 + *(int *)(v4 + 20));
      uint64_t v8 = sub_1FC580();
      uint64_t v10 = v9;
      sub_10C1F0(v7, type metadata accessor for StoreBook);
      uint64_t v11 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46588(0, v30[2] + 1, 1);
        uint64_t v11 = v30;
      }
      unint64_t v13 = v11[2];
      unint64_t v12 = v11[3];
      if (v13 >= v12 >> 1)
      {
        sub_46588(v12 > 1, v13 + 1, 1);
        uint64_t v11 = v30;
      }
      void v11[2] = v13 + 1;
      uint64_t v14 = &v11[2 * v13];
      v14[4] = v8;
      v14[5] = v10;
      v5 += v6;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v15 = v0[235];
  uint64_t v16 = v0[220];
  uint64_t v17 = sub_507F8((uint64_t)v11);
  swift_bridgeObjectRelease();
  uint64_t v18 = sub_1EF26C(v17, v15);
  uint64_t v19 = v0[220];
  if (*(void *)(v16 + 16) <= *(void *)(v18 + 16) >> 3)
  {
    char v30 = (void *)v18;
    sub_1062E4(v19);
  }
  else
  {
    sub_104568(v0[220], v18);
  }
  swift_bridgeObjectRelease();
  uint64_t v20 = v0[236];
  uint64_t v21 = swift_bridgeObjectRetain();
  uint64_t v22 = sub_4A93C(v21);
  swift_bridgeObjectRelease();
  char v30 = v22;
  sub_F13A8((uint64_t *)&v30);
  if (v20)
  {
    return swift_release();
  }
  else
  {
    swift_bridgeObjectRelease();
    v0[237] = v30;
    uint64_t v24 = (void *)v0[163];
    uint64_t v25 = v24[5];
    uint64_t v26 = v24[6];
    sub_5D64(v24 + 2, v25);
    uint64_t v29 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v26 + 48) + **(int **)(v26 + 48));
    uint64_t v27 = (void *)swift_task_alloc();
    v0[238] = v27;
    *uint64_t v27 = v0;
    v27[1] = sub_FB59C;
    uint64_t v28 = v0[204];
    return v29(v28, v25, v26);
  }
}

uint64_t sub_FB59C()
{
  *(void *)(*(void *)v1 + 1912) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    int64_t v2 = sub_FED88;
  }
  else
  {
    int64_t v2 = sub_FB6F0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_FB6F0()
{
  uint64_t v1 = (void *)v0[163];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  sub_5D64(v1 + 7, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[240] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_FB7FC;
  uint64_t v5 = v0[203];
  return v7(v5, v2, v3);
}

uint64_t sub_FB7FC()
{
  *(void *)(*(void *)v1 + 1928) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_FF018;
  }
  else
  {
    uint64_t v2 = sub_FB950;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_FB950()
{
  uint64_t v71 = v0;
  uint64_t v1 = v0[204];
  uint64_t v2 = v0[202];
  uint64_t v3 = v0[201];
  uint64_t v4 = v0[200];
  uint64_t v5 = v0[182];
  uint64_t v6 = v0[181];
  sub_5606C(v0[203], v2, &qword_26D638);
  sub_5606C(v2, v3, &qword_26D638);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  v0[242] = v7;
  v0[243] = (v5 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  LODWORD(v2) = v7(v3, 1, v6);
  sub_55F38(v3, &qword_26D638);
  sub_5606C(v1, v4, &qword_26D638);
  if (v2 == 1)
  {
    sub_55F38(v0[200], &qword_26D638);
LABEL_3:
    sub_10C07C(v0[204], v0[202]);
    goto LABEL_10;
  }
  uint64_t v8 = v0[202];
  uint64_t v9 = v0[181];
  int v10 = v7(v8, 1, v9);
  uint64_t v11 = v0[200];
  if (v10)
  {
    sub_55F38(v0[200], &qword_26D638);
  }
  else
  {
    uint64_t v12 = v0[199];
    (*(void (**)(void, uint64_t, uint64_t))(v0[182] + 16))(v0[187], v8, v9);
    sub_5606C(v11, v12, &qword_26D638);
    int v13 = v7(v12, 1, v9);
    uint64_t v14 = v0[199];
    if (v13 == 1)
    {
      sub_1FB030();
      sub_55F38(v14, &qword_26D638);
    }
    else
    {
      (*(void (**)(void, void, void))(v0[182] + 32))(v0[186], v0[199], v0[181]);
    }
    uint64_t v15 = v0[200];
    uint64_t v16 = v0[187];
    uint64_t v17 = v0[186];
    uint64_t v18 = v0[182];
    uint64_t v19 = v0[181];
    uint64_t v20 = sub_1FB0C0();
    uint64_t v21 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
    v21(v17, v19);
    v21(v16, v19);
    sub_55F38(v15, &qword_26D638);
    if (v20 == 1) {
      goto LABEL_3;
    }
  }
LABEL_10:
  uint64_t v22 = v0[198];
  uint64_t v23 = v0[181];
  sub_5606C(v0[202], v22, &qword_26D638);
  int v24 = v7(v22, 1, v23);
  uint64_t v25 = v0[198];
  if (v24 == 1)
  {
    sub_1FB0D0();
    sub_55F38(v25, &qword_26D638);
  }
  else
  {
    (*(void (**)(void, void, void))(v0[182] + 32))(v0[185], v0[198], v0[181]);
  }
  uint64_t v26 = *(void *)(v0[237] + 16);
  v0[244] = v26;
  uint64_t v27 = lround(ceil((double)v26 / 1000.0));
  v0[245] = v27;
  swift_bridgeObjectRetain();
  uint64_t result = sub_1FB0D0();
  if (v27 < 0)
  {
LABEL_57:
    __break(1u);
LABEL_58:
    __break(1u);
LABEL_59:
    __break(1u);
    goto LABEL_60;
  }
  if (!v27)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v66 = v0[203];
    uint64_t v67 = v0[204];
    uint64_t v68 = v0[202];
    uint64_t v58 = v0[185];
    uint64_t v59 = v0[184];
    uint64_t v60 = v0[182];
    uint64_t v61 = v0[181];
    int64_t v62 = v0[162];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(__dst, v0 + 98, 0x16BuLL);
    sub_8CFA4((uint64_t)(v0 + 98));
    uint64_t v63 = Dictionary<>.mostRecentBookHistories(limit:scorerConfig:)(v62, __dst, (uint64_t)_swiftEmptyDictionarySingleton);
    swift_bridgeObjectRelease();
    sub_8D5A4((uint64_t)(v0 + 98));
    uint64_t v64 = *(void (**)(uint64_t, uint64_t))(v60 + 8);
    v64(v59, v61);
    v64(v58, v61);
    sub_55F38(v66, &qword_26D638);
    sub_55F38(v67, &qword_26D638);
    sub_55F38(v68, &qword_26D638);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v65 = (uint64_t (*)(uint64_t))v0[1];
    return v65(v63);
  }
  uint64_t v29 = v0[237];
  v0[247] = 0;
  v0[246] = _swiftEmptyDictionarySingleton;
  if (!v0[245]) {
    goto LABEL_58;
  }
  uint64_t v30 = v0[244];
  if (v30 >= 1000) {
    uint64_t v30 = 1000;
  }
  if (v30 < 1) {
    goto LABEL_59;
  }
  if (*(void *)(v29 + 16) < (unint64_t)v30)
  {
LABEL_60:
    __break(1u);
    goto LABEL_61;
  }
  uint64_t v31 = sub_509B8(v29 + 32, 0, (2 * v30) | 1);
  uint64_t v32 = v31;
  v0[248] = v31;
  uint64_t v33 = v31 + 56;
  uint64_t v34 = -1;
  uint64_t v35 = -1 << *(unsigned char *)(v31 + 32);
  if (-v35 < 64) {
    uint64_t v34 = ~(-1 << -(char)v35);
  }
  unint64_t v36 = v34 & *(void *)(v31 + 56);
  int64_t v37 = (unint64_t)(63 - v35) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v38 = 0;
  uint64_t v39 = _swiftEmptyArrayStorage;
  if (!v36) {
    goto LABEL_26;
  }
LABEL_23:
  unint64_t v40 = __clz(__rbit64(v36));
  v36 &= v36 - 1;
  for (unint64_t i = v40 | (v38 << 6); ; unint64_t i = __clz(__rbit64(v47)) + (v38 << 6))
  {
    uint64_t v42 = (uint64_t *)(*(void *)(v32 + 48) + 16 * i);
    uint64_t v43 = *v42;
    unint64_t v44 = v42[1];
    swift_bridgeObjectRetain();
    uint64_t result = sub_F0C70(v43, v44);
    if (v45)
    {
      if (v36) {
        goto LABEL_23;
      }
    }
    else
    {
      uint64_t v49 = result;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_41858(0, v39[2] + 1, 1, v39);
        uint64_t v39 = (void *)result;
      }
      unint64_t v51 = v39[2];
      unint64_t v50 = v39[3];
      if (v51 >= v50 >> 1)
      {
        uint64_t result = (uint64_t)sub_41858((void *)(v50 > 1), v51 + 1, 1, v39);
        uint64_t v39 = (void *)result;
      }
      v39[2] = v51 + 1;
      v39[v51 + 4] = v49;
      if (v36) {
        goto LABEL_23;
      }
    }
LABEL_26:
    int64_t v46 = v38 + 1;
    if (__OFADD__(v38, 1))
    {
      __break(1u);
      goto LABEL_57;
    }
    if (v46 >= v37)
    {
LABEL_50:
      BOOL v52 = (void *)v0[163];
      swift_release();
      uint64_t v53 = v52 + 12;
      uint64_t v54 = sub_50A6C((uint64_t)v39);
      v0[249] = v54;
      swift_bridgeObjectRelease();
      uint64_t v55 = v52[15];
      uint64_t v56 = v52[16];
      sub_5D64(v53, v55);
      uint64_t v69 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v56 + 8) + **(int **)(v56 + 8));
      swift_bridgeObjectRetain();
      uint64_t v57 = (void *)swift_task_alloc();
      v0[250] = v57;
      *uint64_t v57 = v0;
      v57[1] = sub_FC2FC;
      return v69(v54, v55, v56);
    }
    unint64_t v47 = *(void *)(v33 + 8 * v46);
    ++v38;
    if (!v47)
    {
      int64_t v38 = v46 + 1;
      if (v46 + 1 >= v37) {
        goto LABEL_50;
      }
      unint64_t v47 = *(void *)(v33 + 8 * v38);
      if (!v47)
      {
        int64_t v38 = v46 + 2;
        if (v46 + 2 >= v37) {
          goto LABEL_50;
        }
        unint64_t v47 = *(void *)(v33 + 8 * v38);
        if (!v47)
        {
          int64_t v38 = v46 + 3;
          if (v46 + 3 >= v37) {
            goto LABEL_50;
          }
          unint64_t v47 = *(void *)(v33 + 8 * v38);
          if (!v47)
          {
            int64_t v38 = v46 + 4;
            if (v46 + 4 >= v37) {
              goto LABEL_50;
            }
            unint64_t v47 = *(void *)(v33 + 8 * v38);
            if (!v47) {
              break;
            }
          }
        }
      }
    }
LABEL_49:
    unint64_t v36 = (v47 - 1) & v47;
  }
  int64_t v48 = v46 + 5;
  if (v48 >= v37) {
    goto LABEL_50;
  }
  unint64_t v47 = *(void *)(v33 + 8 * v48);
  if (v47)
  {
    int64_t v38 = v48;
    goto LABEL_49;
  }
  while (1)
  {
    int64_t v38 = v48 + 1;
    if (__OFADD__(v48, 1)) {
      break;
    }
    if (v38 >= v37) {
      goto LABEL_50;
    }
    unint64_t v47 = *(void *)(v33 + 8 * v38);
    ++v48;
    if (v47) {
      goto LABEL_49;
    }
  }
LABEL_61:
  __break(1u);
  return result;
}

uint64_t sub_FC2FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2008) = a1;
  *(void *)(v3 + 2016) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_FF2B8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_FC4B4;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_FC4B4()
{
  uint64_t v1 = v0[249];
  uint64_t v2 = (void *)v0[163];
  uint64_t v3 = v2[20];
  uint64_t v4 = v2[21];
  sub_5D64(v2 + 17, v3);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[253] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_FC5CC;
  return v7(v1, v3, v4);
}

uint64_t sub_FC5CC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2032) = a1;
  *(void *)(v3 + 2040) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_FF5B8;
  }
  else
  {
    uint64_t v4 = sub_FC780;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_FC780()
{
  uint64_t v1 = (void *)v0[163];
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 32) + **(int **)(v3 + 32));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[256] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_FC890;
  uint64_t v5 = v0[248];
  uint64_t v6 = v0[224];
  return v8(v5, v6, v2, v3);
}

uint64_t sub_FC890(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2056) = a1;
  *(void *)(v3 + 2064) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_FF8B8;
  }
  else
  {
    uint64_t v4 = sub_FCA3C;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_FCA3C()
{
  uint64_t v229 = v0;
  int64_t v1 = 0;
  __src = (void *)(v0 + 400);
  uint64_t v208 = *(void *)(v0 + 2008);
  uint64_t v209 = *(void *)(v0 + 2032);
  uint64_t v2 = *(void *)(v0 + 1984);
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  uint64_t v5 = *(void *)(v2 + 56);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v6 = v3 & v5;
  int64_t v7 = (unint64_t)(63 - v4) >> 6;
  uint64_t v8 = *(void *)(v0 + 2064);
  uint64_t v194 = *(void *)(v0 + 1968);
  __dst = (void *)(v0 + 16);
  int64_t v196 = v7;
  if ((v3 & v5) == 0) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v1 << 6);
  uint64_t v11 = *(void *)(v0 + 1984);
  while (1)
  {
    uint64_t v12 = (uint64_t *)(*(void *)(v11 + 48) + 16 * v10);
    uint64_t v13 = *v12;
    unint64_t v14 = v12[1];
    swift_bridgeObjectRetain_n();
    unint64_t v15 = sub_F0C70(v13, v14);
    if (v16)
    {
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
      goto LABEL_7;
    }
    uint64_t v21 = v15;
    uint64_t v205 = v8;
    if (*(void *)(*(void *)(v0 + 1768) + 16))
    {
      uint64_t v22 = sub_56168(v15);
      if (v23) {
        sub_10C188(*(void *)(*(void *)(v0 + 1768) + 56) + *(void *)(*(void *)(v0 + 1648) + 72) * v22, *(void *)(v0 + 1440), type metadata accessor for StoreBook);
      }
    }
    uint64_t v24 = *(void *)(v0 + 1648);
    uint64_t v210 = *(void *)(v0 + 1576);
    uint64_t v216 = *(void *)(v0 + 1568);
    uint64_t v25 = *(void *)(v0 + 1456);
    uint64_t v26 = *(void *)(v0 + 1448);
    uint64_t v206 = *(void *)(v0 + 1440);
    uint64_t v219 = *(void *)(v0 + 1432);
    uint64_t v224 = *(void *)(v0 + 1640);
    (*(void (**)(void))(v24 + 56))();
    uint64_t v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v25 + 56);
    v27(v210, 1, 1, v26);
    uint64_t v211 = v27;
    v27(v216, 1, 1, v26);
    uint64_t v28 = v219;
    sub_5606C(v206, v219, &qword_26FE70);
    uint64_t v220 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v24 + 48);
    int v29 = v220(v28, 1, v224);
    uint64_t v30 = *(void *)(v0 + 1432);
    uint64_t v31 = *(void *)(v0 + 1360);
    uint64_t v32 = *(void *)(v0 + 1352);
    uint64_t v33 = *(void *)(v0 + 1344);
    if (v29 == 1)
    {
      sub_55F38(*(void *)(v0 + 1432), &qword_26FE70);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v31 + 56))(v33, 1, 1, v32);
LABEL_28:
      sub_55F38(*(void *)(v0 + 1344), &qword_26FE68);
      goto LABEL_29;
    }
    sub_5606C(*(void *)(v0 + 1432), *(void *)(v0 + 1344), &qword_26FE68);
    sub_10C1F0(v30, type metadata accessor for StoreBook);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v31 + 48))(v33, 1, v32) == 1) {
      goto LABEL_28;
    }
    uint64_t v115 = *(void *)(v0 + 1376);
    uint64_t v116 = *(void *)(v0 + 1368);
    sub_10C014(*(void *)(v0 + 1344), v115, type metadata accessor for StoreBook.Origin);
    sub_10C014(v115, v116, type metadata accessor for StoreBook.Origin);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v117 = *(void *)(v0 + 1568);
      uint64_t v118 = *(void *)(v0 + 1368);
      sub_55F38(v117, &qword_26D638);
      sub_55844(v118, v117, &qword_26D638);
    }
    else
    {
      uint64_t v126 = *(void *)(v0 + 1576);
      uint64_t v127 = *(void *)(v0 + 1456);
      uint64_t v128 = *(void *)(v0 + 1448);
      uint64_t v129 = *(void *)(v0 + 1368);
      sub_55F38(v126, &qword_26D638);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v127 + 32))(v126, v129, v128);
      v211(v126, 0, 1, v128);
    }
LABEL_29:
    double v34 = 0.0;
    if (!*(void *)(v208 + 16)) {
      goto LABEL_33;
    }
    uint64_t v35 = sub_56168(v21);
    if ((v36 & 1) == 0) {
      goto LABEL_33;
    }
    uint64_t v37 = *(void *)(v0 + 1336);
    uint64_t v38 = *(void *)(v0 + 1328);
    sub_10C188(*(void *)(v208 + 56) + *(void *)(*(void *)(v0 + 1320) + 72) * v35, v38, (uint64_t (*)(void))type metadata accessor for StoreBookRating);
    sub_10C014(v38, v37, (uint64_t (*)(void))type metadata accessor for StoreBookRating);
    if (*(unsigned char *)(v37 + 16))
    {
      sub_10C1F0(*(void *)(v0 + 1336), (uint64_t (*)(void))type metadata accessor for StoreBookRating);
LABEL_33:
      char v197 = 1;
      double v39 = 0.0;
      goto LABEL_34;
    }
    uint64_t v119 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0 + 1936);
    uint64_t v120 = *(void *)(v0 + 1560);
    uint64_t v121 = *(void *)(v0 + 1448);
    uint64_t v122 = *(void *)(v0 + 1336);
    double v123 = *(double *)(v122 + 8);
    sub_5606C(v122 + *(int *)(*(void *)(v0 + 1312) + 24), v120, &qword_26D638);
    int v124 = v119(v120, 1, v121);
    uint64_t v125 = *(void *)(v0 + 1560);
    if (v124 == 1)
    {
      sub_10C1F0(*(void *)(v0 + 1336), (uint64_t (*)(void))type metadata accessor for StoreBookRating);
      sub_55F38(v125, &qword_26D638);
      char v197 = 1;
      double v39 = 0.0;
      goto LABEL_34;
    }
    (*(void (**)(void, void, void))(*(void *)(v0 + 1456) + 32))(*(void *)(v0 + 1464), *(void *)(v0 + 1560), *(void *)(v0 + 1448));
    double v34 = v123 + v123 + -1.0;
    sub_1FB040();
    BOOL v131 = v34 <= 1.0 && v34 >= -1.0;
    if (!v131)
    {
      sub_10BFC0();
      swift_allocError();
      *(double *)uint64_t v132 = v34;
      goto LABEL_91;
    }
    double v39 = v130;
    if (v130 < 0.0)
    {
      sub_10BFC0();
      swift_allocError();
      *(double *)uint64_t v132 = v39;
LABEL_91:
      uint64_t v218 = *(void *)(v0 + 1568);
      uint64_t v133 = *(void *)(v0 + 1464);
      uint64_t v134 = *(void *)(v0 + 1456);
      uint64_t v135 = *(void *)(v0 + 1448);
      uint64_t v222 = *(void *)(v0 + 1440);
      uint64_t v227 = *(void *)(v0 + 1576);
      uint64_t v136 = *(void *)(v0 + 1336);
      *(unsigned char *)(v132 + 8) = v131;
      swift_willThrow();
      swift_bridgeObjectRelease();
      (*(void (**)(uint64_t, uint64_t))(v134 + 8))(v133, v135);
      sub_10C1F0(v136, (uint64_t (*)(void))type metadata accessor for StoreBookRating);
      sub_55F38(v218, &qword_26D638);
      sub_55F38(v227, &qword_26D638);
      sub_55F38(v222, &qword_26FE70);
      goto LABEL_72;
    }
    uint64_t v146 = *(void *)(v0 + 1336);
    (*(void (**)(void, void))(*(void *)(v0 + 1456) + 8))(*(void *)(v0 + 1464), *(void *)(v0 + 1448));
    sub_10C1F0(v146, (uint64_t (*)(void))type metadata accessor for StoreBookRating);
    char v197 = 0;
LABEL_34:
    uint64_t v40 = *(void *)(v0 + 1640);
    uint64_t v41 = *(void *)(v0 + 1440);
    uint64_t v42 = *(void *)(v0 + 1424);
    v211(*(void *)(v0 + 1552), 1, 1, *(void *)(v0 + 1448));
    sub_5606C(v41, v42, &qword_26FE70);
    if (v220(v42, 1, v40) == 1)
    {
      sub_55F38(*(void *)(v0 + 1424), &qword_26FE70);
    }
    else
    {
      uint64_t v43 = *(void *)(v0 + 1424);
      double v44 = *(double *)(v43 + *(int *)(*(void *)(v0 + 1640) + 32));
      sub_10C1F0(v43, type metadata accessor for StoreBook);
      if (v44 != -1.0)
      {
        uint64_t v45 = *(void *)(v0 + 1552);
        uint64_t v46 = *(void *)(v0 + 1544);
        uint64_t v47 = *(void *)(v0 + 1448);
        sub_1FB010();
        sub_55F38(v45, &qword_26D638);
        v211(v46, 0, 1, v47);
        sub_55844(v46, v45, &qword_26D638);
      }
    }
    v211(*(void *)(v0 + 1536), 1, 1, *(void *)(v0 + 1448));
    if (v21 == 0x18067B1ECLL)
    {
      if (qword_26C3D8 != -1) {
        swift_once();
      }
      sub_6DBC8(*(void *)(v0 + 1680), (uint64_t)qword_2A5C70);
      int64_t v48 = sub_1FB410();
      os_log_type_t v49 = sub_1FBDC0();
      if (os_log_type_enabled(v48, v49))
      {
        unint64_t v50 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)unint64_t v50 = 0;
        _os_log_impl(&dword_0, v48, v49, "6449246700 about to calculate finishedIntervalSinceReferenceDate", v50, 2u);
        swift_slowDealloc();
      }
    }
    uint64_t v51 = *(void *)(v0 + 1640);
    uint64_t v52 = *(void *)(v0 + 1416);
    sub_5606C(*(void *)(v0 + 1440), v52, &qword_26FE70);
    if (v220(v52, 1, v51) == 1)
    {
      sub_55F38(*(void *)(v0 + 1416), &qword_26FE70);
    }
    else
    {
      uint64_t v53 = *(void *)(v0 + 1416);
      double v54 = *(double *)(v53 + *(int *)(*(void *)(v0 + 1640) + 36));
      sub_10C1F0(v53, type metadata accessor for StoreBook);
      if (v54 != -1.0)
      {
        uint64_t v55 = *(void *)(v0 + 1544);
        uint64_t v56 = *(void *)(v0 + 1536);
        uint64_t v57 = *(void *)(v0 + 1448);
        sub_1FB010();
        sub_55F38(v56, &qword_26D638);
        v211(v55, 0, 1, v57);
        sub_55844(v55, v56, &qword_26D638);
      }
    }
    if (*(void *)(v209 + 16))
    {
      uint64_t v58 = sub_56168(v21);
      if (v59) {
        char v60 = *(unsigned char *)(*(void *)(v209 + 56) + 2 * v58);
      }
      else {
        char v60 = 3;
      }
      char v198 = v60;
      uint64_t v61 = sub_56168(v21);
      if (v62) {
        unsigned __int8 v199 = *(unsigned char *)(*(void *)(v209 + 56) + 2 * v61 + 1);
      }
      else {
        unsigned __int8 v199 = 0;
      }
    }
    else
    {
      unsigned __int8 v199 = 0;
      char v198 = 3;
    }
    uint64_t v212 = *(void *)(v0 + 1640);
    uint64_t v63 = *(void *)(v0 + 1576);
    uint64_t v207 = *(void *)(v0 + 1568);
    uint64_t v64 = *(void *)(v0 + 1528);
    uint64_t v65 = *(void *)(v0 + 1520);
    uint64_t v200 = *(void *)(v0 + 1552);
    uint64_t v201 = *(void *)(v0 + 1512);
    uint64_t v202 = *(void *)(v0 + 1536);
    uint64_t v203 = *(void *)(v0 + 1504);
    uint64_t v204 = *(void *)(v0 + 1440);
    uint64_t v66 = *(void *)(v0 + 1408);
    uint64_t v67 = sub_F0C2C(v13, v14, *(void *)(v0 + 2056));
    swift_bridgeObjectRelease();
    uint64_t v68 = _swiftEmptyArrayStorage;
    if (v67) {
      uint64_t v68 = (void *)v67;
    }
    uint64_t v217 = (uint64_t)v68;
    sub_5606C(v63, v64, &qword_26D638);
    sub_5606C(v200, v65, &qword_26D638);
    sub_5606C(v202, v201, &qword_26D638);
    sub_5606C(v207, v203, &qword_26D638);
    sub_5606C(v204, v66, &qword_26FE70);
    if (v220(v66, 1, v212) == 1)
    {
      sub_55F38(*(void *)(v0 + 1408), &qword_26FE70);
      double v69 = 0.0;
      unsigned __int8 v70 = 1;
    }
    else
    {
      uint64_t v71 = *(void *)(v0 + 1408);
      uint64_t v72 = v71 + *(int *)(*(void *)(v0 + 1640) + 24);
      double v69 = *(double *)v72;
      unsigned __int8 v70 = *(unsigned char *)(v72 + 8);
      sub_10C1F0(v71, type metadata accessor for StoreBook);
    }
    uint64_t v73 = *(void *)(v0 + 1640);
    uint64_t v74 = *(void *)(v0 + 1400);
    sub_5606C(*(void *)(v0 + 1440), v74, &qword_26FE70);
    if (v220(v74, 1, v73) == 1)
    {
      sub_55F38(*(void *)(v0 + 1400), &qword_26FE70);
      long long v75 = 0uLL;
      char v76 = 1;
    }
    else
    {
      uint64_t v77 = *(void *)(v0 + 1400);
      uint64_t v78 = v77 + *(int *)(*(void *)(v0 + 1640) + 28);
      long long v213 = *(_OWORD *)v78;
      char v76 = *(unsigned char *)(v78 + 16);
      sub_10C1F0(v77, type metadata accessor for StoreBook);
      long long v75 = v213;
    }
    uint64_t v79 = *(void *)(v0 + 1640);
    uint64_t v80 = *(void *)(v0 + 1440);
    uint64_t v81 = *(void *)(v0 + 1392);
    *(_OWORD *)(v0 + 1152) = v75;
    *(unsigned char *)(v0 + 1168) = v76;
    *(double *)(v0 + 1224) = v34;
    *(double *)(v0 + 1232) = v39;
    *(unsigned char *)(v0 + 1240) = v197;
    *(unsigned char *)(v0 + 393) = v198;
    sub_5606C(v80, v81, &qword_26FE70);
    if (v220(v81, 1, v79) == 1)
    {
      sub_55F38(*(void *)(v0 + 1392), &qword_26FE70);
      long long v82 = 0uLL;
      char v83 = 1;
    }
    else
    {
      uint64_t v84 = *(void *)(v0 + 1392);
      uint64_t v85 = v84 + *(int *)(*(void *)(v0 + 1640) + 40);
      long long v214 = *(_OWORD *)v85;
      char v83 = *(unsigned char *)(v85 + 16);
      sub_10C1F0(v84, type metadata accessor for StoreBook);
      long long v82 = v214;
    }
    uint64_t v86 = *(void *)(v0 + 1640);
    uint64_t v87 = *(void *)(v0 + 1440);
    uint64_t v88 = *(void *)(v0 + 1384);
    *(_OWORD *)(v0 + 1200) = v82;
    *(unsigned char *)(v0 + 1216) = v83;
    sub_5606C(v87, v88, &qword_26FE70);
    if (v220(v88, 1, v86) == 1)
    {
      sub_55F38(*(void *)(v0 + 1384), &qword_26FE70);
      long long v89 = 0uLL;
      char v90 = 1;
    }
    else
    {
      uint64_t v91 = *(void *)(v0 + 1384);
      uint64_t v92 = v91 + *(int *)(*(void *)(v0 + 1640) + 44);
      long long v225 = *(_OWORD *)v92;
      char v90 = *(unsigned char *)(v92 + 16);
      sub_10C1F0(v91, type metadata accessor for StoreBook);
      long long v89 = v225;
    }
    uint64_t v93 = *(void *)(v0 + 1856);
    uint64_t v94 = *(void *)(v0 + 1824);
    double v95 = *(double *)(v0 + 1776);
    uint64_t v96 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v0 + 1632);
    uint64_t v97 = *(void *)(v0 + 1528);
    uint64_t v98 = *(void *)(v0 + 1520);
    uint64_t v99 = *(void *)(v0 + 1512);
    uint64_t v100 = *(void *)(v0 + 1504);
    uint64_t v101 = *(void *)(v0 + 1480);
    uint64_t v102 = *(void *)(v0 + 1472);
    uint64_t v103 = *(void *)(v0 + 1288);
    *(_OWORD *)(v0 + 1176) = v89;
    *(unsigned char *)(v0 + 1192) = v90;
    sub_FFBB8(v103, v21, v217, v102, v96, v101, v97, v98, __src, v95, v99, v100, v69, v70, (uint64_t *)(v0 + 1152), v0 + 1224, (unsigned __int8 *)(v0 + 393), v199, (uint64_t *)(v0 + 1200),
      (uint64_t *)(v0 + 1176),
      v94,
      v93);
    if (v205)
    {
      uint64_t v215 = *(void *)(v0 + 1568);
      uint64_t v104 = *(void *)(v0 + 1552);
      uint64_t v105 = *(void *)(v0 + 1536);
      uint64_t v106 = *(void *)(v0 + 1528);
      uint64_t v107 = *(void *)(v0 + 1520);
      uint64_t v108 = *(void *)(v0 + 1512);
      uint64_t v109 = *(void *)(v0 + 1504);
      uint64_t v221 = *(void *)(v0 + 1440);
      uint64_t v226 = *(void *)(v0 + 1576);
      swift_bridgeObjectRelease();
      sub_55F38(v109, &qword_26D638);
      sub_55F38(v108, &qword_26D638);
      sub_55F38(v107, &qword_26D638);
      sub_55F38(v106, &qword_26D638);
      sub_55F38(v105, &qword_26D638);
      sub_55F38(v104, &qword_26D638);
      sub_55F38(v215, &qword_26D638);
      sub_55F38(v226, &qword_26D638);
      sub_55F38(v221, &qword_26FE70);
LABEL_72:
      if (qword_26C338 != -1) {
        swift_once();
      }
      sub_6DBC8(*(void *)(v0 + 1680), (uint64_t)qword_2A5BF0);
      swift_errorRetain();
      swift_errorRetain();
      uint64_t v110 = sub_1FB410();
      os_log_type_t v111 = sub_1FBDA0();
      if (os_log_type_enabled(v110, v111))
      {
        uint64_t v112 = swift_slowAlloc();
        uint64_t v113 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v112 = 138412290;
        swift_errorRetain();
        uint64_t v114 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v112 + 4) = v114;
        *uint64_t v113 = v114;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v110, v111, "Error creating book history: %@", (uint8_t *)v112, 0xCu);
        sub_12124(&qword_26F4F8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      goto LABEL_77;
    }
    uint64_t v137 = *(void *)(v0 + 1528);
    uint64_t v138 = *(void *)(v0 + 1520);
    uint64_t v139 = *(void *)(v0 + 1512);
    uint64_t v140 = *(void *)(v0 + 1504);
    swift_bridgeObjectRelease();
    sub_55F38(v140, &qword_26D638);
    sub_55F38(v139, &qword_26D638);
    sub_55F38(v138, &qword_26D638);
    sub_55F38(v137, &qword_26D638);
    memcpy(__dst, __src, 0x179uLL);
    memcpy(v228, __dst, 0x179uLL);
    if ((BookHistory.isEmpty.getter() & 1) == 0)
    {
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v228[0] = v194;
      sub_70D3C(__dst, v21, isUniquelyReferenced_nonNull_native);
      uint64_t v194 = v228[0];
      swift_bridgeObjectRelease();
    }
    uint64_t v142 = *(void *)(v0 + 1576);
    uint64_t v143 = *(void *)(v0 + 1568);
    uint64_t v144 = *(void *)(v0 + 1552);
    uint64_t v145 = *(void *)(v0 + 1440);
    sub_55F38(*(void *)(v0 + 1536), &qword_26D638);
    sub_55F38(v144, &qword_26D638);
    sub_55F38(v143, &qword_26D638);
    sub_55F38(v142, &qword_26D638);
    sub_55F38(v145, &qword_26FE70);
LABEL_77:
    uint64_t v8 = 0;
    int64_t v7 = v196;
    if (v6) {
      goto LABEL_4;
    }
LABEL_7:
    BOOL v17 = __OFADD__(v1++, 1);
    if (v17)
    {
      __break(1u);
LABEL_144:
      __break(1u);
      goto LABEL_145;
    }
    uint64_t v11 = *(void *)(v0 + 1984);
    if (v1 >= v7) {
      goto LABEL_96;
    }
    uint64_t v18 = v11 + 56;
    unint64_t v19 = *(void *)(v11 + 56 + 8 * v1);
    if (!v19) {
      break;
    }
LABEL_17:
    unint64_t v6 = (v19 - 1) & v19;
    unint64_t v10 = __clz(__rbit64(v19)) + (v1 << 6);
  }
  int64_t v20 = v1 + 1;
  if (v1 + 1 >= v7) {
    goto LABEL_96;
  }
  unint64_t v19 = *(void *)(v18 + 8 * v20);
  if (v19) {
    goto LABEL_16;
  }
  int64_t v20 = v1 + 2;
  if (v1 + 2 >= v7) {
    goto LABEL_96;
  }
  unint64_t v19 = *(void *)(v18 + 8 * v20);
  if (v19)
  {
LABEL_16:
    int64_t v1 = v20;
    goto LABEL_17;
  }
  int64_t v20 = v1 + 3;
  if (v1 + 3 < v7)
  {
    unint64_t v19 = *(void *)(v18 + 8 * v20);
    if (!v19)
    {
      while (1)
      {
        int64_t v1 = v20 + 1;
        if (__OFADD__(v20, 1)) {
          break;
        }
        if (v1 >= v7) {
          goto LABEL_96;
        }
        unint64_t v19 = *(void *)(v18 + 8 * v1);
        ++v20;
        if (v19) {
          goto LABEL_17;
        }
      }
LABEL_145:
      __break(1u);
LABEL_146:
      __break(1u);
      goto LABEL_147;
    }
    goto LABEL_16;
  }
LABEL_96:
  uint64_t v147 = *(void *)(v0 + 1976);
  uint64_t v148 = *(void *)(v0 + 1960);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  if (v147 + 1 == v148)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v190 = *(void *)(v0 + 1624);
    uint64_t v191 = *(void *)(v0 + 1632);
    uint64_t v192 = *(void *)(v0 + 1616);
    uint64_t v149 = *(void *)(v0 + 1480);
    uint64_t v150 = *(void *)(v0 + 1472);
    uint64_t v151 = *(void *)(v0 + 1456);
    uint64_t v152 = *(void *)(v0 + 1448);
    int64_t v153 = *(void *)(v0 + 1296);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    memcpy(v228, (const void *)(v0 + 784), 0x16BuLL);
    sub_8CFA4(v0 + 784);
    uint64_t v154 = Dictionary<>.mostRecentBookHistories(limit:scorerConfig:)(v153, v228, v194);
    swift_bridgeObjectRelease();
    sub_8D5A4(v0 + 784);
    Swift::Int v155 = *(void (**)(uint64_t, uint64_t))(v151 + 8);
    v155(v150, v152);
    v155(v149, v152);
    sub_55F38(v190, &qword_26D638);
    sub_55F38(v191, &qword_26D638);
    sub_55F38(v192, &qword_26D638);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v156 = *(void (**)(uint64_t))(v0 + 8);
    v156(v154);
    return;
  }
  uint64_t v157 = *(void *)(v0 + 1976);
  *(void *)(v0 + 1976) = v157 + 1;
  *(void *)(v0 + 1968) = v194;
  if (v157 + 1 == *(void *)(v0 + 1960)) {
    goto LABEL_146;
  }
  if (v157 == 0x20C49BA5E353F6)
  {
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
    goto LABEL_150;
  }
  uint64_t v158 = 1000 * (v157 + 1);
  uint64_t v159 = 1000 * v157 + 1999;
  if (v159 >= *(void *)(v0 + 1952) - 1) {
    uint64_t v159 = *(void *)(v0 + 1952) - 1;
  }
  if (v159 < v158) {
    goto LABEL_148;
  }
  uint64_t v160 = *(void *)(v0 + 1896);
  uint64_t v161 = *(void *)(v160 + 16);
  if (v161 < (unint64_t)v158 || v161 <= v159) {
    goto LABEL_149;
  }
  uint64_t v163 = sub_509B8(v160 + 32, v158, 2 * v159 + 3);
  uint64_t v164 = v163;
  *(void *)(v0 + 1984) = v163;
  uint64_t v165 = v163 + 56;
  uint64_t v166 = -1;
  uint64_t v167 = -1 << *(unsigned char *)(v163 + 32);
  if (-v167 < 64) {
    uint64_t v166 = ~(-1 << -(char)v167);
  }
  unint64_t v168 = v166 & *(void *)(v163 + 56);
  int64_t v169 = (unint64_t)(63 - v167) >> 6;
  swift_bridgeObjectRetain();
  int64_t v170 = 0;
  long long v171 = _swiftEmptyArrayStorage;
  if (!v168) {
    goto LABEL_115;
  }
LABEL_112:
  unint64_t v172 = __clz(__rbit64(v168));
  v168 &= v168 - 1;
  for (unint64_t i = v172 | (v170 << 6); ; unint64_t i = __clz(__rbit64(v179)) + (v170 << 6))
  {
    long long v174 = (uint64_t *)(*(void *)(v164 + 48) + 16 * i);
    uint64_t v175 = *v174;
    unint64_t v176 = v174[1];
    swift_bridgeObjectRetain();
    unint64_t v177 = sub_F0C70(v175, v176);
    if (v178)
    {
      if (v168) {
        goto LABEL_112;
      }
    }
    else
    {
      unint64_t v181 = v177;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v171 = sub_41858(0, v171[2] + 1, 1, v171);
      }
      unint64_t v183 = v171[2];
      unint64_t v182 = v171[3];
      if (v183 >= v182 >> 1) {
        long long v171 = sub_41858((void *)(v182 > 1), v183 + 1, 1, v171);
      }
      v171[2] = v183 + 1;
      v171[v183 + 4] = v181;
      if (v168) {
        goto LABEL_112;
      }
    }
LABEL_115:
    BOOL v17 = __OFADD__(v170++, 1);
    if (v17) {
      goto LABEL_144;
    }
    if (v170 >= v169)
    {
LABEL_140:
      char v184 = *(void **)(v0 + 1304);
      swift_release();
      long long v185 = v184 + 12;
      uint64_t v186 = sub_50A6C((uint64_t)v171);
      *(void *)(v0 + 1992) = v186;
      swift_bridgeObjectRelease();
      uint64_t v187 = v184[15];
      uint64_t v188 = v184[16];
      sub_5D64(v185, v187);
      uint64_t v223 = (void (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v188 + 8) + **(int **)(v188 + 8));
      swift_bridgeObjectRetain();
      long long v189 = (void *)swift_task_alloc();
      *(void *)(v0 + 2000) = v189;
      *long long v189 = v0;
      v189[1] = sub_FC2FC;
      v223(v186, v187, v188);
      return;
    }
    unint64_t v179 = *(void *)(v165 + 8 * v170);
    if (!v179) {
      break;
    }
LABEL_129:
    unint64_t v168 = (v179 - 1) & v179;
  }
  int64_t v180 = v170 + 1;
  if (v170 + 1 >= v169) {
    goto LABEL_140;
  }
  unint64_t v179 = *(void *)(v165 + 8 * v180);
  if (v179) {
    goto LABEL_128;
  }
  int64_t v180 = v170 + 2;
  if (v170 + 2 >= v169) {
    goto LABEL_140;
  }
  unint64_t v179 = *(void *)(v165 + 8 * v180);
  if (v179) {
    goto LABEL_128;
  }
  int64_t v180 = v170 + 3;
  if (v170 + 3 >= v169) {
    goto LABEL_140;
  }
  unint64_t v179 = *(void *)(v165 + 8 * v180);
  if (v179) {
    goto LABEL_128;
  }
  int64_t v180 = v170 + 4;
  if (v170 + 4 >= v169) {
    goto LABEL_140;
  }
  unint64_t v179 = *(void *)(v165 + 8 * v180);
  if (v179) {
    goto LABEL_128;
  }
  int64_t v180 = v170 + 5;
  if (v170 + 5 >= v169) {
    goto LABEL_140;
  }
  unint64_t v179 = *(void *)(v165 + 8 * v180);
  if (v179)
  {
LABEL_128:
    int64_t v170 = v180;
    goto LABEL_129;
  }
  while (1)
  {
    int64_t v170 = v180 + 1;
    if (__OFADD__(v180, 1)) {
      break;
    }
    if (v170 >= v169) {
      goto LABEL_140;
    }
    unint64_t v179 = *(void *)(v165 + 8 * v170);
    ++v180;
    if (v179) {
      goto LABEL_129;
    }
  }
LABEL_150:
  __break(1u);
}

uint64_t sub_FE2C4()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_FE554()
{
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_FE7EC()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_FEAB4()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_FED88()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_FF018()
{
  sub_55F38(*(void *)(v0 + 1632), &qword_26D638);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_FF2B8()
{
  uint64_t v1 = v0[204];
  uint64_t v2 = v0[203];
  uint64_t v3 = v0[202];
  uint64_t v4 = v0[185];
  uint64_t v5 = v0[181];
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[182] + 8);
  v6(v0[184], v5);
  v6(v4, v5);
  sub_55F38(v2, &qword_26D638);
  sub_55F38(v1, &qword_26D638);
  sub_55F38(v3, &qword_26D638);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_FF5B8()
{
  uint64_t v1 = v0[204];
  uint64_t v2 = v0[203];
  uint64_t v3 = v0[202];
  uint64_t v4 = v0[185];
  uint64_t v5 = v0[181];
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[182] + 8);
  v6(v0[184], v5);
  v6(v4, v5);
  sub_55F38(v2, &qword_26D638);
  sub_55F38(v1, &qword_26D638);
  sub_55F38(v3, &qword_26D638);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

uint64_t sub_FF8B8()
{
  uint64_t v1 = v0[204];
  uint64_t v2 = v0[203];
  uint64_t v3 = v0[202];
  uint64_t v4 = v0[185];
  uint64_t v5 = v0[181];
  unint64_t v6 = *(void (**)(uint64_t, uint64_t))(v0[182] + 8);
  v6(v0[184], v5);
  v6(v4, v5);
  sub_55F38(v2, &qword_26D638);
  sub_55F38(v1, &qword_26D638);
  sub_55F38(v3, &qword_26D638);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int64_t v7 = (uint64_t (*)(void))v0[1];
  return v7();
}

void *sub_FFBB8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void (*a5)(char *, uint64_t, uint64_t, uint64_t)@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, double a10@<D0>, uint64_t a11, uint64_t a12, double a13, unsigned __int8 a14, uint64_t *a15, uint64_t a16, unsigned __int8 *a17, unsigned __int8 a18, uint64_t *a19, uint64_t *a20,uint64_t a21,uint64_t a22)
{
  uint64_t v420 = a8;
  uint64_t v371 = a7;
  uint64_t v372 = a1;
  uint64_t v324 = a6;
  uint64_t v416 = a5;
  uint64_t v364 = a3;
  uint64_t v391 = a2;
  uint64_t v308 = a9;
  LODWORD(v418) = a14;
  double v412 = a13;
  uint64_t v406 = a11;
  v415 = a17;
  uint64_t v421 = type metadata accessor for Event();
  uint64_t v402 = *(void *)(v421 - 8);
  uint64_t v24 = __chkstk_darwin(v421);
  v404 = (char *)&v305 - ((v25 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = __chkstk_darwin(v24);
  *(void *)&double v419 = (char *)&v305 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v414 = (char *)&v305 - v29;
  __chkstk_darwin(v28);
  uint64_t v31 = (uint64_t)&v305 - v30;
  uint64_t v423 = sub_1FB0E0();
  double v363 = *(double *)(v423 - 8);
  uint64_t v32 = __chkstk_darwin(v423);
  v394 = (char *)&v305 - ((v33 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v32);
  v396 = (void (**)(void))((char *)&v305 - v35);
  uint64_t v36 = __chkstk_darwin(v34);
  v397 = (char *)&v305 - v37;
  uint64_t v38 = __chkstk_darwin(v36);
  long long v313 = (char *)&v305 - v39;
  uint64_t v40 = __chkstk_darwin(v38);
  v331 = (char *)&v305 - v41;
  uint64_t v42 = __chkstk_darwin(v40);
  char v329 = (char *)&v305 - v43;
  uint64_t v44 = __chkstk_darwin(v42);
  uint64_t v309 = (char *)&v305 - v45;
  uint64_t v46 = __chkstk_darwin(v44);
  v377 = (char *)&v305 - v47;
  uint64_t v48 = __chkstk_darwin(v46);
  v401 = (char *)&v305 - v49;
  uint64_t v50 = __chkstk_darwin(v48);
  v379 = (char *)&v305 - v51;
  uint64_t v52 = __chkstk_darwin(v50);
  char v346 = (char *)&v305 - v53;
  uint64_t v54 = __chkstk_darwin(v52);
  v413 = (char *)&v305 - v55;
  uint64_t v56 = __chkstk_darwin(v54);
  char v345 = (char *)&v305 - v57;
  uint64_t v58 = __chkstk_darwin(v56);
  v344 = (char *)&v305 - v59;
  uint64_t v60 = __chkstk_darwin(v58);
  v365 = (char *)&v305 - v61;
  uint64_t v62 = __chkstk_darwin(v60);
  char v343 = (char *)&v305 - v63;
  uint64_t v64 = __chkstk_darwin(v62);
  v381 = (char *)&v305 - v65;
  uint64_t v66 = __chkstk_darwin(v64);
  v388 = (char *)&v305 - v67;
  uint64_t v68 = __chkstk_darwin(v66);
  v386 = (char *)&v305 - v69;
  uint64_t v70 = __chkstk_darwin(v68);
  v380 = (char *)&v305 - v71;
  uint64_t v72 = __chkstk_darwin(v70);
  v342 = (char *)&v305 - v73;
  __chkstk_darwin(v72);
  v393 = (char *)&v305 - v74;
  uint64_t v75 = sub_12124(&qword_26D638);
  uint64_t v76 = __chkstk_darwin(v75 - 8);
  uint64_t v330 = (uint64_t)&v305 - ((v77 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = __chkstk_darwin(v76);
  uint64_t v328 = (uint64_t)&v305 - v79;
  uint64_t v80 = __chkstk_darwin(v78);
  uint64_t v327 = (uint64_t)&v305 - v81;
  uint64_t v82 = __chkstk_darwin(v80);
  uint64_t v310 = (uint64_t)&v305 - v83;
  uint64_t v84 = __chkstk_darwin(v82);
  uint64_t v378 = (uint64_t)&v305 - v85;
  uint64_t v86 = __chkstk_darwin(v84);
  uint64_t v389 = (uint64_t)&v305 - v87;
  uint64_t v88 = __chkstk_darwin(v86);
  uint64_t v336 = (uint64_t)&v305 - v89;
  uint64_t v90 = __chkstk_darwin(v88);
  uint64_t v422 = (void (*)(char *, uint64_t, uint64_t))((char *)&v305 - v91);
  uint64_t v92 = __chkstk_darwin(v90);
  v408 = (char *)&v305 - v93;
  uint64_t v94 = __chkstk_darwin(v92);
  uint64_t v411 = (uint64_t)&v305 - v95;
  uint64_t v96 = __chkstk_darwin(v94);
  uint64_t v395 = (uint64_t)&v305 - v97;
  uint64_t v98 = __chkstk_darwin(v96);
  uint64_t v405 = (uint64_t)&v305 - v99;
  uint64_t v100 = __chkstk_darwin(v98);
  uint64_t v409 = (uint64_t)&v305 - v101;
  uint64_t v102 = __chkstk_darwin(v100);
  uint64_t v104 = (uint64_t)&v305 - v103;
  __chkstk_darwin(v102);
  uint64_t v106 = (char *)&v305 - v105;
  uint64_t v107 = *a15;
  uint64_t v321 = a15[1];
  uint64_t v322 = v107;
  uint64_t v108 = v406;
  int v320 = *((unsigned __int8 *)a15 + 16);
  v407 = *(void (***)(void))a16;
  double v403 = *(double *)(a16 + 8);
  LODWORD(v410) = *(unsigned __int8 *)(a16 + 16);
  int v376 = *v415;
  uint64_t v109 = *a19;
  uint64_t v366 = a19[1];
  uint64_t v367 = v109;
  LODWORD(v109) = *((unsigned __int8 *)a19 + 16);
  double v110 = v363;
  uint64_t v111 = *a20;
  uint64_t v306 = a20[1];
  uint64_t v307 = v111;
  int v112 = *((unsigned __int8 *)a20 + 16);
  int v311 = v109;
  int v312 = v112;
  uint64_t v425 = a4;
  uint64_t v113 = v417;
  *(double *)&uint64_t v326 = COERCE_DOUBLE(sub_F0ED0((void (*)(uint64_t *__return_ptr, char *))sub_10C69C));
  int v325 = v114;
  uint64_t v398 = a4;
  uint64_t v424 = a4;
  uint64_t v319 = sub_F0ED0((void (*)(uint64_t *__return_ptr, char *))sub_10C148);
  int v318 = v115;
  uint64_t v323 = v113;
  char v440 = 2;
  if (v391 != 0x18067B1ECLL) {
    goto LABEL_10;
  }
  if (qword_26C3D8 != -1) {
    goto LABEL_228;
  }
  while (1)
  {
    uint64_t v116 = sub_1FB430();
    sub_6DBC8(v116, (uint64_t)qword_2A5C70);
    uint64_t v117 = v108;
    uint64_t v118 = (uint64_t)v106;
    sub_5606C(v117, (uint64_t)v106, &qword_26D638);
    uint64_t v119 = sub_1FB410();
    os_log_type_t v120 = sub_1FBDC0();
    if (os_log_type_enabled(v119, v120))
    {
      uint64_t v121 = (uint8_t *)swift_slowAlloc();
      uint64_t v417 = swift_slowAlloc();
      *(void *)v439 = v417;
      *(_DWORD *)uint64_t v121 = 136315138;
      sub_5606C(v118, v104, &qword_26D638);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(*(void *)&v110 + 48))(v104, 1, v423) == 1)
      {
        sub_55F38(v104, &qword_26D638);
        unint64_t v122 = 0xE500000000000000;
        uint64_t v123 = 0x3E6C696E3CLL;
      }
      else
      {
        uint64_t v416 = (void (*)(char *, uint64_t, uint64_t, uint64_t))sub_1FB020();
        unint64_t v122 = v124;
        (*(void (**)(uint64_t, uint64_t))(*(void *)&v110 + 8))(v104, v423);
        uint64_t v123 = (uint64_t)v416;
      }
      *(void *)&v436[0] = sub_D5890(v123, v122, (uint64_t *)v439);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      sub_55F38(v118, &qword_26D638);
      _os_log_impl(&dword_0, v119, v120, "6449246700 finishedDate=%s", v121, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_55F38(v118, &qword_26D638);
    }

LABEL_10:
    uint64_t v125 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)&v110 + 56);
    uint64_t v126 = v423;
    v125(v409, 1, 1, v423);
    v125(v405, 1, 1, v126);
    uint64_t v417 = *(void *)&v110 + 56;
    uint64_t v416 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v125;
    v125(v395, 1, 1, v126);
    uint64_t v127 = v372;
    LODWORD(v415) = sub_3950C(0xFu, v372);
    BOOL v128 = sub_3950C(0x10u, v127);
    LODWORD(v406) = sub_3950C(0x11u, v127);
    BOOL v129 = sub_3950C(0, v127);
    BOOL v341 = sub_3950C(3u, v127);
    BOOL v334 = sub_3950C(2u, v127);
    BOOL v375 = sub_3950C(1u, v127);
    BOOL v340 = sub_3950C(0xAu, v127);
    BOOL v130 = sub_3950C(7u, v127);
    BOOL v339 = sub_3950C(0xDu, v127);
    BOOL v338 = sub_3950C(0xBu, v127);
    BOOL v337 = sub_3950C(0xCu, v127);
    BOOL v333 = sub_3950C(0xEu, v127);
    BOOL v131 = sub_3950C(0, v127);
    double v132 = v412;
    if (!v131) {
      double v132 = 0.0;
    }
    double v369 = v132;
    unsigned int v374 = !v131 | v418;
    BOOL v133 = sub_3950C(3u, v127);
    uint64_t v134 = v407;
    if (!v133) {
      *(double *)&uint64_t v134 = 0.0;
    }
    double v384 = *(double *)&v134;
    double v135 = v403;
    if (!v133) {
      double v135 = 0.0;
    }
    double v382 = v135;
    int v383 = !v133 | v410;
    uint64_t v136 = v411;
    sub_5606C(v420, v411, &qword_26D638);
    uint64_t v137 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)&v110 + 48);
    uint64_t v400 = *(void *)&v110 + 48;
    v399 = v137;
    int v138 = v137(v136, 1, v126);
    uint64_t v139 = (uint64_t)v408;
    BOOL v335 = v129;
    BOOL v332 = v130;
    if (v138 == 1)
    {
      sub_55F38(v136, &qword_26D638);
    }
    else
    {
      uint64_t v140 = v393;
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v110 + 32))(v393, v136, v423);
      if (v130 || v129)
      {
        sub_1FB040();
        double v142 = v141;
        (*(void (**)(char *, uint64_t))(*(void *)&v110 + 8))(v140, v423);
        int v361 = 0;
        double v362 = v142;
        goto LABEL_22;
      }
      (*(void (**)(char *, uint64_t))(*(void *)&v110 + 8))(v140, v423);
    }
    double v362 = 0.0;
    int v361 = 1;
LABEL_22:
    uint64_t v104 = v128;
    double v412 = *(double *)(v364 + 16);
    if (v412 != 0.0) {
      break;
    }
    double v368 = 0.0;
    double v355 = 0.0;
    double v356 = 0.0;
    double v357 = 0.0;
    double v358 = 0.0;
    double v359 = 0.0;
    double v360 = 0.0;
    *(double *)&v393 = 0.0;
    uint64_t v402 = 0;
    double v144 = 0.0;
    uint64_t v373 = 1;
    int v387 = 1;
    int v354 = 1;
    int v353 = 1;
    int v352 = 1;
    int v351 = 1;
    int v350 = 1;
    int v392 = 1;
    LODWORD(v403) = 1;
    int v349 = 1;
    double v145 = 0.0;
    int v348 = 1;
LABEL_178:
    uint64_t v106 = (char *)a12;
    uint64_t v265 = v327;
    sub_5606C(v371, v327, &qword_26D638);
    uint64_t v266 = v399;
    int v267 = v399(v265, 1, v423);
    int64_t v268 = v331;
    uint64_t v269 = v329;
    if (v267 == 1)
    {
      sub_55F38(v265, &qword_26D638);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v110 + 32))(v329, v265, v423);
      if (sub_3950C(8u, v372))
      {
        sub_1FB040();
        double v271 = v270;
        (*(void (**)(char *, uint64_t))(*(void *)&v110 + 8))(v269, v423);
        LODWORD(v418) = 0;
        double v419 = v271;
        goto LABEL_184;
      }
      (*(void (**)(char *, uint64_t))(*(void *)&v110 + 8))(v269, v423);
    }
    double v419 = 0.0;
    LODWORD(v418) = 1;
LABEL_184:
    uint64_t v272 = v328;
    sub_5606C(a12, v328, &qword_26D638);
    int v273 = v266(v272, 1, v423);
    uint64_t v108 = LODWORD(v403);
    if (v273 == 1)
    {
      sub_55F38(v272, &qword_26D638);
    }
    else
    {
      (*(void (**)(char *, uint64_t, uint64_t))(*(void *)&v110 + 32))(v268, v272, v423);
      if (sub_3950C(9u, v372))
      {
        sub_1FB040();
        uint64_t v275 = v274;
        (*(void (**)(char *, uint64_t))(*(void *)&v110 + 8))(v268, v423);
        LODWORD(v416) = 0;
        uint64_t v417 = v275;
        goto LABEL_190;
      }
      (*(void (**)(char *, uint64_t))(*(void *)&v110 + 8))(v268, v423);
    }
    uint64_t v417 = 0;
    LODWORD(v416) = 1;
LABEL_190:
    uint64_t v276 = v402;
    if (v415 & v108) {
      uint64_t v276 = 0;
    }
    uint64_t v277 = v330;
    uint64_t v420 = v276;
    if ((v104 & 1) == 0) {
      goto LABEL_195;
    }
    sub_5606C(v405, v330, &qword_26D638);
    if (v266(v277, 1, v423) == 1)
    {
      sub_55F38(v277, &qword_26D638);
LABEL_195:
      uint64_t v421 = 0;
      unint64_t v278 = v393;
      goto LABEL_204;
    }
    unsigned int v314 = v104;
    uint64_t v422 = *(void (**)(char *, uint64_t, uint64_t))(*(void *)&v110 + 32);
    v422(v313, v277, v423);
    sub_1FB0D0();
    uint64_t v279 = (void (*)(char *, uint64_t))v396;
    uint64_t v280 = v317 + OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone;
    Date.beginningOfDay(timeZone:)(v317 + OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone, (uint64_t)v396);
    uint64_t v421 = 0;
    uint64_t v281 = (void (**)(char *, uint64_t))(*(void *)&v110 + 8);
    v414 = (char *)a12;
    uint64_t v282 = (uint64_t)v401;
    while (1)
    {
      uint64_t v283 = v394;
      sub_1FB050();
      Date.beginningOfDay(timeZone:)(v280, v282);
      unint64_t v284 = (char *)v279;
      uint64_t v279 = *v281;
      unint64_t v285 = v283;
      uint64_t v286 = v423;
      (*v281)(v285, v423);
      v279(v284, v286);
      v422(v284, v282, v286);
      if (sub_1FB0C0() == 1) {
        break;
      }
      uint64_t v279 = (void (*)(char *, uint64_t))v396;
      if (*(void *)(a21 + 16))
      {
        sub_4C4B8((uint64_t)v396);
        if (v287)
        {
          BOOL v243 = __OFADD__(v421++, 1);
          if (v243)
          {
            __break(1u);
            break;
          }
        }
      }
    }
    uint64_t v288 = v423;
    v279((char *)v396, v423);
    v279(v397, v288);
    v279(v313, v288);
    uint64_t v104 = v314;
    uint64_t v108 = LODWORD(v403);
    unint64_t v278 = v393;
    uint64_t v106 = v414;
LABEL_204:
    uint64_t v31 = v406;
    char v289 = v392;
    if (v406 & v392) {
      double v110 = 0.0;
    }
    else {
      double v110 = *(double *)&v278;
    }
    sub_1FB040();
    double v291 = v290;
    double v292 = *(double *)&v326;
    double v293 = 0.0;
    if (v325) {
      double v292 = 0.0;
    }
    if (v292 <= v291)
    {
      if (v348)
      {
        uint64_t v294 = (uint64_t)v106;
        if (v311)
        {
          uint64_t v366 = 0;
          uint64_t v367 = 0;
          char v295 = -1;
          double v145 = 0.0;
        }
        else
        {
          char v295 = 1;
          double v145 = v292;
          double v293 = v291;
        }
      }
      else
      {
        uint64_t v294 = (uint64_t)v106;
        uint64_t v366 = 0;
        uint64_t v367 = 0;
        char v295 = 0;
      }
      char v296 = (v415 ^ 1) & v108;
      char v297 = v104 ^ 1;
      char v298 = (v31 ^ 1) & v289;
      if (v349)
      {
        if (!v312)
        {
          char v301 = 1;
          double v144 = v292;
          uint64_t v300 = v306;
          uint64_t v299 = v307;
LABEL_221:
          sub_102418(*(double *)&v319, v318 & 1, v320, v371, v398, v294, (uint64_t)v439, a10, (unsigned __int8 *)&v440);
          v436[0] = *(_OWORD *)v439;
          v436[1] = *(_OWORD *)&v439[16];
          uint64_t v437 = *(void *)&v439[32];
          char v438 = v439[40];
          *(double *)&long long v434 = v384;
          *((double *)&v434 + 1) = v382;
          char v435 = v383 & 1;
          *(double *)&long long v430 = v145;
          *((double *)&v430 + 1) = v293;
          uint64_t v431 = v367;
          uint64_t v432 = v366;
          char v433 = v295;
          *(double *)&long long v426 = v144;
          *((double *)&v426 + 1) = v291;
          uint64_t v427 = v299;
          uint64_t v428 = v300;
          char v429 = v301;
          uint64_t v302 = v323;
          BookHistory.init(storeID:readFractionHighWaterMark:sampleReadFractionHighWaterMark:markedFinishedInfo:reviewInfo:secondsSinceMoreLikeThis:secondsSinceLessLikeThis:secondsSinceExplicitDecline:secondsSinceLastRead:secondsSincePurchased:secondsSinceFirstDownloadedViaFamilySharing:addedToWantToRead:secondsSinceRemovedFromWantToRead:sampled:secondsSinceProductPageViewed:secondsSinceFirstRecommended:daysRecommendedCount:consecutiveDaysNotRecommendedCount:daysRecommendationPassedOverCount:)(v391, v369, v374 & 1, v368, v373 & 1, (uint64_t *)v436, &v434, v360, (uint64_t)v439, v350 & 1, v359, v351 & 1, v358, v352 & 1, v362, v361 & 1, v419, (char)v418, *(double *)&v417,
            (char)v416,
            &v430,
            v357,
            v353 & 1,
            &v426,
            v356,
            v354 & 1,
            v355,
            v387 & 1,
            *(double *)&v420,
            v296 & 1,
            *(double *)&v421,
            v297 & 1,
            v110,
            v298 & 1);
          sub_55F38(v395, &qword_26D638);
          sub_55F38(v405, &qword_26D638);
          uint64_t result = (void *)sub_55F38(v409, &qword_26D638);
          if (!v302) {
            return memcpy(v308, v439, 0x179uLL);
          }
          return result;
        }
        uint64_t v299 = 0;
        uint64_t v300 = 0;
        char v301 = -1;
        double v144 = 0.0;
      }
      else
      {
        uint64_t v299 = 0;
        uint64_t v300 = 0;
        char v301 = 0;
      }
      double v291 = 0.0;
      goto LABEL_221;
    }
    __break(1u);
LABEL_228:
    swift_once();
  }
  unsigned int v314 = v128;
  uint64_t v347 = a22;
  int v316 = a18;
  uint64_t v315 = v317 + OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone;
  uint64_t v411 = v364 + ((*(unsigned __int8 *)(v402 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v402 + 80));
  uint64_t v418 = (void (**)(char *, uint64_t))(*(void *)&v110 + 8);
  v407 = (void (**)(void))(*(void *)&v110 + 32);
  v385 = (void (**)(char *, uint64_t, uint64_t))(*(void *)&v110 + 16);
  int v370 = v415 | v406;
  uint64_t v410 = *(void *)(v402 + 72);
  swift_bridgeObjectRetain();
  double v368 = 0.0;
  double v355 = 0.0;
  double v356 = 0.0;
  double v357 = 0.0;
  double v358 = 0.0;
  double v359 = 0.0;
  double v360 = 0.0;
  *(double *)&v393 = 0.0;
  uint64_t v402 = 0;
  uint64_t v143 = 0;
  uint64_t v373 = 1;
  int v387 = 1;
  int v354 = 1;
  int v353 = 1;
  int v352 = 1;
  int v351 = 1;
  int v350 = 1;
  int v392 = 1;
  LODWORD(v403) = 1;
  double v144 = 0.0;
  int v349 = 1;
  double v145 = 0.0;
  int v348 = 1;
  uint64_t v146 = v413;
  uint64_t v390 = v31;
  while (1)
  {
    uint64_t v420 = v143 + 1;
    sub_10C188(v411 + v410 * v143, v31, (uint64_t (*)(void))type metadata accessor for Event);
    uint64_t v147 = v423;
    uint64_t v148 = v416;
    v416((char *)v139, 1, 1, v423);
    v148((char *)v422, 1, 1, v147);
    uint64_t v149 = v31;
    uint64_t v150 = v31;
    uint64_t v151 = (uint64_t)v414;
    sub_10C188(v150, (uint64_t)v414, (uint64_t (*)(void))type metadata accessor for Event);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v153 = *(void *)&v419;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        swift_bridgeObjectRelease();
        uint64_t v158 = (int *)sub_12124(&qword_26E2F0);
        int v159 = *(unsigned __int8 *)(v151 + v158[16]);
        double v160 = *(double *)(v151 + v158[20]);
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v380, v151 + v158[12], v423);
        if (v159 != 1)
        {
          if (v335)
          {
            if (v374)
            {
              if (v160 < 0.0) {
                double v160 = 0.0;
              }
              BOOL v207 = v332;
              uint64_t v31 = v149;
              uint64_t v161 = (uint64_t)v422;
            }
            else
            {
              BOOL v207 = v332;
              uint64_t v31 = v149;
              uint64_t v161 = (uint64_t)v422;
              if (v160 < v369) {
                double v160 = v369;
              }
            }
            unsigned int v374 = 0;
            double v369 = v160;
            if (v207)
            {
LABEL_117:
              sub_1FB040();
              int v361 = 0;
              double v362 = v209;
            }
          }
          else
          {
            uint64_t v31 = v149;
            uint64_t v161 = (uint64_t)v422;
            if (v332) {
              goto LABEL_117;
            }
          }
          uint64_t v153 = *(void *)&v419;
          goto LABEL_119;
        }
        uint64_t v31 = v149;
        if (v334)
        {
          uint64_t v153 = *(void *)&v419;
          if (v373)
          {
            if (v160 < 0.0) {
              double v160 = 0.0;
            }
            uint64_t v161 = (uint64_t)v422;
          }
          else
          {
            uint64_t v161 = (uint64_t)v422;
            if (v160 < v368) {
              double v160 = v368;
            }
          }
          uint64_t v373 = 0;
          double v368 = v160;
        }
        else
        {
          uint64_t v153 = *(void *)&v419;
          uint64_t v161 = (uint64_t)v422;
        }
LABEL_119:
        Swift::Int v155 = *v418;
        (*v418)(v380, v423);
LABEL_126:
        sub_10C188(v31, v153, (uint64_t (*)(void))type metadata accessor for Event);
        if ((swift_getEnumCaseMultiPayload() & 0xFFFFFFFE) != 2)
        {
          sub_55F38(v161, &qword_26D638);
          sub_10C1F0(v31, (uint64_t (*)(void))type metadata accessor for Event);
          if (v415)
          {
            uint64_t v219 = v409;
            sub_55F38(v409, &qword_26D638);
            uint64_t v220 = v219;
            uint64_t v153 = *(void *)&v419;
            v416((char *)v220, 1, 1, v423);
            uint64_t v402 = 0;
            LODWORD(v403) = 0;
          }
          uint64_t v146 = v413;
          if (v406)
          {
            uint64_t v221 = v395;
            sub_55F38(v395, &qword_26D638);
            uint64_t v222 = v221;
            uint64_t v153 = *(void *)&v419;
            v416((char *)v222, 1, 1, v423);
            *(double *)&v393 = 0.0;
            int v392 = 0;
          }
          sub_10C1F0(v153, (uint64_t (*)(void))type metadata accessor for Event);
          goto LABEL_25;
        }
        uint64_t v211 = v139;
        uint64_t v212 = v405;
        sub_55F38(v405, &qword_26D638);
        swift_bridgeObjectRelease();
        uint64_t v213 = sub_12124(&qword_26E310);
        v155((char *)(v153 + *(int *)(v213 + 48)), v423);
        sub_5606C(v211, v212, &qword_26D638);
        if ((v415 & 1) == 0)
        {
          uint64_t v223 = (uint64_t)v404;
          uint64_t v139 = (uint64_t)v408;
          uint64_t v218 = (uint64_t)v422;
          goto LABEL_139;
        }
        uint64_t v214 = v409;
        uint64_t v215 = v389;
        sub_5606C(v409, v389, &qword_26D638);
        uint64_t v216 = v399;
        if (v399(v215, 1, v423) == 1)
        {
          sub_55F38(v214, &qword_26D638);
          LODWORD(v403) = 0;
          uint64_t v217 = v215;
          uint64_t v402 = 1;
          uint64_t v139 = (uint64_t)v408;
          uint64_t v218 = (uint64_t)v422;
        }
        else
        {
          uint64_t v224 = v379;
          uint64_t v225 = v215;
          uint64_t v226 = v423;
          ((void (*)(char *, uint64_t, uint64_t))*v407)(v379, v225, v423);
          uint64_t v139 = (uint64_t)v408;
          int v227 = v216((uint64_t)v408, 1, v226);
          uint64_t v218 = (uint64_t)v422;
          if (!v227)
          {
            uint64_t v236 = v139;
            long long v237 = v224;
            long long v238 = v401;
            uint64_t v239 = v423;
            (*v385)(v401, v236, v423);
            sub_1FB040();
            double v241 = v240;
            v155(v238, v239);
            v155(v237, v239);
            sub_55F38(v409, &qword_26D638);
            uint64_t v31 = v390;
            if (v241 <= 86400.0)
            {
              uint64_t v223 = (uint64_t)v404;
              uint64_t v139 = (uint64_t)v408;
            }
            else
            {
              uint64_t v242 = v402;
              if (LOBYTE(v403)) {
                uint64_t v242 = 0;
              }
              BOOL v243 = __OFADD__(v242, 1);
              uint64_t v244 = v242 + 1;
              uint64_t v223 = (uint64_t)v404;
              if (v243)
              {
                __break(1u);
LABEL_230:
                __break(1u);
                JUMPOUT(0x1023D4);
              }
              uint64_t v402 = v244;
              LODWORD(v403) = 0;
              uint64_t v139 = (uint64_t)v408;
            }
            goto LABEL_138;
          }
          v155(v224, v423);
          uint64_t v217 = v409;
        }
        uint64_t v31 = v390;
        sub_55F38(v217, &qword_26D638);
        uint64_t v223 = (uint64_t)v404;
LABEL_138:
        sub_5606C(v218, v409, &qword_26D638);
LABEL_139:
        sub_10C188(v31, v223, (uint64_t (*)(void))type metadata accessor for Event);
        if (swift_getEnumCaseMultiPayload() != 2)
        {
          sub_55F38(v218, &qword_26D638);
          sub_10C1F0(v31, (uint64_t (*)(void))type metadata accessor for Event);
          uint64_t v230 = v223;
          goto LABEL_163;
        }
        swift_bridgeObjectRelease();
        uint64_t v228 = sub_12124(&qword_26E310);
        v155((char *)(v223 + *(int *)(v228 + 48)), v423);
        if ((v406 & 1) == 0) {
          goto LABEL_162;
        }
        uint64_t v229 = v378;
        sub_5606C(v218, v378, &qword_26D638);
        if (v399(v229, 1, v423) != 1)
        {
          uint64_t v231 = *v407;
          uint64_t v232 = (uint64_t)v377;
          ((void (*)(char *, uint64_t, uint64_t))*v407)(v377, v229, v423);
          if (*(void *)(v347 + 16))
          {
            unint64_t v233 = sub_4C4B8(v232);
            long long v234 = _swiftEmptySetSingleton;
            if (v235)
            {
              long long v234 = *(void **)(*(void *)(v347 + 56) + 8 * v233);
              swift_bridgeObjectRetain();
            }
            if (!v234[2]) {
              goto LABEL_161;
            }
LABEL_156:
            uint64_t v245 = sub_1FC7D0();
            uint64_t v246 = -1 << *((unsigned char *)v234 + 32);
            unint64_t v247 = v245 & ~v246;
            if (((*(void *)((char *)v234 + ((v247 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v247) & 1) == 0) {
              goto LABEL_164;
            }
            uint64_t v248 = v234[6];
            if (*(void *)(v248 + 8 * v247) != v391)
            {
              uint64_t v249 = ~v246;
              while (1)
              {
                unint64_t v247 = (v247 + 1) & v249;
                if (((*(void *)((char *)v234 + ((v247 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v247) & 1) == 0) {
                  break;
                }
                if (*(void *)(v248 + 8 * v247) == v391) {
                  goto LABEL_161;
                }
              }
LABEL_164:
              long long v305 = v231;
              swift_bridgeObjectRelease();
              uint64_t v250 = v395;
              uint64_t v251 = v310;
              sub_5606C(v395, v310, &qword_26D638);
              uint64_t v252 = (unsigned int (*)(uint64_t, uint64_t, uint64_t))v399;
              if (v399(v251, 1, v423) == 1)
              {
                sub_55F38(v218, &qword_26D638);
                uint64_t v31 = v390;
                sub_10C1F0(v390, (uint64_t (*)(void))type metadata accessor for Event);
                sub_55F38(v250, &qword_26D638);
                int v392 = 0;
                uint64_t v253 = v251;
                v393 = (unsigned char *)(&dword_0 + 1);
                goto LABEL_168;
              }
              uint64_t v254 = v309;
              uint64_t v255 = v423;
              v305();
              if (v252(v139, 1, v255))
              {
                v155(v254, v423);
                sub_55F38(v218, &qword_26D638);
                uint64_t v31 = v390;
                sub_10C1F0(v390, (uint64_t (*)(void))type metadata accessor for Event);
                uint64_t v253 = v395;
LABEL_168:
                uint64_t v256 = v305;
                sub_55F38(v253, &qword_26D638);
                uint64_t v257 = v377;
                uint64_t v146 = v413;
              }
              else
              {
                unint64_t v260 = v401;
                uint64_t v261 = v423;
                (*v385)(v401, v139, v423);
                sub_1FB040();
                double v263 = v262;
                v155(v260, v261);
                v155(v309, v261);
                sub_55F38(v218, &qword_26D638);
                uint64_t v31 = v390;
                sub_10C1F0(v390, (uint64_t (*)(void))type metadata accessor for Event);
                sub_55F38(v395, &qword_26D638);
                if (v263 <= 86400.0)
                {
                  uint64_t v257 = v377;
                  uint64_t v146 = v413;
                  uint64_t v256 = v305;
                }
                else
                {
                  uint64_t v264 = v393;
                  if (v392) {
                    uint64_t v264 = 0;
                  }
                  v393 = v264 + 1;
                  uint64_t v146 = v413;
                  uint64_t v256 = v305;
                  if (__OFADD__(v264, 1)) {
                    goto LABEL_230;
                  }
                  int v392 = 0;
                  uint64_t v257 = v377;
                }
              }
              uint64_t v258 = v395;
              uint64_t v259 = v423;
              ((void (*)(uint64_t, char *, uint64_t))v256)(v395, v257, v423);
              v416((char *)v258, 0, 1, v259);
              goto LABEL_25;
            }
            goto LABEL_161;
          }
          long long v234 = _swiftEmptySetSingleton;
          if (_swiftEmptySetSingleton[2]) {
            goto LABEL_156;
          }
LABEL_161:
          swift_bridgeObjectRelease();
          v155(v377, v423);
LABEL_162:
          sub_55F38(v218, &qword_26D638);
          uint64_t v230 = v31;
LABEL_163:
          sub_10C1F0(v230, (uint64_t (*)(void))type metadata accessor for Event);
          uint64_t v146 = v413;
          goto LABEL_25;
        }
        sub_55F38(v218, &qword_26D638);
        sub_10C1F0(v31, (uint64_t (*)(void))type metadata accessor for Event);
        sub_55F38(v229, &qword_26D638);
        uint64_t v146 = v413;
LABEL_25:
        sub_55F38(v139, &qword_26D638);
        uint64_t v143 = v420;
        if (v420 == *(void *)&v412)
        {
          swift_bridgeObjectRelease();
          double v110 = v363;
          uint64_t v104 = v314;
          goto LABEL_178;
        }
        break;
      case 2:
        swift_bridgeObjectRelease();
        uint64_t v162 = sub_12124(&qword_26E310);
        int v163 = *(unsigned __int8 *)(v151 + *(int *)(v162 + 64));
        uint64_t v164 = v386;
        uint64_t v165 = v423;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v386, v151 + *(int *)(v162 + 48), v423);
        sub_55F38((uint64_t)v408, &qword_26D638);
        uint64_t v166 = v164;
        uint64_t v139 = (uint64_t)v408;
        (*v385)(v408, (uint64_t)v166, v165);
        v416((char *)v139, 0, 1, v165);
        uint64_t v161 = (uint64_t)v422;
        if (v370)
        {
          uint64_t v167 = v336;
          Date.beginningOfDay(timeZone:)(v315, v336);
          uint64_t v153 = *(void *)&v419;
          sub_55F38(v161, &qword_26D638);
          v416((char *)v167, 0, 1, v423);
          sub_55844(v167, v161, &qword_26D638);
        }
        uint64_t v31 = v149;
        if (v163 != 2)
        {
          if (v163 & v333 & v387)
          {
            sub_1FB040();
            uint64_t v153 = *(void *)&v419;
            int v387 = 0;
            double v355 = v168;
          }
          else
          {
            v387 &= v163 & v333 ^ 1;
          }
        }
        Swift::Int v155 = *v418;
        (*v418)(v386, v423);
        goto LABEL_126;
      case 3:
        swift_bridgeObjectRelease();
        uint64_t v169 = sub_12124(&qword_26E310);
        int v170 = *(unsigned __int8 *)(v151 + *(int *)(v169 + 64));
        long long v171 = v388;
        uint64_t v172 = v423;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v388, v151 + *(int *)(v169 + 48), v423);
        sub_55F38((uint64_t)v408, &qword_26D638);
        long long v173 = v171;
        uint64_t v139 = (uint64_t)v408;
        (*v385)(v408, (uint64_t)v173, v172);
        v416((char *)v139, 0, 1, v172);
        if (v339)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          int v354 = 0;
          double v356 = v174;
        }
        uint64_t v31 = v149;
        uint64_t v161 = (uint64_t)v422;
        if (v370)
        {
          uint64_t v175 = v336;
          Date.beginningOfDay(timeZone:)(v315, v336);
          uint64_t v153 = *(void *)&v419;
          sub_55F38(v161, &qword_26D638);
          v416((char *)v175, 0, 1, v423);
          sub_55844(v175, v161, &qword_26D638);
        }
        if (v170 != 2)
        {
          if (v170 & v333 & v387)
          {
            sub_1FB040();
            uint64_t v153 = *(void *)&v419;
            int v387 = 0;
            double v355 = v176;
          }
          else
          {
            v387 &= v170 & v333 ^ 1;
          }
        }
        Swift::Int v155 = *v418;
        (*v418)(v388, v423);
        goto LABEL_126;
      case 4:
        swift_bridgeObjectRelease();
        unint64_t v177 = (int *)sub_12124(&qword_26E2F0);
        int v178 = *(unsigned __int8 *)(v151 + v177[16]);
        double v179 = *(double *)(v151 + v177[20]);
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v381, v151 + v177[12], v423);
        uint64_t v31 = v149;
        if (v178 != 1)
        {
          if (v335)
          {
            if (v374)
            {
              if (v179 < 0.0) {
                double v179 = 0.0;
              }
              BOOL v208 = v332;
              uint64_t v161 = (uint64_t)v422;
            }
            else
            {
              BOOL v208 = v332;
              uint64_t v161 = (uint64_t)v422;
              if (v179 < v369) {
                double v179 = v369;
              }
            }
            unsigned int v374 = 0;
            double v369 = v179;
            if (v208)
            {
LABEL_123:
              sub_1FB040();
              int v361 = 0;
              double v362 = v210;
            }
          }
          else
          {
            uint64_t v161 = (uint64_t)v422;
            if (v332) {
              goto LABEL_123;
            }
          }
          uint64_t v153 = *(void *)&v419;
          goto LABEL_125;
        }
        if (v334)
        {
          uint64_t v153 = *(void *)&v419;
          if (v373)
          {
            if (v179 < 0.0) {
              double v179 = 0.0;
            }
            uint64_t v161 = (uint64_t)v422;
          }
          else
          {
            uint64_t v161 = (uint64_t)v422;
            if (v179 < v368) {
              double v179 = v368;
            }
          }
          uint64_t v373 = 0;
          double v368 = v179;
        }
        else
        {
          uint64_t v153 = *(void *)&v419;
          uint64_t v161 = (uint64_t)v422;
        }
LABEL_125:
        Swift::Int v155 = *v418;
        (*v418)(v381, v423);
        goto LABEL_126;
      case 5:
        swift_bridgeObjectRelease();
        uint64_t v180 = sub_12124(&qword_26E300);
        uint64_t v146 = v343;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v343, v151 + *(int *)(v180 + 48), v423);
        uint64_t v31 = v149;
        if (v337)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          double v144 = v181;
          int v349 = 0;
        }
        goto LABEL_82;
      case 6:
        swift_bridgeObjectRelease();
        uint64_t v182 = sub_12124(&qword_26E300);
        unint64_t v183 = v346;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v346, v151 + *(int *)(v182 + 48), v423);
        uint64_t v31 = v149;
        if (v316)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          int v352 = 0;
          double v358 = v184;
        }
        long long v185 = v418;
        uint64_t v186 = v183;
        goto LABEL_84;
      case 7:
      case 12:
      case 15:
        swift_bridgeObjectRelease();
        uint64_t v154 = sub_12124(&qword_26E300);
        Swift::Int v155 = *v418;
        (*v418)((char *)(v151 + *(int *)(v154 + 48)), v423);
        goto LABEL_86;
      case 8:
        swift_bridgeObjectRelease();
        uint64_t v187 = sub_12124(&qword_26E308);
        uint64_t v188 = v151;
        uint64_t v31 = v149;
        if (v375)
        {
          int v189 = *(unsigned __int8 *)(v188 + *(int *)(v187 + 64));
          if (v189 == 2) {
            char v190 = 2;
          }
          else {
            char v190 = v189 & 1;
          }
          char v440 = v190;
        }
        uint64_t v186 = (char *)(v188 + *(int *)(v187 + 48));
        goto LABEL_83;
      case 9:
        swift_bridgeObjectRelease();
        uint64_t v31 = v149;
        if (v375) {
          char v440 = 2;
        }
        uint64_t v191 = sub_12124(&qword_26E300);
        uint64_t v186 = &v414[*(int *)(v191 + 48)];
        goto LABEL_83;
      case 10:
        swift_bridgeObjectRelease();
        uint64_t v192 = sub_12124(&qword_26E2F8);
        double v193 = *(double *)(v151 + *(int *)(v192 + 64));
        uint64_t v194 = v365;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v365, v151 + *(int *)(v192 + 48), v423);
        uint64_t v31 = v149;
        uint64_t v161 = (uint64_t)v422;
        if (!v341) {
          goto LABEL_75;
        }
        double v195 = v193 + -0.5 + v193 + -0.5;
        sub_1FB040();
        BOOL v197 = v195 <= 1.0 && v195 >= -1.0;
        if (!v197)
        {
          sub_10BFC0();
          swift_allocError();
          *(double *)uint64_t v304 = v195;
          goto LABEL_226;
        }
        double v198 = v196;
        if (v196 >= 0.0)
        {
          int v383 = 0;
          double v384 = v195;
          double v382 = v196;
          uint64_t v153 = *(void *)&v419;
          uint64_t v194 = v365;
LABEL_75:
          unsigned __int8 v199 = v194;
          Swift::Int v155 = *v418;
          (*v418)(v199, v423);
          goto LABEL_126;
        }
        sub_10BFC0();
        swift_allocError();
        *(double *)uint64_t v304 = v198;
LABEL_226:
        *(unsigned char *)(v304 + 8) = v197;
        swift_willThrow();
        (*v418)(v365, v423);
        sub_55F38(v161, &qword_26D638);
        sub_10C1F0(v149, (uint64_t (*)(void))type metadata accessor for Event);
        swift_bridgeObjectRelease();
        sub_55F38(v395, &qword_26D638);
        sub_55F38(v405, &qword_26D638);
        sub_55F38(v409, &qword_26D638);
        return (void *)sub_55F38(v139, &qword_26D638);
      case 11:
        swift_bridgeObjectRelease();
        uint64_t v200 = sub_12124(&qword_26E300);
        uint64_t v146 = v344;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v344, v151 + *(int *)(v200 + 48), v423);
        uint64_t v31 = v149;
        if (v338)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          int v353 = 0;
          double v357 = v201;
        }
        goto LABEL_82;
      case 13:
        swift_bridgeObjectRelease();
        uint64_t v202 = sub_12124(&qword_26E300);
        uint64_t v146 = v345;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v345, v151 + *(int *)(v202 + 48), v423);
        uint64_t v31 = v149;
        if (v376 == 2)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          int v351 = 0;
          double v359 = v203;
        }
        goto LABEL_82;
      case 14:
        swift_bridgeObjectRelease();
        uint64_t v204 = sub_12124(&qword_26E300);
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v146, v151 + *(int *)(v204 + 48), v423);
        uint64_t v31 = v149;
        if (v376 == 1)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          int v350 = 0;
          double v360 = v205;
        }
        goto LABEL_82;
      case 16:
        swift_bridgeObjectRelease();
        uint64_t v206 = sub_12124(&qword_26E300);
        Swift::Int v155 = *v418;
        (*v418)((char *)(v151 + *(int *)(v206 + 48)), v423);
        double v384 = 0.0;
        double v382 = 0.0;
        int v383 = 1;
LABEL_86:
        uint64_t v31 = v149;
        goto LABEL_87;
      default:
        swift_bridgeObjectRelease();
        uint64_t v156 = sub_12124(&qword_26E300);
        uint64_t v146 = v342;
        ((void (*)(char *, uint64_t, uint64_t))*v407)(v342, v151 + *(int *)(v156 + 48), v423);
        uint64_t v31 = v149;
        if (v340)
        {
          sub_1FB040();
          uint64_t v153 = *(void *)&v419;
          double v145 = v157;
          int v348 = 0;
        }
LABEL_82:
        uint64_t v186 = v146;
LABEL_83:
        long long v185 = v418;
LABEL_84:
        Swift::Int v155 = *v185;
        (*v185)(v186, v423);
LABEL_87:
        uint64_t v161 = (uint64_t)v422;
        goto LABEL_126;
    }
  }
}