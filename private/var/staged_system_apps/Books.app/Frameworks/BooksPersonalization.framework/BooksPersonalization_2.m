uint64_t sub_102418@<X0>(double a1@<X0>, char a2@<W1>, int a3@<W4>, uint64_t a4@<X5>, uint64_t a5@<X6>, uint64_t a6@<X7>, uint64_t a7@<X8>, double a8@<D1>, unsigned __int8 *a9)
{
  uint64_t v14;
  uint64_t v15;
  uint64_t v16;
  char *v17;
  uint64_t v18;
  char *v19;
  uint64_t v20;
  uint64_t v21;
  uint64_t v22;
  char *v23;
  uint64_t v24;
  uint64_t v25;
  char *v26;
  uint64_t result;
  uint64_t v28;
  uint64_t v29;
  char *v30;
  uint64_t v31;
  uint64_t v32;
  unsigned int (*v33)(char *, uint64_t, uint64_t);
  double v34;
  double v35;
  void (*v36)(char *, uint64_t);
  char *v37;
  double v38;
  uint64_t v39;
  uint64_t v40;
  uint64_t v41;
  int v42;

  v40 = a6;
  v41 = a5;
  v42 = a3;
  v14 = sub_12124(&qword_26D638);
  v15 = __chkstk_darwin(v14 - 8);
  v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  v19 = (char *)&v39 - v18;
  v20 = sub_1FB0E0();
  v21 = __chkstk_darwin(v20);
  v23 = (char *)&v39 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  v24 = __chkstk_darwin(v21);
  v26 = (char *)&v39 - v25;
  result = __chkstk_darwin(v24);
  v30 = (char *)&v39 - v29;
  if ((a2 & 1) == 0) {
    goto LABEL_14;
  }
  if (v42)
  {
    *(void *)(a7 + 32) = 0;
    *(_OWORD *)a7 = 0u;
    *(_OWORD *)(a7 + 16) = 0u;
    *(unsigned char *)(a7 + 40) = -1;
    return result;
  }
  v31 = a4;
  v32 = v28;
  sub_5606C(v31, (uint64_t)v19, &qword_26D638);
  v33 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48);
  if (v33(v19, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v30, v19, v20);
    sub_1FB050();
    sub_1FB040();
    v35 = v34;
    v36 = *(void (**)(char *, uint64_t))(v32 + 8);
    v36(v23, v20);
    if (v35 < 0.0) {
      v35 = 0.0;
    }
    v37 = v30;
    goto LABEL_13;
  }
  sub_55F38((uint64_t)v19, &qword_26D638);
  sub_5606C(v40, (uint64_t)v17, &qword_26D638);
  if (v33(v17, 1, v20) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v32 + 32))(v26, v17, v20);
    sub_1FB050();
    sub_1FB040();
    v35 = v38;
    v36 = *(void (**)(char *, uint64_t))(v32 + 8);
    v36(v23, v20);
    if (v35 < 0.0) {
      v35 = 0.0;
    }
    v37 = v26;
LABEL_13:
    result = ((uint64_t (*)(char *, uint64_t))v36)(v37, v20);
    a1 = v35;
    goto LABEL_14;
  }
  result = sub_55F38((uint64_t)v17, &qword_26D638);
  a1 = a8;
LABEL_14:
  *(void *)a7 = *a9;
  *(double *)(a7 + 8) = a1;
  *(void *)(a7 + 24) = 0;
  *(void *)(a7 + 32) = 0;
  *(void *)(a7 + 16) = 0;
  *(unsigned char *)(a7 + 40) = 0;
  return result;
}

uint64_t sub_10276C()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);
  sub_1264C(v0 + 136);
  uint64_t v1 = v0 + OBJC_IVAR____TtC20BooksPersonalization18BookHistoryService_timeZone;
  uint64_t v2 = sub_1FB220();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_10282C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_B06F4;
  return sub_F96EC(a1, a2, a3, a4);
}

BOOL BookHistory.isEligibleForRecommendation(with:)(char *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  long long v3 = *(_OWORD *)(__src + 328);
  long long v4 = *(_OWORD *)(__src + 344);
  uint64_t v54 = v1[1];
  uint64_t v55 = *v1;
  char v5 = *((unsigned char *)v1 + 16);
  v6 = (_DWORD *)((char *)v1 + 17);
  v190[0] = *(_DWORD *)((char *)v1 + 17);
  *(_DWORD *)((char *)v190 + 3) = *((_DWORD *)v1 + 5);
  uint64_t v76 = v1[3];
  char v7 = *((unsigned char *)v1 + 32);
  v8 = (_DWORD *)((char *)v1 + 33);
  int v9 = *(_DWORD *)((char *)v1 + 33);
  *(_DWORD *)((char *)v188 + 3) = *((_DWORD *)v1 + 9);
  v188[0] = v9;
  uint64_t v72 = v1[6];
  uint64_t v73 = v1[5];
  uint64_t v70 = v1[8];
  uint64_t v71 = v1[7];
  uint64_t v69 = v1[9];
  int v89 = *((unsigned __int8 *)v1 + 80);
  v10 = (_DWORD *)((char *)v1 + 81);
  int v11 = *(_DWORD *)((char *)v1 + 81);
  *(_DWORD *)((char *)v187 + 3) = *((_DWORD *)v1 + 21);
  v187[0] = v11;
  uint64_t v63 = v1[12];
  uint64_t v64 = v1[11];
  char v12 = *((unsigned char *)v1 + 104);
  v13 = (_DWORD *)((char *)v1 + 105);
  int v14 = *(_DWORD *)((char *)v1 + 105);
  *(_DWORD *)((char *)v185 + 3) = *((_DWORD *)v1 + 27);
  v185[0] = v14;
  uint64_t v15 = v1[14];
  char v16 = *((unsigned char *)v1 + 120);
  v17 = (_DWORD *)((char *)v1 + 121);
  int v18 = *(_DWORD *)((char *)v1 + 121);
  *(_DWORD *)((char *)v183 + 3) = *((_DWORD *)v1 + 31);
  v183[0] = v18;
  uint64_t v52 = v1[16];
  uint64_t v53 = v15;
  char v91 = *((unsigned char *)v1 + 136);
  v19 = (_DWORD *)((char *)v1 + 137);
  int v20 = *(_DWORD *)((char *)v1 + 137);
  *(_DWORD *)((char *)v182 + 3) = *((_DWORD *)v1 + 35);
  v182[0] = v20;
  v21 = (_DWORD *)((char *)v1 + 153);
  int v22 = *(_DWORD *)((char *)v1 + 153);
  uint64_t v75 = v1[18];
  *(_DWORD *)((char *)v181 + 3) = *((_DWORD *)v1 + 39);
  v23 = (_DWORD *)((char *)v1 + 169);
  int v24 = *(_DWORD *)((char *)v1 + 169);
  v181[0] = v22;
  *(_DWORD *)((char *)v180 + 3) = *((_DWORD *)v1 + 43);
  v25 = (_DWORD *)((char *)v1 + 185);
  int v26 = *(_DWORD *)((char *)v1 + 185);
  v180[0] = v24;
  *(_DWORD *)((char *)v179 + 3) = *((_DWORD *)v1 + 47);
  v179[0] = v26;
  *(_DWORD *)((char *)v178 + 3) = *((_DWORD *)v1 + 51);
  v27 = (_DWORD *)((char *)v1 + 201);
  v178[0] = *(_DWORD *)((char *)v1 + 201);
  char v86 = *((unsigned char *)v1 + 152);
  uint64_t v60 = v1[20];
  char v87 = *((unsigned char *)v1 + 168);
  uint64_t v65 = v1[22];
  char v88 = *((unsigned char *)v1 + 184);
  uint64_t v68 = v1[24];
  char v90 = *((unsigned char *)v1 + 200);
  double v83 = *((double *)v1 + 26);
  double v79 = *((double *)v1 + 27);
  uint64_t v80 = v1[28];
  uint64_t v74 = v1[29];
  int v85 = *((unsigned __int8 *)v1 + 240);
  int v29 = *(_DWORD *)((char *)v1 + 241);
  uint64_t v28 = (uint64_t)v1 + 241;
  *(_DWORD *)((char *)v177 + 3) = *(_DWORD *)(v28 + 3);
  v177[0] = v29;
  *(_DWORD *)((char *)v175 + 3) = *(_DWORD *)(v28 + 19);
  v175[0] = *(_DWORD *)(v28 + 16);
  *(_DWORD *)((char *)v174 + 3) = *(_DWORD *)(v28 + 59);
  v174[0] = *(_DWORD *)(v28 + 56);
  *(_DWORD *)((char *)v172 + 3) = *(_DWORD *)(v28 + 75);
  v172[0] = *(_DWORD *)(v28 + 72);
  *(_DWORD *)((char *)v170 + 3) = *(_DWORD *)(v28 + 91);
  v170[0] = *(_DWORD *)(v28 + 88);
  *(_DWORD *)((char *)v169 + 3) = *(_DWORD *)(v28 + 107);
  v169[0] = *(_DWORD *)(v28 + 104);
  *(_DWORD *)((char *)v168 + 3) = *(_DWORD *)(v28 + 123);
  v168[0] = *(_DWORD *)(v28 + 120);
  double v31 = *((double *)__src + 39);
  double v30 = *((double *)__src + 40);
  long long v165 = v3;
  long long v166 = v4;
  char v56 = __src[360];
  char v32 = __src[361];
  char v33 = __src[362];
  char v34 = v5;
  char v191 = v5;
  char v51 = v7;
  char v189 = v7;
  char v186 = v12;
  char v184 = v16;
  char v35 = *(unsigned char *)(v28 + 15);
  char v176 = v35;
  double v36 = *(double *)(v28 + 23);
  double v37 = *(double *)(v28 + 31);
  char v38 = *(unsigned char *)(v28 + 71);
  char v173 = v38;
  char v39 = *(unsigned char *)(v28 + 87);
  char v171 = v39;
  uint64_t v40 = 18;
  double v78 = *(double *)(v28 + 7);
  uint64_t v77 = *(void *)(v28 + 39);
  uint64_t v57 = *(void *)(v28 + 47);
  int v81 = *(unsigned __int8 *)(v28 + 55);
  double v82 = *(double *)(v28 + 63);
  double v84 = *(double *)(v28 + 79);
  uint64_t v58 = *(void *)(v28 + 95);
  char v59 = *(unsigned char *)(v28 + 103);
  uint64_t v61 = *(void *)(v28 + 111);
  char v62 = *(unsigned char *)(v28 + 119);
  uint64_t v66 = *(void *)(v28 + 127);
  char v67 = *(unsigned char *)(v28 + 135);
  v41 = &byte_252908;
  while (2)
  {
    int v42 = *v41++;
    switch(v42)
    {
      case 1:
        if (v89 == 255) {
          goto LABEL_3;
        }
        return 0;
      case 2:
        if ((v189 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 3:
        if ((v12 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 4:
        if ((v16 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 5:
        if ((v91 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 6:
        if ((v86 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 7:
        if ((v87 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 8:
        if ((v88 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 9:
        if ((v90 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 10:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
        goto LABEL_3;
      case 11:
        if (v35) {
          goto LABEL_3;
        }
        return 0;
      default:
        if (!v191) {
          return 0;
        }
LABEL_3:
        if (--v40) {
          continue;
        }
        *(_DWORD *)v144 = *(_DWORD *)(v28 + 16);
        *(_DWORD *)v150 = *(_DWORD *)(v28 + 56);
        *(_DWORD *)v153 = *(_DWORD *)(v28 + 72);
        *(_DWORD *)v156 = *(_DWORD *)(v28 + 88);
        *(_DWORD *)v159 = *(_DWORD *)(v28 + 104);
        *(_DWORD *)v162 = *(_DWORD *)(v28 + 120);
        char v102 = v34;
        *(_DWORD *)v103 = *v6;
        *(_DWORD *)&v103[3] = *(_DWORD *)((char *)v6 + 3);
        char v105 = v51;
        *(_DWORD *)v106 = *v8;
        *(_DWORD *)&v106[3] = *(_DWORD *)((char *)v8 + 3);
        *(_DWORD *)v113 = *v10;
        *(_DWORD *)&v113[3] = *(_DWORD *)((char *)v10 + 3);
        char v116 = v12;
        *(_DWORD *)v117 = *v13;
        *(_DWORD *)&v117[3] = *(_DWORD *)((char *)v13 + 3);
        char v119 = v16;
        *(_DWORD *)v120 = *v17;
        *(_DWORD *)&v120[3] = *(_DWORD *)((char *)v17 + 3);
        *(_DWORD *)&v123[3] = *(_DWORD *)((char *)v19 + 3);
        *(_DWORD *)v123 = *v19;
        *(_DWORD *)&v126[3] = *(_DWORD *)((char *)v21 + 3);
        *(_DWORD *)v126 = *v21;
        *(_DWORD *)&v129[3] = *(_DWORD *)((char *)v23 + 3);
        *(_DWORD *)v129 = *v23;
        *(_DWORD *)&v132[3] = *(_DWORD *)((char *)v25 + 3);
        *(_DWORD *)v132 = *v25;
        *(_DWORD *)&v135[3] = *(_DWORD *)((char *)v27 + 3);
        *(_DWORD *)v135 = *v27;
        *(_DWORD *)&v141[3] = *(_DWORD *)(v28 + 3);
        *(_DWORD *)v141 = *(_DWORD *)v28;
        char v143 = v35;
        *(_DWORD *)&v144[3] = *(_DWORD *)(v28 + 19);
        *(_DWORD *)&v150[3] = *(_DWORD *)(v28 + 59);
        char v152 = v38;
        *(_DWORD *)&v153[3] = *(_DWORD *)(v28 + 75);
        char v155 = v39;
        *(_DWORD *)&v156[3] = *(_DWORD *)(v28 + 91);
        *(_DWORD *)&v159[3] = *(_DWORD *)(v28 + 107);
        *(_DWORD *)&v162[3] = *(_DWORD *)(v28 + 123);
        uint64_t v100 = v55;
        uint64_t v101 = v54;
        uint64_t v104 = v76;
        uint64_t v107 = v73;
        uint64_t v108 = v72;
        uint64_t v109 = v71;
        uint64_t v110 = v70;
        uint64_t v111 = v69;
        char v112 = v89;
        uint64_t v114 = v64;
        uint64_t v115 = v63;
        uint64_t v118 = v53;
        uint64_t v121 = v52;
        char v122 = v91;
        uint64_t v124 = v75;
        char v125 = v86;
        uint64_t v127 = v60;
        char v128 = v87;
        uint64_t v130 = v65;
        char v131 = v88;
        uint64_t v133 = v68;
        char v134 = v90;
        double v136 = v83;
        double v137 = v79;
        uint64_t v138 = v80;
        uint64_t v139 = v74;
        char v140 = v85;
        double v142 = v78;
        double v145 = v36;
        double v146 = v37;
        uint64_t v147 = v77;
        uint64_t v148 = v57;
        char v149 = v81;
        double v151 = v82;
        double v154 = v84;
        uint64_t v157 = v58;
        char v158 = v59;
        uint64_t v160 = v61;
        char v161 = v62;
        uint64_t v163 = v66;
        char v164 = v67;
        memcpy(v92, __dst, sizeof(v92));
        double v93 = v31;
        double v94 = v30;
        long long v95 = v165;
        long long v96 = v166;
        char v97 = v56;
        char v98 = v32;
        char v99 = v33;
        char v43 = sub_18AB80((uint64_t)v92);
        BOOL result = 0;
        if ((v43 & 1) != 0 || (v56 & 1) == 0) {
          return result;
        }
        if ((v173 & 1) == 0 && (v171 & 1) == 0 && v84 >= v82) {
          return 0;
        }
        double v45 = 0.0;
        if (v85 == 255) {
          goto LABEL_31;
        }
        double v47 = v83;
        if (v85)
        {
          double v47 = v79;
          if (v31 * (double)v80 + v83 <= v79) {
            double v47 = v31 * (double)v80 + v83;
          }
        }
        if ((v176 & 1) == 0 && v47 >= v78)
        {
LABEL_31:
          char v46 = 1;
          if ((v32 & 1) == 0) {
            return 0;
          }
        }
        else
        {
          char v46 = 0;
          double v45 = v47;
          if ((v32 & 1) == 0) {
            return 0;
          }
        }
        if ((v46 & 1) == 0 && (v171 & 1) == 0 && v45 <= v84) {
          return 0;
        }
        if (v81 != 255)
        {
          double v48 = v36;
          if (v81)
          {
            double v48 = v37;
            if (v30 * (double)v77 + v36 <= v37) {
              double v48 = v30 * (double)v77 + v36;
            }
          }
          if ((v33 & 1) != 0 && ((v171 & 1) != 0 || v84 < v48)) {
            goto LABEL_54;
          }
          return 0;
        }
        if ((v33 & 1) == 0) {
          return 0;
        }
LABEL_54:
        uint64_t v100 = v55;
        uint64_t v101 = v54;
        uint64_t v104 = v76;
        uint64_t v107 = v73;
        uint64_t v108 = v72;
        uint64_t v109 = v71;
        uint64_t v110 = v70;
        uint64_t v111 = v69;
        char v112 = v89;
        uint64_t v114 = v64;
        uint64_t v115 = v63;
        char v102 = v191;
        *(_DWORD *)v103 = v190[0];
        *(_DWORD *)&v103[3] = *(_DWORD *)((char *)v190 + 3);
        char v105 = v189;
        *(_DWORD *)v106 = v188[0];
        *(_DWORD *)&v106[3] = *(_DWORD *)((char *)v188 + 3);
        *(_DWORD *)v113 = v187[0];
        *(_DWORD *)&v113[3] = *(_DWORD *)((char *)v187 + 3);
        char v116 = v186;
        *(_DWORD *)v117 = v185[0];
        *(_DWORD *)&v117[3] = *(_DWORD *)((char *)v185 + 3);
        uint64_t v118 = v53;
        char v119 = v184;
        *(_DWORD *)v120 = v183[0];
        *(_DWORD *)&v120[3] = *(_DWORD *)((char *)v183 + 3);
        uint64_t v121 = v52;
        char v122 = v91;
        *(_DWORD *)&v123[3] = *(_DWORD *)((char *)v182 + 3);
        *(_DWORD *)v123 = v182[0];
        uint64_t v124 = v75;
        char v125 = v86;
        *(_DWORD *)&v126[3] = *(_DWORD *)((char *)v181 + 3);
        *(_DWORD *)v126 = v181[0];
        uint64_t v127 = v60;
        char v128 = v87;
        *(_DWORD *)&v129[3] = *(_DWORD *)((char *)v180 + 3);
        *(_DWORD *)v129 = v180[0];
        uint64_t v130 = v65;
        char v131 = v88;
        *(_DWORD *)&v132[3] = *(_DWORD *)((char *)v179 + 3);
        *(_DWORD *)v132 = v179[0];
        uint64_t v133 = v68;
        char v134 = v90;
        *(_DWORD *)&v135[3] = *(_DWORD *)((char *)v178 + 3);
        *(_DWORD *)v135 = v178[0];
        double v136 = v83;
        double v137 = v79;
        uint64_t v138 = v80;
        uint64_t v139 = v74;
        char v140 = v85;
        *(_DWORD *)&v141[3] = *(_DWORD *)((char *)v177 + 3);
        *(_DWORD *)v141 = v177[0];
        double v142 = v78;
        char v143 = v176;
        *(_DWORD *)v144 = v175[0];
        *(_DWORD *)&v144[3] = *(_DWORD *)((char *)v175 + 3);
        double v145 = v36;
        double v146 = v37;
        uint64_t v147 = v77;
        uint64_t v148 = v57;
        char v149 = v81;
        *(_DWORD *)v150 = v174[0];
        *(_DWORD *)&v150[3] = *(_DWORD *)((char *)v174 + 3);
        double v151 = v82;
        char v152 = v173;
        *(_DWORD *)v153 = v172[0];
        *(_DWORD *)&v153[3] = *(_DWORD *)((char *)v172 + 3);
        double v154 = v84;
        char v155 = v171;
        *(_DWORD *)v156 = v170[0];
        *(_DWORD *)&v156[3] = *(_DWORD *)((char *)v170 + 3);
        uint64_t v157 = v58;
        char v158 = v59;
        *(_DWORD *)v159 = v169[0];
        *(_DWORD *)&v159[3] = *(_DWORD *)((char *)v169 + 3);
        uint64_t v160 = v61;
        char v161 = v62;
        *(_DWORD *)v162 = v168[0];
        *(_DWORD *)&v162[3] = *(_DWORD *)((char *)v168 + 3);
        uint64_t v163 = v66;
        char v164 = v67;
        memcpy(v92, __dst, sizeof(v92));
        double v93 = v31;
        double v94 = v30;
        long long v95 = v165;
        long long v96 = v166;
        char v97 = v56;
        char v98 = v32;
        char v99 = v33;
        double v49 = COERCE_DOUBLE(BookHistory.affinity(with:)((long long *)v92));
        return (v50 & 1) != 0 || v49 >= 0.0;
    }
  }
}

uint64_t sub_103414()
{
  uint64_t v1 = 18;
  uint64_t v2 = &byte_252908;
  while (2)
  {
    int v3 = *v2++;
    switch(v3)
    {
      case 1:
        if (v0[80] == 255) {
          goto LABEL_3;
        }
        return 1;
      case 2:
      case 6:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
        goto LABEL_3;
      case 3:
        if ((v0[104] & 1) == 0) {
          return 1;
        }
        goto LABEL_3;
      case 4:
        if ((v0[120] & 1) == 0) {
          return 1;
        }
        goto LABEL_3;
      case 5:
        if ((v0[136] & 1) == 0) {
          return 1;
        }
        goto LABEL_3;
      case 7:
        if ((v0[168] & 1) == 0) {
          return 1;
        }
        goto LABEL_3;
      case 8:
        if ((v0[184] & 1) == 0) {
          return 1;
        }
        goto LABEL_3;
      case 9:
        if (v0[200]) {
          goto LABEL_3;
        }
        return 1;
      default:
        if (!v0[16]) {
          return 1;
        }
LABEL_3:
        if (--v1) {
          continue;
        }
        return 0;
    }
  }
}

Swift::Int sub_10350C(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (v88 >= *(double *)v90) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(void *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v101 = a1;
  if (v3 < 2)
  {
    int v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      char v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      double v93 = v12;
      v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          long long v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1042DC((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v96 = sub_70B24((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          char v99 = &v96[16 * v95 + 32];
          *(void *)char v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          double v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_12124(&qword_26FE88);
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    v103 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  char v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      Swift::Int v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        Swift::Int v30 = v14;
        double v31 = v28;
        do
        {
          if (v29 >= *(v31 - 1)) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v32 = *v31;
          *(_OWORD *)double v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      Swift::Int v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_7004C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      double v83 = sub_7004C((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      char v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    char v35 = v12 + 32;
    double v36 = &v12[16 * v34 + 32];
    *(void *)double v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          int v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          char v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        uint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v77 = v12;
        double v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        uint64_t v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_1042DC((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)double v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        char v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      int v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_103BF0(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_4DB50(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  uint64_t v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      uint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      uint64_t v94 = v11;
      Swift::Int v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          uint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_4DC20((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_70B24((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          unint64_t v100 = &v97[16 * v96 + 32];
          *(void *)unint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          uint64_t v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    Swift::Int v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    Swift::Int v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  uint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    Swift::Int v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1FC5F0();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      Swift::Int v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1FC5F0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v11 = sub_7004C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      uint64_t v11 = sub_7004C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    int v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          unint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            uint64_t v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        uint64_t v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        double v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_4DC20((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        uint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        int v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      unint64_t v33 = (void *)(v10 + 16 * v9);
      do
      {
        unint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        uint64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1FC5F0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)uint64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_1042DC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  long long v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v18 = &v4[16 * v13];
      Swift::Int v23 = v18;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        int v19 = (char *)(a3 - 16);
        do
        {
          Swift::Int v20 = v19 + 16;
          if (*((double *)v18 - 1) >= *((double *)v6 - 1))
          {
            Swift::Int v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)int v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)int v19 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          uint64_t v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_70148(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    Swift::Int v14 = &v4[16 * v10];
    Swift::Int v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      uint64_t v15 = v4;
      while (1)
      {
        if (*((double *)v6 + 1) >= *((double *)v15 + 1))
        {
          long long v4 = v15 + 16;
          v17 = v15;
          uint64_t v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          uint64_t v16 = v6 + 16;
          v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          uint64_t v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

unint64_t *sub_104568(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (*(void *)(a2 + 16))
  {
    uint64_t v4 = *(void *)(a1 + 56);
    uint64_t v37 = a1 + 56;
    uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
    uint64_t v35 = ~v5;
    if (-v5 < 64) {
      uint64_t v6 = ~(-1 << -(char)v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & v4;
    int64_t v36 = (unint64_t)(63 - v5) >> 6;
    uint64_t v8 = a2 + 56;
    swift_bridgeObjectRetain();
    int64_t v9 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v10 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v11 = v10 | (v9 << 6);
      }
      else
      {
        int64_t v12 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_49;
        }
        if (v12 >= v36) {
          goto LABEL_47;
        }
        unint64_t v13 = *(void *)(v37 + 8 * v12);
        int64_t v14 = v9 + 1;
        if (!v13)
        {
          int64_t v14 = v9 + 2;
          if (v9 + 2 >= v36) {
            goto LABEL_47;
          }
          unint64_t v13 = *(void *)(v37 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 3;
            if (v9 + 3 >= v36) {
              goto LABEL_47;
            }
            unint64_t v13 = *(void *)(v37 + 8 * v14);
            if (!v13)
            {
              int64_t v14 = v9 + 4;
              if (v9 + 4 >= v36) {
                goto LABEL_47;
              }
              unint64_t v13 = *(void *)(v37 + 8 * v14);
              if (!v13)
              {
                int64_t v15 = v9 + 5;
                if (v9 + 5 >= v36)
                {
LABEL_47:
                  sub_56154();
                  return (unint64_t *)v2;
                }
                unint64_t v13 = *(void *)(v37 + 8 * v15);
                if (!v13)
                {
                  while (1)
                  {
                    int64_t v14 = v15 + 1;
                    if (__OFADD__(v15, 1)) {
                      break;
                    }
                    if (v14 >= v36) {
                      goto LABEL_47;
                    }
                    unint64_t v13 = *(void *)(v37 + 8 * v14);
                    ++v15;
                    if (v13) {
                      goto LABEL_24;
                    }
                  }
LABEL_49:
                  __break(1u);
                }
                int64_t v14 = v9 + 5;
              }
            }
          }
        }
LABEL_24:
        unint64_t v7 = (v13 - 1) & v13;
        unint64_t v11 = __clz(__rbit64(v13)) + (v14 << 6);
        int64_t v9 = v14;
      }
      uint64_t v16 = (uint64_t *)(*(void *)(a1 + 48) + 16 * v11);
      uint64_t v18 = *v16;
      uint64_t v17 = v16[1];
      sub_1FC7E0();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      Swift::Int v19 = sub_1FC830();
      uint64_t v20 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v21 = v19 & ~v20;
      if ((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21)) {
        break;
      }
LABEL_6:
      swift_bridgeObjectRelease();
    }
    uint64_t v22 = *(void *)(v2 + 48);
    Swift::Int v23 = (void *)(v22 + 16 * v21);
    BOOL v24 = *v23 == v18 && v23[1] == v17;
    if (v24 || (sub_1FC5F0() & 1) != 0)
    {
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
    }
    else
    {
      uint64_t v25 = ~v20;
      do
      {
        unint64_t v21 = (v21 + 1) & v25;
        if (((*(void *)(v8 + ((v21 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v21) & 1) == 0) {
          goto LABEL_6;
        }
        uint64_t v26 = (void *)(v22 + 16 * v21);
        BOOL v27 = *v26 == v18 && v26[1] == v17;
      }
      while (!v27 && (sub_1FC5F0() & 1) == 0);
      uint64_t v38 = a1;
      uint64_t v39 = v37;
      uint64_t v40 = v35;
      int64_t v41 = v9;
      unint64_t v42 = v7;
      uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
    }
    char v29 = *(unsigned char *)(v2 + 32);
    unint64_t v30 = (unint64_t)((1 << v29) + 63) >> 6;
    size_t v31 = 8 * v30;
    if ((v29 & 0x3Fu) < 0xE
      || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
    {
      __chkstk_darwin(isStackAllocationSafe);
      memcpy((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v31);
      Swift::Int v32 = sub_104CEC((unint64_t *)((char *)&v35 - ((v31 + 15) & 0x3FFFFFFFFFFFFFF0)), v30, v2, v21, &v38);
      swift_release();
      sub_56154();
    }
    else
    {
      unint64_t v33 = (void *)swift_slowAlloc();
      memcpy(v33, (const void *)(v2 + 56), v31);
      Swift::Int v32 = sub_104CEC((unint64_t *)v33, v30, v2, v21, &v38);
      swift_release();
      sub_56154();
      swift_slowDealloc();
    }
    return v32;
  }
  else
  {
    swift_release();
    return _swiftEmptySetSingleton;
  }
}

unint64_t *sub_1049D8(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (!*(void *)(a2 + 16))
  {
    swift_release();
    return (unint64_t *)&_swiftEmptySetSingleton;
  }
  uint64_t v26 = a1;
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = a2 + 56;
    v25[0] = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t v5 = 0;
    while (1)
    {
      uint64_t v6 = (uint64_t *)(v25[0] + 16 * v5);
      uint64_t v8 = *v6;
      uint64_t v7 = v6[1];
      ++v5;
      sub_1FC7E0();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      Swift::Int v9 = sub_1FC830();
      uint64_t v10 = -1 << *(unsigned char *)(v2 + 32);
      unint64_t v11 = v9 & ~v10;
      if ((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
      {
        uint64_t v12 = *(void *)(v2 + 48);
        unint64_t v13 = (void *)(v12 + 16 * v11);
        BOOL v14 = *v13 == v8 && v13[1] == v7;
        if (v14 || (sub_1FC5F0() & 1) != 0)
        {
          uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
          uint64_t v27 = v5;
LABEL_19:
          char v19 = *(unsigned char *)(v2 + 32);
          unint64_t v20 = (unint64_t)((1 << v19) + 63) >> 6;
          size_t v21 = 8 * v20;
          if ((v19 & 0x3Fu) < 0xE
            || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), isStackAllocationSafe))
          {
            __chkstk_darwin(isStackAllocationSafe);
            memcpy((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0), (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_104FE4((void *)((char *)v25 - ((v21 + 15) & 0x3FFFFFFFFFFFFFF0)), v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
          }
          else
          {
            Swift::Int v23 = (void *)swift_slowAlloc();
            memcpy(v23, (const void *)(v2 + 56), v21);
            uint64_t v22 = sub_104FE4((unint64_t *)v23, v20, v2, v11, &v26);
            swift_release();
            swift_bridgeObjectRelease();
            swift_slowDealloc();
          }
          return v22;
        }
        uint64_t v15 = ~v10;
        while (1)
        {
          unint64_t v11 = (v11 + 1) & v15;
          if (((*(void *)(v4 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
            break;
          }
          uint64_t v16 = (void *)(v12 + 16 * v11);
          BOOL v17 = *v16 == v8 && v16[1] == v7;
          if (v17 || (sub_1FC5F0() & 1) != 0)
          {
            uint64_t v27 = v5;
            uint64_t isStackAllocationSafe = swift_bridgeObjectRelease();
            goto LABEL_19;
          }
        }
      }
      swift_bridgeObjectRelease();
      if (v5 == v3)
      {
        swift_bridgeObjectRelease();
        return (unint64_t *)v2;
      }
    }
  }
  return (unint64_t *)v2;
}

unint64_t *sub_104CEC(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v7 = *(void *)(a3 + 16);
  uint64_t v39 = result;
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  uint64_t v8 = v7 - 1;
  uint64_t v40 = a3 + 56;
  while (2)
  {
    uint64_t v38 = v8;
    do
    {
      while (1)
      {
        int64_t v9 = a5[3];
        unint64_t v10 = a5[4];
        if (v10)
        {
          uint64_t v11 = (v10 - 1) & v10;
          unint64_t v12 = __clz(__rbit64(v10)) | (v9 << 6);
          goto LABEL_16;
        }
        int64_t v13 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
          __break(1u);
          goto LABEL_47;
        }
        int64_t v14 = (unint64_t)(a5[2] + 64) >> 6;
        int64_t v15 = a5[3];
        if (v13 >= v14) {
          goto LABEL_45;
        }
        uint64_t v16 = a5[1];
        unint64_t v17 = *(void *)(v16 + 8 * v13);
        if (!v17)
        {
          int64_t v18 = v9 + 2;
          int64_t v15 = v9 + 1;
          if (v9 + 2 >= v14) {
            goto LABEL_45;
          }
          unint64_t v17 = *(void *)(v16 + 8 * v18);
          if (!v17)
          {
            int64_t v15 = v9 + 2;
            if (v9 + 3 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * (v9 + 3));
            if (v17)
            {
              int64_t v13 = v9 + 3;
              goto LABEL_15;
            }
            int64_t v18 = v9 + 4;
            int64_t v15 = v9 + 3;
            if (v9 + 4 >= v14) {
              goto LABEL_45;
            }
            unint64_t v17 = *(void *)(v16 + 8 * v18);
            if (!v17)
            {
              int64_t v13 = v9 + 5;
              int64_t v15 = v9 + 4;
              if (v9 + 5 >= v14) {
                goto LABEL_45;
              }
              unint64_t v17 = *(void *)(v16 + 8 * v13);
              if (!v17)
              {
                int64_t v15 = v14 - 1;
                int64_t v36 = v9 + 6;
                while (v14 != v36)
                {
                  unint64_t v17 = *(void *)(v16 + 8 * v36++);
                  if (v17)
                  {
                    int64_t v13 = v36 - 1;
                    goto LABEL_15;
                  }
                }
LABEL_45:
                a5[3] = v15;
                a5[4] = 0;
                swift_retain();
                return (unint64_t *)sub_105210(v39, a2, v38, a3);
              }
              goto LABEL_15;
            }
          }
          int64_t v13 = v18;
        }
LABEL_15:
        uint64_t v11 = (v17 - 1) & v17;
        unint64_t v12 = __clz(__rbit64(v17)) + (v13 << 6);
        int64_t v9 = v13;
LABEL_16:
        char v19 = (uint64_t *)(*(void *)(*a5 + 48) + 16 * v12);
        uint64_t v21 = *v19;
        uint64_t v20 = v19[1];
        a5[3] = v9;
        a5[4] = v11;
        sub_1FC7E0();
        swift_bridgeObjectRetain();
        sub_1FB8C0();
        Swift::Int v22 = sub_1FC830();
        uint64_t v23 = -1 << *(unsigned char *)(a3 + 32);
        unint64_t v24 = v22 & ~v23;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = 1 << v24;
        if (((1 << v24) & *(void *)(v40 + 8 * (v24 >> 6))) == 0) {
          goto LABEL_3;
        }
        uint64_t v27 = *(void *)(a3 + 48);
        Swift::Int v28 = (void *)(v27 + 16 * v24);
        BOOL v29 = *v28 == v21 && v28[1] == v20;
        if (v29 || (sub_1FC5F0() & 1) != 0) {
          break;
        }
        uint64_t v31 = ~v23;
        for (unint64_t i = v24 + 1; ; unint64_t i = v33 + 1)
        {
          unint64_t v33 = i & v31;
          if (((*(void *)(v40 + (((i & v31) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v31)) & 1) == 0) {
            break;
          }
          unint64_t v34 = (void *)(v27 + 16 * v33);
          BOOL v35 = *v34 == v21 && v34[1] == v20;
          if (v35 || (sub_1FC5F0() & 1) != 0)
          {
            uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
            unint64_t v25 = v33 >> 6;
            uint64_t v26 = 1 << v33;
            goto LABEL_23;
          }
        }
LABEL_3:
        uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      }
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_23:
      unint64_t v30 = v39[v25];
      v39[v25] = v30 & ~v26;
    }
    while ((v26 & v30) == 0);
    uint64_t v8 = v38 - 1;
    if (__OFSUB__(v38, 1))
    {
LABEL_47:
      __break(1u);
      return result;
    }
    if (v38 != 1) {
      continue;
    }
    return _swiftEmptySetSingleton;
  }
}

unint64_t *sub_104FE4(unint64_t *result, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  uint64_t v6 = *(void *)(a3 + 16);
  *(unint64_t *)((char *)result + ((a4 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << a4) - 1;
  unint64_t v30 = result;
  uint64_t v31 = v6 - 1;
  uint64_t v8 = *a5;
  unint64_t v7 = a5[1];
  unint64_t v9 = *(void *)(*a5 + 16);
  if (v7 == v9)
  {
LABEL_2:
    swift_retain();
    return (unint64_t *)sub_1054A8(v30, a2, v31, a3);
  }
  uint64_t v32 = a3 + 56;
  while ((v7 & 0x8000000000000000) == 0)
  {
    if (v7 >= v9) {
      goto LABEL_29;
    }
    uint64_t v11 = v8 + 16 * v7;
    uint64_t v13 = *(void *)(v11 + 32);
    uint64_t v12 = *(void *)(v11 + 40);
    a5[1] = v7 + 1;
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    Swift::Int v14 = sub_1FC830();
    uint64_t v15 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v16 = v14 & ~v15;
    unint64_t v17 = v16 >> 6;
    uint64_t v18 = 1 << v16;
    if (((1 << v16) & *(void *)(v32 + 8 * (v16 >> 6))) == 0) {
      goto LABEL_4;
    }
    uint64_t v19 = *(void *)(a3 + 48);
    uint64_t v20 = (void *)(v19 + 16 * v16);
    BOOL v21 = *v20 == v13 && v20[1] == v12;
    if (!v21 && (sub_1FC5F0() & 1) == 0)
    {
      uint64_t v24 = ~v15;
      for (unint64_t i = v16 + 1; ; unint64_t i = v26 + 1)
      {
        unint64_t v26 = i & v24;
        if (((*(void *)(v32 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v19 + 16 * v26);
        BOOL v28 = *v27 == v13 && v27[1] == v12;
        if (v28 || (sub_1FC5F0() & 1) != 0)
        {
          uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
          unint64_t v17 = v26 >> 6;
          uint64_t v18 = 1 << v26;
          goto LABEL_15;
        }
      }
LABEL_4:
      uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
      goto LABEL_5;
    }
    uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
LABEL_15:
    unint64_t v22 = v30[v17];
    v30[v17] = v22 & ~v18;
    if ((v18 & v22) != 0)
    {
      uint64_t v23 = v31 - 1;
      if (__OFSUB__(v31, 1)) {
        goto LABEL_30;
      }
      --v31;
      if (!v23) {
        return (unint64_t *)&_swiftEmptySetSingleton;
      }
    }
LABEL_5:
    uint64_t v8 = *a5;
    unint64_t v7 = a5[1];
    unint64_t v9 = *(void *)(*a5 + 16);
    if (v7 == v9) {
      goto LABEL_2;
    }
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
  return result;
}

uint64_t sub_105210(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = _swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_12124(&qword_26C548);
  uint64_t result = sub_1FC030();
  uint64_t v8 = (void *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v20 = -1 << *((unsigned char *)v8 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(v8[6] + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_1054A8(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v8 = &_swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_12124(&qword_26C5B0);
  uint64_t result = sub_1FC030();
  uint64_t v8 = (unsigned char *)result;
  uint64_t v30 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_39;
    }
    if (v14 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v14];
    ++v10;
    if (!v15)
    {
      uint64_t v10 = v14 + 1;
      if (v14 + 1 >= v30) {
        goto LABEL_36;
      }
      unint64_t v15 = a1[v10];
      if (!v15)
      {
        uint64_t v10 = v14 + 2;
        if (v14 + 2 >= v30) {
          goto LABEL_36;
        }
        unint64_t v15 = a1[v10];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_24:
    unint64_t v17 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v13);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v20 = -1 << v8[32];
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v23 = __clz(__rbit64((-1 << v21) & ~*(void *)(v11 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v26 = v22 == v25;
        if (v22 == v25) {
          unint64_t v22 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v22);
      }
      while (v27 == -1);
      unint64_t v23 = __clz(__rbit64(~v27)) + (v22 << 6);
    }
    *(void *)(v11 + ((v23 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v23;
    BOOL v28 = (void *)(*((void *)v8 + 6) + 16 * v23);
    *BOOL v28 = v18;
    v28[1] = v19;
    ++*((void *)v8 + 2);
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v16 = v14 + 3;
  if (v16 >= v30) {
    goto LABEL_36;
  }
  unint64_t v15 = a1[v16];
  if (v15)
  {
    uint64_t v10 = v16;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v30) {
      goto LABEL_36;
    }
    unint64_t v15 = a1[v10];
    ++v16;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_105740(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    swift_release();
    return (uint64_t)&_swiftEmptySetSingleton;
  }
  if (*(void *)(a4 + 16) == a3) {
    return a4;
  }
  sub_12124(&qword_26C520);
  uint64_t result = sub_1FC030();
  uint64_t v6 = result;
  if (a2 < 1) {
    unint64_t v8 = 0;
  }
  else {
    unint64_t v8 = *a1;
  }
  uint64_t v9 = 0;
  uint64_t v35 = v4;
  uint64_t v10 = result + 56;
  uint64_t v36 = result;
  uint64_t v48 = a3;
  if (!v8) {
    goto LABEL_10;
  }
LABEL_9:
  uint64_t v44 = (v8 - 1) & v8;
  uint64_t v45 = v9;
  for (unint64_t i = __clz(__rbit64(v8)) | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v14 << 6))
  {
    memcpy(__dst, (const void *)(*(void *)(v4 + 48) + 560 * i), 0x229uLL);
    sub_1FC7E0();
    char v16 = BYTE8(__dst[0]);
    uint64_t v17 = *(void *)&__dst[2];
    char v18 = BYTE8(__dst[2]);
    long long v47 = __dst[3];
    long long v19 = __dst[4];
    char v20 = __dst[5];
    uint64_t v42 = *(void *)&__dst[6];
    uint64_t v43 = *((void *)&__dst[5] + 1);
    uint64_t v40 = *(void *)&__dst[7];
    uint64_t v41 = *((void *)&__dst[6] + 1);
    uint64_t v21 = *((void *)&__dst[7] + 1);
    unint64_t v22 = *((void *)&__dst[8] + 1);
    uint64_t v38 = *(void *)&__dst[9];
    uint64_t v39 = *(void *)&__dst[8];
    uint64_t v37 = *((void *)&__dst[9] + 1);
    long long v46 = __dst[1];
    sub_1FC820(*(Swift::UInt64 *)&__dst[0]);
    LOBYTE(v51) = v16;
    long long v52 = v46;
    uint64_t v53 = v17;
    LOBYTE(v54) = v18;
    long long v55 = v47;
    long long v56 = v19;
    char v57 = v20;
    sub_12384(__dst);
    Book.Metadata.hash(into:)((uint64_t)v58);
    if (v22 >> 1 == 0xFFFFFFFF)
    {
      sub_1FC800(0);
    }
    else
    {
      uint64_t v51 = v43;
      *(void *)&long long v52 = v42;
      *((void *)&v52 + 1) = v41;
      uint64_t v53 = v40;
      uint64_t v54 = v21;
      *(void *)&long long v55 = v39;
      *((void *)&v55 + 1) = v22;
      *(void *)&long long v56 = v38;
      *((void *)&v56 + 1) = v37;
      sub_1FC800(1u);
      InternalAffinitySource.hash(into:)((uint64_t)v58);
    }
    sub_55844((uint64_t)&__dst[10], (uint64_t)&v51, &qword_26C518);
    uint64_t v4 = v35;
    if (sub_125F0((uint64_t)&v51) == 1)
    {
      sub_1FC800(0);
    }
    else
    {
      sub_55844((uint64_t)&__dst[10], (uint64_t)__src, &qword_26C518);
      memcpy(v49, __src, sizeof(v49));
      sub_1FC800(1u);
      BookHistory.hash(into:)();
    }
    uint64_t v23 = *(void *)&__dst[34];
    int v24 = BYTE8(__dst[34]);
    swift_bridgeObjectRetain();
    sub_167680((uint64_t)v58, v23);
    swift_bridgeObjectRelease();
    if (v24 == 12)
    {
      sub_1FC800(0);
    }
    else
    {
      __src[0] = v24;
      sub_1FC800(1u);
      PositiveAffinitySource.hash(into:)();
    }
    uint64_t result = sub_1FC830();
    uint64_t v6 = v36;
    uint64_t v25 = -1 << *(unsigned char *)(v36 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v10 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v28 = __clz(__rbit64((-1 << v26) & ~*(void *)(v10 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_49;
        }
        BOOL v31 = v27 == v30;
        if (v27 == v30) {
          unint64_t v27 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v10 + 8 * v27);
      }
      while (v32 == -1);
      unint64_t v28 = __clz(__rbit64(~v32)) + (v27 << 6);
    }
    *(void *)(v10 + ((v28 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v28;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v36 + 48) + 560 * v28), __dst, 0x229uLL);
    ++*(void *)(v36 + 16);
    if (__OFSUB__(v48, 1))
    {
LABEL_49:
      __break(1u);
LABEL_50:
      __break(1u);
      goto LABEL_51;
    }
    if (v48 == 1)
    {
LABEL_47:
      swift_release();
      return v6;
    }
    unint64_t v8 = v44;
    uint64_t v9 = v45;
    --v48;
    if (v44) {
      goto LABEL_9;
    }
LABEL_10:
    uint64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_50;
    }
    if (v12 >= a2) {
      goto LABEL_47;
    }
    unint64_t v13 = a1[v12];
    uint64_t v14 = v9 + 1;
    if (!v13)
    {
      uint64_t v14 = v9 + 2;
      if (v9 + 2 >= a2) {
        goto LABEL_47;
      }
      unint64_t v13 = a1[v14];
      if (!v13)
      {
        uint64_t v14 = v9 + 3;
        if (v9 + 3 >= a2) {
          goto LABEL_47;
        }
        unint64_t v13 = a1[v14];
        if (!v13) {
          break;
        }
      }
    }
LABEL_23:
    uint64_t v44 = (v13 - 1) & v13;
    uint64_t v45 = v14;
  }
  uint64_t v15 = v9 + 4;
  if (v9 + 4 >= a2) {
    goto LABEL_47;
  }
  unint64_t v13 = a1[v15];
  if (v13)
  {
    uint64_t v14 = v9 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= a2) {
      goto LABEL_47;
    }
    unint64_t v13 = a1[v14];
    ++v15;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_51:
  __break(1u);
  return result;
}

uint64_t sub_105C18(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    uint64_t v9 = _swiftEmptySetSingleton;
LABEL_36:
    swift_release();
    return (uint64_t)v9;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_12124(&qword_26C528);
  uint64_t result = sub_1FC030();
  uint64_t v9 = (void *)result;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 56;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_24;
    }
    uint64_t v15 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v15 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v15];
    ++v11;
    if (!v16)
    {
      uint64_t v11 = v15 + 1;
      if (v15 + 1 >= a2) {
        goto LABEL_36;
      }
      unint64_t v16 = a1[v11];
      if (!v16)
      {
        uint64_t v11 = v15 + 2;
        if (v15 + 2 >= a2) {
          goto LABEL_36;
        }
        unint64_t v16 = a1[v11];
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t result = sub_1FC7D0();
    uint64_t v19 = -1 << *((unsigned char *)v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(v9[6] + 8 * v22) = v18;
    ++v9[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (!v5) {
      goto LABEL_36;
    }
  }
  uint64_t v17 = v15 + 3;
  if (v17 >= a2) {
    goto LABEL_36;
  }
  unint64_t v16 = a1[v17];
  if (v16)
  {
    uint64_t v11 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v11 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v11 >= a2) {
      goto LABEL_36;
    }
    unint64_t v16 = a1[v11];
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_105E60(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4;
  if (!a3)
  {
    unint64_t v8 = _swiftEmptySetSingleton;
LABEL_39:
    swift_release();
    return (uint64_t)v8;
  }
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3) {
    return v4;
  }
  sub_12124(&qword_26C588);
  uint64_t result = sub_1FC030();
  unint64_t v8 = (void *)result;
  uint64_t v34 = a2;
  if (a2 < 1) {
    unint64_t v9 = 0;
  }
  else {
    unint64_t v9 = *a1;
  }
  uint64_t v10 = 0;
  uint64_t v11 = result + 56;
  uint64_t v36 = v4;
  while (1)
  {
    if (v9)
    {
      unint64_t v12 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      uint64_t v37 = v10;
      unint64_t v13 = v12 | (v10 << 6);
      goto LABEL_24;
    }
    uint64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1)) {
      goto LABEL_42;
    }
    if (v14 >= v34) {
      goto LABEL_39;
    }
    unint64_t v15 = a1[v14];
    uint64_t v16 = v10 + 1;
    if (!v15)
    {
      uint64_t v16 = v10 + 2;
      if (v10 + 2 >= v34) {
        goto LABEL_39;
      }
      unint64_t v15 = a1[v16];
      if (!v15)
      {
        uint64_t v16 = v10 + 3;
        if (v10 + 3 >= v34) {
          goto LABEL_39;
        }
        unint64_t v15 = a1[v16];
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v15 - 1) & v15;
    uint64_t v37 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v4 + 48) + 40 * v13;
    Swift::UInt v19 = *(void *)v18;
    Swift::UInt64 v20 = *(void *)(v18 + 8);
    Swift::UInt8 v21 = *(unsigned char *)(v18 + 16);
    Swift::UInt64 v22 = *(void *)(v18 + 24);
    int v23 = *(unsigned __int8 *)(v18 + 32);
    sub_1FC7E0();
    sub_1FC7F0(v19);
    sub_1FC820(v20);
    sub_1FC800(v21);
    if (v23 == 1)
    {
      sub_1FC800(0);
    }
    else
    {
      sub_1FC800(1u);
      sub_1FC820(v22);
    }
    uint64_t result = sub_1FC830();
    uint64_t v24 = -1 << *((unsigned char *)v8 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v27 = __clz(__rbit64((-1 << v25) & ~*(void *)(v11 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v30 = v26 == v29;
        if (v26 == v29) {
          unint64_t v26 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v11 + 8 * v26);
      }
      while (v31 == -1);
      unint64_t v27 = __clz(__rbit64(~v31)) + (v26 << 6);
    }
    *(void *)(v11 + ((v27 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v27;
    uint64_t v32 = v8[6] + 40 * v27;
    *(void *)uint64_t v32 = v19;
    *(void *)(v32 + 8) = v20;
    *(unsigned char *)(v32 + 16) = v21;
    *(void *)(v32 + 24) = v22;
    *(unsigned char *)(v32 + 32) = v23;
    ++v8[2];
    if (__OFSUB__(v5--, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      goto LABEL_43;
    }
    uint64_t v4 = v36;
    uint64_t v10 = v37;
    if (!v5) {
      goto LABEL_39;
    }
  }
  uint64_t v17 = v10 + 4;
  if (v10 + 4 >= v34) {
    goto LABEL_39;
  }
  unint64_t v15 = a1[v17];
  if (v15)
  {
    uint64_t v16 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    uint64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v34) {
      goto LABEL_39;
    }
    unint64_t v15 = a1[v16];
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_106160(uint64_t isStackAllocationSafe, uint64_t a2)
{
  uint64_t v4 = isStackAllocationSafe;
  char v5 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v6 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v7 = 8 * v6;
  if ((v5 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v7);
    uint64_t v8 = sub_10A55C((uint64_t)&v11 - ((v7 + 15) & 0x3FFFFFFFFFFFFFF0), v6, v4, a2);
    if (v2) {
      swift_willThrow();
    }
    else {
      uint64_t v4 = v8;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    unint64_t v9 = (void *)swift_slowAlloc();
    bzero(v9, v7);
    uint64_t v4 = sub_10A55C((uint64_t)v9, v6, v4, a2);
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  return v4;
}

uint64_t sub_1062E4(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v14 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v14 >= v7) {
      goto LABEL_24;
    }
    unint64_t v15 = *(void *)(v3 + 8 * v14);
    ++v8;
    if (!v15)
    {
      int64_t v8 = v14 + 1;
      if (v14 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v15 = *(void *)(v3 + 8 * v8);
      if (!v15)
      {
        int64_t v8 = v14 + 2;
        if (v14 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        if (!v15)
        {
          int64_t v8 = v14 + 3;
          if (v14 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v15 = *(void *)(v3 + 8 * v8);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v8 << 6);
LABEL_6:
    uint64_t v11 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v10);
    uint64_t v12 = *v11;
    uint64_t v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_106600(v12, v13);
    swift_bridgeObjectRelease();
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 < v7)
  {
    unint64_t v15 = *(void *)(v3 + 8 * v16);
    if (!v15)
    {
      while (1)
      {
        int64_t v8 = v16 + 1;
        if (__OFADD__(v16, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v15 = *(void *)(v3 + 8 * v8);
        ++v16;
        if (v15) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v16;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_10648C(uint64_t result)
{
  if (!*(void *)(*(void *)v1 + 16)) {
    return result;
  }
  uint64_t v2 = result;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v9 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_29:
      __break(1u);
      return result;
    }
    if (v11 >= v7) {
      goto LABEL_24;
    }
    unint64_t v12 = *(void *)(v3 + 8 * v11);
    ++v8;
    if (!v12)
    {
      int64_t v8 = v11 + 1;
      if (v11 + 1 >= v7) {
        goto LABEL_24;
      }
      unint64_t v12 = *(void *)(v3 + 8 * v8);
      if (!v12)
      {
        int64_t v8 = v11 + 2;
        if (v11 + 2 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 3;
          if (v11 + 3 >= v7) {
            goto LABEL_24;
          }
          unint64_t v12 = *(void *)(v3 + 8 * v8);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
LABEL_6:
    uint64_t result = sub_106790(*(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 < v7)
  {
    unint64_t v12 = *(void *)(v3 + 8 * v13);
    if (!v12)
    {
      while (1)
      {
        int64_t v8 = v13 + 1;
        if (__OFADD__(v13, 1)) {
          goto LABEL_29;
        }
        if (v8 >= v7) {
          goto LABEL_24;
        }
        unint64_t v12 = *(void *)(v3 + 8 * v8);
        ++v13;
        if (v12) {
          goto LABEL_23;
        }
      }
    }
    int64_t v8 = v13;
    goto LABEL_23;
  }
LABEL_24:

  return swift_release();
}

uint64_t sub_106600(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *v2;
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  Swift::Int v6 = sub_1FC830();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v9 = *(void *)(v5 + 48);
  unint64_t v10 = (void *)(v9 + 16 * v8);
  BOOL v11 = *v10 == a1 && v10[1] == a2;
  if (!v11 && (sub_1FC5F0() & 1) == 0)
  {
    uint64_t v15 = ~v7;
    do
    {
      unint64_t v8 = (v8 + 1) & v15;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        goto LABEL_18;
      }
      int64_t v16 = (void *)(v9 + 16 * v8);
      BOOL v17 = *v16 == a1 && v16[1] == a2;
    }
    while (!v17 && (sub_1FC5F0() & 1) == 0);
  }
  swift_bridgeObjectRelease();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v13 = *v2;
  uint64_t v19 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_DAD4();
    uint64_t v13 = v19;
  }
  uint64_t v14 = *(void *)(*(void *)(v13 + 48) + 16 * v8);
  sub_10689C(v8);
  *uint64_t v2 = v19;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_106790(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = sub_1FC7D0();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(v4 + 48);
  if (*(void *)(v8 + 8 * v7) != a1)
  {
    uint64_t v9 = ~v6;
    do
    {
      unint64_t v7 = (v7 + 1) & v9;
      if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        return 0;
      }
    }
    while (*(void *)(v8 + 8 * v7) != a1);
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v2;
  uint64_t v14 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    sub_DC88();
    uint64_t v11 = v14;
  }
  uint64_t v12 = *(void *)(*(void *)(v11 + 48) + 8 * v7);
  sub_106A64(v7);
  *uint64_t v2 = v14;
  swift_bridgeObjectRelease();
  return v12;
}

unint64_t sub_10689C(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(*v1 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        sub_1FC7E0();
        swift_bridgeObjectRetain();
        sub_1FB8C0();
        Swift::Int v10 = sub_1FC830();
        swift_bridgeObjectRelease();
        unint64_t v11 = v10 & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v11 < v9) {
            goto LABEL_5;
          }
        }
        else if (v11 >= v9)
        {
          goto LABEL_11;
        }
        if (v2 >= (uint64_t)v11)
        {
LABEL_11:
          uint64_t v12 = *(void *)(v3 + 48);
          uint64_t v13 = (_OWORD *)(v12 + 16 * v2);
          uint64_t v14 = (_OWORD *)(v12 + 16 * v6);
          if (v2 != v6 || (int64_t v2 = v6, v13 >= v14 + 1))
          {
            _OWORD *v13 = *v14;
            int64_t v2 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v15 = *(void *)(v3 + 16);
  BOOL v16 = __OFSUB__(v15, 1);
  uint64_t v17 = v15 - 1;
  if (v16)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v17;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

unint64_t sub_106A64(unint64_t result)
{
  int64_t v2 = result;
  uint64_t v3 = *v1;
  uint64_t v4 = *v1 + 56;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(v4 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    swift_retain();
    uint64_t v8 = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v9 = (v8 + 1) & v7;
      do
      {
        uint64_t v10 = *(void *)(v3 + 48);
        unint64_t v11 = (void *)(v10 + 8 * v6);
        uint64_t v12 = sub_1FC7D0() & v7;
        if (v2 >= (uint64_t)v9)
        {
          if (v12 >= v9 && v2 >= v12)
          {
LABEL_16:
            uint64_t v15 = (void *)(v10 + 8 * v2);
            if (v2 != v6 || (int64_t v2 = v6, v15 >= v11 + 1))
            {
              *uint64_t v15 = *v11;
              int64_t v2 = v6;
            }
          }
        }
        else if (v12 >= v9 || v2 >= v12)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    *(void *)(v4 + (((unint64_t)v2 >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << v2) - 1;
    uint64_t result = swift_release();
  }
  else
  {
    *(void *)(v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) &= (-1 << result) - 1;
  }
  uint64_t v16 = *(void *)(v3 + 16);
  BOOL v17 = __OFSUB__(v16, 1);
  uint64_t v18 = v16 - 1;
  if (v17)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v3 + 16) = v18;
    ++*(_DWORD *)(v3 + 36);
  }
  return result;
}

void sub_106BEC(double a1, double a2)
{
  if ((*(void *)&a1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = *(void *)&a1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1FC820(v3);
  if ((*(void *)&a2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = *(void *)&a2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_1FC820(v4);
}

void *sub_106C38(uint64_t a1)
{
  uint64_t v20 = a1 + 56;
  uint64_t v1 = 1 << *(unsigned char *)(a1 + 32);
  if (v1 < 64) {
    uint64_t v2 = ~(-1 << v1);
  }
  else {
    uint64_t v2 = -1;
  }
  uint64_t v3 = v2 & *(void *)(a1 + 56);
  int64_t v21 = (unint64_t)(v1 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v5 = 0;
  while (1)
  {
    if (v3)
    {
      v3 &= v3 - 1;
      goto LABEL_27;
    }
    int64_t v6 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v6 >= v21) {
      goto LABEL_38;
    }
    uint64_t v7 = *(void *)(v20 + 8 * v6);
    ++v5;
    if (!v7)
    {
      int64_t v5 = v6 + 1;
      if (v6 + 1 >= v21) {
        goto LABEL_38;
      }
      uint64_t v7 = *(void *)(v20 + 8 * v5);
      if (!v7)
      {
        int64_t v5 = v6 + 2;
        if (v6 + 2 >= v21) {
          goto LABEL_38;
        }
        uint64_t v7 = *(void *)(v20 + 8 * v5);
        if (!v7)
        {
          int64_t v5 = v6 + 3;
          if (v6 + 3 >= v21) {
            goto LABEL_38;
          }
          uint64_t v7 = *(void *)(v20 + 8 * v5);
          if (!v7)
          {
            int64_t v5 = v6 + 4;
            if (v6 + 4 >= v21) {
              goto LABEL_38;
            }
            uint64_t v7 = *(void *)(v20 + 8 * v5);
            if (!v7) {
              break;
            }
          }
        }
      }
    }
LABEL_26:
    uint64_t v3 = (v7 - 1) & v7;
LABEL_27:
    unint64_t v9 = sub_F8E48();
    uint64_t v10 = (unsigned __int8 *)v9[2];
    if (v10)
    {
      uint64_t v22 = v3;
      swift_bridgeObjectRetain();
      unint64_t v11 = 0;
      uint64_t v12 = &_swiftEmptySetSingleton[7];
      while (1)
      {
        Swift::UInt v13 = (v11++)[(void)(v9 + 4)];
        sub_1FC7E0();
        sub_1FC7F0(v13);
        Swift::Int v14 = sub_1FC830();
        uint64_t v15 = -1 << LOBYTE(_swiftEmptySetSingleton[4]);
        unint64_t v16 = v14 & ~v15;
        if (((*(void *)((char *)v12 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
          goto LABEL_36;
        }
        uint64_t v17 = _swiftEmptySetSingleton[6];
        if (*(unsigned __int8 *)(v17 + v16) == v13)
        {
LABEL_29:
          if (v11 == v10) {
            goto LABEL_5;
          }
        }
        else
        {
          uint64_t v18 = ~v15;
          while (1)
          {
            unint64_t v16 = (v16 + 1) & v18;
            if (((*(void *)((char *)v12 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v16) & 1) == 0) {
              break;
            }
            if (*(unsigned __int8 *)(v17 + v16) == v13) {
              goto LABEL_29;
            }
          }
LABEL_36:
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          sub_BEB0(v13, v16, isUniquelyReferenced_nonNull_native);
          swift_bridgeObjectRelease();
          if (v11 == v10)
          {
LABEL_5:
            swift_bridgeObjectRelease();
            uint64_t v3 = v22;
            break;
          }
          uint64_t v12 = &_swiftEmptySetSingleton[7];
        }
      }
    }
    uint64_t result = (void *)swift_bridgeObjectRelease();
  }
  int64_t v8 = v6 + 5;
  if (v8 >= v21)
  {
LABEL_38:
    swift_release();
    return _swiftEmptySetSingleton;
  }
  uint64_t v7 = *(void *)(v20 + 8 * v8);
  if (v7)
  {
    int64_t v5 = v8;
    goto LABEL_26;
  }
  while (1)
  {
    int64_t v5 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      break;
    }
    if (v5 >= v21) {
      goto LABEL_38;
    }
    uint64_t v7 = *(void *)(v20 + 8 * v5);
    ++v8;
    if (v7) {
      goto LABEL_26;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

BOOL _s20BooksPersonalization11BookHistoryV18CollectionAdditionO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)a1;
  double v3 = *(double *)a2;
  if ((*(unsigned char *)(a1 + 32) & 1) == 0) {
    return (*(unsigned char *)(a2 + 32) & 1) == 0 && v2 == v3;
  }
  if ((*(unsigned char *)(a2 + 32) & 1) == 0) {
    return 0;
  }
  if (v2 != v3 || *(double *)(a1 + 8) != *(double *)(a2 + 8)) {
    return 0;
  }
  return *(void *)(a1 + 16) == *(void *)(a2 + 16) && *(void *)(a1 + 24) == *(void *)(a2 + 24);
}

uint64_t _s20BooksPersonalization11BookHistoryV18MarkedFinishedInfoV2eeoiySbAE_AEtFZ_0(double *a1, double *a2)
{
  if (*(unsigned __int8 *)a1 == *(unsigned __int8 *)a2)
  {
    double v2 = a1[1];
    double v3 = a2[1];
    if ((_BYTE)a1[5])
    {
      if ((_BYTE)a2[5])
      {
        BOOL v4 = v2 == v3 && a1[2] == a2[2];
        BOOL v5 = v4 && *((void *)a1 + 3) == *((void *)a2 + 3);
        if (v5 && *((void *)a1 + 4) == *((void *)a2 + 4)) {
          return 1;
        }
      }
    }
    else if (((_BYTE)a2[5] & 1) == 0 && v2 == v3)
    {
      return 1;
    }
  }
  return 0;
}

BOOL _s20BooksPersonalization11BookHistoryV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v4 = *(void *)(a1 + 72);
  int v6 = *(unsigned __int8 *)(a1 + 80);
  double v8 = *(double *)(a1 + 88);
  double v7 = *(double *)(a1 + 96);
  char v9 = *(unsigned char *)(a1 + 104);
  double v10 = *(double *)(a1 + 112);
  char v11 = *(unsigned char *)(a1 + 120);
  double v12 = *(double *)(a1 + 128);
  double v13 = *(double *)(a1 + 144);
  char v63 = *(unsigned char *)(a1 + 152);
  char v64 = *(unsigned char *)(a1 + 136);
  double v14 = *(double *)(a1 + 160);
  double v15 = *(double *)(a1 + 176);
  char v61 = *(unsigned char *)(a1 + 184);
  char v62 = *(unsigned char *)(a1 + 168);
  double v16 = *(double *)(a1 + 192);
  double v55 = *(double *)(a1 + 208);
  double v17 = *(double *)(a1 + 216);
  uint64_t v54 = *(void *)(a1 + 224);
  uint64_t v52 = *(void *)(a1 + 232);
  int v59 = *(unsigned __int8 *)(a1 + 240);
  char v60 = *(unsigned char *)(a1 + 200);
  double v18 = *(double *)(a1 + 248);
  char v58 = *(unsigned char *)(a1 + 256);
  double v50 = *(double *)(a1 + 264);
  double v19 = *(double *)(a1 + 272);
  uint64_t v47 = *(void *)(a1 + 280);
  uint64_t v46 = *(void *)(a1 + 288);
  double v20 = *(double *)(a1 + 304);
  char v53 = *(unsigned char *)(a1 + 312);
  double v21 = *(double *)(a1 + 320);
  char v51 = *(unsigned char *)(a1 + 328);
  char v48 = *(unsigned char *)(a1 + 344);
  char v45 = *(unsigned char *)(a1 + 360);
  char v43 = *(unsigned char *)(a1 + 376);
  int v57 = *(unsigned __int8 *)(a1 + 296);
  uint64_t v44 = *(void *)(a1 + 336);
  uint64_t v42 = *(void *)(a1 + 352);
  uint64_t v41 = *(void *)(a1 + 368);
  char v22 = *(unsigned char *)(a2 + 16);
  char v23 = *(unsigned char *)(a2 + 32);
  double v24 = *(double *)(a2 + 48);
  int v25 = *(unsigned __int8 *)(a2 + 80);
  double v26 = *(double *)(a2 + 208);
  int v27 = *(unsigned __int8 *)(a2 + 240);
  double v49 = *(double *)(a2 + 264);
  int v56 = *(unsigned __int8 *)(a2 + 296);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      char v22 = 1;
    }
    if (v22) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 32))
  {
    if (!*(unsigned char *)(a2 + 32)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 24) != *(double *)(a2 + 24)) {
      char v23 = 1;
    }
    if (v23) {
      return 0;
    }
  }
  if (v6 == 255)
  {
    if (v25 != 255) {
      return 0;
    }
  }
  else
  {
    if (v25 == 255 || *(void *)(a2 + 40) != *(void *)(a1 + 40)) {
      return 0;
    }
    if (v6)
    {
      if ((v25 & 1) == 0) {
        return 0;
      }
      BOOL result = 0;
      if (v2 != v24 || v3 != *(double *)(a2 + 56) || v5 != *(void *)(a2 + 64) || v4 != *(void *)(a2 + 72)) {
        return result;
      }
    }
    else if ((v25 & 1) != 0 || v2 != v24)
    {
      return 0;
    }
  }
  if (v9)
  {
    if (!*(unsigned char *)(a2 + 104)) {
      return 0;
    }
  }
  else
  {
    BOOL result = 0;
    if ((*(unsigned char *)(a2 + 104) & 1) != 0 || v8 != *(double *)(a2 + 88) || v7 != *(double *)(a2 + 96)) {
      return result;
    }
  }
  if (v11)
  {
    if (!*(unsigned char *)(a2 + 120)) {
      return 0;
    }
  }
  else
  {
    if (v10 == *(double *)(a2 + 112)) {
      char v29 = *(unsigned char *)(a2 + 120);
    }
    else {
      char v29 = 1;
    }
    if (v29) {
      return 0;
    }
  }
  if (v64)
  {
    if (!*(unsigned char *)(a2 + 136)) {
      return 0;
    }
  }
  else
  {
    if (v12 == *(double *)(a2 + 128)) {
      char v30 = *(unsigned char *)(a2 + 136);
    }
    else {
      char v30 = 1;
    }
    if (v30) {
      return 0;
    }
  }
  if (v63)
  {
    if (!*(unsigned char *)(a2 + 152)) {
      return 0;
    }
  }
  else
  {
    if (v13 == *(double *)(a2 + 144)) {
      char v31 = *(unsigned char *)(a2 + 152);
    }
    else {
      char v31 = 1;
    }
    if (v31) {
      return 0;
    }
  }
  if (v62)
  {
    if (!*(unsigned char *)(a2 + 168)) {
      return 0;
    }
  }
  else
  {
    if (v14 == *(double *)(a2 + 160)) {
      char v32 = *(unsigned char *)(a2 + 168);
    }
    else {
      char v32 = 1;
    }
    if (v32) {
      return 0;
    }
  }
  if (v61)
  {
    if (!*(unsigned char *)(a2 + 184)) {
      return 0;
    }
  }
  else
  {
    if (v15 == *(double *)(a2 + 176)) {
      char v33 = *(unsigned char *)(a2 + 184);
    }
    else {
      char v33 = 1;
    }
    if (v33) {
      return 0;
    }
  }
  if (v60)
  {
    if (!*(unsigned char *)(a2 + 200)) {
      return 0;
    }
  }
  else
  {
    if (v16 == *(double *)(a2 + 192)) {
      char v34 = *(unsigned char *)(a2 + 200);
    }
    else {
      char v34 = 1;
    }
    if (v34) {
      return 0;
    }
  }
  if (v59 == 255)
  {
    if (v27 != 255) {
      return 0;
    }
  }
  else
  {
    if (v27 == 255) {
      return 0;
    }
    if (v59)
    {
      if ((v27 & 1) == 0) {
        return 0;
      }
      BOOL result = 0;
      if (v55 != v26 || v17 != *(double *)(a2 + 216) || v54 != *(void *)(a2 + 224) || v52 != *(void *)(a2 + 232)) {
        return result;
      }
    }
    else if ((v27 & 1) != 0 || v55 != v26)
    {
      return 0;
    }
  }
  if (v58)
  {
    if (!*(unsigned char *)(a2 + 256)) {
      return 0;
    }
  }
  else
  {
    char v35 = *(unsigned char *)(a2 + 256);
    if (v18 != *(double *)(a2 + 248)) {
      char v35 = 1;
    }
    if (v35) {
      return 0;
    }
  }
  if (v57 == 255)
  {
    if (v56 != 255) {
      return 0;
    }
    goto LABEL_93;
  }
  if (v56 == 255) {
    return 0;
  }
  if ((v57 & 1) == 0)
  {
    if ((v56 & 1) != 0 || v50 != v49) {
      return 0;
    }
LABEL_93:
    if (v53)
    {
      if (!*(unsigned char *)(a2 + 312)) {
        return 0;
      }
    }
    else
    {
      char v36 = *(unsigned char *)(a2 + 312);
      if (v20 != *(double *)(a2 + 304)) {
        char v36 = 1;
      }
      if (v36) {
        return 0;
      }
    }
    if (v51)
    {
      if (!*(unsigned char *)(a2 + 328)) {
        return 0;
      }
    }
    else
    {
      char v37 = *(unsigned char *)(a2 + 328);
      if (v21 != *(double *)(a2 + 320)) {
        char v37 = 1;
      }
      if (v37) {
        return 0;
      }
    }
    if (v48)
    {
      if (!*(unsigned char *)(a2 + 344)) {
        return 0;
      }
    }
    else
    {
      char v38 = *(unsigned char *)(a2 + 344);
      if (v44 != *(void *)(a2 + 336)) {
        char v38 = 1;
      }
      if (v38) {
        return 0;
      }
    }
    if (v45)
    {
      if (!*(unsigned char *)(a2 + 360)) {
        return 0;
      }
    }
    else
    {
      char v39 = *(unsigned char *)(a2 + 360);
      if (v42 != *(void *)(a2 + 352)) {
        char v39 = 1;
      }
      if (v39) {
        return 0;
      }
    }
    if ((v43 & 1) == 0)
    {
      char v40 = *(unsigned char *)(a2 + 376);
      if (v41 != *(void *)(a2 + 368)) {
        char v40 = 1;
      }
      return (v40 & 1) == 0;
    }
    return (*(unsigned char *)(a2 + 376) & 1) != 0;
  }
  if ((v56 & 1) == 0) {
    return 0;
  }
  BOOL result = 0;
  if (v50 == v49 && v19 == *(double *)(a2 + 272) && v47 == *(void *)(a2 + 280) && v46 == *(void *)(a2 + 288)) {
    goto LABEL_93;
  }
  return result;
}

void *sub_1075A0(uint64_t a1, const void *a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  double v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    char v31 = _swiftEmptyArrayStorage;
    sub_46560(0, v2, 0);
    double v3 = _swiftEmptyArrayStorage;
    *(double *)&BOOL result = COERCE_DOUBLE(sub_73C38(a1));
    uint64_t v7 = (uint64_t)result;
    uint64_t v8 = 0;
    uint64_t v9 = a1 + 64;
    char v10 = *(unsigned char *)(a1 + 32);
    int64_t v25 = v2;
    int v26 = v6;
    uint64_t v27 = a1 + 64;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << v10)
    {
      unint64_t v13 = (unint64_t)v7 >> 6;
      if ((*(void *)(v9 + 8 * ((unint64_t)v7 >> 6)) & (1 << v7)) == 0) {
        goto LABEL_26;
      }
      if (*(_DWORD *)(a1 + 36) != v6) {
        goto LABEL_27;
      }
      uint64_t v14 = *(void *)(*(void *)(a1 + 48) + 8 * v7);
      memcpy(__dst, (const void *)(*(void *)(a1 + 56) + 384 * v7), sizeof(__dst));
      memcpy(v29, a2, 0x16BuLL);
      *(double *)&BOOL result = COERCE_DOUBLE(sub_18A530((uint64_t)v29));
      if (v15) {
        double v16 = INFINITY;
      }
      else {
        double v16 = *(double *)&result;
      }
      char v31 = v3;
      unint64_t v17 = v3[2];
      unint64_t v18 = v3[3];
      if (v17 >= v18 >> 1)
      {
        *(double *)&BOOL result = COERCE_DOUBLE(sub_46560(v18 > 1, v17 + 1, 1));
        double v3 = v31;
      }
      v3[2] = v17 + 1;
      double v19 = (double *)&v3[2 * v17];
      *((void *)v19 + 4) = v14;
      v19[5] = v16;
      char v10 = *(unsigned char *)(a1 + 32);
      unint64_t v11 = 1 << v10;
      if (v7 >= 1 << v10) {
        goto LABEL_28;
      }
      uint64_t v9 = a1 + 64;
      uint64_t v20 = *(void *)(v27 + 8 * v13);
      if ((v20 & (1 << v7)) == 0) {
        goto LABEL_29;
      }
      int v6 = v26;
      if (*(_DWORD *)(a1 + 36) != v26) {
        goto LABEL_30;
      }
      unint64_t v21 = v20 & (-2 << (v7 & 0x3F));
      if (v21)
      {
        unint64_t v11 = __clz(__rbit64(v21)) | v7 & 0xFFFFFFFFFFFFFFC0;
        int64_t v12 = v25;
      }
      else
      {
        unint64_t v22 = v13 + 1;
        unint64_t v23 = (v11 + 63) >> 6;
        int64_t v12 = v25;
        if (v13 + 1 < v23)
        {
          unint64_t v24 = *(void *)(v27 + 8 * v22);
          if (v24)
          {
LABEL_23:
            unint64_t v11 = __clz(__rbit64(v24)) + (v22 << 6);
          }
          else
          {
            while (v23 - 2 != v13)
            {
              unint64_t v24 = *(void *)(a1 + 80 + 8 * v13++);
              if (v24)
              {
                unint64_t v22 = v13 + 1;
                goto LABEL_23;
              }
            }
          }
        }
      }
      ++v8;
      uint64_t v7 = v11;
      if (v8 == v12) {
        return v3;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
  }
  else
  {
    return v3;
  }
  return result;
}

unint64_t sub_1077F8()
{
  unint64_t result = qword_26F898;
  if (!qword_26F898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F898);
  }
  return result;
}

unint64_t sub_10784C()
{
  unint64_t result = qword_26F8A0;
  if (!qword_26F8A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F8A0);
  }
  return result;
}

unint64_t sub_1078A0()
{
  unint64_t result = qword_26F8B8;
  if (!qword_26F8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F8B8);
  }
  return result;
}

unint64_t sub_1078F4()
{
  unint64_t result = qword_26F8C0;
  if (!qword_26F8C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F8C0);
  }
  return result;
}

uint64_t sub_107948(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26F8A8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1079AC()
{
  unint64_t result = qword_26F8E8;
  if (!qword_26F8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F8E8);
  }
  return result;
}

unint64_t sub_107A00()
{
  unint64_t result = qword_26F8F8;
  if (!qword_26F8F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F8F8);
  }
  return result;
}

unint64_t sub_107A54()
{
  unint64_t result = qword_26F900;
  if (!qword_26F900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F900);
  }
  return result;
}

unint64_t sub_107AA8()
{
  unint64_t result = qword_26F908;
  if (!qword_26F908)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F908);
  }
  return result;
}

unint64_t sub_107AFC()
{
  unint64_t result = qword_26F918;
  if (!qword_26F918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F918);
  }
  return result;
}

unint64_t sub_107B50()
{
  unint64_t result = qword_26F920;
  if (!qword_26F920)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F920);
  }
  return result;
}

unint64_t sub_107BA4()
{
  unint64_t result = qword_26F9C0;
  if (!qword_26F9C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9C0);
  }
  return result;
}

unint64_t sub_107BF8()
{
  unint64_t result = qword_26F9C8;
  if (!qword_26F9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9C8);
  }
  return result;
}

unint64_t sub_107C4C()
{
  unint64_t result = qword_26F9D0;
  if (!qword_26F9D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9D0);
  }
  return result;
}

unint64_t sub_107CA0()
{
  unint64_t result = qword_26F9D8;
  if (!qword_26F9D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9D8);
  }
  return result;
}

unint64_t sub_107CF4()
{
  unint64_t result = qword_26F9E0;
  if (!qword_26F9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9E0);
  }
  return result;
}

unint64_t sub_107D48()
{
  unint64_t result = qword_26F9E8;
  if (!qword_26F9E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9E8);
  }
  return result;
}

unint64_t sub_107D9C()
{
  unint64_t result = qword_26F9F0;
  if (!qword_26F9F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9F0);
  }
  return result;
}

unint64_t sub_107DF0()
{
  unint64_t result = qword_26F9F8;
  if (!qword_26F9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26F9F8);
  }
  return result;
}

unint64_t sub_107E44()
{
  unint64_t result = qword_26FA00;
  if (!qword_26FA00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA00);
  }
  return result;
}

unint64_t sub_107E98()
{
  unint64_t result = qword_26FA08;
  if (!qword_26FA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA08);
  }
  return result;
}

unint64_t sub_107EEC()
{
  unint64_t result = qword_26FA10;
  if (!qword_26FA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA10);
  }
  return result;
}

unint64_t sub_107F40()
{
  unint64_t result = qword_26FA18;
  if (!qword_26FA18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA18);
  }
  return result;
}

unint64_t sub_107F94()
{
  unint64_t result = qword_26FA20;
  if (!qword_26FA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA20);
  }
  return result;
}

unint64_t sub_107FE8()
{
  unint64_t result = qword_26FA28;
  if (!qword_26FA28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA28);
  }
  return result;
}

unint64_t sub_10803C()
{
  unint64_t result = qword_26FA30;
  if (!qword_26FA30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA30);
  }
  return result;
}

unint64_t sub_108090()
{
  unint64_t result = qword_26FA38;
  if (!qword_26FA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA38);
  }
  return result;
}

unint64_t sub_1080E4()
{
  unint64_t result = qword_26FA40;
  if (!qword_26FA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA40);
  }
  return result;
}

unint64_t sub_108138()
{
  unint64_t result = qword_26FA48;
  if (!qword_26FA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA48);
  }
  return result;
}

unint64_t sub_10818C()
{
  unint64_t result = qword_26FA50;
  if (!qword_26FA50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FA50);
  }
  return result;
}

unint64_t sub_1081E0()
{
  unint64_t result = qword_26FAF0;
  if (!qword_26FAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FAF0);
  }
  return result;
}

unint64_t sub_108234()
{
  unint64_t result = qword_26FB00;
  if (!qword_26FB00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB00);
  }
  return result;
}

unint64_t sub_108288()
{
  unint64_t result = qword_26FB08;
  if (!qword_26FB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB08);
  }
  return result;
}

unint64_t sub_1082DC()
{
  unint64_t result = qword_26FB10;
  if (!qword_26FB10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB10);
  }
  return result;
}

unint64_t sub_108330()
{
  unint64_t result = qword_26FB20;
  if (!qword_26FB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB20);
  }
  return result;
}

unint64_t sub_108384()
{
  unint64_t result = qword_26FB28;
  if (!qword_26FB28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB28);
  }
  return result;
}

unint64_t sub_1083DC()
{
  unint64_t result = qword_26FB30;
  if (!qword_26FB30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB30);
  }
  return result;
}

unint64_t sub_108434()
{
  unint64_t result = qword_26FB38;
  if (!qword_26FB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB38);
  }
  return result;
}

unint64_t sub_10848C()
{
  unint64_t result = qword_26FB40;
  if (!qword_26FB40)
  {
    sub_121C4(&qword_26FB48);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB40);
  }
  return result;
}

unint64_t sub_1084EC()
{
  unint64_t result = qword_26FB50;
  if (!qword_26FB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB50);
  }
  return result;
}

unint64_t sub_108544()
{
  unint64_t result = qword_26FB58;
  if (!qword_26FB58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FB58);
  }
  return result;
}

void *sub_108598()
{
  return &protocol witness table for UInt64;
}

void *initializeWithCopy for BookHistory(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x179uLL);
}

uint64_t getEnumTagSinglePayload for BookHistory(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 377)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 80);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = (v3 ^ 0xFF) - 1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookHistory(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 376) = 0;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 377) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 377) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 80) = ~(_BYTE)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory()
{
  return &type metadata for BookHistory;
}

uint64_t getEnumTagSinglePayload for BookHistory.CollectionAddition(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 33)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 32);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookHistory.CollectionAddition(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(unsigned char *)(result + 32) = 0;
    *(void *)unint64_t result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 33) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 32) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_108740(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 32);
}

uint64_t sub_108748(uint64_t result, char a2)
{
  *(unsigned char *)(result + 32) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.CollectionAddition()
{
  return &type metadata for BookHistory.CollectionAddition;
}

uint64_t getEnumTagSinglePayload for BookHistory.MarkedFinishedInfo(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 40);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookHistory.MarkedFinishedInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 40) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo()
{
  return &type metadata for BookHistory.MarkedFinishedInfo;
}

ValueMetadata *type metadata accessor for BookHistory.Feature()
{
  return &type metadata for BookHistory.Feature;
}

void *assignWithCopy for BookHistoryFetchAssetGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BookHistoryFetchAssetGroup(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookHistoryFetchAssetGroup(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  if ((v3 + 1) >= 2) {
    return v3;
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for BookHistoryFetchAssetGroup(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)unint64_t result = 0;
    *(_DWORD *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

void *sub_108938(void *result, int a2)
{
  if (a2 < 0)
  {
    unsigned int v2 = a2 ^ 0x80000000;
  }
  else
  {
    if (!a2) {
      return result;
    }
    unsigned int v2 = a2 - 1;
  }
  *unint64_t result = v2;
  return result;
}

ValueMetadata *type metadata accessor for BookHistoryFetchAssetGroup()
{
  return &type metadata for BookHistoryFetchAssetGroup;
}

uint64_t dispatch thunk of BookHistoryServiceType.fetchBookHistory(assetGroup:for:limit:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  char v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  unint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  void *v13 = v6;
  v13[1] = sub_57490;
  return v15(a1, a2, a3, a4, a5, a6);
}

uint64_t sub_108A8C()
{
  return type metadata accessor for BookHistoryService();
}

uint64_t type metadata accessor for BookHistoryService()
{
  uint64_t result = qword_26FB98;
  if (!qword_26FB98) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_108AE0()
{
  uint64_t result = sub_1FB220();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for BookHistory.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEE) {
    goto LABEL_17;
  }
  if (a2 + 18 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 18) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 18;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 18;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x13;
  int v8 = v6 - 19;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for BookHistory.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 18 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 18) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xED)
  {
    unsigned int v6 = ((a2 - 238) >> 8) + 1;
    *uint64_t result = a2 + 18;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x108CDCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 18;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.CodingKeys()
{
  return &type metadata for BookHistory.CodingKeys;
}

uint64_t getEnumTagSinglePayload for BookHistory.Errors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xEF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 239);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 0x11) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BookHistory.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xEE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)uint64_t result = a2 - 239;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xEF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xEF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.Errors()
{
  return &type metadata for BookHistory.Errors;
}

uint64_t _s11descr251E29O29EventAggregationConfigurationV15EventConditionsV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xEF) {
    goto LABEL_17;
  }
  if (a2 + 17 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 17) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 17;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 17;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0x12;
  int v8 = v6 - 18;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20BooksPersonalization11BookHistoryV7FeatureOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *uint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x108F0CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.CodingKeys()
{
  return &type metadata for BookHistory.Feature.CodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.ReadFractionHighWaterMarkCodingKeys()
{
  return &type metadata for BookHistory.Feature.ReadFractionHighWaterMarkCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.MarkedFinishedInfoCodingKeys()
{
  return &type metadata for BookHistory.Feature.MarkedFinishedInfoCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SampleReadFractionHighWaterMarkCodingKeys()
{
  return &type metadata for BookHistory.Feature.SampleReadFractionHighWaterMarkCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.ReviewInfoCodingKeys()
{
  return &type metadata for BookHistory.Feature.ReviewInfoCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceMoreLikeThisCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceMoreLikeThisCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceLessLikeThisCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceLessLikeThisCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceExplicitDeclineCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceExplicitDeclineCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceLastReadCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceLastReadCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSincePurchasedCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSincePurchasedCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceFirstDownloadedViaFamilySharingCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceFirstDownloadedViaFamilySharingCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceAddedToWantToReadCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceAddedToWantToReadCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceRemovedFromWantToReadCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceRemovedFromWantToReadCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceSampledCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceSampledCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceProductPageViewedCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceProductPageViewedCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.SecondsSinceFirstRecommendedCodingKeys()
{
  return &type metadata for BookHistory.Feature.SecondsSinceFirstRecommendedCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.DaysRecommendedCountCodingKeys()
{
  return &type metadata for BookHistory.Feature.DaysRecommendedCountCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.ConsecutiveDaysNotRecommendedCountCodingKeys()
{
  return &type metadata for BookHistory.Feature.ConsecutiveDaysNotRecommendedCountCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.Feature.DaysRecommendationPassedOverCountCodingKeys()
{
  return &type metadata for BookHistory.Feature.DaysRecommendationPassedOverCountCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo.Mechanism()
{
  return &type metadata for BookHistory.MarkedFinishedInfo.Mechanism;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo.CodingKeys()
{
  return &type metadata for BookHistory.MarkedFinishedInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.CollectionAddition.CodingKeys()
{
  return &type metadata for BookHistory.CollectionAddition.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BookHistory.CollectionAddition.AddedAtCodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x109138);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.CollectionAddition.AddedAtCodingKeys()
{
  return &type metadata for BookHistory.CollectionAddition.AddedAtCodingKeys;
}

unsigned char *_s20BooksPersonalization11BookHistoryV18MarkedFinishedInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10923CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.CollectionAddition.AddedInCodingKeys()
{
  return &type metadata for BookHistory.CollectionAddition.AddedInCodingKeys;
}

unint64_t sub_109278()
{
  unint64_t result = qword_26FC40;
  if (!qword_26FC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC40);
  }
  return result;
}

unint64_t sub_1092D0()
{
  unint64_t result = qword_26FC48;
  if (!qword_26FC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC48);
  }
  return result;
}

unint64_t sub_109328()
{
  unint64_t result = qword_26FC50;
  if (!qword_26FC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC50);
  }
  return result;
}

unint64_t sub_109380()
{
  unint64_t result = qword_26FC58;
  if (!qword_26FC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC58);
  }
  return result;
}

unint64_t sub_1093D8()
{
  unint64_t result = qword_26FC60;
  if (!qword_26FC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC60);
  }
  return result;
}

unint64_t sub_109430()
{
  unint64_t result = qword_26FC68;
  if (!qword_26FC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC68);
  }
  return result;
}

unint64_t sub_109488()
{
  unint64_t result = qword_26FC70;
  if (!qword_26FC70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC70);
  }
  return result;
}

unint64_t sub_1094E0()
{
  unint64_t result = qword_26FC80;
  if (!qword_26FC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC80);
  }
  return result;
}

unint64_t sub_109538()
{
  unint64_t result = qword_26FC88;
  if (!qword_26FC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC88);
  }
  return result;
}

unint64_t sub_109590()
{
  unint64_t result = qword_26FC90;
  if (!qword_26FC90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC90);
  }
  return result;
}

unint64_t sub_1095E8()
{
  unint64_t result = qword_26FC98;
  if (!qword_26FC98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FC98);
  }
  return result;
}

unint64_t sub_109640()
{
  unint64_t result = qword_26FCA0;
  if (!qword_26FCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCA0);
  }
  return result;
}

unint64_t sub_109698()
{
  unint64_t result = qword_26FCA8;
  if (!qword_26FCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCA8);
  }
  return result;
}

unint64_t sub_1096F0()
{
  unint64_t result = qword_26FCB0;
  if (!qword_26FCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCB0);
  }
  return result;
}

unint64_t sub_109748()
{
  unint64_t result = qword_26FCB8;
  if (!qword_26FCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCB8);
  }
  return result;
}

unint64_t sub_1097A0()
{
  unint64_t result = qword_26FCC0;
  if (!qword_26FCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCC0);
  }
  return result;
}

unint64_t sub_1097F8()
{
  unint64_t result = qword_26FCC8;
  if (!qword_26FCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCC8);
  }
  return result;
}

unint64_t sub_109850()
{
  unint64_t result = qword_26FCD0;
  if (!qword_26FCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCD0);
  }
  return result;
}

unint64_t sub_1098A8()
{
  unint64_t result = qword_26FCD8;
  if (!qword_26FCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCD8);
  }
  return result;
}

unint64_t sub_109900()
{
  unint64_t result = qword_26FCE0;
  if (!qword_26FCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCE0);
  }
  return result;
}

unint64_t sub_109958()
{
  unint64_t result = qword_26FCE8;
  if (!qword_26FCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCE8);
  }
  return result;
}

unint64_t sub_1099B0()
{
  unint64_t result = qword_26FCF0;
  if (!qword_26FCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCF0);
  }
  return result;
}

unint64_t sub_109A08()
{
  unint64_t result = qword_26FCF8;
  if (!qword_26FCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FCF8);
  }
  return result;
}

unint64_t sub_109A60()
{
  unint64_t result = qword_26FD00;
  if (!qword_26FD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD00);
  }
  return result;
}

unint64_t sub_109AB8()
{
  unint64_t result = qword_26FD08;
  if (!qword_26FD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD08);
  }
  return result;
}

unint64_t sub_109B10()
{
  unint64_t result = qword_26FD10;
  if (!qword_26FD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD10);
  }
  return result;
}

unint64_t sub_109B68()
{
  unint64_t result = qword_26FD18;
  if (!qword_26FD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD18);
  }
  return result;
}

unint64_t sub_109BC0()
{
  unint64_t result = qword_26FD20;
  if (!qword_26FD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD20);
  }
  return result;
}

unint64_t sub_109C18()
{
  unint64_t result = qword_26FD28;
  if (!qword_26FD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD28);
  }
  return result;
}

unint64_t sub_109C70()
{
  unint64_t result = qword_26FD30;
  if (!qword_26FD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD30);
  }
  return result;
}

unint64_t sub_109CC8()
{
  unint64_t result = qword_26FD38;
  if (!qword_26FD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD38);
  }
  return result;
}

unint64_t sub_109D20()
{
  unint64_t result = qword_26FD40;
  if (!qword_26FD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD40);
  }
  return result;
}

unint64_t sub_109D78()
{
  unint64_t result = qword_26FD48;
  if (!qword_26FD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD48);
  }
  return result;
}

unint64_t sub_109DD0()
{
  unint64_t result = qword_26FD50;
  if (!qword_26FD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD50);
  }
  return result;
}

unint64_t sub_109E28()
{
  unint64_t result = qword_26FD58;
  if (!qword_26FD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD58);
  }
  return result;
}

unint64_t sub_109E80()
{
  unint64_t result = qword_26FD60;
  if (!qword_26FD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD60);
  }
  return result;
}

unint64_t sub_109ED8()
{
  unint64_t result = qword_26FD68;
  if (!qword_26FD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD68);
  }
  return result;
}

unint64_t sub_109F30()
{
  unint64_t result = qword_26FD70;
  if (!qword_26FD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD70);
  }
  return result;
}

unint64_t sub_109F88()
{
  unint64_t result = qword_26FD78;
  if (!qword_26FD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD78);
  }
  return result;
}

unint64_t sub_109FE0()
{
  unint64_t result = qword_26FD80;
  if (!qword_26FD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD80);
  }
  return result;
}

unint64_t sub_10A038()
{
  unint64_t result = qword_26FD88;
  if (!qword_26FD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD88);
  }
  return result;
}

unint64_t sub_10A090()
{
  unint64_t result = qword_26FD90;
  if (!qword_26FD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD90);
  }
  return result;
}

unint64_t sub_10A0E8()
{
  unint64_t result = qword_26FD98;
  if (!qword_26FD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FD98);
  }
  return result;
}

unint64_t sub_10A140()
{
  unint64_t result = qword_26FDA0;
  if (!qword_26FDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDA0);
  }
  return result;
}

unint64_t sub_10A198()
{
  unint64_t result = qword_26FDA8;
  if (!qword_26FDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDA8);
  }
  return result;
}

unint64_t sub_10A1F0()
{
  unint64_t result = qword_26FDB0;
  if (!qword_26FDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDB0);
  }
  return result;
}

unint64_t sub_10A248()
{
  unint64_t result = qword_26FDB8;
  if (!qword_26FDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDB8);
  }
  return result;
}

unint64_t sub_10A2A0()
{
  unint64_t result = qword_26FDC0;
  if (!qword_26FDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDC0);
  }
  return result;
}

unint64_t sub_10A2F8()
{
  unint64_t result = qword_26FDC8;
  if (!qword_26FDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDC8);
  }
  return result;
}

unint64_t sub_10A350()
{
  unint64_t result = qword_26FDD0;
  if (!qword_26FDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDD0);
  }
  return result;
}

unint64_t sub_10A3A8()
{
  unint64_t result = qword_26FDD8;
  if (!qword_26FDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDD8);
  }
  return result;
}

unint64_t sub_10A400()
{
  unint64_t result = qword_26FDE0;
  if (!qword_26FDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDE0);
  }
  return result;
}

unint64_t sub_10A458()
{
  unint64_t result = qword_26FDE8;
  if (!qword_26FDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDE8);
  }
  return result;
}

unint64_t sub_10A4B0()
{
  unint64_t result = qword_26FDF0;
  if (!qword_26FDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDF0);
  }
  return result;
}

unint64_t sub_10A508()
{
  unint64_t result = qword_26FDF8;
  if (!qword_26FDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FDF8);
  }
  return result;
}

uint64_t sub_10A55C(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v24 = (unint64_t *)result;
  uint64_t v5 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = a4 + 56;
  while (1)
  {
    while (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v6 << 6);
      if (*(void *)(a4 + 16))
      {
LABEL_19:
        uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
        unint64_t result = sub_1FC7D0();
        uint64_t v19 = -1 << *(unsigned char *)(a4 + 32);
        unint64_t v20 = result & ~v19;
        if ((*(void *)(v12 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20))
        {
          uint64_t v21 = *(void *)(a4 + 48);
          if (*(void *)(v21 + 8 * v20) == v18)
          {
LABEL_24:
            *(unint64_t *)((char *)v24 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
            BOOL v15 = __OFADD__(v5++, 1);
            if (v15) {
              goto LABEL_33;
            }
          }
          else
          {
            uint64_t v22 = ~v19;
            while (1)
            {
              unint64_t v20 = (v20 + 1) & v22;
              if (((*(void *)(v12 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
                break;
              }
              if (*(void *)(v21 + 8 * v20) == v18) {
                goto LABEL_24;
              }
            }
          }
        }
      }
    }
    BOOL v15 = __OFADD__(v6++, 1);
    if (v15)
    {
      __break(1u);
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
    if (v6 >= v11) {
      return sub_722D4(v24, a2, v5, a3);
    }
    unint64_t v16 = *(void *)(v7 + 8 * v6);
    if (!v16) {
      break;
    }
LABEL_18:
    unint64_t v10 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v6 << 6);
    if (*(void *)(a4 + 16)) {
      goto LABEL_19;
    }
  }
  int64_t v17 = v6 + 1;
  if (v6 + 1 >= v11) {
    return sub_722D4(v24, a2, v5, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_17;
  }
  int64_t v17 = v6 + 2;
  if (v6 + 2 >= v11) {
    return sub_722D4(v24, a2, v5, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16) {
    goto LABEL_17;
  }
  int64_t v17 = v6 + 3;
  if (v6 + 3 >= v11) {
    return sub_722D4(v24, a2, v5, a3);
  }
  unint64_t v16 = *(void *)(v7 + 8 * v17);
  if (v16)
  {
LABEL_17:
    int64_t v6 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v6 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_722D4(v24, a2, v5, a3);
    }
    unint64_t v16 = *(void *)(v7 + 8 * v6);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_34:
  __break(1u);
  return result;
}

uint64_t sub_10A768(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6C61767265746E69 && a2 == 0xE800000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 1868983913 && a2 == 0xE400000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10A84C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x74416465646461 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6E496465646461 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_10A940(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x796C6C61756E616DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6974616D6F747561 && a2 == 0xED0000796C6C6163 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6E776F6E6B6E75 && a2 == 0xE700000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

void *sub_10AABC(void *a1)
{
  uint64_t v2 = sub_12124(&qword_26FE40);
  uint64_t v25 = *(void *)(v2 - 8);
  uint64_t v26 = v2;
  __chkstk_darwin(v2);
  char v29 = (char *)&v21 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v27 = sub_12124(&qword_26FE48);
  uint64_t v24 = *(void *)(v27 - 8);
  __chkstk_darwin(v27);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_12124(&qword_26FE50);
  uint64_t v23 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_26FE58);
  uint64_t v28 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int64_t v11 = (uint64_t *)((char *)&v21 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_5D64(a1, a1[3]);
  sub_10B128();
  uint64_t v12 = (uint64_t)v30;
  sub_1FC850();
  if (v12) {
    goto LABEL_7;
  }
  uint64_t v22 = v6;
  unint64_t v13 = v29;
  char v30 = a1;
  unint64_t v14 = v11;
  uint64_t v15 = sub_1FC430();
  if (*(void *)(v15 + 16) != 1)
  {
    uint64_t v17 = sub_1FC0F0();
    swift_allocError();
    int64_t v11 = v18;
    sub_12124(&qword_26F030);
    *int64_t v11 = &type metadata for BookHistory.MarkedFinishedInfo.Mechanism;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v11, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
    a1 = v30;
LABEL_7:
    sub_1264C((uint64_t)a1);
    return v11;
  }
  int64_t v11 = (void *)*(unsigned __int8 *)(v15 + 32);
  if (*(unsigned char *)(v15 + 32))
  {
    if (v11 == 1)
    {
      char v32 = 1;
      sub_10B1D0();
      sub_1FC2F0();
      uint64_t v16 = v28;
      (*(void (**)(char *, uint64_t))(v24 + 8))(v5, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v16 + 8))(v14, v9);
    }
    else
    {
      char v33 = 2;
      sub_10B17C();
      sub_1FC2F0();
      uint64_t v20 = v28;
      (*(void (**)(char *, uint64_t))(v25 + 8))(v13, v26);
      swift_bridgeObjectRelease();
      (*(void (**)(void *, uint64_t))(v20 + 8))(v14, v9);
    }
  }
  else
  {
    char v31 = 0;
    sub_10B224();
    sub_1FC2F0();
    (*(void (**)(char *, uint64_t))(v23 + 8))(v8, v22);
    swift_bridgeObjectRelease();
    (*(void (**)(void *, uint64_t))(v28 + 8))(v14, v9);
  }
  sub_1264C((uint64_t)v30);
  return v11;
}

uint64_t sub_10B02C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x73696E616863656DLL && a2 == 0xE90000000000006DLL;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000000218D60)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

unint64_t sub_10B128()
{
  unint64_t result = qword_26FE20;
  if (!qword_26FE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE20);
  }
  return result;
}

unint64_t sub_10B17C()
{
  unint64_t result = qword_26FE28;
  if (!qword_26FE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE28);
  }
  return result;
}

unint64_t sub_10B1D0()
{
  unint64_t result = qword_26FE30;
  if (!qword_26FE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE30);
  }
  return result;
}

unint64_t sub_10B224()
{
  unint64_t result = qword_26FE38;
  if (!qword_26FE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE38);
  }
  return result;
}

uint64_t sub_10B278(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000019 && a2 == 0x8000000000216B00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000218D80 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000000216B20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E49776569766572 && a2 == 0xEA00000000006F66 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000000218DA0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000000218DC0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000000218DE0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000218E00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000000218E20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x8000000000218E40 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000000218E70 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000000218E90 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000000218EC0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000000218EE0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000000218F00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000218F20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000000218F40 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000000218F70)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_10B8E8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000000216B00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x8000000000216B20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000218D80 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x6E49776569766572 && a2 == 0xEA00000000006F66 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000000218DA0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000000218DC0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD00000000000001BLL && a2 == 0x8000000000218DE0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000218E00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000000218E20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD00000000000002BLL && a2 == 0x8000000000218E40 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000218FA0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000000218E90 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x64656C706D6173 && a2 == 0xE700000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x8000000000218EE0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0xD00000000000001CLL && a2 == 0x8000000000218F00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000218F20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0xD000000000000022 && a2 == 0x8000000000218F40 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else if (a1 == 0xD000000000000021 && a2 == 0x8000000000218F70)
  {
    swift_bridgeObjectRelease();
    return 18;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 18;
    }
    else {
      return 19;
    }
  }
}

unint64_t sub_10BFC0()
{
  unint64_t result = qword_26FE80;
  if (!qword_26FE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE80);
  }
  return result;
}

uint64_t sub_10C014(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_10C07C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

uint64_t sub_10C0E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoreBook(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10C148@<X0>(uint64_t a1@<X8>)
{
  uint64_t result = sub_1FB040();
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = 0;
  return result;
}

uint64_t sub_10C188(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_10C1F0(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

unsigned char *_s20BooksPersonalization11BookHistoryV18MarkedFinishedInfoV9MechanismOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10C31CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo.Mechanism.CodingKeys()
{
  return &type metadata for BookHistory.MarkedFinishedInfo.Mechanism.CodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo.Mechanism.ManuallyCodingKeys()
{
  return &type metadata for BookHistory.MarkedFinishedInfo.Mechanism.ManuallyCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo.Mechanism.AutomaticallyCodingKeys()
{
  return &type metadata for BookHistory.MarkedFinishedInfo.Mechanism.AutomaticallyCodingKeys;
}

ValueMetadata *type metadata accessor for BookHistory.MarkedFinishedInfo.Mechanism.UnknownCodingKeys()
{
  return &type metadata for BookHistory.MarkedFinishedInfo.Mechanism.UnknownCodingKeys;
}

unint64_t sub_10C388()
{
  unint64_t result = qword_26FE90;
  if (!qword_26FE90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE90);
  }
  return result;
}

unint64_t sub_10C3E0()
{
  unint64_t result = qword_26FE98;
  if (!qword_26FE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FE98);
  }
  return result;
}

unint64_t sub_10C438()
{
  unint64_t result = qword_26FEA0;
  if (!qword_26FEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FEA0);
  }
  return result;
}

unint64_t sub_10C490()
{
  unint64_t result = qword_26FEA8;
  if (!qword_26FEA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FEA8);
  }
  return result;
}

unint64_t sub_10C4E8()
{
  unint64_t result = qword_26FEB0;
  if (!qword_26FEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FEB0);
  }
  return result;
}

unint64_t sub_10C540()
{
  unint64_t result = qword_26FEB8;
  if (!qword_26FEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FEB8);
  }
  return result;
}

unint64_t sub_10C598()
{
  unint64_t result = qword_26FEC0;
  if (!qword_26FEC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FEC0);
  }
  return result;
}

unint64_t sub_10C5F0()
{
  unint64_t result = qword_26FEC8;
  if (!qword_26FEC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FEC8);
  }
  return result;
}

unint64_t sub_10C648()
{
  unint64_t result = qword_26FED0;
  if (!qword_26FED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FED0);
  }
  return result;
}

uint64_t sub_10C69C@<X0>(uint64_t a1@<X8>)
{
  return sub_10C148(a1);
}

uint64_t dispatch thunk of ScoredBookProcessorServiceType.process(_:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t sub_10C7B8()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_26FED8);
  sub_6DBC8(v0, (uint64_t)qword_26FED8);
  return sub_1FB420();
}

uint64_t sub_10C838(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_10C858, 0, 0);
}

uint64_t sub_10C858()
{
  uint64_t v12 = v0;
  uint64_t v1 = v0[2];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (uint64_t *)(v1 + 32);
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v4 = *v3;
      v3 += 10;
      sub_73A4(&v11, v4);
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
  v0[4] = _swiftEmptySetSingleton;
  uint64_t v5 = (void *)v0[3];
  uint64_t v6 = v5[5];
  uint64_t v7 = v5[6];
  sub_5D64(v5 + 2, v6);
  uint64_t v10 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v7 + 40) + **(int **)(v7 + 40));
  uint64_t v8 = (void *)swift_task_alloc();
  v0[5] = v8;
  void *v8 = v0;
  v8[1] = sub_10C9B4;
  return v10(_swiftEmptySetSingleton, v6, v7);
}

uint64_t sub_10C9B4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 48) = a1;
  *(void *)(v3 + 56) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10D484;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10CAD0;
  }
  return _swift_task_switch(v4, 0, 0);
}

void *sub_10CAD0()
{
  uint64_t v39 = v0;
  uint64_t v1 = *(void *)(*(void *)(v0 + 48) + 16);
  if (v1)
  {
    uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 64);
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    uint64_t v4 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      if (*v2 & 1) != 0 || (*(v2 - 16)) {
        goto LABEL_5;
      }
      uint64_t v5 = *((void *)v2 - 4);
      uint64_t v6 = *((void *)v2 - 3);
      uint64_t v37 = *((void *)v2 - 1);
      sub_73A4((uint64_t *)&v38, v6);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      char v38 = v4;
      unint64_t v9 = sub_56168(v5);
      uint64_t v10 = v4[2];
      BOOL v11 = (v8 & 1) == 0;
      unint64_t result = (void *)(v10 + v11);
      if (__OFADD__(v10, v11))
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
LABEL_41:
        __break(1u);
        return result;
      }
      char v13 = v8;
      if (v4[3] >= (uint64_t)result)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v8) {
            goto LABEL_15;
          }
        }
        else
        {
          unint64_t result = sub_120598();
          uint64_t v4 = v38;
          if (v13) {
            goto LABEL_15;
          }
        }
      }
      else
      {
        sub_116FE4((uint64_t)result, isUniquelyReferenced_nonNull_native);
        uint64_t v4 = v38;
        unint64_t result = (void *)sub_56168(v5);
        if ((v13 & 1) != (v14 & 1)) {
          goto LABEL_35;
        }
        unint64_t v9 = (unint64_t)result;
        if (v13)
        {
LABEL_15:
          *(void *)(v4[7] + 8 * v9) = v6;
          goto LABEL_19;
        }
      }
      v4[(v9 >> 6) + 8] |= 1 << v9;
      uint64_t v15 = 8 * v9;
      *(void *)(v4[6] + v15) = v5;
      *(void *)(v4[7] + v15) = v6;
      uint64_t v16 = v4[2];
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17) {
        goto LABEL_40;
      }
      v4[2] = v18;
LABEL_19:
      swift_bridgeObjectRelease();
      char v19 = swift_isUniquelyReferenced_nonNull_native();
      char v38 = v3;
      unint64_t v21 = sub_56168(v5);
      uint64_t v22 = v3[2];
      BOOL v23 = (v20 & 1) == 0;
      unint64_t result = (void *)(v22 + v23);
      if (__OFADD__(v22, v23)) {
        goto LABEL_39;
      }
      char v24 = v20;
      if (v3[3] >= (uint64_t)result)
      {
        if (v19)
        {
          uint64_t v26 = v37;
          if ((v20 & 1) == 0) {
            goto LABEL_26;
          }
        }
        else
        {
          unint64_t result = sub_122B9C();
          uint64_t v3 = v38;
          uint64_t v26 = v37;
          if ((v24 & 1) == 0) {
            goto LABEL_26;
          }
        }
      }
      else
      {
        sub_11BF38((uint64_t)result, v19);
        uint64_t v3 = v38;
        unint64_t result = (void *)sub_56168(v5);
        if ((v24 & 1) != (v25 & 1))
        {
LABEL_35:
          return (void *)sub_1FC770();
        }
        unint64_t v21 = (unint64_t)result;
        uint64_t v26 = v37;
        if ((v24 & 1) == 0)
        {
LABEL_26:
          v3[(v21 >> 6) + 8] |= 1 << v21;
          uint64_t v27 = 8 * v21;
          *(void *)(v3[6] + v27) = v5;
          *(void *)(v3[7] + v27) = v26;
          uint64_t v28 = v3[2];
          BOOL v17 = __OFADD__(v28, 1);
          uint64_t v29 = v28 + 1;
          if (v17) {
            goto LABEL_41;
          }
          v3[2] = v29;
          goto LABEL_4;
        }
      }
      *(void *)(v3[7] + 8 * v21) = v26;
LABEL_4:
      swift_bridgeObjectRelease();
LABEL_5:
      v2 += 40;
      if (!--v1)
      {
        char v30 = v35;
        swift_bridgeObjectRelease();
        goto LABEL_32;
      }
    }
  }
  uint64_t v3 = _swiftEmptyDictionarySingleton;
  uint64_t v4 = _swiftEmptyDictionarySingleton;
  char v30 = v35;
LABEL_32:
  v30[9] = v3;
  v30[10] = v4;
  v30[8] = _swiftEmptySetSingleton;
  char v31 = (void *)v30[3];
  swift_bridgeObjectRelease();
  uint64_t v32 = v31[5];
  uint64_t v33 = v31[6];
  sub_5D64(v31 + 2, v32);
  char v36 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v33 + 48) + **(int **)(v33 + 48));
  char v34 = (void *)swift_task_alloc();
  v30[11] = v34;
  *char v34 = v30;
  v34[1] = sub_10CEBC;
  return (void *)v36(_swiftEmptySetSingleton, v32, v33);
}

uint64_t sub_10CEBC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_10D4E8;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10CFD8;
  }
  return _swift_task_switch(v4, 0, 0);
}

void *sub_10CFD8()
{
  double v50 = v0;
  uint64_t v1 = v0[12];
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
    BOOL v23 = _swiftEmptyDictionarySingleton;
    goto LABEL_56;
  }
  swift_bridgeObjectRetain();
  uint64_t v3 = (unsigned char *)(v1 + 65);
  uint64_t v4 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    if ((*(v3 - 1) & 1) != 0 || (*(v3 - 17) & 1) != 0 || !*v3) {
      goto LABEL_5;
    }
    uint64_t v5 = *(void *)(v3 - 25);
    uint64_t v6 = *(void *)(v3 - 9);
    if (v4[2] && (uint64_t v7 = sub_56168(*(void *)(v3 - 25)), (v8 & 1) != 0))
    {
      if (*(void *)(v4[7] + 8 * v7) >= v6) {
        goto LABEL_5;
      }
    }
    else if (v6 < 0)
    {
      goto LABEL_5;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    double v49 = v4;
    unint64_t v11 = sub_56168(v5);
    uint64_t v12 = v4[2];
    BOOL v13 = (v10 & 1) == 0;
    unint64_t result = (void *)(v12 + v13);
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v15 = v10;
    if (v4[3] >= (uint64_t)result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v10 & 1) == 0) {
          goto LABEL_21;
        }
      }
      else
      {
        unint64_t result = sub_122B9C();
        uint64_t v4 = v49;
        if ((v15 & 1) == 0) {
          goto LABEL_21;
        }
      }
    }
    else
    {
      sub_11BF38((uint64_t)result, isUniquelyReferenced_nonNull_native);
      uint64_t v4 = v49;
      unint64_t result = (void *)sub_56168(v5);
      if ((v15 & 1) != (v16 & 1))
      {
LABEL_59:
        return (void *)sub_1FC770();
      }
      unint64_t v11 = (unint64_t)result;
      if ((v15 & 1) == 0)
      {
LABEL_21:
        v4[(v11 >> 6) + 8] |= 1 << v11;
        uint64_t v17 = 8 * v11;
        *(void *)(v4[6] + v17) = v5;
        *(void *)(v4[7] + v17) = v6;
        uint64_t v18 = v4[2];
        BOOL v19 = __OFADD__(v18, 1);
        uint64_t v20 = v18 + 1;
        if (v19) {
          goto LABEL_63;
        }
        v4[2] = v20;
        goto LABEL_4;
      }
    }
    *(void *)(v4[7] + 8 * v11) = v6;
LABEL_4:
    swift_bridgeObjectRelease();
LABEL_5:
    v3 += 40;
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(v1 + 16);
      if (!v21)
      {
        BOOL v23 = _swiftEmptyDictionarySingleton;
        uint64_t v0 = v48;
LABEL_56:
        uint64_t v43 = v0[9];
        uint64_t v42 = v0[10];
        uint64_t v44 = v0[2];
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        double v49 = _swiftEmptySetSingleton;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v45 = sub_10DB78(v44, v42, v43, (uint64_t)v23, (uint64_t *)&v49);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        uint64_t v46 = (uint64_t (*)(void *))v0[1];
        return (void *)v46(v45);
      }
      swift_bridgeObjectRetain();
      uint64_t v22 = (unsigned char *)(v1 + 64);
      BOOL v23 = _swiftEmptyDictionarySingleton;
      while (1)
      {
        if (*v22 & 1) != 0 || (*(v22 - 16)) {
          goto LABEL_29;
        }
        uint64_t v26 = *((void *)v22 - 4);
        uint64_t v25 = *((void *)v22 - 3);
        uint64_t v27 = *((void *)v22 - 1);
        if (v4[2] && (uint64_t v28 = sub_56168(*((void *)v22 - 3)), (v29 & 1) != 0))
        {
          if (*(void *)(v4[7] + 8 * v28) >= v27) {
            goto LABEL_29;
          }
        }
        else if (v27 < 0)
        {
          goto LABEL_29;
        }
        if (v23[2] && (uint64_t v30 = sub_56168(v25), (v31 & 1) != 0))
        {
          if (v27 >= *(void *)(v23[7] + 16 * v30)) {
            goto LABEL_29;
          }
        }
        else if (v27 == 0x7FFFFFFFFFFFFFFFLL)
        {
          goto LABEL_29;
        }
        uint64_t v47 = v26;
        char v32 = swift_isUniquelyReferenced_nonNull_native();
        double v49 = v23;
        unint64_t v34 = sub_56168(v25);
        uint64_t v35 = v23[2];
        BOOL v36 = (v33 & 1) == 0;
        unint64_t result = (void *)(v35 + v36);
        if (__OFADD__(v35, v36)) {
          goto LABEL_64;
        }
        char v37 = v33;
        if (v23[3] >= (uint64_t)result)
        {
          if (v32)
          {
            if ((v33 & 1) == 0) {
              goto LABEL_49;
            }
          }
          else
          {
            unint64_t result = sub_122D30();
            BOOL v23 = v49;
            if ((v37 & 1) == 0) {
              goto LABEL_49;
            }
          }
        }
        else
        {
          sub_11C1E8((uint64_t)result, v32);
          BOOL v23 = v49;
          unint64_t result = (void *)sub_56168(v25);
          if ((v37 & 1) != (v38 & 1)) {
            goto LABEL_59;
          }
          unint64_t v34 = (unint64_t)result;
          if ((v37 & 1) == 0)
          {
LABEL_49:
            v23[(v34 >> 6) + 8] |= 1 << v34;
            *(void *)(v23[6] + 8 * v34) = v25;
            uint64_t v39 = (void *)(v23[7] + 16 * v34);
            *uint64_t v39 = v27;
            v39[1] = v47;
            uint64_t v40 = v23[2];
            BOOL v19 = __OFADD__(v40, 1);
            uint64_t v41 = v40 + 1;
            if (v19) {
              goto LABEL_65;
            }
            v23[2] = v41;
            goto LABEL_28;
          }
        }
        char v24 = (void *)(v23[7] + 16 * v34);
        *char v24 = v27;
        v24[1] = v47;
LABEL_28:
        swift_bridgeObjectRelease();
LABEL_29:
        v22 += 40;
        if (!--v21)
        {
          uint64_t v0 = v48;
          swift_bridgeObjectRelease();
          goto LABEL_56;
        }
      }
    }
  }
  __break(1u);
LABEL_63:
  __break(1u);
LABEL_64:
  __break(1u);
LABEL_65:
  __break(1u);
  return result;
}

uint64_t sub_10D484()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10D4E8()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_10D560(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v8 = *(void *)a1;
  uint64_t v45 = *(unsigned __int8 *)(a1 + 8);
  uint64_t v9 = *(void *)(a1 + 16);
  uint64_t v10 = *(unsigned __int8 *)(a1 + 24);
  uint64_t v11 = *(void *)(a1 + 32);
  uint64_t v12 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v48 = *(void *)(a1 + 48);
  uint64_t v46 = *(void *)(a1 + 56);
  uint64_t v47 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 72);
  if (!*(void *)(a2 + 16)) {
    goto LABEL_14;
  }
  uint64_t v44 = *(void *)a1;
  uint64_t v17 = sub_56168(v8);
  uint64_t v8 = v44;
  if ((v18 & 1) == 0
    || !*(void *)(a3 + 16)
    || (uint64_t v43 = *(void *)(*(void *)(a2 + 56) + 8 * v17), v19 = sub_56168(v44), v8 = v44, (v20 & 1) == 0)
    || !*(void *)(a4 + 16)
    || (v21 = *(void *)(*(void *)(a3 + 56) + 8 * v19), uint64_t v22 = sub_56168(v43), v8 = v44, (v23 & 1) == 0)
    || (char v24 = (void *)(*(void *)(a4 + 56) + 16 * v22), *v24 >= v21))
  {
LABEL_14:
    uint64_t v33 = v8;
    sub_73A4(&v49, v8);
    *a6 = v33;
    a6[1] = v45;
    a6[2] = v9;
    a6[3] = v10;
    a6[4] = v11;
    a6[5] = v12;
    a6[6] = v48;
    a6[7] = v46;
    a6[8] = v47;
    a6[9] = v13;
    sub_5480C(v11, v12);
    swift_bridgeObjectRetain();
LABEL_15:
    swift_bridgeObjectRetain();
    return;
  }
  uint64_t v25 = v24[1];
  if (!sub_395FC(v25, *a5))
  {
    sub_73A4(&v49, v25);
    if (qword_26C340 != -1) {
      swift_once();
    }
    uint64_t v34 = sub_1FB430();
    sub_6DBC8(v34, (uint64_t)qword_26FED8);
    uint64_t v35 = sub_1FB410();
    os_log_type_t v36 = sub_1FBD80();
    if (os_log_type_enabled(v35, v36))
    {
      uint64_t v37 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      *(_DWORD *)uint64_t v37 = 141558787;
      uint64_t v49 = v38;
      sub_1FBED0();
      *(_WORD *)(v37 + 12) = 2081;
      uint64_t v39 = sub_1FC580();
      sub_D5890(v39, v40, &v49);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v37 + 22) = 2160;
      sub_1FBED0();
      *(_WORD *)(v37 + 32) = 2081;
      uint64_t v41 = sub_1FC580();
      sub_D5890(v41, v42, &v49);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v35, v36, "Substituting storeID %{private,mask.hash}s for storeID %{private,mask.hash}s because it is earlier in the series and unpurchased", (uint8_t *)v37, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }

    *a6 = v25;
    a6[1] = v45;
    a6[2] = v43;
    a6[3] = 0;
    a6[4] = 0;
    a6[5] = 255;
    a6[6] = v48;
    a6[7] = v46;
    a6[8] = v47;
    a6[9] = v13;
    swift_bridgeObjectRetain();
    goto LABEL_15;
  }
  if (qword_26C340 != -1) {
    swift_once();
  }
  uint64_t v26 = sub_1FB430();
  sub_6DBC8(v26, (uint64_t)qword_26FED8);
  uint64_t v27 = sub_1FB410();
  os_log_type_t v28 = sub_1FBD80();
  if (os_log_type_enabled(v27, v28))
  {
    uint64_t v29 = swift_slowAlloc();
    uint64_t v30 = swift_slowAlloc();
    *(_DWORD *)uint64_t v29 = 141558275;
    uint64_t v49 = v30;
    sub_1FBED0();
    *(_WORD *)(v29 + 12) = 2081;
    uint64_t v31 = sub_1FC580();
    sub_D5890(v31, v32, &v49);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v27, v28, "Already included series storeID %{private,mask.hash}s, won't include again", (uint8_t *)v29, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

  *((_OWORD *)a6 + 3) = 0u;
  *((_OWORD *)a6 + 4) = 0u;
  *((_OWORD *)a6 + 1) = 0u;
  *((_OWORD *)a6 + 2) = 0u;
  *(_OWORD *)a6 = 0u;
}

uint64_t type metadata accessor for NextInSeriesProcessorService()
{
  return self;
}

uint64_t sub_10DAC8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_B06F4;
  return _swift_task_switch(sub_10C858, 0, 0);
}

void *sub_10DB78(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t *a5)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v7 = a1;
  uint64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  uint64_t v27 = swift_bridgeObjectRetain();
  do
  {
    uint64_t v11 = *(void *)(v7 + v8 + 64);
    char v12 = *(unsigned char *)(v7 + v8 + 72);
    uint64_t v13 = *(void *)(v7 + v8 + 104);
    uint64_t v14 = *(void *)(v7 + v8 + 88);
    uint64_t v15 = *(void *)(v7 + v8 + 96);
    uint64_t v16 = *(void *)(v7 + v8 + 80);
    char v17 = *(unsigned char *)(v7 + v8 + 56);
    uint64_t v18 = *(void *)(v7 + v8 + 48);
    char v19 = *(unsigned char *)(v7 + v8 + 40);
    uint64_t v46 = *(void *)(v7 + v8 + 32);
    char v47 = v19;
    uint64_t v48 = v18;
    char v49 = v17;
    uint64_t v50 = v11;
    char v51 = v12;
    uint64_t v52 = v16;
    uint64_t v53 = v14;
    uint64_t v54 = v15;
    uint64_t v55 = v13;
    sub_5480C(v11, v12);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_10D560((uint64_t)&v46, a2, a3, a4, a5, &v37);
    if (v5)
    {
      sub_54820(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9;
    }
    sub_54820(v11, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v20 = v43;
    if (v43)
    {
      uint64_t v21 = v37;
      char v22 = v38;
      uint64_t v32 = v39;
      char v33 = v40;
      uint64_t v34 = v41;
      char v35 = v42;
      long long v36 = v44;
      uint64_t v23 = v45;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v9 = sub_41CBC(0, v9[2] + 1, 1, v9);
      }
      unint64_t v25 = v9[2];
      unint64_t v24 = v9[3];
      if (v25 >= v24 >> 1) {
        uint64_t v9 = sub_41CBC((void *)(v24 > 1), v25 + 1, 1, v9);
      }
      v9[2] = v25 + 1;
      uint64_t v10 = &v9[10 * v25];
      v10[4] = v21;
      *((unsigned char *)v10 + 40) = v22 & 1;
      v10[6] = v32;
      *((unsigned char *)v10 + 56) = v33 & 1;
      v10[8] = v34;
      *((unsigned char *)v10 + 72) = v35;
      v10[10] = v20;
      *(_OWORD *)(v10 + 11) = v36;
      v10[13] = v23;
      uint64_t v7 = v27;
    }
    v8 += 80;
    --v6;
  }
  while (v6);
  swift_bridgeObjectRelease();
  return v9;
}

uint64_t TabiGenreRecommendationService.fetchRecommendedGenres(with:)()
{
  v1[3] = v0;
  v1[4] = type metadata accessor for GenreRecommendationWork();
  v1[5] = swift_task_alloc();
  return _swift_task_switch(sub_10DE58, 0, 0);
}

uint64_t sub_10DE58()
{
  sub_1FB100();
  sub_12124(&qword_26FFB8);
  sub_10DF80();
  sub_1FB460();
  sub_10DFD8(v0[5]);
  uint64_t v1 = v0[2];
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

unint64_t sub_10DF80()
{
  unint64_t result = qword_26FFC0;
  if (!qword_26FFC0)
  {
    type metadata accessor for GenreRecommendationWork();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26FFC0);
  }
  return result;
}

uint64_t sub_10DFD8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for GenreRecommendationWork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void TabiGenreRecommendationService.init()()
{
}

uint64_t sub_10E0A4()
{
  v1[3] = type metadata accessor for GenreRecommendationWork();
  uint64_t v2 = swift_task_alloc();
  uint64_t v3 = *v0;
  v1[4] = v2;
  v1[5] = v3;
  return _swift_task_switch(sub_10E138, 0, 0);
}

uint64_t sub_10E138()
{
  sub_1FB100();
  sub_12124(&qword_26FFB8);
  sub_10DF80();
  sub_1FB460();
  sub_10DFD8(v0[4]);
  uint64_t v1 = v0[2];
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t type metadata accessor for TabiGenreRecommendationService()
{
  return self;
}

uint64_t method lookup function for TabiGenreRecommendationService(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabiGenreRecommendationService);
}

uint64_t PersonalizationMetadataRequest.bookIDs.getter()
{
  type metadata accessor for PersonalizationMetadataRequest();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for PersonalizationMetadataRequest()
{
  uint64_t result = qword_270050;
  if (!qword_270050) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t PersonalizationMetadataRequest.init(uuid:bookIDs:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a3, a1, v6);
  uint64_t result = type metadata accessor for PersonalizationMetadataRequest();
  *(void *)(a3 + *(int *)(result + 20)) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Book.PersonalizationMetadata()
{
  return &type metadata for Book.PersonalizationMetadata;
}

uint64_t *initializeBufferWithCopyOfBuffer for PersonalizationMetadataRequest(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FB110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for PersonalizationMetadataRequest(uint64_t a1)
{
  uint64_t v2 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PersonalizationMetadataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PersonalizationMetadataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t initializeWithTake for PersonalizationMetadataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  return a1;
}

uint64_t assignWithTake for PersonalizationMetadataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for PersonalizationMetadataRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_10E70C);
}

uint64_t sub_10E70C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for PersonalizationMetadataRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_10E7E0);
}

uint64_t sub_10E7E0(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FB110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_10E89C()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of PersonalizationMetadataServiceType.fetchPersonalizationMetadata(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t sub_10EA38(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(v3 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  for (unint64_t i = v10 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v8 << 6))
  {
    uint64_t v12 = *(void *)(a1 + 56) + 560 * i;
    if (*(unsigned char *)(v12 + 40))
    {
      if (v5) {
        goto LABEL_4;
      }
    }
    else
    {
      uint64_t v18 = *(void *)(v12 + 32);
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_41858(0, v9[2] + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      unint64_t v17 = v9[2];
      unint64_t v16 = v9[3];
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (uint64_t)sub_41858((void *)(v16 > 1), v17 + 1, 1, v9);
        uint64_t v9 = (void *)result;
      }
      v9[2] = v17 + 1;
      v9[v17 + 4] = v18;
      if (v5) {
        goto LABEL_4;
      }
    }
LABEL_7:
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v13 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        goto LABEL_29;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          goto LABEL_29;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14)
        {
          int64_t v8 = v13 + 3;
          if (v13 + 3 >= v6) {
            goto LABEL_29;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v8);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 4;
  if (v15 >= v6)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v9;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v15);
  if (v14)
  {
    int64_t v8 = v15;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v8 >= v6) {
      goto LABEL_29;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v8);
    ++v15;
    if (v14) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_10EC28(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v32 = _swiftEmptyArrayStorage;
  sub_46A7C(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v28 = a1 + 56;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(a1 + 56);
  int64_t v29 = (unint64_t)(63 - v5) >> 6;
  if (!v2)
  {
    uint64_t result = swift_bridgeObjectRetain();
    int64_t v8 = 0;
LABEL_28:
    if (!v6) {
      goto LABEL_30;
    }
LABEL_29:
    unint64_t v19 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    for (unint64_t i = v19 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v22)) + (v8 << 6))
    {
      memcpy(__dst, (const void *)(*(void *)(a1 + 48) + 560 * i), 0x229uLL);
      sub_12384(__dst);
      uint64_t v32 = v3;
      unint64_t v25 = v3[2];
      unint64_t v24 = v3[3];
      if (v25 >= v24 >> 1)
      {
        sub_46A7C(v24 > 1, v25 + 1, 1);
        uint64_t v3 = v32;
      }
      uint64_t v26 = __dst[0];
      memcpy(__src, __dst, sizeof(__src));
      v3[2] = v25 + 1;
      uint64_t v27 = &v3[71 * v25];
      v27[4] = v26;
      uint64_t result = (uint64_t)memcpy(v27 + 5, __src, 0x229uLL);
      if (v6) {
        goto LABEL_29;
      }
LABEL_30:
      int64_t v21 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_52;
      }
      if (v21 >= v29) {
        goto LABEL_50;
      }
      unint64_t v22 = *(void *)(v28 + 8 * v21);
      ++v8;
      if (!v22)
      {
        int64_t v8 = v21 + 1;
        if (v21 + 1 >= v29) {
          goto LABEL_50;
        }
        unint64_t v22 = *(void *)(v28 + 8 * v8);
        if (!v22)
        {
          int64_t v8 = v21 + 2;
          if (v21 + 2 >= v29) {
            goto LABEL_50;
          }
          unint64_t v22 = *(void *)(v28 + 8 * v8);
          if (!v22)
          {
            int64_t v8 = v21 + 3;
            if (v21 + 3 >= v29) {
              goto LABEL_50;
            }
            unint64_t v22 = *(void *)(v28 + 8 * v8);
            if (!v22)
            {
              int64_t v23 = v21 + 4;
              if (v23 >= v29)
              {
LABEL_50:
                swift_release();
                return (uint64_t)v3;
              }
              unint64_t v22 = *(void *)(v28 + 8 * v23);
              if (!v22)
              {
                while (1)
                {
                  int64_t v8 = v23 + 1;
                  if (__OFADD__(v23, 1)) {
                    break;
                  }
                  if (v8 >= v29) {
                    goto LABEL_50;
                  }
                  unint64_t v22 = *(void *)(v28 + 8 * v8);
                  ++v23;
                  if (v22) {
                    goto LABEL_45;
                  }
                }
LABEL_55:
                __break(1u);
LABEL_56:
                __break(1u);
                goto LABEL_57;
              }
              int64_t v8 = v23;
            }
          }
        }
      }
LABEL_45:
      unint64_t v6 = (v22 - 1) & v22;
    }
  }
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  uint64_t v9 = 0;
  while (v6)
  {
    unint64_t v10 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v11 = v10 | (v8 << 6);
LABEL_23:
    memcpy(__dst, (const void *)(*(void *)(a1 + 48) + 560 * v11), 0x229uLL);
    sub_12384(__dst);
    uint64_t v32 = v3;
    unint64_t v16 = v3[2];
    unint64_t v15 = v3[3];
    if (v16 >= v15 >> 1)
    {
      sub_46A7C(v15 > 1, v16 + 1, 1);
      uint64_t v3 = v32;
    }
    ++v9;
    uint64_t v17 = __dst[0];
    memcpy(__src, __dst, sizeof(__src));
    v3[2] = v16 + 1;
    uint64_t v18 = &v3[71 * v16];
    v18[4] = v17;
    uint64_t result = (uint64_t)memcpy(v18 + 5, __src, 0x229uLL);
    if (v9 == v2) {
      goto LABEL_28;
    }
  }
  int64_t v12 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
LABEL_52:
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
    goto LABEL_55;
  }
  if (v12 >= v29) {
    goto LABEL_53;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v12);
  ++v8;
  if (v13) {
    goto LABEL_22;
  }
  int64_t v8 = v12 + 1;
  if (v12 + 1 >= v29) {
    goto LABEL_54;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v8);
  if (v13) {
    goto LABEL_22;
  }
  int64_t v8 = v12 + 2;
  if (v12 + 2 >= v29) {
    goto LABEL_58;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v8);
  if (v13) {
    goto LABEL_22;
  }
  int64_t v8 = v12 + 3;
  if (v12 + 3 >= v29) {
    goto LABEL_59;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v8);
  if (v13)
  {
LABEL_22:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
    goto LABEL_23;
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v29) {
    goto LABEL_60;
  }
  unint64_t v13 = *(void *)(v28 + 8 * v14);
  if (v13)
  {
    int64_t v8 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v8 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_56;
    }
    if (v8 >= v29) {
      break;
    }
    unint64_t v13 = *(void *)(v28 + 8 * v8);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
  return result;
}

Swift::Int sub_10F034(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1247F0(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1106E4(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_10F0A0(uint64_t a1, const void *a2)
{
  uint64_t v6 = v3;
  uint64_t v7 = (void *)(v3 + 16);
  *(void *)(v6 + 1152) = v2;
  uint64_t v8 = sub_12124(&qword_270150);
  *(void *)(v6 + 1160) = v8;
  *(void *)(v6 + 1168) = *(void *)(v8 - 8);
  *(void *)(v6 + 1176) = swift_task_alloc();
  *(unsigned char *)(v6 + 1281) = *(unsigned char *)a1;
  uint64_t v9 = *(void *)(a1 + 8);
  *(void *)(v6 + 1184) = *(void *)(a1 + 16);
  memcpy(v7, a2, 0x460uLL);
  uint64_t v10 = *(void *)(v6 + 440);
  unint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v6 + 1192) = v11;
  *unint64_t v11 = v6;
  v11[1] = sub_10F1FC;
  v11[146] = v10;
  v11[145] = v7;
  v11[144] = v2;
  v11[143] = v9;
  return _swift_task_switch(sub_10FFAC, 0, 0);
}

uint64_t sub_10F1FC(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  *(void *)(v3 + 1200) = a1;
  *(void *)(v3 + 1208) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    uint64_t v5 = *(uint64_t (**)(void))(v4 + 8);
    return v5();
  }
  else
  {
    return _swift_task_switch(sub_10F350, 0, 0);
  }
}

uint64_t sub_10F350()
{
  uint64_t v36 = v0;
  uint64_t v1 = *(void *)(v0 + 1208);
  uint64_t v2 = *(void **)(v0 + 1152);
  int64_t v3 = *(void *)(v0 + 72);
  uint64_t v4 = v2[5];
  uint64_t v5 = v2[6];
  sub_5D64(v2 + 2, v4);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_4B8F8(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = (*(uint64_t (**)(void *(*)(uint64_t), void, void *, void *, void *, uint64_t, uint64_t))(v5 + 8))(sub_110300, 0, v7, &type metadata for UInt64, &protocol witness table for UInt64, v4, v5);
  swift_release();
  sub_11046C(v8);
  swift_bridgeObjectRelease();
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_4C01C(v9);
  swift_release();
  char v35 = v10;
  sub_10F034((uint64_t *)&v35);
  if (v1)
  {
    return swift_release();
  }
  else
  {
    swift_release();
    int64_t v12 = v35;
    int64_t v13 = v35[2];
    if (v13)
    {
      char v35 = _swiftEmptyArrayStorage;
      sub_46538(0, v13, 0);
      int64_t v14 = v35;
      unint64_t v15 = v35[2];
      uint64_t v16 = 4;
      do
      {
        uint64_t v17 = v12[v16];
        char v35 = v14;
        unint64_t v18 = v14[3];
        if (v15 >= v18 >> 1)
        {
          sub_46538(v18 > 1, v15 + 1, 1);
          int64_t v14 = v35;
        }
        v14[2] = v15 + 1;
        v14[v15 + 4] = v17;
        v16 += 2;
        ++v15;
        --v13;
      }
      while (v13);
      swift_release();
    }
    else
    {
      swift_release();
      int64_t v14 = _swiftEmptyArrayStorage;
    }
    char v19 = *(unsigned char *)(v0 + 1281);
    uint64_t v20 = *(void **)(v0 + 1152);
    sub_A1310(v0 + 16);
    uint64_t v21 = sub_111054((uint64_t)v14, v0 + 16);
    sub_11D3C(v0 + 16);
    swift_bridgeObjectRelease();
    int64_t v22 = sub_3E3A8(v3, v21);
    uint64_t v24 = v23;
    uint64_t v26 = v25;
    unint64_t v28 = v27;
    *(void *)(v0 + 1216) = v22;
    *(void *)(v0 + 1224) = v23;
    *(void *)(v0 + 1232) = v25;
    *(void *)(v0 + 1240) = v27;
    int64_t v29 = v20 + 7;
    uint64_t v30 = v20[10];
    uint64_t v31 = v20[11];
    sub_5D64(v29, v30);
    uint64_t v32 = sub_51744(v24, v26, v28);
    *(void *)(v0 + 1248) = v32;
    *(unsigned char *)(v0 + 1280) = v19;
    uint64_t v34 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v31 + 8) + **(int **)(v31 + 8));
    char v33 = (void *)swift_task_alloc();
    *(void *)(v0 + 1256) = v33;
    *char v33 = v0;
    v33[1] = sub_10F6AC;
    return v34(v32, v0 + 1280, v30, v31);
  }
}

uint64_t sub_10F6AC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1264) = a1;
  *(void *)(v3 + 1272) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_10FF14;
  }
  else
  {
    uint64_t v4 = sub_10F7E0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_10F7E0()
{
  uint64_t v92 = v0;
  uint64_t v1 = v0[150];
  uint64_t v90 = v0[148];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_654D4(v1);
  uint64_t v2 = sub_10EA38(v1);
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v4 = (uint64_t *)(v2 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_73A4(v91, v5);
      --v3;
    }
    while (v3);
  }
  unint64_t v6 = v0[155];
  uint64_t v7 = v0[154];
  uint64_t result = swift_bridgeObjectRelease();
  int64_t v9 = v6 >> 1;
  uint64_t v10 = v0[158];
  unint64_t v11 = _swiftEmptyArrayStorage;
  uint64_t v70 = v0;
  if (v7 != v6 >> 1)
  {
    uint64_t v12 = v0[154];
    if (v12 >= v9)
    {
      __break(1u);
      return result;
    }
    uint64_t v67 = v0[146];
    swift_unknownObjectRetain();
    unint64_t v68 = v6 >> 1;
    uint64_t v69 = v10;
    do
    {
      if (*(void *)(v10 + 16))
      {
        uint64_t v13 = sub_56168(*(void *)(v0[153] + 8 * v12));
        int64_t v14 = _swiftEmptyArrayStorage;
        if (v15)
        {
          uint64_t v16 = v0[147];
          uint64_t v17 = v0[145];
          (*(void (**)(uint64_t, uint64_t, uint64_t))(v67 + 16))(v16, *(void *)(v10 + 56) + *(void *)(v67 + 72) * v13, v17);
          sub_1FB3A0();
          int64_t v14 = (void *)v0[143];
          (*(void (**)(uint64_t, uint64_t))(v67 + 8))(v16, v17);
        }
      }
      else
      {
        int64_t v14 = _swiftEmptyArrayStorage;
      }
      uint64_t v75 = v14[2];
      if (v75)
      {
        uint64_t v71 = v11;
        uint64_t v72 = v12;
        uint64_t v18 = 0;
        uint64_t v84 = *(void *)(v90 + 16);
        uint64_t v87 = v14 + 4;
        uint64_t v19 = v90 + 56;
        while (1)
        {
          uint64_t v20 = &v87[9 * v18];
          uint64_t v21 = *v20;
          char v81 = *((unsigned char *)v20 + 8);
          uint64_t v22 = v20[2];
          char v78 = *((unsigned char *)v20 + 24);
          uint64_t v23 = v20[4];
          char v24 = *((unsigned char *)v20 + 40);
          uint64_t v26 = v20[6];
          uint64_t v25 = v20[7];
          uint64_t v27 = v20[8];
          if (!v84) {
            break;
          }
          uint64_t v28 = sub_1FC7D0();
          uint64_t v29 = -1 << *(unsigned char *)(v90 + 32);
          unint64_t v30 = v28 & ~v29;
          if (((*(void *)(v19 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
            break;
          }
          uint64_t v31 = *(void *)(v90 + 48);
          if (*(void *)(v31 + 8 * v30) != v21)
          {
            uint64_t v32 = ~v29;
            do
            {
              unint64_t v30 = (v30 + 1) & v32;
              if (((*(void *)(v19 + ((v30 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v30) & 1) == 0) {
                goto LABEL_23;
              }
            }
            while (*(void *)(v31 + 8 * v30) != v21);
          }
          if (++v18 == v75)
          {
            swift_bridgeObjectRelease();
            uint64_t v0 = v70;
            unint64_t v11 = v71;
            goto LABEL_28;
          }
        }
LABEL_23:
        sub_5480C(v23, v24);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        sub_73A4(v91, v21);
        unint64_t v11 = v71;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v11 = sub_426F8(0, v71[2] + 1, 1, v71);
        }
        unint64_t v34 = v11[2];
        unint64_t v33 = v11[3];
        if (v34 >= v33 >> 1) {
          unint64_t v11 = sub_426F8((void *)(v33 > 1), v34 + 1, 1, v11);
        }
        v11[2] = v34 + 1;
        char v35 = &v11[9 * v34];
        v35[4] = v21;
        *((unsigned char *)v35 + 40) = v81;
        v35[6] = v22;
        *((unsigned char *)v35 + 56) = v78;
        v35[8] = v23;
        *((unsigned char *)v35 + 72) = v24;
        v35[10] = v26;
        v35[11] = v25;
        v35[12] = v27;
        uint64_t v0 = v70;
LABEL_28:
        int64_t v9 = v68;
        uint64_t v10 = v69;
        uint64_t v12 = v72;
      }
      else
      {
        swift_bridgeObjectRelease();
      }
      ++v12;
    }
    while (v12 != v9);
    swift_unknownObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t v36 = v11[2];
  if (v36)
  {
    uint64_t v37 = v36 - 1;
    *(void *)(swift_task_alloc() + 16) = v36 - 1;
    v91[0] = (uint64_t)_swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_467B8(0, 0, 0);
    uint64_t v38 = v91[0];
    uint64_t v39 = v11[2];
    uint64_t v40 = swift_bridgeObjectRetain();
    if (v39)
    {
      uint64_t v41 = v40 + 48;
      do
      {
        uint64_t v85 = *(void *)(v41 - 16);
        char v82 = *(unsigned char *)(v41 - 8);
        uint64_t v79 = *(void *)v41;
        char v76 = *(unsigned char *)(v41 + 8);
        uint64_t v42 = *(void *)(v41 + 16);
        char v43 = *(unsigned char *)(v41 + 24);
        uint64_t v44 = *(void *)(v41 + 32);
        uint64_t v73 = *(void *)(v41 + 40);
        uint64_t v45 = *(void *)(v41 + 48);
        sub_5480C(v42, v43);
        v91[0] = v38;
        unint64_t v47 = *(void *)(v38 + 16);
        unint64_t v46 = *(void *)(v38 + 24);
        int64_t v88 = v47 + 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v47 >= v46 >> 1)
        {
          sub_467B8(v46 > 1, v88, 1);
          uint64_t v38 = v91[0];
        }
        *(void *)(v38 + 16) = v88;
        uint64_t v48 = v38 + 80 * v47;
        *(void *)(v48 + 32) = v85;
        *(unsigned char *)(v48 + 40) = v82;
        *(void *)(v48 + 48) = v79;
        *(unsigned char *)(v48 + 56) = v76;
        *(void *)(v48 + 64) = v42;
        *(unsigned char *)(v48 + 72) = v43;
        *(void *)(v48 + 80) = v44;
        *(void *)(v48 + 88) = v73;
        *(void *)(v48 + 96) = v45;
        *(double *)(v48 + 104) = (double)v37--;
        v41 += 72;
        --v39;
      }
      while (v39);
    }
    swift_bridgeObjectRelease_n();
    swift_task_dealloc();
    char v49 = sub_387A8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19BB6C, 0, v38);
    double v50 = COERCE_DOUBLE(sub_19B7E4((uint64_t)v49));
    uint64_t v51 = v38;
    char v53 = v52;
    swift_bridgeObjectRelease();
    if (v53)
    {
      uint64_t v0 = v70;
    }
    else
    {
      uint64_t v74 = v51;
      double v54 = v50;
      uint64_t v0 = v70;
      if (v50 != 0.0)
      {
        int64_t v57 = *(void *)(v51 + 16);
        if (v57)
        {
          v91[0] = (uint64_t)_swiftEmptyArrayStorage;
          sub_467B8(0, v57, 0);
          uint64_t v58 = 0;
          uint64_t v55 = (void *)v91[0];
          do
          {
            uint64_t v89 = *(void *)(v51 + v58 + 32);
            char v86 = *(unsigned char *)(v51 + v58 + 40);
            uint64_t v83 = *(void *)(v51 + v58 + 48);
            char v80 = *(unsigned char *)(v51 + v58 + 56);
            uint64_t v59 = *(void *)(v51 + v58 + 64);
            char v60 = *(unsigned char *)(v51 + v58 + 72);
            uint64_t v61 = *(void *)(v51 + v58 + 80);
            uint64_t v77 = *(void *)(v51 + v58 + 88);
            uint64_t v62 = *(void *)(v51 + v58 + 96);
            double v63 = *(double *)(v51 + v58 + 104);
            sub_5480C(v59, v60);
            v91[0] = (uint64_t)v55;
            unint64_t v65 = v55[2];
            unint64_t v64 = v55[3];
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v65 >= v64 >> 1)
            {
              sub_467B8(v64 > 1, v65 + 1, 1);
              uint64_t v55 = (void *)v91[0];
            }
            v55[2] = v65 + 1;
            uint64_t v66 = &v55[10 * v65];
            v66[4] = v89;
            *((unsigned char *)v66 + 40) = v86;
            v66[6] = v83;
            *((unsigned char *)v66 + 56) = v80;
            v66[8] = v59;
            *((unsigned char *)v66 + 72) = v60;
            uint64_t v51 = v74;
            v66[10] = v61;
            v66[11] = v77;
            v66[12] = v62;
            *((double *)v66 + 13) = v63 / v54;
            v58 += 80;
            --v57;
          }
          while (v57);
          uint64_t v0 = v70;
          swift_release();
          swift_unknownObjectRelease();
          swift_bridgeObjectRelease();
          goto LABEL_44;
        }
      }
    }
    swift_release();
  }
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v55 = _swiftEmptyArrayStorage;
LABEL_44:
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  int v56 = (uint64_t (*)(void *))v0[1];
  return v56(v55);
}

uint64_t sub_10FF14()
{
  swift_unknownObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_10FF80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[146] = a7;
  v7[145] = a6;
  v7[144] = a5;
  v7[143] = a2;
  return _swift_task_switch(sub_10FFAC, 0, 0);
}

uint64_t sub_10FFAC()
{
  char v15 = v0;
  uint64_t v1 = v0[143];
  if (v1)
  {
    uint64_t v2 = sub_10EC28(v1);
    if (*(void *)(v2 + 16))
    {
      sub_12124(&qword_270170);
      uint64_t v3 = (void *)sub_1FC2A0();
    }
    else
    {
      uint64_t v3 = _swiftEmptyDictionarySingleton;
    }
    int64_t v14 = v3;
    sub_111204(v2, 1, (uint64_t *)&v14);
    swift_bridgeObjectRelease();
    uint64_t v11 = (uint64_t)v14;
    uint64_t v12 = (uint64_t (*)(uint64_t))v0[1];
    return v12(v11);
  }
  else
  {
    uint64_t v4 = (const void *)v0[145];
    uint64_t v5 = (void *)v0[144];
    uint64_t v6 = v5[15];
    uint64_t v7 = v5[16];
    sub_5D64(v5 + 12, v6);
    memcpy(v0 + 2, v4, 0x460uLL);
    uint64_t v13 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 + 8) + **(int **)(v7 + 8));
    uint64_t v8 = (void *)swift_task_alloc();
    v0[147] = v8;
    void *v8 = v0;
    v8[1] = sub_1101AC;
    uint64_t v9 = v0[146];
    return v13(v0 + 2, v9, v6, v7);
  }
}

uint64_t sub_1101AC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 1184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_1102E8, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_1102E8()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_110300(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 24);
  sub_55844(a1 + 160, (uint64_t)v4, &qword_26C518);
  sub_55844((uint64_t)v4, (uint64_t)__src, &qword_26C518);
  uint64_t result = (void *)sub_125F0((uint64_t)__src);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    memcpy(v3, __src, sizeof(v3));
    if ((sub_103414() & 1) == 0) {
      return _swiftEmptySetSingleton;
    }
    swift_bridgeObjectRetain();
    return (void *)v1;
  }
  return result;
}

uint64_t type metadata accessor for SeedBasedMoreFromYourAuthorsService()
{
  return self;
}

uint64_t sub_1103C4(uint64_t a1, const void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_B06F4;
  return sub_10F0A0(a1, a2);
}

uint64_t sub_11046C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributeAffinityResult();
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (uint64_t *)((char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_12124(&qword_270168);
  uint64_t result = sub_1FC280();
  uint64_t v6 = (void *)result;
  int64_t v7 = 0;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v24 = a1 + 64;
  uint64_t v9 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v8;
  int64_t v25 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v12 = result + 64;
  if ((v10 & v8) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v13 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v13 | (v7 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v7 << 6))
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * i);
    sub_557E0(*(void *)(a1 + 56) + *(void *)(v26 + 72) * i, (uint64_t)v4);
    uint64_t v19 = *v4;
    uint64_t result = sub_1111A8((uint64_t)v4);
    *(void *)(v12 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(void *)(v6[6] + 8 * i) = v18;
    *(void *)(v6[7] + 8 * i) = v19;
    uint64_t v20 = v6[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v6[2] = v22;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1)) {
      goto LABEL_24;
    }
    if (v15 >= v25) {
      return (uint64_t)v6;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v25) {
        return (uint64_t)v6;
      }
      unint64_t v16 = *(void *)(v24 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v25) {
          return (uint64_t)v6;
        }
        unint64_t v16 = *(void *)(v24 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v11 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v25) {
    return (uint64_t)v6;
  }
  unint64_t v16 = *(void *)(v24 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v25) {
      return (uint64_t)v6;
    }
    unint64_t v16 = *(void *)(v24 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

Swift::Int sub_1106E4(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v84 = *a1;
      uint64_t v85 = *a1 + 8;
      uint64_t v86 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v88 = *(double *)(v84 + 16 * i + 8);
        uint64_t v89 = v86;
        uint64_t v90 = v85;
        do
        {
          if (*(double *)v90 >= v88) {
            break;
          }
          if (!v84) {
            goto LABEL_141;
          }
          uint64_t v91 = *(void *)(v90 + 8);
          *(_OWORD *)(v90 + 8) = *(_OWORD *)(v90 - 8);
          *(void *)(v90 - 8) = v91;
          *(double *)uint64_t v90 = v88;
          v90 -= 16;
        }
        while (!__CFADD__(v89++, 1));
        v85 += 16;
        --v86;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  unint64_t v101 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      uint64_t v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v93 = v12;
      uint64_t v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v94) {
            goto LABEL_145;
          }
          unint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_110DC8((char *)(v94 + 16 * v97), (char *)(v94 + 16 * *(void *)&v93[16 * v13 + 16]), v94 + 16 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v96 = sub_70B24((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_134;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_135;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_12124(&qword_270160);
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    uint64_t v103 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 40;
  uint64_t v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 16 * v10 + 8);
      double v16 = *(double *)(v11 + 16 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        int64_t v17 = (double *)(v102 + 16 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v16 < v15 == v19 >= *v17) {
            break;
          }
          ++v10;
          v17 += 2;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 16 * v10;
          uint64_t v21 = 16 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v20;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = *(void *)(v11 + v21 + 8);
              *(_OWORD *)(v11 + v21) = *(_OWORD *)(v11 + v20 - 16);
              *(void *)(v24 - 16) = v25;
              *(void *)(v24 - 8) = v26;
            }
            ++v23;
            v20 -= 16;
            v21 += 16;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v27 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v27 >= v3) {
      Swift::Int v27 = v3;
    }
    if (v27 < v14) {
      break;
    }
    if (v10 != v27)
    {
      uint64_t v28 = (double *)(v11 + 16 * v10);
      do
      {
        double v29 = *(double *)(v11 + 16 * v10 + 8);
        Swift::Int v30 = v14;
        uint64_t v31 = v28;
        do
        {
          if (*(v31 - 1) >= v29) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          double v32 = *v31;
          *(_OWORD *)uint64_t v31 = *((_OWORD *)v31 - 1);
          *(v31 - 1) = v29;
          *(v31 - 2) = v32;
          v31 -= 2;
          ++v30;
        }
        while (v10 != v30);
        ++v10;
        v28 += 2;
      }
      while (v10 != v27);
      Swift::Int v10 = v27;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v12 = sub_7004C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v34 = *((void *)v12 + 2);
    unint64_t v33 = *((void *)v12 + 3);
    unint64_t v13 = v34 + 1;
    uint64_t v11 = v106;
    if (v34 >= v33 >> 1)
    {
      uint64_t v83 = sub_7004C((char *)(v33 > 1), v34 + 1, 1, v12);
      uint64_t v11 = v106;
      uint64_t v12 = v83;
    }
    *((void *)v12 + 2) = v13;
    char v35 = v12 + 32;
    uint64_t v36 = &v12[16 * v34 + 32];
    *(void *)uint64_t v36 = v14;
    *((void *)v36 + 1) = v10;
    if (v34)
    {
      while (1)
      {
        unint64_t v37 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v42 = &v35[16 * v13];
          uint64_t v43 = *((void *)v42 - 8);
          uint64_t v44 = *((void *)v42 - 7);
          BOOL v48 = __OFSUB__(v44, v43);
          uint64_t v45 = v44 - v43;
          if (v48) {
            goto LABEL_120;
          }
          uint64_t v47 = *((void *)v42 - 6);
          uint64_t v46 = *((void *)v42 - 5);
          BOOL v48 = __OFSUB__(v46, v47);
          uint64_t v40 = v46 - v47;
          char v41 = v48;
          if (v48) {
            goto LABEL_121;
          }
          unint64_t v49 = v13 - 2;
          double v50 = &v35[16 * v13 - 32];
          uint64_t v52 = *(void *)v50;
          uint64_t v51 = *((void *)v50 + 1);
          BOOL v48 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          if (v48) {
            goto LABEL_123;
          }
          BOOL v48 = __OFADD__(v40, v53);
          uint64_t v54 = v40 + v53;
          if (v48) {
            goto LABEL_126;
          }
          if (v54 >= v45)
          {
            uint64_t v72 = &v35[16 * v37];
            uint64_t v74 = *(void *)v72;
            uint64_t v73 = *((void *)v72 + 1);
            BOOL v48 = __OFSUB__(v73, v74);
            uint64_t v75 = v73 - v74;
            if (v48) {
              goto LABEL_130;
            }
            BOOL v65 = v40 < v75;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v66 = *((void *)v12 + 4);
            uint64_t v67 = *((void *)v12 + 5);
            BOOL v48 = __OFSUB__(v67, v66);
            uint64_t v59 = v67 - v66;
            char v60 = v48;
            goto LABEL_77;
          }
          uint64_t v39 = *((void *)v12 + 4);
          uint64_t v38 = *((void *)v12 + 5);
          BOOL v48 = __OFSUB__(v38, v39);
          uint64_t v40 = v38 - v39;
          char v41 = v48;
        }
        if (v41) {
          goto LABEL_122;
        }
        unint64_t v49 = v13 - 2;
        uint64_t v55 = &v35[16 * v13 - 32];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v58 = __OFSUB__(v56, v57);
        uint64_t v59 = v56 - v57;
        char v60 = v58;
        if (v58) {
          goto LABEL_125;
        }
        uint64_t v61 = &v35[16 * v37];
        uint64_t v63 = *(void *)v61;
        uint64_t v62 = *((void *)v61 + 1);
        BOOL v48 = __OFSUB__(v62, v63);
        uint64_t v64 = v62 - v63;
        if (v48) {
          goto LABEL_128;
        }
        if (__OFADD__(v59, v64)) {
          goto LABEL_129;
        }
        if (v59 + v64 >= v40)
        {
          BOOL v65 = v40 < v64;
LABEL_83:
          if (v65) {
            unint64_t v37 = v49;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v60) {
          goto LABEL_124;
        }
        unint64_t v68 = &v35[16 * v37];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v48 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v48) {
          goto LABEL_127;
        }
        if (v71 < v59) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v76 = v37 - 1;
        if (v37 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v77 = v12;
        char v78 = &v35[16 * v76];
        uint64_t v79 = *(void *)v78;
        char v80 = &v35[16 * v37];
        uint64_t v81 = *((void *)v80 + 1);
        sub_110DC8((char *)(v11 + 16 * *(void *)v78), (char *)(v11 + 16 * *(void *)v80), v11 + 16 * v81, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v81 < v79) {
          goto LABEL_117;
        }
        if (v37 > *((void *)v77 + 2)) {
          goto LABEL_118;
        }
        *(void *)char v78 = v79;
        *(void *)&v35[16 * v76 + 8] = v81;
        unint64_t v82 = *((void *)v77 + 2);
        if (v37 >= v82) {
          goto LABEL_119;
        }
        uint64_t v12 = v77;
        unint64_t v13 = v82 - 1;
        memmove(&v35[16 * v37], v80 + 16, 16 * (v82 - 1 - v37));
        *((void *)v77 + 2) = v82 - 1;
        uint64_t v11 = v106;
        if (v82 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      uint64_t v9 = v103;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_110DC8(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  uint64_t v25 = __src;
  uint64_t v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      double v18 = &v4[16 * v13];
      Swift::Int v23 = v18;
      uint64_t v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        double v19 = (char *)(a3 - 16);
        do
        {
          uint64_t v20 = v19 + 16;
          if (*((double *)v6 - 1) >= *((double *)v18 - 1))
          {
            Swift::Int v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)double v19 = *((_OWORD *)v18 - 1);
            }
            uint64_t v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)double v19 = *(_OWORD *)v21;
            }
            uint64_t v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_70148(&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    Swift::Int v14 = &v4[16 * v10];
    Swift::Int v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      double v15 = v4;
      while (1)
      {
        if (*((double *)v15 + 1) >= *((double *)v6 + 1))
        {
          uint64_t v4 = v15 + 16;
          int64_t v17 = v15;
          double v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          double v16 = v6 + 16;
          int64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          Swift::Int v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        uint64_t v24 = v4;
        uint64_t v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_111054(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v4 = 0;
    uint64_t v5 = result + 32;
    do
    {
      if (v4 <= v2) {
        unint64_t v6 = v2;
      }
      else {
        unint64_t v6 = v4;
      }
      while (1)
      {
        if (v4 == v6) {
          goto LABEL_22;
        }
        uint64_t v7 = *(void *)(v5 + 8 * v4++);
        uint64_t v8 = *(void *)(a2 + 472);
        uint64_t v9 = *(void *)(v8 + 16);
        if (!v9) {
          goto LABEL_15;
        }
        if (*(void *)(v8 + 32) != v7) {
          break;
        }
LABEL_6:
        if (v4 == v2) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      if (v9 != 1)
      {
        uint64_t v10 = 5;
        while (1)
        {
          uint64_t v11 = v10 - 3;
          if (__OFADD__(v10 - 4, 1)) {
            break;
          }
          if (*(void *)(v8 + 8 * v10) == v7) {
            goto LABEL_6;
          }
          ++v10;
          if (v11 == v9) {
            goto LABEL_15;
          }
        }
        __break(1u);
LABEL_22:
        __break(1u);
        return result;
      }
LABEL_15:
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_46538(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        uint64_t result = sub_46538(v12 > 1, v13 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v13 + 1;
      _swiftEmptyArrayStorage[v13 + 4] = v7;
    }
    while (v4 != v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_1111A8(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for AttributeAffinityResult();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_111204(uint64_t a1, char a2, uint64_t *a3)
{
  unint64_t v5 = *(void *)(a1 + 16);
  uint64_t v25 = a1 + 32;
  double v32 = &v31[1];
  swift_bridgeObjectRetain();
  unint64_t v6 = 0;
  BOOL v7 = v5 == 0;
  if (!v5) {
    goto LABEL_7;
  }
LABEL_2:
  if (!v7)
  {
    memcpy(__dst, (const void *)(v25 + 568 * v6), 0x231uLL);
    memcpy(v31, (const void *)(v25 + 568 * v6++), 0x231uLL);
    AuthorRecommendationSource.id.getter(v31);
    sub_111490(__dst);
    while (1)
    {
      sub_55844((uint64_t)v31, (uint64_t)v29, &qword_270178);
      sub_55844((uint64_t)v29, (uint64_t)__dst, &qword_270178);
      if (sub_11153C((uint64_t)__dst) == 1) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v10 = v31[0];
      memcpy(v28, v32, 0x229uLL);
      uint64_t v11 = *a3;
      unint64_t v13 = sub_56168(v31[0]);
      uint64_t v14 = *(void *)(v11 + 16);
      BOOL v15 = (v12 & 1) == 0;
      uint64_t v16 = v14 + v15;
      if (__OFADD__(v14, v15))
      {
        __break(1u);
        break;
      }
      char v17 = v12;
      if (*(void *)(v11 + 24) >= v16)
      {
        if (a2)
        {
          if (v12) {
            goto LABEL_5;
          }
        }
        else
        {
          sub_122EC4();
          if (v17) {
            goto LABEL_5;
          }
        }
      }
      else
      {
        sub_116AFC(v16, a2 & 1);
        uint64_t v18 = sub_56168(v10);
        if ((v17 & 1) != (v19 & 1)) {
          goto LABEL_22;
        }
        unint64_t v13 = v18;
        if (v17)
        {
LABEL_5:
          uint64_t v8 = *a3;
          memcpy(__src, (const void *)(*(void *)(*a3 + 56) + 560 * v13), 0x229uLL);
          sub_12384(__src);
          sub_124B4(v28);
          uint64_t v9 = (void *)(*(void *)(v8 + 56) + 560 * v13);
          memcpy(v27, v9, 0x229uLL);
          sub_124B4(v27);
          memcpy(v9, __src, 0x229uLL);
          goto LABEL_6;
        }
      }
      uint64_t v20 = (void *)*a3;
      *(void *)(*a3 + 8 * (v13 >> 6) + 64) |= 1 << v13;
      *(void *)(v20[6] + 8 * v13) = v10;
      memcpy((void *)(v20[7] + 560 * v13), v28, 0x229uLL);
      uint64_t v21 = v20[2];
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22) {
        goto LABEL_21;
      }
      v20[2] = v23;
LABEL_6:
      a2 = 1;
      BOOL v7 = v6 >= v5;
      if (v6 != v5) {
        goto LABEL_2;
      }
LABEL_7:
      sub_111554(__dst);
      sub_55844((uint64_t)__dst, (uint64_t)v31, &qword_270178);
      unint64_t v6 = v5;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

void *sub_111490(void *a1)
{
  uint64_t v2 = a1[13];
  uint64_t v3 = a1[14];
  uint64_t v4 = a1[15];
  uint64_t v5 = a1[16];
  uint64_t v6 = a1[17];
  unint64_t v7 = a1[18];
  uint64_t v9 = a1[12];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_12430(v9, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_11153C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 24);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void sub_111554(void *a1)
{
}

void *sub_11155C(char a1, uint64_t a2)
{
  if (a1)
  {
    uint64_t v3 = swift_bridgeObjectRetain();
    uint64_t v4 = sub_4BAE8(v3);
  }
  else
  {
    uint64_t v5 = *(void *)(a2 + 16);
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    uint64_t v6 = a2 + 40 * v5 + 8;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      double v10 = *(double *)(v6 + 16);
      if (v10 >= 0.0)
      {
        uint64_t v11 = *(void *)(v6 - 16);
        char v12 = *(unsigned char *)(v6 - 8);
        uint64_t v13 = *(void *)v6;
        uint64_t v14 = *(void *)(v6 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          sub_469A8(0, _swiftEmptyArrayStorage[2] + 1, 1);
        }
        unint64_t v8 = _swiftEmptyArrayStorage[2];
        unint64_t v7 = _swiftEmptyArrayStorage[3];
        if (v8 >= v7 >> 1) {
          sub_469A8(v7 > 1, v8 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v8 + 1;
        uint64_t v9 = &_swiftEmptyArrayStorage[5 * v8];
        v9[4] = v11;
        *((unsigned char *)v9 + 40) = v12;
        v9[6] = v13;
        v9[7] = v14;
        *((double *)v9 + 8) = v10;
      }
      v6 -= 40;
      --v5;
    }
    while (v5);
  }
  swift_bridgeObjectRelease();
  return v4;
}

Swift::Int sub_1116B8(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_1247C8(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_112A50(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_111724()
{
  swift_release();
  sub_1264C(v0 + 24);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DelegatingGenreRecommendationService()
{
  return self;
}

uint64_t sub_111790(uint64_t a1, unsigned char *a2)
{
  *(void *)(v3 + 3424) = v2;
  *(void *)(v3 + 3416) = a1;
  *(unsigned char *)(v3 + 3489) = *a2;
  *(unsigned char *)(v3 + 3490) = a2[1];
  return _swift_task_switch(sub_1117C4, 0, 0);
}

uint64_t sub_1117C4()
{
  uint64_t v3 = (uint64_t (*)(uint64_t))((char *)&dword_270248 + dword_270248);
  unint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 3432) = v1;
  *unint64_t v1 = v0;
  v1[1] = sub_11187C;
  return v3(v0 + 3488);
}

uint64_t sub_11187C()
{
  *(void *)(*(void *)v1 + 3440) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_112044;
  }
  else {
    uint64_t v2 = sub_111990;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_111990()
{
  int v1 = *(unsigned __int8 *)(v0 + 3488);
  if (v1 == 4)
  {
    uint64_t v2 = *(void **)(v0 + 3424);
    uint64_t v3 = v2[6];
    uint64_t v4 = v2[7];
    sub_5D64(v2 + 3, v3);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
    uint64_t v5 = (void *)swift_task_alloc();
    *(void *)(v0 + 3448) = v5;
    *uint64_t v5 = v0;
    v5[1] = sub_111B1C;
    return v9(v0 + 1136, v3, v4);
  }
  else
  {
    sub_1129FC();
    swift_allocError();
    *unint64_t v7 = v1;
    swift_willThrow();
    unint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
}

uint64_t sub_111B1C()
{
  *(void *)(*(void *)v1 + 3456) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_11205C;
  }
  else {
    uint64_t v2 = sub_111C30;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_111C30()
{
  uint64_t v10 = v0;
  LODWORD(v1) = *(unsigned __int8 *)(v0 + 3490);
  memcpy((void *)(v0 + 16), (const void *)(v0 + 1136), 0x460uLL);
  if (v1 == 5) {
    unint64_t v1 = 0x402030100uLL >> (8 * *(unsigned char *)(v0 + 25));
  }
  uint64_t v2 = *(void *)(v0 + 3456);
  v9[0] = v1;
  sub_1125DC(v9, v0 + 3376);
  if (v2)
  {
    sub_11D3C(v0 + 16);
    uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
    return v3();
  }
  else
  {
    uint64_t v5 = *(void *)(v0 + 3400);
    uint64_t v6 = *(void *)(v0 + 3408);
    sub_5D64((void *)(v0 + 3376), v5);
    memcpy((void *)(v0 + 2256), (const void *)(v0 + 16), 0x460uLL);
    unint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
    unint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 3464) = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_111DF4;
    return v8(v0 + 2256, v5, v6);
  }
}

uint64_t sub_111DF4(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3472) = a1;
  *(void *)(v3 + 3480) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_112074;
  }
  else {
    uint64_t v4 = sub_111F0C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_111F0C()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void *)(v0 + 3480);
  uint64_t v8 = *(void *)(v0 + 3472);
  swift_bridgeObjectRetain();
  sub_1116B8(&v8);
  if (v1)
  {
    return swift_release();
  }
  else
  {
    char v3 = *(unsigned char *)(v0 + 3489);
    uint64_t v4 = *(uint64_t **)(v0 + 3416);
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_11155C(v3, v8);
    swift_release();
    sub_A1310(v0 + 16);
    uint64_t v6 = sub_113460((uint64_t)v5, v0 + 16);
    sub_11D3C(v0 + 16);
    swift_bridgeObjectRelease();
    *uint64_t v4 = v6;
    memcpy(v4 + 1, (const void *)(v0 + 16), 0x460uLL);
    sub_1264C(v0 + 3376);
    unint64_t v7 = *(uint64_t (**)(void))(v0 + 8);
    return v7();
  }
}

uint64_t sub_112044()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_11205C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_112074()
{
  sub_11D3C(v0 + 16);
  sub_1264C(v0 + 3376);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1120E4(uint64_t a1)
{
  *(void *)(v2 + 88) = a1;
  *(void *)(v2 + 96) = v1;
  return _swift_task_switch(sub_112104, 0, 0);
}

uint64_t sub_112104()
{
  uint64_t v1 = *(void *)(v0 + 96);
  swift_beginAccess();
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 104) = v2;
  uint64_t v3 = *(void *)(v2 + 16);
  *(void *)(v0 + 112) = v3;
  if (v3)
  {
    *(void *)(v0 + 120) = 0;
    uint64_t v4 = v2 + 32;
    swift_bridgeObjectRetain();
    sub_113668(v4, v0 + 16);
    uint64_t v5 = *(void *)(v0 + 40);
    uint64_t v6 = *(void *)(v0 + 48);
    sub_5D64((void *)(v0 + 16), v5);
    uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
    unint64_t v7 = (void *)swift_task_alloc();
    *(void *)(v0 + 128) = v7;
    *unint64_t v7 = v0;
    v7[1] = sub_112290;
    return v10(v5, v6);
  }
  else
  {
    **(unsigned char **)(v0 + 88) = 4;
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_112290(char a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 136) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_112578;
  }
  else
  {
    *(unsigned char *)(v4 + 57) = a1 & 1;
    uint64_t v5 = sub_1123C4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1123C4()
{
  if ((*(unsigned char *)(v0 + 57) & 1) == 0)
  {
    uint64_t v3 = *(unsigned char **)(v0 + 88);
    swift_bridgeObjectRelease();
    *uint64_t v3 = *(unsigned char *)(v0 + 56);
    sub_1136D0(v0 + 16);
    goto LABEL_5;
  }
  uint64_t v1 = *(void *)(v0 + 112);
  uint64_t v2 = *(void *)(v0 + 120) + 1;
  sub_1136D0(v0 + 16);
  if (v2 == v1)
  {
    swift_bridgeObjectRelease();
    **(unsigned char **)(v0 + 88) = 4;
LABEL_5:
    uint64_t v4 = *(uint64_t (**)(void))(v0 + 8);
    return v4();
  }
  uint64_t v6 = *(void *)(v0 + 120) + 1;
  *(void *)(v0 + 120) = v6;
  sub_113668(*(void *)(v0 + 104) + 48 * v6 + 32, v0 + 16);
  uint64_t v7 = *(void *)(v0 + 40);
  uint64_t v8 = *(void *)(v0 + 48);
  sub_5D64((void *)(v0 + 16), v7);
  uint64_t v10 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 128) = v9;
  void *v9 = v0;
  v9[1] = sub_112290;
  return v10(v7, v8);
}

uint64_t sub_112578()
{
  sub_1136D0(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1125DC@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = *a1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 64);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_4CB5C(v4), (v7 & 1) != 0))
  {
    sub_51B70(*(void *)(v5 + 56) + 40 * v6, (uint64_t)v10);
    sub_37C30(v10, a2);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_113614();
    swift_allocError();
    unsigned __int8 *v9 = v4;
    return swift_willThrow();
  }
}

uint64_t sub_1126A4(uint64_t a1, unsigned char *a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  *(void *)(v7 + 8) = sub_5958;
  *(void *)(v7 + 3424) = v6;
  *(void *)(v7 + 3416) = a1;
  *(unsigned char *)(v7 + 3489) = *a2;
  *(unsigned char *)(v7 + 3490) = a2[1];
  return _swift_task_switch(sub_1117C4, 0, 0);
}

uint64_t sub_112774(unsigned char *a1)
{
  uint64_t v3 = *v1;
  char v4 = a1[1];
  *(unsigned char *)(v2 + 2288) = *a1;
  *(unsigned char *)(v2 + 2289) = v4;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v2 + 2272) = v5;
  *(void *)uint64_t v5 = v2;
  *(void *)(v5 + 8) = sub_112848;
  *(void *)(v5 + 3424) = v3;
  *(void *)(v5 + 3416) = v2 + 16;
  *(unsigned char *)(v5 + 3489) = *(unsigned char *)(v2 + 2288);
  *(unsigned char *)(v5 + 3490) = *(unsigned char *)(v2 + 2289);
  return _swift_task_switch(sub_1117C4, 0, 0);
}

uint64_t sub_112848()
{
  *(void *)(*(void *)v1 + 2280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1129E4;
  }
  else {
    uint64_t v2 = sub_11295C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_11295C()
{
  memcpy(v0 + 143, v0 + 2, 0x468uLL);
  uint64_t v1 = v0[143];
  swift_bridgeObjectRetain();
  sub_113730((uint64_t)(v0 + 143));
  uint64_t v2 = (uint64_t (*)(uint64_t))v0[1];
  return v2(v1);
}

uint64_t sub_1129E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

unint64_t sub_1129FC()
{
  unint64_t result = qword_270250;
  if (!qword_270250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270250);
  }
  return result;
}

Swift::Int sub_112A50(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_137;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v96 = *a1;
      uint64_t v97 = *a1 + 32;
      uint64_t v98 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v100 = *(double *)(v96 + 40 * i + 32);
        uint64_t v101 = v98;
        uint64_t v102 = v97;
        do
        {
          if (v100 >= *(double *)v102) {
            break;
          }
          if (!v96) {
            goto LABEL_141;
          }
          uint64_t v103 = v102 + 8;
          uint64_t v104 = *(void *)(v102 + 8);
          char v105 = *(unsigned char *)(v102 + 16);
          Swift::Int result = *(void *)(v102 + 24);
          uint64_t v106 = *(void *)(v102 + 32);
          long long v107 = *(_OWORD *)(v102 - 16);
          *(_OWORD *)(v102 + 8) = *(_OWORD *)(v102 - 32);
          *(_OWORD *)(v102 + 24) = v107;
          double v108 = *(double *)v102;
          *(void *)(v102 - 32) = v104;
          *(unsigned char *)(v102 - 24) = v105;
          *(void *)(v102 - 16) = result;
          *(void *)(v102 - 8) = v106;
          *(double *)uint64_t v102 = v100;
          v102 -= 40;
          *(double *)(v103 + 32) = v108;
        }
        while (!__CFADD__(v101++, 1));
        v97 += 40;
        --v98;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_146;
  }
  Swift::Int v6 = result;
  uint64_t v126 = v1;
  char v119 = a1;
  if (v3 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      char v12 = (char *)_swiftEmptyArrayStorage;
LABEL_103:
      uint64_t v110 = v12;
      uint64_t v121 = v9;
      if (v13 >= 2)
      {
        uint64_t v111 = *v119;
        do
        {
          unint64_t v112 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_132;
          }
          if (!v111) {
            goto LABEL_145;
          }
          v113 = v110;
          uint64_t v114 = *(void *)&v110[16 * v112 + 32];
          uint64_t v115 = *(void *)&v110[16 * v13 + 24];
          sub_1131A4((double *)(v111 + 40 * v114), (double *)(v111 + 40 * *(void *)&v110[16 * v13 + 16]), v111 + 40 * v115, __dst);
          if (v126) {
            break;
          }
          if (v115 < v114) {
            goto LABEL_133;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v113 = sub_70B24((uint64_t)v113);
          }
          if (v112 >= *((void *)v113 + 2)) {
            goto LABEL_134;
          }
          char v116 = &v113[16 * v112 + 32];
          *(void *)char v116 = v114;
          *((void *)v116 + 1) = v115;
          unint64_t v117 = *((void *)v113 + 2);
          if (v13 > v117) {
            goto LABEL_135;
          }
          memmove(&v113[16 * v13 + 16], &v113[16 * v13 + 32], 16 * (v117 - v13));
          uint64_t v110 = v113;
          *((void *)v113 + 2) = v117 - 1;
          unint64_t v13 = v117 - 1;
        }
        while (v117 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v121[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    uint64_t v121 = (void *)v8;
    __dst = (double *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v120 = *a1 + 112;
  uint64_t v118 = *a1 - 8;
  char v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v122 = v6;
  Swift::Int v123 = v3;
  uint64_t v124 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      double v15 = *(double *)(v11 + 40 * v10 + 32);
      double v16 = *(double *)(v11 + 40 * v14 + 32);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        char v17 = (double *)(v120 + 40 * v14);
        double v18 = v15;
        while (1)
        {
          double v19 = v18;
          double v18 = *v17;
          if (v15 < v16 == *v17 >= v19) {
            break;
          }
          ++v10;
          v17 += 5;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v15 < v16)
      {
        if (v10 < v14) {
          goto LABEL_138;
        }
        if (v14 < v10)
        {
          uint64_t v20 = 40 * v10;
          uint64_t v21 = 40 * v14;
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_144;
              }
              uint64_t v24 = v11 + v21;
              uint64_t v25 = *(void *)(v11 + v21);
              uint64_t v26 = v11 + v20;
              char v27 = *(unsigned char *)(v11 + v21 + 8);
              uint64_t v28 = *(void *)(v11 + v21 + 16);
              uint64_t v29 = *(void *)(v11 + v21 + 24);
              uint64_t v30 = *(void *)(v11 + v21 + 32);
              uint64_t v31 = *(void *)(v11 + v20 - 8);
              long long v32 = *(_OWORD *)(v11 + v20 - 24);
              *(_OWORD *)uint64_t v24 = *(_OWORD *)(v11 + v20 - 40);
              *(_OWORD *)(v24 + 16) = v32;
              *(void *)(v24 + 32) = v31;
              *(void *)(v26 - 40) = v25;
              *(unsigned char *)(v26 - 32) = v27;
              *(void *)(v26 - 24) = v28;
              *(void *)(v26 - 16) = v29;
              *(void *)(v26 - 8) = v30;
            }
            ++v23;
            v20 -= 40;
            v21 += 40;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_136;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v33 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_139;
    }
    if (v33 >= v3) {
      Swift::Int v33 = v3;
    }
    if (v33 < v14) {
      break;
    }
    if (v10 != v33)
    {
      uint64_t v34 = v118 + 40 * v10;
      do
      {
        double v35 = *(double *)(v11 + 40 * v10 + 32);
        Swift::Int v36 = v14;
        uint64_t v37 = v34;
        do
        {
          if (v35 >= *(double *)v37) {
            break;
          }
          if (!v11) {
            goto LABEL_142;
          }
          uint64_t v38 = v37 + 8;
          uint64_t v39 = *(void *)(v37 + 8);
          char v40 = *(unsigned char *)(v37 + 16);
          uint64_t v41 = *(void *)(v37 + 24);
          uint64_t v42 = *(void *)(v37 + 32);
          long long v43 = *(_OWORD *)(v37 - 16);
          *(_OWORD *)(v37 + 8) = *(_OWORD *)(v37 - 32);
          *(_OWORD *)(v37 + 24) = v43;
          double v44 = *(double *)v37;
          *(void *)(v37 - 32) = v39;
          *(unsigned char *)(v37 - 24) = v40;
          *(void *)(v37 - 16) = v41;
          *(void *)(v37 - 8) = v42;
          *(double *)uint64_t v37 = v35;
          v37 -= 40;
          ++v36;
          *(double *)(v38 + 32) = v44;
        }
        while (v10 != v36);
        ++v10;
        v34 += 40;
      }
      while (v10 != v33);
      Swift::Int v10 = v33;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_131;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v12 = sub_7004C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v46 = *((void *)v12 + 2);
    unint64_t v45 = *((void *)v12 + 3);
    unint64_t v13 = v46 + 1;
    uint64_t v11 = v124;
    if (v46 >= v45 >> 1)
    {
      unint64_t v95 = sub_7004C((char *)(v45 > 1), v46 + 1, 1, v12);
      uint64_t v11 = v124;
      char v12 = v95;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v47 = v12 + 32;
    BOOL v48 = &v12[16 * v46 + 32];
    *(void *)BOOL v48 = v14;
    *((void *)v48 + 1) = v10;
    if (v46)
    {
      while (1)
      {
        unint64_t v49 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v54 = &v47[16 * v13];
          uint64_t v55 = *((void *)v54 - 8);
          uint64_t v56 = *((void *)v54 - 7);
          BOOL v60 = __OFSUB__(v56, v55);
          uint64_t v57 = v56 - v55;
          if (v60) {
            goto LABEL_120;
          }
          uint64_t v59 = *((void *)v54 - 6);
          uint64_t v58 = *((void *)v54 - 5);
          BOOL v60 = __OFSUB__(v58, v59);
          uint64_t v52 = v58 - v59;
          char v53 = v60;
          if (v60) {
            goto LABEL_121;
          }
          unint64_t v61 = v13 - 2;
          uint64_t v62 = &v47[16 * v13 - 32];
          uint64_t v64 = *(void *)v62;
          uint64_t v63 = *((void *)v62 + 1);
          BOOL v60 = __OFSUB__(v63, v64);
          uint64_t v65 = v63 - v64;
          if (v60) {
            goto LABEL_123;
          }
          BOOL v60 = __OFADD__(v52, v65);
          uint64_t v66 = v52 + v65;
          if (v60) {
            goto LABEL_126;
          }
          if (v66 >= v57)
          {
            uint64_t v84 = &v47[16 * v49];
            uint64_t v86 = *(void *)v84;
            uint64_t v85 = *((void *)v84 + 1);
            BOOL v60 = __OFSUB__(v85, v86);
            uint64_t v87 = v85 - v86;
            if (v60) {
              goto LABEL_130;
            }
            BOOL v77 = v52 < v87;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v78 = *((void *)v12 + 4);
            uint64_t v79 = *((void *)v12 + 5);
            BOOL v60 = __OFSUB__(v79, v78);
            uint64_t v71 = v79 - v78;
            char v72 = v60;
            goto LABEL_77;
          }
          uint64_t v51 = *((void *)v12 + 4);
          uint64_t v50 = *((void *)v12 + 5);
          BOOL v60 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          char v53 = v60;
        }
        if (v53) {
          goto LABEL_122;
        }
        unint64_t v61 = v13 - 2;
        uint64_t v67 = &v47[16 * v13 - 32];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v70 = __OFSUB__(v68, v69);
        uint64_t v71 = v68 - v69;
        char v72 = v70;
        if (v70) {
          goto LABEL_125;
        }
        uint64_t v73 = &v47[16 * v49];
        uint64_t v75 = *(void *)v73;
        uint64_t v74 = *((void *)v73 + 1);
        BOOL v60 = __OFSUB__(v74, v75);
        uint64_t v76 = v74 - v75;
        if (v60) {
          goto LABEL_128;
        }
        if (__OFADD__(v71, v76)) {
          goto LABEL_129;
        }
        if (v71 + v76 >= v52)
        {
          BOOL v77 = v52 < v76;
LABEL_83:
          if (v77) {
            unint64_t v49 = v61;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v72) {
          goto LABEL_124;
        }
        char v80 = &v47[16 * v49];
        uint64_t v82 = *(void *)v80;
        uint64_t v81 = *((void *)v80 + 1);
        BOOL v60 = __OFSUB__(v81, v82);
        uint64_t v83 = v81 - v82;
        if (v60) {
          goto LABEL_127;
        }
        if (v83 < v71) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v88 = v49 - 1;
        if (v49 - 1 >= v13)
        {
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
          goto LABEL_140;
        }
        if (!v11) {
          goto LABEL_143;
        }
        uint64_t v89 = v12;
        uint64_t v90 = &v47[16 * v88];
        uint64_t v91 = *(void *)v90;
        uint64_t v92 = &v47[16 * v49];
        uint64_t v93 = *((void *)v92 + 1);
        sub_1131A4((double *)(v11 + 40 * *(void *)v90), (double *)(v11 + 40 * *(void *)v92), v11 + 40 * v93, __dst);
        if (v126) {
          goto LABEL_93;
        }
        if (v93 < v91) {
          goto LABEL_117;
        }
        if (v49 > *((void *)v89 + 2)) {
          goto LABEL_118;
        }
        *(void *)uint64_t v90 = v91;
        *(void *)&v47[16 * v88 + 8] = v93;
        unint64_t v94 = *((void *)v89 + 2);
        if (v49 >= v94) {
          goto LABEL_119;
        }
        char v12 = v89;
        unint64_t v13 = v94 - 1;
        memmove(&v47[16 * v49], v92 + 16, 16 * (v94 - 1 - v49));
        *((void *)v89 + 2) = v94 - 1;
        uint64_t v11 = v124;
        if (v94 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v122;
    Swift::Int v3 = v123;
    if (v10 >= v123)
    {
      uint64_t v9 = v121;
      goto LABEL_103;
    }
  }
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_1131A4(double *__src, double *a2, unint64_t a3, double *__dst)
{
  uint64_t v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = (char *)a2 - (char *)__src;
  int64_t v9 = ((char *)a2 - (char *)__src) / 40;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 40;
  uint64_t v29 = __src;
  uint64_t v28 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -39)
    {
      if (__dst != a2 || &a2[5 * v11] <= __dst) {
        memmove(__dst, a2, 40 * v11);
      }
      double v18 = &v4[5 * v11];
      char v27 = (char *)v18;
      uint64_t v29 = v6;
      if (v7 < v6 && v10 >= 40)
      {
        unint64_t v19 = a3 - 40;
        do
        {
          uint64_t v20 = (double *)(v19 + 40);
          if (*(v18 - 1) >= *(v6 - 1))
          {
            char v27 = (char *)(v18 - 5);
            if (v20 < v18 || v19 >= (unint64_t)v18 || v20 != v18)
            {
              long long v24 = *(_OWORD *)(v18 - 5);
              long long v25 = *(_OWORD *)(v18 - 3);
              *(double *)(v19 + 32) = *(v18 - 1);
              *(_OWORD *)unint64_t v19 = v24;
              *(_OWORD *)(v19 + 16) = v25;
            }
            uint64_t v21 = v6;
            v18 -= 5;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v21 = v6 - 5;
            if (v20 != v6 || v19 >= (unint64_t)v6)
            {
              long long v22 = *(_OWORD *)v21;
              long long v23 = *(_OWORD *)(v6 - 3);
              *(double *)(v19 + 32) = *(v6 - 1);
              *(_OWORD *)unint64_t v19 = v22;
              *(_OWORD *)(v19 + 16) = v23;
            }
            uint64_t v29 = v6 - 5;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 40;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_7081C((void **)&v29, (const void **)&v28, &v27);
      return 1;
    }
  }
  else if (v8 >= -39)
  {
    if (__dst != __src || &__src[5 * v9] <= __dst) {
      memmove(__dst, __src, 40 * v9);
    }
    char v12 = &v4[5 * v9];
    char v27 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 40)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v6[4] >= v13[4])
        {
          uint64_t v4 = v13 + 5;
          double v15 = v13;
          Swift::Int v14 = v6;
          if (v7 == v13)
          {
            v13 += 5;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 5;
          }
        }
        else
        {
          Swift::Int v14 = v6 + 5;
          double v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        long long v16 = *(_OWORD *)v15;
        long long v17 = *((_OWORD *)v15 + 1);
        v7[4] = v15[4];
        *(_OWORD *)uint64_t v7 = v16;
        *((_OWORD *)v7 + 1) = v17;
LABEL_18:
        v7 += 5;
        if (v13 < v12)
        {
          Swift::Int v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        uint64_t v28 = v4;
        uint64_t v29 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_113460(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v4 = result + 32;
    uint64_t v19 = a2;
    do
    {
      if (v3 <= v2) {
        unint64_t v5 = v2;
      }
      else {
        unint64_t v5 = v3;
      }
      for (unint64_t i = v3; ; ++i)
      {
        if (i == v5) {
          goto LABEL_23;
        }
        uint64_t v7 = v4 + 40 * i;
        uint64_t v8 = *(void *)v7;
        unint64_t v3 = i + 1;
        uint64_t v9 = *(void *)(a2 + 456);
        uint64_t v10 = *(void *)(v9 + 16);
        if (!v10) {
          goto LABEL_16;
        }
        if (*(void *)(v9 + 32) != v8) {
          break;
        }
LABEL_7:
        if (v3 == v2) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      if (v10 != 1)
      {
        uint64_t v11 = 5;
        while (1)
        {
          uint64_t v12 = v11 - 3;
          if (__OFADD__(v11 - 4, 1)) {
            break;
          }
          if (*(void *)(v9 + 8 * v11) == v8) {
            goto LABEL_7;
          }
          ++v11;
          if (v12 == v10) {
            goto LABEL_16;
          }
        }
        __break(1u);
LABEL_23:
        __break(1u);
        return result;
      }
LABEL_16:
      uint64_t v13 = *(void *)(v4 + 40 * i + 32);
      uint64_t v15 = *(void *)(v7 + 16);
      uint64_t v14 = *(void *)(v7 + 24);
      char v20 = *(unsigned char *)(v7 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_469A8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      if (v17 >= v16 >> 1) {
        uint64_t result = sub_469A8(v16 > 1, v17 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v17 + 1;
      double v18 = &_swiftEmptyArrayStorage[5 * v17];
      v18[4] = v8;
      *((unsigned char *)v18 + 40) = v20;
      v18[6] = v15;
      v18[7] = v14;
      v18[8] = v13;
      a2 = v19;
    }
    while (v3 != v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

unint64_t sub_113614()
{
  unint64_t result = qword_270258;
  if (!qword_270258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270258);
  }
  return result;
}

uint64_t sub_113668(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_270260);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1136D0(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_270260);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_113730(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 752);
  uint64_t v23 = *(void *)(a1 + 744);
  uint64_t v20 = *(void *)(a1 + 768);
  uint64_t v21 = *(void *)(a1 + 760);
  uint64_t v18 = *(void *)(a1 + 784);
  uint64_t v19 = *(void *)(a1 + 776);
  uint64_t v16 = *(void *)(a1 + 800);
  uint64_t v17 = *(void *)(a1 + 792);
  long long v8 = *(_OWORD *)(a1 + 824);
  long long v9 = *(_OWORD *)(a1 + 808);
  long long v7 = *(_OWORD *)(a1 + 840);
  long long v5 = *(_OWORD *)(a1 + 872);
  long long v6 = *(_OWORD *)(a1 + 856);
  long long v3 = *(_OWORD *)(a1 + 904);
  long long v4 = *(_OWORD *)(a1 + 888);
  uint64_t v10 = *(void *)(a1 + 936);
  uint64_t v11 = *(void *)(a1 + 928);
  uint64_t v14 = *(void *)(a1 + 984);
  uint64_t v15 = *(void *)(a1 + 976);
  uint64_t v12 = *(void *)(a1 + 1000);
  uint64_t v13 = *(void *)(a1 + 992);
  uint64_t v26 = *(void *)(a1 + 1064);
  uint64_t v27 = *(void *)(a1 + 1056);
  uint64_t v24 = *(void *)(a1 + 1080);
  uint64_t v25 = *(void *)(a1 + 1072);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_11FF4(v23, v22, v21, v20, v19, v18, v17, v16, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3,
    *((uint64_t *)&v3 + 1));
  sub_12040(v11, v10);
  sub_12090(v15, v14, v13, v12);
  swift_bridgeObjectRelease();
  sub_120D4(v27, v26, v25, v24);
  return a1;
}

uint64_t getEnumTagSinglePayload for DelegatingGenreRecommendationService.Errors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1F) {
    goto LABEL_17;
  }
  if (a2 + 225 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 225) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 225;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 225;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 225;
    }
  }
LABEL_17:
  unsigned int v6 = ((*a1 >> 2) & 0x1E | (*a1 >> 7)) ^ 0x1F;
  if (v6 >= 0x1E) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for DelegatingGenreRecommendationService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 225 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 225) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1F) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1E)
  {
    unsigned int v6 = ((a2 - 31) >> 8) + 1;
    *unint64_t result = a2 - 31;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x113B70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 1) & 0xF) - 16 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_113B98(unsigned __int8 *a1)
{
  return *a1 >> 7;
}

unsigned char *sub_113BA4(unsigned char *result)
{
  *result &= ~0x80u;
  return result;
}

unsigned char *sub_113BB4(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (a2 << 7);
  return result;
}

ValueMetadata *type metadata accessor for DelegatingGenreRecommendationService.Errors()
{
  return &type metadata for DelegatingGenreRecommendationService.Errors;
}

uint64_t dispatch thunk of SignerType.signature(data:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t *sub_113C00(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v9 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FB110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    *(uint64_t *)((char *)a1 + v8) = *(uint64_t *)((char *)a2 + v8);
    *(uint64_t *)((char *)a1 + a3[7]) = *(uint64_t *)((char *)a2 + a3[7]);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_113CF4(uint64_t a1)
{
  uint64_t v2 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_113D80(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_113E24(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_113EE8(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  return a1;
}

uint64_t sub_113F78(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[7]) = *(void *)(a2 + a3[7]);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_114024(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_114038);
}

uint64_t sub_114038(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1140F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_11410C);
}

uint64_t sub_11410C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FB110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for BookScoringWork()
{
  uint64_t result = qword_2702C0;
  if (!qword_2702C0) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_114214()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1142B0()
{
  return sub_124B58(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
}

Swift::Int sub_1142F8()
{
  return sub_1FC830();
}

Swift::Int sub_1143F0()
{
  return sub_1FC830();
}

Swift::Int sub_114500()
{
  return sub_1FC830();
}

Swift::Int sub_114664()
{
  return sub_1FC830();
}

Swift::Int sub_1147A0()
{
  return sub_1FC830();
}

Swift::Int sub_114894()
{
  return sub_1FC830();
}

Swift::Int sub_11497C()
{
  return sub_1FC830();
}

Swift::Int sub_114A90()
{
  return sub_1FC830();
}

Swift::Int sub_114B40()
{
  return sub_1FC830();
}

Swift::Int sub_114C24()
{
  return sub_1FC830();
}

Swift::Int sub_114D20()
{
  return sub_1FC830();
}

Swift::Int sub_114E24()
{
  return sub_1FC830();
}

Swift::Int sub_114F70()
{
  return sub_1FC830();
}

Swift::Int sub_11509C()
{
  return sub_1FC830();
}

Swift::Int sub_115198()
{
  return sub_1FC830();
}

Swift::Int sub_11528C()
{
  return sub_1FC830();
}

Swift::Int sub_115390()
{
  return sub_1FC830();
}

void *sub_1154D8(uint64_t a1, uint64_t a2, int64_t a3, uint64_t a4)
{
  uint64_t v6 = (void *)a4;
  if (*(void *)(a4 + 16) <= a3)
  {
    swift_bridgeObjectRetain();
    goto LABEL_11;
  }
  swift_bridgeObjectRetain();
  sub_124560();
  int64_t v10 = sub_3E3A8(a3, a4);
  uint64_t v6 = v11;
  uint64_t v4 = v12;
  unint64_t v5 = v13;
  if (v13)
  {
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v14 = (void *)swift_dynamicCastClass();
    if (!v14)
    {
      swift_unknownObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    uint64_t v15 = v14[2];
    swift_release();
    if (__OFSUB__(v5 >> 1, v4)) {
      goto LABEL_16;
    }
    if (v15 != (v5 >> 1) - v4) {
      goto LABEL_17;
    }
    uint64_t v6 = (void *)swift_dynamicCastClass();
    swift_unknownObjectRelease();
    if (!v6)
    {
      swift_unknownObjectRelease();
      uint64_t v6 = _swiftEmptyArrayStorage;
    }
    goto LABEL_11;
  }
  while (1)
  {
    uint64_t v6 = sub_4AE7C(v10, (uint64_t)v6, v4, v5);
    swift_unknownObjectRelease();
LABEL_11:
    uint64_t v16 = v6[2];
    if (v16 == a3) {
      break;
    }
    int64_t v10 = a3 - v16;
    if (!__OFSUB__(a3, v16))
    {
      swift_bridgeObjectRetain();
      uint64_t v17 = sub_984F8(a1, a2, v10);
      swift_bridgeObjectRelease();
      sub_A990C((uint64_t)v17);
      return v6;
    }
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    swift_unknownObjectRelease();
  }
  return v6;
}

uint64_t sub_115678(void *a1)
{
  uint64_t v2 = a1[44];
  if (v2)
  {
    uint64_t v3 = v1;
    uint64_t v5 = a1[41];
    uint64_t v4 = a1[42];
    uint64_t v20 = a1[43];
    uint64_t v6 = qword_26C398;
    swift_bridgeObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    uint64_t v7 = (void *)qword_272B78;
    sub_12124(&qword_26D7F0);
    uint64_t v8 = swift_allocObject();
    long long v19 = xmmword_1FD2A0;
    *(_OWORD *)(v8 + 16) = xmmword_1FD2A0;
    uint64_t v9 = *(void *)(v1 + *(int *)(type metadata accessor for BookScoringWork() + 24));
    uint64_t v10 = *(void *)(v9 + 16);
    *(void *)(v8 + 56) = &type metadata for Int;
    *(void *)(v8 + 64) = &protocol witness table for Int;
    *(void *)(v8 + 32) = v10;
    id v11 = v7;
    sub_1FBDC0();
    sub_1FB400();

    uint64_t v12 = swift_bridgeObjectRelease();
    __chkstk_darwin(v12);
    v18[2] = v3;
    v18[3] = v5;
    v18[4] = v4;
    swift_bridgeObjectRetain();
    unint64_t v13 = sub_38954((void (*)(void *__return_ptr, uint64_t *))sub_124A64, (uint64_t)v18, v9);
    swift_bridgeObjectRelease();
    unint64_t v14 = sub_19BD14((uint64_t)v13, (char *)0x726F63536B6F6F62, 0xEB00000000676E69);
    swift_bridgeObjectRelease();
    sub_1E52C4(v14);
    sub_1FB690();
    swift_allocObject();
    sub_1FB670();
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D370);
    uint64_t v15 = swift_allocObject();
    *(_OWORD *)(v15 + 16) = v19;
    *(void *)(v15 + 32) = v20;
    *(void *)(v15 + 40) = v2;
    sub_1FB660();
    swift_allocObject();
    swift_bridgeObjectRetain();
    uint64_t v16 = sub_1FB650();
    swift_bridgeObjectRetain();
  }
  else
  {
    sub_124A10();
    uint64_t v16 = swift_allocError();
    swift_willThrow();
  }
  return v16;
}

uint64_t sub_115948@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, int64_t a3@<X2>, int64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *a1;
  int v6 = *((unsigned __int8 *)a1 + 8);
  uint64_t v7 = *(void *)(a2 + *(int *)(type metadata accessor for BookScoringWork() + 28));
  if (*(void *)(v7 + 16) && (uint64_t v8 = sub_56168(v5), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void **)(*(void *)(v7 + 56) + 80 * v8 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    id v11 = (void *)Book.Metadata.genreIDs.getter();
    swift_bridgeObjectRelease();
    if (!v6)
    {
LABEL_4:
      char v12 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      int v13 = v12 & 1;
      goto LABEL_7;
    }
  }
  else
  {
    uint64_t v10 = _swiftEmptySetSingleton;
    id v11 = _swiftEmptySetSingleton;
    if (!v6) {
      goto LABEL_4;
    }
  }
  swift_bridgeObjectRelease();
  int v13 = 1;
LABEL_7:
  int v50 = v13;
  int64_t v14 = v11[2];
  if (v14)
  {
    sub_46588(0, v14, 0);
    uint64_t result = sub_14D538(v11);
    uint64_t v16 = result;
    uint64_t v18 = v17;
    char v20 = v19 & 1;
    uint64_t v54 = v10;
    while ((v16 & 0x8000000000000000) == 0 && v16 < 1 << *((unsigned char *)v11 + 32))
    {
      if (((*(void *)((char *)v11 + (((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0) {
        goto LABEL_31;
      }
      if (*((_DWORD *)v11 + 9) != v18) {
        goto LABEL_32;
      }
      char v55 = v20;
      uint64_t v21 = sub_1FC580();
      uint64_t v23 = v22;
      unint64_t v25 = _swiftEmptyArrayStorage[2];
      unint64_t v24 = _swiftEmptyArrayStorage[3];
      if (v25 >= v24 >> 1) {
        sub_46588(v24 > 1, v25 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v25 + 1;
      uint64_t v26 = &_swiftEmptyArrayStorage[2 * v25];
      v26[4] = v21;
      v26[5] = v23;
      uint64_t result = sub_14D5DC(v16, v18, v55 & 1, v11);
      uint64_t v16 = result;
      uint64_t v18 = v27;
      char v20 = v28 & 1;
      --v14;
      uint64_t v10 = v54;
      if (!v14)
      {
        sub_55F94(result, v27, v20);
        swift_bridgeObjectRelease();
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  swift_bridgeObjectRelease();
LABEL_18:
  int64_t v29 = v10[2];
  if (v29)
  {
    sub_46588(0, v29, 0);
    uint64_t v30 = _swiftEmptyArrayStorage;
    uint64_t result = sub_14D538(v10);
    uint64_t v31 = result;
    uint64_t v33 = v32;
    char v35 = v34 & 1;
    while ((v31 & 0x8000000000000000) == 0 && v31 < 1 << *((unsigned char *)v10 + 32))
    {
      if (((*(void *)((char *)v10 + (((unint64_t)v31 >> 3) & 0x1FFFFFFFFFFFFFF8) + 56) >> v31) & 1) == 0) {
        goto LABEL_34;
      }
      if (*((_DWORD *)v10 + 9) != v33) {
        goto LABEL_35;
      }
      char v56 = v35;
      uint64_t v36 = sub_1FC580();
      uint64_t v38 = v37;
      unint64_t v40 = v30[2];
      unint64_t v39 = v30[3];
      uint64_t v41 = v30;
      if (v40 >= v39 >> 1)
      {
        sub_46588(v39 > 1, v40 + 1, 1);
        uint64_t v41 = v30;
      }
      v41[2] = v40 + 1;
      uint64_t v42 = &v41[2 * v40];
      v42[4] = v36;
      v42[5] = v38;
      uint64_t result = sub_14D5DC(v31, v33, v56 & 1, v10);
      uint64_t v31 = result;
      uint64_t v33 = v43;
      char v35 = v44 & 1;
      --v29;
      uint64_t v30 = v41;
      if (!v29)
      {
        sub_55F94(result, v43, v35);
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
    }
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    return result;
  }
  swift_bridgeObjectRelease();
  uint64_t v30 = _swiftEmptyArrayStorage;
LABEL_29:
  uint64_t v45 = sub_1FC580();
  uint64_t v47 = v46;
  BOOL v48 = sub_1154D8(0, 0xE000000000000000, a3, (uint64_t)_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  unint64_t v49 = sub_1154D8(0, 0xE000000000000000, a4, (uint64_t)v30);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a5 = v45;
  *(void *)(a5 + 8) = v47;
  *(_DWORD *)(a5 + 16) = v50;
  *(void *)(a5 + 24) = v48;
  *(void *)(a5 + 32) = v49;
  return result;
}

uint64_t sub_115DEC()
{
  return 0x6F6373206B6F6F62;
}

uint64_t sub_115E0C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_115678(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

unint64_t sub_115E3C@<X0>(uint64_t *a1@<X0>, unint64_t *a2@<X8>)
{
  unint64_t result = sub_12482C(a1[1], a1[2], a1[3]);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_115E78(uint64_t a1)
{
  uint64_t result = sub_124B58((unint64_t *)&qword_270300, (void (*)(uint64_t))type metadata accessor for BookScoringWork);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_115ED0()
{
  return sub_124B58(&qword_270308, (void (*)(uint64_t))type metadata accessor for BookScoringWork);
}

uint64_t sub_115F18()
{
  return sub_124B58((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

unint64_t sub_115F64()
{
  unint64_t result = qword_270310;
  if (!qword_270310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270310);
  }
  return result;
}

uint64_t sub_115FB8(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v53 = sub_1FB1F0();
  uint64_t v5 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  uint64_t v52 = (char *)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1FB220();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v42 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *v2;
  sub_12124(&qword_2704A0);
  int v50 = a2;
  uint64_t v12 = sub_1FC290();
  uint64_t v13 = v12;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v14 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v15 = *(void *)(v11 + 64);
  char v44 = (void *)(v11 + 64);
  if (v14 < 64) {
    uint64_t v16 = ~(-1 << v14);
  }
  else {
    uint64_t v16 = -1;
  }
  unint64_t v17 = v16 & v15;
  uint64_t v42 = v2;
  int64_t v43 = (unint64_t)(v14 + 63) >> 6;
  uint64_t v45 = v5 + 16;
  uint64_t v46 = (void (**)(char *, unint64_t, uint64_t))(v8 + 16);
  uint64_t v48 = v5;
  uint64_t v49 = v8;
  uint64_t v18 = (void (**)(char *, unint64_t, uint64_t))(v8 + 32);
  uint64_t v51 = (uint64_t (**)(unint64_t, char *, uint64_t))(v5 + 32);
  uint64_t v19 = v12 + 64;
  uint64_t result = swift_retain();
  int64_t v21 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v17)
    {
      unint64_t v23 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v24 = v23 | (v21 << 6);
      goto LABEL_22;
    }
    int64_t v25 = v21 + 1;
    if (__OFADD__(v21, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v25 >= v43) {
      break;
    }
    uint64_t v26 = v44;
    unint64_t v27 = v44[v25];
    ++v21;
    if (!v27)
    {
      int64_t v21 = v25 + 1;
      if (v25 + 1 >= v43) {
        goto LABEL_34;
      }
      unint64_t v27 = v44[v21];
      if (!v27)
      {
        int64_t v28 = v25 + 2;
        if (v28 >= v43)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v42;
          if ((v50 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v27 = v44[v28];
        if (!v27)
        {
          while (1)
          {
            int64_t v21 = v28 + 1;
            if (__OFADD__(v28, 1)) {
              goto LABEL_43;
            }
            if (v21 >= v43) {
              goto LABEL_34;
            }
            unint64_t v27 = v44[v21];
            ++v28;
            if (v27) {
              goto LABEL_21;
            }
          }
        }
        int64_t v21 = v28;
      }
    }
LABEL_21:
    unint64_t v17 = (v27 - 1) & v27;
    unint64_t v24 = __clz(__rbit64(v27)) + (v21 << 6);
LABEL_22:
    uint64_t v29 = *(void *)(v49 + 72);
    unint64_t v30 = *(void *)(v11 + 48) + v29 * v24;
    if (v50)
    {
      (*v18)(v10, v30, v7);
      uint64_t v31 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 32))(v52, v31 + v32 * v24, v53);
    }
    else
    {
      (*v46)(v10, v30, v7);
      uint64_t v33 = *(void *)(v11 + 56);
      uint64_t v32 = *(void *)(v48 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v48 + 16))(v52, v33 + v32 * v24, v53);
    }
    sub_124B58(&qword_26D5F8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
    uint64_t result = sub_1FB790();
    uint64_t v34 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v35 = result & ~v34;
    unint64_t v36 = v35 >> 6;
    if (((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v35) & ~*(void *)(v19 + 8 * (v35 >> 6)))) | v35 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v37 = 0;
      unint64_t v38 = (unint64_t)(63 - v34) >> 6;
      do
      {
        if (++v36 == v38 && (v37 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v39 = v36 == v38;
        if (v36 == v38) {
          unint64_t v36 = 0;
        }
        v37 |= v39;
        uint64_t v40 = *(void *)(v19 + 8 * v36);
      }
      while (v40 == -1);
      unint64_t v22 = __clz(__rbit64(~v40)) + (v36 << 6);
    }
    *(void *)(v19 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    (*v18)((char *)(*(void *)(v13 + 48) + v29 * v22), (unint64_t)v10, v7);
    uint64_t result = (*v51)(*(void *)(v13 + 56) + v32 * v22, v52, v53);
    ++*(void *)(v13 + 16);
  }
  swift_release();
  uint64_t v3 = v42;
  uint64_t v26 = v44;
  if ((v50 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v41 = 1 << *(unsigned char *)(v11 + 32);
  if (v41 >= 64) {
    bzero(v26, ((unint64_t)(v41 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v26 = -1 << v41;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v13;
  return result;
}

uint64_t sub_1164B4(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_26DA08);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v31 = a2;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if (v31)
              {
                if (v30 >= 64) {
                  bzero((void *)(v5 + 64), 8 * v13);
                }
                else {
                  uint64_t *v9 = v29;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_39;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      memcpy(__src, (const void *)(*(void *)(v5 + 56) + 384 * v17), sizeof(__src));
      uint64_t result = sub_1FC7D0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v7 + 56) + 384 * v15), __src, 0x179uLL);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_116770(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for StoreBook(0);
  uint64_t v38 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_12124(&qword_270390);
  char v9 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v11 = result;
  if (*(void *)(v8 + 16))
  {
    unint64_t v35 = v3;
    int64_t v12 = 0;
    uint64_t v13 = *(void *)(v8 + 64);
    char v37 = (void *)(v8 + 64);
    uint64_t v14 = 1 << *(unsigned char *)(v8 + 32);
    if (v14 < 64) {
      uint64_t v15 = ~(-1 << v14);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v13;
    int64_t v36 = (unint64_t)(v14 + 63) >> 6;
    uint64_t v17 = result + 64;
    while (1)
    {
      if (v16)
      {
        unint64_t v19 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v20 = v19 | (v12 << 6);
      }
      else
      {
        int64_t v21 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v37;
        if (v21 >= v36) {
          goto LABEL_34;
        }
        unint64_t v22 = v37[v21];
        ++v12;
        if (!v22)
        {
          int64_t v12 = v21 + 1;
          if (v21 + 1 >= v36) {
            goto LABEL_34;
          }
          unint64_t v22 = v37[v12];
          if (!v22)
          {
            int64_t v23 = v21 + 2;
            if (v23 >= v36)
            {
LABEL_34:
              if ((v9 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_41;
              }
              uint64_t v34 = 1 << *(unsigned char *)(v8 + 32);
              if (v34 >= 64) {
                bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                *char v37 = -1 << v34;
              }
              uint64_t v3 = v35;
              *(void *)(v8 + 16) = 0;
              break;
            }
            unint64_t v22 = v37[v23];
            if (!v22)
            {
              while (1)
              {
                int64_t v12 = v23 + 1;
                if (__OFADD__(v23, 1)) {
                  goto LABEL_43;
                }
                if (v12 >= v36) {
                  goto LABEL_34;
                }
                unint64_t v22 = v37[v12];
                ++v23;
                if (v22) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v23;
          }
        }
LABEL_21:
        unint64_t v16 = (v22 - 1) & v22;
        unint64_t v20 = __clz(__rbit64(v22)) + (v12 << 6);
      }
      uint64_t v24 = *(void *)(*(void *)(v8 + 48) + 8 * v20);
      uint64_t v25 = *(void *)(v38 + 72);
      uint64_t v26 = *(void *)(v8 + 56) + v25 * v20;
      if (v9) {
        sub_124AF0(v26, (uint64_t)v7, type metadata accessor for StoreBook);
      }
      else {
        sub_124A88(v26, (uint64_t)v7, type metadata accessor for StoreBook);
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v27 = -1 << *(unsigned char *)(v11 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v28) & ~*(void *)(v17 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v17 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v18 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v17 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      *(void *)(*(void *)(v11 + 48) + 8 * v18) = v24;
      uint64_t result = sub_124AF0((uint64_t)v7, *(void *)(v11 + 56) + v25 * v18, type metadata accessor for StoreBook);
      ++*(void *)(v11 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v11;
  return result;
}

uint64_t sub_116AFC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270170);
  char v42 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v40 = (uint64_t *)(v5 + 64);
    uint64_t v41 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v36 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v37 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v38 = v3;
    int64_t v39 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v14 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v15 = v14 | (v8 << 6);
      }
      else
      {
        int64_t v16 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v40;
        if (v16 >= v39) {
          goto LABEL_34;
        }
        unint64_t v17 = v40[v16];
        ++v8;
        if (!v17)
        {
          int64_t v8 = v16 + 1;
          if (v16 + 1 >= v39) {
            goto LABEL_34;
          }
          unint64_t v17 = v40[v8];
          if (!v17)
          {
            int64_t v18 = v16 + 2;
            if (v18 >= v39)
            {
LABEL_34:
              if ((v42 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v38;
                goto LABEL_41;
              }
              if (v37 >= 64) {
                bzero(v40, 8 * v39);
              }
              else {
                *uint64_t v40 = v36;
              }
              uint64_t v3 = v38;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v17 = v40[v18];
            if (!v17)
            {
              while (1)
              {
                int64_t v8 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_43;
                }
                if (v8 >= v39) {
                  goto LABEL_34;
                }
                unint64_t v17 = v40[v8];
                ++v18;
                if (v17) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v18;
          }
        }
LABEL_21:
        unint64_t v11 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v8 << 6);
      }
      uint64_t v19 = 560 * v15;
      uint64_t v20 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
      if (v42)
      {
        uint64_t v21 = *(void *)(v5 + 56) + v19;
        char v45 = *(unsigned char *)(v21 + 8);
        long long v59 = *(_OWORD *)(v21 + 16);
        char v57 = *(unsigned char *)(v21 + 40);
        uint64_t v53 = *(void *)(v21 + 56);
        uint64_t v50 = *(void *)(v21 + 64);
        uint64_t v51 = *(void *)v21;
        char v47 = *(unsigned char *)(v21 + 80);
        int64_t v22 = v8;
        uint64_t v23 = *(void *)(v21 + 88);
        uint64_t v24 = *(void *)(v21 + 96);
        uint64_t v25 = *(void *)(v21 + 104);
        uint64_t v46 = *(void *)(v21 + 112);
        uint64_t v43 = *(void *)(v21 + 32);
        uint64_t v44 = *(void *)(v21 + 120);
        uint64_t v58 = *(void *)(v21 + 128);
        uint64_t v55 = *(void *)(v21 + 48);
        uint64_t v56 = *(void *)(v21 + 136);
        uint64_t v54 = *(void *)(v21 + 144);
        uint64_t v48 = *(void *)(v21 + 72);
        uint64_t v49 = *(void *)(v21 + 152);
        sub_55844(v21 + 160, (uint64_t)__src, &qword_26C518);
        uint64_t v52 = *(void *)(v21 + 544);
        uint64_t v26 = __src;
        uint64_t v27 = v23;
        int64_t v8 = v22;
        char v28 = *(unsigned char *)(v21 + 552);
      }
      else
      {
        memcpy(__src, (const void *)(*(void *)(v5 + 56) + v19), 0x229uLL);
        char v28 = BYTE8(__src[34]);
        uint64_t v27 = *((void *)&__src[5] + 1);
        uint64_t v25 = *((void *)&__src[6] + 1);
        uint64_t v24 = *(void *)&__src[6];
        uint64_t v46 = *(void *)&__src[7];
        uint64_t v58 = *(void *)&__src[8];
        uint64_t v52 = *(void *)&__src[34];
        uint64_t v49 = *((void *)&__src[9] + 1);
        char v45 = BYTE8(__src[0]);
        long long v59 = __src[1];
        uint64_t v43 = *(void *)&__src[2];
        uint64_t v44 = *((void *)&__src[7] + 1);
        char v57 = BYTE8(__src[2]);
        uint64_t v55 = *(void *)&__src[3];
        uint64_t v56 = *((void *)&__src[8] + 1);
        uint64_t v53 = *((void *)&__src[3] + 1);
        uint64_t v54 = *(void *)&__src[9];
        uint64_t v48 = *((void *)&__src[4] + 1);
        char v47 = __src[5];
        uint64_t v50 = *(void *)&__src[4];
        uint64_t v51 = *(void *)&__src[0];
        sub_12384(__src);
        uint64_t v26 = &__src[10];
      }
      sub_55844((uint64_t)v26, (uint64_t)v61, &qword_26C518);
      uint64_t result = sub_1FC7D0();
      uint64_t v29 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      if (((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v30) & ~*(void *)(v12 + 8 * (v30 >> 6)))) | v30 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v29) >> 6;
        do
        {
          if (++v31 == v33 && (v32 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v34 = v31 == v33;
          if (v31 == v33) {
            unint64_t v31 = 0;
          }
          v32 |= v34;
          uint64_t v35 = *(void *)(v12 + 8 * v31);
        }
        while (v35 == -1);
        unint64_t v13 = __clz(__rbit64(~v35)) + (v31 << 6);
      }
      *(void *)&__src[0] = v51;
      BYTE8(__src[0]) = v45;
      __src[1] = v59;
      *(void *)&__src[2] = v43;
      BYTE8(__src[2]) = v57;
      *(void *)&__src[3] = v55;
      *((void *)&__src[3] + 1) = v53;
      *(void *)&__src[4] = v50;
      *((void *)&__src[4] + 1) = v48;
      LOBYTE(__src[5]) = v47;
      *((void *)&__src[5] + 1) = v27;
      *(void *)&__src[6] = v24;
      *((void *)&__src[6] + 1) = v25;
      *(void *)&__src[7] = v46;
      *((void *)&__src[7] + 1) = v44;
      *(void *)&__src[8] = v58;
      *((void *)&__src[8] + 1) = v56;
      *(void *)&__src[9] = v54;
      *((void *)&__src[9] + 1) = v49;
      sub_55844((uint64_t)v61, (uint64_t)&__src[10], &qword_26C518);
      *(void *)&__src[34] = v52;
      BYTE8(__src[34]) = v28;
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v20;
      uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v7 + 56) + 560 * v13), __src, 0x229uLL);
      ++*(void *)(v7 + 16);
      uint64_t v5 = v41;
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_116FD8(uint64_t a1, char a2)
{
  return sub_11E29C(a1, a2, &qword_26C4F0);
}

uint64_t sub_116FE4(uint64_t a1, char a2)
{
  return sub_11BF44(a1, a2, &qword_270398);
}

uint64_t sub_116FF0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703C0);
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  unint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11730C(uint64_t a1, char a2)
{
  return sub_11E29C(a1, a2, &qword_2703B8);
}

uint64_t sub_117318(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_2703C8);
}

uint64_t sub_117324(uint64_t a1, int a2)
{
  return sub_117A9C(a1, a2, &qword_26C4E8, &qword_270370);
}

uint64_t sub_117338(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_26D210);
  char v35 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (*(void *)(v5 + 16))
  {
    uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = (void *)(v5 + 64);
    if (v8 < 64) {
      uint64_t v9 = ~(-1 << v8);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v8 + 63) >> 6;
    uint64_t v11 = v6 + 64;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v10)
      {
        unint64_t v16 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        unint64_t v17 = v16 | (v13 << 6);
      }
      else
      {
        int64_t v18 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v18 >= v33) {
          goto LABEL_34;
        }
        unint64_t v19 = v34[v18];
        ++v13;
        if (!v19)
        {
          int64_t v13 = v18 + 1;
          if (v18 + 1 >= v33) {
            goto LABEL_34;
          }
          unint64_t v19 = v34[v13];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v33)
            {
LABEL_34:
              swift_release();
              uint64_t v3 = v2;
              if (v35)
              {
                uint64_t v32 = 1 << *(unsigned char *)(v5 + 32);
                if (v32 >= 64) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v19 = v34[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v13 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_41;
                }
                if (v13 >= v33) {
                  goto LABEL_34;
                }
                unint64_t v19 = v34[v13];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v13 = v20;
          }
        }
LABEL_21:
        unint64_t v10 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v13 << 6);
      }
      int64_t v21 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v17);
      uint64_t v23 = *v21;
      uint64_t v22 = v21[1];
      uint64_t v24 = *(void *)(v5 + 56) + 40 * v17;
      if (v35)
      {
        sub_55844(v24, (uint64_t)v36, &qword_26D168);
      }
      else
      {
        sub_5606C(v24, (uint64_t)v36, &qword_26D168);
        swift_bridgeObjectRetain();
      }
      sub_1FC7E0();
      sub_1FB8C0();
      uint64_t result = sub_1FC830();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v26) & ~*(void *)(v11 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v11 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v14 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      unint64_t v15 = (void *)(*(void *)(v7 + 48) + 16 * v14);
      *unint64_t v15 = v23;
      v15[1] = v22;
      uint64_t result = sub_55844((uint64_t)v36, *(void *)(v7 + 56) + 40 * v14, &qword_26D168);
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_117664(uint64_t a1, int a2)
{
  return sub_119AE8(a1, a2, &qword_26D938, &qword_26D9A0);
}

uint64_t sub_117678(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_270380);
}

uint64_t sub_117684(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_26D970);
  char v49 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v47 = (uint64_t *)(v5 + 64);
    uint64_t v48 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v43 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v44 = 1 << *(unsigned char *)(v5 + 32);
    char v45 = v3;
    int64_t v46 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
        if (v49) {
          goto LABEL_10;
        }
      }
      else
      {
        int64_t v25 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v47;
        if (v25 >= v46) {
          goto LABEL_33;
        }
        unint64_t v26 = v47[v25];
        ++v8;
        if (!v26)
        {
          int64_t v8 = v25 + 1;
          if (v25 + 1 >= v46) {
            goto LABEL_33;
          }
          unint64_t v26 = v47[v8];
          if (!v26)
          {
            int64_t v27 = v25 + 2;
            if (v27 >= v46)
            {
LABEL_33:
              if ((v49 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v45;
                goto LABEL_40;
              }
              if (v44 >= 64) {
                bzero(v47, 8 * v46);
              }
              else {
                *char v47 = v43;
              }
              uint64_t v3 = v45;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v26 = v47[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v8 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v46) {
                  goto LABEL_33;
                }
                unint64_t v26 = v47[v8];
                ++v27;
                if (v26) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v8 = v27;
          }
        }
LABEL_22:
        unint64_t v11 = (v26 - 1) & v26;
        unint64_t v16 = __clz(__rbit64(v26)) + (v8 << 6);
        if (v49)
        {
LABEL_10:
          uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
          uint64_t v18 = *(void *)(v5 + 56) + 152 * v16;
          uint64_t v57 = *(void *)v18;
          uint64_t v19 = *(void *)(v18 + 16);
          char v20 = *(unsigned char *)(v18 + 24);
          uint64_t v21 = *(void *)(v18 + 32);
          char v22 = *(unsigned char *)(v18 + 40);
          uint64_t v23 = *(void *)(v18 + 48);
          uint64_t v24 = *(void *)(v18 + 72);
          long long v50 = *(_OWORD *)(v18 + 56);
          long long v51 = *(_OWORD *)(v18 + 80);
          long long v52 = *(_OWORD *)(v18 + 96);
          long long v55 = *(_OWORD *)(v18 + 128);
          long long v56 = *(_OWORD *)(v18 + 112);
          char v53 = *(unsigned char *)(v18 + 144);
          char v54 = *(unsigned char *)(v18 + 8);
          goto LABEL_24;
        }
      }
      uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      uint64_t v28 = *(void *)(v5 + 56) + 152 * v16;
      long long v29 = *(_OWORD *)(v28 + 16);
      long long v58 = *(_OWORD *)v28;
      long long v59 = v29;
      long long v30 = *(_OWORD *)(v28 + 80);
      long long v32 = *(_OWORD *)(v28 + 32);
      long long v31 = *(_OWORD *)(v28 + 48);
      *(_OWORD *)&v61[16] = *(_OWORD *)(v28 + 64);
      long long v62 = v30;
      long long v60 = v32;
      *(_OWORD *)unint64_t v61 = v31;
      long long v34 = *(_OWORD *)(v28 + 112);
      long long v33 = *(_OWORD *)(v28 + 128);
      long long v35 = *(_OWORD *)(v28 + 96);
      char v66 = *(unsigned char *)(v28 + 144);
      long long v64 = v34;
      long long v65 = v33;
      long long v63 = v35;
      long long v55 = v33;
      long long v56 = v34;
      char v53 = v66;
      long long v51 = v62;
      long long v52 = v35;
      uint64_t v57 = v58;
      char v54 = BYTE8(v58);
      uint64_t v19 = v59;
      char v20 = BYTE8(v59);
      uint64_t v21 = v32;
      char v22 = BYTE8(v32);
      uint64_t v23 = *(void *)v61;
      long long v50 = *(_OWORD *)&v61[8];
      uint64_t v24 = *(void *)&v61[24];
      sub_54834((uint64_t)&v58);
LABEL_24:
      uint64_t result = sub_1FC7D0();
      uint64_t v36 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v37 = result & ~v36;
      unint64_t v38 = v37 >> 6;
      if (((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v37) & ~*(void *)(v12 + 8 * (v37 >> 6)))) | v37 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v39 = 0;
        unint64_t v40 = (unint64_t)(63 - v36) >> 6;
        do
        {
          if (++v38 == v40 && (v39 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v41 = v38 == v40;
          if (v38 == v40) {
            unint64_t v38 = 0;
          }
          v39 |= v41;
          uint64_t v42 = *(void *)(v12 + 8 * v38);
        }
        while (v42 == -1);
        unint64_t v13 = __clz(__rbit64(~v42)) + (v38 << 6);
      }
      LOBYTE(v58) = v20;
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v17;
      uint64_t v14 = *(void *)(v7 + 56) + 152 * v13;
      *(void *)uint64_t v14 = v57;
      *(unsigned char *)(v14 + 8) = v54;
      *(void *)(v14 + 16) = v19;
      *(unsigned char *)(v14 + 24) = v20;
      *(void *)(v14 + 32) = v21;
      *(unsigned char *)(v14 + 40) = v22;
      *(void *)(v14 + 48) = v23;
      *(_OWORD *)(v14 + 56) = v50;
      *(void *)(v14 + 72) = v24;
      *(_OWORD *)(v14 + 80) = v51;
      *(_OWORD *)(v14 + 96) = v52;
      *(_OWORD *)(v14 + 112) = v56;
      *(_OWORD *)(v14 + 128) = v55;
      *(unsigned char *)(v14 + 144) = v53;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v48;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_117A88(uint64_t a1, int a2)
{
  return sub_117A9C(a1, a2, &qword_26D938, &qword_270378);
}

uint64_t sub_117A9C(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v47 = sub_12124(a3);
  uint64_t v8 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  int64_t v46 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v4;
  sub_12124(a4);
  int v45 = a2;
  uint64_t v11 = sub_1FC290();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    BOOL v41 = v4;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    uint64_t v43 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v42 = (unint64_t)(v13 + 63) >> 6;
    uint64_t v44 = (void (**)(char *, uint64_t, uint64_t))(v8 + 16);
    uint64_t v17 = (void (**)(char *, uint64_t, uint64_t))(v8 + 32);
    uint64_t v18 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v20 = 0;
    while (1)
    {
      if (v16)
      {
        unint64_t v22 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v23 = v22 | (v20 << 6);
      }
      else
      {
        int64_t v24 = v20 + 1;
        if (__OFADD__(v20, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v24 >= v42) {
          goto LABEL_34;
        }
        unint64_t v25 = v43[v24];
        ++v20;
        if (!v25)
        {
          int64_t v20 = v24 + 1;
          if (v24 + 1 >= v42) {
            goto LABEL_34;
          }
          unint64_t v25 = v43[v20];
          if (!v25)
          {
            int64_t v26 = v24 + 2;
            if (v26 >= v42)
            {
LABEL_34:
              swift_release();
              uint64_t v6 = v41;
              if (v45)
              {
                uint64_t v40 = 1 << *(unsigned char *)(v10 + 32);
                if (v40 >= 64) {
                  bzero(v43, ((unint64_t)(v40 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v43 = -1 << v40;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v25 = v43[v26];
            if (!v25)
            {
              while (1)
              {
                int64_t v20 = v26 + 1;
                if (__OFADD__(v26, 1)) {
                  goto LABEL_41;
                }
                if (v20 >= v42) {
                  goto LABEL_34;
                }
                unint64_t v25 = v43[v20];
                ++v26;
                if (v25) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v20 = v26;
          }
        }
LABEL_21:
        unint64_t v16 = (v25 - 1) & v25;
        unint64_t v23 = __clz(__rbit64(v25)) + (v20 << 6);
      }
      uint64_t v27 = *(void *)(v10 + 56);
      uint64_t v28 = v10;
      char v29 = *(unsigned char *)(*(void *)(v10 + 48) + v23);
      uint64_t v30 = v8;
      uint64_t v31 = *(void *)(v8 + 72);
      uint64_t v32 = v27 + v31 * v23;
      if (v45) {
        (*v17)(v46, v32, v47);
      }
      else {
        (*v44)(v46, v32, v47);
      }
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      uint64_t v33 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v34 = result & ~v33;
      unint64_t v35 = v34 >> 6;
      if (((-1 << v34) & ~*(void *)(v18 + 8 * (v34 >> 6))) != 0)
      {
        unint64_t v21 = __clz(__rbit64((-1 << v34) & ~*(void *)(v18 + 8 * (v34 >> 6)))) | v34 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v36 = 0;
        unint64_t v37 = (unint64_t)(63 - v33) >> 6;
        do
        {
          if (++v35 == v37 && (v36 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v38 = v35 == v37;
          if (v35 == v37) {
            unint64_t v35 = 0;
          }
          v36 |= v38;
          uint64_t v39 = *(void *)(v18 + 8 * v35);
        }
        while (v39 == -1);
        unint64_t v21 = __clz(__rbit64(~v39)) + (v35 << 6);
      }
      *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
      *(unsigned char *)(*(void *)(v12 + 48) + v21) = v29;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 56) + v31 * v21, v46, v47);
      ++*(void *)(v12 + 16);
      uint64_t v8 = v30;
      uint64_t v10 = v28;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v6 = v12;
  return result;
}

uint64_t sub_117EA0(uint64_t a1, char a2)
{
  return sub_11E29C(a1, a2, &qword_26D940);
}

uint64_t sub_117EAC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270388);
  char v41 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    unint64_t v37 = v3;
    int64_t v8 = 0;
    uint64_t v39 = (uint64_t *)(v5 + 64);
    uint64_t v40 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = -1 << v9;
    uint64_t v36 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v20 >= v38) {
          goto LABEL_33;
        }
        unint64_t v21 = v39[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v38) {
            goto LABEL_33;
          }
          unint64_t v21 = v39[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v38)
            {
LABEL_33:
              if ((v41 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v37;
                goto LABEL_40;
              }
              if (v36 >= 64) {
                bzero(v39, 8 * v38);
              }
              else {
                *uint64_t v39 = v35;
              }
              uint64_t v3 = v37;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v39[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v38) {
                  goto LABEL_33;
                }
                unint64_t v21 = v39[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 80 * v19;
      uint64_t v29 = *(void *)v28;
      char v45 = *(unsigned char *)(v28 + 8);
      uint64_t v44 = *(void *)(v28 + 16);
      char v43 = *(unsigned char *)(v28 + 24);
      uint64_t v30 = *(void *)(v28 + 32);
      char v31 = *(unsigned char *)(v28 + 40);
      uint64_t v32 = *(void *)(v28 + 48);
      uint64_t v42 = *(void *)(v28 + 56);
      uint64_t v33 = *(void *)(v28 + 64);
      uint64_t v34 = *(void *)(v28 + 72);
      if ((v41 & 1) == 0)
      {
        sub_5480C(v30, v31);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 80 * v16;
      *(void *)uint64_t v17 = v29;
      *(unsigned char *)(v17 + 8) = v45;
      *(void *)(v17 + 16) = v44;
      *(unsigned char *)(v17 + 24) = v43;
      *(void *)(v17 + 32) = v30;
      *(unsigned char *)(v17 + 40) = v31;
      *(void *)(v17 + 48) = v32;
      *(void *)(v17 + 56) = v42;
      *(void *)(v17 + 64) = v33;
      *(void *)(v17 + 72) = v34;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v40;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1181FC(uint64_t a1, int a2)
{
  uint64_t v4 = sub_12124(&qword_26D980);
  uint64_t v77 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v92 = (uint64_t)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v65 = v2;
  uint64_t v6 = *v2;
  sub_12124(&qword_26D988);
  int v79 = a2;
  uint64_t v80 = sub_1FC290();
  if (*(void *)(v6 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v8 = *(void *)(v6 + 64);
    char v66 = (void *)(v6 + 64);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v67 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v75 = &v95[10];
    uint64_t v76 = v80 + 64;
    uint64_t v78 = (void *)v6;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    uint64_t v13 = &qword_26C518;
    while (1)
    {
      if (v10)
      {
        uint64_t v90 = (v10 - 1) & v10;
        unint64_t v48 = __clz(__rbit64(v10)) | (v12 << 6);
      }
      else
      {
        int64_t v49 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
          __break(1u);
LABEL_33:
          __break(1u);
          return result;
        }
        if (v49 >= v67) {
          goto LABEL_24;
        }
        unint64_t v50 = v66[v49];
        ++v12;
        if (!v50)
        {
          int64_t v12 = v49 + 1;
          if (v49 + 1 >= v67) {
            goto LABEL_24;
          }
          unint64_t v50 = v66[v12];
          if (!v50)
          {
            int64_t v51 = v49 + 2;
            if (v51 >= v67)
            {
LABEL_24:
              long long v62 = v78;
              swift_release();
              if (v79)
              {
                uint64_t v63 = 1 << *((unsigned char *)v62 + 32);
                if (v63 >= 64) {
                  bzero(v66, ((unint64_t)(v63 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *char v66 = -1 << v63;
                }
                v78[2] = 0;
              }
              break;
            }
            unint64_t v50 = v66[v51];
            if (!v50)
            {
              while (1)
              {
                int64_t v12 = v51 + 1;
                if (__OFADD__(v51, 1)) {
                  goto LABEL_33;
                }
                if (v12 >= v67) {
                  goto LABEL_24;
                }
                unint64_t v50 = v66[v12];
                ++v51;
                if (v50) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v12 = v51;
          }
        }
LABEL_21:
        uint64_t v90 = (v50 - 1) & v50;
        unint64_t v48 = __clz(__rbit64(v50)) + (v12 << 6);
      }
      uint64_t v52 = 560 * v48;
      int64_t v91 = v12;
      if (v79)
      {
        char v53 = v78;
        uint64_t v54 = v78[6] + v52;
        uint64_t v74 = *(void *)v54;
        int v89 = *(unsigned __int8 *)(v54 + 8);
        long long v88 = *(_OWORD *)(v54 + 16);
        uint64_t v55 = *(void *)(v54 + 32);
        int v73 = *(unsigned __int8 *)(v54 + 40);
        uint64_t v56 = *(void *)(v54 + 48);
        uint64_t v71 = *(void *)(v54 + 56);
        uint64_t v72 = v56;
        uint64_t v57 = *(void *)(v54 + 64);
        uint64_t v69 = *(void *)(v54 + 72);
        uint64_t v70 = v57;
        int v68 = *(unsigned __int8 *)(v54 + 80);
        uint64_t v86 = *(void *)(v54 + 88);
        uint64_t v87 = v55;
        uint64_t v58 = *(void *)(v54 + 96);
        uint64_t v84 = *(void *)(v54 + 104);
        uint64_t v85 = v58;
        uint64_t v59 = *(void *)(v54 + 112);
        uint64_t v82 = *(void *)(v54 + 120);
        uint64_t v83 = v59;
        uint64_t v60 = *(void *)(v54 + 136);
        uint64_t v81 = *(void *)(v54 + 128);
        uint64_t v30 = *(void *)(v54 + 144);
        uint64_t v61 = *(void *)(v54 + 152);
        sub_55844(v54 + 160, (uint64_t)v95, v13);
        uint64_t v33 = *(void *)(v54 + 544);
        char v44 = *(unsigned char *)(v54 + 552);
        uint64_t v42 = *(void *)(v77 + 72);
        sub_55844(v53[7] + v42 * v48, v92, &qword_26D980);
        sub_55844((uint64_t)v95, (uint64_t)v96, v13);
        char v24 = v68;
        uint64_t v25 = v69;
        uint64_t v26 = v70;
        uint64_t v29 = v61;
        uint64_t v27 = v74;
        char v23 = v75;
        uint64_t v28 = v71;
        uint64_t v31 = v72;
        uint64_t v32 = v60;
        char v15 = v73;
        uint64_t v35 = v81;
        uint64_t v34 = v82;
        uint64_t v36 = v86;
        uint64_t v37 = v87;
        long long v38 = v88;
        char v39 = v89;
        uint64_t v41 = v83;
        uint64_t v40 = v84;
        uint64_t v43 = v85;
      }
      else
      {
        memcpy(v95, (const void *)(v78[6] + v52), 0x229uLL);
        uint64_t v14 = v78[7];
        uint64_t v74 = *(void *)(v77 + 72);
        sub_5606C(v14 + v74 * v48, v92, &qword_26D980);
        int v73 = BYTE8(v95[34]);
        uint64_t v85 = *(void *)&v95[6];
        uint64_t v86 = *((void *)&v95[5] + 1);
        uint64_t v83 = *(void *)&v95[7];
        uint64_t v84 = *((void *)&v95[6] + 1);
        uint64_t v81 = *(void *)&v95[8];
        uint64_t v82 = *((void *)&v95[7] + 1);
        uint64_t v71 = *(void *)&v95[34];
        uint64_t v72 = *((void *)&v95[8] + 1);
        uint64_t v69 = *((void *)&v95[9] + 1);
        uint64_t v70 = *(void *)&v95[9];
        int v89 = BYTE8(v95[0]);
        long long v88 = v95[1];
        uint64_t v87 = *(void *)&v95[2];
        char v15 = BYTE8(v95[2]);
        uint64_t v17 = *((void *)&v95[3] + 1);
        uint64_t v16 = *(void *)&v95[3];
        uint64_t v19 = *((void *)&v95[4] + 1);
        uint64_t v18 = *(void *)&v95[4];
        int64_t v20 = v13;
        char v21 = v95[5];
        uint64_t v22 = *(void *)&v95[0];
        sub_12384(v95);
        char v23 = v75;
        sub_55844((uint64_t)v75, (uint64_t)v96, v20);
        char v24 = v21;
        uint64_t v25 = v19;
        uint64_t v26 = v18;
        uint64_t v27 = v22;
        uint64_t v28 = v17;
        uint64_t v29 = v69;
        uint64_t v30 = v70;
        uint64_t v31 = v16;
        uint64_t v33 = v71;
        uint64_t v32 = v72;
        uint64_t v35 = v81;
        uint64_t v34 = v82;
        uint64_t v36 = v86;
        uint64_t v37 = v87;
        long long v38 = v88;
        char v39 = v89;
        uint64_t v13 = v20;
        uint64_t v41 = v83;
        uint64_t v40 = v84;
        uint64_t v42 = v74;
        uint64_t v43 = v85;
        char v44 = v73;
      }
      *(void *)&v95[0] = v27;
      BYTE8(v95[0]) = v39;
      v95[1] = v38;
      *(void *)&v95[2] = v37;
      BYTE8(v95[2]) = v15;
      *(void *)&v95[3] = v31;
      *((void *)&v95[3] + 1) = v28;
      *(void *)&v95[4] = v26;
      *((void *)&v95[4] + 1) = v25;
      LOBYTE(v95[5]) = v24;
      *((void *)&v95[5] + 1) = v36;
      *(void *)&v95[6] = v43;
      *((void *)&v95[6] + 1) = v40;
      *(void *)&v95[7] = v41;
      *((void *)&v95[7] + 1) = v34;
      *(void *)&v95[8] = v35;
      *((void *)&v95[8] + 1) = v32;
      *(void *)&v95[9] = v30;
      *((void *)&v95[9] + 1) = v29;
      sub_55844((uint64_t)v96, (uint64_t)v23, v13);
      *(void *)&v95[34] = v33;
      BYTE8(v95[34]) = v44;
      char v45 = (void *)v80;
      memcpy(v94, v95, sizeof(v94));
      sub_1FC7E0();
      SeedBook.hash(into:)((uint64_t)&v93);
      sub_1FC830();
      uint64_t v46 = v76;
      unint64_t v47 = sub_1FBF80();
      *(void *)(v46 + ((v47 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v47;
      memcpy((void *)(v45[6] + 560 * v47), v95, 0x229uLL);
      uint64_t result = sub_55844(v92, v45[7] + v42 * v47, &qword_26D980);
      ++v45[2];
      unint64_t v10 = v90;
      int64_t v12 = v91;
    }
  }
  uint64_t result = swift_release();
  *long long v65 = v80;
  return result;
}

uint64_t sub_1187F8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270360);
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v14 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v15 = v14 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v16 >= v33)
  {
    swift_release();
    uint64_t v3 = v32;
    uint64_t v17 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_37:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v17 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v17 = (void *)(v5 + 64);
    unint64_t v18 = *(void *)(v34 + 8 * v16);
    ++v12;
    if (v18) {
      goto LABEL_21;
    }
    int64_t v12 = v16 + 1;
    if (v16 + 1 >= v33) {
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v34 + 8 * v12);
    if (v18)
    {
LABEL_21:
      unint64_t v10 = (v18 - 1) & v18;
      unint64_t v15 = __clz(__rbit64(v18)) + (v12 << 6);
LABEL_22:
      char v20 = *(unsigned char *)(*(void *)(v5 + 48) + v15);
      char v21 = (long long *)(*(void *)(v5 + 56) + 40 * v15);
      if (a2) {
        sub_37C30(v21, (uint64_t)v35);
      }
      else {
        sub_51B70((uint64_t)v21, (uint64_t)v35);
      }
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int v22 = sub_1FC830();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = v22 & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      while (++v25 != v27 || (v26 & 1) == 0)
      {
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
        if (v29 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v29)) + (v25 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v20;
          sub_37C30(v35, *(void *)(v7 + 56) + 40 * v13);
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x118B8CLL);
    }
    int64_t v19 = v16 + 2;
    if (v19 < v33)
    {
      unint64_t v18 = *(void *)(v34 + 8 * v19);
      if (!v18)
      {
        while (1)
        {
          int64_t v12 = v19 + 1;
          if (__OFADD__(v19, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v33) {
            goto LABEL_34;
          }
          unint64_t v18 = *(void *)(v34 + 8 * v12);
          ++v19;
          if (v18) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v19;
      goto LABEL_21;
    }
LABEL_34:
    swift_release();
    uint64_t v3 = v32;
    if (a2) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_118B9C(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = sub_1FB110();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v2;
  sub_12124(&qword_2703F0);
  int v46 = a2;
  uint64_t v10 = sub_1FC290();
  uint64_t v11 = v9;
  uint64_t v12 = v10;
  if (!*(void *)(v11 + 16)) {
    goto LABEL_41;
  }
  uint64_t v13 = 1 << *(unsigned char *)(v11 + 32);
  uint64_t v14 = *(void *)(v11 + 64);
  uint64_t v42 = (void *)(v11 + 64);
  if (v13 < 64) {
    uint64_t v15 = ~(-1 << v13);
  }
  else {
    uint64_t v15 = -1;
  }
  unint64_t v16 = v15 & v14;
  uint64_t v40 = v3;
  int64_t v41 = (unint64_t)(v13 + 63) >> 6;
  uint64_t v43 = (void (**)(char *, unint64_t, uint64_t))(v6 + 16);
  uint64_t v45 = v6;
  uint64_t v17 = (void (**)(char *, unint64_t, uint64_t))(v6 + 32);
  uint64_t v18 = v10 + 64;
  uint64_t result = swift_retain();
  int64_t v20 = 0;
  for (i = v11; ; uint64_t v11 = i)
  {
    if (v16)
    {
      unint64_t v22 = __clz(__rbit64(v16));
      v16 &= v16 - 1;
      unint64_t v23 = v22 | (v20 << 6);
      goto LABEL_22;
    }
    int64_t v24 = v20 + 1;
    if (__OFADD__(v20, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v24 >= v41) {
      break;
    }
    unint64_t v25 = v42;
    unint64_t v26 = v42[v24];
    ++v20;
    if (!v26)
    {
      int64_t v20 = v24 + 1;
      if (v24 + 1 >= v41) {
        goto LABEL_34;
      }
      unint64_t v26 = v42[v20];
      if (!v26)
      {
        int64_t v27 = v24 + 2;
        if (v27 >= v41)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v40;
          if ((v46 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v26 = v42[v27];
        if (!v26)
        {
          while (1)
          {
            int64_t v20 = v27 + 1;
            if (__OFADD__(v27, 1)) {
              goto LABEL_43;
            }
            if (v20 >= v41) {
              goto LABEL_34;
            }
            unint64_t v26 = v42[v20];
            ++v27;
            if (v26) {
              goto LABEL_21;
            }
          }
        }
        int64_t v20 = v27;
      }
    }
LABEL_21:
    unint64_t v16 = (v26 - 1) & v26;
    unint64_t v23 = __clz(__rbit64(v26)) + (v20 << 6);
LABEL_22:
    uint64_t v28 = *(void *)(v45 + 72);
    unint64_t v29 = *(void *)(v11 + 48) + v28 * v23;
    if (v46)
    {
      (*v17)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
    }
    else
    {
      (*v43)(v8, v29, v5);
      uint64_t v30 = *(void *)(*(void *)(v11 + 56) + 8 * v23);
      swift_bridgeObjectRetain();
    }
    sub_124B58(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1FB790();
    uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v21 = __clz(__rbit64((-1 << v32) & ~*(void *)(v18 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v18 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v21 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v18 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v17)(*(void *)(v12 + 48) + v28 * v21, v8, v5);
    *(void *)(*(void *)(v12 + 56) + 8 * v21) = v30;
    ++*(void *)(v12 + 16);
  }
  swift_release();
  uint64_t v3 = v40;
  unint64_t v25 = v42;
  if ((v46 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v11 + 32);
  if (v38 >= 64) {
    bzero(v25, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v25 = -1 << v38;
  }
  *(void *)(v11 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v12;
  return result;
}

uint64_t sub_118FC0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703D0);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    unint64_t v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_1FC7D0();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_119260(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_270440);
}

uint64_t sub_11926C(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_270438);
}

uint64_t sub_119278(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270168);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v35 = a2;
    char v34 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v32 = -1 << v10;
    uint64_t v33 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v17 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v18 = v17 | (v8 << 6);
      }
      else
      {
        int64_t v19 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v19 >= v13) {
          goto LABEL_31;
        }
        unint64_t v20 = v9[v19];
        ++v8;
        if (!v20)
        {
          int64_t v8 = v19 + 1;
          if (v19 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v20 = v9[v8];
          if (!v20)
          {
            int64_t v21 = v19 + 2;
            if (v21 >= v13)
            {
LABEL_31:
              if ((v35 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v34;
                goto LABEL_38;
              }
              if (v33 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v32;
              }
              uint64_t v3 = v34;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v20 = v9[v21];
            if (!v20)
            {
              while (1)
              {
                int64_t v8 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v20 = v9[v8];
                ++v21;
                if (v20) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v21;
          }
        }
LABEL_21:
        unint64_t v12 = (v20 - 1) & v20;
        unint64_t v18 = __clz(__rbit64(v20)) + (v8 << 6);
      }
      uint64_t v22 = 8 * v18;
      uint64_t v23 = *(void *)(*(void *)(v5 + 48) + v22);
      uint64_t v24 = *(void *)(*(void *)(v5 + 56) + v22);
      uint64_t result = sub_1FC7D0();
      uint64_t v25 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v26) & ~*(void *)(v14 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v14 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v15 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      uint64_t v16 = 8 * v15;
      *(void *)(*(void *)(v7 + 48) + v16) = v23;
      *(void *)(*(void *)(v7 + 56) + v16) = v24;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_119524(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270428);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *char v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      char v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      unint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_1197DC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703E8);
  char v38 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v37 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v33 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    char v35 = v3;
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = v37[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v21 = v37[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_33:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64) {
                bzero(v37, 8 * v36);
              }
              else {
                *uint64_t v37 = v33;
              }
              uint64_t v3 = v35;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v21 = v37[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 48 * v19;
      long long v39 = *(_OWORD *)v28;
      char v29 = *(unsigned char *)(v28 + 16);
      uint64_t v31 = *(void *)(v28 + 24);
      uint64_t v30 = *(void *)(v28 + 32);
      uint64_t v32 = *(void *)(v28 + 40);
      if ((v38 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 48 * v16;
      *(_OWORD *)uint64_t v17 = v39;
      *(unsigned char *)(v17 + 16) = v29;
      *(void *)(v17 + 24) = v31;
      *(void *)(v17 + 32) = v30;
      *(void *)(v17 + 40) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_119AD4(uint64_t a1, int a2)
{
  return sub_119AE8(a1, a2, &qword_2703F8, &qword_270400);
}

uint64_t sub_119AE8(uint64_t a1, int a2, uint64_t *a3, uint64_t *a4)
{
  uint64_t v6 = v4;
  uint64_t v8 = sub_12124(a3);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *v4;
  sub_12124(a4);
  int v44 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v14 = result;
  if (*(void *)(v12 + 16))
  {
    long long v39 = v6;
    int64_t v15 = 0;
    uint64_t v16 = *(void *)(v12 + 64);
    int64_t v41 = (void *)(v12 + 64);
    uint64_t v17 = 1 << *(unsigned char *)(v12 + 32);
    if (v17 < 64) {
      uint64_t v18 = ~(-1 << v17);
    }
    else {
      uint64_t v18 = -1;
    }
    unint64_t v19 = v18 & v16;
    int64_t v40 = (unint64_t)(v17 + 63) >> 6;
    uint64_t v42 = (void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v43 = v9;
    int64_t v20 = (void (**)(char *, unint64_t, uint64_t))(v9 + 32);
    uint64_t v21 = result + 64;
    while (1)
    {
      if (v19)
      {
        unint64_t v23 = __clz(__rbit64(v19));
        v19 &= v19 - 1;
        unint64_t v24 = v23 | (v15 << 6);
      }
      else
      {
        int64_t v25 = v15 + 1;
        if (__OFADD__(v15, 1))
        {
LABEL_42:
          __break(1u);
LABEL_43:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v41;
        if (v25 >= v40) {
          goto LABEL_34;
        }
        unint64_t v26 = v41[v25];
        ++v15;
        if (!v26)
        {
          int64_t v15 = v25 + 1;
          if (v25 + 1 >= v40) {
            goto LABEL_34;
          }
          unint64_t v26 = v41[v15];
          if (!v26)
          {
            int64_t v27 = v25 + 2;
            if (v27 >= v40)
            {
LABEL_34:
              if ((v44 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v6 = v39;
                goto LABEL_41;
              }
              uint64_t v38 = 1 << *(unsigned char *)(v12 + 32);
              if (v38 >= 64) {
                bzero(v41, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
              }
              else {
                void *v41 = -1 << v38;
              }
              uint64_t v6 = v39;
              *(void *)(v12 + 16) = 0;
              break;
            }
            unint64_t v26 = v41[v27];
            if (!v26)
            {
              while (1)
              {
                int64_t v15 = v27 + 1;
                if (__OFADD__(v27, 1)) {
                  goto LABEL_43;
                }
                if (v15 >= v40) {
                  goto LABEL_34;
                }
                unint64_t v26 = v41[v15];
                ++v27;
                if (v26) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v15 = v27;
          }
        }
LABEL_21:
        unint64_t v19 = (v26 - 1) & v26;
        unint64_t v24 = __clz(__rbit64(v26)) + (v15 << 6);
      }
      uint64_t v28 = *(void *)(*(void *)(v12 + 48) + 8 * v24);
      uint64_t v29 = *(void *)(v43 + 72);
      unint64_t v30 = *(void *)(v12 + 56) + v29 * v24;
      if (v44) {
        (*v20)(v11, v30, v8);
      }
      else {
        (*v42)(v11, v30, v8);
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v31 = -1 << *(unsigned char *)(v14 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v22 = __clz(__rbit64((-1 << v32) & ~*(void *)(v21 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_42;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v21 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v22 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v21 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
      *(void *)(*(void *)(v14 + 48) + 8 * v22) = v28;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v20)(*(void *)(v14 + 56) + v29 * v22, v11, v8);
      ++*(void *)(v14 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_41:
  uint64_t *v6 = v14;
  return result;
}

uint64_t sub_119E8C(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_270408);
}

uint64_t sub_119E98(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270368);
  char v33 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v31) {
      break;
    }
    uint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v32 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v32 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v31)
        {
LABEL_34:
          swift_release();
          if ((v33 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v32 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v31) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v32 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    unint64_t v22 = (long long *)(*(void *)(v5 + 56) + 40 * v16);
    if (v33) {
      sub_37C30(v22, (uint64_t)v34);
    }
    else {
      sub_51B70((uint64_t)v22, (uint64_t)v34);
    }
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
    uint64_t result = sub_37C30(v34, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v18 = (void *)(v5 + 64);
  if ((v33 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11A204(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270490);
  char v40 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    BOOL v36 = v3;
    int64_t v8 = 0;
    uint64_t v38 = (uint64_t *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = -1 << v9;
    uint64_t v35 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_40;
              }
              if (v35 >= 64) {
                bzero(v38, 8 * v37);
              }
              else {
                *uint64_t v38 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v21 = v38[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 72 * v19;
      uint64_t v29 = *(void *)v28;
      char v44 = *(unsigned char *)(v28 + 8);
      uint64_t v43 = *(void *)(v28 + 16);
      char v42 = *(unsigned char *)(v28 + 24);
      uint64_t v30 = *(void *)(v28 + 32);
      char v31 = *(unsigned char *)(v28 + 40);
      uint64_t v32 = *(void *)(v28 + 48);
      uint64_t v41 = *(void *)(v28 + 56);
      uint64_t v33 = *(void *)(v28 + 64);
      if ((v40 & 1) == 0)
      {
        sub_5480C(v30, v31);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 72 * v16;
      *(void *)uint64_t v17 = v29;
      *(unsigned char *)(v17 + 8) = v44;
      *(void *)(v17 + 16) = v43;
      *(unsigned char *)(v17 + 24) = v42;
      *(void *)(v17 + 32) = v30;
      *(unsigned char *)(v17 + 40) = v31;
      *(void *)(v17 + 48) = v32;
      *(void *)(v17 + 56) = v41;
      *(void *)(v17 + 64) = v33;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11A544(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_270498);
}

uint64_t sub_11A550(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_26DA18);
  char v40 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v38 = (uint64_t *)(v5 + 64);
    uint64_t v39 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    BOOL v36 = v3;
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v38;
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v37)
            {
LABEL_33:
              if ((v40 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_40;
              }
              if (v35 >= 64) {
                bzero(v38, 8 * v37);
              }
              else {
                *uint64_t v38 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v21 = v38[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 80 * v19;
      char v29 = *(unsigned char *)v28;
      uint64_t v30 = *(void *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      uint64_t v32 = *(void *)(v28 + 24);
      char v33 = *(unsigned char *)(v28 + 32);
      long long v42 = *(_OWORD *)(v28 + 56);
      long long v43 = *(_OWORD *)(v28 + 40);
      char v41 = *(unsigned char *)(v28 + 72);
      if ((v40 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 80 * v16;
      *(unsigned char *)uint64_t v17 = v29;
      *(void *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      *(void *)(v17 + 24) = v32;
      *(unsigned char *)(v17 + 32) = v33;
      *(_OWORD *)(v17 + 40) = v43;
      *(_OWORD *)(v17 + 56) = v42;
      *(unsigned char *)(v17 + 72) = v41;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v39;
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11A870(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_26DA10);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    uint64_t v34 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v31 = -1 << v9;
    uint64_t v32 = v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    int64_t v33 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v33) {
          goto LABEL_33;
        }
        unint64_t v21 = v34[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v33) {
            goto LABEL_33;
          }
          unint64_t v21 = v34[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v33)
            {
LABEL_33:
              if (a2)
              {
                if (v32 >= 64) {
                  bzero(v34, 8 * v33);
                }
                else {
                  *uint64_t v34 = v31;
                }
                *(void *)(v5 + 16) = 0;
              }
              break;
            }
            unint64_t v21 = v34[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v8 >= v33) {
                  goto LABEL_33;
                }
                unint64_t v21 = v34[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = (uint64_t *)(*(void *)(v5 + 56) + 16 * v19);
      uint64_t v29 = *v28;
      uint64_t v30 = v28[1];
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = (void *)(*(void *)(v7 + 56) + 16 * v16);
      void *v17 = v29;
      v17[1] = v30;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11AB28(uint64_t a1, int a2)
{
  return sub_11AB40(a1, a2, &qword_2704C0);
}

uint64_t sub_11AB34(uint64_t a1, int a2)
{
  return sub_11AB40(a1, a2, &qword_2704A8);
}

uint64_t sub_11AB40(uint64_t a1, int a2, uint64_t *a3)
{
  uint64_t v5 = v3;
  uint64_t v46 = sub_1FB110();
  uint64_t v7 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  uint64_t v9 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v3;
  sub_12124(a3);
  int v47 = a2;
  uint64_t v11 = sub_1FC290();
  uint64_t v12 = v11;
  if (*(void *)(v10 + 16))
  {
    char v40 = v3;
    uint64_t v13 = 1 << *(unsigned char *)(v10 + 32);
    uint64_t v14 = *(void *)(v10 + 64);
    long long v42 = (void *)(v10 + 64);
    if (v13 < 64) {
      uint64_t v15 = ~(-1 << v13);
    }
    else {
      uint64_t v15 = -1;
    }
    unint64_t v16 = v15 & v14;
    int64_t v41 = (unint64_t)(v13 + 63) >> 6;
    long long v43 = (void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    unint64_t v48 = (void (**)(char *, unint64_t, uint64_t))(v7 + 32);
    uint64_t v17 = v11 + 64;
    uint64_t result = swift_retain();
    int64_t v19 = 0;
    uint64_t v44 = v10;
    uint64_t v45 = v9;
    while (1)
    {
      if (v16)
      {
        unint64_t v21 = __clz(__rbit64(v16));
        v16 &= v16 - 1;
        unint64_t v22 = v21 | (v19 << 6);
      }
      else
      {
        int64_t v23 = v19 + 1;
        if (__OFADD__(v19, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v23 >= v41) {
          goto LABEL_34;
        }
        unint64_t v24 = v42[v23];
        ++v19;
        if (!v24)
        {
          int64_t v19 = v23 + 1;
          if (v23 + 1 >= v41) {
            goto LABEL_34;
          }
          unint64_t v24 = v42[v19];
          if (!v24)
          {
            int64_t v25 = v23 + 2;
            if (v25 >= v41)
            {
LABEL_34:
              swift_release();
              uint64_t v5 = v40;
              if (v47)
              {
                uint64_t v38 = 1 << *(unsigned char *)(v10 + 32);
                if (v38 >= 64) {
                  bzero(v42, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *long long v42 = -1 << v38;
                }
                *(void *)(v10 + 16) = 0;
              }
              break;
            }
            unint64_t v24 = v42[v25];
            if (!v24)
            {
              while (1)
              {
                int64_t v19 = v25 + 1;
                if (__OFADD__(v25, 1)) {
                  goto LABEL_41;
                }
                if (v19 >= v41) {
                  goto LABEL_34;
                }
                unint64_t v24 = v42[v19];
                ++v25;
                if (v24) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v19 = v25;
          }
        }
LABEL_21:
        unint64_t v16 = (v24 - 1) & v24;
        unint64_t v22 = __clz(__rbit64(v24)) + (v19 << 6);
      }
      uint64_t v26 = v7;
      uint64_t v27 = *(void *)(v7 + 72);
      unint64_t v28 = *(void *)(v10 + 48) + v27 * v22;
      uint64_t v29 = v45;
      uint64_t v30 = v46;
      if (v47)
      {
        (*v48)(v45, v28, v46);
        long long v49 = *(_OWORD *)(*(void *)(v10 + 56) + 16 * v22);
      }
      else
      {
        (*v43)(v45, v28, v46);
        long long v49 = *(_OWORD *)(*(void *)(v10 + 56) + 16 * v22);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      sub_124B58(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_1FB790();
      uint64_t v31 = -1 << *(unsigned char *)(v12 + 32);
      unint64_t v32 = result & ~v31;
      unint64_t v33 = v32 >> 6;
      if (((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6))) != 0)
      {
        unint64_t v20 = __clz(__rbit64((-1 << v32) & ~*(void *)(v17 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v31) >> 6;
        do
        {
          if (++v33 == v35 && (v34 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v36 = v33 == v35;
          if (v33 == v35) {
            unint64_t v33 = 0;
          }
          v34 |= v36;
          uint64_t v37 = *(void *)(v17 + 8 * v33);
        }
        while (v37 == -1);
        unint64_t v20 = __clz(__rbit64(~v37)) + (v33 << 6);
      }
      *(void *)(v17 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))*v48)(*(void *)(v12 + 48) + v27 * v20, v29, v30);
      *(_OWORD *)(*(void *)(v12 + 56) + 16 * v20) = v49;
      ++*(void *)(v12 + 16);
      uint64_t v7 = v26;
      uint64_t v10 = v44;
    }
  }
  uint64_t result = swift_release();
  *uint64_t v5 = v12;
  return result;
}

uint64_t sub_11AF78(uint64_t a1, char a2)
{
  return sub_11AF90(a1, a2, &qword_2704B0);
}

uint64_t sub_11AF84(uint64_t a1, char a2)
{
  return sub_11AF90(a1, a2, &qword_2704B8);
}

uint64_t sub_11AF90(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_12124(a3);
  uint64_t result = sub_1FC290();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v33 = -1 << v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    uint64_t v34 = 1 << *(unsigned char *)(v6 + 32);
    unint64_t v35 = v4;
    int64_t v36 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v22 >= v36) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v36)
            {
LABEL_33:
              if ((a2 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), 8 * v36);
              }
              else {
                uint64_t *v10 = v33;
              }
              uint64_t v4 = v35;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_42;
                }
                if (v9 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void **)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        id v32 = v31;
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_11B240(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270450);
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_38;
  }
  char v32 = a2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v2;
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v12 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v14 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v16 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v17 = v16 | (v14 << 6);
      goto LABEL_22;
    }
    int64_t v18 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
LABEL_39:
      __break(1u);
LABEL_40:
      __break(1u);
      return result;
    }
    if (v18 >= v11) {
      break;
    }
    uint64_t v19 = (void *)(v5 + 64);
    unint64_t v20 = *(void *)(v34 + 8 * v18);
    ++v14;
    if (!v20)
    {
      int64_t v14 = v18 + 1;
      if (v18 + 1 >= v11) {
        goto LABEL_31;
      }
      unint64_t v20 = *(void *)(v34 + 8 * v14);
      if (!v20)
      {
        int64_t v21 = v18 + 2;
        if (v21 >= v11)
        {
LABEL_31:
          swift_release();
          uint64_t v3 = v33;
          if ((v32 & 1) == 0) {
            goto LABEL_38;
          }
          goto LABEL_34;
        }
        unint64_t v20 = *(void *)(v34 + 8 * v21);
        if (!v20)
        {
          while (1)
          {
            int64_t v14 = v21 + 1;
            if (__OFADD__(v21, 1)) {
              goto LABEL_40;
            }
            if (v14 >= v11) {
              goto LABEL_31;
            }
            unint64_t v20 = *(void *)(v34 + 8 * v14);
            ++v21;
            if (v20) {
              goto LABEL_21;
            }
          }
        }
        int64_t v14 = v21;
      }
    }
LABEL_21:
    unint64_t v10 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v14 << 6);
LABEL_22:
    char v22 = *(unsigned char *)(*(void *)(v5 + 48) + v17);
    uint64_t v23 = *(void *)(*(void *)(v5 + 56) + 8 * v17);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v24 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v25 = result & ~v24;
    unint64_t v26 = v25 >> 6;
    if (((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6))) != 0)
    {
      unint64_t v15 = __clz(__rbit64((-1 << v25) & ~*(void *)(v12 + 8 * (v25 >> 6)))) | v25 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v24) >> 6;
      do
      {
        if (++v26 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v29 = v26 == v28;
        if (v26 == v28) {
          unint64_t v26 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v12 + 8 * v26);
      }
      while (v30 == -1);
      unint64_t v15 = __clz(__rbit64(~v30)) + (v26 << 6);
    }
    *(void *)(v12 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
    *(unsigned char *)(*(void *)(v7 + 48) + v15) = v22;
    *(void *)(*(void *)(v7 + 56) + 8 * v15) = v23;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v33;
  uint64_t v19 = (void *)(v5 + 64);
  if ((v32 & 1) == 0) {
    goto LABEL_38;
  }
LABEL_34:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v19, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v19 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11B574(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270458);
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v18 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v19 = v18 | (v12 << 6);
    goto LABEL_31;
  }
  int64_t v20 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_42;
  }
  if (v20 >= v32)
  {
    swift_release();
    int64_t v21 = (void *)(v5 + 64);
    if (a2)
    {
LABEL_37:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v21 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    int64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v33 + 8 * v20);
    ++v12;
    if (v22) {
      goto LABEL_30;
    }
    int64_t v12 = v20 + 1;
    if (v20 + 1 >= v32) {
      goto LABEL_34;
    }
    unint64_t v22 = *(void *)(v33 + 8 * v12);
    if (v22)
    {
LABEL_30:
      unint64_t v10 = (v22 - 1) & v22;
      unint64_t v19 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_31:
      char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int v13 = sub_1FC830();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
        if (v27 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
LABEL_8:
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
          *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      JUMPOUT(0x11B9DCLL);
    }
    int64_t v23 = v20 + 2;
    if (v23 < v32)
    {
      unint64_t v22 = *(void *)(v33 + 8 * v23);
      if (!v22)
      {
        while (1)
        {
          int64_t v12 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_43;
          }
          if (v12 >= v32) {
            goto LABEL_34;
          }
          unint64_t v22 = *(void *)(v33 + 8 * v12);
          ++v23;
          if (v22) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v23;
      goto LABEL_30;
    }
LABEL_34:
    swift_release();
    if (a2) {
      goto LABEL_37;
    }
  }
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11BA0C(uint64_t a1, char a2)
{
  return sub_11BA24(a1, a2, &qword_270468);
}

uint64_t sub_11BA18(uint64_t a1, char a2)
{
  return sub_11BA24(a1, a2, &qword_270460);
}

uint64_t sub_11BA24(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v5 = *v3;
  sub_12124(a3);
  char v68 = a2;
  uint64_t v6 = (void *)sub_1FC290();
  uint64_t v69 = v5;
  if (*(void *)(v5 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v5 + 32);
    unint64_t v50 = (void *)(v5 + 64);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v5 + 64);
    int64_t v51 = (unint64_t)(v7 + 63) >> 6;
    int64_t v67 = v6 + 8;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    char v66 = v6;
    while (1)
    {
      if (v9)
      {
        unint64_t v39 = __clz(__rbit64(v9));
        uint64_t v40 = (v9 - 1) & v9;
        unint64_t v41 = v39 | (v11 << 6);
      }
      else
      {
        int64_t v42 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
          __break(1u);
LABEL_32:
          __break(1u);
          return result;
        }
        if (v42 >= v51) {
          goto LABEL_24;
        }
        unint64_t v43 = v50[v42];
        ++v11;
        if (!v43)
        {
          int64_t v11 = v42 + 1;
          if (v42 + 1 >= v51) {
            goto LABEL_24;
          }
          unint64_t v43 = v50[v11];
          if (!v43)
          {
            int64_t v44 = v42 + 2;
            if (v44 >= v51)
            {
LABEL_24:
              swift_release();
              if (v68)
              {
                uint64_t v48 = 1 << *(unsigned char *)(v69 + 32);
                if (v48 >= 64) {
                  bzero(v50, ((unint64_t)(v48 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v50 = -1 << v48;
                }
                *(void *)(v69 + 16) = 0;
              }
              break;
            }
            unint64_t v43 = v50[v44];
            if (!v43)
            {
              while (1)
              {
                int64_t v11 = v44 + 1;
                if (__OFADD__(v44, 1)) {
                  goto LABEL_32;
                }
                if (v11 >= v51) {
                  goto LABEL_24;
                }
                unint64_t v43 = v50[v11];
                ++v44;
                if (v43) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v11 = v44;
          }
        }
LABEL_21:
        uint64_t v40 = (v43 - 1) & v43;
        unint64_t v41 = __clz(__rbit64(v43)) + (v11 << 6);
      }
      uint64_t v45 = 560 * v41;
      unint64_t v83 = v40;
      int64_t v84 = v11;
      if (v68)
      {
        uint64_t v46 = *(void *)(v69 + 48) + v45;
        char v79 = *(unsigned char *)(v46 + 8);
        long long v77 = *(_OWORD *)(v46 + 16);
        uint64_t v63 = *(void *)(v46 + 32);
        uint64_t v65 = *(void *)v46;
        char v61 = *(unsigned char *)(v46 + 40);
        uint64_t v57 = *(void *)(v46 + 56);
        uint64_t v59 = *(void *)(v46 + 48);
        uint64_t v53 = *(void *)(v46 + 72);
        uint64_t v55 = *(void *)(v46 + 64);
        char v52 = *(unsigned char *)(v46 + 80);
        uint64_t v80 = *(void *)(v46 + 96);
        uint64_t v81 = *(void *)(v46 + 88);
        uint64_t v73 = *(void *)(v46 + 112);
        uint64_t v75 = *(void *)(v46 + 104);
        uint64_t v31 = *(void *)(v46 + 128);
        uint64_t v71 = *(void *)(v46 + 120);
        uint64_t v47 = *(void *)(v46 + 136);
        uint64_t v28 = *(void *)(v46 + 144);
        uint64_t v24 = *(void *)(v46 + 152);
        sub_55844(v46 + 160, (uint64_t)__dst, &qword_26C518);
        uint64_t v23 = *(void *)(v46 + 544);
        char v37 = *(unsigned char *)(v46 + 552);
        uint64_t v82 = *(void *)(*(void *)(v69 + 56) + 8 * v41);
        sub_55844((uint64_t)__dst, (uint64_t)v88, &qword_26C518);
        char v21 = v52;
        uint64_t v22 = v53;
        uint64_t v26 = v55;
        uint64_t v13 = v63;
        uint64_t v25 = v65;
        uint64_t v16 = v57;
        uint64_t v29 = v59;
        uint64_t v27 = v47;
        char v30 = v61;
        long long v32 = v77;
        uint64_t v34 = v71;
        uint64_t v33 = v73;
        char v35 = v79;
        uint64_t v6 = v66;
        uint64_t v36 = v75;
      }
      else
      {
        memcpy(__dst, (const void *)(*(void *)(v69 + 48) + v45), 0x229uLL);
        uint64_t v12 = *(void *)(*(void *)(v69 + 56) + 8 * v41);
        char v64 = BYTE8(__dst[34]);
        uint64_t v80 = *(void *)&__dst[6];
        uint64_t v81 = *((void *)&__dst[5] + 1);
        uint64_t v72 = *(void *)&__dst[7];
        uint64_t v74 = *((void *)&__dst[6] + 1);
        uint64_t v70 = *((void *)&__dst[7] + 1);
        uint64_t v60 = *((void *)&__dst[8] + 1);
        uint64_t v62 = *(void *)&__dst[8];
        uint64_t v56 = *(void *)&__dst[34];
        uint64_t v54 = *((void *)&__dst[9] + 1);
        uint64_t v58 = *(void *)&__dst[9];
        char v78 = BYTE8(__dst[0]);
        long long v76 = __dst[1];
        uint64_t v13 = *(void *)&__dst[2];
        char v14 = BYTE8(__dst[2]);
        uint64_t v16 = *((void *)&__dst[3] + 1);
        uint64_t v15 = *(void *)&__dst[3];
        uint64_t v17 = *((void *)&__dst[4] + 1);
        uint64_t v18 = *(void *)&__dst[4];
        char v19 = __dst[5];
        uint64_t v20 = *(void *)&__dst[0];
        sub_12384(__dst);
        uint64_t v82 = v12;
        swift_bridgeObjectRetain();
        sub_55844((uint64_t)&__dst[10], (uint64_t)v88, &qword_26C518);
        char v21 = v19;
        uint64_t v22 = v17;
        uint64_t v24 = v54;
        uint64_t v23 = v56;
        uint64_t v25 = v20;
        uint64_t v26 = v18;
        uint64_t v27 = v60;
        uint64_t v28 = v58;
        uint64_t v29 = v15;
        char v30 = v14;
        uint64_t v31 = v62;
        long long v32 = v76;
        uint64_t v34 = v70;
        uint64_t v33 = v72;
        char v35 = v78;
        uint64_t v6 = v66;
        uint64_t v36 = v74;
        char v37 = v64;
      }
      *(void *)&__dst[0] = v25;
      BYTE8(__dst[0]) = v35;
      __dst[1] = v32;
      *(void *)&__dst[2] = v13;
      BYTE8(__dst[2]) = v30;
      *(void *)&__dst[3] = v29;
      *((void *)&__dst[3] + 1) = v16;
      *(void *)&__dst[4] = v26;
      *((void *)&__dst[4] + 1) = v22;
      LOBYTE(__dst[5]) = v21;
      *((void *)&__dst[5] + 1) = v81;
      *(void *)&__dst[6] = v80;
      *((void *)&__dst[6] + 1) = v36;
      *(void *)&__dst[7] = v33;
      *((void *)&__dst[7] + 1) = v34;
      *(void *)&__dst[8] = v31;
      *((void *)&__dst[8] + 1) = v27;
      *(void *)&__dst[9] = v28;
      *((void *)&__dst[9] + 1) = v24;
      sub_55844((uint64_t)v88, (uint64_t)&__dst[10], &qword_26C518);
      *(void *)&__dst[34] = v23;
      BYTE8(__dst[34]) = v37;
      memcpy(v86, __dst, sizeof(v86));
      sub_1FC7E0();
      SeedBook.hash(into:)((uint64_t)v85);
      sub_1FC830();
      unint64_t v38 = sub_1FBF80();
      *(void *)((char *)v67 + ((v38 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v38;
      uint64_t result = (uint64_t)memcpy((void *)(v6[6] + 560 * v38), __dst, 0x229uLL);
      *(void *)(v6[7] + 8 * v38) = v82;
      ++v6[2];
      unint64_t v9 = v83;
      int64_t v11 = v84;
    }
  }
  uint64_t result = swift_release();
  *long long v49 = v6;
  return result;
}

uint64_t sub_11BF38(uint64_t a1, char a2)
{
  return sub_11BF44(a1, a2, &qword_2703A0);
}

uint64_t sub_11BF44(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_12124(a3);
  uint64_t result = sub_1FC290();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    char v36 = a2;
    char v35 = v4;
    int64_t v9 = 0;
    unint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v33 = -1 << v11;
    uint64_t v34 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v14 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v15 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v18 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v19 = v18 | (v9 << 6);
      }
      else
      {
        int64_t v20 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v20 >= v14) {
          goto LABEL_31;
        }
        unint64_t v21 = v10[v20];
        ++v9;
        if (!v21)
        {
          int64_t v9 = v20 + 1;
          if (v20 + 1 >= v14) {
            goto LABEL_31;
          }
          unint64_t v21 = v10[v9];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v14)
            {
LABEL_31:
              if ((v36 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v4 = v35;
                goto LABEL_38;
              }
              if (v34 >= 64) {
                bzero((void *)(v6 + 64), 8 * v14);
              }
              else {
                uint64_t *v10 = v33;
              }
              uint64_t v4 = v35;
              *(void *)(v6 + 16) = 0;
              break;
            }
            unint64_t v21 = v10[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v9 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_40;
                }
                if (v9 >= v14) {
                  goto LABEL_31;
                }
                unint64_t v21 = v10[v9];
                ++v22;
                if (v21) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v9 = v22;
          }
        }
LABEL_21:
        unint64_t v13 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v9 << 6);
      }
      uint64_t v23 = 8 * v19;
      uint64_t v24 = *(void *)(*(void *)(v6 + 48) + v23);
      uint64_t v25 = *(void *)(*(void *)(v6 + 56) + v23);
      uint64_t result = sub_1FC7D0();
      uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v27) & ~*(void *)(v15 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v15 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v16 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v15 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t v17 = 8 * v16;
      *(void *)(*(void *)(v8 + 48) + v17) = v24;
      *(void *)(*(void *)(v8 + 56) + v17) = v25;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_11C1E8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703A8);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v32 = a2;
    BOOL v31 = v3;
    int64_t v8 = 0;
    int64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v29 = -1 << v10;
    uint64_t v30 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v32 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v31;
                goto LABEL_38;
              }
              if (v30 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v29;
              }
              uint64_t v3 = v31;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      long long v33 = *(_OWORD *)(*(void *)(v5 + 56) + 16 * v17);
      uint64_t result = sub_1FC7D0();
      uint64_t v22 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v23) & ~*(void *)(v14 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v15 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(_OWORD *)(*(void *)(v7 + 56) + 16 * v15) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11C48C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270358);
  char v35 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_42;
  }
  char v32 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_9:
  if (v10)
  {
    unint64_t v18 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v19 = v18 | (v12 << 6);
    goto LABEL_31;
  }
  int64_t v20 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_43;
  }
  if (v20 >= v33)
  {
    swift_release();
    uint64_t v3 = v32;
    uint64_t v21 = (void *)(v5 + 64);
    if (v35)
    {
LABEL_38:
      uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
      if (v30 >= 64) {
        bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        void *v21 = -1 << v30;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    uint64_t v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v34 + 8 * v20);
    ++v12;
    if (v22) {
      goto LABEL_30;
    }
    int64_t v12 = v20 + 1;
    if (v20 + 1 >= v33) {
      goto LABEL_35;
    }
    unint64_t v22 = *(void *)(v34 + 8 * v12);
    if (v22)
    {
LABEL_30:
      unint64_t v10 = (v22 - 1) & v22;
      unint64_t v19 = __clz(__rbit64(v22)) + (v12 << 6);
LABEL_31:
      char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
      uint64_t v29 = (long long *)(*(void *)(v5 + 56) + 40 * v19);
      if (v35) {
        sub_37C30(v29, (uint64_t)v36);
      }
      else {
        sub_51B70((uint64_t)v29, (uint64_t)v36);
      }
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int v13 = sub_1FC830();
      uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v15 = v13 & ~v14;
      unint64_t v16 = v15 >> 6;
      if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
      {
        unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_8;
      }
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      while (++v16 != v25 || (v24 & 1) == 0)
      {
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
        if (v27 != -1)
        {
          unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
LABEL_8:
          *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
          *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
          sub_37C30(v36, *(void *)(v7 + 56) + 40 * v17);
          ++*(void *)(v7 + 16);
          goto LABEL_9;
        }
      }
      __break(1u);
LABEL_43:
      __break(1u);
LABEL_44:
      __break(1u);
      JUMPOUT(0x11C860);
    }
    int64_t v23 = v20 + 2;
    if (v23 < v33)
    {
      unint64_t v22 = *(void *)(v34 + 8 * v23);
      if (!v22)
      {
        while (1)
        {
          int64_t v12 = v23 + 1;
          if (__OFADD__(v23, 1)) {
            goto LABEL_44;
          }
          if (v12 >= v33) {
            goto LABEL_35;
          }
          unint64_t v22 = *(void *)(v34 + 8 * v12);
          ++v23;
          if (v22) {
            goto LABEL_30;
          }
        }
      }
      int64_t v12 = v23;
      goto LABEL_30;
    }
LABEL_35:
    swift_release();
    uint64_t v3 = v32;
    if (v35) {
      goto LABEL_38;
    }
  }
LABEL_42:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11C874(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270410);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v37 = a2;
    int64_t v8 = 0;
    unint64_t v39 = (uint64_t *)(v5 + 64);
    uint64_t v40 = v5;
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    char v36 = v3;
    int64_t v38 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v8 << 6);
      }
      else
      {
        int64_t v17 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        uint64_t result = (uint64_t)v39;
        if (v17 >= v38) {
          goto LABEL_31;
        }
        unint64_t v18 = v39[v17];
        ++v8;
        if (!v18)
        {
          int64_t v8 = v17 + 1;
          if (v17 + 1 >= v38) {
            goto LABEL_31;
          }
          unint64_t v18 = v39[v8];
          if (!v18)
          {
            int64_t v19 = v17 + 2;
            if (v19 >= v38)
            {
LABEL_31:
              if ((v37 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_38;
              }
              if (v35 >= 64) {
                bzero(v39, 8 * v38);
              }
              else {
                *unint64_t v39 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v18 = v39[v19];
            if (!v18)
            {
              while (1)
              {
                int64_t v8 = v19 + 1;
                if (__OFADD__(v19, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v38) {
                  goto LABEL_31;
                }
                unint64_t v18 = v39[v8];
                ++v19;
                if (v18) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v19;
          }
        }
LABEL_21:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v8 << 6);
      }
      uint64_t v20 = *(void *)(v5 + 56) + 40 * v16;
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
      char v22 = *(unsigned char *)(v20 + 32);
      uint64_t v23 = *(void *)(v20 + 24);
      char v24 = *(unsigned char *)(v20 + 16);
      uint64_t v26 = *(void *)v20;
      uint64_t v25 = *(void *)(v20 + 8);
      uint64_t result = sub_1FC7D0();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v12 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v12 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(void *)(*(void *)(v7 + 48) + 8 * v13) = v21;
      uint64_t v14 = *(void *)(v7 + 56) + 40 * v13;
      *(void *)uint64_t v14 = v26;
      *(void *)(v14 + 8) = v25;
      *(unsigned char *)(v14 + 16) = v24;
      *(void *)(v14 + 24) = v23;
      *(unsigned char *)(v14 + 32) = v22;
      ++*(void *)(v7 + 16);
      uint64_t v5 = v40;
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11CB4C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270418);
  char v38 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v37 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v33 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v35 = v3;
    int64_t v36 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = v37[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v36) {
            goto LABEL_33;
          }
          unint64_t v21 = v37[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v36)
            {
LABEL_33:
              if ((v38 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v35;
                goto LABEL_40;
              }
              if (v34 >= 64) {
                bzero(v37, 8 * v36);
              }
              else {
                *char v37 = v33;
              }
              uint64_t v3 = v35;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v37[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v36) {
                  goto LABEL_33;
                }
                unint64_t v21 = v37[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 24 * v19;
      uint64_t v29 = *(void *)v28;
      int v30 = *(_DWORD *)(v28 + 8);
      char v31 = *(unsigned char *)(v28 + 12);
      uint64_t v32 = *(void *)(v28 + 16);
      if ((v38 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 24 * v16;
      *(void *)uint64_t v17 = v29;
      *(_DWORD *)(v17 + 8) = v30;
      *(unsigned char *)(v17 + 12) = v31;
      *(void *)(v17 + 16) = v32;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11CE34(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703B0);
  char v39 = a2;
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    int64_t v8 = 0;
    char v38 = (uint64_t *)(v5 + 64);
    uint64_t v9 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v34 = -1 << v9;
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v5 + 64);
    uint64_t v35 = 1 << *(unsigned char *)(v5 + 32);
    int64_t v36 = v3;
    int64_t v37 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v12 = result + 64;
    while (1)
    {
      if (v11)
      {
        unint64_t v18 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v19 = v18 | (v8 << 6);
      }
      else
      {
        int64_t v20 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        uint64_t result = v5 + 64;
        if (v20 >= v37) {
          goto LABEL_33;
        }
        unint64_t v21 = v38[v20];
        ++v8;
        if (!v21)
        {
          int64_t v8 = v20 + 1;
          if (v20 + 1 >= v37) {
            goto LABEL_33;
          }
          unint64_t v21 = v38[v8];
          if (!v21)
          {
            int64_t v22 = v20 + 2;
            if (v22 >= v37)
            {
LABEL_33:
              if ((v39 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v36;
                goto LABEL_40;
              }
              if (v35 >= 64) {
                bzero(v38, 8 * v37);
              }
              else {
                *char v38 = v34;
              }
              uint64_t v3 = v36;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v21 = v38[v22];
            if (!v21)
            {
              while (1)
              {
                int64_t v8 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_42;
                }
                if (v8 >= v37) {
                  goto LABEL_33;
                }
                unint64_t v21 = v38[v8];
                ++v22;
                if (v21) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v8 = v22;
          }
        }
LABEL_30:
        unint64_t v11 = (v21 - 1) & v21;
        unint64_t v19 = __clz(__rbit64(v21)) + (v8 << 6);
      }
      uint64_t v27 = *(void *)(*(void *)(v5 + 48) + 8 * v19);
      uint64_t v28 = *(void *)(v5 + 56) + 40 * v19;
      uint64_t v29 = *(void *)v28;
      char v30 = *(unsigned char *)(v28 + 8);
      uint64_t v31 = *(void *)(v28 + 16);
      uint64_t v32 = *(void *)(v28 + 24);
      uint64_t v33 = *(void *)(v28 + 32);
      if ((v39 & 1) == 0)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v13 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v14 = result & ~v13;
      unint64_t v15 = v14 >> 6;
      if (((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v12 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v13) >> 6;
        do
        {
          if (++v15 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v25 = v15 == v24;
          if (v15 == v24) {
            unint64_t v15 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v12 + 8 * v15);
        }
        while (v26 == -1);
        unint64_t v16 = __clz(__rbit64(~v26)) + (v15 << 6);
      }
      *(void *)(v12 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      *(void *)(*(void *)(v7 + 48) + 8 * v16) = v27;
      uint64_t v17 = *(void *)(v7 + 56) + 40 * v16;
      *(void *)uint64_t v17 = v29;
      *(unsigned char *)(v17 + 8) = v30;
      *(void *)(v17 + 16) = v31;
      *(void *)(v17 + 24) = v32;
      *(void *)(v17 + 32) = v33;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_40:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11D12C(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703D8);
  uint64_t result = sub_1FC290();
  uint64_t v7 = result;
  if (*(void *)(v5 + 16))
  {
    char v33 = a2;
    uint64_t v32 = v3;
    int64_t v8 = 0;
    uint64_t v9 = (uint64_t *)(v5 + 64);
    uint64_t v10 = 1 << *(unsigned char *)(v5 + 32);
    uint64_t v30 = -1 << v10;
    uint64_t v31 = v10;
    if (v10 < 64) {
      uint64_t v11 = ~(-1 << v10);
    }
    else {
      uint64_t v11 = -1;
    }
    unint64_t v12 = v11 & *(void *)(v5 + 64);
    int64_t v13 = (unint64_t)(v10 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v12)
      {
        unint64_t v16 = __clz(__rbit64(v12));
        v12 &= v12 - 1;
        unint64_t v17 = v16 | (v8 << 6);
      }
      else
      {
        int64_t v18 = v8 + 1;
        if (__OFADD__(v8, 1))
        {
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
          return result;
        }
        if (v18 >= v13) {
          goto LABEL_31;
        }
        unint64_t v19 = v9[v18];
        ++v8;
        if (!v19)
        {
          int64_t v8 = v18 + 1;
          if (v18 + 1 >= v13) {
            goto LABEL_31;
          }
          unint64_t v19 = v9[v8];
          if (!v19)
          {
            int64_t v20 = v18 + 2;
            if (v20 >= v13)
            {
LABEL_31:
              if ((v33 & 1) == 0)
              {
                uint64_t result = swift_release();
                uint64_t v3 = v32;
                goto LABEL_38;
              }
              if (v31 >= 64) {
                bzero((void *)(v5 + 64), 8 * v13);
              }
              else {
                uint64_t *v9 = v30;
              }
              uint64_t v3 = v32;
              *(void *)(v5 + 16) = 0;
              break;
            }
            unint64_t v19 = v9[v20];
            if (!v19)
            {
              while (1)
              {
                int64_t v8 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_40;
                }
                if (v8 >= v13) {
                  goto LABEL_31;
                }
                unint64_t v19 = v9[v8];
                ++v20;
                if (v19) {
                  goto LABEL_21;
                }
              }
            }
            int64_t v8 = v20;
          }
        }
LABEL_21:
        unint64_t v12 = (v19 - 1) & v19;
        unint64_t v17 = __clz(__rbit64(v19)) + (v8 << 6);
      }
      uint64_t v21 = *(void *)(*(void *)(v5 + 48) + 8 * v17);
      char v22 = *(unsigned char *)(*(void *)(v5 + 56) + v17);
      uint64_t result = sub_1FC7D0();
      uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v24 = result & ~v23;
      unint64_t v25 = v24 >> 6;
      if (((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6))) != 0)
      {
        unint64_t v15 = __clz(__rbit64((-1 << v24) & ~*(void *)(v14 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v23) >> 6;
        do
        {
          if (++v25 == v27 && (v26 & 1) != 0)
          {
            __break(1u);
            goto LABEL_39;
          }
          BOOL v28 = v25 == v27;
          if (v25 == v27) {
            unint64_t v25 = 0;
          }
          v26 |= v28;
          uint64_t v29 = *(void *)(v14 + 8 * v25);
        }
        while (v29 == -1);
        unint64_t v15 = __clz(__rbit64(~v29)) + (v25 << 6);
      }
      *(void *)(v14 + ((v15 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v15;
      *(void *)(*(void *)(v7 + 48) + 8 * v15) = v21;
      *(unsigned char *)(*(void *)(v7 + 56) + v15) = v22;
      ++*(void *)(v7 + 16);
    }
  }
  uint64_t result = swift_release();
LABEL_38:
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11D3CC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_2703E0);
  char v39 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  int64_t v36 = v2;
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v38 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v37 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  swift_retain();
  int64_t v12 = 0;
LABEL_8:
  if (v10)
  {
    unint64_t v15 = __clz(__rbit64(v10));
    v10 &= v10 - 1;
    unint64_t v16 = v15 | (v12 << 6);
    goto LABEL_22;
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1)) {
    goto LABEL_41;
  }
  if (v17 >= v37)
  {
    swift_release();
    uint64_t v3 = v36;
    int64_t v18 = (void *)(v5 + 64);
    if (v39)
    {
LABEL_36:
      uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
      if (v34 >= 64) {
        bzero(v18, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
      }
      else {
        *int64_t v18 = -1 << v34;
      }
      *(void *)(v5 + 16) = 0;
    }
  }
  else
  {
    int64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v38 + 8 * v17);
    ++v12;
    if (v19) {
      goto LABEL_21;
    }
    int64_t v12 = v17 + 1;
    if (v17 + 1 >= v37) {
      goto LABEL_33;
    }
    unint64_t v19 = *(void *)(v38 + 8 * v12);
    if (v19)
    {
LABEL_21:
      unint64_t v10 = (v19 - 1) & v19;
      unint64_t v16 = __clz(__rbit64(v19)) + (v12 << 6);
LABEL_22:
      char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
      uint64_t v22 = *(void *)(v5 + 56) + 24 * v16;
      uint64_t v23 = *(void *)v22;
      char v24 = *(unsigned char *)(v22 + 8);
      uint64_t v25 = *(void *)(v22 + 16);
      if ((v39 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int v26 = sub_1FC830();
      uint64_t v27 = -1 << *(unsigned char *)(v7 + 32);
      unint64_t v28 = v26 & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_7;
      }
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v27) >> 6;
      while (++v29 != v31 || (v30 & 1) == 0)
      {
        BOOL v32 = v29 == v31;
        if (v29 == v31) {
          unint64_t v29 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v11 + 8 * v29);
        if (v33 != -1)
        {
          unint64_t v13 = __clz(__rbit64(~v33)) + (v29 << 6);
LABEL_7:
          *(void *)(v11 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
          *(unsigned char *)(*(void *)(v7 + 48) + v13) = v21;
          uint64_t v14 = *(void *)(v7 + 56) + 24 * v13;
          *(void *)uint64_t v14 = v23;
          *(unsigned char *)(v14 + 8) = v24;
          *(void *)(v14 + 16) = v25;
          ++*(void *)(v7 + 16);
          goto LABEL_8;
        }
      }
      __break(1u);
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      JUMPOUT(0x11D7E0);
    }
    int64_t v20 = v17 + 2;
    if (v20 < v37)
    {
      unint64_t v19 = *(void *)(v38 + 8 * v20);
      if (!v19)
      {
        while (1)
        {
          int64_t v12 = v20 + 1;
          if (__OFADD__(v20, 1)) {
            goto LABEL_42;
          }
          if (v12 >= v37) {
            goto LABEL_33;
          }
          unint64_t v19 = *(void *)(v38 + 8 * v12);
          ++v20;
          if (v19) {
            goto LABEL_21;
          }
        }
      }
      int64_t v12 = v20;
      goto LABEL_21;
    }
LABEL_33:
    swift_release();
    uint64_t v3 = v36;
    if (v39) {
      goto LABEL_36;
    }
  }
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11D7FC(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_26D7E0);
  char v34 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v33 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v31 = v2;
  int64_t v32 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v18 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v20 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v20 >= v32) {
      break;
    }
    char v21 = (void *)(v5 + 64);
    unint64_t v22 = *(void *)(v33 + 8 * v20);
    ++v13;
    if (!v22)
    {
      int64_t v13 = v20 + 1;
      if (v20 + 1 >= v32) {
        goto LABEL_33;
      }
      unint64_t v22 = *(void *)(v33 + 8 * v13);
      if (!v22)
      {
        int64_t v23 = v20 + 2;
        if (v23 >= v32)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v31;
          if ((v34 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v22 = *(void *)(v33 + 8 * v23);
        if (!v22)
        {
          while (1)
          {
            int64_t v13 = v23 + 1;
            if (__OFADD__(v23, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v32) {
              goto LABEL_33;
            }
            unint64_t v22 = *(void *)(v33 + 8 * v13);
            ++v23;
            if (v22) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v23;
      }
    }
LABEL_30:
    unint64_t v10 = (v22 - 1) & v22;
    unint64_t v19 = __clz(__rbit64(v22)) + (v13 << 6);
LABEL_31:
    char v28 = *(unsigned char *)(*(void *)(v5 + 48) + v19);
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v19);
    if ((v34 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v26 = v16 == v25;
        if (v16 == v25) {
          unint64_t v16 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v16);
      }
      while (v27 == -1);
      unint64_t v17 = __clz(__rbit64(~v27)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(unsigned char *)(*(void *)(v7 + 48) + v17) = v28;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v31;
  char v21 = (void *)(v5 + 64);
  if ((v34 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v21, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v21 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11DB40(uint64_t a1, char a2)
{
  return sub_11DB80(a1, a2, &qword_270320, (void (*)(uint64_t, unsigned char *))sub_37C30);
}

uint64_t sub_11DB60(uint64_t a1, char a2)
{
  return sub_11DB80(a1, a2, &qword_270328, (void (*)(uint64_t, unsigned char *))sub_37C30);
}

uint64_t sub_11DB80(uint64_t a1, char a2, uint64_t *a3, void (*a4)(uint64_t, unsigned char *))
{
  uint64_t v6 = v4;
  uint64_t v8 = *v4;
  sub_12124(a3);
  char v36 = a2;
  uint64_t v9 = sub_1FC290();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_40;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v35 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & *(void *)(v8 + 64);
  int64_t v34 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v14 = v9 + 64;
  swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v13)
    {
      unint64_t v21 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v22 = v21 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      goto LABEL_41;
    }
    if (v23 >= v34) {
      break;
    }
    unint64_t v24 = v35[v23];
    ++v15;
    if (!v24)
    {
      int64_t v15 = v23 + 1;
      if (v23 + 1 >= v34) {
        break;
      }
      unint64_t v24 = v35[v15];
      if (!v24)
      {
        int64_t v25 = v23 + 2;
        if (v25 >= v34) {
          break;
        }
        unint64_t v24 = v35[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v15 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v34) {
              goto LABEL_35;
            }
            unint64_t v24 = v35[v15];
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v25;
      }
    }
LABEL_30:
    unint64_t v13 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_31:
    char v30 = *(unsigned char *)(*(void *)(v8 + 48) + v22);
    uint64_t v31 = *(void *)(v8 + 56) + 40 * v22;
    if (v36) {
      a4(v31, v37);
    }
    else {
      sub_51B70(v31, (uint64_t)v37);
    }
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    Swift::Int v16 = sub_1FC830();
    uint64_t v17 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v18 = v16 & ~v17;
    unint64_t v19 = v18 >> 6;
    if (((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6))) != 0)
    {
      unint64_t v20 = __clz(__rbit64((-1 << v18) & ~*(void *)(v14 + 8 * (v18 >> 6)))) | v18 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v26 = 0;
    unint64_t v27 = (unint64_t)(63 - v17) >> 6;
    do
    {
      if (++v19 == v27 && (v26 & 1) != 0)
      {
        __break(1u);
LABEL_41:
        __break(1u);
LABEL_42:
        __break(1u);
        JUMPOUT(0x11DF3CLL);
      }
      BOOL v28 = v19 == v27;
      if (v19 == v27) {
        unint64_t v19 = 0;
      }
      v26 |= v28;
      uint64_t v29 = *(void *)(v14 + 8 * v19);
    }
    while (v29 == -1);
    unint64_t v20 = __clz(__rbit64(~v29)) + (v19 << 6);
LABEL_8:
    *(void *)(v14 + ((v20 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v20;
    *(unsigned char *)(*(void *)(v10 + 48) + v20) = v30;
    a4((uint64_t)v37, (unsigned char *)(*(void *)(v10 + 56) + 40 * v20));
    ++*(void *)(v10 + 16);
  }
LABEL_35:
  swift_release();
  uint64_t v6 = v4;
  if (v36)
  {
    uint64_t v32 = 1 << *(unsigned char *)(v8 + 32);
    if (v32 >= 64) {
      bzero(v35, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
    }
    else {
      *uint64_t v35 = -1 << v32;
    }
    *(void *)(v8 + 16) = 0;
  }
LABEL_40:
  uint64_t result = swift_release();
  uint64_t *v6 = v10;
  return result;
}

uint64_t sub_11DF50(uint64_t a1, char a2)
{
  return sub_11DB80(a1, a2, &qword_270330, (void (*)(uint64_t, unsigned char *))sub_37C30);
}

uint64_t sub_11DF70(uint64_t a1, char a2)
{
  return sub_11DB80(a1, a2, &qword_270338, (void (*)(uint64_t, unsigned char *))sub_37C30);
}

uint64_t sub_11DF90(uint64_t a1, char a2)
{
  return sub_11DB80(a1, a2, &qword_270340, (void (*)(uint64_t, unsigned char *))sub_37C30);
}

uint64_t sub_11DFB0(uint64_t a1, char a2)
{
  return sub_11DB80(a1, a2, &qword_270348, (void (*)(uint64_t, unsigned char *))sub_37C30);
}

uint64_t sub_11DFD0(uint64_t a1, char a2)
{
  return sub_11DFDC(a1, a2, &qword_270448);
}

uint64_t sub_11DFDC(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_12124(a3);
  uint64_t result = sub_1FC290();
  uint64_t v8 = result;
  if (*(void *)(v6 + 16))
  {
    int64_t v9 = 0;
    uint64_t v10 = (uint64_t *)(v6 + 64);
    uint64_t v11 = 1 << *(unsigned char *)(v6 + 32);
    uint64_t v32 = -1 << v11;
    uint64_t v33 = v11;
    if (v11 < 64) {
      uint64_t v12 = ~(-1 << v11);
    }
    else {
      uint64_t v12 = -1;
    }
    unint64_t v13 = v12 & *(void *)(v6 + 64);
    int64_t v34 = (unint64_t)(v11 + 63) >> 6;
    uint64_t v14 = result + 64;
    while (1)
    {
      if (v13)
      {
        unint64_t v20 = __clz(__rbit64(v13));
        v13 &= v13 - 1;
        unint64_t v21 = v20 | (v9 << 6);
      }
      else
      {
        int64_t v22 = v9 + 1;
        if (__OFADD__(v9, 1))
        {
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          return result;
        }
        if (v22 >= v34) {
          goto LABEL_33;
        }
        unint64_t v23 = v10[v22];
        ++v9;
        if (!v23)
        {
          int64_t v9 = v22 + 1;
          if (v22 + 1 >= v34) {
            goto LABEL_33;
          }
          unint64_t v23 = v10[v9];
          if (!v23)
          {
            int64_t v24 = v22 + 2;
            if (v24 >= v34)
            {
LABEL_33:
              if (a2)
              {
                if (v33 >= 64) {
                  bzero((void *)(v6 + 64), 8 * v34);
                }
                else {
                  uint64_t *v10 = v32;
                }
                *(void *)(v6 + 16) = 0;
              }
              break;
            }
            unint64_t v23 = v10[v24];
            if (!v23)
            {
              while (1)
              {
                int64_t v9 = v24 + 1;
                if (__OFADD__(v24, 1)) {
                  goto LABEL_41;
                }
                if (v9 >= v34) {
                  goto LABEL_33;
                }
                unint64_t v23 = v10[v9];
                ++v24;
                if (v23) {
                  goto LABEL_30;
                }
              }
            }
            int64_t v9 = v24;
          }
        }
LABEL_30:
        unint64_t v13 = (v23 - 1) & v23;
        unint64_t v21 = __clz(__rbit64(v23)) + (v9 << 6);
      }
      uint64_t v29 = 8 * v21;
      uint64_t v30 = *(void *)(*(void *)(v6 + 48) + v29);
      uint64_t v31 = *(void *)(*(void *)(v6 + 56) + v29);
      if ((a2 & 1) == 0) {
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v16 = result & ~v15;
      unint64_t v17 = v16 >> 6;
      if (((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6))) != 0)
      {
        unint64_t v18 = __clz(__rbit64((-1 << v16) & ~*(void *)(v14 + 8 * (v16 >> 6)))) | v16 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v15) >> 6;
        do
        {
          if (++v17 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_40;
          }
          BOOL v27 = v17 == v26;
          if (v17 == v26) {
            unint64_t v17 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v14 + 8 * v17);
        }
        while (v28 == -1);
        unint64_t v18 = __clz(__rbit64(~v28)) + (v17 << 6);
      }
      *(void *)(v14 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
      uint64_t v19 = 8 * v18;
      *(void *)(*(void *)(v8 + 48) + v19) = v30;
      *(void *)(*(void *)(v8 + 56) + v19) = v31;
      ++*(void *)(v8 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v4 = v8;
  return result;
}

uint64_t sub_11E290(uint64_t a1, char a2)
{
  return sub_11E29C(a1, a2, &qword_270420);
}

uint64_t sub_11E29C(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v4 = v3;
  uint64_t v6 = *v3;
  sub_12124(a3);
  char v7 = a2;
  uint64_t v8 = sub_1FC290();
  uint64_t v9 = v8;
  if (!*(void *)(v6 + 16)) {
    goto LABEL_40;
  }
  uint64_t v10 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v35 = v6 + 64;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & *(void *)(v6 + 64);
  uint64_t v33 = v3;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v8 + 64;
  uint64_t result = swift_retain();
  int64_t v15 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v20 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v21 = v20 | (v15 << 6);
      goto LABEL_31;
    }
    int64_t v22 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v22 >= v34) {
      break;
    }
    unint64_t v23 = (void *)(v6 + 64);
    unint64_t v24 = *(void *)(v35 + 8 * v22);
    ++v15;
    if (!v24)
    {
      int64_t v15 = v22 + 1;
      if (v22 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v24 = *(void *)(v35 + 8 * v15);
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v34)
        {
LABEL_33:
          swift_release();
          uint64_t v4 = v33;
          if ((v7 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v24 = *(void *)(v35 + 8 * v25);
        if (!v24)
        {
          while (1)
          {
            int64_t v15 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_42;
            }
            if (v15 >= v34) {
              goto LABEL_33;
            }
            unint64_t v24 = *(void *)(v35 + 8 * v15);
            ++v25;
            if (v24) {
              goto LABEL_30;
            }
          }
        }
        int64_t v15 = v25;
      }
    }
LABEL_30:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v15 << 6);
LABEL_31:
    char v30 = *(unsigned char *)(*(void *)(v6 + 48) + v21);
    uint64_t v31 = *(void *)(*(void *)(v6 + 56) + 8 * v21);
    if ((v7 & 1) == 0) {
      swift_bridgeObjectRetain();
    }
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v16 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v17 = result & ~v16;
    unint64_t v18 = v17 >> 6;
    if (((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6))) != 0)
    {
      unint64_t v19 = __clz(__rbit64((-1 << v17) & ~*(void *)(v13 + 8 * (v17 >> 6)))) | v17 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v16) >> 6;
      do
      {
        if (++v18 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v28 = v18 == v27;
        if (v18 == v27) {
          unint64_t v18 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v13 + 8 * v18);
      }
      while (v29 == -1);
      unint64_t v19 = __clz(__rbit64(~v29)) + (v18 << 6);
    }
    *(void *)(v13 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
    *(unsigned char *)(*(void *)(v9 + 48) + v19) = v30;
    *(void *)(*(void *)(v9 + 56) + 8 * v19) = v31;
    ++*(void *)(v9 + 16);
  }
  swift_release();
  uint64_t v4 = v33;
  unint64_t v23 = (void *)(v6 + 64);
  if ((v7 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v32 = 1 << *(unsigned char *)(v6 + 32);
  if (v32 >= 64) {
    bzero(v23, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v32;
  }
  *(void *)(v6 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v4 = v9;
  return result;
}

uint64_t sub_11E5C8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270350);
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_41;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v32 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v31 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_22;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v17 >= v31) {
      break;
    }
    unint64_t v18 = (void *)(v5 + 64);
    unint64_t v19 = *(void *)(v32 + 8 * v17);
    ++v13;
    if (!v19)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v31) {
        goto LABEL_34;
      }
      unint64_t v19 = *(void *)(v32 + 8 * v13);
      if (!v19)
      {
        int64_t v20 = v17 + 2;
        if (v20 >= v31)
        {
LABEL_34:
          swift_release();
          if ((a2 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v19 = *(void *)(v32 + 8 * v20);
        if (!v19)
        {
          while (1)
          {
            int64_t v13 = v20 + 1;
            if (__OFADD__(v20, 1)) {
              goto LABEL_43;
            }
            if (v13 >= v31) {
              goto LABEL_34;
            }
            unint64_t v19 = *(void *)(v32 + 8 * v13);
            ++v20;
            if (v19) {
              goto LABEL_21;
            }
          }
        }
        int64_t v13 = v20;
      }
    }
LABEL_21:
    unint64_t v10 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v13 << 6);
LABEL_22:
    char v21 = *(unsigned char *)(*(void *)(v5 + 48) + v16);
    int64_t v22 = (long long *)(*(void *)(v5 + 56) + 40 * v16);
    if (a2) {
      sub_37C30(v22, (uint64_t)v33);
    }
    else {
      sub_51B70((uint64_t)v22, (uint64_t)v33);
    }
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v23 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v24) & ~*(void *)(v11 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v14 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v7 + 48) + v14) = v21;
    uint64_t result = sub_37C30(v33, *(void *)(v7 + 56) + 40 * v14);
    ++*(void *)(v7 + 16);
  }
  swift_release();
  unint64_t v18 = (void *)(v5 + 64);
  if ((a2 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v30 = 1 << *(unsigned char *)(v5 + 32);
  if (v30 >= 64) {
    bzero(v18, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v18 = -1 << v30;
  }
  *(void *)(v5 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11E900(uint64_t a1, int a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = type metadata accessor for TabiPackage();
  uint64_t v42 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v39 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  sub_12124(&qword_270488);
  int v43 = a2;
  uint64_t v9 = sub_1FC290();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16)) {
    goto LABEL_41;
  }
  uint64_t v11 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v12 = *(void *)(v8 + 64);
  unint64_t v41 = (void *)(v8 + 64);
  if (v11 < 64) {
    uint64_t v13 = ~(-1 << v11);
  }
  else {
    uint64_t v13 = -1;
  }
  unint64_t v14 = v13 & v12;
  char v39 = v2;
  int64_t v40 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v15 = v9 + 64;
  uint64_t result = swift_retain();
  int64_t v17 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v20 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v21 = v20 | (v17 << 6);
      goto LABEL_22;
    }
    int64_t v22 = v17 + 1;
    if (__OFADD__(v17, 1))
    {
LABEL_42:
      __break(1u);
LABEL_43:
      __break(1u);
      return result;
    }
    if (v22 >= v40) {
      break;
    }
    uint64_t v23 = v41;
    unint64_t v24 = v41[v22];
    ++v17;
    if (!v24)
    {
      int64_t v17 = v22 + 1;
      if (v22 + 1 >= v40) {
        goto LABEL_34;
      }
      unint64_t v24 = v41[v17];
      if (!v24)
      {
        int64_t v25 = v22 + 2;
        if (v25 >= v40)
        {
LABEL_34:
          swift_release();
          uint64_t v3 = v39;
          if ((v43 & 1) == 0) {
            goto LABEL_41;
          }
          goto LABEL_37;
        }
        unint64_t v24 = v41[v25];
        if (!v24)
        {
          while (1)
          {
            int64_t v17 = v25 + 1;
            if (__OFADD__(v25, 1)) {
              goto LABEL_43;
            }
            if (v17 >= v40) {
              goto LABEL_34;
            }
            unint64_t v24 = v41[v17];
            ++v25;
            if (v24) {
              goto LABEL_21;
            }
          }
        }
        int64_t v17 = v25;
      }
    }
LABEL_21:
    unint64_t v14 = (v24 - 1) & v24;
    unint64_t v21 = __clz(__rbit64(v24)) + (v17 << 6);
LABEL_22:
    char v26 = (uint64_t *)(*(void *)(v8 + 48) + 16 * v21);
    uint64_t v28 = *v26;
    uint64_t v27 = v26[1];
    uint64_t v29 = *(void *)(v42 + 72);
    uint64_t v30 = *(void *)(v8 + 56) + v29 * v21;
    if (v43)
    {
      sub_124AF0(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TabiPackage);
    }
    else
    {
      sub_124A88(v30, (uint64_t)v7, (uint64_t (*)(void))type metadata accessor for TabiPackage);
      swift_bridgeObjectRetain();
    }
    sub_1FC7E0();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v31 = -1 << *(unsigned char *)(v10 + 32);
    unint64_t v32 = result & ~v31;
    unint64_t v33 = v32 >> 6;
    if (((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6))) != 0)
    {
      unint64_t v18 = __clz(__rbit64((-1 << v32) & ~*(void *)(v15 + 8 * (v32 >> 6)))) | v32 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v31) >> 6;
      do
      {
        if (++v33 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_42;
        }
        BOOL v36 = v33 == v35;
        if (v33 == v35) {
          unint64_t v33 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v15 + 8 * v33);
      }
      while (v37 == -1);
      unint64_t v18 = __clz(__rbit64(~v37)) + (v33 << 6);
    }
    *(void *)(v15 + ((v18 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v18;
    unint64_t v19 = (void *)(*(void *)(v10 + 48) + 16 * v18);
    void *v19 = v28;
    v19[1] = v27;
    uint64_t result = sub_124AF0((uint64_t)v7, *(void *)(v10 + 56) + v29 * v18, (uint64_t (*)(void))type metadata accessor for TabiPackage);
    ++*(void *)(v10 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  uint64_t v23 = v41;
  if ((v43 & 1) == 0) {
    goto LABEL_41;
  }
LABEL_37:
  uint64_t v38 = 1 << *(unsigned char *)(v8 + 32);
  if (v38 >= 64) {
    bzero(v23, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v23 = -1 << v38;
  }
  *(void *)(v8 + 16) = 0;
LABEL_41:
  uint64_t result = swift_release();
  *uint64_t v3 = v10;
  return result;
}

uint64_t sub_11ECE0(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270430);
  char v35 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v34 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  unint64_t v32 = v2;
  int64_t v33 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v33) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v34 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v33) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v34 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v33)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v32;
          if ((v35 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v34 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v33) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v34 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    long long v36 = *(_OWORD *)(*(void *)(v5 + 48) + 16 * v20);
    unint64_t v30 = *(void *)(*(void *)(v5 + 48) + 16 * v20 + 8);
    if ((v35 & 1) == 0) {
      sub_2F5CC(v36, v30);
    }
    sub_1FC7E0();
    sub_2F5CC(v36, v30);
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
      long long v18 = v36;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      long long v18 = v36;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    *(_OWORD *)(*(void *)(v7 + 48) + 16 * v17) = v18;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v29;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v32;
  int64_t v22 = (void *)(v5 + 64);
  if ((v35 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v31 = 1 << *(unsigned char *)(v5 + 32);
  if (v31 >= 64) {
    bzero(v22, ((unint64_t)(v31 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v31;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11F068(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270480);
  char v36 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v35 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  int64_t v34 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v34) {
      break;
    }
    int64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v35 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v34) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v35 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v34)
        {
LABEL_33:
          swift_release();
          if ((v36 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v35 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v34) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v35 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    uint64_t v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void *)(*(void *)(v5 + 56) + 8 * v20);
    if ((v36 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1FC7E0();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    long long v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *long long v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  int64_t v22 = (void *)(v5 + 64);
  if ((v36 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v33 = 1 << *(unsigned char *)(v5 + 32);
  if (v33 >= 64) {
    bzero(v22, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v22 = -1 << v33;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11F380(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270478);
  char v42 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v41 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  char v39 = v2;
  int64_t v40 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v21 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v22 = v21 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v23 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v23 >= v40) {
      break;
    }
    int64_t v24 = (void *)(v5 + 64);
    unint64_t v25 = *(void *)(v41 + 8 * v23);
    ++v13;
    if (!v25)
    {
      int64_t v13 = v23 + 1;
      if (v23 + 1 >= v40) {
        goto LABEL_33;
      }
      unint64_t v25 = *(void *)(v41 + 8 * v13);
      if (!v25)
      {
        int64_t v26 = v23 + 2;
        if (v26 >= v40)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v39;
          if ((v42 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v25 = *(void *)(v41 + 8 * v26);
        if (!v25)
        {
          while (1)
          {
            int64_t v13 = v26 + 1;
            if (__OFADD__(v26, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v40) {
              goto LABEL_33;
            }
            unint64_t v25 = *(void *)(v41 + 8 * v13);
            ++v26;
            if (v25) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v26;
      }
    }
LABEL_30:
    unint64_t v10 = (v25 - 1) & v25;
    unint64_t v22 = __clz(__rbit64(v25)) + (v13 << 6);
LABEL_31:
    uint64_t v31 = 16 * v22;
    uint64_t v32 = (uint64_t *)(*(void *)(v5 + 48) + v31);
    uint64_t v34 = *v32;
    uint64_t v33 = v32[1];
    uint64_t v35 = (uint64_t *)(*(void *)(v5 + 56) + v31);
    uint64_t v36 = *v35;
    uint64_t v37 = v35[1];
    if ((v42 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
    }
    sub_1FC7E0();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v27 = 0;
      unint64_t v28 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v28 && (v27 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v29 = v16 == v28;
        if (v16 == v28) {
          unint64_t v16 = 0;
        }
        v27 |= v29;
        uint64_t v30 = *(void *)(v11 + 8 * v16);
      }
      while (v30 == -1);
      unint64_t v17 = __clz(__rbit64(~v30)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = 16 * v17;
    unint64_t v19 = (void *)(*(void *)(v7 + 48) + v18);
    void *v19 = v34;
    v19[1] = v33;
    unint64_t v20 = (void *)(*(void *)(v7 + 56) + v18);
    *unint64_t v20 = v36;
    v20[1] = v37;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v39;
  int64_t v24 = (void *)(v5 + 64);
  if ((v42 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v38 = 1 << *(unsigned char *)(v5 + 32);
  if (v38 >= 64) {
    bzero(v24, ((unint64_t)(v38 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *int64_t v24 = -1 << v38;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11F6A8(uint64_t a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v2;
  sub_12124(&qword_270470);
  char v38 = a2;
  uint64_t v6 = sub_1FC290();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16)) {
    goto LABEL_40;
  }
  uint64_t v8 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v37 = v5 + 64;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v5 + 64);
  uint64_t v35 = v2;
  int64_t v36 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v11 = v6 + 64;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v19 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v20 = v19 | (v13 << 6);
      goto LABEL_31;
    }
    int64_t v21 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_41:
      __break(1u);
LABEL_42:
      __break(1u);
      return result;
    }
    if (v21 >= v36) {
      break;
    }
    unint64_t v22 = (void *)(v5 + 64);
    unint64_t v23 = *(void *)(v37 + 8 * v21);
    ++v13;
    if (!v23)
    {
      int64_t v13 = v21 + 1;
      if (v21 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v23 = *(void *)(v37 + 8 * v13);
      if (!v23)
      {
        int64_t v24 = v21 + 2;
        if (v24 >= v36)
        {
LABEL_33:
          swift_release();
          uint64_t v3 = v35;
          if ((v38 & 1) == 0) {
            goto LABEL_40;
          }
          goto LABEL_36;
        }
        unint64_t v23 = *(void *)(v37 + 8 * v24);
        if (!v23)
        {
          while (1)
          {
            int64_t v13 = v24 + 1;
            if (__OFADD__(v24, 1)) {
              goto LABEL_42;
            }
            if (v13 >= v36) {
              goto LABEL_33;
            }
            unint64_t v23 = *(void *)(v37 + 8 * v13);
            ++v24;
            if (v23) {
              goto LABEL_30;
            }
          }
        }
        int64_t v13 = v24;
      }
    }
LABEL_30:
    unint64_t v10 = (v23 - 1) & v23;
    unint64_t v20 = __clz(__rbit64(v23)) + (v13 << 6);
LABEL_31:
    BOOL v29 = (uint64_t *)(*(void *)(v5 + 48) + 16 * v20);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = *(void **)(*(void *)(v5 + 56) + 8 * v20);
    if ((v38 & 1) == 0)
    {
      swift_bridgeObjectRetain();
      id v33 = v32;
    }
    sub_1FC7E0();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v14 = -1 << *(unsigned char *)(v7 + 32);
    unint64_t v15 = result & ~v14;
    unint64_t v16 = v15 >> 6;
    if (((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v15) & ~*(void *)(v11 + 8 * (v15 >> 6)))) | v15 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v14) >> 6;
      do
      {
        if (++v16 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_41;
        }
        BOOL v27 = v16 == v26;
        if (v16 == v26) {
          unint64_t v16 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v11 + 8 * v16);
      }
      while (v28 == -1);
      unint64_t v17 = __clz(__rbit64(~v28)) + (v16 << 6);
    }
    *(void *)(v11 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t v18 = (void *)(*(void *)(v7 + 48) + 16 * v17);
    *uint64_t v18 = v31;
    v18[1] = v30;
    *(void *)(*(void *)(v7 + 56) + 8 * v17) = v32;
    ++*(void *)(v7 + 16);
  }
  swift_release();
  uint64_t v3 = v35;
  unint64_t v22 = (void *)(v5 + 64);
  if ((v38 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_36:
  uint64_t v34 = 1 << *(unsigned char *)(v5 + 32);
  if (v34 >= 64) {
    bzero(v22, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *unint64_t v22 = -1 << v34;
  }
  *(void *)(v5 + 16) = 0;
LABEL_40:
  uint64_t result = swift_release();
  *uint64_t v3 = v7;
  return result;
}

uint64_t sub_11F9B8(uint64_t a1, uint64_t a2, char a3, void *a4)
{
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6) {
    goto LABEL_7;
  }
  uint64_t v7 = *(void *)(a2 + 16);
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v10 = *(void *)(a1 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = (void *)*a4;
  unint64_t v13 = sub_56168(v10);
  uint64_t v15 = v12[2];
  BOOL v16 = (v14 & 1) == 0;
  BOOL v17 = __OFADD__(v15, v16);
  uint64_t v18 = v15 + v16;
  if (v17) {
    goto LABEL_28;
  }
  char v19 = v14;
  if (v12[3] < v18)
  {
    sub_119278(v18, a3 & 1);
    unint64_t v13 = sub_56168(v10);
    if ((v19 & 1) != (v20 & 1))
    {
LABEL_6:
      sub_1FC770();
      __break(1u);
LABEL_7:
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
LABEL_10:
    if (v19) {
      goto LABEL_11;
    }
    goto LABEL_14;
  }
  if (a3) {
    goto LABEL_10;
  }
  unint64_t v22 = v13;
  sub_12172C();
  unint64_t v13 = v22;
  if (v19)
  {
LABEL_11:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_12124(&qword_26D670);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_31;
  }
LABEL_14:
  unint64_t v23 = (void *)*a4;
  *(void *)(*a4 + 8 * (v13 >> 6) + 64) |= 1 << v13;
  uint64_t v24 = 8 * v13;
  *(void *)(v23[6] + v24) = v10;
  *(void *)(v23[7] + v24) = v11;
  uint64_t v25 = v23[2];
  BOOL v17 = __OFADD__(v25, 1);
  uint64_t v26 = v25 + 1;
  if (v17)
  {
LABEL_29:
    __break(1u);
    goto LABEL_30;
  }
  v23[2] = v26;
  if (v6 == 1) {
    goto LABEL_27;
  }
  if (*(void *)(a1 + 16) >= 2uLL)
  {
    if (v7 != 1)
    {
      uint64_t v27 = 0;
      uint64_t v28 = v6 - 2;
      while (1)
      {
        uint64_t v29 = *(void *)(a1 + 40 + 8 * v27);
        uint64_t v30 = *(void *)(a2 + 40 + 8 * v27);
        uint64_t v31 = (void *)*a4;
        unint64_t v32 = sub_56168(v29);
        uint64_t v34 = v31[2];
        BOOL v35 = (v33 & 1) == 0;
        BOOL v17 = __OFADD__(v34, v35);
        uint64_t v36 = v34 + v35;
        if (v17) {
          break;
        }
        char v37 = v33;
        if (v31[3] < v36)
        {
          sub_119278(v36, 1);
          unint64_t v32 = sub_56168(v29);
          if ((v37 & 1) != (v38 & 1)) {
            goto LABEL_6;
          }
        }
        if (v37) {
          goto LABEL_11;
        }
        char v39 = (void *)*a4;
        *(void *)(*a4 + 8 * (v32 >> 6) + 64) |= 1 << v32;
        uint64_t v40 = 8 * v32;
        *(void *)(v39[6] + v40) = v29;
        *(void *)(v39[7] + v40) = v30;
        uint64_t v41 = v39[2];
        BOOL v17 = __OFADD__(v41, 1);
        uint64_t v42 = v41 + 1;
        if (v17) {
          goto LABEL_29;
        }
        v39[2] = v42;
        if (v28 == v27) {
          goto LABEL_27;
        }
        if ((unint64_t)(v27 + 2) >= *(void *)(a1 + 16)) {
          goto LABEL_30;
        }
        if (v7 - 1 == ++v27) {
          goto LABEL_27;
        }
      }
LABEL_28:
      __break(1u);
      goto LABEL_29;
    }
LABEL_27:
    swift_bridgeObjectRelease_n();
    return swift_bridgeObjectRelease_n();
  }
LABEL_30:
  __break(1u);
LABEL_31:
  sub_1FC050(30);
  v43._object = (void *)0x80000000002171E0;
  v43._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1FB8F0(v43);
  sub_1FC1D0();
  v44._countAndFlagsBits = 39;
  v44._object = (void *)0xE100000000000000;
  sub_1FB8F0(v44);
  uint64_t result = sub_1FC220();
  __break(1u);
  return result;
}

void *sub_11FDA8()
{
  uint64_t v42 = sub_1FB1F0();
  uint64_t v45 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v32 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1FB220();
  uint64_t v44 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  char v39 = (char *)&v32 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_2704A0);
  unint64_t v32 = v0;
  uint64_t v3 = *v0;
  uint64_t v4 = sub_1FC280();
  uint64_t v5 = *(void *)(v3 + 16);
  uint64_t v46 = v4;
  if (!v5)
  {
    uint64_t result = (void *)swift_release();
    uint64_t v31 = v46;
    uint64_t v30 = v32;
LABEL_25:
    *uint64_t v30 = v31;
    return result;
  }
  uint64_t v6 = v4;
  uint64_t result = (void *)(v4 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8)
  {
    uint64_t result = memmove(result, (const void *)(v3 + 64), 8 * v8);
    uint64_t v6 = v46;
  }
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v3 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v11 = -1;
  uint64_t v43 = v3;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v3 + 64);
  uint64_t v33 = v3 + 64;
  int64_t v34 = (unint64_t)(v10 + 63) >> 6;
  uint64_t v13 = v45;
  uint64_t v14 = v44;
  uint64_t v37 = v45 + 16;
  uint64_t v38 = v44 + 16;
  uint64_t v35 = v45 + 32;
  uint64_t v36 = v44 + 32;
  uint64_t v15 = v39;
  uint64_t v16 = v40;
  uint64_t v17 = v42;
  uint64_t v18 = v46;
  while (1)
  {
    if (v12)
    {
      unint64_t v19 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      int64_t v47 = v9;
      unint64_t v20 = v19 | (v9 << 6);
      uint64_t v21 = v43;
      goto LABEL_9;
    }
    int64_t v26 = v9 + 1;
    uint64_t v21 = v43;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v26 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v26);
    int64_t v28 = v9 + 1;
    if (!v27)
    {
      int64_t v28 = v26 + 1;
      if (v26 + 1 >= v34) {
        goto LABEL_23;
      }
      unint64_t v27 = *(void *)(v33 + 8 * v28);
      if (!v27) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v27 - 1) & v27;
    int64_t v47 = v28;
    unint64_t v20 = __clz(__rbit64(v27)) + (v28 << 6);
LABEL_9:
    unint64_t v22 = *(void *)(v14 + 72) * v20;
    (*(void (**)(char *, unint64_t, uint64_t))(v14 + 16))(v15, *(void *)(v21 + 48) + v22, v16);
    unint64_t v23 = *(void *)(v13 + 72) * v20;
    unint64_t v24 = *(void *)(v21 + 56) + v23;
    uint64_t v25 = v41;
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v41, v24, v17);
    (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(*(void *)(v18 + 48) + v22, v15, v16);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v13 + 32))(*(void *)(v18 + 56) + v23, v25, v17);
    int64_t v9 = v47;
  }
  int64_t v29 = v26 + 2;
  if (v29 >= v34)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v30 = v32;
    uint64_t v31 = v46;
    goto LABEL_25;
  }
  unint64_t v27 = *(void *)(v33 + 8 * v29);
  if (v27)
  {
    int64_t v28 = v29;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v28 = v29 + 1;
    if (__OFADD__(v29, 1)) {
      break;
    }
    if (v28 >= v34) {
      goto LABEL_23;
    }
    unint64_t v27 = *(void *)(v33 + 8 * v28);
    ++v29;
    if (v27) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_120150()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26DA08);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 384 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 384 * v15), sizeof(__dst));
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t result = memcpy((void *)(*(void *)(v4 + 56) + v18), __dst, 0x179uLL);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_120320()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StoreBook(0);
  uint64_t v26 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_270390);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1FC280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  unint64_t v24 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v25 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v20 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v20 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v20);
    ++v10;
    if (!v21)
    {
      int64_t v10 = v20 + 1;
      if (v20 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v21 = *(void *)(v25 + 8 * v10);
      if (!v21) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v16 = __clz(__rbit64(v21)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v5 + 48) + 8 * v16);
    unint64_t v19 = *(void *)(v26 + 72) * v16;
    sub_124A88(*(void *)(v5 + 56) + v19, (uint64_t)v4, type metadata accessor for StoreBook);
    *(void *)(*(void *)(v7 + 48) + v17) = v18;
    uint64_t result = (void *)sub_124AF0((uint64_t)v4, *(void *)(v7 + 56) + v19, type metadata accessor for StoreBook);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_25;
  }
  unint64_t v21 = *(void *)(v25 + 8 * v22);
  if (v21)
  {
    int64_t v10 = v22;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v21 = *(void *)(v25 + 8 * v10);
    ++v22;
    if (v21) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_120598()
{
  return sub_122BA8(&qword_270398);
}

void *sub_1205A4()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703C0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_120734()
{
  return sub_123BF8(&qword_2703B8);
}

void *sub_120740()
{
  return sub_123BF8(&qword_26C4F0);
}

void *sub_12074C()
{
  return sub_123A50(&qword_2703C8);
}

void *sub_120758()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26D210);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  unint64_t v24 = v1;
  uint64_t result = (void *)(v3 + 64);
  unint64_t v6 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v6) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v6);
  }
  uint64_t v25 = v2 + 64;
  int64_t v8 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v9 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(v2 + 64);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v8 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v12) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v8;
    if (!v22)
    {
      int64_t v8 = v21 + 1;
      if (v21 + 1 >= v12) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v8);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v11 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v8 << 6);
LABEL_12:
    uint64_t v15 = 16 * v14;
    uint64_t v16 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    uint64_t v19 = 40 * v14;
    sub_5606C(*(void *)(v2 + 56) + 40 * v14, (uint64_t)v26, &qword_26D168);
    unint64_t v20 = (void *)(*(void *)(v4 + 48) + v15);
    *unint64_t v20 = v17;
    v20[1] = v18;
    sub_55844((uint64_t)v26, *(void *)(v4 + 56) + v19, &qword_26D168);
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v12)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v24;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v8 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v8 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v8 >= v12) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v8);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_12095C()
{
  return sub_123A50(&qword_270380);
}

void *sub_120968()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26D970);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v35 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v35 >= v13) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v6 + 8 * v35);
    ++v9;
    if (!v36)
    {
      int64_t v9 = v35 + 1;
      if (v35 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v36 = *(void *)(v6 + 8 * v9);
      if (!v36) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v36 - 1) & v36;
    unint64_t v15 = __clz(__rbit64(v36)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 152 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    long long v20 = *(_OWORD *)(v19 + 32);
    long long v21 = *(_OWORD *)(v19 + 48);
    long long v22 = *(_OWORD *)(v19 + 80);
    long long v42 = *(_OWORD *)(v19 + 64);
    long long v43 = v22;
    long long v41 = v21;
    long long v24 = *(_OWORD *)(v19 + 112);
    long long v23 = *(_OWORD *)(v19 + 128);
    long long v25 = *(_OWORD *)(v19 + 96);
    char v47 = *(unsigned char *)(v19 + 144);
    long long v45 = v24;
    long long v46 = v23;
    long long v44 = v25;
    long long v26 = *(_OWORD *)(v19 + 16);
    long long v38 = *(_OWORD *)v19;
    long long v39 = v26;
    long long v40 = v20;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v27 = *(void *)(v4 + 56) + v18;
    long long v28 = v39;
    *(_OWORD *)uint64_t v27 = v38;
    *(_OWORD *)(v27 + 16) = v28;
    long long v29 = v40;
    long long v30 = v41;
    long long v31 = v43;
    *(_OWORD *)(v27 + 64) = v42;
    *(_OWORD *)(v27 + 80) = v31;
    *(_OWORD *)(v27 + 32) = v29;
    *(_OWORD *)(v27 + 48) = v30;
    long long v32 = v44;
    long long v33 = v45;
    long long v34 = v46;
    *(unsigned char *)(v27 + 144) = v47;
    *(_OWORD *)(v27 + 112) = v33;
    *(_OWORD *)(v27 + 128) = v34;
    *(_OWORD *)(v27 + 96) = v32;
    uint64_t result = (void *)sub_54834((uint64_t)&v38);
  }
  int64_t v37 = v35 + 2;
  if (v37 >= v13) {
    goto LABEL_26;
  }
  unint64_t v36 = *(void *)(v6 + 8 * v37);
  if (v36)
  {
    int64_t v9 = v37;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v37 + 1;
    if (__OFADD__(v37, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v36 = *(void *)(v6 + 8 * v9);
    ++v37;
    if (v36) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_120B84()
{
  return sub_123BF8(&qword_26D940);
}

void *sub_120B90()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270388);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v31 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v31 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v31);
    ++v9;
    if (!v32)
    {
      int64_t v9 = v31 + 1;
      if (v31 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v32 = *(void *)(v6 + 8 * v9);
      if (!v32) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v32 - 1) & v32;
    unint64_t v15 = __clz(__rbit64(v32)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 80 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    char v23 = *(unsigned char *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    uint64_t v26 = *(void *)(v19 + 48);
    uint64_t v25 = *(void *)(v19 + 56);
    uint64_t v27 = *(void *)(v19 + 64);
    uint64_t v28 = *(void *)(v19 + 72);
    char v29 = *(unsigned char *)(v19 + 40);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v30 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v30 = v20;
    *(unsigned char *)(v30 + 8) = v21;
    *(void *)(v30 + 16) = v22;
    *(unsigned char *)(v30 + 24) = v23;
    *(void *)(v30 + 32) = v24;
    *(unsigned char *)(v30 + 40) = v29;
    *(void *)(v30 + 48) = v26;
    *(void *)(v30 + 56) = v25;
    *(void *)(v30 + 64) = v27;
    *(void *)(v30 + 72) = v28;
    sub_5480C(v24, v29);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v33 = v31 + 2;
  if (v33 >= v13) {
    goto LABEL_26;
  }
  unint64_t v32 = *(void *)(v6 + 8 * v33);
  if (v32)
  {
    int64_t v9 = v33;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v33 + 1;
    if (__OFADD__(v33, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v32 = *(void *)(v6 + 8 * v9);
    ++v33;
    if (v32) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_120D9C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_12124(&qword_26D980);
  uint64_t v24 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_26D988);
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1FC280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_25:
    *uint64_t v1 = v7;
    return result;
  }
  uint64_t v22 = v1;
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v23 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_27;
    }
    if (v19 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v23 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v17 = 560 * v16;
    memcpy(v25, (const void *)(*(void *)(v5 + 48) + 560 * v16), 0x229uLL);
    unint64_t v18 = *(void *)(v24 + 72) * v16;
    sub_5606C(*(void *)(v5 + 56) + v18, (uint64_t)v4, &qword_26D980);
    memcpy((void *)(*(void *)(v7 + 48) + v17), v25, 0x229uLL);
    sub_55844((uint64_t)v4, *(void *)(v7 + 56) + v18, &qword_26D980);
    uint64_t result = sub_12384(v25);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14)
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_25;
  }
  unint64_t v20 = *(void *)(v23 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v23 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_27:
  __break(1u);
  return result;
}

void *sub_121038()
{
  uint64_t v1 = sub_12124(&qword_26D938);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_26D9A0);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1FC280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  uint64_t v24 = v5 + 64;
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v27 = v2 + 16;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v5 + 48) + 8 * v15);
    unint64_t v18 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 56) + v18, v1);
    *(void *)(*(void *)(v7 + 48) + v16) = v17;
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 56) + v18, v4, v1);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_1212CC()
{
  return sub_121C6C(&qword_270360, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_1212EC()
{
  uint64_t v1 = sub_1FB110();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_2703F0);
  uint64_t v23 = v0;
  uint64_t v5 = *v0;
  uint64_t v6 = sub_1FC280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
LABEL_23:
    uint64_t result = (void *)swift_release();
    uint64_t *v23 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  unint64_t v9 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v9) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v9);
  }
  int64_t v10 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v5 + 64);
  uint64_t v24 = v5 + 64;
  int64_t v25 = (unint64_t)(v11 + 63) >> 6;
  uint64_t v26 = v2 + 32;
  uint64_t v27 = v2 + 16;
  while (1)
  {
    if (v13)
    {
      unint64_t v14 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v15 = v14 | (v10 << 6);
      goto LABEL_9;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v19 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v25) {
        goto LABEL_23;
      }
      unint64_t v20 = *(void *)(v24 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_22:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_9:
    unint64_t v16 = *(void *)(v2 + 72) * v15;
    (*(void (**)(char *, unint64_t, uint64_t))(v2 + 16))(v4, *(void *)(v5 + 48) + v16, v1);
    uint64_t v17 = 8 * v15;
    uint64_t v18 = *(void *)(*(void *)(v5 + 56) + 8 * v15);
    (*(void (**)(unint64_t, char *, uint64_t))(v2 + 32))(*(void *)(v7 + 48) + v16, v4, v1);
    *(void *)(*(void *)(v7 + 56) + v17) = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v25) {
    goto LABEL_23;
  }
  unint64_t v20 = *(void *)(v24 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v25) {
      goto LABEL_23;
    }
    unint64_t v20 = *(void *)(v24 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_121584()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703D0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_121714()
{
  return sub_123A50(&qword_270440);
}

void *sub_121720()
{
  return sub_123A50(&qword_270438);
}

void *sub_12172C()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270168);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v21 = __clz(__rbit64(v19));
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = v21 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 56) + v16);
    *(void *)(*(void *)(v4 + 48) + v16) = *(void *)(*(void *)(v2 + 48) + v16);
    *(void *)(*(void *)(v4 + 56) + v16) = v17;
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v13) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1218BC()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270428);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_121A6C()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703E8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 48 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v21 = *(void *)(v19 + 32);
    uint64_t v23 = *(void *)(v19 + 40);
    long long v24 = *(_OWORD *)v19;
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v25 = v24;
    *(unsigned char *)(v25 + 16) = v20;
    *(void *)(v25 + 24) = v22;
    *(void *)(v25 + 32) = v21;
    *(void *)(v25 + 40) = v23;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_121C40()
{
  return sub_123A50(&qword_270408);
}

void *sub_121C4C()
{
  return sub_121C6C(&qword_270368, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_121C6C(uint64_t *a1, uint64_t (*a2)(unsigned char *, unint64_t))
{
  uint64_t v4 = v2;
  sub_12124(a1);
  uint64_t v5 = *v2;
  uint64_t v6 = sub_1FC280();
  uint64_t v7 = v6;
  if (!*(void *)(v5 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v4 = v7;
    return result;
  }
  uint64_t result = (void *)(v6 + 64);
  uint64_t v9 = v5 + 64;
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v7 + 32)) + 63) >> 6;
  if (v7 != v5 || (unint64_t)result >= v5 + 64 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v5 + 64), 8 * v10);
  }
  int64_t v12 = 0;
  *(void *)(v7 + 16) = *(void *)(v5 + 16);
  uint64_t v13 = 1 << *(unsigned char *)(v5 + 32);
  uint64_t v14 = -1;
  if (v13 < 64) {
    uint64_t v14 = ~(-1 << v13);
  }
  unint64_t v15 = v14 & *(void *)(v5 + 64);
  int64_t v16 = (unint64_t)(v13 + 63) >> 6;
  while (1)
  {
    if (v15)
    {
      unint64_t v17 = __clz(__rbit64(v15));
      v15 &= v15 - 1;
      unint64_t v18 = v17 | (v12 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v16) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v20);
    ++v12;
    if (!v21)
    {
      int64_t v12 = v20 + 1;
      if (v20 + 1 >= v16) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v9 + 8 * v12);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v15 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v12 << 6);
LABEL_12:
    char v19 = *(unsigned char *)(*(void *)(v5 + 48) + v18);
    sub_51B70(*(void *)(v5 + 56) + 40 * v18, (uint64_t)v23);
    *(unsigned char *)(*(void *)(v7 + 48) + v18) = v19;
    uint64_t result = (void *)a2(v23, *(void *)(v7 + 56) + 40 * v18);
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v16)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v9 + 8 * v22);
  if (v21)
  {
    int64_t v12 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v12 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v12 >= v16) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v9 + 8 * v12);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_121E44()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26DA18);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v29 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v29 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v29);
    ++v9;
    if (!v30)
    {
      int64_t v9 = v29 + 1;
      if (v29 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v30 = *(void *)(v6 + 8 * v9);
      if (!v30) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v30 - 1) & v30;
    unint64_t v15 = __clz(__rbit64(v30)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 80 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)v19;
    uint64_t v21 = *(void *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v23 = *(void *)(v19 + 24);
    char v24 = *(unsigned char *)(v19 + 32);
    char v25 = *(unsigned char *)(v19 + 72);
    long long v26 = *(_OWORD *)(v19 + 40);
    long long v27 = *(_OWORD *)(v19 + 56);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v28 = *(void *)(v4 + 56) + v18;
    *(unsigned char *)uint64_t v28 = v20;
    *(void *)(v28 + 8) = v21;
    *(void *)(v28 + 16) = v22;
    *(void *)(v28 + 24) = v23;
    *(unsigned char *)(v28 + 32) = v24;
    *(_OWORD *)(v28 + 40) = v26;
    *(_OWORD *)(v28 + 56) = v27;
    *(unsigned char *)(v28 + 72) = v25;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v31 = v29 + 2;
  if (v31 >= v13) {
    goto LABEL_26;
  }
  unint64_t v30 = *(void *)(v6 + 8 * v31);
  if (v30)
  {
    int64_t v9 = v31;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v30 = *(void *)(v6 + 8 * v9);
    ++v31;
    if (v30) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_122030()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26DA10);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v23 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v23 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v23);
    ++v9;
    if (!v24)
    {
      int64_t v9 = v23 + 1;
      if (v23 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v24 = *(void *)(v6 + 8 * v9);
      if (!v24) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v24 - 1) & v24;
    unint64_t v15 = __clz(__rbit64(v24)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    uint64_t v19 = (uint64_t *)(*(void *)(v2 + 56) + v18);
    uint64_t v21 = *v19;
    uint64_t v20 = v19[1];
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v22 = (void *)(*(void *)(v4 + 56) + v18);
    *uint64_t v22 = v21;
    v22[1] = v20;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v25 = v23 + 2;
  if (v25 >= v13) {
    goto LABEL_26;
  }
  unint64_t v24 = *(void *)(v6 + 8 * v25);
  if (v24)
  {
    int64_t v9 = v25;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v24 = *(void *)(v6 + 8 * v9);
    ++v25;
    if (v24) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1221E0()
{
  return sub_1221F8(&qword_2704C0);
}

void *sub_1221EC()
{
  return sub_1221F8(&qword_2704A8);
}

void *sub_1221F8(uint64_t *a1)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_1FB110();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(a1);
  uint64_t v8 = *v1;
  uint64_t v9 = sub_1FC280();
  uint64_t v10 = v9;
  if (!*(void *)(v8 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_28:
    *uint64_t v3 = v10;
    return result;
  }
  long long v27 = v3;
  uint64_t result = (void *)(v9 + 64);
  unint64_t v12 = (unint64_t)((1 << *(unsigned char *)(v10 + 32)) + 63) >> 6;
  if (v10 != v8 || (unint64_t)result >= v8 + 64 + 8 * v12) {
    uint64_t result = memmove(result, (const void *)(v8 + 64), 8 * v12);
  }
  uint64_t v28 = v8 + 64;
  int64_t v14 = 0;
  *(void *)(v10 + 16) = *(void *)(v8 + 16);
  uint64_t v15 = 1 << *(unsigned char *)(v8 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & *(void *)(v8 + 64);
  int64_t v29 = (unint64_t)(v15 + 63) >> 6;
  uint64_t v30 = v5 + 16;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v14 << 6);
      goto LABEL_12;
    }
    int64_t v24 = v14 + 1;
    if (__OFADD__(v14, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v24 >= v29) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v24);
    ++v14;
    if (!v25)
    {
      int64_t v14 = v24 + 1;
      if (v24 + 1 >= v29) {
        goto LABEL_26;
      }
      unint64_t v25 = *(void *)(v28 + 8 * v14);
      if (!v25) {
        break;
      }
    }
LABEL_25:
    unint64_t v17 = (v25 - 1) & v25;
    unint64_t v19 = __clz(__rbit64(v25)) + (v14 << 6);
LABEL_12:
    unint64_t v20 = *(void *)(v5 + 72) * v19;
    (*(void (**)(char *, unint64_t, uint64_t))(v5 + 16))(v7, *(void *)(v8 + 48) + v20, v4);
    uint64_t v21 = 16 * v19;
    unint64_t v22 = *(void *)(v10 + 48) + v20;
    int64_t v23 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
    long long v31 = *(_OWORD *)(*(void *)(v8 + 56) + v21);
    v23(v22, v7, v4);
    *(_OWORD *)(*(void *)(v10 + 56) + v21) = v31;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v26 = v24 + 2;
  if (v26 >= v29)
  {
LABEL_26:
    uint64_t result = (void *)swift_release();
    uint64_t v3 = v27;
    goto LABEL_28;
  }
  unint64_t v25 = *(void *)(v28 + 8 * v26);
  if (v25)
  {
    int64_t v14 = v26;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v14 = v26 + 1;
    if (__OFADD__(v26, 1)) {
      break;
    }
    if (v14 >= v29) {
      goto LABEL_26;
    }
    unint64_t v25 = *(void *)(v28 + 8 * v14);
    ++v26;
    if (v25) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

id sub_1224A8()
{
  return sub_1224C0(&qword_2704B0);
}

id sub_1224B4()
{
  return sub_1224C0(&qword_2704B8);
}

id sub_1224C0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_12124(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1FC280();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (id)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    unint64_t v18 = *(void **)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_12265C()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270450);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1227EC()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270458);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(*(void *)(v2 + 56) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    *(void *)(*(void *)(v4 + 56) + 8 * v15) = v16;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_122990()
{
  return sub_1229A8(&qword_270468);
}

void *sub_12299C()
{
  return sub_1229A8(&qword_270460);
}

void *sub_1229A8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_12124(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1FC280();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v2 = v5;
    return result;
  }
  int64_t v24 = v2;
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v21 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v21);
    ++v10;
    if (!v22)
    {
      int64_t v10 = v21 + 1;
      if (v21 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v7 + 8 * v10);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v22 - 1) & v22;
    unint64_t v16 = __clz(__rbit64(v22)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 560 * v16;
    unint64_t v18 = (const void *)(*(void *)(v3 + 48) + 560 * v16);
    memcpy(__dst, v18, 0x229uLL);
    uint64_t v19 = 8 * v16;
    uint64_t v20 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    memmove((void *)(*(void *)(v5 + 48) + v17), v18, 0x229uLL);
    *(void *)(*(void *)(v5 + 56) + v19) = v20;
    sub_12384(__dst);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v14)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v2 = v24;
    goto LABEL_28;
  }
  unint64_t v22 = *(void *)(v7 + 8 * v23);
  if (v22)
  {
    int64_t v10 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v7 + 8 * v10);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_122B9C()
{
  return sub_122BA8(&qword_2703A0);
}

void *sub_122BA8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_12124(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1FC280();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v22 = __clz(__rbit64(v20));
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = v22 + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_122D30()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703A8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v20 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21) {
        break;
      }
    }
LABEL_25:
    unint64_t v23 = __clz(__rbit64(v21));
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = v23 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 16 * v15;
    long long v19 = *(_OWORD *)(*(void *)(v2 + 56) + v18);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    *(_OWORD *)(*(void *)(v4 + 56) + v18) = v19;
  }
  int64_t v22 = v20 + 2;
  if (v22 >= v13) {
    goto LABEL_26;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_122EC4()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270170);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    id result = (void *)swift_release();
LABEL_28:
    *uint64_t v1 = v4;
    return result;
  }
  int64_t v22 = v1;
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v19 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v9;
    if (!v20)
    {
      int64_t v9 = v19 + 1;
      if (v19 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v9);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v15 = __clz(__rbit64(v20)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 560 * v15;
    memcpy(__dst, (const void *)(*(void *)(v2 + 56) + 560 * v15), 0x229uLL);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    memcpy((void *)(*(void *)(v4 + 56) + v18), __dst, 0x229uLL);
    id result = sub_12384(__dst);
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v13)
  {
LABEL_26:
    id result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_28;
  }
  unint64_t v20 = *(void *)(v6 + 8 * v21);
  if (v20)
  {
    int64_t v9 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v9);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_1230B0()
{
  return sub_121C6C(&qword_270358, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

char *sub_1230D0()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270410);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (char *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (char *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = (char *)memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v28 = __clz(__rbit64(v26));
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = v28 + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    char v20 = *(unsigned char *)(v19 + 16);
    uint64_t v21 = *(void *)(v19 + 24);
    char v22 = *(unsigned char *)(v19 + 32);
    id result = *(char **)(v4 + 48);
    long long v23 = *(_OWORD *)v19;
    *(void *)&result[v16] = v17;
    uint64_t v24 = *(void *)(v4 + 56) + v18;
    *(_OWORD *)uint64_t v24 = v23;
    *(unsigned char *)(v24 + 16) = v20;
    *(void *)(v24 + 24) = v21;
    *(unsigned char *)(v24 + 32) = v22;
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_123288()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270418);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 24 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    int v21 = *(_DWORD *)(v19 + 8);
    char v22 = *(unsigned char *)(v19 + 12);
    uint64_t v23 = *(void *)(v19 + 16);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v24 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v24 = v20;
    *(_DWORD *)(v24 + 8) = v21;
    *(unsigned char *)(v24 + 12) = v22;
    *(void *)(v24 + 16) = v23;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_123454()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v26 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v26 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v26);
    ++v9;
    if (!v27)
    {
      int64_t v9 = v26 + 1;
      if (v26 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v27 = *(void *)(v6 + 8 * v9);
      if (!v27) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v27 - 1) & v27;
    unint64_t v15 = __clz(__rbit64(v27)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 8 * v15;
    uint64_t v17 = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    uint64_t v18 = 40 * v15;
    uint64_t v19 = *(void *)(v2 + 56) + v18;
    uint64_t v20 = *(void *)v19;
    char v21 = *(unsigned char *)(v19 + 8);
    uint64_t v23 = *(void *)(v19 + 16);
    uint64_t v22 = *(void *)(v19 + 24);
    uint64_t v24 = *(void *)(v19 + 32);
    *(void *)(*(void *)(v4 + 48) + v16) = v17;
    uint64_t v25 = *(void *)(v4 + 56) + v18;
    *(void *)uint64_t v25 = v20;
    *(unsigned char *)(v25 + 8) = v21;
    *(void *)(v25 + 16) = v23;
    *(void *)(v25 + 24) = v22;
    *(void *)(v25 + 32) = v24;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v28 = v26 + 2;
  if (v28 >= v13) {
    goto LABEL_26;
  }
  unint64_t v27 = *(void *)(v6 + 8 * v28);
  if (v27)
  {
    int64_t v9 = v28;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v28 + 1;
    if (__OFADD__(v28, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v27 = *(void *)(v6 + 8 * v9);
    ++v28;
    if (v27) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_123628()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703D8);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v17 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18) {
        break;
      }
    }
LABEL_25:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = v20 + (v9 << 6);
LABEL_12:
    char v16 = *(unsigned char *)(*(void *)(v2 + 56) + v15);
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
    *(unsigned char *)(*(void *)(v4 + 56) + v15) = v16;
  }
  int64_t v19 = v17 + 2;
  if (v19 >= v13) {
    goto LABEL_26;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1237B8()
{
  uint64_t v1 = v0;
  sub_12124(&qword_2703E0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v21 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v22 = *(void *)(v6 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v15 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = *(void *)(v2 + 56) + 24 * v15;
    uint64_t v17 = *(void *)v16;
    char v18 = *(unsigned char *)(v16 + 8);
    uint64_t v19 = *(void *)(v16 + 16);
    *(unsigned char *)(*(void *)(v4 + 48) + v15) = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    uint64_t v20 = *(void *)(v4 + 56) + 24 * v15;
    *(void *)uint64_t v20 = v17;
    *(unsigned char *)(v20 + 8) = v18;
    *(void *)(v20 + 16) = v19;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v13) {
    goto LABEL_26;
  }
  unint64_t v22 = *(void *)(v6 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v22 = *(void *)(v6 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_123978()
{
  return sub_123BF8(&qword_26D7E0);
}

void *sub_123984()
{
  return sub_121C6C(&qword_270320, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_1239A4()
{
  return sub_121C6C(&qword_270328, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_1239C4()
{
  return sub_121C6C(&qword_270330, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_1239E4()
{
  return sub_121C6C(&qword_270338, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_123A04()
{
  return sub_121C6C(&qword_270340, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_123A24()
{
  return sub_121C6C(&qword_270348, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_123A44()
{
  return sub_123A50(&qword_270448);
}

void *sub_123A50(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_12124(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1FC280();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v19 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v19 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v19);
    ++v10;
    if (!v20)
    {
      int64_t v10 = v19 + 1;
      if (v19 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v20 = *(void *)(v7 + 8 * v10);
      if (!v20) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v20 - 1) & v20;
    unint64_t v16 = __clz(__rbit64(v20)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = 8 * v16;
    uint64_t v18 = *(void *)(*(void *)(v3 + 56) + v17);
    *(void *)(*(void *)(v5 + 48) + v17) = *(void *)(*(void *)(v3 + 48) + v17);
    *(void *)(*(void *)(v5 + 56) + v17) = v18;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v21 = v19 + 2;
  if (v21 >= v14) {
    goto LABEL_26;
  }
  unint64_t v20 = *(void *)(v7 + 8 * v21);
  if (v20)
  {
    int64_t v10 = v21;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v20 = *(void *)(v7 + 8 * v10);
    ++v21;
    if (v20) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_123BEC()
{
  return sub_123BF8(&qword_270420);
}

void *sub_123BF8(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_12124(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1FC280();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  id result = (void *)(v4 + 64);
  uint64_t v7 = v3 + 64;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v3 + 64), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 64);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v18 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v14) {
        goto LABEL_26;
      }
      unint64_t v19 = *(void *)(v7 + 8 * v10);
      if (!v19) {
        break;
      }
    }
LABEL_25:
    unint64_t v13 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_12:
    uint64_t v17 = *(void *)(*(void *)(v3 + 56) + 8 * v16);
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
    *(void *)(*(void *)(v5 + 56) + 8 * v16) = v17;
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v20 = v18 + 2;
  if (v20 >= v14) {
    goto LABEL_26;
  }
  unint64_t v19 = *(void *)(v7 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_26;
    }
    unint64_t v19 = *(void *)(v7 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_123D94()
{
  return sub_121C6C(&qword_270350, (uint64_t (*)(unsigned char *, unint64_t))sub_37C30);
}

void *sub_123DB4()
{
  uint64_t v1 = type metadata accessor for TabiPackage();
  uint64_t v27 = *(void *)(v1 - 8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v24 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_270488);
  uint64_t v24 = v0;
  uint64_t v4 = *v0;
  uint64_t v5 = sub_1FC280();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
LABEL_23:
    id result = (void *)swift_release();
    *uint64_t v24 = v6;
    return result;
  }
  id result = (void *)(v5 + 64);
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v6 + 32)) + 63) >> 6;
  if (v6 != v4 || (unint64_t)result >= v4 + 64 + 8 * v8) {
    id result = memmove(result, (const void *)(v4 + 64), 8 * v8);
  }
  uint64_t v25 = v4 + 64;
  int64_t v9 = 0;
  *(void *)(v6 + 16) = *(void *)(v4 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v4 + 64);
  int64_t v26 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v9 << 6);
      goto LABEL_9;
    }
    int64_t v21 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v21 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v21);
    ++v9;
    if (!v22)
    {
      int64_t v9 = v21 + 1;
      if (v21 + 1 >= v26) {
        goto LABEL_23;
      }
      unint64_t v22 = *(void *)(v25 + 8 * v9);
      if (!v22) {
        break;
      }
    }
LABEL_22:
    unint64_t v12 = (v22 - 1) & v22;
    unint64_t v14 = __clz(__rbit64(v22)) + (v9 << 6);
LABEL_9:
    uint64_t v15 = 16 * v14;
    unint64_t v16 = (uint64_t *)(*(void *)(v4 + 48) + 16 * v14);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    unint64_t v19 = *(void *)(v27 + 72) * v14;
    sub_124A88(*(void *)(v4 + 56) + v19, (uint64_t)v3, (uint64_t (*)(void))type metadata accessor for TabiPackage);
    int64_t v20 = (void *)(*(void *)(v6 + 48) + v15);
    *int64_t v20 = v17;
    v20[1] = v18;
    sub_124AF0((uint64_t)v3, *(void *)(v6 + 56) + v19, (uint64_t (*)(void))type metadata accessor for TabiPackage);
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v23 = v21 + 2;
  if (v23 >= v26) {
    goto LABEL_23;
  }
  unint64_t v22 = *(void *)(v25 + 8 * v23);
  if (v22)
  {
    int64_t v9 = v23;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v9 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v9 >= v26) {
      goto LABEL_23;
    }
    unint64_t v22 = *(void *)(v25 + 8 * v9);
    ++v23;
    if (v22) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_124038()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270480);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void *)(*(void *)(v2 + 56) + v19);
    int64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void *sub_1241F0()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270478);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (void *)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (void *)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v25 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v25 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v25);
    ++v9;
    if (!v26)
    {
      int64_t v9 = v25 + 1;
      if (v25 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v26 = *(void *)(v6 + 8 * v9);
      if (!v26) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v26 - 1) & v26;
    unint64_t v15 = __clz(__rbit64(v26)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (uint64_t *)(*(void *)(v2 + 48) + v16);
    uint64_t v19 = *v17;
    uint64_t v18 = v17[1];
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 56) + v16);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    unint64_t v23 = (void *)(*(void *)(v4 + 48) + v16);
    void *v23 = v19;
    v23[1] = v18;
    int64_t v24 = (void *)(*(void *)(v4 + 56) + v16);
    *int64_t v24 = v21;
    v24[1] = v22;
    swift_bridgeObjectRetain();
    id result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v27 = v25 + 2;
  if (v27 >= v13) {
    goto LABEL_26;
  }
  unint64_t v26 = *(void *)(v6 + 8 * v27);
  if (v26)
  {
    int64_t v9 = v27;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v26 = *(void *)(v6 + 8 * v9);
    ++v27;
    if (v26) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

id sub_1243AC()
{
  uint64_t v1 = v0;
  sub_12124(&qword_270470);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC280();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_26:
    id result = (id)swift_release();
    *uint64_t v1 = v4;
    return result;
  }
  id result = (id)(v3 + 64);
  uint64_t v6 = v2 + 64;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 64 + 8 * v7) {
    id result = memmove(result, (const void *)(v2 + 64), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_28;
    }
    if (v22 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_26;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23) {
        break;
      }
    }
LABEL_25:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v18 = v17[1];
    uint64_t v19 = 8 * v15;
    uint64_t v20 = *(void **)(*(void *)(v2 + 56) + v19);
    uint64_t v21 = (void *)(*(void *)(v4 + 48) + v16);
    void *v21 = *v17;
    v21[1] = v18;
    *(void *)(*(void *)(v4 + 56) + v19) = v20;
    swift_bridgeObjectRetain();
    id result = v20;
  }
  int64_t v24 = v22 + 2;
  if (v24 >= v13) {
    goto LABEL_26;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_25;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_26;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_25;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

void sub_124560()
{
  uint64_t v1 = *v0;
  unint64_t v2 = *(void *)(*v0 + 16);
  unint64_t v3 = v2 - 2;
  if (v2 >= 2)
  {
    unint64_t v4 = 0;
    while (1)
    {
      swift_stdlib_random();
      uint64_t v6 = (0 * (unsigned __int128)v2) >> 64;
      if (v2)
      {
        if (-(uint64_t)v2 % v2)
        {
          while (1)
            swift_stdlib_random();
        }
      }
      unint64_t v8 = v4 + v6;
      if (__OFADD__(v4, v6)) {
        break;
      }
      if (v4 != v8)
      {
        unint64_t v9 = *(void *)(v1 + 16);
        if (v4 >= v9) {
          goto LABEL_18;
        }
        if (v8 >= v9) {
          goto LABEL_19;
        }
        uint64_t v10 = (uint64_t *)(v1 + 32 + 16 * v4);
        uint64_t v12 = *v10;
        uint64_t v11 = v10[1];
        int64_t v13 = (uint64_t *)(v1 + 32 + 16 * v8);
        uint64_t v15 = *v13;
        uint64_t v14 = v13[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v1 = sub_124700(v1);
        }
        if (v4 >= *(void *)(v1 + 16)) {
          goto LABEL_20;
        }
        uint64_t v16 = (void *)(v1 + 32 + 16 * v4);
        *uint64_t v16 = v15;
        v16[1] = v14;
        swift_bridgeObjectRelease();
        if (v8 >= *(void *)(v1 + 16)) {
          goto LABEL_21;
        }
        uint64_t v17 = (void *)(v1 + 32 + 16 * v8);
        void *v17 = v12;
        v17[1] = v11;
        swift_bridgeObjectRelease();
        *uint64_t v18 = v1;
      }
      --v2;
      if (v4++ == v3) {
        return;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
  }
}

uint64_t sub_1246EC(uint64_t a1)
{
  return sub_46BD4(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124700(uint64_t a1)
{
  return sub_46BE0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124714(void *a1)
{
  return sub_46D4C(0, a1[2], 0, a1);
}

uint64_t sub_124728(uint64_t a1)
{
  return sub_47208(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_12473C(uint64_t a1)
{
  return sub_46D60(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124750(uint64_t a1)
{
  return sub_47C30(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124764(uint64_t a1)
{
  return sub_46BC8(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124778(uint64_t a1)
{
  return sub_480BC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_12478C(void *a1)
{
  return sub_483D4(0, a1[2], 0, a1);
}

uint64_t sub_1247A0(uint64_t a1)
{
  return sub_4857C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1247B4(uint64_t a1)
{
  return sub_48C34(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1247C8(uint64_t a1)
{
  return sub_48F4C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1247DC(uint64_t a1)
{
  return sub_493B0(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_1247F0(uint64_t a1)
{
  return sub_4980C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124804(uint64_t a1)
{
  return sub_4A0EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_124818(uint64_t a1)
{
  return sub_4A7EC(0, *(void *)(a1 + 16), 0, (char *)a1);
}

unint64_t sub_12482C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1E4B04();
  if (!v5)
  {
    if (qword_26C398 == -1) {
      goto LABEL_8;
    }
    goto LABEL_12;
  }
  uint64_t v6 = (uint64_t)v5;
  uint64_t v7 = v5[2];
  if (v7 != *(void *)(a3 + 16))
  {
    swift_bridgeObjectRelease();
    if (qword_26C398 == -1)
    {
LABEL_8:
      id v9 = (id)qword_272B78;
      sub_1FBDA0();
      sub_1FB400();

      return sub_16B9DC((uint64_t)_swiftEmptyArrayStorage);
    }
LABEL_12:
    swift_once();
    goto LABEL_8;
  }
  if (v7)
  {
    sub_12124(&qword_270168);
    unint64_t v8 = (void *)sub_1FC2A0();
  }
  else
  {
    unint64_t v8 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = v8;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  sub_11F9B8(a3, v6, 1, &v11);
  if (v3)
  {
    unint64_t result = swift_unexpectedError();
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (unint64_t)v11;
  }
  return result;
}

unint64_t sub_124A10()
{
  unint64_t result = qword_270318;
  if (!qword_270318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270318);
  }
  return result;
}

uint64_t sub_124A64@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_115948(a1, v2[2], v2[3], v2[4], a2);
}

uint64_t sub_124A88(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_124AF0(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

uint64_t sub_124B58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BookScoringWork.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x124C3CLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookScoringWork.Errors()
{
  return &type metadata for BookScoringWork.Errors;
}

uint64_t destroy for BookScoringWork.Context()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BookScoringWork.Context(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BookScoringWork.Context(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for BookScoringWork.Context(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_release();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookScoringWork.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookScoringWork.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookScoringWork.Context()
{
  return &type metadata for BookScoringWork.Context;
}

unint64_t sub_124E7C()
{
  unint64_t result = qword_2704C8;
  if (!qword_2704C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2704C8);
  }
  return result;
}

uint64_t dispatch thunk of MediaTypesRecommendationServiceType.determineRecommendedMediaTypes(from:with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  id v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

unint64_t sub_124FDC()
{
  unint64_t result = 0x65726E654778616DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6F6874754178616DLL;
      break;
    case 2:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_12508C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_125928(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1250B4(uint64_t a1)
{
  unint64_t v2 = sub_125310();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1250F0(uint64_t a1)
{
  unint64_t v2 = sub_125310();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabiConfiguration.BookSuggestionsConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_2704D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v11[4] = v1[2];
  v11[5] = v8;
  uint64_t v9 = v1[3];
  v11[2] = v1[4];
  v11[3] = v9;
  v11[1] = v1[5];
  sub_5D64(a1, a1[3]);
  sub_125310();
  sub_1FC870();
  char v15 = 0;
  sub_1FC520();
  if (!v2)
  {
    char v14 = 1;
    sub_1FC520();
    char v13 = 2;
    sub_1FC4E0();
    char v12 = 3;
    sub_1FC4E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_125310()
{
  unint64_t result = qword_2704E0;
  if (!qword_2704E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2704E0);
  }
  return result;
}

uint64_t TabiConfiguration.BookSuggestionsConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2704E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_125310();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v25 = 0;
  uint64_t v9 = sub_1FC3E0();
  char v24 = 1;
  uint64_t v10 = sub_1FC3E0();
  char v23 = 2;
  uint64_t v20 = sub_1FC3A0();
  uint64_t v21 = v11;
  char v22 = 3;
  swift_bridgeObjectRetain();
  uint64_t v12 = sub_1FC3A0();
  uint64_t v14 = v13;
  char v15 = *(void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v19 = v12;
  v15(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v16 = v21;
  a2[2] = v20;
  a2[3] = v16;
  a2[4] = v19;
  a2[5] = v14;
  swift_bridgeObjectRetain();
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1255C4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TabiConfiguration.BookSuggestionsConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1255DC(void *a1)
{
  return TabiConfiguration.BookSuggestionsConfiguration.encode(to:)(a1);
}

uint64_t _s11descr251E29O28BookSuggestionsConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11descr251E29O28BookSuggestionsConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11descr251E29O28BookSuggestionsConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for TabiConfiguration.BookSuggestionsConfiguration()
{
  return &type metadata for TabiConfiguration.BookSuggestionsConfiguration;
}

unsigned char *_s11descr251E29O28BookSuggestionsConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1257E8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11descr251E29O28BookSuggestionsConfigurationV10CodingKeysOMa()
{
  return &_s11descr251E29O28BookSuggestionsConfigurationV10CodingKeysON;
}

unint64_t sub_125824()
{
  unint64_t result = qword_2704F0;
  if (!qword_2704F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2704F0);
  }
  return result;
}

unint64_t sub_12587C()
{
  unint64_t result = qword_2704F8;
  if (!qword_2704F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2704F8);
  }
  return result;
}

unint64_t sub_1258D4()
{
  unint64_t result = qword_270500;
  if (!qword_270500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270500);
  }
  return result;
}

uint64_t sub_125928(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726E654778616DLL && a2 == 0xEB00000000734449;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6874754178616DLL && a2 == 0xEC00000073444972 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x80000000002191D0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002191F0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_125B0C@<X0>(uint64_t a1@<X8>)
{
  v17[1] = a1;
  uint64_t v1 = sub_1FB870();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  unsigned int v4 = (char *)v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1FB580();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  sub_1FB570();
  sub_12124(&qword_26D630);
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_1FD2A0;
  sub_1FB850();
  uint64_t v13 = sub_1FB820();
  unint64_t v15 = v14;
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  if (v15 >> 60 == 15)
  {
    __break(1u);
  }
  else
  {
    *(void *)(v12 + 32) = v13;
    *(void *)(v12 + 40) = v15;
    sub_1FB560();
    sub_1FB540();
    (*(void (**)(char *, char *, uint64_t))(v6 + 16))(v9, v11, v5);
    sub_1FB4F0();
    return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v11, v5);
  }
  return result;
}

uint64_t static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1FB870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v25 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1FB580();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  int64_t v29 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  int64_t v28 = (char *)&v25 - v12;
  sub_1FB570();
  int64_t v13 = *(void *)(a1 + 16);
  if (v13)
  {
    uint64_t v25 = v9;
    uint64_t v26 = v8;
    uint64_t v27 = a2;
    uint64_t v30 = _swiftEmptyArrayStorage;
    sub_46678(0, v13, 0);
    unint64_t v14 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
    uint64_t v15 = a1 + 40;
    while (1)
    {
      swift_bridgeObjectRetain();
      sub_1FB850();
      uint64_t v16 = sub_1FB820();
      unint64_t v18 = v17;
      uint64_t result = (*v14)(v7, v4);
      if (v18 >> 60 == 15) {
        break;
      }
      swift_bridgeObjectRelease();
      uint64_t v20 = v30;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46678(0, v20[2] + 1, 1);
        uint64_t v20 = v30;
      }
      unint64_t v22 = v20[2];
      unint64_t v21 = v20[3];
      if (v22 >= v21 >> 1)
      {
        sub_46678(v21 > 1, v22 + 1, 1);
        uint64_t v20 = v30;
      }
      v15 += 16;
      v20[2] = v22 + 1;
      char v23 = &v20[2 * v22];
      v23[4] = v16;
      v23[5] = v18;
      if (!--v13)
      {
        uint64_t v8 = v26;
        uint64_t v9 = v25;
        goto LABEL_10;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_10:
    char v24 = v28;
    sub_1FB560();
    sub_1FB540();
    (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v29, v24, v8);
    sub_1FB4F0();
    return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v24, v8);
  }
  return result;
}

uint64_t static Com_Apple_News_Algorithms_Proto_Model_Feature.fromFloats(_:)()
{
  uint64_t v0 = sub_1FB5C0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  uint64_t v4 = (char *)&v8 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v8 - v5;
  sub_1FB5B0();
  swift_bridgeObjectRetain();
  sub_1FB5A0();
  sub_1FB540();
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v4, v6, v0);
  sub_1FB510();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v6, v0);
}

unint64_t static Transport.Info.title.getter()
{
  return 0xD00000000000001CLL;
}

uint64_t static Transport.Info.version.getter()
{
  return 3157554;
}

void static Transport.Server.server1.getter(void *a1@<X8>)
{
  *a1 = 0xD000000000000016;
  a1[1] = 0x8000000000216A80;
}

void sub_1261AC()
{
  qword_270508 = (uint64_t)&off_256A98;
}

uint64_t static Transport.Server.all.getter()
{
  if (qword_26C348 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t Transport.Server.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

unint64_t sub_126278()
{
  unint64_t result = qword_270510;
  if (!qword_270510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270510);
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport()
{
  return &type metadata for Transport;
}

ValueMetadata *type metadata accessor for Transport.Info()
{
  return &type metadata for Transport.Info;
}

ValueMetadata *type metadata accessor for Transport.Server()
{
  return &type metadata for Transport.Server;
}

void *sub_1262FC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46988(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 48);
    do
    {
      uint64_t v16 = *(v3 - 2);
      char v15 = *((unsigned char *)v3 - 8);
      uint64_t v14 = *v3;
      char v13 = *((unsigned char *)v3 + 8);
      uint64_t v4 = v3[2];
      char v5 = *((unsigned char *)v3 + 24);
      uint64_t v6 = v3[4];
      uint64_t v12 = v3[5];
      uint64_t v7 = v3[6];
      sub_5480C(v4, v5);
      unint64_t v8 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v8 >= v9 >> 1) {
        sub_46988(v9 > 1, v8 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v8 + 1;
      uint64_t v10 = &_swiftEmptyArrayStorage[9 * v8];
      v10[4] = v16;
      *((unsigned char *)v10 + 40) = v15;
      v10[6] = v14;
      *((unsigned char *)v10 + 56) = v13;
      v10[8] = v4;
      *((unsigned char *)v10 + 72) = v5;
      v10[10] = v6;
      v10[11] = v12;
      v10[12] = v7;
      v3 += 10;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_126454(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_46538(0, v2, 0);
    unint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 9;
      uint64_t v5 = v6;
      unint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_46538(v7 > 1, v8 + 1, 1);
        unint64_t result = v9;
      }
      result[2] = v8 + 1;
      result[v8 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_126514(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_6;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v12 >= v6) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v12);
    int64_t v14 = v8 + 1;
    if (!v13)
    {
      int64_t v14 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_38;
      }
      unint64_t v13 = *(void *)(v2 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_38;
        }
        unint64_t v13 = *(void *)(v2 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_38;
          }
          unint64_t v13 = *(void *)(v2 + 8 * v14);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_24:
    unint64_t v5 = (v13 - 1) & v13;
    unint64_t v10 = __clz(__rbit64(v13)) + (v14 << 6);
    int64_t v8 = v14;
LABEL_6:
    uint64_t v11 = *(void *)(*(void *)(a1 + 48) + 8 * v10);
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_getAtKeyPath();
    swift_release();
    if (!v33) {
      goto LABEL_7;
    }
    unint64_t v16 = _swiftEmptyDictionarySingleton[2];
    if (_swiftEmptyDictionarySingleton[3] <= v16) {
      sub_11A204(v16 + 1, 1);
    }
    uint64_t result = sub_1FC7D0();
    unint64_t v17 = &_swiftEmptyDictionarySingleton[8];
    uint64_t v18 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
    unint64_t v19 = result & ~v18;
    unint64_t v20 = v19 >> 6;
    if (((-1 << v19) & ~_swiftEmptyDictionarySingleton[(v19 >> 6) + 8]) == 0)
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v18) >> 6;
      while (++v20 != v23 || (v22 & 1) == 0)
      {
        BOOL v24 = v20 == v23;
        if (v20 == v23) {
          unint64_t v20 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v17[v20];
        if (v25 != -1)
        {
          unint64_t v21 = __clz(__rbit64(~v25)) + (v20 << 6);
          goto LABEL_37;
        }
      }
      goto LABEL_40;
    }
    unint64_t v21 = __clz(__rbit64((-1 << v19) & ~_swiftEmptyDictionarySingleton[(v19 >> 6) + 8])) | v19 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
    *(void *)((char *)v17 + ((v21 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v21;
    *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v21) = v11;
    uint64_t v26 = _swiftEmptyDictionarySingleton[7] + 72 * v21;
    *(void *)uint64_t v26 = v27;
    *(unsigned char *)(v26 + 8) = v28 & 1;
    *(void *)(v26 + 16) = v29;
    *(unsigned char *)(v26 + 24) = v30 & 1;
    *(void *)(v26 + 32) = v31;
    *(unsigned char *)(v26 + 40) = v32;
    *(void *)(v26 + 48) = v33;
    *(_OWORD *)(v26 + 56) = v34;
    ++_swiftEmptyDictionarySingleton[2];
LABEL_7:
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v8 + 5;
  if (v8 + 5 >= v6)
  {
LABEL_38:
    sub_1226C();
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  unint64_t v13 = *(void *)(v2 + 8 * v15);
  if (v13)
  {
    int64_t v14 = v8 + 5;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v14 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v14 >= v6) {
      goto LABEL_38;
    }
    unint64_t v13 = *(void *)(v2 + 8 * v14);
    ++v15;
    if (v13) {
      goto LABEL_24;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t TabiBookScorer.score(_:configuration:)(uint64_t a1)
{
  v2[5] = a1;
  v2[6] = v1;
  v2[7] = type metadata accessor for BookScoringWork();
  v2[8] = swift_task_alloc();
  uint64_t v3 = sub_1FB110();
  v2[9] = v3;
  v2[10] = *(void *)(v3 - 8);
  v2[11] = swift_task_alloc();
  return _swift_task_switch(sub_126954, 0, 0);
}

uint64_t sub_126954()
{
  uint64_t v1 = v0[5];
  uint64_t v2 = (void *)v0[6];
  sub_1FB100();
  uint64_t v3 = sub_1262FC(v1);
  v0[12] = v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1273CC(v4);
  swift_bridgeObjectRelease();
  v0[13] = sub_126514(v5);
  swift_bridgeObjectRelease();
  int64_t v6 = sub_126454((uint64_t)v3);
  v0[14] = v6;
  uint64_t v7 = v2[6];
  uint64_t v8 = v2[7];
  sub_5D64(v2 + 3, v7);
  uint64_t v11 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
  unint64_t v9 = (void *)swift_task_alloc();
  v0[15] = v9;
  void *v9 = v0;
  v9[1] = sub_126ACC;
  return v11(v6, v7, v8);
}

uint64_t sub_126ACC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 128) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_126E14;
  }
  else
  {
    *(void *)(v4 + 136) = a1;
    uint64_t v5 = sub_126C0C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_126C0C()
{
  uint64_t v1 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v3 = v0[14];
  uint64_t v4 = v0[12];
  int64_t v6 = (int *)v0[7];
  uint64_t v5 = v0[8];
  (*(void (**)(uint64_t, void, void))(v0[10] + 16))(v5, v0[11], v0[9]);
  *(void *)(v5 + v6[5]) = v3;
  *(void *)(v5 + v6[6]) = v4;
  *(void *)(v5 + v6[7]) = v2;
  sub_12124(&qword_270520);
  sub_1276C8();
  sub_1FB460();
  uint64_t v7 = v0[13];
  uint64_t v9 = v0[10];
  uint64_t v8 = v0[11];
  uint64_t v10 = v0[8];
  uint64_t v11 = v0[9];
  if (v1)
  {
    swift_bridgeObjectRelease();
    sub_127720(v10);
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    sub_127720(v0[8]);
    uint64_t v14 = v0[4];
    *(void *)(swift_task_alloc() + 16) = v7;
    uint64_t v15 = sub_127134(v14, (void *(*)(uint64_t *__return_ptr, void, double))sub_12777C);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v11);
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v16 = (uint64_t (*)(uint64_t))v0[1];
    return v16(v15);
  }
}

uint64_t sub_126E14()
{
  (*(void (**)(void, void))(v0[10] + 8))(v0[11], v0[9]);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_126E9C@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)result;
  if (*(void *)(*(void *)result + 16))
  {
    uint64_t v4 = *(void *)(v3 + 32);
    uint64_t v5 = *(unsigned __int8 *)(v3 + 40);
    uint64_t v6 = *(void *)(v3 + 48);
    uint64_t v7 = *(unsigned __int8 *)(v3 + 56);
    uint64_t v8 = *(void *)(v3 + 64);
    uint64_t v9 = *(void *)(v3 + 80);
    uint64_t v10 = *(void *)(v3 + 88);
    uint64_t v11 = *(void *)(v3 + 96);
    uint64_t v12 = *(unsigned __int8 *)(v3 + 72);
    sub_5480C(v8, *(unsigned char *)(v3 + 72));
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v4 = 0;
    uint64_t v5 = 0;
    uint64_t v6 = 0;
    uint64_t v7 = 0;
    uint64_t v8 = 0;
    uint64_t v12 = 0;
    uint64_t v9 = 0;
    uint64_t v10 = 0;
    uint64_t v11 = 0;
  }
  *a2 = v4;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  a2[4] = v8;
  a2[5] = v12;
  a2[6] = v9;
  a2[7] = v10;
  a2[8] = v11;
  return result;
}

double sub_126F60@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>, double a4@<D0>)
{
  if (*(void *)(a2 + 16) && (uint64_t v7 = sub_56168(a1), (v8 & 1) != 0))
  {
    uint64_t v9 = *(void *)(a2 + 56) + 72 * v7;
    uint64_t v10 = *(unsigned __int8 *)(v9 + 8);
    uint64_t v11 = *(void *)(v9 + 16);
    uint64_t v12 = *(unsigned __int8 *)(v9 + 24);
    uint64_t v13 = *(void *)(v9 + 32);
    uint64_t v15 = *(void *)(v9 + 48);
    uint64_t v14 = *(void *)(v9 + 56);
    uint64_t v16 = *(void *)(v9 + 64);
    unsigned __int8 v17 = *(unsigned char *)(v9 + 40);
    *(void *)a3 = *(void *)v9;
    *(void *)(a3 + 8) = v10;
    *(void *)(a3 + 16) = v11;
    *(void *)(a3 + 24) = v12;
    *(void *)(a3 + 32) = v13;
    *(void *)(a3 + 40) = v17;
    *(void *)(a3 + 48) = v15;
    *(void *)(a3 + 56) = v14;
    *(void *)(a3 + 64) = v16;
    *(double *)(a3 + 72) = a4;
    sub_5480C(v13, v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a3 + 48) = 0u;
    *(_OWORD *)(a3 + 64) = 0u;
    *(_OWORD *)(a3 + 16) = 0u;
    *(_OWORD *)(a3 + 32) = 0u;
    *(_OWORD *)a3 = 0u;
  }
  return result;
}

uint64_t UserEncodingService.deinit()
{
  swift_release();
  sub_1264C(v0 + 24);
  return v0;
}

uint64_t UserEncodingService.__deallocating_deinit()
{
  swift_release();
  sub_1264C(v0 + 24);

  return swift_deallocClassInstance();
}

uint64_t sub_12709C(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B06F4;
  return TabiBookScorer.score(_:configuration:)(a1);
}

uint64_t sub_127134(uint64_t a1, void *(*a2)(uint64_t *__return_ptr, void, double))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v12 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v10 << 6))
  {
    uint64_t result = (uint64_t)a2(&v32, *(void *)(*(void *)(a1 + 48) + 8 * i), *(double *)(*(void *)(a1 + 56) + 8 * i));
    uint64_t v14 = v38;
    if (v38)
    {
      uint64_t v25 = v32;
      char v26 = v33;
      uint64_t v27 = v34;
      char v28 = v35;
      uint64_t v29 = v36;
      char v30 = v37;
      long long v31 = v39;
      uint64_t v18 = v40;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_41CBC(0, v11[2] + 1, 1, v11);
        uint64_t v11 = (void *)result;
      }
      unint64_t v19 = v11;
      unint64_t v20 = v11[2];
      unint64_t v21 = v19;
      unint64_t v22 = v19[3];
      unint64_t v23 = v20 + 1;
      if (v20 >= v22 >> 1)
      {
        uint64_t result = (uint64_t)sub_41CBC((void *)(v22 > 1), v20 + 1, 1, v21);
        unint64_t v23 = v20 + 1;
        unint64_t v21 = (void *)result;
      }
      v21[2] = v23;
      BOOL v24 = &v21[10 * v20];
      uint64_t v11 = v21;
      v24[4] = v25;
      *((unsigned char *)v24 + 40) = v26 & 1;
      v24[6] = v27;
      *((unsigned char *)v24 + 56) = v28 & 1;
      v24[8] = v29;
      *((unsigned char *)v24 + 72) = v30;
      v24[10] = v14;
      *(_OWORD *)(v24 + 11) = v31;
      v24[13] = v18;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v8) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v10);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v11;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1273CC(uint64_t a1)
{
  uint64_t v1 = _swiftEmptyDictionarySingleton;
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return (uint64_t)v1;
  }
  uint64_t v3 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v48 = v1;
    char v44 = *((unsigned char *)v3 - 8);
    uint64_t v45 = *v3;
    char v46 = *((unsigned char *)v3 + 8);
    uint64_t v5 = v3[2];
    char v6 = *((unsigned char *)v3 + 24);
    uint64_t v7 = v3[4];
    uint64_t v47 = v3[5];
    long long v42 = v3;
    uint64_t v8 = v3[6];
    uint64_t v9 = *(v3 - 2);
    uint64_t v10 = sub_56168(v9);
    unint64_t v12 = v1;
    uint64_t v13 = v1[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      break;
    }
    unint64_t v16 = v10;
    char v17 = v11;
    uint64_t v41 = v2;
    uint64_t v18 = v12[3];
    char v40 = v6;
    sub_5480C(v5, v6);
    uint64_t v43 = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v19 = v9;
    if (v18 < v15)
    {
      sub_11A544(v15, 1);
      uint64_t v48 = _swiftEmptyDictionarySingleton;
      uint64_t v20 = sub_56168(v9);
      if ((v17 & 1) != (v21 & 1)) {
        goto LABEL_20;
      }
      unint64_t v16 = v20;
    }
    uint64_t v22 = 8 * v16;
    if (v17)
    {
      uint64_t v23 = v48[7];
      BOOL v24 = *(void **)(v23 + 8 * v16);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      *(void *)(v23 + 8 * v16) = v24;
      uint64_t v26 = v41;
      if (isUniquelyReferenced_nonNull_native)
      {
        unint64_t v27 = v16;
      }
      else
      {
        BOOL v24 = sub_426F8(0, v24[2] + 1, 1, v24);
        unint64_t v27 = v16;
        *(void *)(v23 + 8 * v16) = v24;
      }
      unint64_t v29 = v24[2];
      unint64_t v28 = v24[3];
      unint64_t v30 = v29 + 1;
      uint64_t v31 = v43;
      uint64_t v1 = v48;
      if (v29 >= v28 >> 1)
      {
        uint64_t v32 = sub_426F8((void *)(v28 > 1), v29 + 1, 1, v24);
        unint64_t v30 = v29 + 1;
        uint64_t v1 = v48;
        BOOL v24 = v32;
        uint64_t v31 = v43;
        *(void *)(v23 + 8 * v27) = v32;
      }
      v24[2] = v30;
      uint64_t v4 = &v24[9 * v29];
      v4[4] = v19;
      *((unsigned char *)v4 + 40) = v44;
      v4[6] = v45;
      *((unsigned char *)v4 + 56) = v46;
      v4[8] = v5;
      *((unsigned char *)v4 + 72) = v40;
      v4[10] = v7;
      v4[11] = v47;
      v4[12] = v31;
    }
    else
    {
      sub_12124(&qword_26D418);
      uint64_t v33 = swift_allocObject();
      *(_OWORD *)(v33 + 16) = xmmword_1FD2A0;
      *(void *)(v33 + 32) = v9;
      *(unsigned char *)(v33 + 40) = v44;
      *(void *)(v33 + 48) = v45;
      *(unsigned char *)(v33 + 56) = v46;
      *(void *)(v33 + 64) = v5;
      *(unsigned char *)(v33 + 72) = v6;
      *(void *)(v33 + 80) = v7;
      *(void *)(v33 + 88) = v47;
      *(void *)(v33 + 96) = v43;
      unint64_t v34 = v16 >> 6;
      char v35 = v16;
      uint64_t v1 = v48;
      v48[v34 + 8] |= 1 << v35;
      *(void *)(v48[6] + v22) = v9;
      *(void *)(v48[7] + v22) = v33;
      uint64_t v36 = v48[2];
      BOOL v37 = __OFADD__(v36, 1);
      uint64_t v38 = v36 + 1;
      uint64_t v26 = v41;
      if (v37) {
        goto LABEL_19;
      }
      v48[2] = v38;
    }
    uint64_t v3 = v42 + 9;
    uint64_t v2 = v26 - 1;
    if (!v2) {
      return (uint64_t)v1;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

unint64_t sub_1276C8()
{
  unint64_t result = qword_270300;
  if (!qword_270300)
  {
    type metadata accessor for BookScoringWork();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270300);
  }
  return result;
}

uint64_t sub_127720(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for BookScoringWork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_12777C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  return sub_126F60(a1, *(void *)(v3 + 16), a2, a3);
}

uint64_t type metadata accessor for TabiBookScorer()
{
  return self;
}

uint64_t method lookup function for TabiBookScorer(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabiBookScorer);
}

unint64_t sub_1277C4()
{
  unint64_t result = qword_2705D8;
  if (!qword_2705D8)
  {
    sub_121C4(&qword_2705E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2705D8);
  }
  return result;
}

uint64_t sub_127824@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1278A4(a1, (uint64_t (*)(void))type metadata accessor for BookRecommendationService, (uint64_t)&off_265040, a2);
}

uint64_t sub_127844@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1278A4(a1, (uint64_t (*)(void))type metadata accessor for NextInSeriesProcessorService, (uint64_t)&off_25EDA0, a2);
}

uint64_t sub_127864@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1278A4(a1, (uint64_t (*)(void))type metadata accessor for BookRecommendationPostHydrationFilteringService, (uint64_t)&protocol witness table for BookRecommendationPostHydrationFilteringService, a2);
}

uint64_t sub_127884@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1278A4(a1, (uint64_t (*)(void))type metadata accessor for BookRecommendationService, (uint64_t)&off_265058, a2);
}

uint64_t sub_1278A4@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v7 = a2(0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_127928()
{
  sub_12124(&qword_2706A0);
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyArrayStorage;
  return result;
}

uint64_t sub_127960(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (!v22)
  {
    __break(1u);
    goto LABEL_8;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_2706C0);
  uint64_t result = sub_1FB260();
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E918);
  uint64_t result = sub_1FB260();
  if (!v18)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E910);
  uint64_t result = sub_1FB260();
  if (!v16)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_270688);
  uint64_t result = sub_1FB260();
  if (v14)
  {
    uint64_t v3 = sub_51B20((uint64_t)v19, v20);
    __chkstk_darwin(v3);
    uint64_t v5 = (uint64_t *)((char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v6 + 16))(v5);
    uint64_t v7 = sub_51B20((uint64_t)v15, v16);
    __chkstk_darwin(v7);
    uint64_t v9 = (uint64_t *)((char *)&v12 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v10 + 16))(v9);
    char v11 = sub_128010(&v21, *v5, &v17, *v9, &v13);
    sub_1264C((uint64_t)v15);
    sub_1264C((uint64_t)v19);
    return (uint64_t)v11;
  }
LABEL_11:
  __break(1u);
  return result;
}

uint64_t sub_127C44(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E990);
  uint64_t result = sub_1FB260();
  if (v4)
  {
    type metadata accessor for NextInSeriesProcessorService();
    uint64_t v2 = swift_allocObject();
    sub_37C30(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_127CD4(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (!v25)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E990);
  uint64_t result = sub_1FB260();
  if (!v23)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = type metadata accessor for StringOperationFlattener();
  uint64_t v4 = swift_allocObject();
  sub_12124(&qword_2706A8);
  uint64_t v5 = swift_allocObject();
  *(_OWORD *)(v5 + 16) = xmmword_2055D0;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_2706B0);
  uint64_t result = sub_1FB260();
  uint64_t v6 = v20;
  if (!v20)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v7 = v21;
  uint64_t v8 = sub_5D64(&v19, v20);
  *(void *)(v5 + 56) = v6;
  *(void *)(v5 + 64) = v7[1];
  uint64_t v9 = sub_51BD4((uint64_t *)(v5 + 32));
  (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(v9, v8, v6);
  uint64_t v10 = swift_allocObject();
  *(void *)(v5 + 96) = v3;
  *(void *)(v5 + 104) = &protocol witness table for StringOperationFlattener;
  *(void *)(v5 + 72) = v10;
  sub_1264C((uint64_t)&v19);
  uint64_t v11 = type metadata accessor for AggregateFlattener();
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = v5;
  uint64_t v20 = v11;
  long long v21 = &protocol witness table for AggregateFlattener;
  *(void *)&long long v19 = v12;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E938);
  uint64_t result = sub_1FB260();
  if (v18)
  {
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_2706B8);
    sub_1FB880();
    sub_1FB240();
    swift_bridgeObjectRelease();
    uint64_t v15 = v3;
    uint64_t v16 = &protocol witness table for StringOperationFlattener;
    *(void *)&long long v14 = v4;
    type metadata accessor for BookRecommendationPostHydrationFilteringService();
    uint64_t v13 = swift_allocObject();
    *(void *)(v13 + 224) = 0;
    sub_37C30(&v24, v13 + 16);
    sub_37C30(&v22, v13 + 56);
    sub_37C30(&v14, v13 + 136);
    sub_37C30(&v19, v13 + 96);
    sub_37C30(&v17, v13 + 176);
    *(unsigned char *)(v13 + 216) = &type metadata for UseV2AndMetadata & 1;
    return v13;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for Assembly()
{
  return self;
}

void *sub_128010(long long *a1, uint64_t a2, long long *a3, uint64_t a4, long long *a5)
{
  uint64_t v10 = type metadata accessor for DelegatingCollectionService();
  v27[3] = v10;
  v27[4] = &off_2636B0;
  v27[0] = a2;
  uint64_t v11 = type metadata accessor for DelegatingBookScorer();
  uint64_t v25 = v11;
  uint64_t v26 = &off_25CA88;
  v24[0] = a4;
  type metadata accessor for BookRecommendationService();
  uint64_t v12 = (void *)swift_allocObject();
  uint64_t v13 = sub_51B20((uint64_t)v27, v10);
  __chkstk_darwin(v13);
  uint64_t v15 = (void *)((char *)v24 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v16 + 16))(v15);
  uint64_t v17 = sub_51B20((uint64_t)v24, v25);
  __chkstk_darwin(v17);
  long long v19 = (void *)((char *)v24 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v20 + 16))(v19);
  uint64_t v21 = *v15;
  uint64_t v22 = *v19;
  v12[10] = v10;
  v12[11] = &off_2636B0;
  v12[7] = v21;
  v12[20] = v11;
  v12[21] = &off_25CA88;
  v12[17] = v22;
  sub_37C30(a1, (uint64_t)(v12 + 2));
  sub_37C30(a3, (uint64_t)(v12 + 12));
  sub_37C30(a5, (uint64_t)(v12 + 22));
  sub_1264C((uint64_t)v24);
  sub_1264C((uint64_t)v27);
  return v12;
}

uint64_t sub_128240()
{
  uint64_t v0 = sub_1FB350();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB280();
  sub_12124(&qword_270680);
  sub_1FB310();
  swift_release();
  uint64_t v4 = enum case for Scope.singleton(_:);
  uint64_t v5 = *(void (**)(char *, uint64_t, uint64_t))(v1 + 104);
  v5(v3, enum case for Scope.singleton(_:), v0);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v6 = *(void (**)(char *, uint64_t))(v1 + 8);
  v6(v3, v0);
  sub_1FB280();
  sub_12124(&qword_270688);
  sub_1FB310();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1FB280();
  sub_12124(&qword_270690);
  sub_1FB310();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1FB280();
  sub_12124(&qword_270698);
  sub_1FB310();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1FB280();
  sub_12124(&qword_2706A0);
  sub_1FB300();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1FB290();
  type metadata accessor for BookRecommendationService();
  sub_1FB300();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1FB290();
  type metadata accessor for NextInSeriesProcessorService();
  sub_1FB300();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  v6(v3, v0);
  sub_1FB290();
  type metadata accessor for BookRecommendationPostHydrationFilteringService();
  sub_1FB300();
  swift_release();
  v5(v3, v4, v0);
  sub_1FB230();
  swift_release();
  swift_release();
  return ((uint64_t (*)(char *, uint64_t))v6)(v3, v0);
}

uint64_t sub_128788@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  int64_t v4 = *(void *)(a1 + 16);
  if (v4)
  {
    uint64_t result = sub_46A9C(0, v4, 0);
    uint64_t v7 = (double *)(a1 + 104);
    while (1)
    {
      uint64_t v8 = *((void *)v7 - 9);
      if (v8 < 0) {
        break;
      }
      double v9 = *v7;
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v10 = _swiftEmptyArrayStorage[3];
      if (v11 >= v10 >> 1) {
        uint64_t result = sub_46A9C(v10 > 1, v11 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v11 + 1;
      uint64_t v12 = (float *)&_swiftEmptyArrayStorage[3 * v11];
      *((void *)v12 + 4) = v8;
      float v13 = v9;
      v12[10] = v13;
      *((unsigned char *)v12 + 44) = 0;
      *((void *)v12 + 6) = 0;
      v7 += 10;
      if (!--v4) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_7:
    uint64_t result = type metadata accessor for SeedBasedRecommendationRequest(0);
    *(unsigned char *)a2 = *(unsigned char *)(v2 + *(int *)(result + 44));
    *(void *)(a2 + 8) = _swiftEmptyArrayStorage;
  }
  return result;
}

uint64_t sub_12889C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_12898C(a1);
  uint64_t result = type metadata accessor for SeedBasedRecommendationRequest(0);
  unint64_t v8 = *(unsigned __int8 *)(v3 + *(int *)(result + 32));
  uint64_t v9 = *(void *)(v3 + *(int *)(result + 40)) & 2;
  if ((*(void *)(v3 + *(int *)(result + 40)) & 1) == 0)
  {
    if (!v9)
    {
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v10 = 0;
      *(unsigned char *)(v10 + 8) = 7;
      swift_willThrow();
      swift_bridgeObjectRelease();
      return sub_3781C(0, v8);
    }
    uint64_t v9 = 1;
  }
  if (a2 < (uint64_t)0xFFFFFFFF80000000)
  {
    __break(1u);
  }
  else if (a2 <= 0x7FFFFFFF)
  {
    *(void *)a3 = 0;
    *(void *)(a3 + 8) = v8;
    *(void *)(a3 + 16) = v6;
    *(void *)(a3 + 24) = 0;
    *(void *)(a3 + 32) = v9;
    *(_DWORD *)(a3 + 40) = a2;
    *(unsigned char *)(a3 + 44) = 0;
    *(void *)(a3 + 48) = 0;
    return result;
  }
  __break(1u);
  return result;
}

_UNKNOWN **sub_12898C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46894(0, v1, 0);
    uint64_t v3 = _swiftEmptyArrayStorage;
    uint64_t result = (_UNKNOWN **)sub_14D538(a1);
    uint64_t v5 = (uint64_t)result;
    uint64_t v7 = v6;
    char v9 = v8 & 1;
    while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v5 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v5) & 1) == 0) {
        goto LABEL_15;
      }
      if (*(_DWORD *)(a1 + 36) != v7) {
        goto LABEL_16;
      }
      uint64_t v10 = *(void *)(*(void *)(a1 + 48) + 8 * v5);
      if (v10 < 0) {
        goto LABEL_17;
      }
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_46894(v11 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
      uint64_t result = (_UNKNOWN **)sub_14D5DC(v5, v7, v9 & 1, a1);
      uint64_t v5 = (uint64_t)result;
      uint64_t v7 = v13;
      char v9 = v14 & 1;
      if (!--v1)
      {
        sub_55F94((uint64_t)result, v13, v14 & 1);
        return (_UNKNOWN **)v3;
      }
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
  }
  else
  {
    return &off_256AC8;
  }
  return result;
}

uint64_t sub_128AF8@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *v1;
  switch(*((unsigned char *)v1 + 48))
  {
    case 1:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v9 = v2;
      *(unsigned char *)(v9 + 8) = 0;
      goto LABEL_7;
    case 2:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v10 = v2;
      char v11 = 1;
      goto LABEL_6;
    case 3:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v10 = v2;
      char v11 = 2;
LABEL_6:
      *(unsigned char *)(v10 + 8) = v11;
LABEL_7:
      swift_bridgeObjectRetain();
      goto LABEL_9;
    case 4:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v12 = v2;
      *(unsigned char *)(v12 + 8) = 3;
LABEL_9:
      uint64_t result = swift_willThrow();
      break;
    default:
      uint64_t v4 = v1[4];
      uint64_t v3 = v1[5];
      uint64_t v6 = v1[2];
      uint64_t v5 = v1[3];
      uint64_t v7 = v1[1];
      *a1 = v2;
      a1[1] = v7;
      a1[2] = v6;
      a1[3] = v5;
      a1[4] = v4;
      a1[5] = v3;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = swift_bridgeObjectRetain();
      break;
  }
  return result;
}

void *sub_128C70()
{
  if (!*(void *)v0)
  {
    sub_1290DC();
    swift_allocError();
    *(void *)uint64_t v31 = 1;
    *(unsigned char *)(v31 + 8) = 7;
    return (void *)swift_willThrow();
  }
  uint64_t v1 = *(void *)(*(void *)v0 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v2 = (void *)(swift_bridgeObjectRetain() + 48);
  uint64_t v32 = _swiftEmptyArrayStorage;
  while (1)
  {
    uint64_t v3 = *(v2 - 2);
    if (v3 < 0) {
      break;
    }
    uint64_t v4 = *v2;
    if (*((unsigned char *)v2 - 4))
    {
      char v5 = 4;
LABEL_21:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v23 = v3;
      *(unsigned char *)(v23 + 8) = v5;
      swift_willThrow();
      if (qword_26C3D8 != -1) {
        swift_once();
      }
      uint64_t v24 = sub_1FB430();
      sub_6DBC8(v24, (uint64_t)qword_2A5C70);
      swift_errorRetain();
      swift_errorRetain();
      swift_bridgeObjectRetain();
      uint64_t v25 = sub_1FB410();
      os_log_type_t v26 = sub_1FBDB0();
      if (os_log_type_enabled(v25, v26))
      {
        uint64_t v27 = swift_slowAlloc();
        unint64_t v28 = (void *)swift_slowAlloc();
        *(_DWORD *)uint64_t v27 = 134218242;
        *(void *)(v27 + 4) = v3;
        swift_bridgeObjectRelease();
        *(_WORD *)(v27 + 12) = 2112;
        swift_errorRetain();
        uint64_t v29 = _swift_stdlib_bridgeErrorToNSError();
        *(void *)(v27 + 14) = v29;
        *unint64_t v28 = v29;
        swift_errorRelease();
        swift_errorRelease();
        _os_log_impl(&dword_0, v25, v26, "failed to create recommended book for %lld with error %@", (uint8_t *)v27, 0x16u);
        sub_12124(&qword_26F4F8);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();

        swift_errorRelease();
      }
      else
      {
        swift_errorRelease();
        swift_bridgeObjectRelease();
        swift_errorRelease();
        swift_errorRelease();
      }
      goto LABEL_5;
    }
    if (!v4)
    {
      char v5 = 5;
      goto LABEL_21;
    }
    if (!*(void *)(v4 + 16))
    {
      char v5 = 6;
      goto LABEL_21;
    }
    float v6 = *((float *)v2 - 2);
    uint64_t v7 = *(void *)(v4 + 32);
    sub_12124(&qword_2706D0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
    *(void *)(inited + 32) = 0;
    *(void *)(inited + 40) = 0;
    *(double *)(inited + 48) = v6;
    sub_12124(&qword_270430);
    uint64_t v9 = (void *)sub_1FC2A0();
    swift_retain();
    uint64_t v10 = *(void *)(inited + 32);
    unint64_t v11 = *(void *)(inited + 40);
    uint64_t v12 = *(void *)(inited + 48);
    sub_2F5CC(v10, v11);
    unint64_t v13 = sub_4CD3C(v10, v11);
    if (v14)
    {
      __break(1u);
LABEL_30:
      __break(1u);
      break;
    }
    v9[(v13 >> 6) + 8] |= 1 << v13;
    uint64_t v15 = (uint64_t *)(v9[6] + 16 * v13);
    *uint64_t v15 = v10;
    v15[1] = v11;
    *(void *)(v9[7] + 8 * v13) = v12;
    uint64_t v16 = v9[2];
    BOOL v17 = __OFADD__(v16, 1);
    uint64_t v18 = v16 + 1;
    if (v17) {
      goto LABEL_30;
    }
    v9[2] = v18;
    swift_release();
    swift_bridgeObjectRelease();
    if (v7 < 0) {
      break;
    }
    if (swift_isUniquelyReferenced_nonNull_native()) {
      long long v19 = v32;
    }
    else {
      long long v19 = sub_42490(0, v32[2] + 1, 1, v32);
    }
    unint64_t v21 = v19[2];
    unint64_t v20 = v19[3];
    if (v21 >= v20 >> 1) {
      long long v19 = sub_42490((void *)(v20 > 1), v21 + 1, 1, v19);
    }
    v19[2] = v21 + 1;
    uint64_t v32 = v19;
    uint64_t v22 = &v19[3 * v21];
    v22[4] = v3;
    v22[5] = v9;
    v22[6] = v7;
LABEL_5:
    v2 += 3;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      return v32;
    }
  }
  uint64_t result = (void *)sub_1FC210();
  __break(1u);
  return result;
}

unint64_t sub_1290DC()
{
  unint64_t result = qword_2706C8;
  if (!qword_2706C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2706C8);
  }
  return result;
}

void *sub_129130()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1)
  {
    return (void *)sub_16BCD0((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return _swiftEmptyDictionarySingleton;
  }
  for (unint64_t i = (unsigned char *)(swift_bridgeObjectRetain() + 72); ; i += 48)
  {
    if (*(i - 32)) {
      goto LABEL_6;
    }
    if (*(i - 16)) {
      goto LABEL_6;
    }
    int v5 = *(i - 15);
    if (v5 == 2 || (*i & 1) != 0) {
      goto LABEL_6;
    }
    uint64_t v6 = *((void *)i - 5);
    if (v6 < 0) {
      goto LABEL_35;
    }
    uint64_t v7 = *((void *)i - 3);
    if (v7 < 0) {
      goto LABEL_35;
    }
    if ((~*((void *)i - 1) & 0x7FF0000000000000) == 0) {
      break;
    }
    double v8 = *((double *)i - 1);
    if (v8 <= -9.22337204e18) {
      goto LABEL_31;
    }
    if (v8 >= 9.22337204e18) {
      goto LABEL_32;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = sub_56168(v6);
    uint64_t v12 = _swiftEmptyDictionarySingleton[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t v14 = v12 + v13;
    if (__OFADD__(v12, v13)) {
      goto LABEL_33;
    }
    char v15 = v10;
    if (_swiftEmptyDictionarySingleton[3] >= v14)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_1230D0();
      }
    }
    else
    {
      sub_11C874(v14, isUniquelyReferenced_nonNull_native);
      uint64_t v16 = sub_56168(v6);
      if ((v15 & 1) != (v17 & 1)) {
        goto LABEL_36;
      }
      unint64_t v11 = v16;
    }
    char v18 = v5 & 1;
    uint64_t v19 = (uint64_t)v8;
    if (v15)
    {
      uint64_t v4 = _swiftEmptyDictionarySingleton[7] + 40 * v11;
      *(void *)uint64_t v4 = v19;
      *(void *)(v4 + 8) = v7;
      *(unsigned char *)(v4 + 16) = v18;
      *(void *)(v4 + 24) = 0;
      *(unsigned char *)(v4 + 32) = 1;
    }
    else
    {
      _swiftEmptyDictionarySingleton[(v11 >> 6) + 8] |= 1 << v11;
      *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v11) = v6;
      uint64_t v20 = _swiftEmptyDictionarySingleton[7] + 40 * v11;
      *(void *)uint64_t v20 = v19;
      *(void *)(v20 + 8) = v7;
      *(unsigned char *)(v20 + 16) = v18;
      *(void *)(v20 + 24) = 0;
      *(unsigned char *)(v20 + 32) = 1;
      uint64_t v21 = _swiftEmptyDictionarySingleton[2];
      BOOL v22 = __OFADD__(v21, 1);
      uint64_t v23 = v21 + 1;
      if (v22) {
        goto LABEL_34;
      }
      _swiftEmptyDictionarySingleton[2] = v23;
    }
    swift_bridgeObjectRelease();
LABEL_6:
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  sub_1FC210();
  __break(1u);
LABEL_36:
  unint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

void *sub_1293EC()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!v1)
  {
    return (void *)sub_16B8EC(_swiftEmptyArrayStorage);
  }
  uint64_t v31 = *(void *)(v1 + 16);
  if (!v31) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v30 = v1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v4 = (uint64_t *)(v30 + 16 * v2);
    uint64_t v5 = *v4;
    if (*v4 < 0) {
      break;
    }
    uint64_t v6 = v4[1];
    int64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      sub_46538(0, v7, 0);
      uint64_t v32 = v6;
      uint64_t v8 = *(void *)(v6 + 32);
      if (v8 < 0) {
        break;
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_46538(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      int64_t v11 = v7 - 1;
      if (v7 != 1)
      {
        unint64_t v25 = v10 + 5;
        os_log_type_t v26 = (uint64_t *)(v32 + 40);
        while (v11)
        {
          uint64_t v27 = *v26;
          if (*v26 < 0) {
            goto LABEL_40;
          }
          unint64_t v28 = _swiftEmptyArrayStorage[3];
          if (v25 - 4 >= v28 >> 1) {
            sub_46538(v28 > 1, v25 - 3, 1);
          }
          _swiftEmptyArrayStorage[2] = v25 - 3;
          _swiftEmptyArrayStorage[v25++] = v27;
          ++v26;
          if (!--v11) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        break;
      }
LABEL_12:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_56168(v5);
    uint64_t v15 = _swiftEmptyDictionarySingleton[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      goto LABEL_38;
    }
    char v18 = v13;
    if (_swiftEmptyDictionarySingleton[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_12074C();
        if (v18) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_117318(v17, isUniquelyReferenced_nonNull_native);
      uint64_t v19 = sub_56168(v5);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_41;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_4:
        uint64_t v3 = _swiftEmptyDictionarySingleton[7];
        swift_bridgeObjectRelease();
        *(void *)(v3 + 8 * v14) = _swiftEmptyArrayStorage;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v21 = 8 * v14;
    *(void *)(_swiftEmptyDictionarySingleton[6] + v21) = v5;
    *(void *)(_swiftEmptyDictionarySingleton[7] + v21) = _swiftEmptyArrayStorage;
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_39;
    }
    _swiftEmptyDictionarySingleton[2] = v24;
LABEL_5:
    ++v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2 == v31)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
LABEL_40:
  sub_1FC210();
  __break(1u);
LABEL_41:
  unint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

void *sub_129750()
{
  uint64_t v1 = *(void *)(v0 + 40);
  if (!v1)
  {
    return (void *)sub_16B8EC(_swiftEmptyArrayStorage);
  }
  uint64_t v31 = *(void *)(v1 + 16);
  if (!v31) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v30 = v1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v4 = (uint64_t *)(v30 + 16 * v2);
    uint64_t v5 = *v4;
    if (*v4 < 0) {
      break;
    }
    uint64_t v6 = v4[1];
    int64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      sub_46538(0, v7, 0);
      uint64_t v32 = v6;
      uint64_t v8 = *(void *)(v6 + 32);
      if (v8 < 0) {
        break;
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_46538(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      int64_t v11 = v7 - 1;
      if (v7 != 1)
      {
        unint64_t v25 = v10 + 5;
        os_log_type_t v26 = (uint64_t *)(v32 + 40);
        while (v11)
        {
          uint64_t v27 = *v26;
          if (*v26 < 0) {
            goto LABEL_40;
          }
          unint64_t v28 = _swiftEmptyArrayStorage[3];
          if (v25 - 4 >= v28 >> 1) {
            sub_46538(v28 > 1, v25 - 3, 1);
          }
          _swiftEmptyArrayStorage[2] = v25 - 3;
          _swiftEmptyArrayStorage[v25++] = v27;
          ++v26;
          if (!--v11) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        break;
      }
LABEL_12:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_56168(v5);
    uint64_t v15 = _swiftEmptyDictionarySingleton[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      goto LABEL_38;
    }
    char v18 = v13;
    if (_swiftEmptyDictionarySingleton[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_12074C();
        if (v18) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_117318(v17, isUniquelyReferenced_nonNull_native);
      uint64_t v19 = sub_56168(v5);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_41;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_4:
        uint64_t v3 = _swiftEmptyDictionarySingleton[7];
        swift_bridgeObjectRelease();
        *(void *)(v3 + 8 * v14) = _swiftEmptyArrayStorage;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v21 = 8 * v14;
    *(void *)(_swiftEmptyDictionarySingleton[6] + v21) = v5;
    *(void *)(_swiftEmptyDictionarySingleton[7] + v21) = _swiftEmptyArrayStorage;
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_39;
    }
    _swiftEmptyDictionarySingleton[2] = v24;
LABEL_5:
    ++v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2 == v31)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
LABEL_40:
  sub_1FC210();
  __break(1u);
LABEL_41:
  unint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_129AB4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v4 = (void *)a1[1];
  uint64_t v6 = (void *)a1[2];
  uint64_t v5 = (void *)a1[3];
  uint64_t v7 = *a2;
  uint64_t v8 = (void *)a2[1];
  unint64_t v10 = (void *)a2[2];
  unint64_t v9 = (void *)a2[3];
  unint64_t v28 = (void *)a2[5];
  uint64_t v29 = (void *)a1[5];
  if (*(void *)(*a1 + 16))
  {
    uint64_t v11 = *(void *)(*a1 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v11 = 0;
  }
  uint64_t v31 = v11;
  if (*(void *)(v7 + 16))
  {
    uint64_t v12 = *(void *)(v7 + 32);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v12 = 0;
  }
  uint64_t v30 = v12;
  sub_129C8C(&v31, &v30, &v32);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  char v13 = v32;
  sub_12124(&qword_26D4E0);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_1FD2A0;
  *(void *)(v14 + 32) = v13;
  if (v4) {
    uint64_t v15 = v4;
  }
  else {
    uint64_t v15 = _swiftEmptyArrayStorage;
  }
  if (v8) {
    BOOL v16 = v8;
  }
  else {
    BOOL v16 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = v15;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_AA5A8((uint64_t)v16);
  uint64_t v17 = v32;
  if (v6) {
    char v18 = v6;
  }
  else {
    char v18 = _swiftEmptyArrayStorage;
  }
  if (v10) {
    uint64_t v19 = v10;
  }
  else {
    uint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = v18;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_AA458((uint64_t)v19);
  char v20 = v32;
  if (v5) {
    uint64_t v21 = v5;
  }
  else {
    uint64_t v21 = _swiftEmptyArrayStorage;
  }
  if (v9) {
    uint64_t v22 = v9;
  }
  else {
    uint64_t v22 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = v21;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_AA2D4((uint64_t)v22);
  BOOL v23 = v32;
  if (v29) {
    uint64_t v24 = v29;
  }
  else {
    uint64_t v24 = _swiftEmptyArrayStorage;
  }
  if (v28) {
    unint64_t v25 = v28;
  }
  else {
    unint64_t v25 = _swiftEmptyArrayStorage;
  }
  uint64_t v32 = v24;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t result = sub_AA2B4((uint64_t)v25);
  uint64_t v27 = v32;
  *a3 = v14;
  a3[1] = (uint64_t)v17;
  a3[2] = (uint64_t)v20;
  a3[3] = (uint64_t)v23;
  a3[4] = 0;
  a3[5] = (uint64_t)v27;
  return result;
}

uint64_t sub_129C8C@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  uint64_t v4 = (void *)*a1;
  uint64_t v5 = (void *)*a2;
  uint64_t v21 = _swiftEmptyDictionarySingleton;
  if (v4) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  if (v5) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  uint64_t v17 = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_AA158((uint64_t)v7);
  uint64_t v8 = v17[2];
  if (v8)
  {
    swift_bridgeObjectRetain();
    unint64_t v9 = v17 + 6;
    do
    {
      unint64_t v10 = (void *)*(v9 - 2);
      int v11 = *((_DWORD *)v9 - 2);
      char v12 = *((unsigned char *)v9 - 4);
      uint64_t v13 = *v9;
      v9 += 3;
      uint64_t v17 = v10;
      int v18 = v11;
      char v19 = v12;
      uint64_t v20 = v13;
      sub_129DA0((uint64_t)&v17, (uint64_t *)&v21);
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v14 = swift_bridgeObjectRetain();
  uint64_t v15 = sub_4C144(v14);
  uint64_t result = swift_bridgeObjectRelease_n();
  *a3 = v15;
  return result;
}

uint64_t sub_129DA0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v4 = *(unsigned int *)(a1 + 8);
  unsigned __int8 v5 = *(unsigned char *)(a1 + 12);
  uint64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = *a2;
  if (*(void *)(*a2 + 16) && (unint64_t v8 = sub_4CE18(*(void *)a1), (v9 & 1) != 0))
  {
    uint64_t v10 = *(void *)(v7 + 56) + 24 * v8;
    uint64_t v11 = *(void *)v10;
    float v12 = *(float *)(v10 + 8);
    float v13 = 0.0;
    if (*(unsigned char *)(v10 + 12)) {
      float v12 = 0.0;
    }
    if (v12 > 0.0) {
      float v13 = v12;
    }
    if (v12 <= *(float *)&v4) {
      float v12 = *(float *)&v4;
    }
    if (v5) {
      float v12 = v13;
    }
    unint64_t v14 = LODWORD(v12);
    if (*(void *)(v10 + 16)) {
      uint64_t v15 = *(void **)(v10 + 16);
    }
    else {
      uint64_t v15 = _swiftEmptyArrayStorage;
    }
    if (v6) {
      BOOL v16 = (void *)v6;
    }
    else {
      BOOL v16 = _swiftEmptyArrayStorage;
    }
    uint64_t v21 = v15;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    sub_AA6FC((uint64_t)v16);
    uint64_t v17 = (uint64_t)v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v22 = *a2;
    *a2 = 0x8000000000000000;
    sub_71450(v11, v14, v17, v3, isUniquelyReferenced_nonNull_native);
    *a2 = v22;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRetain();
    char v19 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *a2;
    *a2 = 0x8000000000000000;
    sub_71450(v3, v4 | ((unint64_t)v5 << 32), v6, v3, v19);
    *a2 = v23;
  }
  return swift_bridgeObjectRelease();
}

void *_s15RecommendedBookVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

void *_s15RecommendedBookVwta(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  return a1;
}

ValueMetadata *_s15RecommendedBookVMa()
{
  return &_s15RecommendedBookVN;
}

uint64_t static Transport.Recommend.id.getter()
{
  return 0x6E656D6D6F636572;
}

uint64_t Transport.Recommend.Input.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  uint64_t v6 = v1[8];
  uint64_t v7 = v1[9];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  return sub_12A038(v2, v3);
}

uint64_t sub_12A038(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 Transport.Recommend.Input.body.setter(__n128 *a1)
{
  __n128 v5 = a1[1];
  __n128 v6 = *a1;
  unint64_t v2 = a1[2].n128_u64[0];
  unint64_t v3 = a1[2].n128_u64[1];
  sub_12A0F8(v1[2].n128_i64[0], v1[2].n128_i64[1]);
  __n128 result = v5;
  v1[2] = v6;
  v1[3] = v5;
  v1[4].n128_u64[0] = v2;
  v1[4].n128_u64[1] = v3;
  return result;
}

uint64_t sub_12A0F8(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 Transport.Recommend.Input.init(xAppleRequestUUID:xAppleUserExperimentIds:body:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  long long v6 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a6 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a6 + 48) = v6;
  __n128 result = *(__n128 *)(a5 + 32);
  *(__n128 *)(a6 + 64) = result;
  return result;
}

uint64_t static Transport.RecommendV2.id.getter()
{
  return 0x6E656D6D6F636572;
}

uint64_t Transport.RecommendV2.Input.body.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[4];
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  uint64_t v5 = v1[7];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  return sub_12A1AC(v2, v3);
}

uint64_t sub_12A1AC(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

__n128 Transport.RecommendV2.Input.body.setter(__n128 *a1)
{
  __n128 v5 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  sub_12A24C(v1[4], v1[5]);
  __n128 result = v5;
  *((__n128 *)v1 + 2) = v5;
  v1[6] = v2;
  v1[7] = v3;
  return result;
}

uint64_t sub_12A24C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

__n128 Transport.RecommendV2.Input.init(xAppleRequestUUID:xAppleUserExperimentIds:body:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  *(void *)a6 = a1;
  *(void *)(a6 + 8) = a2;
  *(void *)(a6 + 16) = a3;
  *(void *)(a6 + 24) = a4;
  __n128 result = *(__n128 *)a5;
  long long v7 = *(_OWORD *)(a5 + 16);
  *(_OWORD *)(a6 + 32) = *(_OWORD *)a5;
  *(_OWORD *)(a6 + 48) = v7;
  return result;
}

unint64_t static Transport.PersonalizationMetadata.id.getter()
{
  return 0xD000000000000017;
}

uint64_t Transport.PersonalizationMetadata.Input.body.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 16);
  return swift_bridgeObjectRetain();
}

uint64_t Transport.PersonalizationMetadata.Input.body.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = v2;
  return result;
}

uint64_t Transport.PersonalizationMetadata.Input.init(xAppleRequestUUID:body:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, void *a4@<X8>)
{
  uint64_t v4 = *a3;
  *a4 = result;
  a4[1] = a2;
  a4[2] = v4;
  return result;
}

ValueMetadata *type metadata accessor for Transport.Recommend()
{
  return &type metadata for Transport.Recommend;
}

uint64_t _s9RecommendO5InputVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s9RecommendO5InputVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = v6;
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    uint64_t v7 = *(void *)(a2 + 64);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = v7;
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v8;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  return a1;
}

uint64_t _s9RecommendO5InputVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(a1 + 40))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_12A5C8(a1 + 32);
      long long v8 = *(_OWORD *)(a2 + 48);
      long long v7 = *(_OWORD *)(a2 + 64);
      *uint64_t v4 = *v5;
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)(a1 + 64) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 40) = *(void *)(a2 + 40);
    *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v10;
    *uint64_t v4 = v9;
  }
  return a1;
}

uint64_t sub_12A5C8(uint64_t a1)
{
  return a1;
}

uint64_t _s9RecommendO5InputVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (!v6)
  {
    sub_12A5C8(a1 + 32);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
    return a1;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9RecommendO5InputVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 80)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s9RecommendO5InputVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 80) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Recommend.Input()
{
  return &type metadata for Transport.Recommend.Input;
}

uint64_t sub_12A7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 - 1 >= 3)
  {
    if (a7) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t _s9RecommendO6OutputOwxx(uint64_t a1)
{
  return sub_12A87C(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(unsigned char *)(a1 + 48));
}

uint64_t sub_12A87C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 - 1 >= 3)
  {
    if (a7) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s9RecommendO6OutputOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_12A7B8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(unsigned char *)(a1 + 48) = v9;
  return a1;
}

uint64_t _s9RecommendO6OutputOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  unsigned __int8 v9 = *(unsigned char *)(a2 + 48);
  sub_12A7B8(*(void *)a2, v4, v5, v6, v7, v8, v9);
  uint64_t v10 = *(void *)a1;
  uint64_t v11 = *(void *)(a1 + 8);
  uint64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = *(void *)(a1 + 32);
  uint64_t v15 = *(void *)(a1 + 40);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  unsigned __int8 v16 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v9;
  sub_12A87C(v10, v11, v12, v13, v14, v15, v16);
  return a1;
}

uint64_t _s9RecommendO6OutputOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 48);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v10;
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  unsigned __int8 v11 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a1 + 48) = v3;
  sub_12A87C(v4, v6, v5, v7, v8, v9, v11);
  return a1;
}

uint64_t _s9RecommendO6OutputOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 49)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 48);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s9RecommendO6OutputOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 49) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 48) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_12AB24(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 48);
}

uint64_t sub_12AB2C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 48) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Transport.Recommend.Output()
{
  return &type metadata for Transport.Recommend.Output;
}

ValueMetadata *type metadata accessor for Transport.RecommendV2()
{
  return &type metadata for Transport.RecommendV2;
}

uint64_t _s11RecommendV2O5InputVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = *(void *)(a1 + 40);
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

void *_s11RecommendV2O5InputVwcp(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  uint64_t v6 = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    a1[4] = a2[4];
    a1[5] = v6;
    uint64_t v8 = a2[6];
    uint64_t v7 = a2[7];
    a1[6] = v8;
    a1[7] = v7;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *((_OWORD *)a2 + 3);
    *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
    *((_OWORD *)a1 + 3) = v9;
  }
  return a1;
}

void *_s11RecommendV2O5InputVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a1 + 4;
  uint64_t v5 = a2 + 4;
  uint64_t v6 = a2[5];
  if (a1[5])
  {
    if (v6)
    {
      a1[4] = a2[4];
      a1[5] = a2[5];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[6] = a2[6];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[7] = a2[7];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_12AD80((uint64_t)(a1 + 4));
      long long v7 = *((_OWORD *)a2 + 3);
      *uint64_t v4 = *v5;
      *((_OWORD *)a1 + 3) = v7;
    }
  }
  else if (v6)
  {
    a1[4] = a2[4];
    a1[5] = a2[5];
    a1[6] = a2[6];
    a1[7] = a2[7];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v8 = *((_OWORD *)a2 + 3);
    *uint64_t v4 = *v5;
    *((_OWORD *)a1 + 3) = v8;
  }
  return a1;
}

uint64_t sub_12AD80(uint64_t a1)
{
  return a1;
}

uint64_t _s11RecommendV2O5InputVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 40)) {
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(a2 + 40);
  if (!v6)
  {
    sub_12AD80(a1 + 32);
LABEL_5:
    long long v7 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v7;
    return a1;
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11RecommendV2O5InputVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 64)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s11RecommendV2O5InputVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 64) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendV2.Input()
{
  return &type metadata for Transport.RecommendV2.Input;
}

uint64_t sub_12AF4C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 - 1 >= 3)
  {
    if (a9) {
      return result;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }

  return swift_bridgeObjectRetain();
}

uint64_t _s11RecommendV2O6OutputOwxx(uint64_t a1)
{
  return sub_12B058(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(unsigned char *)(a1 + 64));
}

uint64_t sub_12B058(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, unsigned __int8 a9)
{
  if (a9 - 1 >= 3)
  {
    if (a9) {
      return result;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s11RecommendV2O6OutputOwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 64);
  sub_12AF4C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  return a1;
}

uint64_t _s11RecommendV2O6OutputOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v6 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v8 = *(void *)(a2 + 40);
  uint64_t v9 = *(void *)(a2 + 48);
  uint64_t v10 = *(void *)(a2 + 56);
  unsigned __int8 v11 = *(unsigned char *)(a2 + 64);
  sub_12AF4C(*(void *)a2, v4, v5, v6, v7, v8, v9, v10, v11);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  uint64_t v18 = *(void *)(a1 + 48);
  uint64_t v19 = *(void *)(a1 + 56);
  unsigned __int8 v20 = *(unsigned char *)(a1 + 64);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = v5;
  *(void *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(void *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = v9;
  *(void *)(a1 + 56) = v10;
  *(unsigned char *)(a1 + 64) = v11;
  sub_12B058(v12, v13, v14, v15, v16, v17, v18, v19, v20);
  return a1;
}

__n128 _s11RecommendV2O6OutputOwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s11RecommendV2O6OutputOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 64);
  uint64_t v4 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v7 = *(void *)(a1 + 24);
  uint64_t v8 = *(void *)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 40);
  uint64_t v10 = *(void *)(a1 + 48);
  uint64_t v11 = *(void *)(a1 + 56);
  unsigned __int8 v12 = *(unsigned char *)(a1 + 64);
  long long v13 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v13;
  long long v14 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v14;
  *(unsigned char *)(a1 + 64) = v3;
  sub_12B058(v4, v6, v5, v7, v8, v9, v10, v11, v12);
  return a1;
}

uint64_t _s11RecommendV2O6OutputOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 65)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 64);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s11RecommendV2O6OutputOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 64) = 0;
    *(void *)__n128 result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 65) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 65) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 64) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_12B3A4(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 64);
}

uint64_t sub_12B3AC(uint64_t result, char a2)
{
  *(unsigned char *)(result + 64) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendV2.Output()
{
  return &type metadata for Transport.RecommendV2.Output;
}

ValueMetadata *type metadata accessor for Transport.PersonalizationMetadata()
{
  return &type metadata for Transport.PersonalizationMetadata;
}

void *sub_12B3D8(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s23PersonalizationMetadataO5InputVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23PersonalizationMetadataO5InputVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Transport.PersonalizationMetadata.Input()
{
  return &type metadata for Transport.PersonalizationMetadata.Input;
}

uint64_t _s23PersonalizationMetadataO6OutputOwCP(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_12B520(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_12B520(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 3u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t _s23PersonalizationMetadataO6OutputOwxx(uint64_t a1)
{
  return sub_12B544(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_12B544(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 3u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s23PersonalizationMetadataO6OutputOwca(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_12B520(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_12B544(v5, v6);
  return a1;
}

uint64_t _s23PersonalizationMetadataO6OutputOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_12B544(v4, v5);
  return a1;
}

uint64_t _s23PersonalizationMetadataO6OutputOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFC && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 252);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 4) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s23PersonalizationMetadataO6OutputOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFB)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 252;
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFC) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_12B678(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 8);
}

uint64_t sub_12B680(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for Transport.PersonalizationMetadata.Output()
{
  return &type metadata for Transport.PersonalizationMetadata.Output;
}

uint64_t sub_12B69C(uint64_t a1)
{
  *(void *)(v2 + 3360) = v1;
  *(void *)(v2 + 3352) = a1;
  *(void *)(v2 + 3368) = *(void *)a1;
  *(unsigned char *)(v2 + 3351) = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(v2 + 3430) = *(unsigned char *)(a1 + 9);
  *(_DWORD *)(v2 + 3424) = *(_DWORD *)(a1 + 10);
  *(_WORD *)(v2 + 3428) = *(_WORD *)(a1 + 14);
  *(void *)(v2 + 3376) = *(void *)(a1 + 16);
  *(unsigned char *)(v2 + 3431) = *(unsigned char *)(a1 + 24);
  memcpy((void *)(v2 + 2256), (const void *)(a1 + 25), 0x447uLL);
  return _swift_task_switch(sub_12B750, 0, 0);
}

uint64_t sub_12B750()
{
  char v1 = *(unsigned char *)(v0 + 3431);
  uint64_t v2 = *(void *)(v0 + 3376);
  char v3 = *(unsigned char *)(v0 + 3430);
  char v4 = *(unsigned char *)(v0 + 3351);
  uint64_t v5 = *(void *)(v0 + 3368);
  unsigned __int8 v6 = *(void **)(v0 + 3360);
  uint64_t v7 = *(void *)(v0 + 3352);
  uint64_t v8 = v6[10];
  uint64_t v9 = v6[11];
  sub_5D64(v6 + 7, v8);
  *(void *)(v0 + 16) = v5;
  *(unsigned char *)(v0 + 24) = v4;
  *(unsigned char *)(v0 + 25) = v3;
  __int16 v10 = *(_WORD *)(v7 + 14);
  *(_DWORD *)(v0 + 26) = *(_DWORD *)(v7 + 10);
  *(_WORD *)(v0 + 30) = v10;
  *(void *)(v0 + 32) = v2;
  *(unsigned char *)(v0 + 40) = v1;
  memcpy((void *)(v0 + 41), (const void *)(v7 + 25), 0x447uLL);
  long long v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 3384) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_12B8D0;
  return v13(v0 + 16, v8, v9);
}

uint64_t sub_12B8D0(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = sub_12BB84;
  }
  else
  {
    *(void *)(v4 + 3392) = a1;
    uint64_t v5 = sub_12B9FC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_12B9FC()
{
  *(void *)(v0 + 3400) = *(void *)(v0 + 3392);
  char v1 = *(unsigned char *)(v0 + 3431);
  uint64_t v2 = *(void *)(v0 + 3376);
  char v3 = *(unsigned char *)(v0 + 3430);
  char v4 = *(unsigned char *)(v0 + 3351);
  uint64_t v5 = *(void *)(v0 + 3368);
  unsigned __int8 v6 = *(void **)(v0 + 3360);
  uint64_t v7 = v6[5];
  uint64_t v8 = v6[6];
  sub_5D64(v6 + 2, v7);
  *(void *)(v0 + 1136) = v5;
  *(unsigned char *)(v0 + 1144) = v4;
  *(unsigned char *)(v0 + 1145) = v3;
  *(_DWORD *)(v0 + 1146) = *(_DWORD *)(v0 + 3424);
  *(_WORD *)(v0 + 1150) = *(_WORD *)(v0 + 3428);
  *(void *)(v0 + 1152) = v2;
  *(unsigned char *)(v0 + 1160) = v1;
  memcpy((void *)(v0 + 1161), (const void *)(v0 + 2256), 0x447uLL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 3408) = v9;
  void *v9 = v0;
  v9[1] = sub_12BD10;
  return v11(v0 + 1136, v7, v8);
}

uint64_t sub_12BB84()
{
  *(void *)(v0 + 3400) = _swiftEmptyArrayStorage;
  char v1 = *(unsigned char *)(v0 + 3431);
  uint64_t v2 = *(void *)(v0 + 3376);
  char v3 = *(unsigned char *)(v0 + 3430);
  char v4 = *(unsigned char *)(v0 + 3351);
  uint64_t v5 = *(void *)(v0 + 3368);
  unsigned __int8 v6 = *(void **)(v0 + 3360);
  uint64_t v7 = v6[5];
  uint64_t v8 = v6[6];
  sub_5D64(v6 + 2, v7);
  *(void *)(v0 + 1136) = v5;
  *(unsigned char *)(v0 + 1144) = v4;
  *(unsigned char *)(v0 + 1145) = v3;
  *(_DWORD *)(v0 + 1146) = *(_DWORD *)(v0 + 3424);
  *(_WORD *)(v0 + 1150) = *(_WORD *)(v0 + 3428);
  *(void *)(v0 + 1152) = v2;
  *(unsigned char *)(v0 + 1160) = v1;
  memcpy((void *)(v0 + 1161), (const void *)(v0 + 2256), 0x447uLL);
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 3408) = v9;
  void *v9 = v0;
  v9[1] = sub_12BD10;
  return v11(v0 + 1136, v7, v8);
}

uint64_t sub_12BD10(uint64_t a1)
{
  uint64_t v4 = *v2;
  swift_task_dealloc();
  if (v1)
  {
    swift_errorRelease();
    uint64_t v5 = sub_12C448;
  }
  else
  {
    *(void *)(v4 + 3416) = a1;
    uint64_t v5 = sub_12BE3C;
  }
  return _swift_task_switch(v5, 0, 0);
}

void *sub_12BE3C()
{
  uint64_t v1 = *(void *)(v0 + 3416);
  uint64_t v2 = *(void *)(*(void *)(v0 + 3400) + 16);
  if (!v2)
  {
    uint64_t v22 = *(void *)(v1 + 16);
    if (!v22) {
      goto LABEL_51;
    }
    goto LABEL_19;
  }
  char v3 = (double *)(swift_bridgeObjectRetain() + 64);
  while (1)
  {
    uint64_t v69 = v2;
    double v5 = *(double *)(v68 + 3376);
    uint64_t v6 = *((void *)v3 - 4);
    char v7 = *((unsigned char *)v3 - 24);
    double v8 = *v3;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v11 = sub_56168(v6);
    uint64_t v12 = _swiftEmptyDictionarySingleton[2];
    BOOL v13 = (v10 & 1) == 0;
    uint64_t result = (void *)(v12 + v13);
    if (__OFADD__(v12, v13)) {
      break;
    }
    char v15 = v10;
    if (_swiftEmptyDictionarySingleton[3] >= (uint64_t)result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        double v17 = v5 * v8;
        if ((v10 & 1) == 0) {
          goto LABEL_12;
        }
      }
      else
      {
        uint64_t result = sub_123454();
        double v17 = v5 * v8;
        if ((v15 & 1) == 0) {
          goto LABEL_12;
        }
      }
    }
    else
    {
      sub_11CE34((uint64_t)result, isUniquelyReferenced_nonNull_native);
      uint64_t result = (void *)sub_56168(v6);
      if ((v15 & 1) != (v16 & 1))
      {
LABEL_47:
        return (void *)sub_1FC770();
      }
      unint64_t v11 = (unint64_t)result;
      double v17 = v5 * v8;
      if ((v15 & 1) == 0)
      {
LABEL_12:
        _swiftEmptyDictionarySingleton[(v11 >> 6) + 8] |= 1 << v11;
        *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v11) = v6;
        uint64_t v18 = _swiftEmptyDictionarySingleton[7] + 40 * v11;
        *(void *)uint64_t v18 = v6;
        *(unsigned char *)(v18 + 8) = v7;
        *(void *)(v18 + 16) = _swiftEmptyArrayStorage;
        *(void *)(v18 + 24) = 0;
        *(double *)(v18 + 32) = v17;
        uint64_t v19 = _swiftEmptyDictionarySingleton[2];
        BOOL v20 = __OFADD__(v19, 1);
        uint64_t v21 = v19 + 1;
        if (v20) {
          goto LABEL_56;
        }
        _swiftEmptyDictionarySingleton[2] = v21;
        goto LABEL_4;
      }
    }
    uint64_t v4 = _swiftEmptyDictionarySingleton[7] + 40 * v11;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v6;
    *(unsigned char *)(v4 + 8) = v7;
    *(void *)(v4 + 16) = _swiftEmptyArrayStorage;
    *(void *)(v4 + 24) = 0;
    *(double *)(v4 + 32) = v17;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 += 5;
    --v2;
    if (v69 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v1 = v67;
      uint64_t v22 = *(void *)(v67 + 16);
      if (!v22)
      {
LABEL_51:
        uint64_t v64 = swift_bridgeObjectRetain();
        uint64_t v65 = sub_4B9F4(v64);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        char v66 = *(uint64_t (**)(void *))(v68 + 8);
        return (void *)v66(v65);
      }
LABEL_19:
      double v23 = 1.0 - *(double *)(v68 + 3376);
      swift_bridgeObjectRetain();
      uint64_t v24 = (double *)(v1 + 64);
      while (2)
      {
        uint64_t v26 = *((void *)v24 - 4);
        char v27 = *((unsigned char *)v24 - 24);
        uint64_t v29 = *((void *)v24 - 2);
        uint64_t v28 = *((void *)v24 - 1);
        double v30 = v23 * (*v24 * 0.5 + 0.5);
        if (_swiftEmptyDictionarySingleton[2])
        {
          uint64_t v31 = sub_56168(*((void *)v24 - 4));
          if (v32)
          {
            uint64_t v33 = _swiftEmptyDictionarySingleton[7] + 40 * v31;
            uint64_t v34 = v26;
            char v35 = *(unsigned char *)(v33 + 8);
            double v36 = *(double *)(v33 + 32);
            uint64_t v71 = *(void *)(v33 + 16);
            swift_bridgeObjectRetain();
            uint64_t v37 = swift_bridgeObjectRetain();
            sub_AA86C(v37);
            char v38 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v39 = v34;
            unint64_t v41 = sub_56168(v34);
            uint64_t v42 = _swiftEmptyDictionarySingleton[2];
            BOOL v43 = (v40 & 1) == 0;
            uint64_t result = (void *)(v42 + v43);
            if (__OFADD__(v42, v43)) {
              goto LABEL_58;
            }
            char v44 = v40;
            if (_swiftEmptyDictionarySingleton[3] >= (uint64_t)result)
            {
              if (v38)
              {
                double v46 = v30 + v36;
                if ((v40 & 1) == 0) {
                  goto LABEL_45;
                }
              }
              else
              {
                uint64_t result = sub_123454();
                double v46 = v30 + v36;
                if ((v44 & 1) == 0) {
                  goto LABEL_45;
                }
              }
            }
            else
            {
              sub_11CE34((uint64_t)result, v38);
              uint64_t result = (void *)sub_56168(v39);
              if ((v44 & 1) != (v45 & 1)) {
                goto LABEL_47;
              }
              unint64_t v41 = (unint64_t)result;
              double v46 = v30 + v36;
              if ((v44 & 1) == 0)
              {
LABEL_45:
                _swiftEmptyDictionarySingleton[(v41 >> 6) + 8] |= 1 << v41;
                *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v41) = v39;
                uint64_t v61 = _swiftEmptyDictionarySingleton[7] + 40 * v41;
                *(void *)uint64_t v61 = v39;
                *(unsigned char *)(v61 + 8) = v35;
                *(void *)(v61 + 16) = v71;
                *(void *)(v61 + 24) = 0;
                *(double *)(v61 + 32) = v46;
                uint64_t v62 = _swiftEmptyDictionarySingleton[2];
                BOOL v20 = __OFADD__(v62, 1);
                uint64_t v63 = v62 + 1;
                if (v20) {
                  goto LABEL_59;
                }
                _swiftEmptyDictionarySingleton[2] = v63;
LABEL_22:
                swift_bridgeObjectRelease();
                v24 += 5;
                if (!--v22)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_51;
                }
                continue;
              }
            }
            uint64_t v60 = _swiftEmptyDictionarySingleton[7] + 40 * v41;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)uint64_t v60 = v39;
            *(unsigned char *)(v60 + 8) = v35;
            *(void *)(v60 + 16) = v71;
            *(void *)(v60 + 24) = 0;
            *(double *)(v60 + 32) = v46;
            goto LABEL_22;
          }
        }
        break;
      }
      uint64_t v70 = v22;
      uint64_t v47 = v28;
      swift_bridgeObjectRetain();
      uint64_t v48 = v29;
      swift_bridgeObjectRetain();
      char v49 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v50 = v26;
      unint64_t v52 = sub_56168(v26);
      uint64_t v53 = _swiftEmptyDictionarySingleton[2];
      BOOL v54 = (v51 & 1) == 0;
      uint64_t result = (void *)(v53 + v54);
      if (__OFADD__(v53, v54)) {
        goto LABEL_55;
      }
      char v55 = v51;
      if (_swiftEmptyDictionarySingleton[3] >= (uint64_t)result)
      {
        if (v49)
        {
          if ((v51 & 1) == 0) {
            goto LABEL_37;
          }
        }
        else
        {
          uint64_t result = sub_123454();
          if ((v55 & 1) == 0) {
            goto LABEL_37;
          }
        }
      }
      else
      {
        sub_11CE34((uint64_t)result, v49);
        uint64_t result = (void *)sub_56168(v50);
        if ((v55 & 1) != (v56 & 1)) {
          goto LABEL_47;
        }
        unint64_t v52 = (unint64_t)result;
        if ((v55 & 1) == 0)
        {
LABEL_37:
          _swiftEmptyDictionarySingleton[(v52 >> 6) + 8] |= 1 << v52;
          *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v52) = v50;
          uint64_t v57 = _swiftEmptyDictionarySingleton[7] + 40 * v52;
          *(void *)uint64_t v57 = v50;
          *(unsigned char *)(v57 + 8) = v27;
          *(void *)(v57 + 16) = v48;
          *(void *)(v57 + 24) = v47;
          *(double *)(v57 + 32) = v30;
          uint64_t v58 = _swiftEmptyDictionarySingleton[2];
          BOOL v20 = __OFADD__(v58, 1);
          uint64_t v59 = v58 + 1;
          if (v20) {
            goto LABEL_57;
          }
          _swiftEmptyDictionarySingleton[2] = v59;
          goto LABEL_21;
        }
      }
      uint64_t v25 = _swiftEmptyDictionarySingleton[7] + 40 * v52;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v25 = v50;
      *(unsigned char *)(v25 + 8) = v27;
      *(void *)(v25 + 16) = v48;
      *(void *)(v25 + 24) = v47;
      *(double *)(v25 + 32) = v30;
LABEL_21:
      uint64_t v22 = v70;
      goto LABEL_22;
    }
  }
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
  return result;
}

void *sub_12C448()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 3400) + 16);
  uint64_t v2 = _swiftEmptyArrayStorage;
  if (!v1)
  {
    uint64_t v23 = _swiftEmptyArrayStorage[2];
    if (!v23) {
      goto LABEL_49;
    }
    goto LABEL_17;
  }
  char v3 = (double *)(swift_bridgeObjectRetain() + 64);
  while (1)
  {
    double v5 = v2;
    double v6 = *(double *)(v68 + 3376);
    uint64_t v7 = *((void *)v3 - 4);
    char v8 = *((unsigned char *)v3 - 24);
    double v9 = *v3;
    uint64_t v69 = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v12 = sub_56168(v7);
    uint64_t v13 = _swiftEmptyDictionarySingleton[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t result = (void *)(v13 + v14);
    if (__OFADD__(v13, v14)) {
      break;
    }
    char v16 = v11;
    if (_swiftEmptyDictionarySingleton[3] >= (uint64_t)result)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        uint64_t result = sub_123454();
      }
    }
    else
    {
      sub_11CE34((uint64_t)result, isUniquelyReferenced_nonNull_native);
      uint64_t result = (void *)sub_56168(v7);
      if ((v16 & 1) != (v17 & 1))
      {
LABEL_45:
        return (void *)sub_1FC770();
      }
      unint64_t v12 = (unint64_t)result;
    }
    uint64_t v2 = v5;
    double v18 = v6 * v9;
    if (v16)
    {
      uint64_t v4 = _swiftEmptyDictionarySingleton[7] + 40 * v12;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v4 = v7;
      *(unsigned char *)(v4 + 8) = v8;
      *(void *)(v4 + 16) = v5;
      *(void *)(v4 + 24) = 0;
      *(double *)(v4 + 32) = v18;
    }
    else
    {
      _swiftEmptyDictionarySingleton[(v12 >> 6) + 8] |= 1 << v12;
      *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v12) = v7;
      uint64_t v19 = _swiftEmptyDictionarySingleton[7] + 40 * v12;
      *(void *)uint64_t v19 = v7;
      *(unsigned char *)(v19 + 8) = v8;
      *(void *)(v19 + 16) = v5;
      *(void *)(v19 + 24) = 0;
      *(double *)(v19 + 32) = v18;
      uint64_t v20 = _swiftEmptyDictionarySingleton[2];
      BOOL v21 = __OFADD__(v20, 1);
      uint64_t v22 = v20 + 1;
      if (v21) {
        goto LABEL_54;
      }
      _swiftEmptyDictionarySingleton[2] = v22;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v3 += 5;
    --v1;
    if (v69 == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t v23 = v5[2];
      if (!v23)
      {
LABEL_49:
        uint64_t v65 = swift_bridgeObjectRetain();
        char v66 = sub_4B9F4(v65);
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v67 = *(uint64_t (**)(void *))(v68 + 8);
        return (void *)v67(v66);
      }
LABEL_17:
      double v24 = 1.0 - *(double *)(v68 + 3376);
      swift_bridgeObjectRetain();
      uint64_t v25 = (double *)(v2 + 8);
      while (2)
      {
        uint64_t v27 = *((void *)v25 - 4);
        char v28 = *((unsigned char *)v25 - 24);
        uint64_t v30 = *((void *)v25 - 2);
        uint64_t v29 = *((void *)v25 - 1);
        double v31 = v24 * (*v25 * 0.5 + 0.5);
        if (_swiftEmptyDictionarySingleton[2])
        {
          uint64_t v32 = sub_56168(*((void *)v25 - 4));
          if (v33)
          {
            uint64_t v34 = _swiftEmptyDictionarySingleton[7] + 40 * v32;
            uint64_t v35 = v27;
            char v36 = *(unsigned char *)(v34 + 8);
            double v37 = *(double *)(v34 + 32);
            uint64_t v71 = *(void *)(v34 + 16);
            swift_bridgeObjectRetain();
            uint64_t v38 = swift_bridgeObjectRetain();
            sub_AA86C(v38);
            char v39 = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v40 = v35;
            unint64_t v42 = sub_56168(v35);
            uint64_t v43 = _swiftEmptyDictionarySingleton[2];
            BOOL v44 = (v41 & 1) == 0;
            uint64_t result = (void *)(v43 + v44);
            if (__OFADD__(v43, v44)) {
              goto LABEL_56;
            }
            char v45 = v41;
            if (_swiftEmptyDictionarySingleton[3] >= (uint64_t)result)
            {
              if (v39)
              {
                double v47 = v31 + v37;
                if ((v41 & 1) == 0) {
                  goto LABEL_43;
                }
              }
              else
              {
                uint64_t result = sub_123454();
                double v47 = v31 + v37;
                if ((v45 & 1) == 0) {
                  goto LABEL_43;
                }
              }
            }
            else
            {
              sub_11CE34((uint64_t)result, v39);
              uint64_t result = (void *)sub_56168(v40);
              if ((v45 & 1) != (v46 & 1)) {
                goto LABEL_45;
              }
              unint64_t v42 = (unint64_t)result;
              double v47 = v31 + v37;
              if ((v45 & 1) == 0)
              {
LABEL_43:
                _swiftEmptyDictionarySingleton[(v42 >> 6) + 8] |= 1 << v42;
                *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v42) = v40;
                uint64_t v62 = _swiftEmptyDictionarySingleton[7] + 40 * v42;
                *(void *)uint64_t v62 = v40;
                *(unsigned char *)(v62 + 8) = v36;
                *(void *)(v62 + 16) = v71;
                *(void *)(v62 + 24) = 0;
                *(double *)(v62 + 32) = v47;
                uint64_t v63 = _swiftEmptyDictionarySingleton[2];
                BOOL v21 = __OFADD__(v63, 1);
                uint64_t v64 = v63 + 1;
                if (v21) {
                  goto LABEL_57;
                }
                _swiftEmptyDictionarySingleton[2] = v64;
LABEL_20:
                swift_bridgeObjectRelease();
                v25 += 5;
                if (!--v23)
                {
                  swift_bridgeObjectRelease();
                  goto LABEL_49;
                }
                continue;
              }
            }
            uint64_t v61 = _swiftEmptyDictionarySingleton[7] + 40 * v42;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)uint64_t v61 = v40;
            *(unsigned char *)(v61 + 8) = v36;
            *(void *)(v61 + 16) = v71;
            *(void *)(v61 + 24) = 0;
            *(double *)(v61 + 32) = v47;
            goto LABEL_20;
          }
        }
        break;
      }
      uint64_t v70 = v23;
      uint64_t v48 = v29;
      swift_bridgeObjectRetain();
      uint64_t v49 = v30;
      swift_bridgeObjectRetain();
      char v50 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v51 = v27;
      unint64_t v53 = sub_56168(v27);
      uint64_t v54 = _swiftEmptyDictionarySingleton[2];
      BOOL v55 = (v52 & 1) == 0;
      uint64_t result = (void *)(v54 + v55);
      if (__OFADD__(v54, v55)) {
        goto LABEL_53;
      }
      char v56 = v52;
      if (_swiftEmptyDictionarySingleton[3] >= (uint64_t)result)
      {
        if (v50)
        {
          if ((v52 & 1) == 0) {
            goto LABEL_35;
          }
        }
        else
        {
          uint64_t result = sub_123454();
          if ((v56 & 1) == 0) {
            goto LABEL_35;
          }
        }
      }
      else
      {
        sub_11CE34((uint64_t)result, v50);
        uint64_t result = (void *)sub_56168(v51);
        if ((v56 & 1) != (v57 & 1)) {
          goto LABEL_45;
        }
        unint64_t v53 = (unint64_t)result;
        if ((v56 & 1) == 0)
        {
LABEL_35:
          _swiftEmptyDictionarySingleton[(v53 >> 6) + 8] |= 1 << v53;
          *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v53) = v51;
          uint64_t v58 = _swiftEmptyDictionarySingleton[7] + 40 * v53;
          *(void *)uint64_t v58 = v51;
          *(unsigned char *)(v58 + 8) = v28;
          *(void *)(v58 + 16) = v49;
          *(void *)(v58 + 24) = v48;
          *(double *)(v58 + 32) = v31;
          uint64_t v59 = _swiftEmptyDictionarySingleton[2];
          BOOL v21 = __OFADD__(v59, 1);
          uint64_t v60 = v59 + 1;
          if (v21) {
            goto LABEL_55;
          }
          _swiftEmptyDictionarySingleton[2] = v60;
          goto LABEL_19;
        }
      }
      uint64_t v26 = _swiftEmptyDictionarySingleton[7] + 40 * v53;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)uint64_t v26 = v51;
      *(unsigned char *)(v26 + 8) = v28;
      *(void *)(v26 + 16) = v49;
      *(void *)(v26 + 24) = v48;
      *(double *)(v26 + 32) = v31;
LABEL_19:
      uint64_t v23 = v70;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  __break(1u);
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for CombinedGenreRecommendationService()
{
  return self;
}

uint64_t sub_12CA60(uint64_t a1)
{
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_B06F4;
  return sub_12B69C(a1);
}

uint64_t Transport.Client.server.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 160);
  *a1 = *(void *)(v1 + 152);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Transport.Client.server.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 152) = v2;
  *(void *)(v1 + 160) = v3;
  return result;
}

uint64_t (*Transport.Client.server.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.Client.configuration.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[21];
  uint64_t v3 = v1[22];
  uint64_t v4 = v1[23];
  uint64_t v5 = v1[24];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  sub_52948(v2);

  return sub_52948(v4);
}

__n128 Transport.Client.configuration.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  uint64_t v4 = v1[23];
  sub_52958(v1[21]);
  sub_52958(v4);
  __n128 result = v6;
  *(__n128 *)(v1 + 21) = v6;
  v1[23] = v2;
  v1[24] = v3;
  return result;
}

uint64_t (*Transport.Client.configuration.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.Client.transport.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_51B70(v1 + 200, a1);
}

uint64_t Transport.Client.transport.setter(long long *a1)
{
  uint64_t v3 = v1 + 200;
  sub_1264C(v3);

  return sub_37C30(a1, v3);
}

uint64_t (*Transport.Client.transport.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

double Transport.Client.init(server:configuration:transport:)@<D0>(void *a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v6 = a1[1];
  uint64_t v7 = *a2;
  uint64_t v8 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v10 = a2[3];
  *(void *)(a4 + 152) = *a1;
  *(void *)(a4 + 160) = v6;
  *(void *)(a4 + 168) = v7;
  *(void *)(a4 + 176) = v8;
  *(void *)(a4 + 184) = v9;
  *(void *)(a4 + 192) = v10;
  sub_51B70(a3, a4 + 200);
  v16[0] = v7;
  v16[1] = v8;
  v16[2] = v9;
  v16[3] = v10;
  sub_52948(v7);
  sub_52948(v9);
  ClientConverter.init(configuration:)(v16, (uint64_t *)v17);
  sub_1264C(a3);
  long long v11 = v17[7];
  *(_OWORD *)(a4 + 96) = v17[6];
  *(_OWORD *)(a4 + 112) = v11;
  *(_OWORD *)(a4 + 128) = v17[8];
  *(void *)(a4 + 144) = v18;
  long long v12 = v17[3];
  *(_OWORD *)(a4 + 32) = v17[2];
  *(_OWORD *)(a4 + 48) = v12;
  long long v13 = v17[5];
  *(_OWORD *)(a4 + 64) = v17[4];
  *(_OWORD *)(a4 + 80) = v13;
  double result = *(double *)v17;
  long long v15 = v17[1];
  *(_OWORD *)a4 = v17[0];
  *(_OWORD *)(a4 + 16) = v15;
  return result;
}

uint64_t Transport.Client.recommend(input:)(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 96) = a1;
  *(void *)(v3 + 104) = v2;
  long long v4 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v4;
  *(_OWORD *)(v3 + 80) = a2[4];
  long long v5 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v5;
  return _swift_task_switch(sub_12CDA8, 0, 0);
}

uint64_t sub_12CDA8()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 112) = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0 + 16;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 120) = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 128) = v4;
  *(void *)(v4 + 16) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_270808 + dword_270808);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 136) = v5;
  *long long v5 = v0;
  v5[1] = sub_12CEF0;
  uint64_t v6 = *(void *)(v0 + 96);
  return v8(v6, (_OWORD *)(v0 + 16), (uint64_t)sub_12D8BC, v2, (uint64_t)&unk_270800, v3, (uint64_t)sub_12DEA0, v4);
}

uint64_t sub_12CEF0()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_12D040@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v72 = a2;
  uint64_t v73 = a3;
  uint64_t v4 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v68 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1FAF80();
  uint64_t v74 = *(void (**)(char *, uint64_t))(v7 - 8);
  uint64_t v75 = v7;
  __chkstk_darwin(v7);
  uint64_t v70 = (char *)&v68 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_2708A0);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)&v68 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1FADC0();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v80 = (char *)&v68 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v14);
  char v17 = (char *)&v68 - v16;
  uint64_t v18 = *(void *)(a1 + 152);
  uint64_t v19 = *(void *)(a1 + 160);
  sub_1FADB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1)
  {
    sub_55F38((uint64_t)v11, &qword_2708A0);
    type metadata accessor for ClientErrorPayload();
    sub_1341FC();
    swift_allocError();
    *uint64_t v20 = v18;
    v20[1] = v19;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v17, v11, v12);
    uint64_t v22 = (void (*)(_OWORD *, void))sub_1FADA0();
    v81._countAndFlagsBits = 0xD000000000000013;
    v81._object = (void *)0x80000000002193C0;
    sub_1FB8F0(v81);
    v22(v77, 0);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
    v23(v80, v17, v12);
    sub_1FAD90();
    if ((*((unsigned int (**)(char *, uint64_t, uint64_t))v74 + 6))(v6, 1, v75) == 1)
    {
      sub_55F38((uint64_t)v6, &qword_26E7A8);
      type metadata accessor for ClientErrorPayload();
      sub_1341FC();
      swift_allocError();
      double v24 = v80;
      v23((char *)v25, v80, v12);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      uint64_t v26 = *(void (**)(char *, uint64_t))(v13 + 8);
      v26(v24, v12);
      return ((uint64_t (*)(char *, uint64_t))v26)(v17, v12);
    }
    else
    {
      uint64_t v68 = v17;
      uint64_t v27 = (void (*)(char *, char *, uint64_t))*((void *)v74 + 4);
      char v28 = v70;
      uint64_t v29 = v6;
      uint64_t v30 = v75;
      v27(v70, v29, v75);
      uint64_t v31 = v73;
      v27((char *)v73, v28, v30);
      uint64_t v32 = (int *)type metadata accessor for ClientCurrency.Request();
      uint64_t v33 = v32[7];
      uint64_t v34 = (void *)(v31 + v32[5]);
      *uint64_t v34 = 1414745936;
      v34[1] = 0xE400000000000000;
      uint64_t v35 = (char *)v32[6];
      *(void *)&v35[v31] = _swiftEmptyArrayStorage;
      uint64_t v36 = v31 + v33;
      *(_OWORD *)(v31 + v33) = xmmword_20ADA0;
      uint64_t v38 = *(void **)(v13 + 8);
      uint64_t v37 = v13 + 8;
      uint64_t v74 = (void (*)(char *, uint64_t))v38;
      ((void (*)(char *, uint64_t))v38)(v80, v12);
      long long v39 = *(_OWORD *)(a1 + 112);
      v77[6] = *(_OWORD *)(a1 + 96);
      v77[7] = v39;
      v77[8] = *(_OWORD *)(a1 + 128);
      uint64_t v78 = *(void *)(a1 + 144);
      long long v40 = *(_OWORD *)(a1 + 48);
      v77[2] = *(_OWORD *)(a1 + 32);
      v77[3] = v40;
      long long v41 = *(_OWORD *)(a1 + 80);
      v77[4] = *(_OWORD *)(a1 + 64);
      v77[5] = v41;
      long long v42 = *(_OWORD *)(a1 + 16);
      v77[0] = *(_OWORD *)a1;
      v77[1] = v42;
      uint64_t v80 = v35;
      uint64_t v43 = *(void **)&v35[v31];
      sub_134254((uint64_t *)v77);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v43 = sub_41A9C(0, v43[2] + 1, 1, v43);
      }
      unint64_t v45 = v43[2];
      unint64_t v44 = v43[3];
      uint64_t v69 = v12;
      uint64_t v75 = v37;
      if (v45 >= v44 >> 1) {
        uint64_t v43 = sub_41A9C((void *)(v44 > 1), v45 + 1, 1, v43);
      }
      v43[2] = v45 + 1;
      char v46 = (char *)&v43[4 * v45];
      strcpy(v46 + 32, "content-type");
      v46[45] = 0;
      *((_WORD *)v46 + 23) = -5120;
      *((void *)v46 + 6) = 0xD000000000000010;
      *((void *)v46 + 7) = 0x8000000000219310;
      sub_134344((uint64_t *)v77);
      uint64_t v48 = v72;
      uint64_t v47 = v73;
      *(void *)&v80[v73] = v43;
      sub_55844((uint64_t)(v48 + 4), (uint64_t)v79, &qword_270920);
      sub_55844((uint64_t)v79, (uint64_t)&v76, &qword_270920);
      sub_1348D8(v79, (void (*)(void, void, void, void, void, void))sub_12A038);
      sub_12124(&qword_270920);
      sub_134818(&qword_270928, &qword_270920, (void (*)(void))sub_134884);
      uint64_t v49 = v71;
      uint64_t v50 = sub_1FACB0();
      if (v49)
      {
        sub_1348D8(v79, (void (*)(void, void, void, void, void, void))sub_12A0F8);
        v74(v68, v69);
        return sub_133F40(v47);
      }
      else
      {
        uint64_t v52 = v50;
        uint64_t v53 = v51;
        sub_1348D8(v79, (void (*)(void, void, void, void, void, void))sub_12A0F8);
        sub_134480(*(void *)v36, *(void *)(v36 + 8));
        *(void *)uint64_t v36 = v52;
        *(void *)(v36 + 8) = v53;
        sub_134254((uint64_t *)v77);
        unint64_t v55 = v43[2];
        unint64_t v54 = v43[3];
        if (v55 >= v54 >> 1) {
          uint64_t v43 = sub_41A9C((void *)(v54 > 1), v55 + 1, 1, v43);
        }
        char v56 = v68;
        v43[2] = v55 + 1;
        char v57 = &v43[4 * v55];
        v57[4] = 0x747065636361;
        v57[5] = 0xE600000000000000;
        v57[6] = 0xD000000000000010;
        v57[7] = 0x8000000000219310;
        sub_134344((uint64_t *)v77);
        *(void *)&v80[v73] = v43;
        uint64_t v58 = v48[1];
        if (v58)
        {
          uint64_t v59 = *v48;
          swift_bridgeObjectRetain();
          sub_134254((uint64_t *)v77);
          unint64_t v61 = v43[2];
          unint64_t v60 = v43[3];
          swift_bridgeObjectRetain();
          if (v61 >= v60 >> 1) {
            uint64_t v43 = sub_41A9C((void *)(v60 > 1), v61 + 1, 1, v43);
          }
          v43[2] = v61 + 1;
          uint64_t v62 = &v43[4 * v61];
          v62[4] = 0xD000000000000014;
          v62[5] = 0x8000000000219360;
          v62[6] = v59;
          v62[7] = v58;
          swift_bridgeObjectRelease();
          sub_134344((uint64_t *)v77);
          *(void *)&v80[v73] = v43;
        }
        uint64_t v63 = v48[3];
        if (v63)
        {
          uint64_t v64 = v48[2];
          swift_bridgeObjectRetain();
          sub_134254((uint64_t *)v77);
          unint64_t v66 = v43[2];
          unint64_t v65 = v43[3];
          swift_bridgeObjectRetain();
          if (v66 >= v65 >> 1) {
            uint64_t v43 = sub_41A9C((void *)(v65 > 1), v66 + 1, 1, v43);
          }
          v43[2] = v66 + 1;
          uint64_t v67 = &v43[4 * v66];
          v67[4] = 0xD00000000000001BLL;
          v67[5] = 0x80000000002193A0;
          v67[6] = v64;
          v67[7] = v63;
          swift_bridgeObjectRelease();
          sub_134344((uint64_t *)v77);
          *(void *)&v80[v73] = v43;
        }
        return ((uint64_t (*)(char *, uint64_t))v74)(v56, v69);
      }
    }
  }
}

uint64_t sub_12D8BC@<X0>(uint64_t a1@<X8>)
{
  return sub_12D040(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_12D8D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_12D8FC, 0, 0);
}

uint64_t sub_12D8FC()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[28];
  uint64_t v3 = v1[29];
  sub_5D64(v1 + 25, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                             + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_134918;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return v8(v5, v6, 0x6E656D6D6F636572, 0xE900000000000064, v2, v3);
}

uint64_t sub_12DA20(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_98BD4;
  v7[2] = a1;
  return _swift_task_switch(sub_12D8FC, 0, 0);
}

uint64_t *sub_12DADC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *result;
  if (*result > 400)
  {
    if (v4 == 401)
    {
      uint64_t v9 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v9);
      double result = (uint64_t *)swift_bridgeObjectRelease();
      if (v2) {
        return result;
      }
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v9;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(void *)(a2 + 40) = 0;
      char v5 = 2;
      goto LABEL_15;
    }
    if (v4 == 500)
    {
      uint64_t v9 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v9);
      if (v2) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v9;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(void *)(a2 + 40) = 0;
      char v5 = 3;
      goto LABEL_15;
    }
LABEL_14:
    *(void *)a2 = v4;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(void *)(a2 + 40) = 0;
    char v5 = 4;
LABEL_15:
    *(unsigned char *)(a2 + 48) = v5;
    return result;
  }
  if (v4 != 200)
  {
    if (v4 == 400)
    {
      uint64_t v9 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v9);
      double result = (uint64_t *)swift_bridgeObjectRelease();
      if (v2) {
        return result;
      }
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v9;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(void *)(a2 + 40) = 0;
      char v5 = 1;
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v9 = result[1];
  swift_bridgeObjectRetain();
  sub_52780(0xD000000000000010, 0x8000000000219310, &v9);
  double result = (uint64_t *)swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_1347C4();
    double result = (uint64_t *)sub_1FAC00();
    uint64_t v6 = v12;
    long long v7 = v10;
    long long v8 = v11;
    *(void *)a2 = v9;
    *(_OWORD *)(a2 + 8) = v7;
    *(_OWORD *)(a2 + 24) = v8;
    *(void *)(a2 + 40) = v6;
    *(unsigned char *)(a2 + 48) = 0;
  }
  return result;
}

uint64_t *sub_12DEA0@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_12DADC(a1, a2);
}

uint64_t sub_12DEBC(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 152) = a7;
  *(void *)(v8 + 160) = a8;
  *(void *)(v8 + 136) = a5;
  *(void *)(v8 + 144) = a6;
  *(void *)(v8 + 120) = a3;
  *(void *)(v8 + 128) = a4;
  *(void *)(v8 + 112) = a1;
  type metadata accessor for ClientCurrency.Request();
  *(void *)(v8 + 168) = swift_task_alloc();
  long long v10 = a2[1];
  *(_OWORD *)(v8 + 16) = *a2;
  *(_OWORD *)(v8 + 32) = v10;
  long long v11 = a2[3];
  *(_OWORD *)(v8 + 48) = a2[2];
  *(_OWORD *)(v8 + 64) = v11;
  return _swift_task_switch(sub_12DF6C, 0, 0);
}

uint64_t sub_12DF6C()
{
  uint64_t v1 = swift_task_alloc();
  v0[22] = v1;
  *(void *)(v1 + 16) = v0 + 2;
  long long v7 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), uint64_t, uint64_t, uint64_t))((char *)&dword_2724E0 + dword_2724E0);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[23] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_12E04C;
  uint64_t v3 = v0[21];
  uint64_t v4 = v0[15];
  uint64_t v5 = v0[16];
  return v7(v3, sub_134494, v1, v4, v5);
}

uint64_t sub_12E04C()
{
  *(void *)(*(void *)v1 + 192) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_12E3E0;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_12E168;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12E168()
{
  uint64_t v1 = *(void *)(v0 + 168);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 200) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 136);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 208) = v3;
  *(void *)(v3 + 16) = v0 + 16;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *, uint64_t, uint64_t, uint64_t))((char *)&dword_2724F0 + dword_2724F0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 216) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_12E28C;
  return v6(v0 + 80, (int *)&unk_2708C8, v2, (uint64_t)sub_134550, v3);
}

uint64_t sub_12E28C()
{
  *(void *)(*(void *)v1 + 224) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_12E6B4;
  }
  else {
    uint64_t v2 = sub_12E44C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12E3E0()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_12E44C()
{
  uint64_t v1 = v0[21];
  uint64_t v3 = v0[10];
  uint64_t v2 = v0[11];
  uint64_t v4 = v0[12];
  unint64_t v5 = v0[13];
  v0[29] = v2;
  v0[30] = v4;
  v0[31] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[32] = v6;
  v6[2] = v0 + 2;
  v6[3] = v1;
  v6[4] = v3;
  v6[5] = v2;
  v6[6] = v4;
  v6[7] = v5;
  swift_bridgeObjectRetain();
  sub_52090(v4, v5);
  uint64_t v9 = (char *)&dword_272668 + dword_272668;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[33] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_12E584;
  __asm { BR              X8 }
}

uint64_t sub_12E584()
{
  *(void *)(*(void *)v1 + 272) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_12E7B0;
  }
  else {
    uint64_t v2 = sub_12E720;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12E6B4()
{
  sub_133F40(*(void *)(v0 + 168));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_12E720()
{
  uint64_t v1 = v0[30];
  unint64_t v2 = v0[31];
  uint64_t v3 = v0[21];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_133F40(v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_12E7B0()
{
  uint64_t v1 = v0[30];
  unint64_t v2 = v0[31];
  uint64_t v3 = v0[21];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_133F40(v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_12E840(uint64_t a1, _OWORD *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 168) = a7;
  *(void *)(v8 + 176) = a8;
  *(void *)(v8 + 152) = a5;
  *(void *)(v8 + 160) = a6;
  *(void *)(v8 + 136) = a3;
  *(void *)(v8 + 144) = a4;
  *(void *)(v8 + 128) = a1;
  type metadata accessor for ClientCurrency.Request();
  *(void *)(v8 + 184) = swift_task_alloc();
  long long v10 = a2[3];
  *(_OWORD *)(v8 + 48) = a2[2];
  *(_OWORD *)(v8 + 64) = v10;
  *(_OWORD *)(v8 + 80) = a2[4];
  long long v11 = a2[1];
  *(_OWORD *)(v8 + 16) = *a2;
  *(_OWORD *)(v8 + 32) = v11;
  return _swift_task_switch(sub_12E8F8, 0, 0);
}

uint64_t sub_12E8F8()
{
  uint64_t v1 = swift_task_alloc();
  v0[24] = v1;
  *(void *)(v1 + 16) = v0 + 2;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), uint64_t, uint64_t, uint64_t))((char *)&dword_2724E0 + dword_2724E0);
  unint64_t v2 = (void *)swift_task_alloc();
  v0[25] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_12E9D8;
  uint64_t v3 = v0[23];
  uint64_t v4 = v0[17];
  uint64_t v5 = v0[18];
  return v7(v3, sub_1346DC, v1, v4, v5);
}

uint64_t sub_12E9D8()
{
  *(void *)(*(void *)v1 + 208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_12ED6C;
  }
  else
  {
    swift_task_dealloc();
    unint64_t v2 = sub_12EAF4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12EAF4()
{
  uint64_t v1 = *(void *)(v0 + 184);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 216) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 152);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 224) = v3;
  *(void *)(v3 + 16) = v0 + 16;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *, uint64_t, uint64_t, uint64_t))((char *)&dword_2724F0 + dword_2724F0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_12EC18;
  return v6(v0 + 96, (int *)&unk_270900, v2, (uint64_t)sub_1346E4, v3);
}

uint64_t sub_12EC18()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_12F040;
  }
  else {
    uint64_t v2 = sub_12EDD8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12ED6C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_12EDD8()
{
  uint64_t v1 = v0[23];
  uint64_t v3 = v0[12];
  uint64_t v2 = v0[13];
  uint64_t v4 = v0[14];
  unint64_t v5 = v0[15];
  v0[31] = v2;
  v0[32] = v4;
  v0[33] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[34] = v6;
  v6[2] = v0 + 2;
  v6[3] = v1;
  v6[4] = v3;
  v6[5] = v2;
  v6[6] = v4;
  v6[7] = v5;
  swift_bridgeObjectRetain();
  sub_52090(v4, v5);
  uint64_t v9 = (char *)&dword_272670 + dword_272670;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[35] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_12EF10;
  __asm { BR              X8 }
}

uint64_t sub_12EF10()
{
  *(void *)(*(void *)v1 + 288) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_12F13C;
  }
  else {
    uint64_t v2 = sub_12F0AC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12F040()
{
  sub_133F40(*(void *)(v0 + 184));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_12F0AC()
{
  uint64_t v1 = v0[32];
  unint64_t v2 = v0[33];
  uint64_t v3 = v0[23];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_133F40(v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_12F13C()
{
  uint64_t v1 = v0[32];
  unint64_t v2 = v0[33];
  uint64_t v3 = v0[23];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_133F40(v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_12F1CC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = v14;
  v8[15] = v15;
  v8[12] = a7;
  v8[13] = a8;
  v8[10] = a5;
  v8[11] = a6;
  v8[9] = a1;
  type metadata accessor for ClientCurrency.Request();
  v8[16] = swift_task_alloc();
  v8[6] = a2;
  v8[7] = a3;
  v8[8] = a4;
  return _swift_task_switch(sub_12F28C, 0, 0);
}

uint64_t sub_12F28C()
{
  uint64_t v1 = swift_task_alloc();
  v0[17] = v1;
  *(void *)(v1 + 16) = v0 + 6;
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), uint64_t, uint64_t, uint64_t))((char *)&dword_2724E0 + dword_2724E0);
  unint64_t v2 = (void *)swift_task_alloc();
  v0[18] = v2;
  *unint64_t v2 = v0;
  v2[1] = sub_12F36C;
  uint64_t v3 = v0[16];
  uint64_t v4 = v0[10];
  uint64_t v5 = v0[11];
  return v7(v3, sub_133E74, v1, v4, v5);
}

uint64_t sub_12F36C()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    unint64_t v2 = sub_12F700;
  }
  else
  {
    swift_task_dealloc();
    unint64_t v2 = sub_12F488;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12F488()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 160) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 96);
  *(void *)(v2 + 32) = v1;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 168) = v3;
  *(void *)(v3 + 16) = v0 + 48;
  *(void *)(v3 + 24) = v1;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *, uint64_t, uint64_t, uint64_t))((char *)&dword_2724F0 + dword_2724F0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_12F5AC;
  return v6(v0 + 16, (int *)&unk_270850, v2, (uint64_t)sub_133F30, v3);
}

uint64_t sub_12F5AC()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_12F9D4;
  }
  else {
    uint64_t v2 = sub_12F76C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12F700()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void sub_12F76C()
{
  uint64_t v1 = v0[16];
  uint64_t v3 = v0[2];
  uint64_t v2 = v0[3];
  uint64_t v4 = v0[4];
  unint64_t v5 = v0[5];
  v0[24] = v2;
  v0[25] = v4;
  v0[26] = v5;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[27] = v6;
  v6[2] = v0 + 6;
  v6[3] = v1;
  v6[4] = v3;
  v6[5] = v2;
  v6[6] = v4;
  v6[7] = v5;
  swift_bridgeObjectRetain();
  sub_52090(v4, v5);
  uint64_t v9 = (char *)&dword_272660 + dword_272660;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[28] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_12F8A4;
  __asm { BR              X8 }
}

uint64_t sub_12F8A4()
{
  *(void *)(*(void *)v1 + 232) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_12FAD0;
  }
  else {
    uint64_t v2 = sub_12FA40;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_12F9D4()
{
  sub_133F40(*(void *)(v0 + 128));
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_12FA40()
{
  uint64_t v1 = v0[25];
  unint64_t v2 = v0[26];
  uint64_t v3 = v0[16];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_133F40(v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_12FAD0()
{
  uint64_t v1 = v0[25];
  unint64_t v2 = v0[26];
  uint64_t v3 = v0[16];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_133F40(v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Transport.Client.recommendV2(input:)(uint64_t a1, _OWORD *a2)
{
  *(void *)(v3 + 80) = a1;
  *(void *)(v3 + 88) = v2;
  long long v4 = a2[1];
  *(_OWORD *)(v3 + 16) = *a2;
  *(_OWORD *)(v3 + 32) = v4;
  long long v5 = a2[3];
  *(_OWORD *)(v3 + 48) = a2[2];
  *(_OWORD *)(v3 + 64) = v5;
  return _swift_task_switch(sub_12FB90, 0, 0);
}

uint64_t sub_12FB90()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 96) = v2;
  *(void *)(v2 + 16) = v1;
  *(void *)(v2 + 24) = v0 + 16;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 104) = v3;
  *(void *)(v3 + 16) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 112) = v4;
  *(void *)(v4 + 16) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_270828 + dword_270828);
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v0 + 120) = v5;
  *long long v5 = v0;
  v5[1] = sub_12FCD8;
  uint64_t v6 = *(void *)(v0 + 80);
  return v8(v6, (_OWORD *)(v0 + 16), (uint64_t)sub_1306D4, v2, (uint64_t)&unk_270820, v3, (uint64_t)sub_130DC8, v4);
}

uint64_t sub_12FCD8()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_12FE28@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v70 = a2;
  uint64_t v71 = a3;
  uint64_t v4 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v65 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = (void *)sub_1FAF80();
  uint64_t v77 = *(v72 - 1);
  __chkstk_darwin(v72);
  uint64_t v68 = (char *)&v65 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_2708A0);
  __chkstk_darwin(v8 - 8);
  long long v10 = (char *)&v65 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1FADC0();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v65 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  char v17 = (char *)&v65 - v16;
  uint64_t v19 = *(void *)(a1 + 152);
  uint64_t v18 = *(void *)(a1 + 160);
  sub_1FADB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_55F38((uint64_t)v10, &qword_2708A0);
    type metadata accessor for ClientErrorPayload();
    sub_1341FC();
    swift_allocError();
    *uint64_t v20 = v19;
    v20[1] = v18;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v17, v10, v11);
    uint64_t v22 = (void (*)(_OWORD *, void))sub_1FADA0();
    v78._countAndFlagsBits = 0xD000000000000013;
    v78._object = (void *)0x8000000000219380;
    sub_1FB8F0(v78);
    v22(v74, 0);
    uint64_t v23 = *(void (**)(char *, char *, uint64_t))(v12 + 16);
    uint64_t v67 = v11;
    v23(v15, v17, v11);
    sub_1FAD90();
    double v24 = v72;
    if ((*(unsigned int (**)(char *, uint64_t, void *))(v77 + 48))(v6, 1, v72) == 1)
    {
      sub_55F38((uint64_t)v6, &qword_26E7A8);
      type metadata accessor for ClientErrorPayload();
      sub_1341FC();
      swift_allocError();
      uint64_t v25 = v67;
      v23((char *)v26, v15, v67);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      uint64_t v27 = *(void (**)(char *, uint64_t))(v12 + 8);
      v27(v15, v25);
      return ((uint64_t (*)(char *, uint64_t))v27)(v17, v25);
    }
    else
    {
      unint64_t v66 = v17;
      char v28 = *(void (**)(char *, char *, void *))(v77 + 32);
      uint64_t v29 = v68;
      v28(v68, v6, v24);
      uint64_t v30 = v71;
      v28((char *)v71, v29, v24);
      uint64_t v31 = (int *)type metadata accessor for ClientCurrency.Request();
      uint64_t v32 = v31[7];
      uint64_t v33 = (void *)(v30 + v31[5]);
      *uint64_t v33 = 1414745936;
      v33[1] = 0xE400000000000000;
      uint64_t v34 = v31[6];
      *(void *)(v30 + v34) = _swiftEmptyArrayStorage;
      uint64_t v35 = v30 + v32;
      *(_OWORD *)(v30 + v32) = xmmword_20ADA0;
      uint64_t v36 = *(void **)(v12 + 8);
      uint64_t v77 = v12 + 8;
      uint64_t v72 = v36;
      ((void (*)(char *, uint64_t))v36)(v15, v67);
      long long v37 = *(_OWORD *)(a1 + 112);
      v74[6] = *(_OWORD *)(a1 + 96);
      v74[7] = v37;
      v74[8] = *(_OWORD *)(a1 + 128);
      uint64_t v75 = *(void *)(a1 + 144);
      long long v38 = *(_OWORD *)(a1 + 48);
      v74[2] = *(_OWORD *)(a1 + 32);
      v74[3] = v38;
      long long v39 = *(_OWORD *)(a1 + 80);
      v74[4] = *(_OWORD *)(a1 + 64);
      v74[5] = v39;
      long long v40 = *(_OWORD *)(a1 + 16);
      v74[0] = *(_OWORD *)a1;
      v74[1] = v40;
      long long v41 = *(void **)(v30 + v34);
      sub_134254((uint64_t *)v74);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        long long v41 = sub_41A9C(0, v41[2] + 1, 1, v41);
      }
      unint64_t v43 = v41[2];
      unint64_t v42 = v41[3];
      unint64_t v44 = v66;
      if (v43 >= v42 >> 1) {
        long long v41 = sub_41A9C((void *)(v42 > 1), v43 + 1, 1, v41);
      }
      v41[2] = v43 + 1;
      unint64_t v45 = (char *)&v41[4 * v43];
      strcpy(v45 + 32, "content-type");
      v45[45] = 0;
      *((_WORD *)v45 + 23) = -5120;
      *((void *)v45 + 6) = 0xD000000000000010;
      *((void *)v45 + 7) = 0x8000000000219310;
      sub_134344((uint64_t *)v74);
      *(void *)(v30 + v34) = v41;
      sub_55844((uint64_t)(v70 + 4), (uint64_t)v76, &qword_2708E8);
      sub_55844((uint64_t)v76, (uint64_t)v73, &qword_2708E8);
      sub_134620(v76);
      sub_12124(&qword_2708E8);
      sub_134818(&qword_2708F0, &qword_2708E8, (void (*)(void))sub_134654);
      uint64_t v46 = v69;
      uint64_t v47 = sub_1FACB0();
      if (v46)
      {
        sub_1346A8(v76);
        ((void (*)(char *, uint64_t))v72)(v44, v67);
        return sub_133F40(v30);
      }
      else
      {
        uint64_t v49 = v47;
        uint64_t v50 = v48;
        sub_1346A8(v76);
        sub_134480(*(void *)v35, *(void *)(v35 + 8));
        *(void *)uint64_t v35 = v49;
        *(void *)(v35 + 8) = v50;
        sub_134254((uint64_t *)v74);
        unint64_t v52 = v41[2];
        unint64_t v51 = v41[3];
        if (v52 >= v51 >> 1) {
          long long v41 = sub_41A9C((void *)(v51 > 1), v52 + 1, 1, v41);
        }
        uint64_t v53 = v70;
        v41[2] = v52 + 1;
        unint64_t v54 = &v41[4 * v52];
        v54[4] = 0x747065636361;
        v54[5] = 0xE600000000000000;
        v54[6] = 0xD000000000000010;
        v54[7] = 0x8000000000219310;
        sub_134344((uint64_t *)v74);
        *(void *)(v30 + v34) = v41;
        uint64_t v55 = v53[1];
        if (v55)
        {
          uint64_t v56 = *v53;
          swift_bridgeObjectRetain();
          sub_134254((uint64_t *)v74);
          unint64_t v58 = v41[2];
          unint64_t v57 = v41[3];
          swift_bridgeObjectRetain();
          if (v58 >= v57 >> 1) {
            long long v41 = sub_41A9C((void *)(v57 > 1), v58 + 1, 1, v41);
          }
          v41[2] = v58 + 1;
          uint64_t v59 = &v41[4 * v58];
          v59[4] = 0xD000000000000014;
          v59[5] = 0x8000000000219360;
          v59[6] = v56;
          v59[7] = v55;
          swift_bridgeObjectRelease();
          sub_134344((uint64_t *)v74);
          *(void *)(v71 + v34) = v41;
        }
        uint64_t v60 = v53[3];
        if (v60)
        {
          uint64_t v61 = v53[2];
          swift_bridgeObjectRetain();
          sub_134254((uint64_t *)v74);
          unint64_t v63 = v41[2];
          unint64_t v62 = v41[3];
          swift_bridgeObjectRetain();
          if (v63 >= v62 >> 1) {
            long long v41 = sub_41A9C((void *)(v62 > 1), v63 + 1, 1, v41);
          }
          v41[2] = v63 + 1;
          uint64_t v64 = &v41[4 * v63];
          v64[4] = 0xD00000000000001BLL;
          v64[5] = 0x80000000002193A0;
          v64[6] = v61;
          v64[7] = v60;
          swift_bridgeObjectRelease();
          sub_134344((uint64_t *)v74);
          *(void *)(v71 + v34) = v41;
        }
        return ((uint64_t (*)(char *, uint64_t))v72)(v44, v67);
      }
    }
  }
}

uint64_t sub_1306D4@<X0>(uint64_t a1@<X8>)
{
  return sub_12FE28(*(void *)(v1 + 16), *(uint64_t **)(v1 + 24), a1);
}

uint64_t sub_1306F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_130714, 0, 0);
}

uint64_t sub_130714()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[28];
  uint64_t v3 = v1[29];
  sub_5D64(v1 + 25, v2);
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8)
                                                                                             + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_13083C;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return v8(v5, v6, 0x6E656D6D6F636572, 0xEB00000000325664, v2, v3);
}

uint64_t sub_13083C()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_130930(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_98BD4;
  v7[2] = a1;
  return _swift_task_switch(sub_130714, 0, 0);
}

uint64_t *sub_1309EC@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *result;
  if (*result > 400)
  {
    if (v4 == 401)
    {
      uint64_t v10 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v10);
      double result = (uint64_t *)swift_bridgeObjectRelease();
      if (v2) {
        return result;
      }
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v10;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(void *)(a2 + 56) = 0;
      char v5 = 2;
      goto LABEL_15;
    }
    if (v4 == 500)
    {
      uint64_t v10 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v10);
      if (v2) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v10;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(void *)(a2 + 56) = 0;
      char v5 = 3;
      goto LABEL_15;
    }
LABEL_14:
    *(void *)a2 = v4;
    *(_OWORD *)(a2 + 8) = 0u;
    *(_OWORD *)(a2 + 24) = 0u;
    *(_OWORD *)(a2 + 40) = 0u;
    *(void *)(a2 + 56) = 0;
    char v5 = 4;
LABEL_15:
    *(unsigned char *)(a2 + 64) = v5;
    return result;
  }
  if (v4 != 200)
  {
    if (v4 == 400)
    {
      uint64_t v10 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v10);
      double result = (uint64_t *)swift_bridgeObjectRelease();
      if (v2) {
        return result;
      }
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v10;
      *(_OWORD *)(a2 + 8) = 0u;
      *(_OWORD *)(a2 + 24) = 0u;
      *(_OWORD *)(a2 + 40) = 0u;
      *(void *)(a2 + 56) = 0;
      char v5 = 1;
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v10 = result[1];
  swift_bridgeObjectRetain();
  sub_52780(0xD000000000000010, 0x8000000000219310, &v10);
  double result = (uint64_t *)swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_1345CC();
    double result = (uint64_t *)sub_1FAC00();
    uint64_t v6 = v14;
    long long v7 = v11;
    long long v8 = v12;
    long long v9 = v13;
    *(void *)a2 = v10;
    *(_OWORD *)(a2 + 8) = v7;
    *(_OWORD *)(a2 + 24) = v8;
    *(_OWORD *)(a2 + 40) = v9;
    *(void *)(a2 + 56) = v6;
    *(unsigned char *)(a2 + 64) = 0;
  }
  return result;
}

uint64_t *sub_130DC8@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1309EC(a1, a2);
}

uint64_t Transport.Client.personalizationMetadata(input:)(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = v2;
  *(_OWORD *)(v3 + 32) = *(_OWORD *)a2;
  *(void *)(v3 + 48) = *(void *)(a2 + 16);
  return _swift_task_switch(sub_130E14, 0, 0);
}

void sub_130E14()
{
  uint64_t v1 = *(void *)(v0 + 48);
  long long v7 = *(_OWORD *)(v0 + 32);
  uint64_t v2 = *(void *)(v0 + 24);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 56) = v3;
  *(void *)(v3 + 16) = v2;
  *(_OWORD *)(v3 + 24) = v7;
  *(void *)(v3 + 40) = v1;
  uint64_t v4 = swift_task_alloc();
  *(void *)(v0 + 64) = v4;
  *(void *)(v4 + 16) = v2;
  uint64_t v5 = swift_task_alloc();
  *(void *)(v0 + 72) = v5;
  *(void *)(v5 + 16) = v2;
  long long v8 = (char *)&dword_270848 + dword_270848;
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 80) = v6;
  void *v6 = v0;
  v6[1] = sub_130F74;
  __asm { BR              X8; sub_12F1CC }
}

uint64_t sub_130F74()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_1310C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v69 = a4;
  uint64_t v65 = a3;
  uint64_t v64 = a2;
  uint64_t v70 = a5;
  uint64_t v6 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v6 - 8);
  long long v8 = (char *)&v63 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1FAF80();
  uint64_t v71 = *(void *)(v9 - 8);
  uint64_t v72 = v9;
  __chkstk_darwin(v9);
  uint64_t v67 = (char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_2708A0);
  __chkstk_darwin(v11 - 8);
  long long v13 = (char *)&v63 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1FADC0();
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v63 - v19;
  uint64_t v22 = *(void *)(a1 + 152);
  uint64_t v21 = *(void *)(a1 + 160);
  sub_1FADB0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v13, 1, v14) == 1)
  {
    sub_55F38((uint64_t)v13, &qword_2708A0);
    type metadata accessor for ClientErrorPayload();
    sub_1341FC();
    swift_allocError();
    void *v23 = v22;
    v23[1] = v21;
    swift_storeEnumTagMultiPayload();
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v20, v13, v14);
    uint64_t v25 = (void (*)(_OWORD *, void))sub_1FADA0();
    v76._countAndFlagsBits = 0xD000000000000022;
    v76._object = (void *)0x8000000000219330;
    sub_1FB8F0(v76);
    v25(v73, 0);
    uint64_t v26 = *(void (**)(char *, char *, uint64_t))(v15 + 16);
    uint64_t v66 = v14;
    v26(v18, v20, v14);
    sub_1FAD90();
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v71 + 48))(v8, 1, v72) == 1)
    {
      sub_55F38((uint64_t)v8, &qword_26E7A8);
      type metadata accessor for ClientErrorPayload();
      sub_1341FC();
      swift_allocError();
      uint64_t v27 = v66;
      v26(v28, v18, v66);
      swift_storeEnumTagMultiPayload();
      swift_willThrow();
      uint64_t v29 = *(void (**)(char *, uint64_t))(v15 + 8);
      v29(v18, v27);
      return ((uint64_t (*)(char *, uint64_t))v29)(v20, v27);
    }
    else
    {
      uint64_t v30 = v20;
      uint64_t v31 = *(void (**)(char *, char *, uint64_t))(v71 + 32);
      uint64_t v32 = v67;
      uint64_t v33 = v8;
      uint64_t v34 = v72;
      v31(v67, v33, v72);
      uint64_t v35 = v70;
      v31((char *)v70, v32, v34);
      uint64_t v36 = (int *)type metadata accessor for ClientCurrency.Request();
      uint64_t v37 = v36[7];
      long long v38 = (void *)(v35 + v36[5]);
      *long long v38 = 1414745936;
      v38[1] = 0xE400000000000000;
      uint64_t v39 = v36[6];
      *(void *)(v35 + v39) = _swiftEmptyArrayStorage;
      uint64_t v40 = v35 + v37;
      *(_OWORD *)(v35 + v37) = xmmword_20ADA0;
      uint64_t v71 = *(void *)(v15 + 8);
      uint64_t v72 = v15 + 8;
      ((void (*)(char *, uint64_t))v71)(v18, v66);
      long long v41 = *(_OWORD *)(a1 + 112);
      v73[6] = *(_OWORD *)(a1 + 96);
      v73[7] = v41;
      v73[8] = *(_OWORD *)(a1 + 128);
      uint64_t v74 = *(void *)(a1 + 144);
      long long v42 = *(_OWORD *)(a1 + 48);
      v73[2] = *(_OWORD *)(a1 + 32);
      v73[3] = v42;
      long long v43 = *(_OWORD *)(a1 + 80);
      v73[4] = *(_OWORD *)(a1 + 64);
      v73[5] = v43;
      long long v44 = *(_OWORD *)(a1 + 16);
      v73[0] = *(_OWORD *)a1;
      v73[1] = v44;
      unint64_t v45 = *(void **)(v35 + v39);
      sub_134254((uint64_t *)v73);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v63 = v30;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v45 = sub_41A9C(0, v45[2] + 1, 1, v45);
      }
      uint64_t v47 = v69;
      unint64_t v49 = v45[2];
      unint64_t v48 = v45[3];
      if (v49 >= v48 >> 1) {
        unint64_t v45 = sub_41A9C((void *)(v48 > 1), v49 + 1, 1, v45);
      }
      v45[2] = v49 + 1;
      uint64_t v50 = (char *)&v45[4 * v49];
      strcpy(v50 + 32, "content-type");
      v50[45] = 0;
      *((_WORD *)v50 + 23) = -5120;
      *((void *)v50 + 6) = 0xD000000000000010;
      *((void *)v50 + 7) = 0x8000000000219310;
      sub_134344((uint64_t *)v73);
      *(void *)(v35 + v39) = v45;
      uint64_t v75 = v47;
      swift_bridgeObjectRetain();
      sub_12124(&qword_2708B0);
      sub_134818(&qword_2708B8, &qword_2708B0, (void (*)(void))sub_13442C);
      uint64_t v51 = v68;
      uint64_t v52 = sub_1FACB0();
      if (v51)
      {
        swift_bridgeObjectRelease();
        ((void (*)(char *, uint64_t))v71)(v63, v66);
        return sub_133F40(v35);
      }
      else
      {
        uint64_t v54 = v52;
        uint64_t v55 = v53;
        swift_bridgeObjectRelease();
        sub_134480(*(void *)v40, *(void *)(v40 + 8));
        *(void *)uint64_t v40 = v54;
        *(void *)(v40 + 8) = v55;
        sub_134254((uint64_t *)v73);
        unint64_t v57 = v45[2];
        unint64_t v56 = v45[3];
        if (v57 >= v56 >> 1) {
          unint64_t v45 = sub_41A9C((void *)(v56 > 1), v57 + 1, 1, v45);
        }
        uint64_t v58 = v65;
        v45[2] = v57 + 1;
        uint64_t v59 = &v45[4 * v57];
        v59[4] = 0x747065636361;
        v59[5] = 0xE600000000000000;
        v59[6] = 0xD000000000000010;
        v59[7] = 0x8000000000219310;
        sub_134344((uint64_t *)v73);
        *(void *)(v35 + v39) = v45;
        if (v58)
        {
          swift_bridgeObjectRetain();
          sub_134254((uint64_t *)v73);
          unint64_t v61 = v45[2];
          unint64_t v60 = v45[3];
          swift_bridgeObjectRetain();
          if (v61 >= v60 >> 1) {
            unint64_t v45 = sub_41A9C((void *)(v60 > 1), v61 + 1, 1, v45);
          }
          v45[2] = v61 + 1;
          unint64_t v62 = &v45[4 * v61];
          v62[4] = 0xD000000000000014;
          v62[5] = 0x8000000000219360;
          v62[6] = v64;
          v62[7] = v58;
          swift_bridgeObjectRelease();
          sub_134344((uint64_t *)v73);
          *(void *)(v35 + v39) = v45;
        }
        return ((uint64_t (*)(char *, uint64_t))v71)(v63, v66);
      }
    }
  }
}

uint64_t sub_13188C@<X0>(uint64_t a1@<X8>)
{
  return sub_1310C4(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_1318AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v3[3] = a2;
  v3[4] = a3;
  v3[2] = a1;
  return _swift_task_switch(sub_1318D0, 0, 0);
}

uint64_t sub_1318D0()
{
  uint64_t v1 = (void *)v0[4];
  uint64_t v2 = v1[28];
  uint64_t v3 = v1[29];
  sub_5D64(v1 + 25, v2);
  long long v8 = (uint64_t (*)(uint64_t, uint64_t, unint64_t, unint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[5] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_134918;
  uint64_t v5 = v0[2];
  uint64_t v6 = v0[3];
  return v8(v5, v6, 0xD000000000000017, 0x8000000000219290, v2, v3);
}

uint64_t sub_1319F4(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *(void *)(v2 + 16);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[3] = a2;
  v7[4] = v6;
  v7[1] = sub_98BD4;
  v7[2] = a1;
  return _swift_task_switch(sub_1318D0, 0, 0);
}

uint64_t *sub_131AB0@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *result;
  if (*result > 400)
  {
    if (v4 == 401)
    {
      uint64_t v6 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v6);
      double result = (uint64_t *)swift_bridgeObjectRelease();
      if (v2) {
        return result;
      }
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v6;
      char v5 = 2;
      goto LABEL_15;
    }
    if (v4 == 500)
    {
      uint64_t v6 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v6);
      if (v2) {
        return (uint64_t *)swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v6;
      char v5 = 3;
      goto LABEL_15;
    }
LABEL_14:
    *(void *)a2 = v4;
    char v5 = 4;
LABEL_15:
    *(unsigned char *)(a2 + 8) = v5;
    return result;
  }
  if (v4 != 200)
  {
    if (v4 == 400)
    {
      uint64_t v6 = result[1];
      swift_bridgeObjectRetain();
      sub_52780(0xD000000000000010, 0x8000000000219310, &v6);
      double result = (uint64_t *)swift_bridgeObjectRelease();
      if (v2) {
        return result;
      }
      sub_12124(&qword_270880);
      sub_134818(&qword_270888, &qword_270880, (void (*)(void))sub_134154);
      double result = (uint64_t *)sub_1FAC00();
      *(void *)a2 = v6;
      char v5 = 1;
      goto LABEL_15;
    }
    goto LABEL_14;
  }
  uint64_t v6 = result[1];
  swift_bridgeObjectRetain();
  sub_52780(0xD000000000000010, 0x8000000000219310, &v6);
  double result = (uint64_t *)swift_bridgeObjectRelease();
  if (!v2)
  {
    sub_1341A8();
    double result = (uint64_t *)sub_1FAC00();
    *(void *)a2 = v6;
    *(unsigned char *)(a2 + 8) = 0;
  }
  return result;
}

uint64_t *sub_131E14@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_131AB0(a1, a2);
}

uint64_t _s6ClientVwxx(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }
  if (a1[6]) {
    swift_release();
  }
  if (a1[8]) {
    swift_release();
  }
  if (a1[10]) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  if (a1[21]) {
    swift_release();
  }
  if (a1[23]) {
    swift_release();
  }

  return sub_1264C((uint64_t)(a1 + 25));
}

uint64_t _s6ClientVwcp(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v13 = *(void *)(a2 + 80);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v13;
    *(void *)(a1 + 88) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  uint64_t v15 = *(void *)(a2 + 168);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v16 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v16;
  uint64_t v17 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = v17;
  uint64_t v18 = *(void *)(a2 + 160);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = v18;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  if (v15)
  {
    uint64_t v19 = *(void *)(a2 + 176);
    *(void *)(a1 + 168) = v15;
    *(void *)(a1 + 176) = v19;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  }
  uint64_t v20 = *(void *)(a2 + 184);
  if (v20)
  {
    uint64_t v21 = *(void *)(a2 + 192);
    *(void *)(a1 + 184) = v20;
    *(void *)(a1 + 192) = v21;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  }
  long long v22 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 224) = v22;
  (**(void (***)(uint64_t, uint64_t))(v22 - 8))(a1 + 200, a2 + 200);
  return a1;
}

void *_s6ClientVwca(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = a2[10];
  if (a1[10])
  {
    if (v19)
    {
      uint64_t v20 = a2[11];
      a1[10] = v19;
      a1[11] = v20;
      swift_retain();
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v19)
  {
    uint64_t v21 = a2[11];
    a1[10] = v19;
    a1[11] = v21;
    swift_retain();
    goto LABEL_43;
  }
  *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
LABEL_43:
  uint64_t v22 = a2[13];
  a1[12] = a2[12];
  a1[13] = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a2[15];
  a1[14] = a2[14];
  a1[15] = v23;
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  a1[19] = a2[19];
  a1[20] = a2[20];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v24 = a2[21];
  if (a1[21])
  {
    if (v24)
    {
      uint64_t v25 = a2[22];
      a1[21] = v24;
      a1[22] = v25;
      swift_retain();
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v24)
  {
    uint64_t v26 = a2[22];
    a1[21] = v24;
    a1[22] = v26;
    swift_retain();
    goto LABEL_50;
  }
  *(_OWORD *)(a1 + 21) = *(_OWORD *)(a2 + 21);
LABEL_50:
  uint64_t v27 = a2[23];
  if (!a1[23])
  {
    if (v27)
    {
      uint64_t v29 = a2[24];
      a1[23] = v27;
      a1[24] = v29;
      swift_retain();
      goto LABEL_57;
    }
LABEL_56:
    *(_OWORD *)(a1 + 23) = *(_OWORD *)(a2 + 23);
    goto LABEL_57;
  }
  if (!v27)
  {
    swift_release();
    goto LABEL_56;
  }
  uint64_t v28 = a2[24];
  a1[23] = v27;
  a1[24] = v28;
  swift_retain();
  swift_release();
LABEL_57:
  sub_531C8(a1 + 25, a2 + 25);
  return a1;
}

__n128 _s6ClientVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  long long v7 = a2[7];
  long long v8 = a2[8];
  long long v9 = a2[10];
  *(_OWORD *)(a1 + 144) = a2[9];
  *(_OWORD *)(a1 + 160) = v9;
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  __n128 result = (__n128)a2[11];
  long long v11 = a2[12];
  long long v12 = a2[14];
  *(_OWORD *)(a1 + 208) = a2[13];
  *(_OWORD *)(a1 + 224) = v12;
  *(__n128 *)(a1 + 176) = result;
  *(_OWORD *)(a1 + 192) = v11;
  return result;
}

uint64_t _s6ClientVwta(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (*(void *)(a1 + 64))
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v17;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v18;
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = a2[10];
  if (*(void *)(a1 + 80))
  {
    if (v19)
    {
      uint64_t v20 = a2[11];
      *(void *)(a1 + 80) = v19;
      *(void *)(a1 + 88) = v20;
      swift_release();
      goto LABEL_43;
    }
    swift_release();
  }
  else if (v19)
  {
    uint64_t v21 = a2[11];
    *(void *)(a1 + 80) = v19;
    *(void *)(a1 + 88) = v21;
    goto LABEL_43;
  }
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
LABEL_43:
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  swift_release();
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  swift_release();
  *(void *)(a1 + 128) = a2[16];
  swift_release();
  *(void *)(a1 + 136) = a2[17];
  swift_release();
  *(void *)(a1 + 144) = a2[18];
  swift_release();
  uint64_t v22 = a2[20];
  *(void *)(a1 + 152) = a2[19];
  *(void *)(a1 + 160) = v22;
  swift_bridgeObjectRelease();
  uint64_t v23 = a2[21];
  if (*(void *)(a1 + 168))
  {
    if (v23)
    {
      uint64_t v24 = a2[22];
      *(void *)(a1 + 168) = v23;
      *(void *)(a1 + 176) = v24;
      swift_release();
      goto LABEL_50;
    }
    swift_release();
  }
  else if (v23)
  {
    uint64_t v25 = a2[22];
    *(void *)(a1 + 168) = v23;
    *(void *)(a1 + 176) = v25;
    goto LABEL_50;
  }
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 21);
LABEL_50:
  uint64_t v26 = a2[23];
  if (!*(void *)(a1 + 184))
  {
    if (v26)
    {
      uint64_t v28 = a2[24];
      *(void *)(a1 + 184) = v26;
      *(void *)(a1 + 192) = v28;
      goto LABEL_57;
    }
LABEL_56:
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 23);
    goto LABEL_57;
  }
  if (!v26)
  {
    swift_release();
    goto LABEL_56;
  }
  uint64_t v27 = a2[24];
  *(void *)(a1 + 184) = v26;
  *(void *)(a1 + 192) = v27;
  swift_release();
LABEL_57:
  sub_1264C(a1 + 200);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 25);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 27);
  *(void *)(a1 + 232) = a2[29];
  return a1;
}

uint64_t _s6ClientVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 240)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s6ClientVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 232) = 0;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 240) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 240) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Client()
{
  return &type metadata for Transport.Client;
}

uint64_t sub_1328D4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16 = (int *)sub_12124(&qword_2708D0);
  uint64_t v17 = a9 + v16[10];
  uint64_t v18 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = a9 + v16[11];
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  long long v20 = a3[1];
  *(_OWORD *)(a9 + 16) = *a3;
  *(_OWORD *)(a9 + 32) = v20;
  long long v21 = a3[3];
  *(_OWORD *)(a9 + 48) = a3[2];
  *(_OWORD *)(a9 + 64) = v21;
  sub_1340A0(a4, v17);
  sub_134108(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(void *)(v19 + 24));
  *(void *)uint64_t v19 = a5;
  *(void *)(v19 + 8) = a6;
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  uint64_t v31 = a10;
  swift_errorRetain();
  sub_12124(&qword_26D670);
  sub_12124(&qword_270870);
  if (swift_dynamicCast())
  {
    sub_37C30(v29, (uint64_t)v32);
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    sub_5D64(v32, v33);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 48))(v22, v23);
    swift_errorRelease();
    sub_55F38(a4, &qword_270858);
    *(void *)(a9 + v16[12]) = v24;
    return sub_1264C((uint64_t)v32);
  }
  else
  {
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_55F38(a4, &qword_270858);
    uint64_t result = sub_55F38((uint64_t)v29, &qword_270878);
    *(void *)(a9 + v16[12]) = a10;
  }
  return result;
}

uint64_t sub_132AC8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, _OWORD *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v16 = (int *)sub_12124(&qword_270908);
  uint64_t v17 = a9 + v16[10];
  uint64_t v18 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 1, 1, v18);
  uint64_t v19 = a9 + v16[11];
  *(_OWORD *)uint64_t v19 = 0u;
  *(_OWORD *)(v19 + 16) = 0u;
  *(void *)a9 = a1;
  *(void *)(a9 + 8) = a2;
  long long v20 = a3[3];
  *(_OWORD *)(a9 + 48) = a3[2];
  *(_OWORD *)(a9 + 64) = v20;
  *(_OWORD *)(a9 + 80) = a3[4];
  long long v21 = a3[1];
  *(_OWORD *)(a9 + 16) = *a3;
  *(_OWORD *)(a9 + 32) = v21;
  sub_1340A0(a4, v17);
  sub_134108(*(void *)v19, *(void *)(v19 + 8), *(void *)(v19 + 16), *(void *)(v19 + 24));
  *(void *)uint64_t v19 = a5;
  *(void *)(v19 + 8) = a6;
  *(void *)(v19 + 16) = a7;
  *(void *)(v19 + 24) = a8;
  uint64_t v31 = a10;
  swift_errorRetain();
  sub_12124(&qword_26D670);
  sub_12124(&qword_270870);
  if (swift_dynamicCast())
  {
    sub_37C30(v29, (uint64_t)v32);
    uint64_t v22 = v33;
    uint64_t v23 = v34;
    sub_5D64(v32, v33);
    uint64_t v24 = (*(uint64_t (**)(uint64_t, uint64_t))(v23 + 48))(v22, v23);
    swift_errorRelease();
    sub_55F38(a4, &qword_270858);
    *(void *)(a9 + v16[12]) = v24;
    return sub_1264C((uint64_t)v32);
  }
  else
  {
    uint64_t v30 = 0;
    memset(v29, 0, sizeof(v29));
    sub_55F38(a4, &qword_270858);
    uint64_t result = sub_55F38((uint64_t)v29, &qword_270878);
    *(void *)(a9 + v16[12]) = a10;
  }
  return result;
}

uint64_t sub_132CC4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v19 = sub_12124(&qword_270860);
  uint64_t v20 = (uint64_t)a9 + *(int *)(v19 + 40);
  uint64_t v21 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 1, 1, v21);
  uint64_t v29 = v19;
  uint64_t v22 = (char *)a9 + *(int *)(v19 + 44);
  *(_OWORD *)uint64_t v22 = 0u;
  *((_OWORD *)v22 + 1) = 0u;
  *a9 = a1;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  sub_1340A0(a6, v20);
  sub_134108(*(void *)v22, *((void *)v22 + 1), *((void *)v22 + 2), *((void *)v22 + 3));
  *(void *)uint64_t v22 = a7;
  *((void *)v22 + 1) = a8;
  *((void *)v22 + 2) = a10;
  *((void *)v22 + 3) = a11;
  uint64_t v32 = a12;
  swift_errorRetain();
  sub_12124(&qword_26D670);
  sub_12124(&qword_270870);
  if (swift_dynamicCast())
  {
    sub_37C30(v30, (uint64_t)v33);
    uint64_t v23 = v34;
    uint64_t v24 = v35;
    sub_5D64(v33, v34);
    uint64_t v25 = (*(uint64_t (**)(uint64_t, uint64_t))(v24 + 48))(v23, v24);
    swift_errorRelease();
    sub_55F38(a6, &qword_270858);
    *(void *)((char *)a9 + *(int *)(v29 + 48)) = v25;
    return sub_1264C((uint64_t)v33);
  }
  else
  {
    uint64_t v31 = 0;
    memset(v30, 0, sizeof(v30));
    sub_55F38(a6, &qword_270858);
    uint64_t result = sub_55F38((uint64_t)v30, &qword_270878);
    *(void *)((char *)a9 + *(int *)(v29 + 48)) = a12;
  }
  return result;
}

uint64_t sub_132ECC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = sub_12124(&qword_270858);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v21 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v21 - v16;
  sub_133FD4(a5, (uint64_t)&v21 - v16);
  uint64_t v18 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56))(v17, 0, 1, v18);
  a6[3] = sub_12124(&qword_270860);
  a6[4] = sub_1346FC(&qword_270868, &qword_270860);
  uint64_t v19 = sub_51BD4(a6);
  sub_134038((uint64_t)v17, (uint64_t)v15);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_132CC4(0xD000000000000017, 0x8000000000219290, a2, a3, a4, (uint64_t)v15, 0, 0, v19, 0, 0, a1);
  return sub_55F38((uint64_t)v17, &qword_270858);
}

uint64_t sub_133084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, unint64_t a10)
{
  uint64_t v26 = a2;
  uint64_t v27 = a6;
  uint64_t v17 = sub_12124(&qword_270858);
  uint64_t v18 = __chkstk_darwin(v17 - 8);
  uint64_t v20 = (char *)&v26 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v26 - v21;
  sub_133FD4(a5, (uint64_t)&v26 - v21);
  uint64_t v23 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v22, 0, 1, v23);
  a9[3] = sub_12124(&qword_270860);
  a9[4] = sub_1346FC(&qword_270868, &qword_270860);
  uint64_t v24 = sub_51BD4(a9);
  sub_134038((uint64_t)v22, (uint64_t)v20);
  swift_bridgeObjectRetain();
  sub_52090(a8, a10);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_132CC4(0xD000000000000017, 0x8000000000219290, v26, a3, a4, (uint64_t)v20, v27, a7, v24, a8, a10, a1);
  return sub_55F38((uint64_t)v22, &qword_270858);
}

uint64_t sub_133260@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_12124(&qword_270858);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  long long v12 = a2[1];
  v17[0] = *a2;
  v17[1] = v12;
  long long v13 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v13;
  uint64_t v14 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  a3[3] = sub_12124(&qword_2708D0);
  a3[4] = sub_1346FC(&qword_2708D8, &qword_2708D0);
  uint64_t v15 = sub_51BD4(a3);
  sub_134038((uint64_t)v11, (uint64_t)v9);
  sub_134568((uint64_t)v17);
  swift_errorRetain();
  sub_1328D4(0x6E656D6D6F636572, 0xEB00000000325664, v17, (uint64_t)v9, 0, 0, 0, 0, (uint64_t)v15, a1);
  return sub_55F38((uint64_t)v11, &qword_270858);
}

uint64_t sub_1333FC@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_12124(&qword_270858);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)v19 - v12;
  long long v14 = a2[1];
  v19[0] = *a2;
  v19[1] = v14;
  long long v15 = a2[3];
  v19[2] = a2[2];
  v19[3] = v15;
  sub_133FD4(a3, (uint64_t)v19 - v12);
  uint64_t v16 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
  a4[3] = sub_12124(&qword_2708D0);
  a4[4] = sub_1346FC(&qword_2708D8, &qword_2708D0);
  uint64_t v17 = sub_51BD4(a4);
  sub_134038((uint64_t)v13, (uint64_t)v11);
  sub_134568((uint64_t)v19);
  swift_errorRetain();
  sub_1328D4(0x6E656D6D6F636572, 0xEB00000000325664, v19, (uint64_t)v11, 0, 0, 0, 0, (uint64_t)v17, a1);
  return sub_55F38((uint64_t)v13, &qword_270858);
}

uint64_t sub_1335B0@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v16 = sub_12124(&qword_270858);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v27 - v20;
  long long v22 = a2[1];
  v27[0] = *a2;
  v27[1] = v22;
  long long v23 = a2[3];
  v27[2] = a2[2];
  v27[3] = v23;
  sub_133FD4(a3, (uint64_t)v27 - v20);
  uint64_t v24 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 0, 1, v24);
  a8[3] = sub_12124(&qword_2708D0);
  a8[4] = sub_1346FC(&qword_2708D8, &qword_2708D0);
  uint64_t v25 = sub_51BD4(a8);
  sub_134038((uint64_t)v21, (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_52090(a6, a7);
  sub_134568((uint64_t)v27);
  swift_errorRetain();
  sub_1328D4(0x6E656D6D6F636572, 0xEB00000000325664, v27, (uint64_t)v19, a4, a5, a6, a7, (uint64_t)v25, a1);
  return sub_55F38((uint64_t)v21, &qword_270858);
}

uint64_t sub_133790@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_12124(&qword_270858);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)v17 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)v17 - v10;
  long long v12 = a2[3];
  void v17[2] = a2[2];
  v17[3] = v12;
  _OWORD v17[4] = a2[4];
  long long v13 = a2[1];
  v17[0] = *a2;
  v17[1] = v13;
  uint64_t v14 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v11, 1, 1, v14);
  a3[3] = sub_12124(&qword_270908);
  a3[4] = sub_1346FC(&qword_270910, &qword_270908);
  long long v15 = sub_51BD4(a3);
  sub_134038((uint64_t)v11, (uint64_t)v9);
  sub_13474C((uint64_t)v17);
  swift_errorRetain();
  sub_132AC8(0x6E656D6D6F636572, 0xE900000000000064, v17, (uint64_t)v9, 0, 0, 0, 0, (uint64_t)v15, a1);
  return sub_55F38((uint64_t)v11, &qword_270858);
}

uint64_t sub_133930@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  uint64_t v8 = sub_12124(&qword_270858);
  uint64_t v9 = __chkstk_darwin(v8 - 8);
  uint64_t v11 = (char *)v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  long long v13 = (char *)v19 - v12;
  long long v14 = a2[3];
  v19[2] = a2[2];
  v19[3] = v14;
  _OWORD v19[4] = a2[4];
  long long v15 = a2[1];
  v19[0] = *a2;
  v19[1] = v15;
  sub_133FD4(a3, (uint64_t)v19 - v12);
  uint64_t v16 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v13, 0, 1, v16);
  a4[3] = sub_12124(&qword_270908);
  a4[4] = sub_1346FC(&qword_270910, &qword_270908);
  uint64_t v17 = sub_51BD4(a4);
  sub_134038((uint64_t)v13, (uint64_t)v11);
  sub_13474C((uint64_t)v19);
  swift_errorRetain();
  sub_132AC8(0x6E656D6D6F636572, 0xE900000000000064, v19, (uint64_t)v11, 0, 0, 0, 0, (uint64_t)v17, a1);
  return sub_55F38((uint64_t)v13, &qword_270858);
}

uint64_t sub_133AE8@<X0>(uint64_t a1@<X0>, _OWORD *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t *a8@<X8>)
{
  uint64_t v16 = sub_12124(&qword_270858);
  uint64_t v17 = __chkstk_darwin(v16 - 8);
  uint64_t v19 = (char *)v27 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)v27 - v20;
  long long v22 = a2[3];
  v27[2] = a2[2];
  v27[3] = v22;
  _OWORD v27[4] = a2[4];
  long long v23 = a2[1];
  v27[0] = *a2;
  v27[1] = v23;
  sub_133FD4(a3, (uint64_t)v27 - v20);
  uint64_t v24 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v21, 0, 1, v24);
  a8[3] = sub_12124(&qword_270908);
  a8[4] = sub_1346FC(&qword_270910, &qword_270908);
  uint64_t v25 = sub_51BD4(a8);
  sub_134038((uint64_t)v21, (uint64_t)v19);
  swift_bridgeObjectRetain();
  sub_52090(a6, a7);
  sub_13474C((uint64_t)v27);
  swift_errorRetain();
  sub_132AC8(0x6E656D6D6F636572, 0xE900000000000064, v27, (uint64_t)v19, a4, a5, a6, a7, (uint64_t)v25, a1);
  return sub_55F38((uint64_t)v21, &qword_270858);
}

uint64_t sub_133CCC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t v6 = sub_12124(&qword_270858);
  uint64_t v7 = __chkstk_darwin(v6 - 8);
  uint64_t v9 = (char *)&v18 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v18 - v10;
  uint64_t v12 = *a2;
  uint64_t v13 = a2[1];
  uint64_t v14 = a2[2];
  uint64_t v15 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v11, 1, 1, v15);
  a3[3] = sub_12124(&qword_270860);
  a3[4] = sub_1346FC(&qword_270868, &qword_270860);
  uint64_t v16 = sub_51BD4(a3);
  sub_134038((uint64_t)v11, (uint64_t)v9);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_errorRetain();
  sub_132CC4(0xD000000000000017, 0x8000000000219290, v12, v13, v14, (uint64_t)v9, 0, 0, v16, 0, 0, a1);
  return sub_55F38((uint64_t)v11, &qword_270858);
}

uint64_t sub_133E74@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_133CCC(a1, *(uint64_t **)(v2 + 16), a2);
}

uint64_t sub_133E7C(uint64_t a1)
{
  uint64_t v4 = (int *)v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_98BD4;
  return sub_1823AC(a1, v4, v5, v6);
}

uint64_t sub_133F30@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_132ECC(a1, **(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(*(void *)(v2 + 16) + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_133F40(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_133F9C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_133084(a1, **(void **)(v2 + 16), *(void *)(*(void *)(v2 + 16) + 8), *(void *)(*(void *)(v2 + 16) + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), a2, *(void *)(v2 + 56));
}

uint64_t sub_133FD4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_134038(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_270858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1340A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_270858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

void sub_134108(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    sub_520E8(a3, a4);
  }
}

unint64_t sub_134154()
{
  unint64_t result = qword_270890;
  if (!qword_270890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270890);
  }
  return result;
}

unint64_t sub_1341A8()
{
  unint64_t result = qword_270898;
  if (!qword_270898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270898);
  }
  return result;
}

unint64_t sub_1341FC()
{
  unint64_t result = qword_2708A8;
  if (!qword_2708A8)
  {
    type metadata accessor for ClientErrorPayload();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2708A8);
  }
  return result;
}

uint64_t *sub_134254(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  uint64_t v6 = a1[10];
  sub_52948(*a1);
  sub_52948(v2);
  sub_52948(v3);
  sub_52948(v4);
  sub_52948(v5);
  sub_52948(v6);
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t *sub_134344(uint64_t *a1)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[4];
  uint64_t v4 = a1[6];
  uint64_t v5 = a1[8];
  uint64_t v7 = a1[10];
  sub_52958(*a1);
  sub_52958(v2);
  sub_52958(v3);
  sub_52958(v4);
  sub_52958(v5);
  sub_52958(v7);
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  return a1;
}

unint64_t sub_13442C()
{
  unint64_t result = qword_2708C0;
  if (!qword_2708C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2708C0);
  }
  return result;
}

uint64_t sub_134480(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_520E8(a1, a2);
  }
  return a1;
}

uint64_t sub_134494@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_133260(a1, *(_OWORD **)(v2 + 16), a2);
}

uint64_t sub_13449C(uint64_t a1)
{
  uint64_t v4 = (int *)v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_5958;
  return sub_1823AC(a1, v4, v5, v6);
}

uint64_t sub_134550@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1333FC(a1, *(_OWORD **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_134558@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1335B0(a1, *(_OWORD **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t sub_134568(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_12A1AC(v2, v3);
  return a1;
}

unint64_t sub_1345CC()
{
  unint64_t result = qword_2708E0;
  if (!qword_2708E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2708E0);
  }
  return result;
}

uint64_t *sub_134620(uint64_t *a1)
{
  return a1;
}

unint64_t sub_134654()
{
  unint64_t result = qword_2708F8;
  if (!qword_2708F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2708F8);
  }
  return result;
}

uint64_t *sub_1346A8(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1346DC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_133790(a1, *(_OWORD **)(v2 + 16), a2);
}

uint64_t sub_1346E4@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_133930(a1, *(_OWORD **)(v2 + 16), *(void *)(v2 + 24), a2);
}

uint64_t sub_1346EC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_133AE8(a1, *(_OWORD **)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), a2);
}

uint64_t sub_1346FC(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_13474C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_12A038(v2, v3);
  return a1;
}

unint64_t sub_1347C4()
{
  unint64_t result = qword_270918;
  if (!qword_270918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270918);
  }
  return result;
}

uint64_t sub_134818(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_134884()
{
  unint64_t result = qword_270930;
  if (!qword_270930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270930);
  }
  return result;
}

void *sub_1348D8(void *a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

uint64_t dispatch thunk of ConfigurationServiceType.availableConfiguration.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t dispatch thunk of ConfigurationServiceType.fetchConfiguration()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_5958;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of ConfigurationServiceType.onChangeOfConfiguration(perform:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 24))();
}

uint64_t sub_134A4C(uint64_t a1)
{
  uint64_t v48 = sub_12124(&qword_2709F8);
  uint64_t v3 = __chkstk_darwin(v48);
  uint64_t v47 = (uint64_t *)((char *)&v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v46 = (uint64_t *)((char *)&v39 - v6);
  __chkstk_darwin(v5);
  unint64_t v45 = (char *)&v39 - v7;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  uint64_t v39 = v1;
  uint64_t v55 = _swiftEmptyArrayStorage;
  sub_469A8(0, v8, 0);
  uint64_t result = sub_73C38(a1);
  if (result < 0) {
    goto LABEL_33;
  }
  unint64_t v12 = result;
  if (result >= 1 << *(unsigned char *)(a1 + 32)) {
    goto LABEL_33;
  }
  uint64_t v13 = a1 + 64;
  uint64_t v40 = a1 + 80;
  int64_t v41 = v8;
  uint64_t v14 = 1;
  uint64_t v43 = a1 + 64;
  uint64_t v44 = a1;
  uint64_t v42 = v11;
  while (1)
  {
    unint64_t v15 = v12 >> 6;
    if ((*(void *)(v13 + 8 * (v12 >> 6)) & (1 << v12)) == 0) {
      break;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_29;
    }
    uint64_t v49 = v14;
    uint64_t v50 = 1 << v12;
    uint64_t v16 = v48;
    uint64_t v17 = v45;
    uint64_t v18 = (uint64_t)&v45[*(int *)(v48 + 48)];
    uint64_t v19 = *(void *)(a1 + 48);
    uint64_t v20 = *(void *)(a1 + 56);
    uint64_t v21 = *(void *)(v19 + 8 * v12);
    uint64_t v22 = type metadata accessor for AttributeAffinityResult() - 8;
    sub_557E0(v20 + *(void *)(*(void *)v22 + 72) * v12, v18);
    void *v17 = v21;
    uint64_t v23 = (uint64_t)v46;
    *uint64_t v46 = v21;
    sub_557E0(v18, v23 + *(int *)(v16 + 48));
    uint64_t v24 = v47;
    sub_135BD8(v23, (uint64_t)v47);
    sub_135C40((uint64_t)v17);
    uint64_t v25 = *v24;
    uint64_t v26 = (uint64_t *)((char *)v24 + *(int *)(v16 + 48));
    sub_12124(&qword_270A00);
    sub_1FB390();
    memcpy(v54, v53, 0x229uLL);
    sub_124B4(v54);
    int v51 = LOBYTE(v54[1]);
    sub_1FB3A0();
    uint64_t v27 = v52;
    uint64_t v28 = *v26;
    sub_135C40((uint64_t)v24);
    uint64_t v9 = v55;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_469A8(0, v9[2] + 1, 1);
      uint64_t v9 = v55;
    }
    unint64_t v30 = v9[2];
    unint64_t v29 = v9[3];
    if (v30 >= v29 >> 1)
    {
      uint64_t result = sub_469A8(v29 > 1, v30 + 1, 1);
      uint64_t v9 = v55;
    }
    v9[2] = v30 + 1;
    uint64_t v31 = &v9[5 * v30];
    v31[4] = v25;
    *((unsigned char *)v31 + 40) = v51;
    v31[6] = _swiftEmptyArrayStorage;
    v31[7] = v27;
    v31[8] = v28;
    a1 = v44;
    char v32 = *(unsigned char *)(v44 + 32);
    if ((uint64_t)v12 >= 1 << v32) {
      goto LABEL_30;
    }
    uint64_t v13 = v43;
    uint64_t v33 = *(void *)(v43 + 8 * v15);
    if ((v33 & v50) == 0) {
      goto LABEL_31;
    }
    LODWORD(v11) = v42;
    if (*(_DWORD *)(v44 + 36) != v42) {
      goto LABEL_32;
    }
    unint64_t v34 = v33 & (-2 << (v12 & 0x3F));
    if (v34)
    {
      unint64_t v12 = __clz(__rbit64(v34)) | v12 & 0xFFFFFFFFFFFFFFC0;
      int64_t v35 = v41;
    }
    else
    {
      unint64_t v36 = v15 + 1;
      unint64_t v37 = (unint64_t)((1 << v32) + 63) >> 6;
      int64_t v35 = v41;
      if (v15 + 1 >= v37) {
        goto LABEL_22;
      }
      unint64_t v38 = *(void *)(v43 + 8 * v36);
      if (!v38)
      {
        while (v37 - 2 != v15)
        {
          unint64_t v38 = *(void *)(v40 + 8 * v15++);
          if (v38)
          {
            unint64_t v36 = v15 + 1;
            goto LABEL_21;
          }
        }
LABEL_22:
        unint64_t v12 = 1 << v32;
        goto LABEL_23;
      }
LABEL_21:
      unint64_t v12 = __clz(__rbit64(v38)) + (v36 << 6);
    }
LABEL_23:
    if (v49 == v35) {
      return (uint64_t)v9;
    }
    if ((v12 & 0x8000000000000000) == 0)
    {
      uint64_t v14 = v49 + 1;
      if ((uint64_t)v12 < 1 << v32) {
        continue;
      }
    }
    goto LABEL_33;
  }
  __break(1u);
LABEL_29:
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
  return result;
}

void *Book.Metadata.genreIDs(at:)(unsigned char *a1)
{
  uint64_t v2 = *(void *)(v1 + 8);
  if (*a1)
  {
    if (*a1 == 1) {
      uint64_t v3 = 1;
    }
    else {
      uint64_t v3 = 2;
    }
    return sub_135558(v3);
  }
  else
  {
    int64_t v4 = *(void *)(v2 + 16);
    if (v4)
    {
      swift_bridgeObjectRetain();
      sub_46538(0, v4, 0);
      unint64_t v5 = _swiftEmptyArrayStorage[2];
      uint64_t v6 = 32;
      do
      {
        uint64_t v7 = *(void *)(v2 + v6);
        unint64_t v8 = _swiftEmptyArrayStorage[3];
        if (v5 >= v8 >> 1) {
          sub_46538(v8 > 1, v5 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v5 + 1;
        _swiftEmptyArrayStorage[v5 + 4] = v7;
        v6 += 16;
        ++v5;
        --v4;
      }
      while (v4);
      swift_bridgeObjectRelease();
    }
    uint64_t v10 = sub_50A6C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    return (void *)v10;
  }
}

uint64_t sub_134FA8(uint64_t a1)
{
  *(void *)(v2 + 1144) = v1;
  *(void *)(v2 + 1152) = *(void *)a1;
  *(_WORD *)(v2 + 1200) = *(_WORD *)(a1 + 8);
  *(_DWORD *)(v2 + 26) = *(_DWORD *)(a1 + 10);
  *(_WORD *)(v2 + 30) = *(_WORD *)(a1 + 14);
  uint64_t v4 = *(void *)(a1 + 16);
  *(unsigned char *)(v2 + 1202) = *(unsigned char *)(a1 + 24);
  *(void *)(v2 + 1160) = v4;
  memcpy((void *)(v2 + 41), (const void *)(a1 + 25), 0x18FuLL);
  *(void *)(v2 + 1168) = *(void *)(a1 + 424);
  memcpy((void *)(v2 + 448), (const void *)(a1 + 432), 0x2B0uLL);
  return _swift_task_switch(sub_135068, 0, 0);
}

uint64_t sub_135068()
{
  uint64_t v1 = *(void *)(v0 + 1168);
  char v2 = *(unsigned char *)(v0 + 1202);
  uint64_t v3 = *(void *)(v0 + 1160);
  __int16 v4 = *(_WORD *)(v0 + 1200);
  uint64_t v5 = *(void *)(v0 + 1152);
  uint64_t v6 = *(void **)(v0 + 1144);
  uint64_t v7 = v6[10];
  uint64_t v8 = v6[11];
  sub_5D64(v6 + 7, v7);
  *(void *)(v0 + 16) = v5;
  *(_WORD *)(v0 + 24) = v4;
  *(void *)(v0 + 32) = v3;
  *(unsigned char *)(v0 + 40) = v2;
  *(void *)(v0 + 440) = v1;
  unint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 1176) = v9;
  void *v9 = v0;
  v9[1] = sub_1351C4;
  uint64_t v10 = *(void *)(v0 + 1168);
  return v12(v0 + 16, v10, v7, v8);
}

uint64_t sub_1351C4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1184) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1102E8;
  }
  else
  {
    *(void *)(v4 + 1192) = a1;
    uint64_t v5 = sub_1352EC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1352EC()
{
  uint64_t v1 = *(void *)(v0 + 1192);
  char v2 = *(unsigned char *)(v0 + 1200);
  uint64_t v3 = *(void **)(v0 + 1144);
  uint64_t v4 = v3[5];
  uint64_t v5 = v3[6];
  sub_5D64(v3 + 2, v4);
  uint64_t v6 = swift_task_alloc();
  *(unsigned char *)(v6 + 16) = v2;
  uint64_t v7 = sub_4B8F8(v1);
  swift_bridgeObjectRelease();
  uint64_t v8 = (*(uint64_t (**)(void *(*)(void *), uint64_t, void *, void *, void *, uint64_t, uint64_t))(v5 + 8))(sub_135BD0, v6, v7, &type metadata for UInt64, &protocol witness table for UInt64, v4, v5);
  swift_release();
  swift_task_dealloc();
  uint64_t v9 = sub_135748(v8);
  swift_bridgeObjectRelease();
  uint64_t v10 = sub_134A4C(v9);
  swift_release();
  uint64_t v11 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v11(v10);
}

void *sub_135444(void *result, char a2)
{
  if (result[17] >> 1 == 0xFFFFFFFFLL)
  {
    __break(1u);
  }
  else
  {
    long long v7 = *((_OWORD *)result + 1);
    long long v2 = *((_OWORD *)result + 4);
    long long v10 = *((_OWORD *)result + 3);
    char v3 = *((unsigned char *)result + 80);
    char v4 = *((unsigned char *)result + 40);
    uint64_t v5 = result[4];
    v6[1] = *((unsigned char *)result + 8);
    uint64_t v8 = v5;
    char v9 = v4;
    long long v11 = v2;
    char v12 = v3;
    v6[0] = a2;
    return Book.Metadata.genreIDs(at:)(v6);
  }
  return result;
}

uint64_t sub_1354C0(uint64_t a1)
{
  char v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *char v3 = v1;
  v3[1] = sub_B06F4;
  return sub_134FA8(a1);
}

void *sub_135558(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  uint64_t result = _swiftEmptySetSingleton;
  uint64_t v13 = _swiftEmptySetSingleton;
  uint64_t v5 = *(void *)(v3 + 16);
  if (!v5) {
    return result;
  }
  uint64_t result = (void *)swift_bridgeObjectRetain();
  for (uint64_t i = v3 + 40; ; i += 16)
  {
    unint64_t v7 = *(void *)(*(void *)i + 16);
    uint64_t v8 = v7 - a1;
    if (__OFSUB__(v7, a1)) {
      break;
    }
    BOOL v9 = __OFSUB__(v8, 1);
    unint64_t v10 = v8 - 1;
    if (v9) {
      goto LABEL_15;
    }
    if ((v10 & 0x8000000000000000) != 0)
    {
      if (v10 != -1) {
        goto LABEL_4;
      }
      uint64_t v11 = *(void *)(i - 8);
    }
    else
    {
      if (v10 >= v7) {
        goto LABEL_16;
      }
      uint64_t v11 = *(void *)(*(void *)i + 8 * v10 + 32);
    }
    uint64_t result = (void *)sub_73A4(&v12, v11);
LABEL_4:
    if (!--v5)
    {
      swift_bridgeObjectRelease();
      return v13;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void *sub_135628()
{
  return &_swiftEmptyArrayStorage;
}

uint64_t sub_135634(int64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v1 = v3;
  if (!result || a1 > *(void *)(v3 + 24) >> 1)
  {
    if (*(void *)(v3 + 16) <= a1) {
      int64_t v5 = a1;
    }
    else {
      int64_t v5 = *(void *)(v3 + 16);
    }
    return sub_46538(result, v5, 0);
  }
  return result;
}

uint64_t sub_1356AC()
{
  uint64_t v1 = *v0;
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if ((result & 1) == 0)
  {
    int64_t v3 = *(void *)(v1 + 16) + 1;
    return sub_46538(0, v3, 1);
  }
  return result;
}

uint64_t sub_135708(uint64_t result)
{
  unint64_t v2 = *(void *)(*(void *)v1 + 24);
  if (result + 1 > (uint64_t)(v2 >> 1)) {
    return sub_46538(v2 > 1, result + 1, 1);
  }
  return result;
}

uint64_t sub_135730(uint64_t result, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = result + 1;
  *(void *)(v3 + 8 * result + 32) = a2;
  return result;
}

uint64_t sub_135748(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1358A0((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    unint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_1358A0((unint64_t *)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_1358A0(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  uint64_t v31 = a1;
  uint64_t v36 = sub_12124(&qword_2709F8);
  uint64_t v4 = __chkstk_darwin(v36);
  uint64_t v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v29 - v7);
  uint64_t v9 = type metadata accessor for AttributeAffinityResult();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  unint64_t v37 = (void *)a3;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v34 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v25 >= v34) {
      return sub_72EE0(v31, v30, v32, v37);
    }
    unint64_t v26 = *(void *)(v33 + 8 * v25);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v34) {
        return sub_72EE0(v31, v30, v32, v37);
      }
      unint64_t v26 = *(void *)(v33 + 8 * v13);
      if (!v26)
      {
        int64_t v13 = v25 + 2;
        if (v25 + 2 >= v34) {
          return sub_72EE0(v31, v30, v32, v37);
        }
        unint64_t v26 = *(void *)(v33 + 8 * v13);
        if (!v26) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_5:
    uint64_t v20 = *(void *)(v37[6] + 8 * v19);
    sub_557E0(v37[7] + *(void *)(v35 + 72) * v19, (uint64_t)v12);
    uint64_t v21 = v36;
    uint64_t v22 = (uint64_t)v8 + *(int *)(v36 + 48);
    void *v8 = v20;
    sub_557E0((uint64_t)v12, v22);
    uint64_t v23 = (double *)((char *)v6 + *(int *)(v21 + 48));
    void *v6 = v20;
    sub_135CA0(v22, (uint64_t)v23);
    double v24 = *v23;
    sub_1111A8((uint64_t)v23);
    uint64_t result = sub_1111A8((uint64_t)v12);
    if (v24 > 0.0)
    {
      *(unint64_t *)((char *)v31 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      if (__OFADD__(v32++, 1))
      {
        __break(1u);
        return sub_72EE0(v31, v30, v32, v37);
      }
    }
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v34) {
    return sub_72EE0(v31, v30, v32, v37);
  }
  unint64_t v26 = *(void *)(v33 + 8 * v27);
  if (v26)
  {
    int64_t v13 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v13 >= v34) {
      return sub_72EE0(v31, v30, v32, v37);
    }
    unint64_t v26 = *(void *)(v33 + 8 * v13);
    ++v27;
    if (v26) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SeedBookGenreRecommendationService()
{
  return self;
}

void *sub_135BD0(void *a1)
{
  return sub_135444(a1, *(unsigned char *)(v1 + 16));
}

uint64_t sub_135BD8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_2709F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_135C40(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_2709F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_135CA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributeAffinityResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_135D04(uint64_t a1)
{
  uint64_t v1 = a1 + 64;
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  uint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v5 = (unint64_t)(v2 + 63) >> 6;
  uint64_t result = (void *)swift_bridgeObjectRetain();
  int64_t v7 = 0;
  while (1)
  {
    if (v4)
    {
      v4 &= v4 - 1;
      goto LABEL_5;
    }
    int64_t v9 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v9 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v9);
    ++v7;
    if (!v10)
    {
      int64_t v7 = v9 + 1;
      if (v9 + 1 >= v5) {
        goto LABEL_23;
      }
      uint64_t v10 = *(void *)(v1 + 8 * v7);
      if (!v10)
      {
        int64_t v7 = v9 + 2;
        if (v9 + 2 >= v5) {
          goto LABEL_23;
        }
        uint64_t v10 = *(void *)(v1 + 8 * v7);
        if (!v10)
        {
          int64_t v7 = v9 + 3;
          if (v9 + 3 >= v5) {
            goto LABEL_23;
          }
          uint64_t v10 = *(void *)(v1 + 8 * v7);
          if (!v10) {
            break;
          }
        }
      }
    }
LABEL_22:
    uint64_t v4 = (v10 - 1) & v10;
LABEL_5:
    uint64_t v8 = swift_bridgeObjectRetain();
    uint64_t result = (void *)sub_A93B0(v8);
  }
  int64_t v11 = v9 + 4;
  if (v11 >= v5)
  {
LABEL_23:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  uint64_t v10 = *(void *)(v1 + 8 * v11);
  if (v10)
  {
    int64_t v7 = v11;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v7 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v7 >= v5) {
      goto LABEL_23;
    }
    uint64_t v10 = *(void *)(v1 + 8 * v7);
    ++v11;
    if (v10) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_135E74@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  uint64_t v2 = result + 64;
  char v3 = *(unsigned char *)(result + 32);
  uint64_t v4 = 1 << v3;
  uint64_t v5 = -1;
  if (1 << v3 < 64) {
    uint64_t v5 = ~(-1 << (1 << v3));
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  if (!v6)
  {
    LODWORD(v7) = v3 & 0x3F;
    if (v7 > 6)
    {
      int64_t v10 = (unint64_t)(v4 + 63) >> 6;
      unint64_t v21 = *(void *)(result + 72);
      if (v21)
      {
        uint64_t v7 = 1;
LABEL_32:
        unint64_t v9 = (v21 - 1) & v21;
        unint64_t v8 = __clz(__rbit64(v21)) + (v7 << 6);
        goto LABEL_5;
      }
      if (v7 >= 8)
      {
        unint64_t v21 = *(void *)(result + 80);
        if (v21)
        {
          uint64_t v7 = 2;
          goto LABEL_32;
        }
        unint64_t v21 = *(void *)(result + 88);
        if (v21)
        {
          uint64_t v7 = 3;
          goto LABEL_32;
        }
LABEL_39:
        if (v7 >= 9)
        {
          unint64_t v21 = *(void *)(result + 96);
          if (v21)
          {
            uint64_t v7 = 4;
          }
          else
          {
            unint64_t v21 = *(void *)(result + 104);
            if (!v21) {
              goto LABEL_46;
            }
            uint64_t v7 = 5;
          }
          goto LABEL_32;
        }
      }
    }
    *a2 = 2;
    a2[1] = 0;
    return result;
  }
  uint64_t v7 = 0;
  unint64_t v8 = __clz(__rbit64(v6));
  unint64_t v9 = (v6 - 1) & v6;
  int64_t v10 = (unint64_t)(v4 + 63) >> 6;
LABEL_5:
  uint64_t v11 = *(void *)(result + 48);
  uint64_t v12 = *(void *)(result + 56);
  char v13 = *(unsigned char *)(v11 + v8);
  uint64_t v14 = *(void *)(v12 + 8 * v8);
  while (1)
  {
    if (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_7;
    }
    int64_t v18 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_39;
    }
    if (v18 >= v10) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v2 + 8 * v18);
    ++v7;
    if (!v19)
    {
      uint64_t v7 = v18 + 1;
      if (v18 + 1 >= v10) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v2 + 8 * v7);
      if (!v19)
      {
        uint64_t v7 = v18 + 2;
        if (v18 + 2 >= v10) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v2 + 8 * v7);
        if (!v19)
        {
          uint64_t v7 = v18 + 3;
          if (v18 + 3 >= v10) {
            goto LABEL_28;
          }
          unint64_t v19 = *(void *)(v2 + 8 * v7);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_27:
    unint64_t v9 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v7 << 6);
LABEL_7:
    uint64_t result = *(unsigned __int8 *)(v11 + v16);
    uint64_t v17 = *(void *)(v12 + 8 * v16);
    if (v14 < v17) {
      char v13 = result;
    }
    if (v14 <= v17) {
      uint64_t v14 = v17;
    }
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v10)
  {
LABEL_28:
    *a2 = v13 & 1;
    a2[1] = v14;
    return result;
  }
  unint64_t v19 = *(void *)(v2 + 8 * v20);
  if (v19)
  {
    uint64_t v7 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    uint64_t v7 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v7 >= v10) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v2 + 8 * v7);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
  __break(1u);
LABEL_46:
  uint64_t v22 = 0;
  uint64_t v23 = 6;
  if (v10 > 6) {
    uint64_t v23 = v10;
  }
  while (v23 - 6 != v22)
  {
    unint64_t v21 = *(void *)(result + 112 + 8 * v22++);
    if (v21)
    {
      uint64_t v7 = v22 + 5;
      goto LABEL_32;
    }
  }
  *a2 = 2;
  a2[1] = 0;
  return result;
}

uint64_t sub_136094(uint64_t a1, void *a2, char a3)
{
  char v32 = a3 & 1;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 56);
  int64_t v31 = (unint64_t)(v5 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v8 << 6);
    }
    else
    {
      int64_t v11 = v8 + 1;
      if (__OFADD__(v8, 1)) {
        goto LABEL_38;
      }
      if (v11 >= v31) {
        return swift_release();
      }
      unint64_t v12 = *(void *)(v30 + 8 * v11);
      ++v8;
      if (!v12)
      {
        int64_t v8 = v11 + 1;
        if (v11 + 1 >= v31) {
          return swift_release();
        }
        unint64_t v12 = *(void *)(v30 + 8 * v8);
        if (!v12)
        {
          int64_t v8 = v11 + 2;
          if (v11 + 2 >= v31) {
            return swift_release();
          }
          unint64_t v12 = *(void *)(v30 + 8 * v8);
          if (!v12)
          {
            int64_t v8 = v11 + 3;
            if (v11 + 3 >= v31) {
              return swift_release();
            }
            unint64_t v12 = *(void *)(v30 + 8 * v8);
            if (!v12)
            {
              int64_t v13 = v11 + 4;
              if (v13 >= v31) {
                return swift_release();
              }
              unint64_t v12 = *(void *)(v30 + 8 * v13);
              if (!v12)
              {
                while (1)
                {
                  int64_t v8 = v13 + 1;
                  if (__OFADD__(v13, 1)) {
                    goto LABEL_39;
                  }
                  if (v8 >= v31) {
                    return swift_release();
                  }
                  unint64_t v12 = *(void *)(v30 + 8 * v8);
                  ++v13;
                  if (v12) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v8 = v13;
            }
          }
        }
      }
LABEL_23:
      unint64_t v7 = (v12 - 1) & v12;
      unint64_t v10 = __clz(__rbit64(v12)) + (v8 << 6);
    }
    memcpy(__dst, (const void *)(*(void *)(a1 + 48) + 560 * v10), 0x229uLL);
    uint64_t v14 = __dst[0];
    sub_12384(__dst);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v34 = (void *)*a2;
    unint64_t v16 = v34;
    *a2 = 0x8000000000000000;
    unint64_t v18 = sub_56168(v14);
    uint64_t v19 = v16[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (v16[3] >= v21)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        int64_t v25 = v34;
        if (v17) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_121584();
        int64_t v25 = v34;
        if (v22) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_118FC0(v21, isUniquelyReferenced_nonNull_native);
      uint64_t v23 = sub_56168(v14);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_40;
      }
      unint64_t v18 = v23;
      int64_t v25 = v34;
      if (v22)
      {
LABEL_4:
        *(unsigned char *)(v25[7] + v18) = v32;
        goto LABEL_5;
      }
    }
    v25[(v18 >> 6) + 8] |= 1 << v18;
    *(void *)(v25[6] + 8 * v18) = v14;
    *(unsigned char *)(v25[7] + v18) = v32;
    uint64_t v26 = v25[2];
    BOOL v27 = __OFADD__(v26, 1);
    uint64_t v28 = v26 + 1;
    if (v27) {
      goto LABEL_37;
    }
    void v25[2] = v28;
LABEL_5:
    *a2 = v25;
    swift_bridgeObjectRelease();
    sub_124B4(__dst);
  }
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
LABEL_39:
  __break(1u);
LABEL_40:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_136374(uint64_t a1, void *a2)
{
  v3[280] = v2;
  v3[279] = a1;
  memcpy(v3 + 217, a2, 0x1E8uLL);
  uint64_t v5 = a2[62];
  v3[281] = a2[61];
  v3[282] = v5;
  v3[283] = a2[63];
  v3[284] = a2[64];
  memcpy(v3 + 2, a2 + 65, 0x258uLL);
  return _swift_task_switch(sub_136428, 0, 0);
}

uint64_t sub_136428()
{
  uint64_t v1 = v0[279];
  v0[278] = sub_16B814((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = -1;
  uint64_t v4 = -1 << *(unsigned char *)(v1 + 32);
  if (-v4 < 64) {
    uint64_t v3 = ~(-1 << -(char)v4);
  }
  unint64_t v5 = v3 & *(void *)(v1 + 64);
  int64_t v6 = (unint64_t)(63 - v4) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_5;
    }
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_25:
      __break(1u);
      return result;
    }
    if (v13 >= v6) {
      goto LABEL_21;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    ++v8;
    if (!v14)
    {
      int64_t v8 = v13 + 1;
      if (v13 + 1 >= v6) {
        goto LABEL_21;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v8);
      if (!v14)
      {
        int64_t v8 = v13 + 2;
        if (v13 + 2 >= v6) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        if (!v14) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v8 << 6);
LABEL_5:
    char v11 = *(unsigned char *)(*(void *)(v1 + 48) + v10);
    uint64_t v12 = swift_bridgeObjectRetain();
    sub_136094(v12, v0 + 278, v11);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v15 = v13 + 3;
  if (v15 < v6)
  {
    unint64_t v14 = *(void *)(v2 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v8 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_25;
        }
        if (v8 >= v6) {
          goto LABEL_21;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v8);
        ++v15;
        if (v14) {
          goto LABEL_20;
        }
      }
    }
    int64_t v8 = v15;
    goto LABEL_20;
  }
LABEL_21:
  unint64_t v16 = (void *)v0[280];
  swift_release();
  v0[285] = sub_16B8EC(_swiftEmptyArrayStorage);
  uint64_t v17 = v16[5];
  uint64_t v18 = v16[6];
  sub_5D64(v16 + 2, v17);
  v0[286] = v0[278];
  uint64_t v19 = swift_bridgeObjectRetain();
  BOOL v20 = sub_4ABEC(v19);
  v0[287] = v20;
  swift_bridgeObjectRelease();
  char v22 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v18 + 16) + **(int **)(v18 + 16));
  uint64_t v21 = (void *)swift_task_alloc();
  v0[288] = v21;
  void *v21 = v0;
  v21[1] = sub_1366C0;
  return v22(v20, v17, v18);
}

uint64_t sub_1366C0(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2312) = a1;
  *(void *)(v3 + 2320) = v1;
  swift_task_dealloc();
  swift_release();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_13779C;
  }
  else
  {
    uint64_t v4 = sub_136808;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_136808()
{
  uint64_t v180 = v0;
  long long v166 = 0;
  int64_t v1 = 0;
  v153 = (void *)(v0 + 1176);
  double v154 = (void *)(v0 + 616);
  __src = (void *)(v0 + 1736);
  char v173 = (void *)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 2312);
  uint64_t v3 = *(void *)(v2 + 64);
  uint64_t v155 = v2 + 64;
  uint64_t v157 = v2;
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  if (-v4 < 64) {
    uint64_t v5 = ~(-1 << -(char)v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & v3;
  int64_t v156 = (unint64_t)(63 - v4) >> 6;
  uint64_t v7 = *(void *)(v0 + 2280);
  int64_t v8 = (_OWORD *)(v0 + 2248);
  while (2)
  {
    uint64_t v171 = v7;
    if (v6)
    {
      uint64_t v160 = (v6 - 1) & v6;
      int64_t v162 = v1;
      unint64_t v9 = __clz(__rbit64(v6)) | (v1 << 6);
      goto LABEL_22;
    }
    int64_t v10 = v1 + 1;
    if (__OFADD__(v1, 1)) {
      goto LABEL_178;
    }
    if (v10 >= v156) {
      goto LABEL_60;
    }
    unint64_t v11 = *(void *)(v155 + 8 * v10);
    int64_t v12 = v1 + 1;
    if (!v11)
    {
      int64_t v12 = v1 + 2;
      if (v1 + 2 >= v156) {
        goto LABEL_60;
      }
      unint64_t v11 = *(void *)(v155 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v1 + 3;
        if (v1 + 3 >= v156) {
          goto LABEL_60;
        }
        unint64_t v11 = *(void *)(v155 + 8 * v12);
        if (!v11)
        {
          uint64_t v13 = v1 + 4;
          if (v1 + 4 < v156)
          {
            unint64_t v11 = *(void *)(v155 + 8 * v13);
            if (v11)
            {
              int64_t v12 = v1 + 4;
              goto LABEL_21;
            }
            while (1)
            {
              int64_t v12 = v13 + 1;
              if (__OFADD__(v13, 1)) {
                goto LABEL_182;
              }
              if (v12 >= v156) {
                break;
              }
              unint64_t v11 = *(void *)(v155 + 8 * v12);
              ++v13;
              if (v11) {
                goto LABEL_21;
              }
            }
          }
LABEL_60:
          uint64_t v54 = v177;
          swift_release();
          uint64_t v163 = (void *)sub_160C90((uint64_t)_swiftEmptyArrayStorage);
          uint64_t v55 = swift_bridgeObjectRetain();
          uint64_t v161 = sub_38DC0(v55);
          uint64_t v56 = v171 + 64;
          uint64_t v57 = -1 << *(unsigned char *)(v171 + 32);
          if (-v57 < 64) {
            uint64_t v58 = ~(-1 << -(char)v57);
          }
          else {
            uint64_t v58 = -1;
          }
          unint64_t v59 = v58 & *(void *)(v171 + 64);
          int64_t v60 = (unint64_t)(63 - v57) >> 6;
          swift_bridgeObjectRetain();
          v159 = 0;
          int64_t v61 = 0;
          while (1)
          {
            if (v59)
            {
              unint64_t v62 = __clz(__rbit64(v59));
              v59 &= v59 - 1;
              unint64_t v63 = v62 | (v61 << 6);
            }
            else
            {
              int64_t v64 = v61 + 1;
              if (__OFADD__(v61, 1)) {
                goto LABEL_179;
              }
              if (v64 >= v60) {
                goto LABEL_114;
              }
              unint64_t v65 = *(void *)(v56 + 8 * v64);
              ++v61;
              if (!v65)
              {
                int64_t v61 = v64 + 1;
                if (v64 + 1 >= v60) {
                  goto LABEL_114;
                }
                unint64_t v65 = *(void *)(v56 + 8 * v61);
                if (!v65)
                {
                  int64_t v61 = v64 + 2;
                  if (v64 + 2 >= v60) {
                    goto LABEL_114;
                  }
                  unint64_t v65 = *(void *)(v56 + 8 * v61);
                  if (!v65)
                  {
                    int64_t v66 = v64 + 3;
                    if (v66 >= v60) {
                      goto LABEL_114;
                    }
                    unint64_t v65 = *(void *)(v56 + 8 * v66);
                    if (!v65)
                    {
                      while (1)
                      {
                        int64_t v61 = v66 + 1;
                        if (__OFADD__(v66, 1)) {
                          goto LABEL_183;
                        }
                        if (v61 >= v60) {
                          break;
                        }
                        unint64_t v65 = *(void *)(v56 + 8 * v61);
                        ++v66;
                        if (v65) {
                          goto LABEL_79;
                        }
                      }
LABEL_114:
                      swift_release();
                      uint64_t v99 = (uint64_t)v163;
                      if (*(void *)(v161 + 16))
                      {
                        uint64_t v100 = *((void *)v54 + 286);
                        double v101 = v54[283];
                        swift_bridgeObjectRetain();
                        uint64_t v102 = swift_bridgeObjectRetain();
                        uint64_t v103 = sub_4AB04(v102);
                        swift_bridgeObjectRelease();
                        sub_137BA8(v100, (uint64_t)v103, __dst, v101);
                        swift_release();
                        swift_bridgeObjectRelease();
                        if (__dst[0] != 2)
                        {
                          char v104 = __dst[0] & 1;
                          if (!v163[2]
                            || (swift_bridgeObjectRetain(),
                                sub_4C69C(v104),
                                char v106 = v105,
                                swift_bridgeObjectRelease(),
                                (v106 & 1) == 0))
                          {
                            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                            *(void *)__dst = v163;
                            sub_70F9C((uint64_t)&off_252C30, v104, isUniquelyReferenced_nonNull_native);
                            uint64_t v99 = *(void *)__dst;
                            swift_bridgeObjectRelease();
                            uint64_t v108 = swift_bridgeObjectRetain();
                            uint64_t v109 = sub_4AB04(v108);
                            swift_bridgeObjectRelease();
                            char v110 = swift_isUniquelyReferenced_nonNull_native();
                            *(void *)__dst = v171;
                            sub_70E74((uint64_t)v109, 0, v110);
                            uint64_t v171 = *(void *)__dst;
                            swift_bridgeObjectRelease();
                          }
                        }
                      }
                      uint64_t v111 = *((void *)v54 + 286);
                      uint64_t v112 = *((void *)v54 + 281);
                      uint64_t v113 = *((void *)v54 + 279);
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      swift_bridgeObjectRetain();
                      uint64_t v114 = sub_137F24(v99, v171, v111, v112);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v115 = (void *)sub_160B74((uint64_t)_swiftEmptyArrayStorage);
                      uint64_t v116 = swift_bridgeObjectRetain();
                      sub_135D04(v116);
                      swift_bridgeObjectRelease();
                      uint64_t v117 = -1;
                      uint64_t v118 = -1 << *(unsigned char *)(v113 + 32);
                      if (-v118 < 64) {
                        uint64_t v117 = ~(-1 << -(char)v118);
                      }
                      unint64_t v119 = v117 & *(void *)(v113 + 64);
                      int64_t v165 = (unint64_t)(63 - v118) >> 6;
                      swift_bridgeObjectRetain();
                      int64_t v120 = 0;
                      uint64_t v170 = v114;
                      while (2)
                      {
                        if (v119)
                        {
                          unint64_t v122 = __clz(__rbit64(v119));
                          v119 &= v119 - 1;
                          unint64_t v123 = v122 | (v120 << 6);
                          uint64_t v124 = *((void *)v54 + 279);
                        }
                        else
                        {
                          int64_t v125 = v120 + 1;
                          if (__OFADD__(v120, 1)) {
                            goto LABEL_181;
                          }
                          uint64_t v124 = *((void *)v54 + 279);
                          if (v125 >= v165) {
                            goto LABEL_171;
                          }
                          uint64_t v126 = v124 + 64;
                          unint64_t v127 = *(void *)(v124 + 64 + 8 * v125);
                          ++v120;
                          if (!v127)
                          {
                            int64_t v120 = v125 + 1;
                            if (v125 + 1 >= v165) {
                              goto LABEL_171;
                            }
                            unint64_t v127 = *(void *)(v126 + 8 * v120);
                            if (!v127)
                            {
                              int64_t v120 = v125 + 2;
                              if (v125 + 2 >= v165) {
                                goto LABEL_171;
                              }
                              unint64_t v127 = *(void *)(v126 + 8 * v120);
                              if (!v127)
                              {
                                int64_t v120 = v125 + 3;
                                if (v125 + 3 >= v165) {
                                  goto LABEL_171;
                                }
                                unint64_t v127 = *(void *)(v126 + 8 * v120);
                                if (!v127)
                                {
                                  int64_t v120 = v125 + 4;
                                  if (v125 + 4 >= v165) {
                                    goto LABEL_171;
                                  }
                                  unint64_t v127 = *(void *)(v126 + 8 * v120);
                                  if (!v127)
                                  {
                                    int64_t v128 = v125 + 5;
                                    if (v128 >= v165) {
                                      goto LABEL_171;
                                    }
                                    unint64_t v127 = *(void *)(v126 + 8 * v128);
                                    if (!v127)
                                    {
                                      while (1)
                                      {
                                        int64_t v120 = v128 + 1;
                                        if (__OFADD__(v128, 1)) {
                                          goto LABEL_185;
                                        }
                                        if (v120 >= v165) {
                                          break;
                                        }
                                        unint64_t v127 = *(void *)(v126 + 8 * v120);
                                        ++v128;
                                        if (v127) {
                                          goto LABEL_143;
                                        }
                                      }
LABEL_171:
                                      swift_release();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      swift_bridgeObjectRelease();
                                      sub_52958((uint64_t)v166);
                                      sub_52958((uint64_t)v159);
                                      char v152 = (void (*)(void *))*((void *)v54 + 1);
                                      v152(v115);
                                      return;
                                    }
                                    int64_t v120 = v128;
                                  }
                                }
                              }
                            }
                          }
LABEL_143:
                          unint64_t v119 = (v127 - 1) & v127;
                          unint64_t v123 = __clz(__rbit64(v127)) + (v120 << 6);
                        }
                        char v129 = *(unsigned char *)(*(void *)(v124 + 48) + v123);
                        char v176 = (void *)v120;
                        if (v114 && *(void *)(v114 + 16))
                        {
                          swift_bridgeObjectRetain();
                          unint64_t v130 = sub_4C69C(v129);
                          if (v131)
                          {
                            uint64_t v132 = *(void *)(*(void *)(v114 + 56) + 8 * v130);
                            swift_bridgeObjectRetain();
                          }
                          else
                          {
                            uint64_t v132 = 0;
                          }
                          swift_bridgeObjectRelease();
                        }
                        else
                        {
                          uint64_t v132 = 0;
                        }
                        uint64_t v133 = (void *)swift_bridgeObjectRetain();
                        char v134 = sub_1385C4(v133, v132);
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v135 = v134[2];
                        sub_556E4();
                        uint64_t v136 = sub_1FBCD0();
                        uint64_t v179 = v136;
                        if (v135)
                        {
                          uint64_t v137 = v135 - 1;
                          for (uint64_t i = 4; ; i += 70)
                          {
                            memcpy(v154, &v134[i], 0x229uLL);
                            sub_12384(v154);
                            sub_74A0(__dst, v154);
                            memcpy(v153, __dst, 0x229uLL);
                            sub_124B4(v153);
                            if (!v137) {
                              break;
                            }
                            --v137;
                          }
                          swift_bridgeObjectRelease();
                          uint64_t v139 = v179;
                        }
                        else
                        {
                          uint64_t v139 = v136;
                          swift_bridgeObjectRelease();
                        }
                        char v140 = swift_isUniquelyReferenced_nonNull_native();
                        *(void *)__dst = v115;
                        unint64_t v142 = sub_4C69C(v129);
                        uint64_t v143 = v115[2];
                        BOOL v144 = (v141 & 1) == 0;
                        uint64_t v145 = v143 + v144;
                        if (__OFADD__(v143, v144)) {
                          goto LABEL_177;
                        }
                        char v146 = v141;
                        if (v115[3] >= v145)
                        {
                          if (v140)
                          {
                            if ((v141 & 1) == 0) {
                              goto LABEL_164;
                            }
                          }
                          else
                          {
                            sub_120740();
                            uint64_t v115 = *(void **)__dst;
                            if ((v146 & 1) == 0) {
                              goto LABEL_164;
                            }
                          }
                        }
                        else
                        {
                          sub_116FD8(v145, v140);
                          uint64_t v115 = *(void **)__dst;
                          unint64_t v147 = sub_4C69C(v129);
                          if ((v146 & 1) != (v148 & 1)) {
                            goto LABEL_168;
                          }
                          unint64_t v142 = v147;
                          if ((v146 & 1) == 0)
                          {
LABEL_164:
                            v115[(v142 >> 6) + 8] |= 1 << v142;
                            *(unsigned char *)(v115[6] + v142) = v129;
                            *(void *)(v115[7] + 8 * v142) = v139;
                            uint64_t v149 = v115[2];
                            BOOL v150 = __OFADD__(v149, 1);
                            uint64_t v151 = v149 + 1;
                            if (v150) {
                              goto LABEL_180;
                            }
                            v115[2] = v151;
                            goto LABEL_123;
                          }
                        }
                        uint64_t v121 = v115[7];
                        swift_bridgeObjectRelease();
                        *(void *)(v121 + 8 * v142) = v139;
LABEL_123:
                        swift_bridgeObjectRelease();
                        int64_t v120 = (int64_t)v176;
                        uint64_t v54 = v177;
                        uint64_t v114 = v170;
                        continue;
                      }
                    }
                    int64_t v61 = v66;
                  }
                }
              }
LABEL_79:
              unint64_t v59 = (v65 - 1) & v65;
              unint64_t v63 = __clz(__rbit64(v65)) + (v61 << 6);
            }
            uint64_t v67 = *(void *)(*(void *)(v171 + 56) + 8 * v63);
            if (*(void *)(v67 + 16) >= *((void *)v54 + 282))
            {
              double v68 = v54[283];
              uint64_t v69 = *(void *)(*(void *)(v171 + 48) + 8 * v63);
              swift_bridgeObjectRetain();
              uint64_t v70 = swift_bridgeObjectRetain();
              sub_137BA8(v70, v67, __dst, v68);
              swift_bridgeObjectRelease();
              if (__dst[0] == 2)
              {
                swift_bridgeObjectRelease();
              }
              else
              {
                char v71 = __dst[0] & 1;
                sub_52958((uint64_t)v159);
                int v72 = swift_isUniquelyReferenced_nonNull_native();
                *(void *)__dst = v163;
                char v174 = v71;
                unint64_t v74 = sub_4C69C(v71);
                uint64_t v75 = v163[2];
                BOOL v76 = (v73 & 1) == 0;
                uint64_t v77 = v75 + v76;
                if (__OFADD__(v75, v76)) {
                  goto LABEL_184;
                }
                char v78 = v73;
                if (v163[3] >= v77)
                {
                  if (!v72)
                  {
                    sub_120734();
                    uint64_t v163 = *(void **)__dst;
                  }
                }
                else
                {
                  sub_11730C(v77, v72);
                  uint64_t v163 = *(void **)__dst;
                  unint64_t v79 = sub_4C69C(v174);
                  if ((v78 & 1) != (v80 & 1))
                  {
LABEL_168:
                    sub_1FC770();
                    return;
                  }
                  unint64_t v74 = v79;
                }
                swift_bridgeObjectRelease();
                if (v78)
                {
                  uint64_t v81 = swift_bridgeObjectRetain();
                }
                else
                {
                  v163[(v74 >> 6) + 8] |= 1 << v74;
                  *(unsigned char *)(v163[6] + v74) = v174;
                  *(void *)(v163[7] + 8 * v74) = _swiftEmptyArrayStorage;
                  uint64_t v82 = v163[2];
                  uint64_t v83 = v82 + 1;
                  BOOL v84 = __OFADD__(v82, 1);
                  uint64_t v81 = swift_bridgeObjectRetain();
                  if (v84) {
                    goto LABEL_186;
                  }
                  *(void *)(v81 + 16) = v83;
                }
                uint64_t v85 = *(void **)(v81 + 56);
                swift_bridgeObjectRelease();
                uint64_t v86 = (void *)v85[v74];
                char v87 = swift_isUniquelyReferenced_nonNull_native();
                v85[v74] = v86;
                v175 = v85;
                if ((v87 & 1) == 0)
                {
                  uint64_t v86 = sub_41858(0, v86[2] + 1, 1, v86);
                  v85[v74] = v86;
                }
                unint64_t v89 = v86[2];
                unint64_t v88 = v86[3];
                if (v89 >= v88 >> 1)
                {
                  uint64_t v86 = sub_41858((void *)(v88 > 1), v89 + 1, 1, v86);
                  v175[v74] = v86;
                }
                uint64_t v54 = v177;
                v86[2] = v89 + 1;
                v86[v89 + 4] = v69;
                uint64_t v90 = *(void *)(v67 + 16);
                if (v90)
                {
                  swift_bridgeObjectRetain();
                  for (uint64_t j = 0; j != v90; ++j)
                  {
                    uint64_t v93 = *(void *)(v67 + 32 + 8 * j);
                    uint64_t v94 = sub_1FC7D0();
                    uint64_t v95 = -1 << *(unsigned char *)(v161 + 32);
                    unint64_t v96 = v94 & ~v95;
                    if ((*(void *)(v161 + 56 + ((v96 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v96))
                    {
                      uint64_t v97 = *(void *)(v161 + 48);
                      if (*(void *)(v97 + 8 * v96) == v93)
                      {
LABEL_103:
                        char v92 = swift_isUniquelyReferenced_nonNull_native();
                        *(void *)__dst = v161;
                        if ((v92 & 1) == 0) {
                          sub_DC88();
                        }
                        sub_106A64(v96);
                        uint64_t v161 = *(void *)__dst;
                        swift_bridgeObjectRelease();
                      }
                      else
                      {
                        uint64_t v98 = ~v95;
                        while (1)
                        {
                          unint64_t v96 = (v96 + 1) & v98;
                          if (((*(void *)(v161 + 56 + ((v96 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v96) & 1) == 0) {
                            break;
                          }
                          if (*(void *)(v97 + 8 * v96) == v93) {
                            goto LABEL_103;
                          }
                        }
                      }
                    }
                  }
                  swift_bridgeObjectRelease_n();
                  v159 = sub_E31E8;
                  uint64_t v54 = v177;
                }
                else
                {
                  swift_bridgeObjectRelease();
                  v159 = sub_E31E8;
                }
              }
            }
          }
        }
      }
    }
LABEL_21:
    uint64_t v160 = (v11 - 1) & v11;
    int64_t v162 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_22:
    uint64_t v158 = *(void *)(*(void *)(v157 + 48) + 8 * v9);
    uint64_t v14 = *(void *)(v157 + 56) + 80 * v9;
    uint64_t v15 = *(void *)(v14 + 24);
    char v16 = *(unsigned char *)(v14 + 32);
    char v17 = *(unsigned char *)(v14 + 72);
    __dst[0] = *(unsigned char *)v14;
    *(_OWORD *)&__dst[8] = *(_OWORD *)(v14 + 8);
    *(void *)&__dst[24] = v15;
    __dst[32] = v16;
    long long v18 = *(_OWORD *)(v14 + 56);
    *(_OWORD *)&__dst[40] = *(_OWORD *)(v14 + 40);
    *(_OWORD *)&__dst[56] = v18;
    __dst[72] = v17;
    uint64_t v19 = Book.Metadata.genreIDs.getter();
    uint64_t v20 = v19;
    int64_t v21 = 0;
    uint64_t v22 = v19 + 56;
    uint64_t v23 = -1 << *(unsigned char *)(v19 + 32);
    if (-v23 < 64) {
      uint64_t v24 = ~(-1 << -(char)v23);
    }
    else {
      uint64_t v24 = -1;
    }
    unint64_t v25 = v24 & *(void *)(v19 + 56);
    int64_t v26 = (unint64_t)(63 - v23) >> 6;
    if (v25)
    {
LABEL_26:
      unint64_t v27 = __clz(__rbit64(v25));
      v25 &= v25 - 1;
      unint64_t v28 = v27 | (v21 << 6);
      goto LABEL_41;
    }
    while (1)
    {
      int64_t v29 = v21 + 1;
      if (__OFADD__(v21, 1))
      {
        __break(1u);
        goto LABEL_175;
      }
      if (v29 >= v26) {
        goto LABEL_5;
      }
      unint64_t v30 = *(void *)(v22 + 8 * v29);
      ++v21;
      if (!v30)
      {
        int64_t v21 = v29 + 1;
        if (v29 + 1 >= v26) {
          goto LABEL_5;
        }
        unint64_t v30 = *(void *)(v22 + 8 * v21);
        if (!v30)
        {
          int64_t v21 = v29 + 2;
          if (v29 + 2 >= v26) {
            goto LABEL_5;
          }
          unint64_t v30 = *(void *)(v22 + 8 * v21);
          if (!v30) {
            break;
          }
        }
      }
LABEL_40:
      unint64_t v25 = (v30 - 1) & v30;
      unint64_t v28 = __clz(__rbit64(v30)) + (v21 << 6);
LABEL_41:
      uint64_t v32 = *((void *)v177 + 284);
      uint64_t v33 = *((void *)v177 + 283);
      uint64_t v34 = *(void *)(*(void *)(v20 + 48) + 8 * v28);
      memcpy(__dst, __src, 0x1E8uLL);
      *(_OWORD *)&__dst[488] = *v8;
      *(void *)&__dst[504] = v33;
      *(void *)&__dst[512] = v32;
      memcpy(&__dst[520], v173, 0x258uLL);
      uint64_t v35 = sub_137800();
      if (v35[2] && (uint64_t v36 = sub_56168(v34), (v37 & 1) != 0))
      {
        uint64_t v169 = *(void *)(v35[7] + 8 * v36);
        swift_bridgeObjectRelease();
        sub_52958((uint64_t)v166);
        char v38 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)__dst = v171;
        uint64_t v167 = sub_56168(v169);
        uint64_t v39 = *(void *)(v171 + 16);
        char v164 = v40;
        BOOL v41 = (v40 & 1) == 0;
        uint64_t v42 = v39 + v41;
        if (__OFADD__(v39, v41)) {
          goto LABEL_176;
        }
        if (*(void *)(v171 + 24) >= v42)
        {
          if ((v38 & 1) == 0)
          {
            sub_12074C();
            uint64_t v171 = *(void *)__dst;
          }
          unint64_t v45 = v167;
        }
        else
        {
          sub_117318(v42, v38);
          uint64_t v171 = *(void *)__dst;
          uint64_t v43 = sub_56168(v169);
          if ((v164 & 1) != (v44 & 1)) {
            goto LABEL_168;
          }
          unint64_t v45 = v43;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRetain();
        if ((v164 & 1) == 0) {
          sub_118F0(v45, v169, (uint64_t)_swiftEmptyArrayStorage, (void *)v171);
        }
        uint64_t v46 = *(void *)(v171 + 56);
        swift_bridgeObjectRelease();
        unint64_t v168 = v45;
        uint64_t v47 = 8 * v45;
        uint64_t v48 = *(void **)(v46 + v47);
        char v49 = swift_isUniquelyReferenced_nonNull_native();
        *(void *)(v46 + v47) = v48;
        if ((v49 & 1) == 0)
        {
          uint64_t v48 = sub_41858(0, v48[2] + 1, 1, v48);
          *(void *)(v46 + 8 * v168) = v48;
        }
        unint64_t v51 = v48[2];
        unint64_t v50 = v48[3];
        unint64_t v52 = v51 + 1;
        if (v51 >= v50 >> 1)
        {
          uint64_t v53 = sub_41858((void *)(v50 > 1), v51 + 1, 1, v48);
          unint64_t v52 = v51 + 1;
          uint64_t v48 = v53;
          *(void *)(v46 + 8 * v168) = v53;
        }
        v48[2] = v52;
        v48[v51 + 4] = v158;
        long long v166 = sub_E31E8;
        if (v25) {
          goto LABEL_26;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        if (v25) {
          goto LABEL_26;
        }
      }
    }
    int64_t v31 = v29 + 3;
    if (v31 >= v26)
    {
LABEL_5:
      swift_release();
      uint64_t v7 = v171;
      unint64_t v6 = v160;
      int64_t v1 = v162;
      continue;
    }
    break;
  }
  unint64_t v30 = *(void *)(v22 + 8 * v31);
  if (v30)
  {
    int64_t v21 = v31;
    goto LABEL_40;
  }
  while (1)
  {
    int64_t v21 = v31 + 1;
    if (__OFADD__(v31, 1)) {
      break;
    }
    if (v21 >= v26) {
      goto LABEL_5;
    }
    unint64_t v30 = *(void *)(v22 + 8 * v21);
    ++v31;
    if (v30) {
      goto LABEL_40;
    }
  }
LABEL_175:
  __break(1u);
LABEL_176:
  __break(1u);
LABEL_177:
  __break(1u);
LABEL_178:
  __break(1u);
LABEL_179:
  __break(1u);
LABEL_180:
  __break(1u);
LABEL_181:
  __break(1u);
LABEL_182:
  __break(1u);
LABEL_183:
  __break(1u);
LABEL_184:
  __break(1u);
LABEL_185:
  __break(1u);
LABEL_186:
  __break(1u);
}

uint64_t sub_13779C()
{
  swift_bridgeObjectRelease();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_137800()
{
  uint64_t v1 = *(void *)(v0 + 512);
  uint64_t v2 = v1 + 64;
  uint64_t v3 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v4 = -1;
  if (v3 < 64) {
    uint64_t v4 = ~(-1 << v3);
  }
  unint64_t v5 = v4 & *(void *)(v1 + 64);
  int64_t v41 = (unint64_t)(v3 + 63) >> 6;
  swift_bridgeObjectRetain_n();
  int64_t v6 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v7 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v8 = v7 | (v6 << 6);
    }
    else
    {
      int64_t v9 = v6 + 1;
      if (__OFADD__(v6, 1)) {
        goto LABEL_53;
      }
      if (v9 >= v41)
      {
LABEL_48:
        swift_release();
        swift_bridgeObjectRelease();
        return _swiftEmptyDictionarySingleton;
      }
      unint64_t v10 = *(void *)(v2 + 8 * v9);
      ++v6;
      if (!v10)
      {
        int64_t v6 = v9 + 1;
        if (v9 + 1 >= v41) {
          goto LABEL_48;
        }
        unint64_t v10 = *(void *)(v2 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 2;
          if (v9 + 2 >= v41) {
            goto LABEL_48;
          }
          unint64_t v10 = *(void *)(v2 + 8 * v6);
          if (!v10)
          {
            int64_t v6 = v9 + 3;
            if (v9 + 3 >= v41) {
              goto LABEL_48;
            }
            unint64_t v10 = *(void *)(v2 + 8 * v6);
            if (!v10)
            {
              int64_t v6 = v9 + 4;
              if (v9 + 4 >= v41) {
                goto LABEL_48;
              }
              unint64_t v10 = *(void *)(v2 + 8 * v6);
              if (!v10)
              {
                int64_t v11 = v9 + 5;
                if (v11 >= v41) {
                  goto LABEL_48;
                }
                unint64_t v10 = *(void *)(v2 + 8 * v11);
                if (!v10)
                {
                  while (1)
                  {
                    int64_t v6 = v11 + 1;
                    if (__OFADD__(v11, 1)) {
                      goto LABEL_54;
                    }
                    if (v6 >= v41) {
                      goto LABEL_48;
                    }
                    unint64_t v10 = *(void *)(v2 + 8 * v6);
                    ++v11;
                    if (v10) {
                      goto LABEL_25;
                    }
                  }
                }
                int64_t v6 = v11;
              }
            }
          }
        }
      }
LABEL_25:
      unint64_t v5 = (v10 - 1) & v10;
      unint64_t v8 = __clz(__rbit64(v10)) + (v6 << 6);
    }
    uint64_t v12 = 8 * v8;
    uint64_t v13 = *(void *)(*(void *)(v1 + 48) + v12);
    uint64_t v14 = *(void *)(*(void *)(v1 + 56) + v12);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_56168(v13);
    uint64_t v18 = _swiftEmptyDictionarySingleton[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t v20 = v18 + v19;
    if (__OFADD__(v18, v19)) {
      break;
    }
    char v21 = v16;
    if (_swiftEmptyDictionarySingleton[3] >= v20)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_33;
        }
      }
      else
      {
        sub_120598();
        if (v21) {
          goto LABEL_33;
        }
      }
    }
    else
    {
      sub_116FE4(v20, isUniquelyReferenced_nonNull_native);
      uint64_t v22 = sub_56168(v13);
      if ((v21 & 1) != (v23 & 1)) {
        goto LABEL_55;
      }
      unint64_t v17 = v22;
      if (v21)
      {
LABEL_33:
        *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v17) = v14;
        goto LABEL_37;
      }
    }
    _swiftEmptyDictionarySingleton[(v17 >> 6) + 8] |= 1 << v17;
    uint64_t v24 = 8 * v17;
    *(void *)(_swiftEmptyDictionarySingleton[6] + v24) = v13;
    *(void *)(_swiftEmptyDictionarySingleton[7] + v24) = v14;
    uint64_t v25 = _swiftEmptyDictionarySingleton[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_51;
    }
    _swiftEmptyDictionarySingleton[2] = v27;
LABEL_37:
    swift_bridgeObjectRelease();
    char v28 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v30 = sub_56168(v14);
    uint64_t v31 = _swiftEmptyDictionarySingleton[2];
    BOOL v32 = (v29 & 1) == 0;
    uint64_t v33 = v31 + v32;
    if (__OFADD__(v31, v32)) {
      goto LABEL_50;
    }
    char v34 = v29;
    if (_swiftEmptyDictionarySingleton[3] >= v33)
    {
      if (v28)
      {
        if (v29) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_120598();
        if (v34) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_116FE4(v33, v28);
      uint64_t v35 = sub_56168(v14);
      if ((v34 & 1) != (v36 & 1)) {
        goto LABEL_55;
      }
      unint64_t v30 = v35;
      if (v34)
      {
LABEL_4:
        *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v30) = v14;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v30 >> 6) + 8] |= 1 << v30;
    uint64_t v37 = 8 * v30;
    *(void *)(_swiftEmptyDictionarySingleton[6] + v37) = v14;
    *(void *)(_swiftEmptyDictionarySingleton[7] + v37) = v14;
    uint64_t v38 = _swiftEmptyDictionarySingleton[2];
    BOOL v26 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v26) {
      goto LABEL_52;
    }
    _swiftEmptyDictionarySingleton[2] = v39;
LABEL_5:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_50:
  __break(1u);
LABEL_51:
  __break(1u);
LABEL_52:
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
LABEL_55:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_137BA8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char *a3@<X8>, double a4@<D0>)
{
  unint64_t v8 = (void *)sub_160B94((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v9 = *(void *)(a2 + 16);
  if (v9)
  {
    uint64_t v33 = a3;
    swift_bridgeObjectRetain();
    uint64_t v10 = 0;
    while (*(void *)(a1 + 16))
    {
      uint64_t v11 = sub_56168(*(void *)(a2 + 8 * v10 + 32));
      if ((v12 & 1) == 0) {
        goto LABEL_29;
      }
      char v13 = *(unsigned char *)(*(void *)(a1 + 56) + v11);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v34[0] = v8;
      unint64_t v16 = sub_4C69C(v13);
      uint64_t v17 = v8[2];
      BOOL v18 = (v15 & 1) == 0;
      uint64_t v19 = v17 + v18;
      if (__OFADD__(v17, v18)) {
        goto LABEL_30;
      }
      char v20 = v15;
      if (v8[3] >= v19)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_1205A4();
          unint64_t v8 = (void *)v34[0];
        }
      }
      else
      {
        sub_116FF0(v19, isUniquelyReferenced_nonNull_native);
        unint64_t v8 = (void *)v34[0];
        unint64_t v21 = sub_4C69C(v13);
        if ((v20 & 1) != (v22 & 1)) {
          goto LABEL_33;
        }
        unint64_t v16 = v21;
      }
      swift_bridgeObjectRelease();
      if (v20)
      {
        swift_bridgeObjectRetain();
      }
      else
      {
        v8[(v16 >> 6) + 8] |= 1 << v16;
        *(unsigned char *)(v8[6] + v16) = v13;
        *(void *)(v8[7] + 8 * v16) = 0;
        uint64_t v23 = v8[2];
        uint64_t v24 = v23 + 1;
        BOOL v25 = __OFADD__(v23, 1);
        swift_bridgeObjectRetain();
        if (v25) {
          goto LABEL_32;
        }
        v8[2] = v24;
      }
      uint64_t v26 = v8[7];
      swift_bridgeObjectRelease();
      uint64_t v27 = *(void *)(v26 + 8 * v16);
      BOOL v28 = __OFADD__(v27, 1);
      uint64_t v29 = v27 + 1;
      if (v28) {
        goto LABEL_31;
      }
      ++v10;
      *(void *)(v26 + 8 * v16) = v29;
      if (v9 == v10)
      {
        swift_bridgeObjectRelease();
        a3 = v33;
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_29:
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    uint64_t result = sub_1FC770();
    __break(1u);
  }
  else
  {
LABEL_21:
    uint64_t v30 = swift_bridgeObjectRetain();
    sub_135E74(v30, v34);
    swift_bridgeObjectRelease();
    char v31 = v34[0];
    if (LOBYTE(v34[0]) != 2)
    {
      if ((double)v34[1] / (double)v9 >= a4) {
        char v31 = v34[0] & 1;
      }
      else {
        char v31 = 2;
      }
    }
    *a3 = v31;
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t type metadata accessor for InterestBasedMediaTypesRecommendationService()
{
  return self;
}

uint64_t sub_137E20(uint64_t a1, void *a2)
{
  uint64_t v6 = *v2;
  unint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *unint64_t v7 = v3;
  v7[1] = sub_B06F4;
  v7[280] = v6;
  v7[279] = a1;
  memcpy(v7 + 217, a2, 0x1E8uLL);
  uint64_t v8 = a2[62];
  v7[281] = a2[61];
  v7[282] = v8;
  v7[283] = a2[63];
  v7[284] = a2[64];
  memcpy(v7 + 2, a2 + 65, 0x258uLL);
  return _swift_task_switch(sub_136428, 0, 0);
}

uint64_t sub_137F24(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v7 = sub_160C90((uint64_t)_swiftEmptyArrayStorage);
  uint64_t v83 = _swiftEmptySetSingleton;
  uint64_t v69 = a1 + 64;
  uint64_t v70 = a1;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v71 = v9 & *(void *)(a1 + 64);
  int64_t v68 = (unint64_t)(v8 + 63) >> 6;
  swift_bridgeObjectRetain();
  unint64_t v10 = 0;
  int64_t v11 = 0;
  uint64_t v72 = a2;
LABEL_5:
  unint64_t v12 = v71;
  do
  {
    if (v12)
    {
      unint64_t v13 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      int64_t v17 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_98;
      }
      if (v17 >= v68)
      {
        swift_release();
        uint64_t v19 = v7;
        if (!*(void *)(v7 + 16)) {
          goto LABEL_91;
        }
        goto LABEL_86;
      }
      unint64_t v18 = *(void *)(v69 + 8 * v17);
      ++v11;
      if (!v18)
      {
        uint64_t v19 = v7;
        int64_t v11 = v17 + 1;
        if (v17 + 1 >= v68) {
          goto LABEL_85;
        }
        unint64_t v18 = *(void *)(v69 + 8 * v11);
        if (!v18)
        {
          int64_t v11 = v17 + 2;
          if (v17 + 2 >= v68) {
            goto LABEL_85;
          }
          unint64_t v18 = *(void *)(v69 + 8 * v11);
          if (!v18)
          {
            int64_t v20 = v17 + 3;
            if (v20 >= v68)
            {
LABEL_85:
              swift_release();
              if (!*(void *)(v7 + 16))
              {
LABEL_91:
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_52958(v10);
                return 0;
              }
LABEL_86:
              unint64_t v61 = sub_4C69C(0);
              if ((v62 & 1) != 0 && *(void *)(*(void *)(*(void *)(v19 + 56) + 8 * v61) + 16) >= a4)
              {
                if (*(void *)(v19 + 16))
                {
                  unint64_t v63 = sub_4C69C(1);
                  if ((v64 & 1) != 0 && *(void *)(*(void *)(*(void *)(v19 + 56) + 8 * v63) + 16) >= a4) {
                    goto LABEL_96;
                  }
                }
              }
              goto LABEL_91;
            }
            unint64_t v18 = *(void *)(v69 + 8 * v20);
            if (!v18)
            {
              while (1)
              {
                int64_t v11 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_99;
                }
                if (v11 >= v68) {
                  goto LABEL_85;
                }
                unint64_t v18 = *(void *)(v69 + 8 * v11);
                ++v20;
                if (v18) {
                  goto LABEL_22;
                }
              }
            }
            int64_t v11 = v20;
          }
        }
      }
LABEL_22:
      unint64_t v12 = (v18 - 1) & v18;
      unint64_t v14 = __clz(__rbit64(v18)) + (v11 << 6);
    }
    uint64_t v15 = *(void *)(*(void *)(v70 + 56) + 8 * v14);
    uint64_t v16 = *(void *)(v15 + 16);
  }
  while (!v16);
  unint64_t v71 = v12;
  int64_t v67 = v11;
  uint64_t v75 = v15 + 32;
  int v79 = *(unsigned __int8 *)(*(void *)(v70 + 48) + v14);
  if (*(unsigned char *)(*(void *)(v70 + 48) + v14)) {
    uint64_t v21 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v21 = 0x6B6F6F6265;
  }
  unint64_t v22 = 0xE90000000000006BLL;
  if (!v79) {
    unint64_t v22 = 0xE500000000000000;
  }
  unint64_t v78 = v22;
  swift_bridgeObjectRetain();
  unint64_t v23 = 0;
  uint64_t v73 = v16;
  uint64_t v74 = v15;
  while (1)
  {
    if (v23 >= *(void *)(v15 + 16))
    {
      __break(1u);
LABEL_98:
      __break(1u);
LABEL_99:
      __break(1u);
LABEL_100:
      uint64_t result = sub_1FC770();
      __break(1u);
      return result;
    }
    if (!*(void *)(a2 + 16))
    {
      BOOL v25 = _swiftEmptyArrayStorage;
      uint64_t v27 = _swiftEmptyArrayStorage[2];
      if (v27) {
        break;
      }
      goto LABEL_81;
    }
    uint64_t v24 = sub_56168(*(void *)(v75 + 8 * v23));
    BOOL v25 = _swiftEmptyArrayStorage;
    if (v26)
    {
      BOOL v25 = *(void **)(*(void *)(a2 + 56) + 8 * v24);
      swift_bridgeObjectRetain();
    }
    uint64_t v27 = v25[2];
    if (v27) {
      break;
    }
LABEL_81:
    swift_bridgeObjectRelease();
LABEL_30:
    if (++v23 == v16)
    {
      swift_bridgeObjectRelease();
      int64_t v11 = v67;
      goto LABEL_5;
    }
  }
  unint64_t v76 = v23;
  unint64_t v28 = 0;
  uint64_t v81 = v25 + 4;
  uint64_t v19 = v7;
  unint64_t v29 = v78;
  uint64_t v77 = v25;
  uint64_t v80 = v27;
  while (v28 < v25[2])
  {
    if (!*(void *)(a3 + 16)) {
      goto LABEL_39;
    }
    uint64_t v30 = v81[v28];
    uint64_t v31 = sub_56168(v30);
    if ((v32 & 1) == 0) {
      goto LABEL_39;
    }
    if (*(unsigned char *)(*(void *)(a3 + 56) + v31)) {
      uint64_t v33 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v33 = 0x6B6F6F6265;
    }
    if (*(unsigned char *)(*(void *)(a3 + 56) + v31)) {
      unint64_t v34 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v34 = 0xE500000000000000;
    }
    if (v21 == v33 && v29 == v34)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      char v36 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v36 & 1) == 0) {
        goto LABEL_38;
      }
    }
    uint64_t v37 = v83;
    uint64_t v27 = v80;
    if (v83[2])
    {
      uint64_t v38 = sub_1FC7D0();
      uint64_t v39 = -1 << *((unsigned char *)v37 + 32);
      unint64_t v40 = v38 & ~v39;
      if ((*(void *)((char *)v37 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v40))
      {
        uint64_t v41 = v37[6];
        if (*(void *)(v41 + 8 * v40) == v30) {
          goto LABEL_39;
        }
        uint64_t v42 = ~v39;
        while (1)
        {
          unint64_t v40 = (v40 + 1) & v42;
          if (((*(void *)((char *)v37 + ((v40 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v40) & 1) == 0) {
            break;
          }
          if (*(void *)(v41 + 8 * v40) == v30) {
            goto LABEL_39;
          }
        }
      }
    }
    uint64_t v43 = v21;
    sub_52958(v10);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v82 = v19;
    unint64_t v10 = sub_4C69C(v79);
    uint64_t v46 = *(void *)(v19 + 16);
    BOOL v47 = (v45 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47)) {
      goto LABEL_94;
    }
    char v49 = v45;
    if (*(void *)(v19 + 24) >= v48)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_120734();
        uint64_t v19 = v82;
      }
    }
    else
    {
      sub_11730C(v48, isUniquelyReferenced_nonNull_native);
      uint64_t v19 = v82;
      unint64_t v50 = sub_4C69C(v79);
      if ((v49 & 1) != (v51 & 1)) {
        goto LABEL_100;
      }
      unint64_t v10 = v50;
    }
    swift_bridgeObjectRelease();
    if (v49)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      *(void *)(v19 + 8 * (v10 >> 6) + 64) |= 1 << v10;
      *(unsigned char *)(*(void *)(v19 + 48) + v10) = v79;
      *(void *)(*(void *)(v19 + 56) + 8 * v10) = _swiftEmptyArrayStorage;
      uint64_t v52 = *(void *)(v19 + 16);
      uint64_t v53 = v52 + 1;
      uint64_t v19 = __OFADD__(v52, 1);
      uint64_t v54 = swift_bridgeObjectRetain();
      if (v19) {
        goto LABEL_95;
      }
      *(void *)(v54 + 16) = v53;
      uint64_t v19 = v54;
    }
    uint64_t v55 = *(void *)(v19 + 56);
    uint64_t v56 = v19;
    swift_bridgeObjectRelease();
    uint64_t v57 = *(void **)(v55 + 8 * v10);
    char v58 = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v55 + 8 * v10) = v57;
    if ((v58 & 1) == 0)
    {
      uint64_t v57 = sub_41858(0, v57[2] + 1, 1, v57);
      *(void *)(v55 + 8 * v10) = v57;
    }
    unint64_t v60 = v57[2];
    unint64_t v59 = v57[3];
    if (v60 >= v59 >> 1)
    {
      uint64_t v57 = sub_41858((void *)(v59 > 1), v60 + 1, 1, v57);
      *(void *)(v55 + 8 * v10) = v57;
    }
    uint64_t v21 = v43;
    v57[2] = v60 + 1;
    v57[v60 + 4] = v30;
    sub_73A4(&v82, v30);
    unint64_t v10 = (unint64_t)sub_E31E8;
    uint64_t v19 = v56;
    BOOL v25 = v77;
    unint64_t v29 = v78;
LABEL_38:
    uint64_t v27 = v80;
LABEL_39:
    if (++v28 == v27)
    {
      unint64_t v7 = v19;
      swift_bridgeObjectRelease();
      a2 = v72;
      uint64_t v16 = v73;
      uint64_t v15 = v74;
      unint64_t v23 = v76;
      goto LABEL_30;
    }
  }
  __break(1u);
LABEL_94:
  __break(1u);
LABEL_95:
  __break(1u);
LABEL_96:
  swift_bridgeObjectRelease();
  sub_52958(v10);
  return v19;
}

void *sub_1385C4(void *result, uint64_t a2)
{
  unint64_t v2 = result[2];
  if (v2)
  {
    unint64_t v4 = 0;
    unint64_t v5 = result + 4;
    uint64_t v6 = _swiftEmptyArrayStorage;
    while (1)
    {
      if (v4 <= v2) {
        unint64_t v7 = v2;
      }
      else {
        unint64_t v7 = v4;
      }
      while (1)
      {
        if (v4 == v7) {
          goto LABEL_26;
        }
        uint64_t result = memcpy(__dst, &v5[70 * v4++], 0x229uLL);
        if (!a2) {
          break;
        }
        uint64_t v8 = *(void *)(a2 + 16);
        if (!v8) {
          goto LABEL_6;
        }
        if (*(void *)(a2 + 32) == __dst[0]) {
          break;
        }
        if (v8 != 1)
        {
          uint64_t v9 = 5;
          while (1)
          {
            uint64_t v10 = v9 - 3;
            if (__OFADD__(v9 - 4, 1)) {
              break;
            }
            if (*(void *)(a2 + 8 * v9) == __dst[0]) {
              goto LABEL_17;
            }
            ++v9;
            if (v10 == v8) {
              goto LABEL_6;
            }
          }
          __break(1u);
LABEL_26:
          __break(1u);
          return result;
        }
LABEL_6:
        if (v4 == v2) {
          return v6;
        }
      }
LABEL_17:
      sub_12384(__dst);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v15 = v6;
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_465A8(0, v6[2] + 1, 1);
        uint64_t v6 = v15;
      }
      unint64_t v13 = v6[2];
      unint64_t v12 = v6[3];
      if (v13 >= v12 >> 1)
      {
        sub_465A8(v12 > 1, v13 + 1, 1);
        uint64_t v6 = v15;
      }
      v6[2] = v13 + 1;
      uint64_t result = memcpy(&v6[70 * v13 + 4], __dst, 0x229uLL);
      if (v4 == v2) {
        return v6;
      }
    }
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_13874C(void (*a1)(char *, char *), uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v29 = a5;
  uint64_t v30 = a8;
  uint64_t v10 = v9;
  uint64_t v38 = a1;
  uint64_t v39 = a2;
  uint64_t v28 = *(void *)(a5 - 8);
  __chkstk_darwin(a1);
  unint64_t v40 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  char v36 = *(void (***)(char *, uint64_t))(AssociatedTypeWitness - 8);
  uint64_t v13 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v15 = (char *)&v26 - v14;
  __chkstk_darwin(v13);
  uint64_t v33 = (char *)&v26 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = swift_getAssociatedTypeWitness();
  uint64_t v31 = *(void *)(v17 - 8);
  uint64_t v32 = v17;
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v26 - v18;
  uint64_t v34 = v8;
  uint64_t v20 = sub_1FBD20();
  if (!v20) {
    return sub_1FBB30();
  }
  Swift::Int v21 = v20;
  uint64_t v27 = v15;
  uint64_t v43 = sub_1FC1B0();
  uint64_t v35 = sub_1FC1C0();
  sub_1FC170(v21);
  uint64_t v41 = v19;
  uint64_t result = sub_1FBD10();
  if (v21 < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v23 = (void (**)(char *))(v36 + 2);
    ++v36;
    uint64_t v37 = v23;
    uint64_t v24 = v27;
    while (1)
    {
      BOOL v25 = (void (*)(char *, void))sub_1FBD50();
      (*v37)(v24);
      v25(v42, 0);
      v38(v24, v40);
      if (v10) {
        break;
      }
      uint64_t v10 = 0;
      (*v36)(v24, AssociatedTypeWitness);
      sub_1FC1A0();
      sub_1FBD30();
      if (!--v21)
      {
        (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
        return v43;
      }
    }
    (*v36)(v24, AssociatedTypeWitness);
    (*(void (**)(char *, uint64_t))(v31 + 8))(v41, v32);
    swift_release();
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v28 + 32))(v30, v40, v29);
  }
  return result;
}

double Book.Rationale.conditionalScore.getter()
{
  return *(double *)v0;
}

uint64_t AttributeAffinityResult.inferredFromSeedBooks.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for AttributeAffinityResult() + 20);
  uint64_t v4 = sub_12124(&qword_270A00);
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16);

  return v5(a1, v3, v4);
}

uint64_t type metadata accessor for AttributeAffinityResult()
{
  uint64_t result = qword_270B10;
  if (!qword_270B10) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t AttributeAffinityResult.init(affinity:inferredFromSeedBooks:)@<X0>(uint64_t a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  *a2 = a3;
  uint64_t v4 = (char *)a2 + *(int *)(type metadata accessor for AttributeAffinityResult() + 20);
  uint64_t v5 = sub_12124(&qword_270A00);
  uint64_t v6 = *(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32);

  return v6(v4, a1, v5);
}

uint64_t AttributeScorerType.score<A>(attribute:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v8[2] = a4;
  v8[3] = a5;
  v8[5] = a7;
  v8[6] = a1;
  v8[7] = a2;
  return (*(uint64_t (**)(void *(*)(void *), void *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(a6 + 8))(sub_138E2C, v8, a3, a5, a7, a4, a6);
}

void *sub_138D04(void *__src, void (*a2)(unsigned char *), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  memcpy(v14, __src, 0x229uLL);
  sub_1398A4(a5, a5);
  swift_allocObject();
  uint64_t v10 = sub_1FBB00();
  a2(v14);
  uint64_t v11 = sub_95534(v10);
  if (sub_1FBB90()) {
    unint64_t v12 = (void *)sub_139BBC(v11, a5, a7);
  }
  else {
    unint64_t v12 = _swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  return v12;
}

void *sub_138E2C(void *a1)
{
  return sub_138D04(a1, *(void (**)(unsigned char *))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t *initializeBufferWithCopyOfBuffer for AttributeAffinityResult(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v9 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (uint64_t *)(v9 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    *a1 = *a2;
    uint64_t v5 = *(int *)(a3 + 20);
    uint64_t v6 = (char *)a1 + v5;
    unint64_t v7 = (char *)a2 + v5;
    uint64_t v8 = sub_12124(&qword_270A00);
    (*(void (**)(char *, char *, uint64_t))(*(void *)(v8 - 8) + 16))(v6, v7, v8);
  }
  return v3;
}

uint64_t destroy for AttributeAffinityResult(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 20);
  uint64_t v3 = sub_12124(&qword_270A00);
  int v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);

  return v4(v2, v3);
}

void *initializeWithCopy for AttributeAffinityResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_12124(&qword_270A00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 16))(v5, v6, v7);
  return a1;
}

void *assignWithCopy for AttributeAffinityResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_12124(&qword_270A00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 24))(v5, v6, v7);
  return a1;
}

void *initializeWithTake for AttributeAffinityResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_12124(&qword_270A00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 32))(v5, v6, v7);
  return a1;
}

void *assignWithTake for AttributeAffinityResult(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v4 = *(int *)(a3 + 20);
  uint64_t v5 = (char *)a1 + v4;
  uint64_t v6 = (char *)a2 + v4;
  uint64_t v7 = sub_12124(&qword_270A00);
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v7 - 8) + 40))(v5, v6, v7);
  return a1;
}

uint64_t getEnumTagSinglePayload for AttributeAffinityResult(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_13918C);
}

uint64_t sub_13918C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 20);
  uint64_t v5 = sub_12124(&qword_270A00);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for AttributeAffinityResult(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_139214);
}

uint64_t sub_139214(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 20);
  uint64_t v6 = sub_12124(&qword_270A00);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_13928C()
{
  sub_139328();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_139328()
{
  if (!qword_270B20)
  {
    sub_121C4(&qword_26EC48);
    sub_52CC0((unint64_t *)&unk_270B28, &qword_26EC48);
    unint64_t v0 = sub_1FB3C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_270B20);
    }
  }
}

uint64_t dispatch thunk of AttributeScorerType.score<A>(attributes:of:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  return (*(uint64_t (**)(void))(a7 + 8))();
}

uint64_t sub_1393D0@<X0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  unint64_t v22 = a2;
  uint64_t v3 = sub_12124(&qword_270BF8);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)&v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v21 - v8;
  uint64_t v10 = sub_12124(&qword_270A00);
  sub_1FB370();
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v7, v9, v3);
  sub_52CC0(&qword_270C00, &qword_270BF8);
  sub_1FB980();
  uint64_t result = v23;
  unint64_t v12 = *(void *)(v23 + 16);
  double v13 = 0.0;
  if (v12 == v24)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v9, v3);
    uint64_t v19 = type metadata accessor for AttributeAffinityResult();
    uint64_t v20 = v22;
    uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v10 - 8) + 16))((char *)v22 + *(int *)(v19 + 20), a1, v10);
    *uint64_t v20 = v13;
  }
  else
  {
    if ((uint64_t)v12 > (uint64_t)v24)
    {
      unint64_t v14 = v12 - v24;
      if (v12 >= v24) {
        unint64_t v15 = v12 - v24;
      }
      else {
        unint64_t v15 = 0;
      }
      unint64_t v16 = v12 + ~v24;
      uint64_t v17 = (double *)(v23 + 8 * v24 + 32);
      while (v15 > v16)
      {
        double v18 = *v17++;
        double v13 = v13 + v18;
        if (!--v14) {
          goto LABEL_9;
        }
      }
      __break(1u);
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_139620@<X0>(void *a1@<X0>, double *a2@<X8>)
{
  unint64_t v2 = a1[17];
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    __break(1u);
    JUMPOUT(0x1397C0);
  }
  unint64_t v3 = a1[17];
  uint64_t v5 = a1[11];
  uint64_t v4 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v6 = a1[14];
  uint64_t v9 = a1[15];
  uint64_t v8 = a1[16];
  if (v2 >> 62 == 3)
  {
    uint64_t v10 = a1[11];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1FD2A0;
    *(void *)(v10 + 32) = v5;
    *(void *)(v10 + 40) = v4;
    *(void *)(v10 + 48) = v7;
    *(void *)(v10 + 56) = v6;
    *(void *)(v10 + 64) = v9;
    *(void *)(v10 + 72) = v8;
    *(unsigned char *)(v10 + 80) = v3 & 1;
  }
  uint64_t v17 = v8;
  sub_1244C();
  sub_1244C();
  uint64_t v11 = v5;
  unint64_t v12 = v3;
  uint64_t v13 = Array<A>.affinity.getter(v10);
  char v18 = v14;
  swift_bridgeObjectRelease();
  uint64_t result = sub_1255C(v11, v4, v7, v6, v9, v17, v12);
  double v16 = *(double *)&v13;
  if (v18) {
    double v16 = 0.0;
  }
  *a2 = v16;
  return result;
}

double sub_1397D0@<D0>(double *a1@<X0>, double *a2@<X8>)
{
  double result = fabs(*a1);
  *a2 = result;
  return result;
}

uint64_t sub_1397E0@<X0>(double *a1@<X0>, double *a2@<X8>, double a3@<D0>)
{
  double v5 = *a1 / a3;
  uint64_t v6 = *(int *)(type metadata accessor for AttributeAffinityResult() + 20);
  uint64_t v7 = (char *)a1 + v6;
  uint64_t v8 = (char *)a2 + v6;
  uint64_t v9 = sub_12124(&qword_270A00);
  uint64_t result = (*(uint64_t (**)(char *, char *, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v7, v9);
  *a2 = v5;
  return result;
}

uint64_t type metadata accessor for AttributeScorer()
{
  return self;
}

uint64_t sub_1398A4(uint64_t a1, uint64_t a2)
{
  if (swift_isClassType()) {
    uint64_t v3 = a2;
  }
  else {
    uint64_t v3 = 0;
  }
  if (v3)
  {
    return sub_12124(&qword_26F5A0);
  }
  else
  {
    return sub_1FC590();
  }
}

uint64_t sub_139914()
{
  sub_12124(&qword_26EC48);
  sub_52CC0(&qword_270BF0, &qword_26EC48);
  Sequence.grouped<A>(by:)();
  sub_12124(&qword_270A00);
  type metadata accessor for AttributeAffinityResult();
  uint64_t v0 = sub_1FB760();
  swift_bridgeObjectRelease();
  uint64_t v1 = sub_1FB740();
  swift_bridgeObjectRetain();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v4 = sub_13874C((void (*)(char *, char *))sub_1397D0, 0, v1, (uint64_t)&type metadata for Double, (uint64_t)&type metadata for Never, WitnessTable, (uint64_t)&protocol witness table for Never, v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5)
  {
    swift_bridgeObjectRelease();
    return v0;
  }
  if (v5 == 1)
  {
    uint64_t v6 = 0;
    double v7 = 0.0;
LABEL_8:
    uint64_t v10 = v5 - v6;
    uint64_t v11 = (double *)(v4 + 8 * v6 + 32);
    do
    {
      double v12 = *v11++;
      double v7 = v7 + v12;
      --v10;
    }
    while (v10);
    goto LABEL_10;
  }
  uint64_t v6 = v5 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v8 = (double *)(v4 + 40);
  double v7 = 0.0;
  uint64_t v9 = v5 & 0x7FFFFFFFFFFFFFFELL;
  do
  {
    double v7 = v7 + *(v8 - 1) + *v8;
    v8 += 2;
    v9 -= 2;
  }
  while (v9);
  if (v5 != v6) {
    goto LABEL_8;
  }
LABEL_10:
  uint64_t v13 = swift_bridgeObjectRelease();
  if (v7 != 0.0)
  {
    __chkstk_darwin(v13);
    uint64_t v14 = sub_1FB760();
    swift_bridgeObjectRelease();
    return v14;
  }
  return v0;
}

uint64_t sub_139BA0@<X0>(double *a1@<X0>, double *a2@<X8>)
{
  return sub_1397E0(a1, a2, *(double *)(v2 + 16));
}

uint64_t sub_139BBC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = a1;
  uint64_t v6 = *(void *)(a2 - 8);
  uint64_t v7 = __chkstk_darwin(a1);
  uint64_t v9 = (char *)&v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  unint64_t v50 = (char *)&v38 - v11;
  uint64_t v39 = v12;
  __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v38 - v13;
  if (sub_1FBB60())
  {
    sub_1FC040();
    unint64_t v15 = (void *)sub_1FC030();
  }
  else
  {
    unint64_t v15 = _swiftEmptySetSingleton;
  }
  Swift::Int v43 = sub_1FBB90();
  if (!v43) {
    return (uint64_t)v15;
  }
  uint64_t v16 = 0;
  uint64_t v48 = (void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
  char v49 = v15 + 7;
  uint64_t v45 = v6 + 32;
  BOOL v47 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v40 = v6;
  uint64_t v41 = v5;
  uint64_t v42 = v14;
  while (1)
  {
    BOOL v17 = sub_1FBB50();
    sub_1FBB10();
    if (v17)
    {
      char v18 = *(void (**)(char *, uint64_t *, uint64_t))(v6 + 16);
      v18(v14, (uint64_t *)(v5+ ((*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80))+ *(void *)(v6 + 72) * v16), a2);
      BOOL v19 = __OFADD__(v16, 1);
      uint64_t v20 = v16 + 1;
      if (v19) {
        goto LABEL_20;
      }
    }
    else
    {
      uint64_t result = sub_1FC080();
      if (v39 != 8) {
        goto LABEL_23;
      }
      uint64_t v51 = result;
      char v18 = *v48;
      (*v48)(v14, &v51, a2);
      swift_unknownObjectRelease();
      BOOL v19 = __OFADD__(v16, 1);
      uint64_t v20 = v16 + 1;
      if (v19)
      {
LABEL_20:
        __break(1u);
        return (uint64_t)v15;
      }
    }
    uint64_t v46 = v20;
    char v44 = *(void (**)(char *, char *, uint64_t))(v6 + 32);
    v44(v50, v14, a2);
    uint64_t v21 = sub_1FB790();
    unint64_t v22 = v15;
    uint64_t v23 = -1 << *((unsigned char *)v15 + 32);
    unint64_t v24 = v21 & ~v23;
    unint64_t v25 = v24 >> 6;
    uint64_t v26 = v49[v24 >> 6];
    uint64_t v27 = 1 << v24;
    uint64_t v28 = *(void *)(v6 + 72);
    if (((1 << v24) & v26) != 0)
    {
      uint64_t v29 = ~v23;
      do
      {
        v18(v9, (uint64_t *)(v22[6] + v28 * v24), a2);
        uint64_t v30 = a3;
        char v31 = sub_1FB7D0();
        uint64_t v32 = *v47;
        (*v47)(v9, a2);
        if (v31)
        {
          v32(v50, a2);
          a3 = v30;
          uint64_t v6 = v40;
          uint64_t v5 = v41;
          unint64_t v15 = v22;
          goto LABEL_7;
        }
        unint64_t v24 = (v24 + 1) & v29;
        unint64_t v25 = v24 >> 6;
        uint64_t v26 = v49[v24 >> 6];
        uint64_t v27 = 1 << v24;
        a3 = v30;
      }
      while ((v26 & (1 << v24)) != 0);
      uint64_t v6 = v40;
      uint64_t v5 = v41;
    }
    uint64_t v33 = v50;
    v49[v25] = v27 | v26;
    unint64_t v34 = v22[6] + v28 * v24;
    unint64_t v15 = v22;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v44)(v34, v33, a2);
    uint64_t v36 = v22[2];
    BOOL v19 = __OFADD__(v36, 1);
    uint64_t v37 = v36 + 1;
    if (v19) {
      break;
    }
    v22[2] = v37;
LABEL_7:
    uint64_t v14 = v42;
    uint64_t v16 = v46;
    if (v46 == v43) {
      return (uint64_t)v15;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
  return result;
}

uint64_t dispatch thunk of GenreMetadataServiceType.fetchMetadataFor(genreIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t sub_13A07C(uint64_t a1)
{
  uint64_t v2 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v3 = -1;
  if (v2 < 64) {
    uint64_t v3 = ~(-1 << v2);
  }
  unint64_t v4 = v3 & *(void *)(a1 + 64);
  int64_t v26 = (unint64_t)(v2 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v5 = 0;
  uint64_t v6 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v8 = v7 | (v5 << 6);
    }
    else
    {
      int64_t v9 = v5 + 1;
      if (__OFADD__(v5, 1)) {
        goto LABEL_47;
      }
      if (v9 >= v26)
      {
LABEL_42:
        swift_release();
        return (uint64_t)v6;
      }
      unint64_t v10 = *(void *)(v25 + 8 * v9);
      ++v5;
      if (!v10)
      {
        int64_t v5 = v9 + 1;
        if (v9 + 1 >= v26) {
          goto LABEL_42;
        }
        unint64_t v10 = *(void *)(v25 + 8 * v5);
        if (!v10)
        {
          int64_t v5 = v9 + 2;
          if (v9 + 2 >= v26) {
            goto LABEL_42;
          }
          unint64_t v10 = *(void *)(v25 + 8 * v5);
          if (!v10)
          {
            int64_t v5 = v9 + 3;
            if (v9 + 3 >= v26) {
              goto LABEL_42;
            }
            unint64_t v10 = *(void *)(v25 + 8 * v5);
            if (!v10)
            {
              int64_t v11 = v9 + 4;
              if (v11 >= v26) {
                goto LABEL_42;
              }
              unint64_t v10 = *(void *)(v25 + 8 * v11);
              if (!v10)
              {
                while (1)
                {
                  int64_t v5 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    goto LABEL_48;
                  }
                  if (v5 >= v26) {
                    goto LABEL_42;
                  }
                  unint64_t v10 = *(void *)(v25 + 8 * v5);
                  ++v11;
                  if (v10) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v11;
            }
          }
        }
      }
LABEL_23:
      unint64_t v4 = (v10 - 1) & v10;
      unint64_t v8 = __clz(__rbit64(v10)) + (v5 << 6);
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 8 * v8);
    uint64_t v13 = *(void *)(v12 + 16);
    int64_t v14 = v6[2];
    int64_t v15 = v14 + v13;
    if (__OFADD__(v14, v13)) {
      break;
    }
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v15 <= v6[3] >> 1)
    {
      if (!*(void *)(v12 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v14 <= v15) {
        int64_t v17 = v14 + v13;
      }
      else {
        int64_t v17 = v14;
      }
      uint64_t v6 = sub_41DE0(isUniquelyReferenced_nonNull_native, v17, 1, v6);
      if (!*(void *)(v12 + 16))
      {
LABEL_4:
        if (v13) {
          goto LABEL_44;
        }
        goto LABEL_5;
      }
    }
    uint64_t v18 = v6[2];
    if ((v6[3] >> 1) - v18 < v13) {
      goto LABEL_45;
    }
    unint64_t v19 = (unint64_t)&v6[19 * v18 + 4];
    if (v12 + 32 < v19 + 152 * v13 && v19 < v12 + 32 + 152 * v13) {
      goto LABEL_49;
    }
    swift_arrayInitWithCopy();
    if (v13)
    {
      uint64_t v21 = v6[2];
      BOOL v22 = __OFADD__(v21, v13);
      uint64_t v23 = v21 + v13;
      if (v22) {
        goto LABEL_46;
      }
      v6[2] = v23;
    }
LABEL_5:
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_13A344(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  long long v20 = xmmword_1FD2A0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v7) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v9);
    if (!v17) {
      break;
    }
LABEL_19:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_5:
    memcpy(v22, (const void *)(*(void *)(a2 + 56) + 560 * v11), 0x229uLL);
    char v12 = v22[1];
    memcpy(v21, v22, 0x229uLL);
    sub_12124(&qword_26C510);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v20;
    *(unsigned char *)(v13 + 32) = v12;
    sub_12384(v22);
    Swift::Int v14 = sub_BD5F4(v13);
    swift_setDeallocating();
    uint64_t v15 = swift_deallocClassInstance();
    __chkstk_darwin(v15);
    v19[2] = &v23;
    v19[3] = v21;
    sub_6008((uint64_t (*)(char *))sub_1592A0, (uint64_t)v19, v14);
    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t)sub_124B4(v22);
  }
  int64_t v18 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v9 + 4;
  if (v9 + 4 >= v7)
  {
LABEL_24:
    swift_release();
    return v23;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v9 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_13A5A4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D088);
  __chkstk_darwin(v4);
  uint64_t v16 = a1;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v4);
  sub_52CC0(&qword_2713E0, &qword_26D088);
  uint64_t result = sub_1FB980();
  uint64_t v8 = v14;
  unint64_t v9 = v15;
  unint64_t v10 = *(void *)(v14 + 16);
  if (v15 == v10)
  {
    swift_bridgeObjectRelease();
    return a1;
  }
  else
  {
    uint64_t v11 = 80 * v15 + 40;
    while (v9 < v10)
    {
      unint64_t v12 = v9 + 1;
      if (__OFADD__(v9, 1)) {
        goto LABEL_10;
      }
      uint64_t result = sub_769C((unsigned char *)&v13 + 7, *(unsigned char *)(v8 + v11));
      unint64_t v10 = *(void *)(v8 + 16);
      v11 += 80;
      ++v9;
      if (v12 == v10)
      {
        swift_bridgeObjectRelease();
        return v16;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  return result;
}

uint64_t CollectionRecommendation.collectionRecommendationType.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = 1;
      return sub_7B918((uint64_t)v6);
    case 2u:
      uint64_t v8 = sub_12124(&qword_26D090);
      memcpy(v12, &v6[*(int *)(v8 + 48)], 0x229uLL);
      sub_124B4(v12);
      swift_bridgeObjectRelease();
      char v9 = 2;
      goto LABEL_11;
    case 3u:
      char v9 = 3;
      goto LABEL_11;
    case 4u:
      char v9 = 4;
      goto LABEL_11;
    case 5u:
      char v9 = 5;
      goto LABEL_11;
    case 6u:
      char v9 = 6;
      goto LABEL_11;
    case 7u:
      char v9 = 7;
      goto LABEL_11;
    case 8u:
      char v9 = 8;
LABEL_11:
      *a1 = v9;
      uint64_t v10 = sub_12124(&qword_26D088);
      return (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
    case 9u:
      uint64_t result = sub_7B918((uint64_t)v6);
      char v11 = 9;
      goto LABEL_15;
    case 0xAu:
      uint64_t result = sub_7B918((uint64_t)v6);
      char v11 = 10;
      goto LABEL_15;
    case 0xBu:
      uint64_t result = sub_7B918((uint64_t)v6);
      char v11 = 11;
LABEL_15:
      *a1 = v11;
      break;
    default:
      uint64_t result = sub_7B918((uint64_t)v6);
      *a1 = 0;
      break;
  }
  return result;
}

uint64_t type metadata accessor for CollectionRecommendation(uint64_t a1)
{
  return sub_DA140(a1, (uint64_t *)&unk_271008);
}

uint64_t sub_13A950(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionRecommendation(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t CollectionRecommendation.targetGenreID.getter()
{
  uint64_t v1 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v4 = *(void *)&v3[*(int *)(sub_12124(&qword_26D998) + 48)];
    uint64_t v5 = sub_12124(&qword_26D088);
    (*(void (**)(char *, uint64_t))(*(void *)(v5 - 8) + 8))(v3, v5);
  }
  else
  {
    sub_7B918((uint64_t)v3);
    return 0;
  }
  return v4;
}

uint64_t CollectionRecommendationType.rawValue.getter()
{
  uint64_t result = 1802465122;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x736B6F6F62;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0x417942736B6F6F62;
      break;
    case 4:
      uint64_t result = 0xD000000000000017;
      break;
    case 5:
      uint64_t result = 0x476E49736B6F6F62;
      break;
    case 6:
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    case 8:
      uint64_t result = 0xD000000000000013;
      break;
    case 9:
      uint64_t result = 0x736569726573;
      break;
    case 0xA:
      unsigned int v2 = 1954047342;
      goto LABEL_13;
    case 0xB:
      unsigned int v2 = 1701998445;
LABEL_13:
      uint64_t result = v2 | 0x65536E4900000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t CollectionRecommendationRequest.storeInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *a1 = *(void *)(v1 + 16);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t CollectionRecommendationRequest.allGenresAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + 32);
}

void CollectionRecommendationRequest.allowedSales.getter(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + 40);
}

uint64_t PostHydrationFilteringCandidateMetadata.isPreorder.getter()
{
  return *(unsigned __int8 *)(v0 + 48);
}

uint64_t CollectionRecommendationRequest.clusteringOptions.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 80);
  uint64_t v3 = *(void *)(v1 + 88);
  uint64_t v4 = *(void *)(v1 + 96);
  uint64_t v5 = *(void *)(v1 + 104);
  uint64_t v6 = *(void *)(v1 + 112);
  *(_OWORD *)a1 = *(_OWORD *)(v1 + 64);
  *(void *)(a1 + 16) = v2;
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = v5;
  *(void *)(a1 + 48) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t CollectionRecommendationRequest.optionsByCollectionRecommendationType.getter()
{
  return swift_bridgeObjectRetain();
}

void CollectionRecommendationRequest.overrideMediaTypeMethod.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 128);
}

uint64_t CollectionRecommendationRequest.overrideBookCandidateLimit.getter()
{
  return *(void *)(v0 + 136);
}

uint64_t CollectionRecommendationRequest.overrideBookCandidateLimitPerSeedBook.getter()
{
  return *(void *)(v0 + 152);
}

void CollectionRecommendationRequest.overrideSeedBasedRecommendationSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 161);
}

void CollectionRecommendationRequest.overrideSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 162);
}

__n128 CollectionRecommendationRequest.init(userInfo:storeInfo:allGenresAllowed:allowedSales:explicitAllowed:excludedStoreIDs:clusteringOptions:optionsByCollectionRecommendationType:overrideMediaTypeMethod:overrideBookCandidateLimit:overrideBookCandidateLimitPerSeedBook:overrideSeedBasedRecommendationSource:overrideSource:)@<Q0>(_OWORD *a1@<X0>, uint64_t *a2@<X1>, char a3@<W2>, uint64_t *a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, char *a10, uint64_t a11, char a12, uint64_t a13, char a14, char *a15, char *a16)
{
  uint64_t v16 = *a2;
  uint64_t v17 = a2[1];
  uint64_t v18 = *a4;
  uint64_t v19 = *(void *)(a7 + 48);
  char v20 = *a10;
  char v21 = *a15;
  char v22 = *a16;
  *(_OWORD *)a9 = *a1;
  *(void *)(a9 + 16) = v16;
  *(void *)(a9 + 24) = v17;
  *(unsigned char *)(a9 + 32) = a3;
  *(void *)(a9 + 40) = v18;
  *(unsigned char *)(a9 + 48) = a5;
  *(void *)(a9 + 56) = a6;
  long long v23 = *(_OWORD *)(a7 + 16);
  *(_OWORD *)(a9 + 64) = *(_OWORD *)a7;
  *(_OWORD *)(a9 + 80) = v23;
  __n128 result = *(__n128 *)(a7 + 32);
  *(__n128 *)(a9 + 96) = result;
  *(void *)(a9 + 112) = v19;
  *(void *)(a9 + 120) = a8;
  *(unsigned char *)(a9 + 128) = v20;
  *(void *)(a9 + 136) = a11;
  *(unsigned char *)(a9 + 144) = a12 & 1;
  *(void *)(a9 + 152) = a13;
  *(unsigned char *)(a9 + 160) = a14 & 1;
  *(unsigned char *)(a9 + 161) = v21;
  *(unsigned char *)(a9 + 162) = v22;
  return result;
}

unint64_t sub_13AD9C(char a1)
{
  unint64_t result = 0x6F666E4972657375;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x666E4965726F7473;
      break;
    case 2:
      unint64_t result = 0xD000000000000010;
      break;
    case 3:
      unint64_t result = 0x536465776F6C6C61;
      break;
    case 4:
      unint64_t result = 0x746963696C707865;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    case 6:
      unint64_t result = 0xD000000000000011;
      break;
    case 7:
    case 10:
    case 11:
      unint64_t result = 0xD000000000000025;
      break;
    case 8:
      unint64_t result = 0xD000000000000017;
      break;
    case 9:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 12:
      unint64_t result = 0x656469727265766FLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_13AF44()
{
  return sub_13AD9C(*v0);
}

uint64_t sub_13AF4C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_157460(a1, a2);
  *a3 = result;
  return result;
}

void sub_13AF74(unsigned char *a1@<X8>)
{
  *a1 = 13;
}

uint64_t sub_13AF80(uint64_t a1)
{
  unint64_t v2 = sub_13B5A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13AFBC(uint64_t a1)
{
  unint64_t v2 = sub_13B5A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionRecommendationRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_270C10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v21 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v38 = v1[3];
  uint64_t v39 = v9;
  int v47 = *((unsigned __int8 *)v1 + 32);
  uint64_t v37 = v1[5];
  int v36 = *((unsigned __int8 *)v1 + 48);
  uint64_t v35 = v1[7];
  uint64_t v10 = v1[9];
  uint64_t v29 = v1[8];
  uint64_t v30 = v10;
  long long v34 = *((_OWORD *)v1 + 5);
  uint64_t v11 = v1[12];
  uint64_t v33 = v1[13];
  uint64_t v12 = v1[14];
  uint64_t v31 = v11;
  uint64_t v32 = v12;
  uint64_t v28 = v1[15];
  int v27 = *((unsigned __int8 *)v1 + 128);
  uint64_t v25 = v1[17];
  int v26 = *((unsigned __int8 *)v1 + 144);
  uint64_t v23 = v1[19];
  int v24 = *((unsigned __int8 *)v1 + 160);
  int v22 = *((unsigned __int8 *)v1 + 161);
  int v13 = *((unsigned __int8 *)v1 + 162);
  uint64_t v14 = a1[3];
  unint64_t v15 = a1;
  uint64_t v17 = v16;
  sub_5D64(v15, v14);
  sub_13B5A0();
  sub_1FC870();
  uint64_t v41 = v7;
  uint64_t v42 = v8;
  char v48 = 0;
  sub_13B5F4();
  uint64_t v18 = v40;
  sub_1FC530();
  if (v18) {
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v17);
  }
  LODWORD(v40) = v13;
  uint64_t v19 = v37;
  uint64_t v41 = v39;
  uint64_t v42 = v38;
  char v48 = 1;
  sub_13B648();
  sub_1FC530();
  LOBYTE(v41) = 2;
  sub_1FC4F0();
  uint64_t v41 = v19;
  char v48 = 3;
  sub_13B69C();
  sub_1FC530();
  LOBYTE(v41) = 4;
  sub_1FC4F0();
  uint64_t v41 = v35;
  char v48 = 5;
  sub_12124(&qword_26EA88);
  sub_13C3F4(&qword_26EA90);
  sub_1FC530();
  uint64_t v41 = v29;
  uint64_t v42 = v30;
  long long v43 = v34;
  uint64_t v44 = v31;
  uint64_t v45 = v33;
  uint64_t v46 = v32;
  char v48 = 6;
  sub_13B6F0();
  sub_1FC530();
  uint64_t v41 = v28;
  char v48 = 7;
  sub_12124(&qword_270C40);
  sub_13C4AC(&qword_270C48, (void (*)(void))sub_8CAF4, (void (*)(void))sub_13B744);
  sub_1FC530();
  LOBYTE(v41) = v27;
  char v48 = 8;
  sub_13B798();
  sub_1FC4A0();
  LOBYTE(v41) = 9;
  sub_1FC490();
  LOBYTE(v41) = 10;
  sub_1FC490();
  LOBYTE(v41) = v22;
  char v48 = 11;
  sub_7FE88();
  sub_1FC4A0();
  LOBYTE(v41) = v40;
  char v48 = 12;
  sub_13B7EC();
  sub_1FC4A0();
  return (*(uint64_t (**)(void, uint64_t))(v4 + 8))(0, v17);
}

unint64_t sub_13B5A0()
{
  unint64_t result = qword_270C18;
  if (!qword_270C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C18);
  }
  return result;
}

unint64_t sub_13B5F4()
{
  unint64_t result = qword_270C20;
  if (!qword_270C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C20);
  }
  return result;
}

unint64_t sub_13B648()
{
  unint64_t result = qword_270C28;
  if (!qword_270C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C28);
  }
  return result;
}

unint64_t sub_13B69C()
{
  unint64_t result = qword_270C30;
  if (!qword_270C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C30);
  }
  return result;
}

unint64_t sub_13B6F0()
{
  unint64_t result = qword_270C38;
  if (!qword_270C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C38);
  }
  return result;
}

unint64_t sub_13B744()
{
  unint64_t result = qword_270C50;
  if (!qword_270C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C50);
  }
  return result;
}

unint64_t sub_13B798()
{
  unint64_t result = qword_270C58;
  if (!qword_270C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C58);
  }
  return result;
}

unint64_t sub_13B7EC()
{
  unint64_t result = qword_270C60;
  if (!qword_270C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C60);
  }
  return result;
}

uint64_t CollectionRecommendationRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_270C68);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v38 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  char v104 = a1;
  sub_5D64(a1, v9);
  sub_13B5A0();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)v104);
  }
  uint64_t v58 = v6;
  LOBYTE(v61) = 0;
  sub_13C2F8();
  sub_1FC3F0();
  uint64_t v10 = v71;
  uint64_t v11 = v72;
  LOBYTE(v61) = 1;
  sub_13C34C();
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  *(void *)&long long v54 = v10;
  *((void *)&v54 + 1) = v11;
  uint64_t v12 = v71;
  uint64_t v13 = v72;
  LOBYTE(v71) = 2;
  swift_bridgeObjectRetain();
  int v52 = sub_1FC3B0();
  *(void *)&long long v53 = v12;
  *((void *)&v53 + 1) = v13;
  LOBYTE(v61) = 3;
  sub_13C3A0();
  sub_1FC3F0();
  uint64_t v14 = v71;
  LOBYTE(v71) = 4;
  int v51 = sub_1FC3B0();
  sub_12124(&qword_26EA88);
  LOBYTE(v61) = 5;
  sub_13C3F4(&qword_26EAC0);
  sub_1FC3F0();
  uint64_t v15 = v71;
  LOBYTE(v61) = 6;
  sub_13C458();
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v60 = v15;
  uint64_t v16 = v73;
  uint64_t v49 = v72;
  uint64_t v47 = v71;
  uint64_t v48 = v75;
  uint64_t v17 = v77;
  uint64_t v56 = v76;
  uint64_t v57 = v74;
  sub_12124(&qword_270C40);
  LOBYTE(v61) = 7;
  sub_13C4AC(&qword_270C90, (void (*)(void))sub_8C8F8, (void (*)(void))sub_13C534);
  uint64_t v50 = v16;
  uint64_t v18 = v56;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v59 = v17;
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v19 = v71;
  LOBYTE(v61) = 8;
  sub_13C588();
  uint64_t v55 = v19;
  swift_bridgeObjectRetain();
  sub_1FC360();
  uint64_t v44 = v14;
  uint64_t v20 = v18;
  int v45 = v71;
  LOBYTE(v71) = 9;
  uint64_t v21 = sub_1FC350();
  int v46 = v22;
  uint64_t v23 = v21;
  char v100 = v22 & 1;
  LOBYTE(v71) = 10;
  uint64_t v42 = sub_1FC350();
  int v43 = v24;
  char v98 = v24 & 1;
  LOBYTE(v61) = 11;
  sub_80044();
  sub_1FC360();
  int v41 = v71;
  char v96 = 12;
  sub_13C5DC();
  sub_1FC360();
  LOBYTE(v19) = v52 & 1;
  int v39 = v52 & 1;
  LOBYTE(v18) = v51 & 1;
  int v52 = v51 & 1;
  (*(void (**)(char *, uint64_t))(v58 + 8))(v8, v5);
  LODWORD(v58) = v97;
  uint64_t v25 = *((void *)&v53 + 1);
  long long v61 = v54;
  long long v62 = v53;
  LOBYTE(v63) = v19;
  *((void *)&v63 + 1) = v44;
  LOBYTE(v64) = v18;
  *((void *)&v64 + 1) = v60;
  *(void *)&long long v65 = v47;
  *((void *)&v65 + 1) = v49;
  *(void *)&long long v66 = v50;
  uint64_t v26 = v57;
  *((void *)&v66 + 1) = v57;
  *(void *)&long long v67 = v48;
  uint64_t v27 = v20;
  *((void *)&v67 + 1) = v20;
  uint64_t v28 = v59;
  *(void *)&long long v68 = v59;
  *((void *)&v68 + 1) = v55;
  LOBYTE(v69) = v45;
  uint64_t v40 = v23;
  *((void *)&v69 + 1) = v23;
  v70[0] = v46 & 1;
  *(void *)&v70[8] = v42;
  v70[16] = v43 & 1;
  v70[17] = v41;
  v70[18] = v97;
  sub_13C630((uint64_t)&v61);
  uint64_t v29 = *((void *)&v54 + 1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v30 = v26;
  swift_bridgeObjectRelease();
  uint64_t v31 = v50;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v32 = *(_OWORD *)v70;
  *(_OWORD *)(a2 + 128) = v69;
  *(_OWORD *)(a2 + 144) = v32;
  *(_DWORD *)(a2 + 159) = *(_DWORD *)&v70[15];
  long long v33 = v66;
  *(_OWORD *)(a2 + 64) = v65;
  *(_OWORD *)(a2 + 80) = v33;
  long long v34 = v68;
  *(_OWORD *)(a2 + 96) = v67;
  *(_OWORD *)(a2 + 112) = v34;
  long long v35 = v62;
  *(_OWORD *)a2 = v61;
  *(_OWORD *)(a2 + 16) = v35;
  long long v36 = v64;
  *(_OWORD *)(a2 + 32) = v63;
  *(_OWORD *)(a2 + 48) = v36;
  sub_1264C((uint64_t)v104);
  uint64_t v71 = v54;
  uint64_t v72 = v29;
  uint64_t v73 = v53;
  uint64_t v74 = v25;
  LOBYTE(v75) = v39;
  *(_DWORD *)((char *)&v75 + 1) = v103[0];
  HIDWORD(v75) = *(_DWORD *)((char *)v103 + 3);
  uint64_t v76 = v44;
  LOBYTE(v77) = v52;
  *(_DWORD *)((char *)&v77 + 1) = *(_DWORD *)v102;
  HIDWORD(v77) = *(_DWORD *)&v102[3];
  uint64_t v78 = v60;
  uint64_t v79 = v47;
  uint64_t v80 = v49;
  uint64_t v81 = v31;
  uint64_t v82 = v30;
  uint64_t v83 = v48;
  uint64_t v84 = v27;
  uint64_t v85 = v28;
  uint64_t v86 = v55;
  char v87 = v45;
  *(_DWORD *)unint64_t v88 = *(_DWORD *)v101;
  *(_DWORD *)&v88[3] = *(_DWORD *)&v101[3];
  uint64_t v89 = v40;
  char v90 = v100;
  *(_DWORD *)int64_t v91 = *(_DWORD *)v99;
  *(_DWORD *)&v91[3] = *(_DWORD *)&v99[3];
  uint64_t v92 = v42;
  char v93 = v98;
  char v94 = v41;
  char v95 = v58;
  return sub_13C6C0((uint64_t)&v71);
}

unint64_t sub_13C2F8()
{
  unint64_t result = qword_270C70;
  if (!qword_270C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C70);
  }
  return result;
}

unint64_t sub_13C34C()
{
  unint64_t result = qword_270C78;
  if (!qword_270C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C78);
  }
  return result;
}

unint64_t sub_13C3A0()
{
  unint64_t result = qword_270C80;
  if (!qword_270C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C80);
  }
  return result;
}

uint64_t sub_13C3F4(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26EA88);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_13C458()
{
  unint64_t result = qword_270C88;
  if (!qword_270C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C88);
  }
  return result;
}

uint64_t sub_13C4AC(unint64_t *a1, void (*a2)(void), void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_270C40);
    a2();
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_13C534()
{
  unint64_t result = qword_270C98;
  if (!qword_270C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270C98);
  }
  return result;
}

unint64_t sub_13C588()
{
  unint64_t result = qword_270CA0;
  if (!qword_270CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270CA0);
  }
  return result;
}

unint64_t sub_13C5DC()
{
  unint64_t result = qword_270CA8;
  if (!qword_270CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270CA8);
  }
  return result;
}

uint64_t sub_13C630(uint64_t a1)
{
  return a1;
}

uint64_t sub_13C6C0(uint64_t a1)
{
  return a1;
}

uint64_t sub_13C750@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionRecommendationRequest.init(from:)(a1, a2);
}

uint64_t sub_13C768(void *a1)
{
  return CollectionRecommendationRequest.encode(to:)(a1);
}

BooksPersonalization::CollectionRecommendationType_optional __swiftcall CollectionRecommendationType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_256AF0;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 12;
  if (v5 < 0xC) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

BooksPersonalization::CollectionRecommendationType_optional sub_13C7DC(Swift::String *a1)
{
  return CollectionRecommendationType.init(rawValue:)(*a1);
}

uint64_t sub_13C7E8@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = CollectionRecommendationType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

Swift::Int sub_13C810()
{
  return sub_1FC830();
}

uint64_t sub_13C878()
{
  CollectionRecommendationType.rawValue.getter();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_13C8DC()
{
  return sub_1FC830();
}

uint64_t sub_13C940()
{
  return sub_1D9550();
}

uint64_t sub_13C94C()
{
  return sub_1FBA60();
}

uint64_t sub_13C9AC()
{
  return sub_1FBA40();
}

uint64_t sub_13C9FC(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_1592BC();

  return RawRepresentable<>.codingKey.getter(a1, a2, v4);
}

uint64_t sub_13CA50(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_1592BC();

  return RawRepresentable<>.init<A>(codingKey:)(a1, a4, a2, a5, v10, a3);
}

uint64_t sub_13CACC()
{
  if (*v0) {
    return 0x707954616964656DLL;
  }
  else {
    return 0x746E756F4378616DLL;
  }
}

uint64_t sub_13CB0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1579A4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_13CB34(uint64_t a1)
{
  unint64_t v2 = sub_13CD84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13CB70(uint64_t a1)
{
  unint64_t v2 = sub_13CD84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionRecommendationOptions.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_270CB0);
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5D64(a1, a1[3]);
  sub_13CD84();
  sub_1FC870();
  char v13 = 0;
  sub_1FC490();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    sub_12124(&qword_270CC0);
    sub_13CFE8(&qword_270CC8, &qword_270CC0, (void (*)(void))sub_8CB48);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

unint64_t sub_13CD84()
{
  unint64_t result = qword_270CB8;
  if (!qword_270CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270CB8);
  }
  return result;
}

uint64_t CollectionRecommendationOptions.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_270CD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_13CD84();
  sub_1FC850();
  if (!v2)
  {
    char v17 = 0;
    uint64_t v9 = sub_1FC350();
    char v11 = v10;
    v15[0] = a2;
    sub_12124(&qword_270CC0);
    char v16 = 1;
    sub_13CFE8(&qword_270CD8, &qword_270CC0, (void (*)(void))sub_8C9CC);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15[0];
    uint64_t v12 = v15[1];
    *(void *)v15[0] = v9;
    *(unsigned char *)(v13 + 8) = v11 & 1;
    *(void *)(v13 + 16) = v12;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_13CFE8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_13D054@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionRecommendationOptions.init(from:)(a1, a2);
}

uint64_t sub_13D06C(void *a1)
{
  return CollectionRecommendationOptions.encode(to:)(a1);
}

uint64_t sub_13D084@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X8>)
{
  char v4 = *a2;
  switch(*v3)
  {
    case 1:
    case 2:
    case 4:
    case 5:
      uint64_t v12 = *(int *)(sub_12124(&qword_26D9C8) + 48);
      uint64_t v13 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 16))(a3, a1, v13);
      *(unsigned char *)(a3 + v12) = v4;
      uint64_t v14 = type metadata accessor for CollectionRecommendation(0);
      swift_storeEnumTagMultiPayload();
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56);
      uint64_t v10 = a3;
      uint64_t v11 = 0;
      uint64_t v9 = v14;
      break;
    default:
      uint64_t v7 = type metadata accessor for CollectionRecommendation(0);
      uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
      uint64_t v9 = v7;
      uint64_t v10 = a3;
      uint64_t v11 = 1;
      break;
  }

  return v8(v10, v11, 1, v9);
}

uint64_t CollectionRecommendation.mediaTypes.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_12124(&qword_26D088);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      goto LABEL_2;
    case 2u:
      uint64_t v10 = sub_12124(&qword_26D090);
      memcpy(v26, &v8[*(int *)(v10 + 48)], 0x229uLL);
      sub_124B4(v26);
      swift_bridgeObjectRelease();
LABEL_2:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v9 = sub_13A5A4((uint64_t)_swiftEmptySetSingleton, (uint64_t)v5);
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v9;
    case 9u:
      int v25 = v8[8];
      uint64_t v11 = *((void *)v8 + 3);
      uint64_t v24 = *((void *)v8 + 2);
      uint64_t v12 = *((void *)v8 + 4);
      uint64_t v13 = *((void *)v8 + 5);
      uint64_t v14 = *((void *)v8 + 6);
      uint64_t v15 = *((void *)v8 + 7);
      uint64_t v16 = *((void *)v8 + 8);
      long long v23 = *((_OWORD *)v8 + 5);
      sub_12124(&qword_26C510);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
      sub_7B974(v24, v11, v12, v13, v14, v15, v16);
      *(unsigned char *)(inited + 32) = v25;
      uint64_t v9 = sub_BD5F4(inited);
      goto LABEL_6;
    default:
      char v18 = v8[8];
      uint64_t v19 = *((void *)v8 + 4);
      char v20 = v8[40];
      sub_12124(&qword_26C510);
      uint64_t v21 = swift_initStackObject();
      *(_OWORD *)(v21 + 16) = xmmword_1FD2A0;
      sub_54820(v19, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(unsigned char *)(v21 + 32) = v18;
      uint64_t v9 = sub_BD5F4(v21);
LABEL_6:
      swift_setDeallocating();
      return v9;
  }
}

uint64_t CollectionRecommendation.source.getter@<X0>(char *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v2, (uint64_t)v6);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      *a1 = 2;
      return sub_7B918((uint64_t)v6);
    case 2u:
      uint64_t v11 = sub_12124(&qword_26D090);
      memcpy(v12, &v6[*(int *)(v11 + 48)], 0x229uLL);
      sub_124B4(v12);
      swift_bridgeObjectRelease();
      char v9 = 2;
      goto LABEL_6;
    case 3u:
    case 5u:
      uint64_t v7 = *(int *)(sub_12124(&qword_26D998) + 64);
      goto LABEL_5;
    case 4u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v7 = *(int *)(sub_12124(&qword_26D9C8) + 48);
LABEL_5:
      char v9 = v6[v7];
LABEL_6:
      *a1 = v9;
      uint64_t v10 = sub_12124(&qword_26D088);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(*(void *)(v10 - 8) + 8))(v6, v10);
      break;
    default:
      uint64_t result = sub_7B918((uint64_t)v6);
      *a1 = 2;
      break;
  }
  return result;
}

uint64_t sub_13D868(char a1)
{
  uint64_t result = 1802465122;
  switch(a1)
  {
    case 1:
      uint64_t result = 0x736B6F6F62;
      break;
    case 2:
      uint64_t result = 0xD000000000000010;
      break;
    case 3:
      uint64_t result = 0x417942736B6F6F62;
      break;
    case 4:
      uint64_t result = 0xD000000000000017;
      break;
    case 5:
      uint64_t result = 0x476E49736B6F6F62;
      break;
    case 6:
    case 7:
      uint64_t result = 0xD000000000000011;
      break;
    case 8:
      uint64_t result = 0xD000000000000013;
      break;
    case 9:
      uint64_t result = 0x736569726573;
      break;
    case 10:
      unsigned int v3 = 1954047342;
      goto LABEL_13;
    case 11:
      unsigned int v3 = 1701998445;
LABEL_13:
      uint64_t result = v3 | 0x65536E4900000000;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_13D9DC(uint64_t a1)
{
  unint64_t v2 = sub_14DC40();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DA18(uint64_t a1)
{
  unint64_t v2 = sub_14DC40();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DA54(uint64_t a1)
{
  unint64_t v2 = sub_14DB44();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DA90(uint64_t a1)
{
  unint64_t v2 = sub_14DB44();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DACC(uint64_t a1)
{
  unint64_t v2 = sub_14DAF0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DB08(uint64_t a1)
{
  unint64_t v2 = sub_14DAF0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DB44(uint64_t a1)
{
  unint64_t v2 = sub_14DA9C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DB80(uint64_t a1)
{
  unint64_t v2 = sub_14DA9C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DBBC(uint64_t a1)
{
  unint64_t v2 = sub_14DBEC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DBF8(uint64_t a1)
{
  unint64_t v2 = sub_14DBEC();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_13DC34()
{
  return ((unint64_t)*v0 << 8) + 12383;
}

uint64_t sub_13DC48@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_157AA4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_13DC70(uint64_t a1)
{
  unint64_t v2 = sub_14DA48();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DCAC(uint64_t a1)
{
  unint64_t v2 = sub_14DA48();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DCE8()
{
  if (*v0) {
    return 12639;
  }
  else {
    return 12383;
  }
}

uint64_t sub_13DD04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_15809C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_13DD2C(uint64_t a1)
{
  unint64_t v2 = sub_14D9F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DD68(uint64_t a1)
{
  unint64_t v2 = sub_14D9F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DDA4()
{
  return sub_13D868(*v0);
}

uint64_t sub_13DDAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_157BB4(a1, a2);
  *a3 = result;
  return result;
}

void sub_13DDD4(unsigned char *a1@<X8>)
{
  *a1 = 12;
}

uint64_t sub_13DDE0(uint64_t a1)
{
  unint64_t v2 = sub_14D6C4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DE1C(uint64_t a1)
{
  unint64_t v2 = sub_14D6C4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DE58(uint64_t a1)
{
  unint64_t v2 = sub_14D9A0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DE94(uint64_t a1)
{
  unint64_t v2 = sub_14D9A0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DED0(uint64_t a1)
{
  unint64_t v2 = sub_14D8BC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DF0C(uint64_t a1)
{
  unint64_t v2 = sub_14D8BC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DF48(uint64_t a1)
{
  unint64_t v2 = sub_14D718();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DF84(uint64_t a1)
{
  unint64_t v2 = sub_14D718();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13DFC0(uint64_t a1)
{
  unint64_t v2 = sub_14D7C0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13DFFC(uint64_t a1)
{
  unint64_t v2 = sub_14D7C0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_13E038(uint64_t a1)
{
  unint64_t v2 = sub_14D814();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13E074(uint64_t a1)
{
  unint64_t v2 = sub_14D814();

  return CodingKey.debugDescription.getter(a1, v2);
}

void *CollectionRecommendation.encode(to:)(void *a1)
{
  uint64_t v171 = sub_12124(&qword_270CE0);
  uint64_t v147 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v170 = (char *)&v137 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_12124(&qword_270CE8);
  uint64_t v146 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  long long v166 = (char *)&v137 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_12124(&qword_270CF0);
  uint64_t v145 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  int64_t v165 = (char *)&v137 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_12124(&qword_270CF8);
  uint64_t v144 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  char v164 = (char *)&v137 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_12124(&qword_270D00);
  uint64_t v143 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  int64_t v162 = (char *)&v137 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v160 = sub_12124(&qword_270D08);
  uint64_t v141 = *(void *)(v160 - 8);
  __chkstk_darwin(v160);
  uint64_t v157 = (char *)&v137 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v161 = sub_12124(&qword_270D10);
  uint64_t v142 = *(void *)(v161 - 8);
  __chkstk_darwin(v161);
  uint64_t v158 = (char *)&v137 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v155 = sub_12124(&qword_270D18);
  uint64_t v138 = *(void *)(v155 - 8);
  __chkstk_darwin(v155);
  v153 = (char *)&v137 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v156 = sub_12124(&qword_270D20);
  uint64_t v139 = *(void *)(v156 - 8);
  __chkstk_darwin(v156);
  double v154 = (char *)&v137 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v159 = sub_12124(&qword_270D28);
  uint64_t v140 = *(void *)(v159 - 8);
  __chkstk_darwin(v159);
  uint64_t v179 = (uint64_t)&v137 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_12124(&qword_270D30);
  uint64_t v151 = *(void *)(v12 - 8);
  uint64_t v152 = v12;
  __chkstk_darwin(v12);
  BOOL v150 = (char *)&v137 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_12124(&qword_26D088);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v180 = v14;
  uint64_t v181 = v15;
  uint64_t v16 = __chkstk_darwin(v14);
  char v176 = (char *)&v137 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  char v174 = (char *)&v137 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  char v173 = (char *)&v137 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v177 = (uint64_t)&v137 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  v172 = (char *)&v137 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  v175 = (char *)&v137 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  v178 = (char *)&v137 - v29;
  __chkstk_darwin(v28);
  uint64_t v149 = (char *)&v137 - v30;
  uint64_t v31 = sub_12124(&qword_270D38);
  uint64_t v148 = *(void *)(v31 - 8);
  __chkstk_darwin(v31);
  long long v33 = (char *)&v137 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v34);
  long long v36 = (char *)&v137 - ((v35 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v185 = sub_12124(&qword_270D40);
  uint64_t v182 = *(void *)(v185 - 8);
  __chkstk_darwin(v185);
  uint64_t v38 = (char *)&v137 - ((v37 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_14D6C4();
  char v184 = v38;
  sub_1FC870();
  sub_13A950(v186, (uint64_t)v36);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v48 = v180;
      uint64_t v47 = v181;
      uint64_t v49 = v149;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v149, v36, v180);
      LOBYTE(v189[0]) = 1;
      sub_14DBEC();
      uint64_t v50 = v150;
      int v52 = v184;
      uint64_t v51 = v185;
      sub_1FC440();
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v53 = v152;
      uint64_t v54 = v183;
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v151 + 8))(v50, v53);
      (*(void (**)(char *, uint64_t))(v47 + 8))(v49, v48);
      uint64_t result = (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v52, v51);
      uint64_t v186 = v54;
      return result;
    case 2u:
      uint64_t v55 = sub_12124(&qword_26D090);
      memcpy(v189, &v36[*(int *)(v55 + 48)], 0x229uLL);
      uint64_t v177 = *(void *)&v36[*(int *)(v55 + 64)];
      uint64_t v57 = v180;
      uint64_t v56 = v181;
      uint64_t v58 = v178;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v178, v36, v180);
      LOBYTE(v188[0]) = 2;
      sub_14DB44();
      uint64_t v60 = v184;
      uint64_t v59 = v185;
      sub_1FC440();
      LOBYTE(v188[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v61 = v159;
      uint64_t v62 = v183;
      sub_1FC530();
      uint64_t v186 = v62;
      if (v62)
      {
        sub_124B4(v189);
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v179, v61);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v58, v57);
        return (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v60, v59);
      }
      uint64_t v122 = v177;
      memcpy(v188, v189, 0x229uLL);
      char v187 = 1;
      sub_AFB24();
      uint64_t v123 = v186;
      sub_1FC530();
      uint64_t v186 = v123;
      if (v123)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v179, v61);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v178, v57);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v60, v59);
        return sub_124B4(v189);
      }
      else
      {
        sub_124B4(v189);
        v188[0] = v122;
        char v187 = 2;
        sub_12124(&qword_270DC8);
        sub_13CFE8(&qword_270DD0, &qword_270DC8, (void (*)(void))sub_14DB98);
        uint64_t v132 = v186;
        sub_1FC530();
        uint64_t v186 = v132;
        (*(void (**)(uint64_t, uint64_t))(v140 + 8))(v179, v61);
        (*(void (**)(char *, uint64_t))(v56 + 8))(v178, v57);
        (*(void (**)(char *, uint64_t))(v182 + 8))(v60, v59);
        return (void *)swift_bridgeObjectRelease();
      }
    case 3u:
      uint64_t v63 = sub_12124(&qword_26D998);
      uint64_t v179 = *(void *)&v36[*(int *)(v63 + 48)];
      LODWORD(v178) = v36[*(int *)(v63 + 64)];
      uint64_t v64 = v180;
      uint64_t v65 = v181;
      long long v66 = v175;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v175, v36, v180);
      LOBYTE(v189[0]) = 3;
      sub_14DAF0();
      long long v67 = v154;
      uint64_t v60 = v184;
      uint64_t v59 = v185;
      sub_1FC440();
      LOBYTE(v189[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v68 = v156;
      uint64_t v69 = v183;
      sub_1FC530();
      uint64_t v186 = v69;
      if (v69)
      {
        (*(void (**)(char *, uint64_t))(v139 + 8))(v67, v68);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v66, v64);
      }
      else
      {
        char v124 = (char)v178;
        LOBYTE(v189[0]) = 1;
        int64_t v125 = v67;
        sub_1FC560();
        uint64_t v186 = 0;
        LOBYTE(v189[0]) = v124;
        LOBYTE(v188[0]) = 2;
        sub_14D94C();
        uint64_t v133 = v186;
        sub_1FC530();
        char v134 = v175;
        uint64_t v186 = v133;
        (*(void (**)(char *, uint64_t))(v139 + 8))(v125, v68);
        (*(void (**)(char *, uint64_t))(v65 + 8))(v134, v64);
      }
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v60, v59);
    case 4u:
      LODWORD(v179) = v36[*(int *)(sub_12124(&qword_26D9C8) + 48)];
      uint64_t v71 = v180;
      uint64_t v70 = v181;
      uint64_t v72 = v172;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v172, v36, v180);
      LOBYTE(v189[0]) = 4;
      sub_14DA9C();
      uint64_t v73 = v153;
      uint64_t v74 = v184;
      uint64_t v75 = v185;
      sub_1FC440();
      LOBYTE(v189[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v76 = v155;
      uint64_t v77 = v183;
      sub_1FC530();
      uint64_t v186 = v77;
      if (v77)
      {
        uint64_t v78 = v138;
        goto LABEL_18;
      }
      LOBYTE(v189[0]) = v179;
      LOBYTE(v188[0]) = 1;
      sub_14D94C();
      uint64_t v126 = v186;
      sub_1FC530();
      uint64_t v186 = v126;
      (*(void (**)(char *, uint64_t))(v138 + 8))(v73, v76);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v172, v71);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v74, v75);
    case 5u:
      uint64_t v79 = sub_12124(&qword_26D998);
      uint64_t v179 = *(void *)&v36[*(int *)(v79 + 48)];
      LODWORD(v178) = v36[*(int *)(v79 + 64)];
      uint64_t v81 = v180;
      uint64_t v80 = v181;
      uint64_t v82 = v177;
      (*(void (**)(uint64_t, char *, uint64_t))(v181 + 32))(v177, v36, v180);
      LOBYTE(v189[0]) = 5;
      sub_14DA48();
      uint64_t v83 = v158;
      uint64_t v60 = v184;
      uint64_t v59 = v185;
      sub_1FC440();
      LOBYTE(v189[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v84 = v161;
      uint64_t v85 = v183;
      sub_1FC530();
      uint64_t v186 = v85;
      if (v85)
      {
        (*(void (**)(char *, uint64_t))(v142 + 8))(v83, v84);
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v82, v81);
      }
      else
      {
        char v127 = (char)v178;
        LOBYTE(v189[0]) = 1;
        int64_t v128 = v83;
        sub_1FC560();
        uint64_t v186 = 0;
        LOBYTE(v189[0]) = v127;
        LOBYTE(v188[0]) = 2;
        sub_14D94C();
        uint64_t v135 = v186;
        sub_1FC530();
        uint64_t v136 = v177;
        uint64_t v186 = v135;
        (*(void (**)(char *, uint64_t))(v142 + 8))(v128, v84);
        (*(void (**)(uint64_t, uint64_t))(v80 + 8))(v136, v81);
      }
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v60, v59);
    case 6u:
      LODWORD(v179) = v36[*(int *)(sub_12124(&qword_26D9C8) + 48)];
      uint64_t v71 = v180;
      uint64_t v70 = v181;
      uint64_t v72 = v173;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v173, v36, v180);
      LOBYTE(v189[0]) = 6;
      sub_14D9F4();
      uint64_t v73 = v157;
      uint64_t v74 = v184;
      uint64_t v75 = v185;
      sub_1FC440();
      LOBYTE(v189[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v76 = v160;
      uint64_t v86 = v183;
      sub_1FC530();
      uint64_t v186 = v86;
      if (v86)
      {
        uint64_t v78 = v141;
        goto LABEL_18;
      }
      LOBYTE(v189[0]) = v179;
      LOBYTE(v188[0]) = 1;
      sub_14D94C();
      uint64_t v129 = v186;
      sub_1FC530();
      uint64_t v186 = v129;
      (*(void (**)(char *, uint64_t))(v141 + 8))(v73, v76);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v173, v71);
      return (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v74, v75);
    case 7u:
      LODWORD(v179) = v36[*(int *)(sub_12124(&qword_26D9C8) + 48)];
      uint64_t v71 = v180;
      uint64_t v70 = v181;
      uint64_t v72 = v174;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v174, v36, v180);
      LOBYTE(v189[0]) = 7;
      sub_14D9A0();
      uint64_t v73 = v162;
      uint64_t v74 = v184;
      uint64_t v75 = v185;
      sub_1FC440();
      LOBYTE(v189[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v76 = v163;
      uint64_t v87 = v183;
      sub_1FC530();
      uint64_t v186 = v87;
      if (v87)
      {
        uint64_t v78 = v143;
        goto LABEL_18;
      }
      LOBYTE(v189[0]) = v179;
      LOBYTE(v188[0]) = 1;
      sub_14D94C();
      uint64_t v130 = v186;
      sub_1FC530();
      uint64_t v186 = v130;
      (*(void (**)(char *, uint64_t))(v143 + 8))(v73, v76);
      (*(void (**)(char *, uint64_t))(v70 + 8))(v174, v71);
      break;
    case 8u:
      LODWORD(v179) = v36[*(int *)(sub_12124(&qword_26D9C8) + 48)];
      uint64_t v71 = v180;
      uint64_t v70 = v181;
      uint64_t v72 = v176;
      (*(void (**)(char *, char *, uint64_t))(v181 + 32))(v176, v36, v180);
      LOBYTE(v189[0]) = 8;
      sub_14D8BC();
      uint64_t v73 = v164;
      uint64_t v74 = v184;
      uint64_t v75 = v185;
      sub_1FC440();
      LOBYTE(v189[0]) = 0;
      sub_13CFE8(&qword_270D80, &qword_26D088, (void (*)(void))sub_14D910);
      uint64_t v76 = v167;
      uint64_t v88 = v183;
      sub_1FC530();
      uint64_t v186 = v88;
      if (v88)
      {
        uint64_t v78 = v144;
LABEL_18:
        (*(void (**)(char *, uint64_t))(v78 + 8))(v73, v76);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v72, v71);
      }
      else
      {
        LOBYTE(v189[0]) = v179;
        LOBYTE(v188[0]) = 1;
        sub_14D94C();
        uint64_t v131 = v186;
        sub_1FC530();
        uint64_t v186 = v131;
        (*(void (**)(char *, uint64_t))(v144 + 8))(v73, v76);
        (*(void (**)(char *, uint64_t))(v70 + 8))(v176, v71);
      }
      break;
    case 9u:
      uint64_t v186 = *(void *)v36;
      LODWORD(v177) = v36[8];
      uint64_t v89 = *((void *)v36 + 3);
      uint64_t v179 = *((void *)v36 + 2);
      uint64_t v180 = v89;
      uint64_t v181 = *((void *)v36 + 4);
      char v90 = (char *)*((void *)v36 + 5);
      uint64_t v91 = *((void *)v36 + 6);
      uint64_t v92 = (char *)*((void *)v36 + 7);
      v175 = (char *)*((void *)v36 + 8);
      char v176 = v90;
      uint64_t v93 = *((void *)v36 + 10);
      v178 = (char *)*((void *)v36 + 9);
      char v94 = (char *)*((void *)v36 + 11);
      uint64_t v95 = *((void *)v36 + 12);
      uint64_t v96 = *((void *)v36 + 13);
      LOBYTE(v189[0]) = 9;
      sub_14D814();
      unsigned __int8 v97 = v165;
      char v98 = v184;
      sub_1FC440();
      v189[0] = v186;
      LOBYTE(v189[1]) = v177;
      uint64_t v99 = v97;
      uint64_t v100 = (uint64_t)v176;
      v189[2] = v179;
      v189[3] = v180;
      v189[4] = v181;
      v189[5] = v176;
      uint64_t v177 = v91;
      v189[6] = v91;
      v189[7] = v92;
      char v173 = v94;
      char v174 = v92;
      uint64_t v101 = (uint64_t)v175;
      v189[8] = v175;
      v189[9] = v178;
      v189[10] = v93;
      v189[11] = v94;
      v189[12] = v95;
      v189[13] = v96;
      sub_14D868();
      uint64_t v102 = v168;
      uint64_t v103 = v183;
      sub_1FC530();
      uint64_t v186 = v103;
      (*(void (**)(char *, uint64_t))(v145 + 8))(v99, v102);
      (*(void (**)(char *, uint64_t))(v182 + 8))(v98, v185);
      return (void *)sub_7B974(v179, v180, v181, v100, v177, (char)v174, v101);
    case 0xAu:
      uint64_t v186 = *(void *)v36;
      LODWORD(v181) = v36[8];
      uint64_t v180 = *((void *)v36 + 2);
      LODWORD(v179) = v36[24];
      uint64_t v104 = *((void *)v36 + 4);
      int v105 = v36[40];
      uint64_t v106 = *((void *)v36 + 6);
      v178 = (char *)*((void *)v36 + 7);
      uint64_t v107 = *((void *)v36 + 8);
      uint64_t v108 = *((void *)v36 + 9);
      LOBYTE(v189[0]) = 10;
      sub_14D7C0();
      uint64_t v109 = v166;
      char v110 = v184;
      uint64_t v111 = v185;
      sub_1FC440();
      v189[0] = v186;
      LOBYTE(v189[1]) = v181;
      v189[2] = v180;
      LOBYTE(v189[3]) = v179;
      uint64_t v112 = v109;
      v189[4] = v104;
      LODWORD(v181) = v105;
      LOBYTE(v189[5]) = v105;
      v189[6] = v106;
      v189[7] = v178;
      v189[8] = v107;
      v189[9] = v108;
      sub_14D76C();
      uint64_t v113 = v169;
      uint64_t v114 = v183;
      sub_1FC530();
      uint64_t v186 = v114;
      uint64_t v115 = v146;
      goto LABEL_23;
    case 0xBu:
      uint64_t v186 = *(void *)v36;
      LODWORD(v181) = v36[8];
      uint64_t v180 = *((void *)v36 + 2);
      LODWORD(v179) = v36[24];
      uint64_t v104 = *((void *)v36 + 4);
      int v116 = v36[40];
      uint64_t v117 = *((void *)v36 + 6);
      v178 = (char *)*((void *)v36 + 7);
      uint64_t v118 = *((void *)v36 + 8);
      uint64_t v119 = *((void *)v36 + 9);
      LOBYTE(v189[0]) = 11;
      sub_14D718();
      int64_t v120 = v170;
      char v110 = v184;
      uint64_t v111 = v185;
      sub_1FC440();
      v189[0] = v186;
      LOBYTE(v189[1]) = v181;
      v189[2] = v180;
      LOBYTE(v189[3]) = v179;
      uint64_t v112 = v120;
      v189[4] = v104;
      LODWORD(v181) = v116;
      LOBYTE(v189[5]) = v116;
      v189[6] = v117;
      v189[7] = v178;
      v189[8] = v118;
      v189[9] = v119;
      sub_14D76C();
      uint64_t v113 = v171;
      uint64_t v121 = v183;
      sub_1FC530();
      uint64_t v186 = v121;
      uint64_t v115 = v147;
LABEL_23:
      (*(void (**)(char *, uint64_t))(v115 + 8))(v112, v113);
      (*(void (**)(char *, uint64_t))(v182 + 8))(v110, v111);
      sub_54820(v104, v181);
      swift_bridgeObjectRelease();
      return (void *)swift_bridgeObjectRelease();
    default:
      uint64_t v181 = *(void *)v36;
      LODWORD(v180) = v36[8];
      uint64_t v179 = *((void *)v36 + 2);
      LODWORD(v178) = v36[24];
      uint64_t v39 = *((void *)v36 + 4);
      uint64_t v40 = *((void *)v36 + 6);
      uint64_t v186 = *((void *)v36 + 7);
      uint64_t v41 = *((void *)v36 + 8);
      uint64_t v42 = *((void *)v36 + 9);
      char v43 = v36[40];
      LOBYTE(v189[0]) = 0;
      sub_14DC40();
      uint64_t v44 = v184;
      sub_1FC440();
      v189[0] = v181;
      LOBYTE(v189[1]) = v180;
      v189[2] = v179;
      LOBYTE(v189[3]) = (_BYTE)v178;
      v189[4] = v39;
      LOBYTE(v189[5]) = v43;
      v189[6] = v40;
      v189[7] = v186;
      v189[8] = v41;
      v189[9] = v42;
      sub_14D76C();
      uint64_t v45 = v183;
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v148 + 8))(v33, v31);
      (*(void (**)(char *, uint64_t))(v182 + 8))(v44, v185);
      sub_54820(v39, v43);
      swift_bridgeObjectRelease();
      uint64_t result = (void *)swift_bridgeObjectRelease();
      uint64_t v186 = v45;
      return result;
  }
  return (void *)(*(uint64_t (**)(char *, uint64_t))(v182 + 8))(v74, v75);
}

uint64_t CollectionRecommendation.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v180 = a2;
  uint64_t v175 = sub_12124(&qword_270DF0);
  uint64_t v160 = *(void *)(v175 - 8);
  __chkstk_darwin(v175);
  v195 = (char *)&v143 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = sub_12124(&qword_270DF8);
  uint64_t v159 = *(void *)(v176 - 8);
  __chkstk_darwin(v176);
  char v189 = (char *)&v143 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v173 = sub_12124(&qword_270E00);
  uint64_t v157 = *(void *)(v173 - 8);
  __chkstk_darwin(v173);
  char v187 = (char *)&v143 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v177 = sub_12124(&qword_270E08);
  uint64_t v161 = *(void *)(v177 - 8);
  __chkstk_darwin(v177);
  v194 = (char *)&v143 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v174 = sub_12124(&qword_270E10);
  uint64_t v158 = *(void *)(v174 - 8);
  __chkstk_darwin(v174);
  v188 = (char *)&v143 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v171 = sub_12124(&qword_270E18);
  uint64_t v156 = *(void *)(v171 - 8);
  __chkstk_darwin(v171);
  uint64_t v185 = (char *)&v143 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v172 = sub_12124(&qword_270E20);
  uint64_t v178 = *(void *)(v172 - 8);
  __chkstk_darwin(v172);
  uint64_t v186 = (char *)&v143 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v169 = sub_12124(&qword_270E28);
  uint64_t v154 = *(void *)(v169 - 8);
  __chkstk_darwin(v169);
  uint64_t v183 = (char *)&v143 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v170 = sub_12124(&qword_270E30);
  uint64_t v152 = *(void *)(v170 - 8);
  __chkstk_darwin(v170);
  char v184 = (char *)&v143 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v168 = sub_12124(&qword_270E38);
  uint64_t v155 = *(void *)(v168 - 8);
  __chkstk_darwin(v168);
  v193 = (char *)&v143 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v167 = sub_12124(&qword_270E40);
  uint64_t v192 = *(void *)(v167 - 8);
  __chkstk_darwin(v167);
  uint64_t v182 = (char *)&v143 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v163 = sub_12124(&qword_270E48);
  uint64_t v153 = *(void *)(v163 - 8);
  __chkstk_darwin(v163);
  uint64_t v181 = (char *)&v143 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v196 = sub_12124(&qword_270E50);
  uint64_t v191 = *(void *)(v196 - 8);
  __chkstk_darwin(v196);
  v199 = (char *)&v143 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v190 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v16 = __chkstk_darwin(v190);
  uint64_t v151 = (uint64_t *)((char *)&v143 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v18 = __chkstk_darwin(v16);
  BOOL v150 = (char *)&v143 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v149 = (char *)&v143 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  long long v166 = (char *)&v143 - v23;
  uint64_t v24 = __chkstk_darwin(v22);
  int64_t v165 = (char *)&v143 - v25;
  uint64_t v26 = __chkstk_darwin(v24);
  char v164 = (char *)&v143 - v27;
  uint64_t v28 = __chkstk_darwin(v26);
  uint64_t v179 = (char *)&v143 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  int64_t v162 = (char *)&v143 - v31;
  uint64_t v32 = __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v143 - v33;
  uint64_t v35 = __chkstk_darwin(v32);
  uint64_t v37 = (char *)&v143 - v36;
  uint64_t v38 = __chkstk_darwin(v35);
  uint64_t v40 = (char *)&v143 - v39;
  uint64_t v41 = __chkstk_darwin(v38);
  char v43 = (char *)&v143 - v42;
  __chkstk_darwin(v41);
  uint64_t v45 = (char *)&v143 - v44;
  uint64_t v46 = a1[3];
  v197 = a1;
  sub_5D64(a1, v46);
  sub_14D6C4();
  uint64_t v47 = v198;
  sub_1FC850();
  if (v47)
  {
LABEL_30:
    uint64_t v106 = (uint64_t)v197;
    return sub_1264C(v106);
  }
  uint64_t v144 = v43;
  uint64_t v145 = v40;
  uint64_t v146 = v34;
  uint64_t v147 = v37;
  uint64_t v49 = v192;
  uint64_t v48 = v193;
  uint64_t v51 = v194;
  uint64_t v50 = v195;
  uint64_t v198 = 0;
  uint64_t v148 = v45;
  uint64_t v52 = v196;
  uint64_t v53 = v199;
  uint64_t v54 = sub_1FC430();
  uint64_t v55 = (char *)v54;
  if (*(void *)(v54 + 16) != 1)
  {
    uint64_t v61 = v53;
    uint64_t v62 = sub_1FC0F0();
    swift_allocError();
    uint64_t v64 = v63;
    sub_12124(&qword_26F030);
    *uint64_t v64 = v190;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v62 - 8) + 104))(v64, enum case for DecodingError.typeMismatch(_:), v62);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v191 + 8))(v61, v52);
    goto LABEL_30;
  }
  switch(*(unsigned char *)(v54 + 32))
  {
    case 1:
      LOBYTE(v200[0]) = 1;
      sub_14DBEC();
      uint64_t v65 = v182;
      uint64_t v57 = v196;
      uint64_t v66 = v198;
      sub_1FC2F0();
      if (v66) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v67 = (uint64_t)v145;
      uint64_t v68 = v167;
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v65, v68);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v199, v196);
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = v67;
      goto LABEL_37;
    case 2:
      LOBYTE(v200[0]) = 2;
      sub_14DB44();
      uint64_t v69 = v48;
      uint64_t v57 = v196;
      uint64_t v70 = v198;
      sub_1FC2F0();
      if (v70) {
        goto LABEL_26;
      }
      uint64_t v71 = sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v72 = v147;
      uint64_t v73 = v168;
      sub_1FC3F0();
      int v116 = &v72[*(int *)(sub_12124(&qword_26D090) + 48)];
      LOBYTE(v200[0]) = 1;
      sub_AFB78();
      sub_1FC3F0();
      uint64_t v117 = v155;
      v195 = v55;
      uint64_t v198 = 0;
      sub_12124(&qword_270DC8);
      char v201 = 2;
      sub_13CFE8(&qword_270E80, &qword_270DC8, (void (*)(void))sub_14DDCC);
      uint64_t v140 = v198;
      sub_1FC3F0();
      if (v140)
      {
        (*(void (**)(char *, uint64_t))(v117 + 8))(v69, v73);
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v199, v196);
        memcpy(v200, v116, 0x229uLL);
        sub_124B4(v200);
        (*(void (**)(char *, uint64_t))(*(void *)(v71 - 8) + 8))(v147, v71);
        goto LABEL_30;
      }
      (*(void (**)(char *, uint64_t))(v117 + 8))(v69, v73);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v199, v196);
      uint64_t v114 = v147;
      goto LABEL_33;
    case 3:
      LOBYTE(v200[0]) = 3;
      sub_14DAF0();
      uint64_t v74 = v184;
      uint64_t v57 = v196;
      uint64_t v75 = v198;
      sub_1FC2F0();
      if (v75) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v76 = v146;
      uint64_t v77 = v170;
      sub_1FC3F0();
      LOBYTE(v200[0]) = 1;
      uint64_t v141 = sub_1FC420();
      *(void *)&v76[*(int *)(sub_12124(&qword_26D998) + 48)] = v141;
      LOBYTE(v200[0]) = 2;
      sub_14DD78();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v152 + 8))(v74, v77);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
      uint64_t v114 = v146;
      goto LABEL_33;
    case 4:
      LOBYTE(v200[0]) = 4;
      sub_14DA9C();
      uint64_t v78 = v183;
      uint64_t v57 = v196;
      uint64_t v79 = v198;
      sub_1FC2F0();
      if (v79) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v80 = v162;
      uint64_t v81 = v169;
      sub_1FC3F0();
      sub_12124(&qword_26D9C8);
      LOBYTE(v200[0]) = 1;
      sub_14DD78();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v154 + 8))(v78, v81);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
      goto LABEL_36;
    case 5:
      LOBYTE(v200[0]) = 5;
      sub_14DA48();
      uint64_t v82 = v186;
      uint64_t v57 = v196;
      uint64_t v83 = v198;
      sub_1FC2F0();
      if (v83) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v84 = v179;
      uint64_t v85 = v172;
      sub_1FC3F0();
      LOBYTE(v200[0]) = 1;
      uint64_t v142 = sub_1FC420();
      *(void *)&v84[*(int *)(sub_12124(&qword_26D998) + 48)] = v142;
      LOBYTE(v200[0]) = 2;
      sub_14DD78();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v178 + 8))(v82, v85);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
      uint64_t v114 = v179;
      goto LABEL_33;
    case 6:
      LOBYTE(v200[0]) = 6;
      sub_14D9F4();
      uint64_t v86 = v185;
      uint64_t v57 = v196;
      uint64_t v87 = v198;
      sub_1FC2F0();
      if (v87) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v80 = v164;
      uint64_t v88 = v171;
      sub_1FC3F0();
      sub_12124(&qword_26D9C8);
      LOBYTE(v200[0]) = 1;
      sub_14DD78();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v156 + 8))(v86, v88);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
      goto LABEL_36;
    case 7:
      LOBYTE(v200[0]) = 7;
      sub_14D9A0();
      uint64_t v89 = v188;
      uint64_t v57 = v196;
      uint64_t v90 = v198;
      sub_1FC2F0();
      if (v90) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v80 = v165;
      uint64_t v91 = v174;
      sub_1FC3F0();
      sub_12124(&qword_26D9C8);
      LOBYTE(v200[0]) = 1;
      sub_14DD78();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v158 + 8))(v89, v91);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
      goto LABEL_36;
    case 8:
      LOBYTE(v200[0]) = 8;
      sub_14D8BC();
      uint64_t v57 = v196;
      uint64_t v92 = v198;
      sub_1FC2F0();
      if (v92) {
        goto LABEL_26;
      }
      sub_12124(&qword_26D088);
      LOBYTE(v200[0]) = 0;
      sub_13CFE8(&qword_270E68, &qword_26D088, (void (*)(void))sub_14DD3C);
      uint64_t v80 = v166;
      uint64_t v93 = v177;
      sub_1FC3F0();
      sub_12124(&qword_26D9C8);
      LOBYTE(v200[0]) = 1;
      sub_14DD78();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v161 + 8))(v51, v93);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
LABEL_36:
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = (uint64_t)v80;
      goto LABEL_37;
    case 9:
      LOBYTE(v200[0]) = 9;
      sub_14D814();
      char v94 = v187;
      uint64_t v57 = v196;
      uint64_t v95 = v198;
      sub_1FC2F0();
      if (v95) {
        goto LABEL_26;
      }
      sub_14DCE8();
      uint64_t v96 = v173;
      sub_1FC3F0();
      uint64_t v97 = v191;
      (*(void (**)(char *, uint64_t))(v157 + 8))(v94, v96);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v97 + 8))(v53, v196);
      char v118 = BYTE8(v200[0]);
      long long v119 = v200[6];
      uint64_t v114 = v149;
      *(void *)uint64_t v149 = *(void *)&v200[0];
      v114[8] = v118;
      long long v120 = v200[2];
      *((_OWORD *)v114 + 1) = v200[1];
      *((_OWORD *)v114 + 2) = v120;
      long long v121 = v200[4];
      *((_OWORD *)v114 + 3) = v200[3];
      *((_OWORD *)v114 + 4) = v121;
      *((_OWORD *)v114 + 5) = v200[5];
      *((_OWORD *)v114 + 6) = v119;
      goto LABEL_33;
    case 0xA:
      LOBYTE(v200[0]) = 10;
      sub_14D7C0();
      char v98 = v189;
      uint64_t v57 = v196;
      uint64_t v99 = v198;
      sub_1FC2F0();
      if (v99) {
        goto LABEL_26;
      }
      sub_14DC94();
      uint64_t v102 = v176;
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v159 + 8))(v98, v102);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v196);
      char v122 = BYTE8(v200[0]);
      uint64_t v123 = *(void *)&v200[1];
      char v124 = BYTE8(v200[1]);
      uint64_t v125 = *(void *)&v200[2];
      char v126 = BYTE8(v200[2]);
      uint64_t v127 = *(void *)&v200[3];
      uint64_t v128 = *((void *)&v200[4] + 1);
      uint64_t v114 = v150;
      *(void *)BOOL v150 = *(void *)&v200[0];
      v114[8] = v122;
      *((void *)v114 + 2) = v123;
      v114[24] = v124;
      *((void *)v114 + 4) = v125;
      v114[40] = v126;
      *((void *)v114 + 6) = v127;
      *(_OWORD *)(v114 + 56) = *(_OWORD *)((char *)&v200[3] + 8);
      *((void *)v114 + 9) = v128;
      goto LABEL_33;
    case 0xB:
      LOBYTE(v200[0]) = 11;
      sub_14D718();
      uint64_t v100 = v196;
      uint64_t v101 = v198;
      sub_1FC2F0();
      if (v101)
      {
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v100);
        uint64_t v106 = (uint64_t)v197;
        return sub_1264C(v106);
      }
      sub_14DC94();
      uint64_t v104 = v175;
      sub_1FC3F0();
      uint64_t v105 = v191;
      (*(void (**)(char *, uint64_t))(v160 + 8))(v50, v104);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v105 + 8))(v53, v196);
      char v129 = BYTE8(v200[0]);
      uint64_t v130 = *(void *)&v200[1];
      char v131 = BYTE8(v200[1]);
      uint64_t v132 = *(void *)&v200[2];
      char v133 = BYTE8(v200[2]);
      uint64_t v134 = *(void *)&v200[3];
      uint64_t v135 = *((void *)&v200[4] + 1);
      uint64_t v136 = (uint64_t)v151;
      *uint64_t v151 = *(void *)&v200[0];
      *(unsigned char *)(v136 + 8) = v129;
      *(void *)(v136 + 16) = v130;
      *(unsigned char *)(v136 + 24) = v131;
      *(void *)(v136 + 32) = v132;
      *(unsigned char *)(v136 + 40) = v133;
      *(void *)(v136 + 48) = v134;
      *(_OWORD *)(v136 + 56) = *(_OWORD *)((char *)&v200[3] + 8);
      *(void *)(v136 + 72) = v135;
      swift_storeEnumTagMultiPayload();
      uint64_t v137 = (uint64_t)v148;
      sub_159238(v136, (uint64_t)v148, type metadata accessor for CollectionRecommendation);
      uint64_t v138 = (uint64_t)v197;
      uint64_t v139 = v180;
      goto LABEL_38;
    default:
      LOBYTE(v200[0]) = 0;
      sub_14DC40();
      uint64_t v56 = v181;
      uint64_t v57 = v196;
      uint64_t v58 = v198;
      sub_1FC2F0();
      if (v58)
      {
LABEL_26:
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v191 + 8))(v53, v57);
        goto LABEL_30;
      }
      sub_14DC94();
      uint64_t v59 = v163;
      sub_1FC3F0();
      uint64_t v60 = v191;
      (*(void (**)(char *, uint64_t))(v153 + 8))(v56, v59);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v60 + 8))(v53, v57);
      char v107 = BYTE8(v200[0]);
      uint64_t v108 = *(void *)&v200[1];
      char v109 = BYTE8(v200[1]);
      uint64_t v110 = *(void *)&v200[2];
      char v111 = BYTE8(v200[2]);
      uint64_t v112 = *(void *)&v200[3];
      uint64_t v113 = *((void *)&v200[4] + 1);
      uint64_t v114 = v144;
      *(void *)uint64_t v144 = *(void *)&v200[0];
      v114[8] = v107;
      *((void *)v114 + 2) = v108;
      v114[24] = v109;
      *((void *)v114 + 4) = v110;
      v114[40] = v111;
      *((void *)v114 + 6) = v112;
      *(_OWORD *)(v114 + 56) = *(_OWORD *)((char *)&v200[3] + 8);
      *((void *)v114 + 9) = v113;
LABEL_33:
      swift_storeEnumTagMultiPayload();
      uint64_t v115 = (uint64_t)v114;
LABEL_37:
      uint64_t v137 = (uint64_t)v148;
      sub_159238(v115, (uint64_t)v148, type metadata accessor for CollectionRecommendation);
      uint64_t v138 = (uint64_t)v197;
      uint64_t v139 = v180;
LABEL_38:
      sub_159238(v137, v139, type metadata accessor for CollectionRecommendation);
      uint64_t result = sub_1264C(v138);
      break;
  }
  return result;
}

uint64_t sub_141C7C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return CollectionRecommendation.init(from:)(a1, a2);
}

void *sub_141C94(void *a1)
{
  return CollectionRecommendation.encode(to:)(a1);
}

uint64_t CollectionRecommendation.count.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_12124(&qword_26D088);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v1, (uint64_t)v8);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      goto LABEL_2;
    case 2u:
      uint64_t v10 = sub_12124(&qword_26D090);
      memcpy(v12, &v8[*(int *)(v10 + 48)], 0x229uLL);
      sub_124B4(v12);
      swift_bridgeObjectRelease();
LABEL_2:
      (*(void (**)(char *, char *, uint64_t))(v3 + 32))(v5, v8, v2);
      uint64_t v9 = sub_1FB380();
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      break;
    case 9u:
      sub_7B918((uint64_t)v8);
      uint64_t v9 = 0;
      break;
    default:
      sub_7B918((uint64_t)v8);
      uint64_t v9 = 1;
      break;
  }
  return v9;
}

uint64_t CollectionRecommendation.debugDescription.getter()
{
  CollectionRecommendation.count.getter();
  char v1 = v0;
  uint64_t v25 = 0;
  unint64_t v26 = 0xE000000000000000;
  CollectionRecommendation.collectionRecommendationType.getter((char *)&v23);
  sub_1FC1D0();
  v27._countAndFlagsBits = 32;
  v27._object = (void *)0xE100000000000000;
  sub_1FB8F0(v27);
  uint64_t v2 = CollectionRecommendation.mediaTypes.getter();
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    char v21 = v1;
    uint64_t v23 = _swiftEmptyArrayStorage;
    uint64_t v22 = v2;
    sub_46588(0, v3, 0);
    uint64_t v4 = v22;
    uint64_t v5 = v23;
    uint64_t result = sub_14D53C(v22);
    int64_t v7 = result;
    int v9 = v8;
    char v11 = v10 & 1;
    while ((v7 & 0x8000000000000000) == 0 && v7 < 1 << *(unsigned char *)(v4 + 32))
    {
      if (((*(void *)(v22 + 56 + (((unint64_t)v7 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(v4 + 36) != v9) {
        goto LABEL_24;
      }
      if (*(unsigned char *)(*(void *)(v4 + 48) + v7)) {
        uint64_t v12 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v12 = 0x6B6F6F6265;
      }
      if (*(unsigned char *)(*(void *)(v4 + 48) + v7)) {
        unint64_t v13 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v13 = 0xE500000000000000;
      }
      uint64_t v23 = v5;
      unint64_t v15 = v5[2];
      unint64_t v14 = v5[3];
      if (v15 >= v14 >> 1)
      {
        sub_46588(v14 > 1, v15 + 1, 1);
        uint64_t v4 = v22;
        uint64_t v5 = v23;
      }
      uint64_t v5[2] = v15 + 1;
      uint64_t v16 = &v5[2 * v15];
      uint64_t v16[4] = v12;
      v16[5] = v13;
      uint64_t result = sub_14D5E0(v7, v9, v11 & 1, v4);
      int64_t v7 = result;
      int v9 = v17;
      char v11 = v18 & 1;
      if (!--v3)
      {
        sub_55F94(result, v17, v18 & 1);
        swift_bridgeObjectRelease();
        char v1 = v21;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
LABEL_18:
    v28._countAndFlagsBits = sub_1FBAD0();
    sub_1FB8F0(v28);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29._countAndFlagsBits = 32;
    v29._object = (void *)0xE100000000000000;
    sub_1FB8F0(v29);
    if (v1)
    {
      v19._countAndFlagsBits = 0;
      uint64_t v20 = (void *)0xE000000000000000;
    }
    else
    {
      uint64_t v23 = (void *)(&stru_20 + 8);
      unint64_t v24 = 0xE100000000000000;
      v30._countAndFlagsBits = sub_1FC580();
      sub_1FB8F0(v30);
      swift_bridgeObjectRelease();
      v31._countAndFlagsBits = 41;
      v31._object = (void *)0xE100000000000000;
      sub_1FB8F0(v31);
      v19._countAndFlagsBits = (uint64_t)v23;
      uint64_t v20 = (void *)v24;
    }
    v19._object = v20;
    sub_1FB8F0(v19);
    swift_bridgeObjectRelease();
    return v25;
  }
  return result;
}

uint64_t sub_1421A4()
{
  return 0x6E656D6D6F636572;
}

uint64_t sub_1421C8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D6D6F636572 && a2 == 0xEF736E6F69746164)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_142284(uint64_t a1)
{
  unint64_t v2 = sub_14DE20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1422C0(uint64_t a1)
{
  unint64_t v2 = sub_14DE20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionRecommendationResponse.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_270E90);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_14DE20();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_270EA0);
  sub_14DE74(&qword_270EA8, &qword_270EB0);
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t CollectionRecommendationResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_270EB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  int v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_14DE20();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_270EA0);
    sub_14DE74(&qword_270EC0, &qword_270EC8);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_142634@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return CollectionRecommendationResponse.init(from:)(a1, a2);
}

uint64_t sub_14264C(void *a1)
{
  return CollectionRecommendationResponse.encode(to:)(a1);
}

uint64_t InternalCollectionRecommendationResponse.bookClusteringRequest.getter@<X0>(uint64_t a1@<X8>)
{
  sub_55844(v1 + 8, (uint64_t)v4, &qword_270ED0);
  sub_55844((uint64_t)v4, a1, &qword_270ED0);
  return sub_14E2F8(v4, sub_14DF50);
}

uint64_t InternalCollectionRecommendationResponse.bookClusteringRequest.setter(uint64_t a1)
{
  sub_55844(a1, (uint64_t)v4, &qword_270ED0);
  uint64_t v2 = v1 + 8;
  sub_55844(v2, (uint64_t)v5, &qword_270ED0);
  sub_14E2F8(v5, sub_14E624);
  return sub_55844((uint64_t)v4, v2, &qword_270ED0);
}

uint64_t InternalCollectionRecommendationResponse.bookClusteringResult.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 1208);
  uint64_t v3 = *(void *)(v1 + 1216);
  *a1 = v2;
  a1[1] = v3;
  return sub_14E9CC(v2);
}

uint64_t InternalCollectionRecommendationResponse.bookClusteringResult.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t result = sub_DA178(*(void *)(v1 + 1208));
  *(void *)(v1 + 1208) = v2;
  *(void *)(v1 + 1216) = v3;
  return result;
}

uint64_t (*InternalCollectionRecommendationResponse.bookClusteringResult.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t sub_1427C4()
{
  unint64_t v1 = 0xD000000000000015;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000014;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6E656D6D6F636572;
  }
}

uint64_t sub_142838@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_158160(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_142860(uint64_t a1)
{
  unint64_t v2 = sub_14EA0C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14289C(uint64_t a1)
{
  unint64_t v2 = sub_14EA0C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t InternalCollectionRecommendationResponse.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_270ED8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v13 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_55844((uint64_t)(v1 + 1), (uint64_t)v17, &qword_270ED0);
  uint64_t v8 = v1[151];
  uint64_t v13 = v1[152];
  uint64_t v14 = v8;
  sub_5D64(a1, a1[3]);
  sub_14EA0C();
  sub_1FC870();
  v16[0] = v7;
  char v18 = 0;
  sub_12124(&qword_270EA0);
  sub_14DE74(&qword_270EA8, &qword_270EB0);
  uint64_t v9 = v15;
  sub_1FC530();
  if (!v9)
  {
    uint64_t v11 = v13;
    uint64_t v10 = v14;
    sub_55844((uint64_t)v17, (uint64_t)v16, &qword_270ED0);
    char v18 = 1;
    sub_14EA60();
    sub_1FC4A0();
    v16[0] = v10;
    v16[1] = v11;
    char v18 = 2;
    sub_14EAB4();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t InternalCollectionRecommendationResponse.init(from:)(uint64_t a1)
{
  unint64_t v2 = (void *)__chkstk_darwin(a1);
  uint64_t v4 = v3;
  uint64_t v18 = sub_12124(&qword_270EF8);
  uint64_t v5 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_14EB08(v27);
  Swift::String v19 = &v26[1];
  sub_55844((uint64_t)v27, (uint64_t)&v26[1], &qword_270ED0);
  *(_OWORD *)&v26[151] = 0u;
  sub_5D64(v2, v2[3]);
  sub_14EA0C();
  sub_1FC850();
  if (v1)
  {
    uint64_t v10 = v19;
    sub_1264C((uint64_t)v2);
    sub_55844((uint64_t)v10, (uint64_t)v21, &qword_270ED0);
    sub_14E2F8(v21, sub_14E624);
    return sub_DA178(v26[151]);
  }
  else
  {
    uint64_t v8 = v5;
    uint64_t v17 = v4;
    sub_12124(&qword_270EA0);
    LOBYTE(v20[0]) = 0;
    sub_14DE74(&qword_270EC0, &qword_270EC8);
    uint64_t v9 = v18;
    sub_1FC3F0();
    uint64_t v11 = v21[0];
    v26[0] = v21[0];
    v27[1223] = 1;
    sub_14EB10();
    swift_bridgeObjectRetain();
    sub_1FC360();
    sub_55844((uint64_t)&v25, (uint64_t)v24, &qword_270ED0);
    sub_55844((uint64_t)v24, (uint64_t)v19, &qword_270ED0);
    v27[1222] = 2;
    sub_14E2F8(v24, sub_14DF50);
    sub_14EB64();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v8 + 8))(v7, v9);
    uint64_t v12 = v22;
    uint64_t v13 = v23;
    uint64_t v14 = v26[151];
    sub_14E9CC(v22);
    sub_DA178(v14);
    v26[151] = v12;
    v26[152] = v13;
    v20[0] = v11;
    sub_55844((uint64_t)v24, (uint64_t)&v20[1], &qword_270ED0);
    v20[151] = v12;
    v20[152] = v13;
    sub_14EBB8((uint64_t)v20);
    sub_DA178(v12);
    sub_14E2F8(v24, sub_14E624);
    swift_bridgeObjectRelease();
    memcpy(v17, v20, 0x4C8uLL);
    sub_1264C((uint64_t)v2);
    memcpy(v21, v26, sizeof(v21));
    return sub_14F050((uint64_t)v21);
  }
}

uint64_t sub_142FA0(uint64_t a1)
{
  return InternalCollectionRecommendationResponse.init(from:)(a1);
}

uint64_t sub_142FB8(void *a1)
{
  return InternalCollectionRecommendationResponse.encode(to:)(a1);
}

uint64_t sub_142FD0(uint64_t a1, uint64_t a2)
{
  *(void *)(v3 + 13304) = v2;
  *(void *)(v3 + 13296) = a1;
  uint64_t v5 = type metadata accessor for CollectionRecommendation(0);
  *(void *)(v3 + 13312) = v5;
  *(void *)(v3 + 13320) = *(void *)(v5 - 8);
  *(void *)(v3 + 13328) = swift_task_alloc();
  *(void *)(v3 + 13336) = swift_task_alloc();
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v3 + 12720) = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v3 + 12736) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v3 + 12752) = v8;
  long long v9 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v3 + 12656) = *(_OWORD *)(a2 + 48);
  long long v10 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v3 + 12672) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v3 + 12688) = v10;
  *(_OWORD *)(v3 + 12704) = v7;
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v3 + 12608) = *(_OWORD *)a2;
  *(_OWORD *)(v3 + 12624) = v11;
  *(void *)(v3 + 13344) = v6;
  *(_DWORD *)(v3 + 12767) = *(_DWORD *)(a2 + 159);
  *(_OWORD *)(v3 + 12640) = v9;
  return _swift_task_switch(sub_143108, 0, 0);
}

uint64_t sub_143108()
{
  uint64_t v1 = *(void **)(v0 + 13304);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 13352) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_143228;
  return v6(v0 + 10416, v2, v3);
}

uint64_t sub_143228()
{
  *(void *)(*(void *)v1 + 13360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_144E14;
  }
  else {
    uint64_t v2 = sub_14333C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_14333C()
{
  uint64_t v43 = v0;
  uint64_t v38 = *(void **)(v0 + 13304);
  memcpy((void *)(v0 + 8176), (const void *)(v0 + 10416), 0x460uLL);
  uint64_t v1 = *(void *)(v0 + 8704);
  uint64_t v2 = *(void *)(v0 + 8712);
  uint64_t v3 = *(void *)(v0 + 8720);
  uint64_t v4 = *(void *)(v0 + 8728);
  char v5 = *(unsigned char *)(v0 + 8736);
  uint64_t v6 = *(void *)(v0 + 8744);
  uint64_t v7 = *(void *)(v0 + 8752);
  uint64_t v8 = *(void *)(v0 + 8760);
  uint64_t v9 = *(void *)(v0 + 8768);
  uint64_t v10 = *(void *)(v0 + 8776);
  uint64_t v11 = *(void *)(v0 + 8784);
  uint64_t v12 = *(void *)(v0 + 8792);
  char v13 = *(unsigned char *)(v0 + 8800);
  *(void *)(v0 + 12944) = *(void *)(v0 + 8696);
  *(void *)(v0 + 12952) = v1;
  *(void *)(v0 + 12960) = v2;
  *(void *)(v0 + 12968) = v3;
  *(void *)(v0 + 12976) = v4;
  *(unsigned char *)(v0 + 12984) = v5;
  *(void *)(v0 + 12992) = v6;
  *(void *)(v0 + 13000) = v7;
  *(void *)(v0 + 13008) = v8;
  *(void *)(v0 + 13016) = v9;
  *(void *)(v0 + 13024) = v10;
  *(void *)(v0 + 13032) = v11;
  *(void *)(v0 + 13040) = v12;
  *(unsigned char *)(v0 + 13048) = v13;
  *(void *)(v0 + 13192) = _swiftEmptySetSingleton;
  *(void *)(v0 + 13224) = _swiftEmptyDictionarySingleton;
  uint64_t v14 = (void *)swift_task_alloc();
  v14[2] = v0 + 12608;
  v14[3] = v0 + 12944;
  v14[4] = v0 + 13192;
  v14[5] = v0 + 13224;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = swift_bridgeObjectRetain();
  sub_1572B0(v15, (void (*)(unsigned char *, uint64_t *))sub_158750);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  long long v16 = *(_OWORD *)(v0 + 12720);
  long long v17 = *(_OWORD *)(v0 + 12752);
  *(_OWORD *)&v41[19] = *(_OWORD *)(v0 + 12736);
  v42[0] = v17;
  *(_DWORD *)((char *)v42 + 15) = *(_DWORD *)(v0 + 12767);
  long long v18 = *(_OWORD *)(v0 + 12656);
  long long v19 = *(_OWORD *)(v0 + 12688);
  *(_OWORD *)&v41[11] = *(_OWORD *)(v0 + 12672);
  *(_OWORD *)&v41[13] = v19;
  *(_OWORD *)&v41[15] = *(_OWORD *)(v0 + 12704);
  *(_OWORD *)&v41[17] = v16;
  long long v20 = *(_OWORD *)(v0 + 12624);
  *(_OWORD *)&v41[3] = *(_OWORD *)(v0 + 12608);
  *(_OWORD *)&v41[5] = v20;
  *(_OWORD *)&v41[7] = *(_OWORD *)(v0 + 12640);
  *(_OWORD *)&v41[9] = v18;
  uint64_t v21 = *(void *)(v0 + 13192);
  swift_bridgeObjectRetain();
  sub_14B498(v21, (uint64_t)v40);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v22 = *(_OWORD *)v41;
  *(_OWORD *)(v0 + 12568) = v40[8];
  *(_OWORD *)(v0 + 12584) = v22;
  *(_DWORD *)(v0 + 12599) = *(_DWORD *)((char *)&v41[1] + 7);
  long long v23 = v40[5];
  *(_OWORD *)(v0 + 12504) = v40[4];
  *(_OWORD *)(v0 + 12520) = v23;
  long long v24 = v40[7];
  *(_OWORD *)(v0 + 12536) = v40[6];
  *(_OWORD *)(v0 + 12552) = v24;
  long long v25 = v40[1];
  *(_OWORD *)(v0 + 12440) = v40[0];
  *(_OWORD *)(v0 + 12456) = v25;
  long long v26 = v40[3];
  *(_OWORD *)(v0 + 12472) = v40[2];
  *(_OWORD *)(v0 + 12488) = v26;
  long long v27 = *(_OWORD *)(v0 + 12536);
  *(_OWORD *)(v0 + 12384) = *(_OWORD *)(v0 + 12552);
  long long v28 = *(_OWORD *)(v0 + 12584);
  *(_OWORD *)(v0 + 12400) = *(_OWORD *)(v0 + 12568);
  *(_OWORD *)(v0 + 12416) = v28;
  long long v29 = *(_OWORD *)(v0 + 12472);
  *(_OWORD *)(v0 + 12320) = *(_OWORD *)(v0 + 12488);
  long long v30 = *(_OWORD *)(v0 + 12520);
  *(_OWORD *)(v0 + 12336) = *(_OWORD *)(v0 + 12504);
  *(_OWORD *)(v0 + 12352) = v30;
  *(_OWORD *)(v0 + 12368) = v27;
  long long v31 = *(_OWORD *)(v0 + 12456);
  *(_OWORD *)(v0 + 12272) = *(_OWORD *)(v0 + 12440);
  *(_OWORD *)(v0 + 12288) = v31;
  *(_DWORD *)(v0 + 12431) = *(_DWORD *)(v0 + 12599);
  *(_OWORD *)(v0 + 12304) = v29;
  AuthorRecommendationSource.id.getter(v0 + 12272);
  uint64_t v32 = *(void *)(v0 + 13224);
  *(void *)(v0 + 13368) = v32;
  sub_55844(v0 + 12272, v0 + 12096, &qword_271348);
  *(void *)(v0 + 12264) = v32;
  *(void *)(v0 + 13208) = _swiftEmptyArrayStorage;
  *(void *)(v0 + 13200) = _swiftEmptySetSingleton;
  uint64_t v33 = *(void *)(v0 + 8600);
  uint64_t v34 = v38[36];
  uint64_t v35 = v38[37];
  sub_5D64(v38 + 33, v34);
  memcpy((void *)(v0 + 9296), (const void *)(v0 + 8176), 0x460uLL);
  uint64_t v39 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v35 + 8) + **(int **)(v35 + 8));
  uint64_t v36 = (void *)swift_task_alloc();
  *(void *)(v0 + 13376) = v36;
  *uint64_t v36 = v0;
  v36[1] = sub_1437BC;
  return v39(v0 + 9296, v33, v34, v35);
}

uint64_t sub_1437BC(uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[1673] = a1;
  v3[1674] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_15875C(v3 + 1512);
    uint64_t v4 = sub_144E98;
  }
  else
  {
    uint64_t v4 = sub_1438E0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1438E0()
{
  uint64_t v32 = v0;
  *(void *)(v0 + 13400) = OBJC_IVAR____TtC20BooksPersonalization39InternalCollectionRecommendationService_logger;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDC0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void *)(v0 + 13392);
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v5 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    uint64_t v28 = v5;
    uint64_t v29 = 0x202020200A5BLL;
    unint64_t v30 = 0xE600000000000000;
    uint64_t v6 = swift_bridgeObjectRetain();
    long long v31 = sub_4ABEC(v6);
    sub_C43F4((uint64_t *)&v31);
    if (v3)
    {
      return swift_release();
    }
    uint64_t v8 = *(void *)(v0 + 13384);
    swift_bridgeObjectRelease();
    uint64_t v9 = (uint64_t)v31;
    swift_bridgeObjectRetain();
    long long v27 = v4;
    uint64_t v10 = sub_156790(v9, v8);
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)(v0 + 13248) = v10;
    sub_12124(&qword_26C6D8);
    sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
    uint64_t v11 = sub_1FB7B0();
    char v13 = v12;
    swift_bridgeObjectRelease();
    v34._countAndFlagsBits = v11;
    v34._object = v13;
    sub_1FB8F0(v34);
    swift_bridgeObjectRelease();
    v35._countAndFlagsBits = 93;
    v35._object = (void *)0xE100000000000000;
    sub_1FB8F0(v35);
    *(void *)(v0 + 13184) = sub_D5890(v29, v30, &v28);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v1, v2, "seedBooksByID=%s", v27, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v14 = sub_13A344((uint64_t)_swiftEmptyDictionarySingleton, *(void *)(v0 + 13384));
  uint64_t v15 = sub_6308(v14);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v16 = sub_14C088(v15);
  *(void *)(v0 + 13408) = v16;
  swift_bridgeObjectRelease();
  swift_retain_n();
  long long v17 = sub_1FB410();
  os_log_type_t v18 = sub_1FBDC0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = swift_slowAlloc();
    uint64_t v29 = swift_slowAlloc();
    *(_DWORD *)uint64_t v19 = 136315650;
    *(void *)(v0 + 13264) = sub_D5890(0x6E656D6D6F636572, 0xEF293A726F662864, &v29);
    sub_1FBED0();
    *(_WORD *)(v19 + 12) = 2048;
    uint64_t v20 = *(void *)(v16 + 16);
    if (v20)
    {
      unint64_t v21 = sub_4C69C(0);
      if (v22) {
        uint64_t v20 = *(void *)(*(void *)(*(void *)(v16 + 56) + 8 * v21) + 16);
      }
      else {
        uint64_t v20 = 0;
      }
    }
    *(void *)(v0 + 13272) = v20;
    sub_1FBED0();
    *(_WORD *)(v19 + 22) = 2048;
    if (*(void *)(v16 + 16) && (unint64_t v23 = sub_4C69C(1), (v24 & 1) != 0)) {
      uint64_t v25 = *(void *)(*(void *)(*(void *)(v16 + 56) + 8 * v23) + 16);
    }
    else {
      uint64_t v25 = 0;
    }
    swift_release();
    *(void *)(v0 + 13280) = v25;
    sub_1FBED0();
    swift_release();
    _os_log_impl(&dword_0, v17, v18, "%s\nseed books=%ld\nseed audiobooks=%ld", (uint8_t *)v19, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_release_n();
  }
  memcpy((void *)(v0 + 5936), (const void *)(v0 + 8176), 0x460uLL);
  sub_55844(v0 + 12736, v0 + 12090, &qword_271350);
  sub_55844(v0 + 12090, v0 + 12089, &qword_271350);
  long long v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 13416) = v26;
  *long long v26 = v0;
  v26[1] = sub_143EC8;
  return sub_16DC50(v16, v0 + 5936, (unsigned char *)(v0 + 12089));
}

uint64_t sub_143EC8(uint64_t a1)
{
  uint64_t v3 = *v2;
  v3[1678] = a1;
  v3[1679] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_15875C(v3 + 1512);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_144F28;
  }
  else
  {
    swift_release();
    uint64_t v4 = sub_144010;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_144010()
{
  *(void *)(v0 + 13128) = 0;
  *(_OWORD *)(v0 + 13096) = 0u;
  *(_OWORD *)(v0 + 13112) = 0u;
  sub_158878((uint64_t *)(v0 + 12096));
  swift_bridgeObjectRelease();
  long long v1 = *(_OWORD *)(v0 + 12584);
  *(_OWORD *)(v0 + 12904) = *(_OWORD *)(v0 + 12568);
  *(_OWORD *)(v0 + 12920) = v1;
  *(_DWORD *)(v0 + 12935) = *(_DWORD *)(v0 + 12599);
  long long v2 = *(_OWORD *)(v0 + 12520);
  *(_OWORD *)(v0 + 12840) = *(_OWORD *)(v0 + 12504);
  *(_OWORD *)(v0 + 12856) = v2;
  long long v3 = *(_OWORD *)(v0 + 12552);
  *(_OWORD *)(v0 + 12872) = *(_OWORD *)(v0 + 12536);
  *(_OWORD *)(v0 + 12888) = v3;
  long long v4 = *(_OWORD *)(v0 + 12456);
  *(_OWORD *)(v0 + 12776) = *(_OWORD *)(v0 + 12440);
  *(_OWORD *)(v0 + 12792) = v4;
  long long v5 = *(_OWORD *)(v0 + 12488);
  *(_OWORD *)(v0 + 12808) = *(_OWORD *)(v0 + 12472);
  *(_OWORD *)(v0 + 12824) = v5;
  memcpy((void *)(v0 + 4816), (const void *)(v0 + 8176), 0x460uLL);
  *(void *)(v0 + 13080) = &type metadata for InternalCollectionRecommendationResponse;
  *(void *)(v0 + 13088) = sub_158994();
  uint64_t v6 = swift_allocObject();
  uint64_t v7 = v6 + 16;
  *(void *)(v0 + 13056) = v6;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 13440) = v8;
  *(void *)uint64_t v8 = v0;
  *(void *)(v8 + 8) = sub_1441F8;
  uint64_t v9 = *(void *)(v0 + 13424);
  *(void *)(v8 + 9560) = *(void *)(v0 + 13304);
  *(void *)(v8 + 9552) = v9;
  *(void *)(v8 + 9544) = v7;
  long long v11 = *(_OWORD *)(v0 + 12792);
  long long v10 = *(_OWORD *)(v0 + 12808);
  *(_OWORD *)(v8 + 9280) = *(_OWORD *)(v0 + 12776);
  *(_OWORD *)(v8 + 9296) = v11;
  *(_OWORD *)(v8 + 9312) = v10;
  long long v12 = *(_OWORD *)(v0 + 12856);
  long long v13 = *(_OWORD *)(v0 + 12872);
  long long v14 = *(_OWORD *)(v0 + 12840);
  *(_OWORD *)(v8 + 9328) = *(_OWORD *)(v0 + 12824);
  *(_OWORD *)(v8 + 9376) = v13;
  *(_OWORD *)(v8 + 9360) = v12;
  *(_OWORD *)(v8 + 9344) = v14;
  long long v16 = *(_OWORD *)(v0 + 12904);
  long long v15 = *(_OWORD *)(v0 + 12920);
  LODWORD(v9) = *(_DWORD *)(v0 + 12935);
  *(_OWORD *)(v8 + 9392) = *(_OWORD *)(v0 + 12888);
  *(_DWORD *)(v8 + 9439) = v9;
  *(_OWORD *)(v8 + 9424) = v15;
  *(_OWORD *)(v8 + 9408) = v16;
  memcpy((void *)(v8 + 3456), (const void *)(v0 + 4816), 0x460uLL);
  return _swift_task_switch(sub_145B30, 0, 0);
}

uint64_t sub_1441F8()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 13448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    long long v3 = sub_144FB8;
  }
  else
  {
    sub_13C6C0(v2 + 12440);
    long long v3 = sub_144318;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_144318()
{
  uint64_t v20 = v0;
  sub_158BBC((uint64_t)(v0 + 1632), (uint64_t)(v0 + 1637));
  uint64_t v1 = v0[1640];
  if (v1)
  {
    uint64_t v2 = v0[1641];
    long long v3 = sub_5D64(v0 + 1637, v0[1640]);
    uint64_t v4 = *(void *)(v1 - 8);
    uint64_t v5 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v4 + 16))(v5, v3, v1);
    uint64_t v6 = (void *)(*(uint64_t (**)(uint64_t))(*(void *)(v2 + 8) + 24))(v1);
    (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v5, v1);
    swift_task_dealloc();
  }
  else
  {
    uint64_t v6 = _swiftEmptyArrayStorage;
  }
  sub_A9BBC((uint64_t)v6);
  uint64_t v7 = v0[1640];
  if (!v7) {
    goto LABEL_7;
  }
  uint64_t v8 = v0[1641];
  uint64_t v9 = sub_5D64(v0 + 1637, v0[1640]);
  uint64_t v10 = *(void *)(v7 - 8);
  uint64_t v11 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v10 + 16))(v11, v9, v7);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v8 + 24))(v19, v7, v8);
  (*(void (**)(uint64_t, uint64_t))(v10 + 8))(v11, v7);
  uint64_t v12 = v19[0];
  if (v19[0])
  {
    uint64_t v13 = v19[1];
    swift_bridgeObjectRetain();
    sub_DA178(v12);
    swift_task_dealloc();
    sub_65040(v13);
LABEL_7:
    sub_13C6C0((uint64_t)(v0 + 1555));
    goto LABEL_9;
  }
  sub_13C6C0((uint64_t)(v0 + 1555));
  swift_task_dealloc();
LABEL_9:
  v0[1682] = 0;
  memcpy(v0 + 882, v0 + 1022, 0x460uLL);
  uint64_t v14 = v0[1650];
  v0[1683] = v14;
  swift_bridgeObjectRetain();
  long long v15 = (void *)swift_task_alloc();
  v0[1684] = v15;
  *long long v15 = v0;
  v15[1] = sub_14466C;
  uint64_t v16 = v0[1678];
  uint64_t v17 = v0[1671];
  v15[146] = v0[1663];
  v15[145] = v14;
  v15[144] = v16;
  v15[143] = v17;
  memcpy(v15 + 2, v0 + 882, 0x460uLL);
  return _swift_task_switch(sub_147050, 0, 0);
}

uint64_t sub_14466C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 13480) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_1452A0;
  }
  else
  {
    *(void *)(v4 + 13488) = a1;
    sub_11D3C(v4 + 8176);
    uint64_t v5 = sub_1447E8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1447E8()
{
  uint64_t v43 = v0;
  uint64_t v1 = v0 + 1637;
  uint64_t v2 = v0 + 1651;
  uint64_t v3 = v0[1682];
  sub_A9BBC(v0[1686]);
  if (v3)
  {
    swift_errorRetain();
    if (!*(void *)(v0[1651] + 16))
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_willThrow();
      swift_errorRelease();
      sub_55F38((uint64_t)(v0 + 1637), &qword_271370);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v39 = (uint64_t (*)(void))v0[1];
      goto LABEL_27;
    }
    swift_errorRelease();
  }
  uint64_t v4 = (uint64_t)(v0 + 2);
  uint64_t v5 = *v2;
  int64_t v6 = *(void *)(*v2 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    __dst = v0 + 1442;
    uint64_t v8 = v0[1665];
    v42[0] = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_46818(0, v6, 0);
    unint64_t v9 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
    uint64_t v10 = v5 + v9;
    uint64_t v11 = *(void *)(v8 + 72);
    while (2)
    {
      uint64_t v12 = v0[1667];
      uint64_t v13 = v0[1666];
      sub_13A950(v10, v12);
      sub_13A950(v12, v13);
      switch(swift_getEnumCaseMultiPayload())
      {
        case 2u:
          uint64_t v14 = v0[1666];
          uint64_t v19 = sub_12124(&qword_26D090);
          memcpy(__dst, (const void *)(v14 + *(int *)(v19 + 48)), 0x229uLL);
          sub_124B4(__dst);
          swift_bridgeObjectRelease();
          goto LABEL_9;
        case 3u:
        case 4u:
        case 5u:
        case 6u:
        case 7u:
          uint64_t v14 = v0[1666];
LABEL_9:
          uint64_t v15 = sub_12124(&qword_26D088);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v15 - 8) + 8))(v14, v15);
          goto LABEL_10;
        case 8u:
          uint64_t v20 = v0[1668];
          uint64_t v21 = v0[1666];
          uint64_t v22 = sub_12124(&qword_26D088);
          (*(void (**)(uint64_t, uint64_t))(*(void *)(v22 - 8) + 8))(v21, v22);
          sub_1473BC(v20);
          goto LABEL_11;
        default:
          sub_7B918(v0[1666]);
LABEL_10:
          sub_13A950(v0[1667], v0[1668]);
LABEL_11:
          sub_7B918(v0[1667]);
          uint64_t v7 = (void *)v42[0];
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_46818(0, *(void *)(v42[0] + 16) + 1, 1);
            uint64_t v7 = (void *)v42[0];
          }
          unint64_t v17 = v7[2];
          unint64_t v16 = v7[3];
          if (v17 >= v16 >> 1)
          {
            sub_46818(v16 > 1, v17 + 1, 1);
            uint64_t v7 = (void *)v42[0];
          }
          uint64_t v18 = v0[1668];
          v7[2] = v17 + 1;
          sub_159238(v18, (uint64_t)v7 + v9 + v17 * v11, type metadata accessor for CollectionRecommendation);
          v10 += v11;
          if (--v6) {
            continue;
          }
          swift_bridgeObjectRelease();
          uint64_t v1 = v0 + 1637;
          uint64_t v4 = (uint64_t)(v0 + 2);
          break;
      }
      break;
    }
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[1651] = v7;
  uint64_t v23 = v0[1640];
  if (v23)
  {
    uint64_t v24 = (uint64_t)(v0 + 302);
    uint64_t v25 = v0[1641];
    long long v26 = sub_5D64(v1, v0[1640]);
    uint64_t v27 = *(void *)(v23 - 8);
    uint64_t v28 = v4;
    uint64_t v29 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v27 + 16))(v29, v26, v23);
    (*(void (**)(uint64_t, uint64_t))(v25 + 16))(v23, v25);
    (*(void (**)(uint64_t, uint64_t))(v27 + 8))(v29, v23);
    sub_55844((uint64_t)(v0 + 452), (uint64_t)(v0 + 302), &qword_270ED0);
    uint64_t v4 = v28;
    swift_task_dealloc();
  }
  else
  {
    uint64_t v24 = (uint64_t)(v0 + 152);
    sub_14EB08(v0 + 152);
  }
  sub_55844(v24, v4, &qword_270ED0);
  uint64_t v30 = v0[1640];
  if (v30)
  {
    uint64_t v31 = v0[1641];
    uint64_t v32 = (uint64_t)(v0 + 1637);
    uint64_t v33 = sub_5D64(v0 + 1637, v0[1640]);
    uint64_t v34 = *(void *)(v30 - 8);
    uint64_t v35 = swift_task_alloc();
    (*(void (**)(uint64_t, void *, uint64_t))(v34 + 16))(v35, v33, v30);
    (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v31 + 24))(v42, v30, v31);
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v34 + 8))(v35, v30);
    uint64_t v36 = v42[0];
    uint64_t v37 = v42[1];
    swift_task_dealloc();
  }
  else
  {
    swift_errorRelease();
    uint64_t v36 = 0;
    uint64_t v37 = 0;
    uint64_t v32 = (uint64_t)(v0 + 1637);
  }
  uint64_t v38 = (void *)v0[1662];
  *uint64_t v38 = v7;
  sub_55844(v4, (uint64_t)(v38 + 1), &qword_270ED0);
  v38[151] = v36;
  v38[152] = v37;
  sub_55F38(v32, &qword_271370);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v39 = (uint64_t (*)(void))v0[1];
LABEL_27:
  return v39();
}

uint64_t sub_144E14()
{
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_144E98()
{
  sub_11D3C(v0 + 8176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_144F28()
{
  sub_11D3C(v0 + 8176);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_144FB8()
{
  uint64_t v13 = v0;
  uint64_t v1 = v0[1681];
  sub_13C6C0((uint64_t)(v0 + 1555));
  sub_158B68((uint64_t)(v0 + 1632));
  swift_errorRetain();
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v2 = sub_1FB410();
  os_log_type_t v3 = sub_1FBDA0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    uint64_t v12 = swift_slowAlloc();
    *(_DWORD *)uint64_t v4 = 136315138;
    swift_getErrorValue();
    uint64_t v5 = sub_1FC780();
    v0[1657] = sub_D5890(v5, v6, &v12);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v2, v3, "Error deriving recommendations %s", v4, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  sub_13C6C0((uint64_t)(v0 + 1555));
  v0[1682] = v1;
  memcpy(v0 + 882, v0 + 1022, 0x460uLL);
  uint64_t v7 = v0[1650];
  v0[1683] = v7;
  swift_bridgeObjectRetain();
  uint64_t v8 = (void *)swift_task_alloc();
  v0[1684] = v8;
  void *v8 = v0;
  v8[1] = sub_14466C;
  uint64_t v9 = v0[1678];
  uint64_t v10 = v0[1671];
  v8[146] = v0[1663];
  v8[145] = v7;
  v8[144] = v9;
  v8[143] = v10;
  memcpy(v8 + 2, v0 + 882, 0x460uLL);
  return _swift_task_switch(sub_147050, 0, 0);
}

uint64_t sub_1452A0()
{
  uint64_t v47 = v0;
  uint64_t v1 = v0 + 1651;
  uint64_t v2 = v0[1682];
  sub_11D3C((uint64_t)(v0 + 1022));
  if (!v2) {
    swift_errorRetain();
  }
  os_log_type_t v3 = v0 + 1637;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v4 = sub_1FB410();
  os_log_type_t v5 = sub_1FBDA0();
  if (os_log_type_enabled(v4, v5))
  {
    unint64_t v6 = (uint8_t *)swift_slowAlloc();
    v46[0] = swift_slowAlloc();
    *(_DWORD *)unint64_t v6 = 136315138;
    swift_getErrorValue();
    uint64_t v7 = sub_1FC780();
    v0[1654] = sub_D5890(v7, v8, v46);
    os_log_type_t v3 = v0 + 1637;
    uint64_t v1 = v0 + 1651;
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v4, v5, "Error fetching standalone recommendations %s", v6, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_errorRetain();
  if (*(void *)(*v1 + 16))
  {
    uint64_t v9 = (uint64_t)(v0 + 2);
    swift_errorRelease();
    uint64_t v10 = *v1;
    int64_t v11 = *(void *)(*v1 + 16);
    uint64_t v12 = _swiftEmptyArrayStorage;
    if (v11)
    {
      __dst = v0 + 1442;
      uint64_t v13 = v0[1665];
      v46[0] = (uint64_t)_swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_46818(0, v11, 0);
      unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
      uint64_t v15 = v10 + v14;
      uint64_t v16 = *(void *)(v13 + 72);
      while (2)
      {
        uint64_t v17 = v0[1667];
        uint64_t v18 = v0[1666];
        sub_13A950(v15, v17);
        sub_13A950(v17, v18);
        switch(swift_getEnumCaseMultiPayload())
        {
          case 2u:
            uint64_t v19 = v0[1666];
            uint64_t v24 = sub_12124(&qword_26D090);
            memcpy(__dst, (const void *)(v19 + *(int *)(v24 + 48)), 0x229uLL);
            sub_124B4(__dst);
            swift_bridgeObjectRelease();
            goto LABEL_12;
          case 3u:
          case 4u:
          case 5u:
          case 6u:
          case 7u:
            uint64_t v19 = v0[1666];
LABEL_12:
            uint64_t v20 = sub_12124(&qword_26D088);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v20 - 8) + 8))(v19, v20);
            goto LABEL_13;
          case 8u:
            uint64_t v25 = v0[1668];
            uint64_t v26 = v0[1666];
            uint64_t v27 = sub_12124(&qword_26D088);
            (*(void (**)(uint64_t, uint64_t))(*(void *)(v27 - 8) + 8))(v26, v27);
            sub_1473BC(v25);
            goto LABEL_14;
          default:
            sub_7B918(v0[1666]);
LABEL_13:
            sub_13A950(v0[1667], v0[1668]);
LABEL_14:
            sub_7B918(v0[1667]);
            uint64_t v12 = (void *)v46[0];
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_46818(0, v12[2] + 1, 1);
              uint64_t v12 = (void *)v46[0];
            }
            unint64_t v22 = v12[2];
            unint64_t v21 = v12[3];
            if (v22 >= v21 >> 1)
            {
              sub_46818(v21 > 1, v22 + 1, 1);
              uint64_t v12 = (void *)v46[0];
            }
            uint64_t v23 = v0[1668];
            v12[2] = v22 + 1;
            sub_159238(v23, (uint64_t)v12 + v14 + v22 * v16, type metadata accessor for CollectionRecommendation);
            v15 += v16;
            if (--v11) {
              continue;
            }
            swift_bridgeObjectRelease();
            os_log_type_t v3 = v0 + 1637;
            uint64_t v9 = (uint64_t)(v0 + 2);
            break;
        }
        break;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v0[1651] = v12;
    uint64_t v28 = v0[1640];
    if (v28)
    {
      uint64_t v29 = (uint64_t)(v0 + 302);
      uint64_t v30 = v0[1641];
      uint64_t v31 = sub_5D64(v3, v0[1640]);
      uint64_t v32 = *(void *)(v28 - 8);
      uint64_t v33 = v9;
      uint64_t v34 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v32 + 16))(v34, v31, v28);
      (*(void (**)(uint64_t, uint64_t))(v30 + 16))(v28, v30);
      (*(void (**)(uint64_t, uint64_t))(v32 + 8))(v34, v28);
      sub_55844((uint64_t)(v0 + 452), (uint64_t)(v0 + 302), &qword_270ED0);
      uint64_t v9 = v33;
      swift_task_dealloc();
    }
    else
    {
      uint64_t v29 = (uint64_t)(v0 + 152);
      sub_14EB08(v0 + 152);
    }
    sub_55844(v29, v9, &qword_270ED0);
    uint64_t v36 = v0[1640];
    if (v36)
    {
      uint64_t v37 = v0[1641];
      uint64_t v38 = (uint64_t)(v0 + 1637);
      uint64_t v39 = sub_5D64(v0 + 1637, v0[1640]);
      uint64_t v40 = *(void *)(v36 - 8);
      uint64_t v41 = swift_task_alloc();
      (*(void (**)(uint64_t, void *, uint64_t))(v40 + 16))(v41, v39, v36);
      (*(void (**)(uint64_t *__return_ptr, uint64_t, uint64_t))(v37 + 24))(v46, v36, v37);
      swift_errorRelease();
      (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v41, v36);
      uint64_t v36 = v46[0];
      uint64_t v42 = v46[1];
      swift_task_dealloc();
    }
    else
    {
      swift_errorRelease();
      uint64_t v42 = 0;
      uint64_t v38 = (uint64_t)(v0 + 1637);
    }
    uint64_t v43 = (void *)v0[1662];
    *uint64_t v43 = v12;
    sub_55844(v9, (uint64_t)(v43 + 1), &qword_270ED0);
    v43[151] = v36;
    v43[152] = v42;
    sub_55F38(v38, &qword_271370);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = (uint64_t (*)(void))v0[1];
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_willThrow();
    swift_errorRelease();
    sub_55F38((uint64_t)v3, &qword_271370);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v35 = (uint64_t (*)(void))v0[1];
  }
  return v35();
}

uint64_t sub_145A64(uint64_t a1, uint64_t a2, void *__src, uint64_t a4)
{
  long long v6 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v5 + 9392) = *(_OWORD *)(a2 + 112);
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v5 + 9408) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v5 + 9424) = v7;
  long long v8 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v5 + 9328) = *(_OWORD *)(a2 + 48);
  long long v9 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v5 + 9344) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v5 + 9360) = v9;
  *(_OWORD *)(v5 + 9376) = v6;
  long long v10 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 9280) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 9296) = v10;
  *(void *)(v5 + 9560) = v4;
  *(void *)(v5 + 9552) = a4;
  *(void *)(v5 + 9544) = a1;
  *(_OWORD *)(v5 + 9312) = v8;
  *(_DWORD *)(v5 + 9439) = *(_DWORD *)(a2 + 159);
  memcpy((void *)(v5 + 3456), __src, 0x460uLL);
  return _swift_task_switch(sub_145B30, 0, 0);
}

uint64_t sub_145B30()
{
  uint64_t v16 = v0;
  memcpy((void *)(v0 + 8912), (const void *)(v0 + 3544), 0x16BuLL);
  sub_55844(v0 + 9432, v0 + 9488, &qword_2713C0);
  sub_55844(v0 + 9488, v0 + 9504, &qword_2713C0);
  if (*(unsigned char *)(v0 + 9512))
  {
    uint64_t v1 = *(void *)(v0 + 9400);
    *(void *)(v0 + 9528) = v1;
    if (*(void *)(v1 + 16)
      && (swift_bridgeObjectRetain(), sub_4C7F4(2u), char v3 = v2, sub_EE0B0(v0 + 9528), (v3 & 1) != 0))
    {
      if (*(void *)(v0 + 3832) <= *(void *)(v0 + 9344)) {
        uint64_t v4 = *(void *)(v0 + 9344);
      }
      else {
        uint64_t v4 = *(void *)(v0 + 3832);
      }
    }
    else
    {
      uint64_t v4 = *(void *)(v0 + 3832);
    }
  }
  else
  {
    uint64_t v4 = *(void *)(v0 + 9504);
  }
  uint64_t v5 = *(void *)(v0 + 9560);
  uint64_t v6 = *(void *)(v0 + 9552);
  long long v7 = (void *)swift_task_alloc();
  v7[2] = v0 + 9280;
  v7[3] = v4;
  v7[4] = v0 + 8912;
  uint64_t v8 = sub_1564A8(v6, (void (*)(char *, uint64_t))sub_15922C, (uint64_t)v7);
  *(void *)(v0 + 9568) = v8;
  swift_task_dealloc();
  if (*(unsigned char *)(v0 + 9441) == 3) {
    unsigned __int8 v9 = *(unsigned char *)(v0 + 3481);
  }
  else {
    unsigned __int8 v9 = *(unsigned char *)(v0 + 9441);
  }
  sub_5D64((void *)(v5 + 224), *(void *)(v5 + 248));
  v15[0] = v9;
  sub_1B7F04(v15, v0 + 9448);
  uint64_t v10 = *(void *)(v0 + 9472);
  uint64_t v11 = *(void *)(v0 + 9480);
  sub_5D64((void *)(v0 + 9448), v10);
  memcpy((void *)(v0 + 4576), (const void *)(v0 + 3456), 0x460uLL);
  unint64_t v14 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8) + **(int **)(v11 + 8));
  uint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v0 + 9576) = v12;
  *uint64_t v12 = v0;
  v12[1] = sub_145E1C;
  return v14(v8, v0 + 4576, v10, v11);
}

uint64_t sub_145E1C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 9584) = a1;
  *(void *)(v3 + 9592) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    uint64_t v4 = sub_146EC4;
  }
  else {
    uint64_t v4 = sub_145F44;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_145F44()
{
  uint64_t v90 = v0;
  uint64_t v1 = v0 + 722;
  uint64_t v2 = v0[1199];
  uint64_t v3 = swift_bridgeObjectRetain();
  uint64_t v4 = sub_135D04(v3);
  uint64_t v74 = v2;
  v0[1200] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = v4[2];
  uint64_t v79 = v0;
  uint64_t v80 = v4;
  uint64_t v77 = v5;
  uint64_t v78 = v0 + 722;
  if (!v5) {
    goto LABEL_28;
  }
  uint64_t v6 = v4;
  long long v7 = v0 + 782;
  uint64_t v8 = (uint64_t)(v0 + 922);
  unsigned __int8 v9 = (char *)(v6 + 4);
  swift_bridgeObjectRetain();
  memcpy(v0 + 782, v9, 0x229uLL);
  uint64_t v10 = (uint64_t)(v0 + 802);
  sub_55844((uint64_t)(v0 + 802), (uint64_t)(v0 + 922), &qword_26C518);
  if (sub_125F0((uint64_t)(v0 + 922)) == 1) {
    goto LABEL_26;
  }
  uint64_t v85 = v0 + 935;
  uint64_t v87 = v0 + 924;
  uint64_t v83 = v0 + 939;
  uint64_t v84 = v0 + 937;
  uint64_t v81 = v0 + 945;
  uint64_t v82 = v0 + 943;
  uint64_t v11 = v0 + 947;
  uint64_t v75 = (char *)(v0 + 787);
  uint64_t v12 = 1;
LABEL_4:
  uint64_t v13 = 18;
  unint64_t v14 = &byte_252908;
  while (2)
  {
    int v15 = *v14++;
    switch(v15)
    {
      case 1:
        if (*((unsigned __int8 *)v1 + 1680) == 255) {
          goto LABEL_6;
        }
        goto LABEL_21;
      case 2:
      case 6:
      case 10:
      case 11:
      case 12:
      case 13:
      case 14:
      case 15:
      case 16:
      case 17:
        goto LABEL_6;
      case 3:
        if ((*v85 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 4:
        if ((*v84 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 5:
        if ((*v83 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 7:
        if ((*v82 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 8:
        if ((*v81 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_6;
      case 9:
        if ((*v11 & 1) == 0) {
          goto LABEL_21;
        }
        goto LABEL_6;
      default:
        if (*v87)
        {
LABEL_6:
          if (!--v13) {
            goto LABEL_24;
          }
          continue;
        }
LABEL_21:
        uint64_t v16 = v79[786];
        char v17 = *v75;
        uint64_t v18 = v79[782];
        sub_12384(v7);
        sub_73A4(v89, v18);
        if ((v17 & 1) == 0) {
          sub_73A4(v89, v16);
        }
        sub_124B4(v7);
        uint64_t v5 = v77;
        uint64_t v1 = v78;
LABEL_24:
        if (v12 != v5)
        {
          memcpy(v7, &v9[560 * v12++], 0x229uLL);
          sub_55844(v10, v8, &qword_26C518);
          if (sub_125F0(v8) == 1)
          {
LABEL_26:
            __break(1u);
            goto LABEL_27;
          }
          goto LABEL_4;
        }
LABEL_27:
        uint64_t v4 = v80;
        swift_bridgeObjectRelease();
        uint64_t v0 = v79;
LABEL_28:
        uint64_t v19 = v0[1175];
        v0[1190] = v19;
        uint64_t v20 = *(void *)(v19 + 16);
        swift_bridgeObjectRetain();
        if (!v20 || (sub_4C7F4(0xAu), (v21 & 1) == 0) && (!*(void *)(v19 + 16) || (sub_4C7F4(0xBu), (v22 & 1) == 0)))
        {
          uint64_t v23 = v78;
          if (v5)
          {
            uint64_t v24 = v4;
            uint64_t v25 = v0 + 712;
            uint64_t v26 = (uint64_t)(v0 + 1066);
            uint64_t v27 = (char *)(v24 + 4);
            swift_bridgeObjectRetain();
            memcpy(v0 + 712, v27, 0x229uLL);
            sub_55844((uint64_t)(v0 + 732), (uint64_t)(v0 + 1066), &qword_26C518);
            if (sub_125F0((uint64_t)(v0 + 1066)) == 1) {
              goto LABEL_58;
            }
            uint64_t v28 = 1;
            while (1)
            {
              uint64_t v29 = 18;
              uint64_t v30 = &byte_252908;
              while (2)
              {
                int v31 = *v30++;
                switch(v31)
                {
                  case 1:
                    if (v23[2832] == 255) {
                      goto LABEL_37;
                    }
                    goto LABEL_52;
                  case 2:
                  case 6:
                  case 10:
                  case 11:
                  case 12:
                  case 13:
                  case 14:
                  case 15:
                  case 16:
                  case 17:
                    goto LABEL_37;
                  case 3:
                    if ((v78[2856] & 1) == 0) {
                      goto LABEL_52;
                    }
                    goto LABEL_37;
                  case 4:
                    if ((v78[2872] & 1) == 0) {
                      goto LABEL_52;
                    }
                    goto LABEL_37;
                  case 5:
                    if ((v78[2888] & 1) == 0) {
                      goto LABEL_52;
                    }
                    goto LABEL_37;
                  case 7:
                    if ((v78[2920] & 1) == 0) {
                      goto LABEL_52;
                    }
                    goto LABEL_37;
                  case 8:
                    if ((v78[2936] & 1) == 0) {
                      goto LABEL_52;
                    }
                    goto LABEL_37;
                  case 9:
                    if ((v78[2952] & 1) == 0) {
                      goto LABEL_52;
                    }
                    goto LABEL_37;
                  default:
                    if (v78[2768])
                    {
LABEL_37:
                      if (!--v29) {
                        goto LABEL_56;
                      }
                      continue;
                    }
LABEL_52:
                    if (*((unsigned char *)v79 + 5760) != 2)
                    {
                      uint64_t v76 = v79[721];
                      char v32 = *v23;
                      uint64_t v33 = v79[719];
                      sub_12384(v25);
                      sub_73A4(v89, v33);
                      if ((v32 & 1) == 0) {
                        sub_73A4(v89, v76);
                      }
                      sub_124B4(v25);
                      uint64_t v5 = v77;
                      uint64_t v23 = v78;
                    }
LABEL_56:
                    if (v28 == v5)
                    {
LABEL_59:
                      uint64_t v4 = v80;
                      swift_bridgeObjectRelease();
                      uint64_t v0 = v79;
                      goto LABEL_60;
                    }
                    memcpy(v25, &v27[560 * v28++], 0x229uLL);
                    sub_55844((uint64_t)(v0 + 732), v26, &qword_26C518);
                    if (sub_125F0(v26) == 1)
                    {
LABEL_58:
                      __break(1u);
                      goto LABEL_59;
                    }
                    break;
                }
                break;
              }
            }
          }
        }
LABEL_60:
        v0[1201] = _swiftEmptySetSingleton;
        if (v5)
        {
          uint64_t v34 = v0 + 852;
          uint64_t v35 = (uint64_t)(v0 + 970);
          uint64_t v88 = (uint64_t)(v0 + 872);
          swift_bridgeObjectRetain();
          memcpy(v0 + 852, v4 + 4, 0x229uLL);
          uint64_t v36 = _swiftEmptyDictionarySingleton;
          uint64_t v37 = v5 - 1;
          uint64_t v38 = v0 + 1018;
          uint64_t v39 = 74;
          uint64_t v40 = &qword_26C518;
          while (1)
          {
            uint64_t v41 = *v34;
            sub_55844(v88, v35, v40);
            if (sub_125F0(v35) == 1)
            {
              uint64_t v42 = sub_56168(v41);
              if (v43)
              {
                unint64_t v44 = v42;
                sub_12384(v34);
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v89[0] = (uint64_t)v36;
                if (!isUniquelyReferenced_nonNull_native)
                {
                  sub_120150();
                  uint64_t v36 = (void *)v89[0];
                }
                sub_14C690(v44, (uint64_t)v36);
                swift_bridgeObjectRelease();
                sub_124B4(v34);
              }
            }
            else
            {
              uint64_t v86 = v37;
              uint64_t v46 = v34;
              uint64_t v47 = v35;
              uint64_t v48 = v40;
              uint64_t v49 = v38;
              uint64_t v50 = v46;
              sub_12384(v46);
              char v51 = swift_isUniquelyReferenced_nonNull_native();
              v89[0] = (uint64_t)v36;
              unint64_t v53 = sub_56168(v41);
              uint64_t v54 = v36[2];
              BOOL v55 = (v52 & 1) == 0;
              uint64_t v56 = v54 + v55;
              if (__OFADD__(v54, v55))
              {
                __break(1u);
LABEL_93:
                __break(1u);
                JUMPOUT(0x146868);
              }
              char v57 = v52;
              if (v36[3] >= v56)
              {
                if ((v51 & 1) == 0)
                {
                  sub_120150();
                  uint64_t v36 = (void *)v89[0];
                }
              }
              else
              {
                sub_1164B4(v56, v51);
                uint64_t v36 = (void *)v89[0];
                uint64_t v58 = sub_56168(v41);
                if ((v57 & 1) != (v59 & 1))
                {
                  return sub_1FC770();
                }
                unint64_t v53 = v58;
              }
              uint64_t v38 = v49;
              uint64_t v60 = (uint64_t)v49;
              uint64_t v40 = v48;
              sub_55844(v88, v60, v48);
              if (v57)
              {
                memcpy((void *)(v36[7] + 384 * v53), v38, 0x179uLL);
                uint64_t v35 = v47;
              }
              else
              {
                v36[(v53 >> 6) + 8] |= 1 << v53;
                *(void *)(v36[6] + 8 * v53) = v41;
                memcpy((void *)(v36[7] + 384 * v53), v38, 0x179uLL);
                uint64_t v61 = v36[2];
                BOOL v62 = __OFADD__(v61, 1);
                uint64_t v63 = v61 + 1;
                if (v62) {
                  goto LABEL_93;
                }
                uint64_t v35 = v47;
                v36[2] = v63;
              }
              swift_bridgeObjectRelease();
              uint64_t v34 = v50;
              sub_124B4(v50);
              uint64_t v4 = v80;
              uint64_t v37 = v86;
            }
            if (!v37)
            {
              swift_bridgeObjectRelease();
              uint64_t v0 = v79;
              goto LABEL_82;
            }
            memcpy(v34, &v4[v39], 0x229uLL);
            v39 += 70;
            --v37;
          }
        }
        uint64_t v36 = _swiftEmptyDictionarySingleton;
LABEL_82:
        uint64_t v64 = v0[1195];
        uint64_t v65 = sub_13A07C(v0[1198]);
        swift_bridgeObjectRelease();
        uint64_t v66 = sub_147CBC(v64 + OBJC_IVAR____TtC20BooksPersonalization39InternalCollectionRecommendationService_logger, v65);
        if (v74)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_EE0B0((uint64_t)(v0 + 1190));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1264C((uint64_t)(v0 + 1181));
          uint64_t v67 = (uint64_t (*)(void))v0[1];
          return v67();
        }
        else
        {
          uint64_t v69 = v66;
          uint64_t v70 = v0[1195];
          swift_bridgeObjectRelease();
          uint64_t v71 = sub_EACC4(v69, (uint64_t)_swiftEmptySetSingleton);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_8CFA4((uint64_t)(v0 + 443));
          uint64_t v72 = sub_156D14(v71, (uint64_t)v36, v0 + 1114);
          v0[1202] = v72;
          sub_8D5A4((uint64_t)(v0 + 443));
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v73 = (void *)swift_task_alloc();
          v0[1203] = v73;
          *uint64_t v73 = v0;
          v73[1] = sub_1468F8;
          v73[21] = v70 + 144;
          v73[22] = v72;
          return _swift_task_switch(sub_147FC0, 0, 0);
        }
    }
  }
}

uint64_t sub_1468F8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 9632) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_146F2C;
  }
  else
  {
    *(void *)(v4 + 9640) = a1;
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_146A28;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_146A28()
{
  uint64_t v1 = v0[1205];
  uint64_t v2 = v0[1201];
  swift_bridgeObjectRetain();
  uint64_t v3 = sub_156F10(v1, v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_50A6C((uint64_t)v3);
  swift_bridgeObjectRelease();
  uint64_t v5 = swift_bridgeObjectRetain();
  v0[1206] = sub_EACC4(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  memcpy(v0 + 152, v0 + 432, 0x460uLL);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[1207] = v6;
  void *v6 = v0;
  v6[1] = sub_146B80;
  uint64_t v7 = v0[231];
  v6[7] = v0[1195];
  v6[8] = v7;
  unsigned char v6[9] = v0[233];
  return _swift_task_switch(sub_148644, 0, 0);
}

uint64_t sub_146B80(uint64_t a1)
{
  *(void *)(*(void *)v1 + 9664) = a1;
  swift_task_dealloc();
  return _swift_task_switch(sub_146C80, 0, 0);
}

uint64_t sub_146C80()
{
  void (*v10)(void *__return_ptr, void *, uint64_t, uint64_t);
  uint64_t v11;
  uint64_t v12;
  uint64_t (*v13)(void);
  uint64_t v15;
  uint64_t v16;
  uint64_t v17;
  uint64_t v18;
  void *v19;
  uint64_t v20;
  uint64_t v21;
  void v22[2];
  void v23[2];
  unsigned char v24[1120];
  uint64_t v25;
  uint64_t v26;
  uint64_t v27;
  uint64_t v28;
  uint64_t v29;
  uint64_t v30;
  uint64_t v31;
  uint64_t v32;
  void *v33;
  uint64_t v34;

  uint64_t v33 = v0;
  uint64_t v1 = v0[1206];
  uint64_t v20 = v0[1208];
  uint64_t v2 = v0[1200];
  uint64_t v18 = v1;
  uint64_t v3 = (void *)v0[1195];
  uint64_t v19 = (void *)v0[1193];
  uint64_t v4 = v0[1168];
  uint64_t v5 = v0[1169];
  uint64_t v6 = v0[1170];
  uint64_t v7 = v0[1171];
  char v21 = v0[1172];
  int v15 = v0[1174];
  uint64_t v16 = v0[1173];
  memcpy(v0 + 292, v0 + 432, 0x460uLL);
  uint64_t v8 = v3[11];
  char v17 = v3[10];
  sub_5D64(v3 + 7, v17);
  v23[0] = v1;
  v23[1] = v2;
  memcpy(v24, v0 + 292, sizeof(v24));
  uint64_t v25 = v4;
  uint64_t v26 = v5;
  uint64_t v27 = v6;
  uint64_t v28 = v7;
  uint64_t v29 = v21;
  uint64_t v30 = v16;
  int v31 = v15;
  char v32 = v20;
  uint64_t v9 = v8;
  uint64_t v10 = *(void (**)(void *__return_ptr, void *, uint64_t, uint64_t))(v8 + 8);
  sub_A1310((uint64_t)(v0 + 432));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v10(v22, v23, v17, v9);
  sub_EE0B0((uint64_t)(v0 + 1190));
  uint64_t v11 = v22[0];
  uint64_t v12 = v22[1];
  v0[2] = v18;
  v0[3] = v2;
  memcpy(v0 + 4, v0 + 292, 0x460uLL);
  v0[144] = v4;
  v0[145] = v5;
  v0[146] = v6;
  v0[147] = v7;
  v0[148] = v21;
  v0[149] = v16;
  v0[150] = v15;
  v0[151] = v20;
  AuthorRecommendationSource.id.getter(v0 + 2);
  void *v19 = v11;
  sub_55844((uint64_t)(v0 + 2), (uint64_t)(v19 + 1), &qword_270ED0);
  v19[151] = v11;
  v19[152] = v12;
  swift_bridgeObjectRetain();
  sub_1264C((uint64_t)(v0 + 1181));
  uint64_t v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_146EC4()
{
  sub_1264C(v0 + 9448);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_146F2C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_EE0B0(v0 + 9520);
  swift_bridgeObjectRelease();
  sub_1264C(v0 + 9448);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_146FD0(uint64_t a1, const void *a2, uint64_t a3, uint64_t a4)
{
  v5[146] = v4;
  v5[145] = a4;
  v5[144] = a3;
  v5[143] = a1;
  memcpy(v5 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_147050, 0, 0);
}

uint64_t sub_147050()
{
  uint64_t v1 = *(void *)(v0 + 1144);
  if (*(void *)(v1 + 16))
  {
    uint64_t v2 = *(void *)(v0 + 1168);
    sub_12124(&qword_271378);
    uint64_t v3 = swift_allocObject();
    *(void *)(v0 + 1176) = v3;
    *(_OWORD *)(v3 + 16) = xmmword_202680;
    *(unsigned char *)(v3 + 32) = 1;
    uint64_t v4 = v2 + 304;
    long long v12 = *(_OWORD *)(v0 + 1152);
    *(void *)(v3 + 40) = sub_C20F4((uint64_t)&off_256C30);
    *(unsigned char *)(v3 + 48) = 2;
    *(void *)(v3 + 56) = sub_C20F4((uint64_t)&off_256C58);
    *(unsigned char *)(v3 + 64) = 4;
    *(void *)(v3 + 72) = sub_C20F4((uint64_t)&off_256C80);
    *(unsigned char *)(v3 + 80) = 5;
    *(void *)(v3 + 88) = sub_C20F4((uint64_t)&off_256CA8);
    uint64_t v5 = v2 + OBJC_IVAR____TtC20BooksPersonalization39InternalCollectionRecommendationService_logger;
    uint64_t v6 = sub_12124(&qword_26F7C0);
    uint64_t v7 = sub_12124(&qword_270EA0);
    uint64_t v8 = swift_task_alloc();
    *(void *)(v0 + 1184) = v8;
    *(void *)(v8 + 16) = v3;
    *(void *)(v8 + 24) = v1;
    *(_OWORD *)(v8 + 32) = v12;
    *(void *)(v8 + 48) = v4;
    *(void *)(v8 + 56) = v0 + 16;
    *(void *)(v8 + 64) = v5;
    uint64_t v9 = (void *)swift_task_alloc();
    *(void *)(v0 + 1192) = v9;
    void *v9 = v0;
    v9[1] = sub_147288;
    return withTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 1136, v6, v7, 0, 0, &unk_271388, v8, v6);
  }
  else
  {
    uint64_t v10 = *(uint64_t (**)(void *))(v0 + 8);
    return v10(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_147288()
{
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  return _swift_task_switch(sub_9FC48, 0, 0);
}

uint64_t sub_1473BC@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_12124(&qword_26D088);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v2, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      sub_1FB370();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      return swift_storeEnumTagMultiPayload();
    case 2u:
      uint64_t v18 = sub_12124(&qword_26D090);
      memcpy(v32, &v10[*(int *)(v18 + 48)], sizeof(v32));
      uint64_t v19 = *(void *)&v10[*(int *)(v18 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      uint64_t v20 = (void *)(a1 + *(int *)(v18 + 48));
      uint64_t v21 = *(int *)(v18 + 64);
      sub_1FB370();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      memcpy(v20, v32, 0x229uLL);
      *(void *)(a1 + v21) = v19;
      return swift_storeEnumTagMultiPayload();
    case 3u:
    case 5u:
      uint64_t v22 = sub_12124(&qword_26D998);
      uint64_t v31 = *(void *)&v10[*(int *)(v22 + 48)];
      char v23 = v10[*(int *)(v22 + 64)];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      uint64_t v24 = *(int *)(v22 + 48);
      uint64_t v25 = *(int *)(v22 + 64);
      sub_1FB370();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(void *)(a1 + v24) = v31;
      *(unsigned char *)(a1 + v25) = v23;
      return swift_storeEnumTagMultiPayload();
    case 4u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v26 = sub_12124(&qword_26D9C8);
      char v27 = v10[*(int *)(v26 + 48)];
      (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
      uint64_t v28 = *(int *)(v26 + 48);
      sub_1FB370();
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      *(unsigned char *)(a1 + v28) = v27;
      return swift_storeEnumTagMultiPayload();
    case 9u:
      sub_7B974(*((void *)v10 + 2), *((void *)v10 + 3), *((void *)v10 + 4), *((void *)v10 + 5), *((void *)v10 + 6), *((void *)v10 + 7), *((void *)v10 + 8));
      return sub_13A950(v2, a1);
    default:
      uint64_t v11 = *(void *)v10;
      char v12 = v10[8];
      uint64_t v13 = *((void *)v10 + 2);
      LODWORD(v31) = v10[24];
      uint64_t v14 = *((void *)v10 + 4);
      uint64_t v15 = *((void *)v10 + 6);
      uint64_t v16 = *((void *)v10 + 9);
      char v17 = v10[40];
      swift_bridgeObjectRetain();
      sub_5480C(v14, v17);
      sub_54820(v14, v17);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      *(void *)a1 = v11;
      *(unsigned char *)(a1 + 8) = v12;
      *(void *)(a1 + 16) = v13;
      *(unsigned char *)(a1 + 24) = v31;
      *(void *)(a1 + 32) = v14;
      *(unsigned char *)(a1 + 40) = v17;
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 48) = v15;
      *(void *)(a1 + 72) = v16;
      return swift_storeEnumTagMultiPayload();
  }
}

uint64_t sub_147B10@<X0>(char *a1@<X0>, uint64_t a2@<X1>, long long *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v25 = a4;
  uint64_t v11 = sub_1FB110();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v24 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v15 = *a1;
  sub_1FB100();
  uint64_t v16 = (uint64_t *)a3 + 17;
  if (*((unsigned char *)a3 + 144)) {
    uint64_t v16 = (uint64_t *)(a5 + 296);
  }
  uint64_t v17 = *v16;
  long long v18 = *a3;
  long long v26 = a3[1];
  long long v27 = v18;
  char v19 = *((unsigned char *)a3 + 32);
  uint64_t v20 = *((void *)a3 + 5);
  char v21 = *((unsigned char *)a3 + 48);
  (*(void (**)(uint64_t, char *, uint64_t))(v12 + 32))(a6, v14, v11);
  uint64_t v22 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(a6 + v22[5]) = a2;
  *(_OWORD *)(a6 + v22[6]) = v27;
  *(_OWORD *)(a6 + v22[7]) = v26;
  *(unsigned char *)(a6 + v22[8]) = v15;
  *(unsigned char *)(a6 + v22[9]) = v19;
  *(void *)(a6 + v22[10]) = v20;
  *(unsigned char *)(a6 + v22[11]) = v21;
  *(void *)(a6 + v22[12]) = _swiftEmptySetSingleton;
  *(void *)(a6 + v22[13]) = v25;
  *(void *)(a6 + v22[14]) = v17;
  sub_EE398((uint64_t)&v27);
  sub_EE398((uint64_t)&v26);
  return swift_bridgeObjectRetain();
}

uint64_t sub_147CBC(uint64_t a1, uint64_t a2)
{
  uint64_t v28 = _swiftEmptySetSingleton;
  long long v27 = _swiftEmptySetSingleton;
  uint64_t v3 = *(void *)(a2 + 16);
  if (!v3)
  {
    if (_swiftEmptySetSingleton[2]) {
      goto LABEL_18;
    }
    goto LABEL_21;
  }
  for (uint64_t i = 0; i != v3; ++i)
  {
    uint64_t v6 = a2 + 32 + 152 * i;
    if (*(unsigned char *)(v6 + 128) != 2 && (*(unsigned char *)(v6 + 144) & 1) == 0)
    {
      uint64_t v7 = *(void *)(v6 + 136);
      uint64_t v8 = v28;
      if (v28[2])
      {
        uint64_t v9 = *(void *)v6;
        uint64_t v10 = *(void *)(v6 + 120);
        uint64_t v11 = sub_1FC7D0();
        uint64_t v12 = -1 << *((unsigned char *)v8 + 32);
        unint64_t v13 = v11 & ~v12;
        if ((*(void *)((char *)v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v13))
        {
          uint64_t v14 = v8[6];
          if (*(void *)(v14 + 8 * v13) == v10)
          {
LABEL_14:
            uint64_t v5 = v9;
            goto LABEL_4;
          }
          uint64_t v15 = ~v12;
          while (1)
          {
            unint64_t v13 = (v13 + 1) & v15;
            if (((*(void *)((char *)v8 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v13) & 1) == 0) {
              break;
            }
            if (*(void *)(v14 + 8 * v13) == v10) {
              goto LABEL_14;
            }
          }
        }
      }
      uint64_t v5 = v7;
LABEL_4:
      sub_73A4(v25, v5);
      continue;
    }
  }
  if (!v27[2]) {
    goto LABEL_21;
  }
LABEL_18:
  uint64_t v16 = sub_1FB410();
  os_log_type_t v17 = sub_1FBDC0();
  if (os_log_type_enabled(v16, v17))
  {
    long long v18 = (uint8_t *)swift_slowAlloc();
    uint64_t v26 = swift_slowAlloc();
    *(_DWORD *)long long v18 = 136315138;
    swift_beginAccess();
    swift_bridgeObjectRetain();
    uint64_t v19 = sub_1FBCC0();
    unint64_t v21 = v20;
    swift_bridgeObjectRelease();
    sub_D5890(v19, v21, &v26);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v16, v17, "Filtering recommendations because earlier selections already used the mapped series ID: %s", v18, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }

LABEL_21:
  uint64_t v22 = swift_bridgeObjectRetain();
  uint64_t v23 = sub_156AFC(v22, (uint64_t *)&v27);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v23;
}

uint64_t sub_147FA0(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 168) = a1;
  *(void *)(v2 + 176) = a2;
  return _swift_task_switch(sub_147FC0, 0, 0);
}

uint64_t sub_147FC0()
{
  uint64_t v1 = v0[22];
  int64_t v2 = *(void *)(v1 + 16);
  v0[23] = v2;
  if (v2)
  {
    sub_46538(0, v2, 0);
    uint64_t v3 = (uint64_t *)(v1 + 32);
    unint64_t v4 = _swiftEmptyArrayStorage[2];
    do
    {
      uint64_t v6 = *v3;
      v3 += 19;
      uint64_t v5 = v6;
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      if (v4 >= v7 >> 1) {
        sub_46538(v7 > 1, v4 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v4 + 1;
      _swiftEmptyArrayStorage[v4++ + 4] = v5;
      --v2;
    }
    while (v2);
  }
  v0[24] = _swiftEmptyArrayStorage;
  uint64_t v8 = (void *)v0[21];
  uint64_t v9 = v8[3];
  uint64_t v10 = v8[4];
  sub_5D64(v8, v9);
  unint64_t v13 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v10 + 16) + **(int **)(v10 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  v0[25] = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_14816C;
  return v13(_swiftEmptyArrayStorage, v9, v10);
}

uint64_t sub_14816C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 208) = a1;
  *(void *)(v3 + 216) = v1;
  swift_task_dealloc();
  if (v1)
  {
    unint64_t v4 = sub_1485B4;
  }
  else
  {
    swift_bridgeObjectRelease();
    unint64_t v4 = sub_148288;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_148288()
{
  uint64_t v43 = v0;
  uint64_t v1 = *(void *)(v0 + 208);
  if (*(void *)(v0 + 184))
  {
    int64_t v2 = (_OWORD *)(v0 + 16);
    uint64_t v3 = *(void *)(v0 + 176) + 32;
    swift_bridgeObjectRetain();
    uint64_t v4 = 0;
    uint64_t v5 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v6 = v3 + 152 * v4;
      long long v7 = *(_OWORD *)(v6 + 16);
      *int64_t v2 = *(_OWORD *)v6;
      *(_OWORD *)(v0 + 32) = v7;
      long long v8 = *(_OWORD *)(v6 + 32);
      long long v9 = *(_OWORD *)(v6 + 48);
      long long v10 = *(_OWORD *)(v6 + 80);
      *(_OWORD *)(v0 + 80) = *(_OWORD *)(v6 + 64);
      *(_OWORD *)(v0 + 96) = v10;
      *(_OWORD *)(v0 + 48) = v8;
      *(_OWORD *)(v0 + 64) = v9;
      long long v11 = *(_OWORD *)(v6 + 96);
      long long v12 = *(_OWORD *)(v6 + 112);
      long long v13 = *(_OWORD *)(v6 + 128);
      *(unsigned char *)(v0 + 160) = *(unsigned char *)(v6 + 144);
      *(_OWORD *)(v0 + 128) = v12;
      *(_OWORD *)(v0 + 144) = v13;
      *(_OWORD *)(v0 + 112) = v11;
      uint64_t v14 = *(void *)v2;
      uint64_t v15 = _swiftEmptySetSingleton[2];
      if (v15)
      {
        uint64_t v16 = sub_1FC7D0();
        uint64_t v17 = -1 << LOBYTE(_swiftEmptySetSingleton[4]);
        unint64_t v18 = v16 & ~v17;
        if ((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
        {
          uint64_t v19 = _swiftEmptySetSingleton[6];
          if (*(void *)(v19 + 8 * v18) == v14) {
            goto LABEL_25;
          }
          uint64_t v20 = ~v17;
          while (1)
          {
            unint64_t v18 = (v18 + 1) & v20;
            if (((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
              break;
            }
            if (*(void *)(v19 + 8 * v18) == v14) {
              goto LABEL_25;
            }
          }
        }
      }
      if (!*(void *)(v1 + 16)) {
        goto LABEL_20;
      }
      uint64_t v21 = sub_56168(v14);
      if ((v22 & 1) == 0) {
        goto LABEL_20;
      }
      if (!v15) {
        goto LABEL_20;
      }
      uint64_t v23 = *(void *)(v1 + 56) + 80 * v21;
      if (*(unsigned char *)(v23 + 32)) {
        goto LABEL_20;
      }
      uint64_t v24 = *(void *)(v23 + 24);
      uint64_t v25 = sub_1FC7D0();
      uint64_t v26 = -1 << LOBYTE(_swiftEmptySetSingleton[4]);
      unint64_t v27 = v25 & ~v26;
      if (((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
        goto LABEL_20;
      }
      uint64_t v28 = _swiftEmptySetSingleton[6];
      if (*(void *)(v28 + 8 * v27) != v24)
      {
        uint64_t v29 = ~v26;
        while (1)
        {
          unint64_t v27 = (v27 + 1) & v29;
          if (((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v27 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v27) & 1) == 0) {
            break;
          }
          if (*(void *)(v28 + 8 * v27) == v24) {
            goto LABEL_25;
          }
        }
LABEL_20:
        sub_54834(v0 + 16);
        sub_54834(v0 + 16);
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v5 = sub_41DE0(0, v5[2] + 1, 1, v5);
        }
        unint64_t v31 = v5[2];
        unint64_t v30 = v5[3];
        if (v31 >= v30 >> 1) {
          uint64_t v5 = sub_41DE0((void *)(v30 > 1), v31 + 1, 1, v5);
        }
        uint64_t v5[2] = v31 + 1;
        char v32 = &v5[19 * v31];
        long long v33 = *(_OWORD *)(v0 + 32);
        *((_OWORD *)v32 + 2) = *v2;
        *((_OWORD *)v32 + 3) = v33;
        long long v34 = *(_OWORD *)(v0 + 48);
        long long v35 = *(_OWORD *)(v0 + 64);
        long long v36 = *(_OWORD *)(v0 + 96);
        *((_OWORD *)v32 + 6) = *(_OWORD *)(v0 + 80);
        *((_OWORD *)v32 + 7) = v36;
        *((_OWORD *)v32 + 4) = v34;
        *((_OWORD *)v32 + 5) = v35;
        long long v37 = *(_OWORD *)(v0 + 112);
        long long v38 = *(_OWORD *)(v0 + 128);
        long long v39 = *(_OWORD *)(v0 + 144);
        *((unsigned char *)v32 + 176) = *(unsigned char *)(v0 + 160);
        *((_OWORD *)v32 + 9) = v38;
        *((_OWORD *)v32 + 10) = v39;
        *((_OWORD *)v32 + 8) = v37;
        sub_73A4(&v42, v14);
        sub_7A018(v0 + 16);
      }
LABEL_25:
      if (++v4 == *(void *)(v0 + 184))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_28;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v5 = _swiftEmptyArrayStorage;
LABEL_28:
  swift_bridgeObjectRelease();
  uint64_t v40 = *(uint64_t (**)(void *))(v0 + 8);
  return v40(v5);
}

uint64_t sub_1485B4()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_148618(uint64_t a1)
{
  uint64_t v3 = *(void *)(a1 + 632);
  v2[7] = v1;
  v2[8] = v3;
  v2[9] = *(void *)(a1 + 648);
  return _swift_task_switch(sub_148644, 0, 0);
}

uint64_t sub_148644()
{
  uint64_t v1 = (void *)v0[7];
  uint64_t v10 = v0[8];
  swift_bridgeObjectRetain();
  uint64_t v2 = swift_bridgeObjectRetain();
  sub_A98F4(v2);
  uint64_t v3 = sub_50A6C(v10);
  v0[10] = v3;
  swift_bridgeObjectRelease();
  uint64_t v4 = v1 + 23;
  uint64_t v5 = v1[26];
  uint64_t v6 = v1[27];
  sub_5D64(v4, v5);
  long long v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  long long v7 = (void *)swift_task_alloc();
  v0[11] = v7;
  *long long v7 = v0;
  v7[1] = sub_14878C;
  return v9(v3, v5, v6);
}

uint64_t sub_14878C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 96) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    uint64_t v5 = sub_148DF4;
  }
  else
  {
    *(void *)(v4 + 104) = a1;
    uint64_t v5 = sub_1488D8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1488D8()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = -1;
  uint64_t v3 = -1 << *(unsigned char *)(v1 + 32);
  if (-v3 < 64) {
    uint64_t v2 = ~(-1 << -(char)v3);
  }
  unint64_t v4 = v2 & *(void *)(v1 + 64);
  int64_t v48 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v6 = 0;
  while (1)
  {
    if (v4)
    {
      unint64_t v7 = __clz(__rbit64(v4));
      v4 &= v4 - 1;
      unint64_t v8 = v7 | (v6 << 6);
      goto LABEL_27;
    }
    int64_t v9 = v6 + 1;
    if (__OFADD__(v6, 1)) {
      goto LABEL_71;
    }
    if (v9 >= v48) {
      break;
    }
    unint64_t v10 = *(void *)(v47 + 8 * v9);
    ++v6;
    if (!v10)
    {
      int64_t v6 = v9 + 1;
      if (v9 + 1 >= v48) {
        break;
      }
      unint64_t v10 = *(void *)(v47 + 8 * v6);
      if (!v10)
      {
        int64_t v6 = v9 + 2;
        if (v9 + 2 >= v48) {
          break;
        }
        unint64_t v10 = *(void *)(v47 + 8 * v6);
        if (!v10)
        {
          int64_t v6 = v9 + 3;
          if (v9 + 3 >= v48) {
            break;
          }
          unint64_t v10 = *(void *)(v47 + 8 * v6);
          if (!v10)
          {
            int64_t v6 = v9 + 4;
            if (v9 + 4 >= v48) {
              break;
            }
            unint64_t v10 = *(void *)(v47 + 8 * v6);
            if (!v10)
            {
              int64_t v11 = v9 + 5;
              if (v11 >= v48) {
                break;
              }
              unint64_t v10 = *(void *)(v47 + 8 * v11);
              if (!v10)
              {
                while (1)
                {
                  int64_t v6 = v11 + 1;
                  if (__OFADD__(v11, 1)) {
                    goto LABEL_75;
                  }
                  if (v6 >= v48) {
                    goto LABEL_65;
                  }
                  unint64_t v10 = *(void *)(v47 + 8 * v6);
                  ++v11;
                  if (v10) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v6 = v11;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v4 = (v10 - 1) & v10;
    unint64_t v8 = __clz(__rbit64(v10)) + (v6 << 6);
LABEL_27:
    long long v12 = (uint64_t *)(*(void *)(v1 + 56) + 16 * v8);
    uint64_t v14 = *v12;
    long long v13 = (void *)v12[1];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v17 = sub_56168(v14);
    uint64_t v18 = _swiftEmptyDictionarySingleton[2];
    BOOL v19 = (v16 & 1) == 0;
    uint64_t result = v18 + v19;
    if (__OFADD__(v18, v19))
    {
      __break(1u);
LABEL_69:
      __break(1u);
LABEL_70:
      __break(1u);
LABEL_71:
      __break(1u);
LABEL_72:
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
      return result;
    }
    char v20 = v16;
    if (_swiftEmptyDictionarySingleton[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v16) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_123628();
        if (v20) {
          goto LABEL_34;
        }
      }
    }
    else
    {
      sub_11D12C(result, isUniquelyReferenced_nonNull_native);
      uint64_t result = sub_56168(v14);
      if ((v20 & 1) != (v21 & 1)) {
        goto LABEL_62;
      }
      unint64_t v17 = result;
      if (v20)
      {
LABEL_34:
        *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v17) = 0;
        goto LABEL_38;
      }
    }
    _swiftEmptyDictionarySingleton[(v17 >> 6) + 8] |= 1 << v17;
    *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v17) = v14;
    *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v17) = 0;
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_70;
    }
    _swiftEmptyDictionarySingleton[2] = v24;
LABEL_38:
    swift_bridgeObjectRelease();
    if (!v13[2]) {
      goto LABEL_6;
    }
    uint64_t v25 = v13[4];
    char v26 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v28 = sub_56168(v25);
    uint64_t v29 = _swiftEmptyDictionarySingleton[2];
    BOOL v30 = (v27 & 1) == 0;
    uint64_t result = v29 + v30;
    if (__OFADD__(v29, v30)) {
      goto LABEL_69;
    }
    char v31 = v27;
    if (_swiftEmptyDictionarySingleton[3] >= result)
    {
      if (v26)
      {
        if (v27) {
          goto LABEL_46;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_123628();
        if (v31) {
          goto LABEL_46;
        }
      }
    }
    else
    {
      sub_11D12C(result, v26);
      uint64_t result = sub_56168(v25);
      if ((v31 & 1) != (v32 & 1)) {
        goto LABEL_62;
      }
      unint64_t v28 = result;
      if (v31)
      {
LABEL_46:
        *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v28) = 1;
        goto LABEL_50;
      }
    }
    _swiftEmptyDictionarySingleton[(v28 >> 6) + 8] |= 1 << v28;
    *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v28) = v25;
    *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v28) = 1;
    uint64_t v33 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = __OFADD__(v33, 1);
    uint64_t v34 = v33 + 1;
    if (v23) {
      goto LABEL_72;
    }
    _swiftEmptyDictionarySingleton[2] = v34;
LABEL_50:
    swift_bridgeObjectRelease();
    if (v13[2] > 1uLL)
    {
      uint64_t v35 = v13[5];
      char v36 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v38 = sub_56168(v35);
      uint64_t v39 = _swiftEmptyDictionarySingleton[2];
      BOOL v40 = (v37 & 1) == 0;
      uint64_t result = v39 + v40;
      if (__OFADD__(v39, v40)) {
        goto LABEL_73;
      }
      char v41 = v37;
      if (_swiftEmptyDictionarySingleton[3] < result)
      {
        sub_11D12C(result, v36);
        uint64_t result = sub_56168(v35);
        if ((v41 & 1) != (v42 & 1))
        {
LABEL_62:
          return sub_1FC770();
        }
        unint64_t v38 = result;
        if ((v41 & 1) == 0) {
          goto LABEL_58;
        }
LABEL_4:
        *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v38) = 2;
LABEL_5:
        swift_bridgeObjectRelease();
        goto LABEL_6;
      }
      if (v36)
      {
        if (v37) {
          goto LABEL_4;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_123628();
        if (v41) {
          goto LABEL_4;
        }
      }
LABEL_58:
      _swiftEmptyDictionarySingleton[(v38 >> 6) + 8] |= 1 << v38;
      *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v38) = v35;
      *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v38) = 2;
      uint64_t v43 = _swiftEmptyDictionarySingleton[2];
      BOOL v23 = __OFADD__(v43, 1);
      uint64_t v44 = v43 + 1;
      if (v23) {
        goto LABEL_74;
      }
      _swiftEmptyDictionarySingleton[2] = v44;
      goto LABEL_5;
    }
LABEL_6:
    uint64_t result = swift_bridgeObjectRelease();
  }
LABEL_65:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v45 = *(uint64_t (**)(void *))(v46 + 8);
  return v45(_swiftEmptyDictionarySingleton);
}

uint64_t sub_148DF4()
{
  uint64_t v54 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDA0();
  uint64_t v51 = v0;
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v4 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    unint64_t v53 = (void *)v4;
    swift_getErrorValue();
    uint64_t v5 = sub_1FC780();
    *(void *)(v0 + 48) = sub_D5890(v5, v6, (uint64_t *)&v53);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Error fetching genres: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  uint64_t v7 = -1;
  uint64_t v8 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & _swiftEmptyDictionarySingleton[8];
  int64_t v52 = (unint64_t)(63 - v8) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v11 = 0;
  long long v12 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v11 << 6);
      goto LABEL_27;
    }
    BOOL v15 = __OFADD__(v11++, 1);
    if (v15) {
      goto LABEL_75;
    }
    if (v11 >= v52) {
      break;
    }
    unint64_t v16 = _swiftEmptyDictionarySingleton[v11 + 8];
    if (!v16)
    {
      int64_t v17 = v11 + 1;
      if (v11 + 1 >= v52) {
        break;
      }
      unint64_t v16 = _swiftEmptyDictionarySingleton[v17 + 8];
      if (!v16)
      {
        int64_t v17 = v11 + 2;
        if (v11 + 2 >= v52) {
          break;
        }
        unint64_t v16 = _swiftEmptyDictionarySingleton[v17 + 8];
        if (!v16)
        {
          int64_t v17 = v11 + 3;
          if (v11 + 3 >= v52) {
            break;
          }
          unint64_t v16 = _swiftEmptyDictionarySingleton[v17 + 8];
          if (!v16)
          {
            int64_t v17 = v11 + 4;
            if (v11 + 4 >= v52) {
              break;
            }
            unint64_t v16 = _swiftEmptyDictionarySingleton[v17 + 8];
            if (!v16)
            {
              int64_t v17 = v11 + 5;
              if (v11 + 5 >= v52) {
                break;
              }
              unint64_t v16 = _swiftEmptyDictionarySingleton[v17 + 8];
              if (!v16)
              {
                while (1)
                {
                  int64_t v11 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_79;
                  }
                  if (v11 >= v52) {
                    goto LABEL_69;
                  }
                  unint64_t v16 = _swiftEmptyDictionarySingleton[v11 + 8];
                  ++v17;
                  if (v16) {
                    goto LABEL_26;
                  }
                }
              }
            }
          }
        }
      }
      int64_t v11 = v17;
    }
LABEL_26:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
LABEL_27:
    uint64_t v18 = (uint64_t *)(_swiftEmptyDictionarySingleton[7] + 16 * v14);
    uint64_t v20 = *v18;
    BOOL v19 = (void *)v18[1];
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v53 = v12;
    unint64_t v23 = sub_56168(v20);
    uint64_t v24 = v12[2];
    BOOL v25 = (v22 & 1) == 0;
    uint64_t result = v24 + v25;
    if (__OFADD__(v24, v25))
    {
      __break(1u);
LABEL_73:
      __break(1u);
LABEL_74:
      __break(1u);
LABEL_75:
      __break(1u);
LABEL_76:
      __break(1u);
LABEL_77:
      __break(1u);
LABEL_78:
      __break(1u);
LABEL_79:
      __break(1u);
      return result;
    }
    char v26 = v22;
    if (v12[3] >= result)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v22) {
          goto LABEL_35;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_123628();
        long long v12 = v53;
        if (v26) {
          goto LABEL_35;
        }
      }
    }
    else
    {
      sub_11D12C(result, isUniquelyReferenced_nonNull_native);
      long long v12 = v53;
      uint64_t result = sub_56168(v20);
      if ((v26 & 1) != (v27 & 1)) {
        goto LABEL_66;
      }
      unint64_t v23 = result;
      if (v26)
      {
LABEL_35:
        *(unsigned char *)(v12[7] + v23) = 0;
        goto LABEL_36;
      }
    }
    v12[(v23 >> 6) + 8] |= 1 << v23;
    *(void *)(v12[6] + 8 * v23) = v20;
    *(unsigned char *)(v12[7] + v23) = 0;
    uint64_t v28 = v12[2];
    BOOL v15 = __OFADD__(v28, 1);
    uint64_t v29 = v28 + 1;
    if (v15) {
      goto LABEL_74;
    }
    v12[2] = v29;
LABEL_36:
    swift_bridgeObjectRelease();
    if (!v19[2]) {
      goto LABEL_9;
    }
    uint64_t v30 = v19[4];
    char v31 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v53 = v12;
    unint64_t v33 = sub_56168(v30);
    uint64_t v34 = v12[2];
    BOOL v35 = (v32 & 1) == 0;
    uint64_t result = v34 + v35;
    if (__OFADD__(v34, v35)) {
      goto LABEL_73;
    }
    char v36 = v32;
    if (v12[3] >= result)
    {
      if (v31)
      {
        if (v32) {
          goto LABEL_45;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_123628();
        long long v12 = v53;
        if (v36) {
          goto LABEL_45;
        }
      }
    }
    else
    {
      sub_11D12C(result, v31);
      long long v12 = v53;
      uint64_t result = sub_56168(v30);
      if ((v36 & 1) != (v37 & 1)) {
        goto LABEL_66;
      }
      unint64_t v33 = result;
      if (v36)
      {
LABEL_45:
        *(unsigned char *)(v12[7] + v33) = 1;
        goto LABEL_46;
      }
    }
    v12[(v33 >> 6) + 8] |= 1 << v33;
    *(void *)(v12[6] + 8 * v33) = v30;
    *(unsigned char *)(v12[7] + v33) = 1;
    uint64_t v38 = v12[2];
    BOOL v15 = __OFADD__(v38, 1);
    uint64_t v39 = v38 + 1;
    if (v15) {
      goto LABEL_76;
    }
    v12[2] = v39;
LABEL_46:
    swift_bridgeObjectRelease();
    if (v19[2] > 1uLL)
    {
      uint64_t v40 = v19[5];
      char v41 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v53 = v12;
      unint64_t v43 = sub_56168(v40);
      uint64_t v44 = v12[2];
      BOOL v45 = (v42 & 1) == 0;
      uint64_t result = v44 + v45;
      if (__OFADD__(v44, v45)) {
        goto LABEL_77;
      }
      char v46 = v42;
      if (v12[3] < result)
      {
        sub_11D12C(result, v41);
        long long v12 = v53;
        uint64_t result = sub_56168(v40);
        if ((v46 & 1) != (v47 & 1))
        {
LABEL_66:
          return sub_1FC770();
        }
        unint64_t v43 = result;
        if ((v46 & 1) == 0) {
          goto LABEL_54;
        }
LABEL_7:
        *(unsigned char *)(v12[7] + v43) = 2;
LABEL_8:
        swift_bridgeObjectRelease();
        goto LABEL_9;
      }
      if (v41)
      {
        if (v42) {
          goto LABEL_7;
        }
      }
      else
      {
        uint64_t result = (uint64_t)sub_123628();
        long long v12 = v53;
        if (v46) {
          goto LABEL_7;
        }
      }
LABEL_54:
      v12[(v43 >> 6) + 8] |= 1 << v43;
      *(void *)(v12[6] + 8 * v43) = v40;
      *(unsigned char *)(v12[7] + v43) = 2;
      uint64_t v48 = v12[2];
      BOOL v15 = __OFADD__(v48, 1);
      uint64_t v49 = v48 + 1;
      if (v15) {
        goto LABEL_78;
      }
      v12[2] = v49;
      goto LABEL_8;
    }
LABEL_9:
    uint64_t result = swift_bridgeObjectRelease();
  }
LABEL_69:
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v50 = *(uint64_t (**)(void *))(v51 + 8);
  return v50(v12);
}

uint64_t sub_149484(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[30] = a8;
  v8[31] = v16;
  v8[28] = a6;
  v8[29] = a7;
  v8[26] = a4;
  v8[27] = a5;
  v8[24] = a2;
  v8[25] = a3;
  v8[23] = a1;
  uint64_t v9 = sub_12124(&qword_26F7C0);
  v8[32] = v9;
  v8[33] = *(void *)(v9 - 8);
  v8[34] = swift_task_alloc();
  uint64_t v10 = type metadata accessor for CollectionRecommendation(0);
  v8[35] = v10;
  v8[36] = *(void *)(v10 - 8);
  v8[37] = swift_task_alloc();
  v8[38] = swift_task_alloc();
  uint64_t v11 = sub_1FB430();
  v8[39] = v11;
  uint64_t v12 = *(void *)(v11 - 8);
  v8[40] = v12;
  v8[41] = *(void *)(v12 + 64);
  v8[42] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v8[43] = swift_task_alloc();
  v8[44] = swift_task_alloc();
  sub_12124(&qword_271390);
  v8[45] = swift_task_alloc();
  uint64_t v13 = sub_12124(&qword_271398);
  v8[46] = v13;
  v8[47] = *(void *)(v13 - 8);
  v8[48] = swift_task_alloc();
  return _swift_task_switch(sub_149700, 0, 0);
}

uint64_t sub_149700()
{
  uint64_t v1 = v0[25];
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v69 = (long long *)(v0 + 11);
    uint64_t v70 = (uint64_t)(v0 + 2);
    uint64_t v64 = v0 + 16;
    uint64_t v3 = v0[28];
    uint64_t v4 = v0[26];
    uint64_t v5 = v1 + 32;
    uint64_t v66 = v0 + 9;
    uint64_t v67 = v0 + 6;
    uint64_t v68 = v0[40];
    swift_bridgeObjectRetain();
    uint64_t v6 = 0;
    int64x2_t v7 = vdupq_n_s64(5uLL);
    uint64_t v65 = (void *)v3;
    v7.i64[0] = v3;
    long long v63 = (__int128)v7;
    uint64_t v82 = v0;
    uint64_t v77 = v4;
    uint64_t v78 = v2;
    uint64_t v76 = v5;
    do
    {
      if (*(void *)(v4 + 16))
      {
        uint64_t v8 = (unsigned __int8 *)(v5 + 16 * v6);
        uint64_t v9 = *v8;
        uint64_t v10 = *((void *)v8 + 1);
        swift_bridgeObjectRetain();
        uint64_t v83 = v9;
        unint64_t v11 = sub_4CEFC(v9);
        if ((v12 & 1) == 0) {
          goto LABEL_3;
        }
        uint64_t v81 = v6;
        uint64_t v13 = *(void *)(*(void *)(v4 + 56) + 24 * v11 + 16);
        uint64_t v85 = v10 + 56;
        uint64_t v14 = -1 << *(unsigned char *)(v10 + 32);
        if (-v14 < 64) {
          uint64_t v15 = ~(-1 << -(char)v14);
        }
        else {
          uint64_t v15 = -1;
        }
        unint64_t v16 = v15 & *(void *)(v10 + 56);
        int64_t v86 = (unint64_t)(63 - v14) >> 6;
        uint64_t v87 = v13 + 56;
        swift_bridgeObjectRetain();
        int64_t v17 = 0;
        uint64_t v84 = v10;
        while (2)
        {
          while (2)
          {
            if (v16)
            {
              unint64_t v18 = __clz(__rbit64(v16));
              v16 &= v16 - 1;
              unint64_t v19 = v18 | (v17 << 6);
              if (!*(void *)(v13 + 16)) {
                continue;
              }
              goto LABEL_26;
            }
            break;
          }
          if (__OFADD__(v17++, 1))
          {
            __break(1u);
            goto LABEL_82;
          }
          if (v17 >= v86) {
            break;
          }
          unint64_t v21 = *(void *)(v85 + 8 * v17);
          if (v21) {
            goto LABEL_25;
          }
          int64_t v22 = v17 + 1;
          if (v17 + 1 >= v86) {
            break;
          }
          unint64_t v21 = *(void *)(v85 + 8 * v22);
          if (v21) {
            goto LABEL_24;
          }
          int64_t v22 = v17 + 2;
          if (v17 + 2 >= v86) {
            break;
          }
          unint64_t v21 = *(void *)(v85 + 8 * v22);
          if (v21) {
            goto LABEL_24;
          }
          int64_t v22 = v17 + 3;
          if (v17 + 3 < v86)
          {
            unint64_t v21 = *(void *)(v85 + 8 * v22);
            if (!v21)
            {
              while (1)
              {
                int64_t v17 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  break;
                }
                if (v17 >= v86) {
                  goto LABEL_76;
                }
                unint64_t v21 = *(void *)(v85 + 8 * v17);
                ++v22;
                if (v21) {
                  goto LABEL_25;
                }
              }
LABEL_82:
              __break(1u);
              JUMPOUT(0x14A0A4);
            }
LABEL_24:
            int64_t v17 = v22;
LABEL_25:
            unint64_t v16 = (v21 - 1) & v21;
            unint64_t v19 = __clz(__rbit64(v21)) + (v17 << 6);
            if (!*(void *)(v13 + 16)) {
              continue;
            }
LABEL_26:
            int v23 = *(unsigned __int8 *)(*(void *)(v10 + 48) + v19);
            sub_1FC7E0();
            swift_bridgeObjectRetain();
            sub_1FB8C0();
            swift_bridgeObjectRelease();
            Swift::Int v24 = sub_1FC830();
            uint64_t v25 = -1 << *(unsigned char *)(v13 + 32);
            unint64_t v26 = v24 & ~v25;
            if (((*(void *)(v87 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0)
            {
LABEL_11:
              swift_bridgeObjectRelease();
              uint64_t v10 = v84;
              continue;
            }
            uint64_t v27 = ~v25;
LABEL_28:
            if (*(unsigned char *)(*(void *)(v13 + 48) + v26))
            {
              if (*(unsigned char *)(*(void *)(v13 + 48) + v26) == 1)
              {
                uint64_t v28 = 0x6F6F626F69647561;
                unint64_t v29 = 0xE90000000000006BLL;
                if (v23) {
                  goto LABEL_31;
                }
LABEL_42:
                unint64_t v31 = 0xE500000000000000;
                if (v28 == 0x6B6F6F6265)
                {
LABEL_43:
                  if (v29 == v31)
                  {
                    swift_bridgeObjectRelease();
                    swift_bridgeObjectRelease();
LABEL_48:
                    swift_bridgeObjectRelease();
                    uint64_t v10 = v84;
                    if (v23 != 2)
                    {
                      uint64_t v33 = v82[27];
                      Swift::Int v34 = sub_1F0370();
                      swift_bridgeObjectRetain();
                      unint64_t v35 = sub_1570A4(v34, v33);
                      swift_bridgeObjectRelease();
                      swift_bridgeObjectRelease();
                      uint64_t v36 = *(void *)(v35 + 16);
                      if (v36)
                      {
                        swift_bridgeObjectRetain();
                        for (uint64_t i = 0; i != v36; ++i)
                        {
                          uint64_t v38 = (void *)swift_bridgeObjectRetain();
                          sub_65348(v38);
                        }
                        swift_bridgeObjectRelease_n();
                        uint64_t v39 = _swiftEmptySetSingleton;
                      }
                      else
                      {
                        swift_bridgeObjectRelease();
                        uint64_t v39 = _swiftEmptySetSingleton;
                      }
                      switch(v83)
                      {
                        case 1:
                          BOOL v79 = v23 != 0;
                          uint64_t v40 = v82;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          unint64_t v41 = 0x2000000000000000;
                          goto LABEL_64;
                        case 2:
                          BOOL v79 = v23 != 0;
                          uint64_t v40 = v82;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          unint64_t v41 = 0x4000000000000000;
                          goto LABEL_64;
                        case 3:
                          BOOL v79 = v23 != 0;
                          uint64_t v40 = v82;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          unint64_t v41 = 0x6000000000000000;
LABEL_64:
                          uint64_t v39 = v65;
                          long long v42 = xmmword_20AF20;
                          goto LABEL_67;
                        case 4:
                          uint64_t v40 = v82;
                          swift_bridgeObjectRetain();
                          swift_bridgeObjectRelease();
                          long long v42 = 0uLL;
                          unint64_t v41 = 0x8000000000000000;
                          BOOL v79 = (BOOL)v65;
                          uint64_t v39 = (void *)(&dword_4 + 1);
                          goto LABEL_67;
                        case 5:
                          BOOL v79 = v23 != 0;
                          uint64_t v40 = v82;
                          swift_bridgeObjectRetain();
                          unint64_t v41 = 0xA000000000000000;
                          long long v42 = v63;
LABEL_67:
                          uint64_t v43 = v40[44];
                          uint64_t v44 = v40[42];
                          uint64_t v71 = v44;
                          uint64_t v45 = v40[39];
                          uint64_t v46 = v40[31];
                          __src = (void *)v40[30];
                          uint64_t v47 = v40[29];
                          uint64_t v74 = v40[28];
                          uint64_t v75 = v40[43];
                          v40[2] = v79;
                          v40[3] = v39;
                          *((_OWORD *)v40 + 2) = v42;
                          *uint64_t v67 = 0;
                          v67[1] = 0;
                          v40[8] = v41;
                          uint64_t v48 = sub_1FBC60();
                          *uint64_t v66 = 0;
                          v66[1] = 0;
                          uint64_t v80 = v48;
                          uint64_t v72 = *(void *)(v48 - 8);
                          (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v72 + 56))(v43, 1, 1, v48);
                          sub_51B70(v47, (uint64_t)v69);
                          (*(void (**)(uint64_t, uint64_t, uint64_t))(v68 + 16))(v44, v46, v45);
                          unint64_t v49 = (*(unsigned __int8 *)(v68 + 80) + 1273) & ~(unint64_t)*(unsigned __int8 *)(v68 + 80);
                          uint64_t v50 = swift_allocObject();
                          *(void *)(v50 + 16) = 0;
                          *(void *)(v50 + 24) = 0;
                          sub_37C30(v69, v50 + 32);
                          sub_158FB0(v70, v50 + 72);
                          memcpy((void *)(v50 + 144), __src, 0x460uLL);
                          *(void *)(v50 + 1264) = v74;
                          *(unsigned char *)(v50 + 1272) = v83;
                          (*(void (**)(unint64_t, uint64_t, uint64_t))(v68 + 32))(v50 + v49, v71, v45);
                          sub_98A40(v43, v75);
                          LODWORD(v47) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v72 + 48))(v75, 1, v80);
                          swift_bridgeObjectRetain();
                          sub_A1310((uint64_t)__src);
                          uint64_t v51 = v40[43];
                          if (v47 == 1)
                          {
                            sub_55F38(v40[43], &qword_26D908);
                          }
                          else
                          {
                            sub_1FBC50();
                            (*(void (**)(uint64_t, uint64_t))(v72 + 8))(v51, v80);
                          }
                          if (*(void *)(v50 + 16))
                          {
                            swift_getObjectType();
                            swift_unknownObjectRetain();
                            uint64_t v52 = sub_1FBBD0();
                            uint64_t v54 = v53;
                            swift_unknownObjectRelease();
                          }
                          else
                          {
                            uint64_t v52 = 0;
                            uint64_t v54 = 0;
                          }
                          uint64_t v55 = *(void *)v82[24];
                          uint64_t v56 = swift_allocObject();
                          *(void *)(v56 + 16) = &unk_2713A8;
                          *(void *)(v56 + 24) = v50;
                          char v57 = (void *)(v54 | v52);
                          if (v54 | v52)
                          {
                            char v57 = v64;
                            *uint64_t v64 = 0;
                            v64[1] = 0;
                            v82[18] = v52;
                            v82[19] = v54;
                          }
                          uint64_t v58 = v82[44];
                          v82[20] = 1;
                          v82[21] = v57;
                          v82[22] = v55;
                          swift_task_create();
                          swift_release();
                          sub_55F38(v58, &qword_26D908);
                          uint64_t v10 = v84;
                          break;
                        default:
                          swift_bridgeObjectRelease();
                          break;
                      }
                    }
                    continue;
                  }
                }
LABEL_44:
                char v32 = sub_1FC5F0();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                if (v32) {
                  goto LABEL_48;
                }
                unint64_t v26 = (v26 + 1) & v27;
                if (((*(void *)(v87 + ((v26 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v26) & 1) == 0) {
                  goto LABEL_11;
                }
                goto LABEL_28;
              }
              unint64_t v29 = 0xE500000000000000;
              uint64_t v28 = 0x646578696DLL;
              if (!v23) {
                goto LABEL_42;
              }
            }
            else
            {
              unint64_t v29 = 0xE500000000000000;
              uint64_t v28 = 0x6B6F6F6265;
              if (!v23) {
                goto LABEL_42;
              }
            }
LABEL_31:
            if (v23 == 1) {
              uint64_t v30 = 0x6F6F626F69647561;
            }
            else {
              uint64_t v30 = 0x646578696DLL;
            }
            if (v23 == 1) {
              unint64_t v31 = 0xE90000000000006BLL;
            }
            else {
              unint64_t v31 = 0xE500000000000000;
            }
            if (v28 == v30) {
              goto LABEL_43;
            }
            goto LABEL_44;
          }
          break;
        }
LABEL_76:
        swift_release();
        uint64_t v0 = v82;
        uint64_t v4 = v77;
        uint64_t v2 = v78;
        uint64_t v5 = v76;
        uint64_t v6 = v81;
LABEL_3:
        swift_bridgeObjectRelease();
      }
      ++v6;
    }
    while (v6 != v2);
    swift_bridgeObjectRelease();
  }
  sub_1FBC10();
  v0[49] = _swiftEmptyArrayStorage;
  char v59 = (void *)swift_task_alloc();
  v0[50] = v59;
  *char v59 = v0;
  v59[1] = sub_14A0C0;
  uint64_t v60 = v0[45];
  uint64_t v61 = v0[46];
  return TaskGroup.Iterator.next(isolation:)(v60, 0, 0, v61);
}

uint64_t sub_14A0C0()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_14A1BC, 0, 0);
}

uint64_t sub_14A1BC()
{
  uint64_t v1 = v0[45];
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(v0[33] + 48))(v1, 1, v0[32]) == 1)
  {
    uint64_t v2 = v0[49];
    uint64_t v3 = (void *)v0[23];
    (*(void (**)(void, void))(v0[47] + 8))(v0[48], v0[46]);
    *uint64_t v3 = v2;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = (uint64_t (*)(void))v0[1];
    return v4();
  }
  else
  {
    uint64_t v6 = v0[35];
    uint64_t v7 = v0[36];
    uint64_t v8 = v0[34];
    sub_55844(v1, v8, &qword_26F7C0);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(v8, 1, v6) == 1)
    {
      sub_55F38(v0[34], &qword_26F7C0);
    }
    else
    {
      uint64_t v10 = v0[37];
      uint64_t v9 = v0[38];
      sub_159238(v0[34], v9, type metadata accessor for CollectionRecommendation);
      sub_13A950(v9, v10);
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v12 = v0[49];
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        unint64_t v12 = sub_41F08(0, *(void *)(v12 + 16) + 1, 1, v0[49]);
      }
      unint64_t v14 = *(void *)(v12 + 16);
      unint64_t v13 = *(void *)(v12 + 24);
      unint64_t v15 = v14 + 1;
      if (v14 >= v13 >> 1)
      {
        uint64_t v22 = sub_41F08(v13 > 1, v14 + 1, 1, v12);
        unint64_t v15 = v14 + 1;
        unint64_t v12 = v22;
      }
      uint64_t v16 = v0[37];
      uint64_t v17 = v0[38];
      uint64_t v18 = v0[36];
      *(void *)(v12 + 16) = v15;
      sub_159238(v16, v12+ ((*(unsigned __int8 *)(v18 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v18 + 80))+ *(void *)(v18 + 72) * v14, type metadata accessor for CollectionRecommendation);
      sub_7B918(v17);
      v0[49] = v12;
    }
    unint64_t v19 = (void *)swift_task_alloc();
    v0[50] = v19;
    void *v19 = v0;
    v19[1] = sub_14A0C0;
    uint64_t v20 = v0[45];
    uint64_t v21 = v0[46];
    return TaskGroup.Iterator.next(isolation:)(v20, 0, 0, v21);
  }
}

uint64_t sub_14A498(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8)
{
  *(void *)(v8 + 1296) = v13;
  *(unsigned char *)(v8 + 1410) = a8;
  *(void *)(v8 + 1288) = a7;
  *(void *)(v8 + 1280) = a6;
  *(void *)(v8 + 1272) = a5;
  *(void *)(v8 + 1264) = a4;
  *(void *)(v8 + 1256) = a1;
  sub_12124(&qword_26F7C0);
  *(void *)(v8 + 1304) = swift_task_alloc();
  uint64_t v9 = type metadata accessor for CollectionRecommendation(0);
  *(void *)(v8 + 1312) = v9;
  *(void *)(v8 + 1320) = *(void *)(v9 - 8);
  *(void *)(v8 + 1328) = swift_task_alloc();
  sub_12124(&qword_26D928);
  *(void *)(v8 + 1336) = swift_task_alloc();
  uint64_t v10 = sub_12124(&qword_26D088);
  *(void *)(v8 + 1344) = v10;
  *(void *)(v8 + 1352) = *(void *)(v10 - 8);
  *(void *)(v8 + 1360) = swift_task_alloc();
  return _swift_task_switch(sub_14A638, 0, 0);
}

uint64_t sub_14A638()
{
  uint64_t v1 = *(void *)(v0 + 1320);
  uint64_t v2 = *(void *)(v0 + 1312);
  uint64_t v3 = *(const void **)(v0 + 1280);
  uint64_t v4 = *(void *)(v0 + 1272);
  uint64_t v5 = *(void **)(v0 + 1264);
  uint64_t v6 = *(void *)(v0 + 1256);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v1 + 56);
  *(void *)(v0 + 1368) = v7;
  *(void *)(v0 + 1376) = (v1 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
  v7(v6, 1, 1, v2);
  sub_5D64(v5, v5[3]);
  sub_158FB0(v4, v0 + 1136);
  memcpy((void *)(v0 + 16), v3, 0x460uLL);
  *(unsigned char *)(v0 + 1408) = 5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 1384) = v8;
  void *v8 = v0;
  v8[1] = sub_14A77C;
  return sub_1A13F4(v0 + 1409, v0 + 1136, v0 + 16, (unsigned char *)(v0 + 1408));
}

uint64_t sub_14A77C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1392) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_14AB44;
  }
  else
  {
    *(void *)(v4 + 1400) = a1;
    uint64_t v5 = sub_14A8A4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_14A8A4()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 1400);
  uint64_t v2 = *(void *)(v0 + 1288);
  char v3 = *(unsigned char *)(v0 + 1409);
  swift_bridgeObjectRetain();
  uint64_t v4 = sub_1568B0(v1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v4 + 16))
  {
    uint64_t v5 = *(void *)(v0 + 1352);
    uint64_t v6 = *(void *)(v0 + 1344);
    uint64_t v7 = *(void *)(v0 + 1336);
    *(void *)(v0 + 1232) = v4;
    sub_12124(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    sub_1FB3D0();
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v7, 1, v6) == 1)
    {
      sub_55F38(*(void *)(v0 + 1336), &qword_26D928);
    }
    else
    {
      uint64_t v8 = *(void *)(v0 + 1360);
      uint64_t v9 = *(void *)(v0 + 1352);
      uint64_t v10 = *(void *)(v0 + 1344);
      uint64_t v11 = *(void *)(v0 + 1320);
      uint64_t v12 = *(void *)(v0 + 1312);
      uint64_t v13 = *(void *)(v0 + 1304);
      (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v8, *(void *)(v0 + 1336), v10);
      v21[0] = v3;
      sub_13D084(v8, v21, v13);
      (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
      if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v13, 1, v12) == 1)
      {
        sub_55F38(*(void *)(v0 + 1304), &qword_26F7C0);
      }
      else
      {
        unint64_t v14 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 1368);
        uint64_t v15 = *(void *)(v0 + 1328);
        uint64_t v16 = *(void *)(v0 + 1312);
        uint64_t v17 = *(void *)(v0 + 1304);
        uint64_t v18 = *(void *)(v0 + 1256);
        sub_55F38(v18, &qword_26F7C0);
        sub_159238(v17, v15, type metadata accessor for CollectionRecommendation);
        sub_159238(v15, v18, type metadata accessor for CollectionRecommendation);
        v14(v18, 0, 1, v16);
      }
    }
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v19 = *(uint64_t (**)(void))(v0 + 8);
  return v19();
}

uint64_t sub_14AB44()
{
  uint64_t v9 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDA0();
  if (os_log_type_enabled(v1, v2))
  {
    char v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)char v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_1FC780();
    *(void *)(v0 + 1248) = sub_D5890(v4, v5, &v8);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Error fetching legacy MAPI collection: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();

    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_14AD58()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  swift_release();
  sub_1264C(v0 + 104);
  sub_1264C(v0 + 144);
  sub_1264C(v0 + 184);
  sub_1264C(v0 + 224);
  sub_1264C(v0 + 264);
  sub_1264C(v0 + 304);
  uint64_t v1 = v0 + OBJC_IVAR____TtC20BooksPersonalization39InternalCollectionRecommendationService_logger;
  uint64_t v2 = sub_1FB430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);
  return v0;
}

uint64_t sub_14AE04()
{
  sub_14AD58();

  return swift_deallocClassInstance();
}

uint64_t sub_14AE5C(uint64_t a1, uint64_t a2)
{
  unint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *unint64_t v5 = v2;
  v5[1] = sub_5958;
  return sub_142FD0(a1, a2);
}

uint64_t sub_14AF08(uint64_t a1, uint64_t a2)
{
  *(void *)(v2 + 1408) = a1;
  long long v3 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(v2 + 1368) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(v2 + 1384) = v3;
  *(_DWORD *)(v2 + 1399) = *(_DWORD *)(a2 + 159);
  long long v4 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v2 + 1304) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v2 + 1320) = v4;
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v2 + 1336) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v2 + 1352) = v5;
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v2 + 1240) = *(_OWORD *)a2;
  *(_OWORD *)(v2 + 1256) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v2 + 1272) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v2 + 1288) = v7;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 1416) = v8;
  void *v8 = v2;
  v8[1] = sub_14AFE8;
  return sub_142FD0(v2 + 16, v2 + 1240);
}

uint64_t sub_14AFE8()
{
  *(void *)(*(void *)v1 + 1424) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_14B1A0;
  }
  else {
    uint64_t v2 = sub_14B0FC;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_14B0FC()
{
  uint64_t v1 = (uint64_t *)v0[176];
  v1[3] = (uint64_t)&type metadata for InternalCollectionRecommendationResponse;
  v1[4] = sub_14F7E0();
  uint64_t v2 = swift_allocObject();
  *uint64_t v1 = v2;
  memcpy((void *)(v2 + 16), v0 + 2, 0x4C8uLL);
  long long v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_14B1A0()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_14B1B8(char *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t *a6)
{
  Swift::Int v7 = *a1;
  uint64_t v8 = *(void *)a2;
  char v9 = *(unsigned char *)(a2 + 8);
  uint64_t v10 = *(void *)(a2 + 16);
  int v11 = *(unsigned __int8 *)(a3 + 162);
  if (v11 == 8)
  {
    char v16 = *a1;
    sub_14B298(a4, (char *)&v17);
    int v11 = v17;
  }
  if (v11 == 7) {
    return sub_8460(v14, v7);
  }
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v15 = *a6;
  *a6 = 0x8000000000000000;
  sub_715BC(v8, v9, v10, v11, isUniquelyReferenced_nonNull_native);
  *a6 = v15;
  return swift_bridgeObjectRelease();
}

uint64_t sub_14B298@<X0>(uint64_t result@<X0>, char *a2@<X8>)
{
  uint64_t v4 = *(void *)(result + 32);
  char v5 = 7;
  switch(*v2)
  {
    case 4:
      char v5 = 1;
      goto LABEL_2;
    case 6:
      char v5 = 2;
      goto LABEL_2;
    case 7:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v6 = sub_50A6C(v4);
      swift_bridgeObjectRelease();
      if (*(void *)(v6 + 16))
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        BOOL v7 = sub_395FC(10016, v6);
        uint64_t result = swift_bridgeObjectRelease();
        if (v7)
        {
LABEL_7:
          char v5 = 4;
          goto LABEL_2;
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v8 = swift_bridgeObjectRetain();
        uint64_t v9 = sub_50A6C(v8);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        BOOL v10 = sub_395FC(10016, v9);
        uint64_t result = swift_bridgeObjectRelease();
        if (!v10) {
          goto LABEL_7;
        }
      }
      char v5 = 7;
LABEL_2:
      *a2 = v5;
      return result;
    case 8:
      if (*(unsigned char *)(result + 40)) {
        char v5 = 7;
      }
      else {
        char v5 = 5;
      }
      goto LABEL_2;
    default:
      goto LABEL_2;
  }
}

uint64_t sub_14B498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[3];
  uint64_t v18 = v2[2];
  uint64_t v19 = *v2;
  char v17 = *((unsigned char *)v2 + 32);
  uint64_t v16 = v2[5];
  char v15 = *((unsigned char *)v2 + 48);
  uint64_t v7 = v2[10];
  uint64_t v21 = v2[9];
  uint64_t v22 = v2[8];
  uint64_t v8 = v2[11];
  uint64_t v20 = v2[12];
  uint64_t v9 = v2[13];
  uint64_t v14 = v2[14];
  char v23 = *((unsigned char *)v2 + 161);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v10 = sub_158494(v7, a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRetain();
  uint64_t v11 = swift_bridgeObjectRetain();
  uint64_t v12 = sub_158494(v11, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)a2 = v19;
  *(void *)(a2 + 8) = v5;
  *(void *)(a2 + 16) = v18;
  *(void *)(a2 + 24) = v6;
  *(unsigned char *)(a2 + 32) = v17;
  *(void *)(a2 + 40) = v16;
  *(unsigned char *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = _swiftEmptySetSingleton;
  *(void *)(a2 + 64) = v22;
  *(void *)(a2 + 72) = v21;
  *(void *)(a2 + 80) = v10;
  *(void *)(a2 + 88) = v8;
  *(void *)(a2 + 96) = v20;
  *(void *)(a2 + 104) = v9;
  *(void *)(a2 + 112) = v14;
  *(void *)(a2 + 120) = v12;
  *(unsigned char *)(a2 + 128) = 4;
  *(void *)(a2 + 136) = 0;
  *(unsigned char *)(a2 + 144) = 1;
  *(void *)(a2 + 152) = 0;
  *(unsigned char *)(a2 + 160) = 1;
  *(unsigned char *)(a2 + 161) = v23;
  *(unsigned char *)(a2 + 162) = 8;
  return result;
}

uint64_t sub_14B664()
{
  if (*v0) {
    return 0x6F6C61646E617473;
  }
  else {
    return 0x64657669726564;
  }
}

uint64_t sub_14B6A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_158650(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_14B6CC(uint64_t a1)
{
  unint64_t v2 = sub_14F4E8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14B708(uint64_t a1)
{
  unint64_t v2 = sub_14F4E8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_14B744(uint64_t a1)
{
  unint64_t v2 = sub_14F5E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14B780(uint64_t a1)
{
  unint64_t v2 = sub_14F5E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_14B7BC(uint64_t a1)
{
  unint64_t v2 = sub_14F53C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14B7F8(uint64_t a1)
{
  unint64_t v2 = sub_14F53C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionRecommendationSource.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_270F10);
  uint64_t v19 = *(void *)(v3 - 8);
  uint64_t v20 = v3;
  __chkstk_darwin(v3);
  uint64_t v18 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_270F18);
  uint64_t v16 = *(void *)(v5 - 8);
  uint64_t v17 = v5;
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_270F20);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v16 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v12 = *v1;
  sub_5D64(a1, a1[3]);
  sub_14F4E8();
  sub_1FC870();
  if (v12 == 7)
  {
    char v21 = 0;
    sub_14F5E4();
    sub_1FC440();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v7, v17);
  }
  else
  {
    char v23 = 1;
    sub_14F53C();
    uint64_t v14 = v18;
    sub_1FC440();
    char v22 = v12;
    sub_14F590();
    uint64_t v15 = v20;
    sub_1FC530();
    (*(void (**)(char *, uint64_t))(v19 + 8))(v14, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v8);
}

uint64_t CollectionRecommendationSource.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  uint64_t v27 = a2;
  uint64_t v3 = sub_12124(&qword_270F48);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v25 = v3;
  uint64_t v26 = v4;
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_270F50);
  uint64_t v28 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_12124(&qword_270F58);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  unint64_t v29 = a1;
  sub_5D64(a1, v14);
  sub_14F4E8();
  uint64_t v15 = v30;
  sub_1FC850();
  if (v15) {
    goto LABEL_7;
  }
  uint64_t v16 = v28;
  uint64_t v30 = v11;
  uint64_t v17 = sub_1FC430();
  if (*(void *)(v17 + 16) != 1)
  {
    uint64_t v18 = sub_1FC0F0();
    swift_allocError();
    uint64_t v20 = v19;
    sub_12124(&qword_26F030);
    *uint64_t v20 = &type metadata for CollectionRecommendationSource;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v18 - 8) + 104))(v20, enum case for DecodingError.typeMismatch(_:), v18);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
LABEL_7:
    uint64_t v21 = (uint64_t)v29;
    return sub_1264C(v21);
  }
  if (*(unsigned char *)(v17 + 32))
  {
    char v33 = 1;
    sub_14F53C();
    sub_1FC2F0();
    sub_14F638();
    uint64_t v23 = v25;
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v26 + 8))(v6, v23);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
    char v24 = v32;
  }
  else
  {
    char v31 = 0;
    sub_14F5E4();
    sub_1FC2F0();
    (*(void (**)(char *, uint64_t))(v16 + 8))(v9, v7);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v13, v10);
    char v24 = 7;
  }
  uint64_t v21 = (uint64_t)v29;
  char *v27 = v24;
  return sub_1264C(v21);
}

uint64_t sub_14BFC4@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return CollectionRecommendationSource.init(from:)(a1, a2);
}

uint64_t sub_14BFDC(void *a1)
{
  return CollectionRecommendationSource.encode(to:)(a1);
}

uint64_t sub_14BFF4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_14C00C(a1, a2);
}

uint64_t sub_14C00C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 72);
  *(void *)a2 = *(void *)a1;
  *(unsigned char *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  char v8 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a2 + 40) = v8;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 48) = v6;
  *(void *)(a2 + 72) = v7;
  swift_bridgeObjectRetain();
  return sub_5480C(v5, v8);
}

uint64_t sub_14C088(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26C4E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_26C4F0);
  uint64_t result = sub_1FC280();
  uint64_t v7 = (void *)result;
  int64_t v8 = 0;
  uint64_t v30 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = a1 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v25 = v10;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v28 = v3 + 8;
  uint64_t v29 = v3 + 16;
  uint64_t v27 = result + 64;
  if ((v13 & v9) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v15 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v8 << 6))
  {
    char v20 = *(unsigned char *)(*(void *)(v30 + 48) + i);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v30 + 56) + *(void *)(v3 + 72) * i, v2);
    sub_1FB3A0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(v7[6] + i) = v20;
    *(void *)(v7[7] + 8 * i) = v31;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v7[2] = v23;
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v26) {
      return (uint64_t)v7;
    }
    unint64_t v18 = *(void *)(v25 + 8 * v17);
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v26) {
        return (uint64_t)v7;
      }
      unint64_t v18 = *(void *)(v25 + 8 * v8);
      if (!v18)
      {
        int64_t v8 = v17 + 2;
        if (v17 + 2 >= v26) {
          return (uint64_t)v7;
        }
        unint64_t v18 = *(void *)(v25 + 8 * v8);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v14 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v26) {
    return (uint64_t)v7;
  }
  unint64_t v18 = *(void *)(v25 + 8 * v19);
  if (v18)
  {
    int64_t v8 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v26) {
      return (uint64_t)v7;
    }
    unint64_t v18 = *(void *)(v25 + 8 * v8);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_14C348(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB220();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  int64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a2 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v11 = (a1 + 1) & ~v10;
  if (((1 << v11) & *(void *)(a2 + 64 + 8 * (v11 >> 6))) != 0)
  {
    uint64_t v12 = ~v10;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v9 + 8 * (v11 >> 6)) & (1 << v11)) != 0)
    {
      unint64_t v39 = (result + 1) & v12;
      unint64_t v14 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v13 = v5 + 16;
      uint64_t v15 = *(void *)(v13 + 56);
      uint64_t v40 = v13;
      char v37 = (uint64_t (**)(char *, uint64_t))(v13 - 8);
      uint64_t v38 = v14;
      uint64_t v36 = v12;
      do
      {
        uint64_t v16 = v9;
        uint64_t v17 = v15;
        int64_t v18 = v15 * v11;
        v38(v8, *(void *)(a2 + 48) + v15 * v11, v4);
        sub_14DF08(&qword_26D5F8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
        uint64_t v19 = sub_1FB790();
        unint64_t result = (*v37)(v8, v4);
        unint64_t v20 = v19 & v12;
        if (a1 >= (uint64_t)v39)
        {
          if (v20 >= v39 && a1 >= (uint64_t)v20)
          {
LABEL_16:
            if (v17 * a1 < v18
              || *(void *)(a2 + 48) + v17 * a1 >= (unint64_t)(*(void *)(a2 + 48) + v18 + v17))
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v17 * a1 != v18)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v23 = *(void *)(a2 + 56);
            uint64_t v24 = *(void *)(*(void *)(sub_1FB1F0() - 8) + 72);
            int64_t v25 = v24 * a1;
            unint64_t result = v23 + v24 * a1;
            int64_t v26 = v24 * v11;
            unint64_t v27 = v23 + v24 * v11 + v24;
            BOOL v28 = v25 < v26 || result >= v27;
            uint64_t v9 = v16;
            if (v28)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
              a1 = v11;
              uint64_t v12 = v36;
            }
            else
            {
              a1 = v11;
              uint64_t v12 = v36;
              if (v25 != v26)
              {
                unint64_t result = swift_arrayInitWithTakeBackToFront();
                a1 = v11;
              }
            }
            goto LABEL_5;
          }
        }
        else if (v20 >= v39 || a1 >= (uint64_t)v20)
        {
          goto LABEL_16;
        }
        uint64_t v9 = v16;
LABEL_5:
        unint64_t v11 = (v11 + 1) & v12;
        uint64_t v15 = v17;
      }
      while (((*(void *)(v9 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
    }
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v30 = *v29;
    uint64_t v31 = (-1 << a1) - 1;
  }
  else
  {
    uint64_t v29 = (uint64_t *)(v9 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v31 = *v29;
    uint64_t v30 = (-1 << a1) - 1;
  }
  *uint64_t v29 = v31 & v30;
  uint64_t v32 = *(void *)(a2 + 16);
  BOOL v33 = __OFSUB__(v32, 1);
  uint64_t v34 = v32 - 1;
  if (v33)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v34;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14C690(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1FC7D0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *unint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t result = v15 + 384 * v3;
            uint64_t v16 = (const void *)(v15 + 384 * v6);
            if (384 * v3 < (uint64_t)(384 * v6)
              || result >= (unint64_t)v16 + 384
              || (v17 = v3 == v6, int64_t v3 = v6, !v17))
            {
              unint64_t result = (unint64_t)memmove((void *)result, v16, 0x180uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14C840(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1FC7D0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *unint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (unsigned char *)(v15 + v3);
            BOOL v17 = (unsigned char *)(v15 + v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14C9D8(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1FC7D0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *unint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            unint64_t result = v15 + 80 * v3;
            uint64_t v16 = (const void *)(v15 + 80 * v6);
            if (80 * v3 < (uint64_t)(80 * v6) || result >= (unint64_t)v16 + 80 || (v17 = v3 == v6, int64_t v3 = v6, !v17))
            {
              unint64_t result = (unint64_t)memmove((void *)result, v16, 0x50uLL);
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14CB88(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        uint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1FC7D0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            unint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *unint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            uint64_t v16 = (_OWORD *)(v15 + 16 * v3);
            BOOL v17 = (_OWORD *)(v15 + 16 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *uint64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    int64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    int64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *int64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14CD24(int64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  uint64_t v5 = *(void *)(v4 - 8);
  unint64_t result = __chkstk_darwin(v4);
  unint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v10 = (a1 + 1) & ~v9;
  if (((1 << v10) & *(void *)(a2 + 64 + 8 * (v10 >> 6))) != 0)
  {
    uint64_t v11 = ~v9;
    uint64_t v34 = a2 + 64;
    unint64_t result = sub_1FBF70();
    uint64_t v12 = v34;
    if ((*(void *)(v34 + 8 * (v10 >> 6)) & (1 << v10)) != 0)
    {
      unint64_t v31 = (result + 1) & v11;
      uint64_t v32 = *(void (**)(char *, unint64_t, uint64_t))(v5 + 16);
      uint64_t v33 = v5 + 16;
      uint64_t v13 = (uint64_t (**)(char *, uint64_t))(v5 + 8);
      uint64_t v14 = *(void *)(v5 + 72);
      do
      {
        uint64_t v15 = v14;
        int64_t v16 = v14 * v10;
        v32(v8, *(void *)(a2 + 48) + v14 * v10, v4);
        sub_14DF08(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
        uint64_t v17 = sub_1FB790();
        unint64_t result = (*v13)(v8, v4);
        unint64_t v18 = v17 & v11;
        if (a1 >= (uint64_t)v31)
        {
          if (v18 >= v31 && a1 >= (uint64_t)v18)
          {
LABEL_16:
            uint64_t v21 = *(void *)(a2 + 48);
            uint64_t v14 = v15;
            unint64_t result = v21 + v15 * a1;
            if (v15 * a1 < v16 || result >= v21 + v16 + v15)
            {
              unint64_t result = swift_arrayInitWithTakeFrontToBack();
            }
            else if (v15 * a1 != v16)
            {
              unint64_t result = swift_arrayInitWithTakeBackToFront();
            }
            uint64_t v22 = *(void *)(a2 + 56);
            uint64_t v23 = (_OWORD *)(v22 + 16 * a1);
            uint64_t v24 = (_OWORD *)(v22 + 16 * v10);
            uint64_t v12 = v34;
            if (a1 != v10 || (a1 = v10, v23 >= v24 + 1))
            {
              _OWORD *v23 = *v24;
              a1 = v10;
            }
            goto LABEL_5;
          }
        }
        else if (v18 >= v31 || a1 >= (uint64_t)v18)
        {
          goto LABEL_16;
        }
        uint64_t v12 = v34;
        uint64_t v14 = v15;
LABEL_5:
        unint64_t v10 = (v10 + 1) & v11;
      }
      while (((*(void *)(v12 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) != 0);
    }
    int64_t v25 = (uint64_t *)(v12 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v26 = *v25;
    uint64_t v27 = (-1 << a1) - 1;
  }
  else
  {
    int64_t v25 = (uint64_t *)(a2 + 64 + 8 * ((unint64_t)a1 >> 6));
    uint64_t v27 = *v25;
    uint64_t v26 = (-1 << a1) - 1;
  }
  uint64_t *v25 = v27 & v26;
  uint64_t v28 = *(void *)(a2 + 16);
  BOOL v29 = __OFSUB__(v28, 1);
  uint64_t v30 = v28 - 1;
  if (v29)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v30;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14D01C(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v9 = *(void *)(a2 + 48);
        unint64_t v10 = (void *)(v9 + 8 * v6);
        unint64_t result = sub_1FC7D0();
        unint64_t v11 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v11 >= v8 && v3 >= (uint64_t)v11)
          {
LABEL_16:
            uint64_t v14 = (void *)(v9 + 8 * v3);
            if (v3 != v6 || v14 >= v10 + 1) {
              *uint64_t v14 = *v10;
            }
            uint64_t v15 = *(void *)(a2 + 56);
            int64_t v16 = (void *)(v15 + 8 * v3);
            uint64_t v17 = (void *)(v15 + 8 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v16 >= v17 + 1))
            {
              *int64_t v16 = *v17;
              int64_t v3 = v6;
            }
          }
        }
        else if (v11 >= v8 || v3 >= (uint64_t)v11)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    unint64_t v18 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v19 = *v18;
    uint64_t v20 = (-1 << v3) - 1;
  }
  else
  {
    unint64_t v18 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v20 = *v18;
    uint64_t v19 = (-1 << result) - 1;
  }
  *unint64_t v18 = v20 & v19;
  uint64_t v21 = *(void *)(a2 + 16);
  BOOL v22 = __OFSUB__(v21, 1);
  uint64_t v23 = v21 - 1;
  if (v22)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v23;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14D1B4(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        uint64_t v11 = *(void *)(a2 + 48);
        uint64_t v12 = (void *)(v11 + 8 * v6);
        unint64_t result = sub_1FC7D0();
        unint64_t v13 = result & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v13 >= v8 && v3 >= (uint64_t)v13)
          {
LABEL_16:
            int64_t v16 = (void *)(v11 + 8 * v3);
            if (v3 != v6 || v16 >= v12 + 1) {
              *int64_t v16 = *v12;
            }
            uint64_t v17 = *(void *)(a2 + 56);
            unint64_t v18 = (long long *)(v17 + 48 * v3);
            uint64_t v19 = (long long *)(v17 + 48 * v6);
            if (v3 != v6 || (int64_t v3 = v6, v18 >= v19 + 3))
            {
              long long v9 = *v19;
              long long v10 = v19[2];
              v18[1] = v19[1];
              v18[2] = v10;
              *unint64_t v18 = v9;
              int64_t v3 = v6;
            }
          }
        }
        else if (v13 >= v8 || v3 >= (uint64_t)v13)
        {
          goto LABEL_16;
        }
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v20 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v21 = *v20;
    uint64_t v22 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v20 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v22 = *v20;
    uint64_t v21 = (-1 << result) - 1;
  }
  *uint64_t v20 = v22 & v21;
  uint64_t v23 = *(void *)(a2 + 16);
  BOOL v24 = __OFSUB__(v23, 1);
  uint64_t v25 = v23 - 1;
  if (v24)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v25;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

unint64_t sub_14D360(unint64_t result, uint64_t a2)
{
  int64_t v3 = result;
  uint64_t v4 = a2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = (result + 1) & ~v5;
  if (((1 << v6) & *(void *)(a2 + 64 + 8 * (v6 >> 6))) != 0)
  {
    uint64_t v7 = ~v5;
    unint64_t result = sub_1FBF70();
    if ((*(void *)(v4 + 8 * (v6 >> 6)) & (1 << v6)) != 0)
    {
      unint64_t v8 = (result + 1) & v7;
      do
      {
        sub_1FC7E0();
        swift_bridgeObjectRetain();
        sub_1FB8C0();
        Swift::Int v9 = sub_1FC830();
        unint64_t result = swift_bridgeObjectRelease();
        unint64_t v10 = v9 & v7;
        if (v3 >= (uint64_t)v8)
        {
          if (v10 < v8) {
            goto LABEL_5;
          }
        }
        else if (v10 >= v8)
        {
          goto LABEL_11;
        }
        if (v3 >= (uint64_t)v10)
        {
LABEL_11:
          uint64_t v11 = *(void *)(a2 + 48);
          uint64_t v12 = (_OWORD *)(v11 + 16 * v3);
          unint64_t v13 = (_OWORD *)(v11 + 16 * v6);
          if (v3 != v6 || v12 >= v13 + 1) {
            *uint64_t v12 = *v13;
          }
          uint64_t v14 = *(void *)(a2 + 56);
          uint64_t v15 = (_OWORD *)(v14 + 16 * v3);
          int64_t v16 = (_OWORD *)(v14 + 16 * v6);
          if (v3 != v6 || (int64_t v3 = v6, v15 >= v16 + 1))
          {
            *uint64_t v15 = *v16;
            int64_t v3 = v6;
          }
        }
LABEL_5:
        unint64_t v6 = (v6 + 1) & v7;
      }
      while (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) != 0);
    }
    uint64_t v17 = (uint64_t *)(v4 + 8 * ((unint64_t)v3 >> 6));
    uint64_t v18 = *v17;
    uint64_t v19 = (-1 << v3) - 1;
  }
  else
  {
    uint64_t v17 = (uint64_t *)(v4 + 8 * (result >> 6));
    uint64_t v19 = *v17;
    uint64_t v18 = (-1 << result) - 1;
  }
  uint64_t *v17 = v19 & v18;
  uint64_t v20 = *(void *)(a2 + 16);
  BOOL v21 = __OFSUB__(v20, 1);
  uint64_t v22 = v20 - 1;
  if (v21)
  {
    __break(1u);
  }
  else
  {
    *(void *)(a2 + 16) = v22;
    ++*(_DWORD *)(a2 + 36);
  }
  return result;
}

uint64_t sub_14D53C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 56);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 3) {
    unint64_t v7 = 3;
  }
  unint64_t v8 = v7 - 3;
  Swift::Int v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 128;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

int64_t sub_14D5E0(int64_t result, int a2, char a3, uint64_t a4)
{
  if (a3) {
    goto LABEL_20;
  }
  unint64_t v4 = result;
  if (result < 0 || (unint64_t result = 1 << *(unsigned char *)(a4 + 32), result <= (uint64_t)v4))
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = v4 >> 6;
  uint64_t v6 = a4 + 56;
  unint64_t v7 = *(void *)(a4 + 56 + 8 * (v4 >> 6));
  if (((v7 >> v4) & 1) == 0)
  {
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  if (*(_DWORD *)(a4 + 36) != a2)
  {
LABEL_19:
    __break(1u);
LABEL_20:
    __break(1u);
    return result;
  }
  unint64_t v8 = v7 & (-2 << (v4 & 0x3F));
  if (v8) {
    return __clz(__rbit64(v8)) | v4 & 0xFFFFFFFFFFFFFFC0;
  }
  unint64_t v9 = v5 + 1;
  unint64_t v10 = (unint64_t)(result + 63) >> 6;
  if (v5 + 1 < v10)
  {
    unint64_t v11 = *(void *)(v6 + 8 * v9);
    if (v11) {
      return __clz(__rbit64(v11)) + (v9 << 6);
    }
    unint64_t v9 = v5 + 2;
    if (v5 + 2 < v10)
    {
      unint64_t v11 = *(void *)(v6 + 8 * v9);
      if (v11) {
        return __clz(__rbit64(v11)) + (v9 << 6);
      }
      while (v10 - 3 != v5)
      {
        unint64_t v11 = *(void *)(a4 + 80 + 8 * v5++);
        if (v11)
        {
          unint64_t v9 = v5 + 2;
          return __clz(__rbit64(v11)) + (v9 << 6);
        }
      }
    }
  }
  return result;
}

unint64_t sub_14D6C4()
{
  unint64_t result = qword_270D48;
  if (!qword_270D48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D48);
  }
  return result;
}

unint64_t sub_14D718()
{
  unint64_t result = qword_270D50;
  if (!qword_270D50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D50);
  }
  return result;
}

unint64_t sub_14D76C()
{
  unint64_t result = qword_270D58;
  if (!qword_270D58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D58);
  }
  return result;
}

unint64_t sub_14D7C0()
{
  unint64_t result = qword_270D60;
  if (!qword_270D60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D60);
  }
  return result;
}

unint64_t sub_14D814()
{
  unint64_t result = qword_270D68;
  if (!qword_270D68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D68);
  }
  return result;
}

unint64_t sub_14D868()
{
  unint64_t result = qword_270D70;
  if (!qword_270D70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D70);
  }
  return result;
}

unint64_t sub_14D8BC()
{
  unint64_t result = qword_270D78;
  if (!qword_270D78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D78);
  }
  return result;
}

uint64_t sub_14D910()
{
  return sub_13CFE8(&qword_270D88, &qword_26D6A0, (void (*)(void))sub_14D76C);
}

unint64_t sub_14D94C()
{
  unint64_t result = qword_270D90;
  if (!qword_270D90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D90);
  }
  return result;
}

unint64_t sub_14D9A0()
{
  unint64_t result = qword_270D98;
  if (!qword_270D98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270D98);
  }
  return result;
}

unint64_t sub_14D9F4()
{
  unint64_t result = qword_270DA0;
  if (!qword_270DA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DA0);
  }
  return result;
}

unint64_t sub_14DA48()
{
  unint64_t result = qword_270DA8;
  if (!qword_270DA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DA8);
  }
  return result;
}

unint64_t sub_14DA9C()
{
  unint64_t result = qword_270DB0;
  if (!qword_270DB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DB0);
  }
  return result;
}

unint64_t sub_14DAF0()
{
  unint64_t result = qword_270DB8;
  if (!qword_270DB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DB8);
  }
  return result;
}

unint64_t sub_14DB44()
{
  unint64_t result = qword_270DC0;
  if (!qword_270DC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DC0);
  }
  return result;
}

unint64_t sub_14DB98()
{
  unint64_t result = qword_270DD8;
  if (!qword_270DD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DD8);
  }
  return result;
}

unint64_t sub_14DBEC()
{
  unint64_t result = qword_270DE0;
  if (!qword_270DE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DE0);
  }
  return result;
}

unint64_t sub_14DC40()
{
  unint64_t result = qword_270DE8;
  if (!qword_270DE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270DE8);
  }
  return result;
}

unint64_t sub_14DC94()
{
  unint64_t result = qword_270E58;
  if (!qword_270E58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270E58);
  }
  return result;
}

unint64_t sub_14DCE8()
{
  unint64_t result = qword_270E60;
  if (!qword_270E60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270E60);
  }
  return result;
}

uint64_t sub_14DD3C()
{
  return sub_13CFE8(&qword_270E70, &qword_26D6A0, (void (*)(void))sub_14DC94);
}

unint64_t sub_14DD78()
{
  unint64_t result = qword_270E78;
  if (!qword_270E78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270E78);
  }
  return result;
}

unint64_t sub_14DDCC()
{
  unint64_t result = qword_270E88;
  if (!qword_270E88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270E88);
  }
  return result;
}

unint64_t sub_14DE20()
{
  unint64_t result = qword_270E98;
  if (!qword_270E98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270E98);
  }
  return result;
}

uint64_t sub_14DE74(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_270EA0);
    sub_14DF08(a2, (void (*)(uint64_t))type metadata accessor for CollectionRecommendation);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_14DF08(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_14DF50(uint64_t result)
{
  if (result)
  {
    uint64_t v32 = STACK[0x6C0];
    uint64_t v30 = STACK[0x6B0];
    uint64_t v31 = STACK[0x6B8];
    uint64_t v29 = STACK[0x6A8];
    uint64_t v27 = STACK[0x668];
    uint64_t v28 = STACK[0x670];
    uint64_t v25 = STACK[0x658];
    uint64_t v26 = STACK[0x660];
    uint64_t v24 = STACK[0x630];
    uint64_t v23 = STACK[0x628];
    uint64_t v19 = STACK[0x618];
    uint64_t v18 = STACK[0x610];
    uint64_t v17 = STACK[0x608];
    uint64_t v16 = STACK[0x600];
    uint64_t v15 = STACK[0x5F8];
    uint64_t v14 = STACK[0x5F0];
    uint64_t v13 = STACK[0x5E8];
    uint64_t v12 = STACK[0x5E0];
    uint64_t v11 = STACK[0x5D8];
    uint64_t v10 = STACK[0x5D0];
    uint64_t v9 = STACK[0x5C8];
    uint64_t v8 = STACK[0x5C0];
    uint64_t v7 = STACK[0x5B8];
    uint64_t v6 = STACK[0x5B0];
    uint64_t v22 = STACK[0x5A8];
    uint64_t v21 = STACK[0x5A0];
    uint64_t v20 = STACK[0x598];
    uint64_t v5 = STACK[0x590];
    uint64_t v4 = STACK[0x588];
    uint64_t v3 = STACK[0x580];
    uint64_t v2 = STACK[0x578];
    uint64_t v1 = STACK[0x570];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_8D2AC(v1, v2, v3, v4, v5, v20, v21, v22, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    sub_8D2F8(v23, v24);
    sub_8D348(v25, v26, v27, v28);
    swift_bridgeObjectRetain();
    sub_8D38C(v29, v30, v31, v32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

#error "14E5FC: call analysis failed (funcsize=203)"

uint64_t sub_14E624(uint64_t result)
{
  if (result)
  {
    uint64_t v32 = STACK[0x6C0];
    uint64_t v30 = STACK[0x6B0];
    uint64_t v31 = STACK[0x6B8];
    uint64_t v29 = STACK[0x6A8];
    uint64_t v27 = STACK[0x668];
    uint64_t v28 = STACK[0x670];
    uint64_t v25 = STACK[0x658];
    uint64_t v26 = STACK[0x660];
    uint64_t v24 = STACK[0x630];
    uint64_t v23 = STACK[0x628];
    uint64_t v19 = STACK[0x618];
    uint64_t v18 = STACK[0x610];
    uint64_t v17 = STACK[0x608];
    uint64_t v16 = STACK[0x600];
    uint64_t v15 = STACK[0x5F8];
    uint64_t v14 = STACK[0x5F0];
    uint64_t v13 = STACK[0x5E8];
    uint64_t v12 = STACK[0x5E0];
    uint64_t v11 = STACK[0x5D8];
    uint64_t v10 = STACK[0x5D0];
    uint64_t v9 = STACK[0x5C8];
    uint64_t v8 = STACK[0x5C0];
    uint64_t v7 = STACK[0x5B8];
    uint64_t v6 = STACK[0x5B0];
    uint64_t v22 = STACK[0x5A8];
    uint64_t v21 = STACK[0x5A0];
    uint64_t v20 = STACK[0x598];
    uint64_t v5 = STACK[0x590];
    uint64_t v4 = STACK[0x588];
    uint64_t v3 = STACK[0x580];
    uint64_t v2 = STACK[0x578];
    uint64_t v1 = STACK[0x570];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_11FF4(v1, v2, v3, v4, v5, v20, v21, v22, v6, v7, v8, v9, v10, v11, v12, v13, v14, v15, v16, v17, v18, v19);
    sub_12040(v23, v24);
    sub_12090(v25, v26, v27, v28);
    swift_bridgeObjectRelease();
    sub_120D4(v29, v30, v31, v32);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_14E9CC(uint64_t result)
{
  if (result)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_14EA0C()
{
  unint64_t result = qword_270EE0;
  if (!qword_270EE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270EE0);
  }
  return result;
}

unint64_t sub_14EA60()
{
  unint64_t result = qword_270EE8;
  if (!qword_270EE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270EE8);
  }
  return result;
}

unint64_t sub_14EAB4()
{
  unint64_t result = qword_270EF0;
  if (!qword_270EF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270EF0);
  }
  return result;
}

void sub_14EB08(void *a1)
{
}

unint64_t sub_14EB10()
{
  unint64_t result = qword_270F00;
  if (!qword_270F00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F00);
  }
  return result;
}

unint64_t sub_14EB64()
{
  unint64_t result = qword_270F08;
  if (!qword_270F08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F08);
  }
  return result;
}

uint64_t sub_14EBB8(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 1208);
  swift_bridgeObjectRetain();
  sub_14DF50(v4);
  sub_14E9CC(v2);
  return a1;
}

uint64_t sub_14F050(uint64_t a1)
{
  uint64_t v4 = *(void *)(a1 + 8);
  uint64_t v2 = *(void *)(a1 + 1208);
  swift_bridgeObjectRelease();
  sub_14E624(v4);
  sub_DA178(v2);
  return a1;
}

unint64_t sub_14F4E8()
{
  unint64_t result = qword_270F28;
  if (!qword_270F28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F28);
  }
  return result;
}

unint64_t sub_14F53C()
{
  unint64_t result = qword_270F30;
  if (!qword_270F30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F30);
  }
  return result;
}

unint64_t sub_14F590()
{
  unint64_t result = qword_270F38;
  if (!qword_270F38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F38);
  }
  return result;
}

unint64_t sub_14F5E4()
{
  unint64_t result = qword_270F40;
  if (!qword_270F40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F40);
  }
  return result;
}

unint64_t sub_14F638()
{
  unint64_t result = qword_270F60;
  if (!qword_270F60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F60);
  }
  return result;
}

unint64_t sub_14F690()
{
  unint64_t result = qword_270F68;
  if (!qword_270F68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F68);
  }
  return result;
}

uint64_t sub_14F6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_14F860(a1, a2, a3, (uint64_t (*)(void))sub_14F710, (uint64_t (*)(void))sub_14F764);
}

unint64_t sub_14F710()
{
  unint64_t result = qword_270F70;
  if (!qword_270F70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F70);
  }
  return result;
}

unint64_t sub_14F764()
{
  unint64_t result = qword_270F78;
  if (!qword_270F78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F78);
  }
  return result;
}

unint64_t sub_14F7B8(uint64_t a1)
{
  unint64_t result = sub_14F7E0();
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_14F7E0()
{
  unint64_t result = qword_270F80;
  if (!qword_270F80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F80);
  }
  return result;
}

uint64_t sub_14F834(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_14F860(a1, a2, a3, (uint64_t (*)(void))sub_14F89C, (uint64_t (*)(void))sub_14F8F0);
}

uint64_t sub_14F860(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  *(void *)(a1 + 8) = a4();
  uint64_t result = a5();
  *(void *)(a1 + 16) = result;
  return result;
}

unint64_t sub_14F89C()
{
  unint64_t result = qword_270F88;
  if (!qword_270F88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F88);
  }
  return result;
}

unint64_t sub_14F8F0()
{
  unint64_t result = qword_270F90;
  if (!qword_270F90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_270F90);
  }
  return result;
}

uint64_t destroy for CollectionRecommendationRequest()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for CollectionRecommendationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  uint64_t v6 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v6;
  uint64_t v7 = *(void *)(a2 + 120);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = v7;
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  uint64_t v8 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v8;
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for CollectionRecommendationRequest(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  uint64_t v4 = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 136) = v4;
  uint64_t v5 = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(void *)(a1 + 152) = v5;
  *(unsigned char *)(a1 + 161) = *(unsigned char *)(a2 + 161);
  *(unsigned char *)(a1 + 162) = *(unsigned char *)(a2 + 162);
  return a1;
}

__n128 initializeWithTake for CollectionRecommendationRequest(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  long long v4 = a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  __n128 result = (__n128)a2[7];
  long long v8 = a2[8];
  long long v9 = a2[9];
  *(_DWORD *)(a1 + 159) = *(_DWORD *)((char *)a2 + 159);
  *(_OWORD *)(a1 + 128) = v8;
  *(_OWORD *)(a1 + 144) = v9;
  *(__n128 *)(a1 + 112) = result;
  return result;
}

uint64_t assignWithTake for CollectionRecommendationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 128) = *(unsigned char *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(unsigned char *)(a1 + 160) = *(unsigned char *)(a2 + 160);
  *(_WORD *)(a1 + 161) = *(_WORD *)(a2 + 161);
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionRecommendationRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 163)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionRecommendationRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 152) = 0;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 162) = 0;
    *(_WORD *)(result + 160) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 163) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 163) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationRequest()
{
  return &type metadata for CollectionRecommendationRequest;
}

ValueMetadata *type metadata accessor for CollectionRecommendationType()
{
  return &type metadata for CollectionRecommendationType;
}

uint64_t assignWithCopy for CollectionRecommendationOptions(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for CollectionRecommendationOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for CollectionRecommendationOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CollectionRecommendationOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationOptions()
{
  return &type metadata for CollectionRecommendationOptions;
}

uint64_t initializeBufferWithCopyOfBuffer for CollectionRecommendation(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *(void *)a1 = *a2;
    a1 = v8 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v9 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        goto LABEL_27;
      case 2u:
        uint64_t v10 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v10 - 8) + 16))(a1, a2, v10);
        uint64_t v11 = sub_12124(&qword_26D090);
        uint64_t v12 = *(int *)(v11 + 48);
        uint64_t v13 = a1 + v12;
        uint64_t v14 = (uint64_t)a2 + v12;
        *(void *)uint64_t v13 = *(uint64_t *)((char *)a2 + v12);
        *(unsigned char *)(v13 + 8) = *((unsigned char *)a2 + v12 + 8);
        uint64_t v15 = *(uint64_t *)((char *)a2 + v12 + 24);
        *(void *)(v13 + 16) = *(uint64_t *)((char *)a2 + v12 + 16);
        *(void *)(v13 + 24) = v15;
        *(unsigned char *)(v13 + 40) = *((unsigned char *)a2 + v12 + 40);
        *(void *)(v13 + 32) = *(uint64_t *)((char *)a2 + v12 + 32);
        *(unsigned char *)(v13 + 80) = *((unsigned char *)a2 + v12 + 80);
        long long v16 = *(_OWORD *)((char *)a2 + v12 + 64);
        *(_OWORD *)(v13 + 48) = *(_OWORD *)((char *)a2 + v12 + 48);
        *(_OWORD *)(v13 + 64) = v16;
        unint64_t v17 = *(uint64_t *)((char *)a2 + v12 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17 >> 1 == 0xFFFFFFFF)
        {
          long long v18 = *(_OWORD *)(v14 + 136);
          *(_OWORD *)(v13 + 120) = *(_OWORD *)(v14 + 120);
          *(_OWORD *)(v13 + 136) = v18;
          *(void *)(v13 + 152) = *(void *)(v14 + 152);
          long long v19 = *(_OWORD *)(v14 + 104);
          *(_OWORD *)(v13 + 88) = *(_OWORD *)(v14 + 88);
          *(_OWORD *)(v13 + 104) = v19;
        }
        else
        {
          uint64_t v26 = *(void *)(v14 + 88);
          uint64_t v43 = v11;
          uint64_t v27 = *(void *)(v14 + 104);
          uint64_t v28 = *(void *)(v14 + 112);
          uint64_t v29 = *(void *)(v14 + 120);
          uint64_t v39 = *(void *)(v14 + 128);
          uint64_t v40 = *(void *)(v14 + 96);
          uint64_t v41 = *(void *)(v14 + 144);
          uint64_t v42 = *(void *)(v14 + 152);
          sub_1244C();
          *(void *)(v13 + 88) = v26;
          *(void *)(v13 + 96) = v40;
          *(void *)(v13 + 104) = v27;
          *(void *)(v13 + 112) = v28;
          *(void *)(v13 + 120) = v29;
          *(void *)(v13 + 128) = v39;
          *(void *)(v13 + 136) = v17;
          *(void *)(v13 + 144) = v41;
          uint64_t v11 = v43;
          *(void *)(v13 + 152) = v42;
        }
        memcpy((void *)(v13 + 160), (const void *)(v14 + 160), 0x179uLL);
        *(void *)(v13 + 544) = *(void *)(v14 + 544);
        *(unsigned char *)(v13 + 552) = *(unsigned char *)(v14 + 552);
        *(void *)(a1 + *(int *)(v11 + 64)) = *(uint64_t *)((char *)a2 + *(int *)(v11 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_27;
      case 3u:
      case 5u:
        uint64_t v20 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v20 - 8) + 16))(a1, a2, v20);
        uint64_t v21 = sub_12124(&qword_26D998);
        *(void *)(a1 + *(int *)(v21 + 48)) = *(uint64_t *)((char *)a2 + *(int *)(v21 + 48));
        *(unsigned char *)(a1 + *(int *)(v21 + 64)) = *((unsigned char *)a2 + *(int *)(v21 + 64));
        goto LABEL_27;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v22 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t *, uint64_t))(*(void *)(v22 - 8) + 16))(a1, a2, v22);
        uint64_t v23 = sub_12124(&qword_26D9C8);
        *(unsigned char *)(a1 + *(int *)(v23 + 48)) = *((unsigned char *)a2 + *(int *)(v23 + 48));
        goto LABEL_27;
      case 9u:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        uint64_t v24 = a2[8];
        if (v24)
        {
          *(void *)(a1 + 16) = a2[2];
          *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
          *(void *)(a1 + 32) = a2[4];
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
          int v25 = *((unsigned __int8 *)a2 + 56);
          *(void *)(a1 + 48) = a2[6];
          if (v25 == 255)
          {
            *(unsigned char *)(a1 + 56) = *((unsigned char *)a2 + 56);
          }
          else
          {
            *(unsigned char *)(a1 + 56) = v25 & 1;
            swift_bridgeObjectRetain();
          }
          uint64_t v34 = a2[9];
          uint64_t v35 = a2[10];
          *(void *)(a1 + 64) = v24;
          *(void *)(a1 + 72) = v34;
          uint64_t v36 = a2[11];
          uint64_t v37 = a2[12];
          *(void *)(a1 + 80) = v35;
          *(void *)(a1 + 88) = v36;
          *(void *)(a1 + 96) = v37;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v32 = *((_OWORD *)a2 + 4);
          *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
          *(_OWORD *)(a1 + 64) = v32;
          *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
          *(void *)(a1 + 96) = a2[12];
          long long v33 = *((_OWORD *)a2 + 2);
          *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
          *(_OWORD *)(a1 + 32) = v33;
        }
        *(void *)(a1 + 104) = a2[13];
        goto LABEL_27;
      case 0xAu:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        long long v6 = a2 + 4;
        int v7 = *((unsigned __int8 *)a2 + 40);
        if (v7 != 255) {
          goto LABEL_21;
        }
        *(void *)(a1 + 32) = *v6;
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        break;
      case 0xBu:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        long long v6 = a2 + 4;
        int v7 = *((unsigned __int8 *)a2 + 40);
        if (v7 != 255) {
          goto LABEL_21;
        }
        *(void *)(a1 + 32) = *v6;
        *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        break;
      default:
        *(void *)a1 = *a2;
        *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
        *(void *)(a1 + 16) = a2[2];
        *(unsigned char *)(a1 + 24) = *((unsigned char *)a2 + 24);
        long long v6 = a2 + 4;
        int v7 = *((unsigned __int8 *)a2 + 40);
        if (v7 == 255)
        {
          *(void *)(a1 + 32) = *v6;
          *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
        }
        else
        {
LABEL_21:
          *(void *)(a1 + 32) = *v6;
          *(unsigned char *)(a1 + 40) = v7 & 1;
          swift_bridgeObjectRetain();
        }
        break;
    }
    uint64_t v30 = a2[7];
    *(void *)(a1 + 48) = a2[6];
    *(void *)(a1 + 56) = v30;
    uint64_t v31 = a2[9];
    *(void *)(a1 + 64) = a2[8];
    *(void *)(a1 + 72) = v31;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_27:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for CollectionRecommendation(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 10:
    case 11:
      if (*(unsigned __int8 *)(a1 + 40) != 255) {
        swift_bridgeObjectRelease();
      }
      goto LABEL_7;
    case 1:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
    case 8:
      uint64_t v3 = sub_12124(&qword_26D088);
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      return v4(a1, v3);
    case 2:
      uint64_t v5 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(a1, v5);
      uint64_t v6 = a1 + *(int *)(sub_12124(&qword_26D090) + 48);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (*(void *)(v6 + 136) >> 1 != 0xFFFFFFFFLL) {
        sub_12578();
      }
LABEL_7:
      swift_bridgeObjectRelease();
      goto LABEL_15;
    case 9:
      uint64_t result = *(void *)(a1 + 64);
      if (!result) {
        return result;
      }
      if (*(unsigned __int8 *)(a1 + 56) != 255) {
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_15:
      return swift_bridgeObjectRelease();
    default:
      return result;
  }
}

uint64_t initializeWithCopy for CollectionRecommendation(uint64_t a1, uint64_t a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
      goto LABEL_25;
    case 2u:
      uint64_t v7 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
      uint64_t v8 = sub_12124(&qword_26D090);
      uint64_t v9 = *(int *)(v8 + 48);
      uint64_t v10 = a1 + v9;
      uint64_t v11 = a2 + v9;
      *(void *)uint64_t v10 = *(void *)(a2 + v9);
      *(unsigned char *)(v10 + 8) = *(unsigned char *)(a2 + v9 + 8);
      uint64_t v12 = *(void *)(a2 + v9 + 24);
      *(void *)(v10 + 16) = *(void *)(a2 + v9 + 16);
      *(void *)(v10 + 24) = v12;
      *(unsigned char *)(v10 + 40) = *(unsigned char *)(a2 + v9 + 40);
      *(void *)(v10 + 32) = *(void *)(a2 + v9 + 32);
      *(unsigned char *)(v10 + 80) = *(unsigned char *)(a2 + v9 + 80);
      long long v13 = *(_OWORD *)(a2 + v9 + 64);
      *(_OWORD *)(v10 + 48) = *(_OWORD *)(a2 + v9 + 48);
      *(_OWORD *)(v10 + 64) = v13;
      unint64_t v14 = *(void *)(a2 + v9 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v14 >> 1 == 0xFFFFFFFF)
      {
        long long v15 = *(_OWORD *)(v11 + 136);
        *(_OWORD *)(v10 + 120) = *(_OWORD *)(v11 + 120);
        *(_OWORD *)(v10 + 136) = v15;
        *(void *)(v10 + 152) = *(void *)(v11 + 152);
        long long v16 = *(_OWORD *)(v11 + 104);
        *(_OWORD *)(v10 + 88) = *(_OWORD *)(v11 + 88);
        *(_OWORD *)(v10 + 104) = v16;
      }
      else
      {
        uint64_t v23 = *(void *)(v11 + 88);
        uint64_t v40 = v8;
        uint64_t v24 = *(void *)(v11 + 104);
        uint64_t v25 = *(void *)(v11 + 112);
        uint64_t v26 = *(void *)(v11 + 120);
        uint64_t v36 = *(void *)(v11 + 128);
        uint64_t v37 = *(void *)(v11 + 96);
        uint64_t v38 = *(void *)(v11 + 144);
        uint64_t v39 = *(void *)(v11 + 152);
        sub_1244C();
        *(void *)(v10 + 88) = v23;
        *(void *)(v10 + 96) = v37;
        *(void *)(v10 + 104) = v24;
        *(void *)(v10 + 112) = v25;
        *(void *)(v10 + 120) = v26;
        *(void *)(v10 + 128) = v36;
        *(void *)(v10 + 136) = v14;
        *(void *)(v10 + 144) = v38;
        uint64_t v8 = v40;
        *(void *)(v10 + 152) = v39;
      }
      memcpy((void *)(v10 + 160), (const void *)(v11 + 160), 0x179uLL);
      *(void *)(v10 + 544) = *(void *)(v11 + 544);
      *(unsigned char *)(v10 + 552) = *(unsigned char *)(v11 + 552);
      *(void *)(a1 + *(int *)(v8 + 64)) = *(void *)(a2 + *(int *)(v8 + 64));
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_25;
    case 3u:
    case 5u:
      uint64_t v17 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(a1, a2, v17);
      uint64_t v18 = sub_12124(&qword_26D998);
      *(void *)(a1 + *(int *)(v18 + 48)) = *(void *)(a2 + *(int *)(v18 + 48));
      *(unsigned char *)(a1 + *(int *)(v18 + 64)) = *(unsigned char *)(a2 + *(int *)(v18 + 64));
      goto LABEL_25;
    case 4u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v19 = sub_12124(&qword_26D088);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 16))(a1, a2, v19);
      uint64_t v20 = sub_12124(&qword_26D9C8);
      *(unsigned char *)(a1 + *(int *)(v20 + 48)) = *(unsigned char *)(a2 + *(int *)(v20 + 48));
      goto LABEL_25;
    case 9u:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      uint64_t v21 = *(void *)(a2 + 64);
      if (v21)
      {
        *(void *)(a1 + 16) = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        int v22 = *(unsigned __int8 *)(a2 + 56);
        *(void *)(a1 + 48) = *(void *)(a2 + 48);
        if (v22 == 255)
        {
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
        }
        else
        {
          *(unsigned char *)(a1 + 56) = v22 & 1;
          swift_bridgeObjectRetain();
        }
        uint64_t v31 = *(void *)(a2 + 72);
        uint64_t v32 = *(void *)(a2 + 80);
        *(void *)(a1 + 64) = v21;
        *(void *)(a1 + 72) = v31;
        uint64_t v33 = *(void *)(a2 + 88);
        uint64_t v34 = *(void *)(a2 + 96);
        *(void *)(a1 + 80) = v32;
        *(void *)(a1 + 88) = v33;
        *(void *)(a1 + 96) = v34;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v29 = *(_OWORD *)(a2 + 64);
        *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
        *(_OWORD *)(a1 + 64) = v29;
        *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
        *(void *)(a1 + 96) = *(void *)(a2 + 96);
        long long v30 = *(_OWORD *)(a2 + 32);
        *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
        *(_OWORD *)(a1 + 32) = v30;
      }
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      goto LABEL_25;
    case 0xAu:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v4 = (void *)(a2 + 32);
      int v5 = *(unsigned __int8 *)(a2 + 40);
      if (v5 != 255) {
        goto LABEL_19;
      }
      *(void *)(a1 + 32) = *v4;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      break;
    case 0xBu:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v4 = (void *)(a2 + 32);
      int v5 = *(unsigned __int8 *)(a2 + 40);
      if (v5 != 255) {
        goto LABEL_19;
      }
      *(void *)(a1 + 32) = *v4;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      break;
    default:
      *(void *)a1 = *(void *)a2;
      *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v4 = (void *)(a2 + 32);
      int v5 = *(unsigned __int8 *)(a2 + 40);
      if (v5 == 255)
      {
        *(void *)(a1 + 32) = *v4;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      }
      else
      {
LABEL_19:
        *(void *)(a1 + 32) = *v4;
        *(unsigned char *)(a1 + 40) = v5 & 1;
        swift_bridgeObjectRetain();
      }
      break;
  }
  uint64_t v27 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v27;
  uint64_t v28 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v28;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_25:
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t assignWithCopy for CollectionRecommendation(uint64_t a1, uint64_t a2)
{
  if (a1 != a2)
  {
    sub_7B918(a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v8 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
        goto LABEL_26;
      case 2u:
        uint64_t v9 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        uint64_t v10 = sub_12124(&qword_26D090);
        uint64_t v11 = *(int *)(v10 + 48);
        uint64_t v12 = a1 + v11;
        uint64_t v13 = a2 + v11;
        *(void *)uint64_t v12 = *(void *)(a2 + v11);
        *(unsigned char *)(v12 + 8) = *(unsigned char *)(a2 + v11 + 8);
        *(void *)(v12 + 16) = *(void *)(a2 + v11 + 16);
        *(void *)(v12 + 24) = *(void *)(a2 + v11 + 24);
        uint64_t v14 = *(void *)(a2 + v11 + 32);
        *(unsigned char *)(v12 + 40) = *(unsigned char *)(v13 + 40);
        *(void *)(v12 + 32) = v14;
        long long v16 = *(_OWORD *)(v13 + 48);
        long long v15 = *(_OWORD *)(v13 + 64);
        *(unsigned char *)(v12 + 80) = *(unsigned char *)(v13 + 80);
        *(_OWORD *)(v12 + 48) = v16;
        *(_OWORD *)(v12 + 64) = v15;
        unint64_t v17 = *(void *)(v13 + 136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v17 >> 1 == 0xFFFFFFFF)
        {
          *(_OWORD *)(v12 + 88) = *(_OWORD *)(v13 + 88);
          long long v18 = *(_OWORD *)(v13 + 104);
          long long v19 = *(_OWORD *)(v13 + 120);
          long long v20 = *(_OWORD *)(v13 + 136);
          *(void *)(v12 + 152) = *(void *)(v13 + 152);
          *(_OWORD *)(v12 + 120) = v19;
          *(_OWORD *)(v12 + 136) = v20;
          *(_OWORD *)(v12 + 104) = v18;
        }
        else
        {
          uint64_t v33 = *(void *)(v13 + 88);
          uint64_t v46 = v10;
          uint64_t v34 = *(void *)(v13 + 104);
          uint64_t v35 = *(void *)(v13 + 112);
          uint64_t v36 = *(void *)(v13 + 120);
          uint64_t v42 = *(void *)(v13 + 128);
          uint64_t v43 = *(void *)(v13 + 96);
          uint64_t v44 = *(void *)(v13 + 144);
          uint64_t v45 = *(void *)(v13 + 152);
          sub_1244C();
          *(void *)(v12 + 88) = v33;
          *(void *)(v12 + 96) = v43;
          *(void *)(v12 + 104) = v34;
          *(void *)(v12 + 112) = v35;
          *(void *)(v12 + 120) = v36;
          *(void *)(v12 + 128) = v42;
          *(void *)(v12 + 136) = v17;
          *(void *)(v12 + 144) = v44;
          uint64_t v10 = v46;
          *(void *)(v12 + 152) = v45;
        }
        memcpy((void *)(v12 + 160), (const void *)(v13 + 160), 0x179uLL);
        *(void *)(v12 + 544) = *(void *)(v13 + 544);
        *(unsigned char *)(v12 + 552) = *(unsigned char *)(v13 + 552);
        *(void *)(a1 + *(int *)(v10 + 64)) = *(void *)(a2 + *(int *)(v10 + 64));
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        goto LABEL_26;
      case 3u:
      case 5u:
        uint64_t v21 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 16))(a1, a2, v21);
        uint64_t v22 = sub_12124(&qword_26D998);
        *(void *)(a1 + *(int *)(v22 + 48)) = *(void *)(a2 + *(int *)(v22 + 48));
        *(unsigned char *)(a1 + *(int *)(v22 + 64)) = *(unsigned char *)(a2 + *(int *)(v22 + 64));
        goto LABEL_26;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v23 = sub_12124(&qword_26D088);
        (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 16))(a1, a2, v23);
        uint64_t v24 = sub_12124(&qword_26D9C8);
        *(unsigned char *)(a1 + *(int *)(v24 + 48)) = *(unsigned char *)(a2 + *(int *)(v24 + 48));
        goto LABEL_26;
      case 9u:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        if (*(void *)(a2 + 64))
        {
          *(void *)(a1 + 16) = *(void *)(a2 + 16);
          *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
          uint64_t v25 = *(void *)(a2 + 32);
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v25;
          uint64_t v26 = (uint64_t *)(a2 + 48);
          int v27 = *(unsigned __int8 *)(a2 + 56);
          if (v27 == 255)
          {
            uint64_t v28 = *v26;
            *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
            *(void *)(a1 + 48) = v28;
          }
          else
          {
            *(void *)(a1 + 48) = *v26;
            *(unsigned char *)(a1 + 56) = v27 & 1;
            swift_bridgeObjectRetain();
          }
          *(void *)(a1 + 64) = *(void *)(a2 + 64);
          *(void *)(a1 + 72) = *(void *)(a2 + 72);
          *(void *)(a1 + 80) = *(void *)(a2 + 80);
          *(void *)(a1 + 88) = *(void *)(a2 + 88);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v37 = *(_OWORD *)(a2 + 32);
          *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
          *(_OWORD *)(a1 + 32) = v37;
          long long v38 = *(_OWORD *)(a2 + 48);
          long long v39 = *(_OWORD *)(a2 + 64);
          long long v40 = *(_OWORD *)(a2 + 80);
          *(void *)(a1 + 96) = *(void *)(a2 + 96);
          *(_OWORD *)(a1 + 64) = v39;
          *(_OWORD *)(a1 + 80) = v40;
          *(_OWORD *)(a1 + 48) = v38;
        }
        *(void *)(a1 + 104) = *(void *)(a2 + 104);
        goto LABEL_26;
      case 0xAu:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v29 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v29;
        int v5 = (uint64_t *)(a2 + 32);
        int v6 = *(unsigned __int8 *)(a2 + 40);
        if (v6 != 255) {
          goto LABEL_20;
        }
        uint64_t v30 = *v5;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v30;
        break;
      case 0xBu:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v31 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v31;
        int v5 = (uint64_t *)(a2 + 32);
        int v6 = *(unsigned __int8 *)(a2 + 40);
        if (v6 != 255) {
          goto LABEL_20;
        }
        uint64_t v32 = *v5;
        *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
        *(void *)(a1 + 32) = v32;
        break;
      default:
        *(void *)a1 = *(void *)a2;
        *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
        uint64_t v4 = *(void *)(a2 + 16);
        *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
        *(void *)(a1 + 16) = v4;
        int v5 = (uint64_t *)(a2 + 32);
        int v6 = *(unsigned __int8 *)(a2 + 40);
        if (v6 == 255)
        {
          uint64_t v7 = *v5;
          *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
          *(void *)(a1 + 32) = v7;
        }
        else
        {
LABEL_20:
          *(void *)(a1 + 32) = *v5;
          *(unsigned char *)(a1 + 40) = v6 & 1;
          swift_bridgeObjectRetain();
        }
        break;
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_26:
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

unsigned char *initializeWithTake for CollectionRecommendation(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v6 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      goto LABEL_7;
    case 2u:
      uint64_t v7 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
      uint64_t v8 = sub_12124(&qword_26D090);
      memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x229uLL);
      *(void *)&a1[*(int *)(v8 + 64)] = *(void *)&a2[*(int *)(v8 + 64)];
      goto LABEL_7;
    case 3u:
    case 5u:
      uint64_t v9 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
      uint64_t v10 = sub_12124(&qword_26D998);
      *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
      a1[*(int *)(v10 + 64)] = a2[*(int *)(v10 + 64)];
      goto LABEL_7;
    case 4u:
    case 6u:
    case 7u:
    case 8u:
      uint64_t v11 = sub_12124(&qword_26D088);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
      uint64_t v12 = sub_12124(&qword_26D9C8);
      a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
LABEL_7:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

unsigned char *assignWithTake for CollectionRecommendation(unsigned char *a1, unsigned char *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_7B918((uint64_t)a1);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v6 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
        goto LABEL_8;
      case 2u:
        uint64_t v7 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v7 - 8) + 32))(a1, a2, v7);
        uint64_t v8 = sub_12124(&qword_26D090);
        memcpy(&a1[*(int *)(v8 + 48)], &a2[*(int *)(v8 + 48)], 0x229uLL);
        *(void *)&a1[*(int *)(v8 + 64)] = *(void *)&a2[*(int *)(v8 + 64)];
        goto LABEL_8;
      case 3u:
      case 5u:
        uint64_t v9 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v9 - 8) + 32))(a1, a2, v9);
        uint64_t v10 = sub_12124(&qword_26D998);
        *(void *)&a1[*(int *)(v10 + 48)] = *(void *)&a2[*(int *)(v10 + 48)];
        a1[*(int *)(v10 + 64)] = a2[*(int *)(v10 + 64)];
        goto LABEL_8;
      case 4u:
      case 6u:
      case 7u:
      case 8u:
        uint64_t v11 = sub_12124(&qword_26D088);
        (*(void (**)(unsigned char *, unsigned char *, uint64_t))(*(void *)(v11 - 8) + 32))(a1, a2, v11);
        uint64_t v12 = sub_12124(&qword_26D9C8);
        a1[*(int *)(v12 + 48)] = a2[*(int *)(v12 + 48)];
LABEL_8:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

void sub_1520A4()
{
  uint64_t v9 = "P";
  sub_152230();
  if (v1 <= 0x3F)
  {
    uint64_t v10 = *(void *)(v0 - 8) + 64;
    swift_getTupleTypeLayout3();
    uint64_t v11 = &v8;
    swift_getTupleTypeLayout3();
    uint64_t v12 = &v7;
    swift_getTupleTypeLayout2();
    uint64_t v13 = &v6;
    swift_getTupleTypeLayout3();
    uint64_t v14 = &v5;
    swift_getTupleTypeLayout2();
    long long v15 = &v4;
    swift_getTupleTypeLayout2();
    long long v16 = &v3;
    swift_getTupleTypeLayout2();
    unint64_t v17 = &v2;
    long long v18 = &unk_20B3E8;
    long long v19 = "P";
    long long v20 = "P";
    swift_initEnumMetadataMultiPayload();
  }
}

void sub_152230()
{
  if (!qword_271018)
  {
    sub_121C4(&qword_26D6A0);
    sub_52CC0(&qword_26D930, &qword_26D6A0);
    unint64_t v0 = sub_1FB3C0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_271018);
    }
  }
}

uint64_t dispatch thunk of CollectionRecommendationResponseType.recommendations.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of InternalCollectionRecommendationResponseType.bookClusteringRequest.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 16))();
}

uint64_t dispatch thunk of InternalCollectionRecommendationResponseType.bookClusteringResult.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for CollectionRecommendationResponse()
{
  return &type metadata for CollectionRecommendationResponse;
}

uint64_t destroy for InternalCollectionRecommendationResponse(void *a1)
{
  swift_bridgeObjectRelease();
  if (a1[1])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (a1[116])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[119])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (a1[127])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (a1[137])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t result = a1[151];
  if (result)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InternalCollectionRecommendationResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  char v5 = (const void *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v6 = *(void *)(a2 + 16);
    *(void *)(a1 + 8) = v4;
    *(void *)(a1 + 16) = v6;
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
    *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
    *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
    *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
    *(_DWORD *)(a1 + 59) = *(_DWORD *)(a2 + 59);
    *(_WORD *)(a1 + 63) = *(_WORD *)(a2 + 63);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
    uint64_t v7 = *(void *)(a2 + 104);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = v7;
    long long v8 = *(_OWORD *)(a2 + 128);
    *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
    *(_OWORD *)(a1 + 128) = v8;
    long long v9 = *(_OWORD *)(a2 + 160);
    *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
    *(_OWORD *)(a1 + 160) = v9;
    long long v10 = *(_OWORD *)(a2 + 192);
    *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
    *(_OWORD *)(a1 + 192) = v10;
    long long v11 = *(_OWORD *)(a2 + 224);
    *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
    *(_OWORD *)(a1 + 224) = v11;
    long long v12 = *(_OWORD *)(a2 + 256);
    *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
    *(_OWORD *)(a1 + 256) = v12;
    long long v13 = *(_OWORD *)(a2 + 288);
    *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
    *(_OWORD *)(a1 + 288) = v13;
    long long v14 = *(_OWORD *)(a2 + 320);
    *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
    *(_OWORD *)(a1 + 320) = v14;
    long long v15 = *(_OWORD *)(a2 + 352);
    *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
    *(_OWORD *)(a1 + 352) = v15;
    long long v16 = *(_OWORD *)(a2 + 384);
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    *(_OWORD *)(a1 + 384) = v16;
    long long v17 = *(_OWORD *)(a2 + 416);
    *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
    *(_OWORD *)(a1 + 416) = v17;
    uint64_t v18 = *(void *)(a2 + 440);
    *(void *)(a1 + 432) = *(void *)(a2 + 432);
    *(void *)(a1 + 440) = v18;
    *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
    *(void *)(a1 + 464) = *(void *)(a2 + 464);
    *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
    *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
    *(unsigned char *)(a1 + 474) = *(unsigned char *)(a2 + 474);
    uint64_t v19 = *(void *)(a2 + 488);
    *(void *)(a1 + 480) = *(void *)(a2 + 480);
    *(void *)(a1 + 488) = v19;
    *(void *)(a1 + 496) = *(void *)(a2 + 496);
    *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
    *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
    *(void *)(a1 + 528) = *(void *)(a2 + 528);
    *(void *)(a1 + 536) = *(void *)(a2 + 536);
    *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
    *(void *)(a1 + 560) = *(void *)(a2 + 560);
    *(void *)(a1 + 568) = *(void *)(a2 + 568);
    *(void *)(a1 + 576) = *(void *)(a2 + 576);
    *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
    *(void *)(a1 + 592) = *(void *)(a2 + 592);
    *(void *)(a1 + 600) = *(void *)(a2 + 600);
    *(void *)(a1 + 608) = *(void *)(a2 + 608);
    *(void *)(a1 + 616) = *(void *)(a2 + 616);
    *(void *)(a1 + 624) = *(void *)(a2 + 624);
    *(void *)(a1 + 632) = *(void *)(a2 + 632);
    *(void *)(a1 + 640) = *(void *)(a2 + 640);
    *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
    *(void *)(a1 + 656) = *(void *)(a2 + 656);
    *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
    *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
    *(void *)(a1 + 672) = *(void *)(a2 + 672);
    *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
    *(unsigned char *)(a1 + 681) = *(unsigned char *)(a2 + 681);
    long long v20 = *(_OWORD *)(a2 + 688);
    *(void *)(a1 + 704) = *(void *)(a2 + 704);
    *(_OWORD *)(a1 + 688) = v20;
    *(void *)(a1 + 712) = *(void *)(a2 + 712);
    *(void *)(a1 + 720) = *(void *)(a2 + 720);
    *(void *)(a1 + 728) = *(void *)(a2 + 728);
    *(void *)(a1 + 736) = *(void *)(a2 + 736);
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    uint64_t v40 = *(void *)(a2 + 928);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v40)
    {
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      long long v21 = *(_OWORD *)(a2 + 880);
      *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
      *(_OWORD *)(a1 + 880) = v21;
      long long v22 = *(_OWORD *)(a2 + 912);
      *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
      *(_OWORD *)(a1 + 912) = v22;
      long long v23 = *(_OWORD *)(a2 + 816);
      *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 816) = v23;
      long long v24 = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 848) = v24;
      long long v25 = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = v25;
      *(void *)(a1 + 928) = v40;
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v26 = *(void *)(a2 + 952);
      if (v26) {
        goto LABEL_4;
      }
    }
    else
    {
      long long v29 = *(_OWORD *)(a2 + 904);
      *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
      *(_OWORD *)(a1 + 904) = v29;
      *(_OWORD *)(a1 + 920) = *(_OWORD *)(a2 + 920);
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      long long v30 = *(_OWORD *)(a2 + 840);
      *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
      *(_OWORD *)(a1 + 840) = v30;
      long long v31 = *(_OWORD *)(a2 + 872);
      *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
      *(_OWORD *)(a1 + 872) = v31;
      long long v32 = *(_OWORD *)(a2 + 776);
      *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
      *(_OWORD *)(a1 + 776) = v32;
      long long v33 = *(_OWORD *)(a2 + 808);
      *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
      *(_OWORD *)(a1 + 808) = v33;
      uint64_t v26 = *(void *)(a2 + 952);
      if (v26)
      {
LABEL_4:
        *(void *)(a1 + 944) = *(void *)(a2 + 944);
        *(void *)(a1 + 952) = v26;
        *(void *)(a1 + 960) = *(void *)(a2 + 960);
        *(void *)(a1 + 968) = *(void *)(a2 + 968);
        *(void *)(a1 + 976) = *(void *)(a2 + 976);
        *(void *)(a1 + 984) = *(void *)(a2 + 984);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v27 = *(void *)(a2 + 1016);
        if (v27)
        {
LABEL_5:
          *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
          *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
          *(void *)(a1 + 1016) = v27;
          *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
          *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          goto LABEL_11;
        }
LABEL_10:
        long long v35 = *(_OWORD *)(a2 + 1008);
        *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
        *(_OWORD *)(a1 + 1008) = v35;
        *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
LABEL_11:
        *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
        *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
        *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
        uint64_t v36 = *(void *)(a2 + 1096);
        swift_bridgeObjectRetain();
        if (v36)
        {
          *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
          *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
          *(void *)(a1 + 1096) = v36;
          *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
          *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
          *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
          *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
          *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
        }
        else
        {
          long long v37 = *(_OWORD *)(a2 + 1120);
          *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
          *(_OWORD *)(a1 + 1120) = v37;
          *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
          long long v38 = *(_OWORD *)(a2 + 1088);
          *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
          *(_OWORD *)(a1 + 1088) = v38;
        }
        *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
        *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
        *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
        *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
        *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
        *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
        *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
        *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v28 = *(void *)(a2 + 1208);
        if (v28) {
          goto LABEL_15;
        }
        goto LABEL_7;
      }
    }
    long long v34 = *(_OWORD *)(a2 + 960);
    *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
    *(_OWORD *)(a1 + 960) = v34;
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    uint64_t v27 = *(void *)(a2 + 1016);
    if (v27) {
      goto LABEL_5;
    }
    goto LABEL_10;
  }
  memcpy((void *)(a1 + 8), v5, 0x4B0uLL);
  uint64_t v28 = *(void *)(a2 + 1208);
  if (v28)
  {
LABEL_15:
    *(void *)(a1 + 1208) = v28;
    *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return a1;
  }
LABEL_7:
  *(_OWORD *)(a1 + 1208) = *(_OWORD *)(a2 + 1208);
  return a1;
}

uint64_t assignWithCopy for InternalCollectionRecommendationResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (*(void *)(a1 + 8))
  {
    if (v4)
    {
      *(void *)(a1 + 8) = v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
      *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
      *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
      *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
      *(unsigned char *)(a1 + 59) = *(unsigned char *)(a2 + 59);
      *(unsigned char *)(a1 + 60) = *(unsigned char *)(a2 + 60);
      *(unsigned char *)(a1 + 61) = *(unsigned char *)(a2 + 61);
      *(unsigned char *)(a1 + 62) = *(unsigned char *)(a2 + 62);
      *(unsigned char *)(a1 + 63) = *(unsigned char *)(a2 + 63);
      *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      *(unsigned char *)(a1 + 89) = *(unsigned char *)(a2 + 89);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      *(void *)(a1 + 120) = *(void *)(a2 + 120);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 160) = *(void *)(a2 + 160);
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      *(void *)(a1 + 200) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = *(void *)(a2 + 240);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = *(void *)(a2 + 256);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = *(void *)(a2 + 272);
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(void *)(a1 + 288) = *(void *)(a2 + 288);
      *(void *)(a1 + 296) = *(void *)(a2 + 296);
      *(void *)(a1 + 304) = *(void *)(a2 + 304);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = *(void *)(a2 + 320);
      *(void *)(a1 + 328) = *(void *)(a2 + 328);
      *(void *)(a1 + 336) = *(void *)(a2 + 336);
      *(void *)(a1 + 344) = *(void *)(a2 + 344);
      *(void *)(a1 + 352) = *(void *)(a2 + 352);
      *(void *)(a1 + 360) = *(void *)(a2 + 360);
      *(void *)(a1 + 368) = *(void *)(a2 + 368);
      *(void *)(a1 + 376) = *(void *)(a2 + 376);
      *(void *)(a1 + 384) = *(void *)(a2 + 384);
      *(void *)(a1 + 392) = *(void *)(a2 + 392);
      *(void *)(a1 + 400) = *(void *)(a2 + 400);
      *(void *)(a1 + 408) = *(void *)(a2 + 408);
      *(void *)(a1 + 416) = *(void *)(a2 + 416);
      *(void *)(a1 + 424) = *(void *)(a2 + 424);
      *(void *)(a1 + 432) = *(void *)(a2 + 432);
      *(void *)(a1 + 440) = *(void *)(a2 + 440);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 448) = *(void *)(a2 + 448);
      *(void *)(a1 + 456) = *(void *)(a2 + 456);
      *(void *)(a1 + 464) = *(void *)(a2 + 464);
      *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
      *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
      *(unsigned char *)(a1 + 474) = *(unsigned char *)(a2 + 474);
      *(void *)(a1 + 480) = *(void *)(a2 + 480);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 488) = *(void *)(a2 + 488);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 496) = *(void *)(a2 + 496);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
      *(void *)(a1 + 512) = *(void *)(a2 + 512);
      *(void *)(a1 + 520) = *(void *)(a2 + 520);
      *(void *)(a1 + 528) = *(void *)(a2 + 528);
      *(void *)(a1 + 536) = *(void *)(a2 + 536);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 544) = *(void *)(a2 + 544);
      *(void *)(a1 + 552) = *(void *)(a2 + 552);
      *(void *)(a1 + 560) = *(void *)(a2 + 560);
      *(void *)(a1 + 568) = *(void *)(a2 + 568);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 576) = *(void *)(a2 + 576);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
      *(void *)(a1 + 592) = *(void *)(a2 + 592);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 600) = *(void *)(a2 + 600);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 608) = *(void *)(a2 + 608);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 616) = *(void *)(a2 + 616);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 624) = *(void *)(a2 + 624);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 632) = *(void *)(a2 + 632);
      *(void *)(a1 + 640) = *(void *)(a2 + 640);
      *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
      *(void *)(a1 + 656) = *(void *)(a2 + 656);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
      *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
      *(void *)(a1 + 672) = *(void *)(a2 + 672);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
      *(unsigned char *)(a1 + 681) = *(unsigned char *)(a2 + 681);
      *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
      *(void *)(a1 + 696) = *(void *)(a2 + 696);
      *(void *)(a1 + 704) = *(void *)(a2 + 704);
      *(void *)(a1 + 712) = *(void *)(a2 + 712);
      *(void *)(a1 + 720) = *(void *)(a2 + 720);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 728) = *(void *)(a2 + 728);
      *(void *)(a1 + 736) = *(void *)(a2 + 736);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      char v5 = (_OWORD *)(a1 + 760);
      uint64_t v6 = (long long *)(a2 + 760);
      uint64_t v7 = *(void *)(a2 + 928);
      if (*(void *)(a1 + 928))
      {
        if (v7)
        {
          *(void *)(a1 + 760) = *(void *)(a2 + 760);
          *(void *)(a1 + 768) = *(void *)(a2 + 768);
          *(void *)(a1 + 776) = *(void *)(a2 + 776);
          *(void *)(a1 + 784) = *(void *)(a2 + 784);
          *(void *)(a1 + 792) = *(void *)(a2 + 792);
          *(void *)(a1 + 800) = *(void *)(a2 + 800);
          *(void *)(a1 + 808) = *(void *)(a2 + 808);
          *(void *)(a1 + 816) = *(void *)(a2 + 816);
          *(void *)(a1 + 824) = *(void *)(a2 + 824);
          *(void *)(a1 + 832) = *(void *)(a2 + 832);
          *(void *)(a1 + 840) = *(void *)(a2 + 840);
          *(void *)(a1 + 848) = *(void *)(a2 + 848);
          *(void *)(a1 + 856) = *(void *)(a2 + 856);
          *(void *)(a1 + 864) = *(void *)(a2 + 864);
          *(void *)(a1 + 872) = *(void *)(a2 + 872);
          *(void *)(a1 + 880) = *(void *)(a2 + 880);
          *(void *)(a1 + 888) = *(void *)(a2 + 888);
          *(void *)(a1 + 896) = *(void *)(a2 + 896);
          *(void *)(a1 + 904) = *(void *)(a2 + 904);
          *(void *)(a1 + 912) = *(void *)(a2 + 912);
          *(void *)(a1 + 920) = *(void *)(a2 + 920);
          *(void *)(a1 + 928) = *(void *)(a2 + 928);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 936) = *(void *)(a2 + 936);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_8EF00(a1 + 760);
          long long v26 = *(_OWORD *)(a2 + 808);
          long long v28 = *v6;
          long long v27 = *(_OWORD *)(a2 + 776);
          *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
          *(_OWORD *)(a1 + 808) = v26;
          *char v5 = v28;
          *(_OWORD *)(a1 + 776) = v27;
          long long v29 = *(_OWORD *)(a2 + 872);
          long long v31 = *(_OWORD *)(a2 + 824);
          long long v30 = *(_OWORD *)(a2 + 840);
          *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
          *(_OWORD *)(a1 + 872) = v29;
          *(_OWORD *)(a1 + 824) = v31;
          *(_OWORD *)(a1 + 840) = v30;
          long long v33 = *(_OWORD *)(a2 + 904);
          long long v32 = *(_OWORD *)(a2 + 920);
          long long v34 = *(_OWORD *)(a2 + 888);
          *(void *)(a1 + 936) = *(void *)(a2 + 936);
          *(_OWORD *)(a1 + 904) = v33;
          *(_OWORD *)(a1 + 920) = v32;
          *(_OWORD *)(a1 + 888) = v34;
        }
      }
      else if (v7)
      {
        *(void *)(a1 + 760) = *(void *)(a2 + 760);
        *(void *)(a1 + 768) = *(void *)(a2 + 768);
        *(void *)(a1 + 776) = *(void *)(a2 + 776);
        *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
        long long v20 = *(_OWORD *)(a2 + 800);
        long long v21 = *(_OWORD *)(a2 + 816);
        long long v22 = *(_OWORD *)(a2 + 848);
        *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
        *(_OWORD *)(a1 + 848) = v22;
        *(_OWORD *)(a1 + 800) = v20;
        *(_OWORD *)(a1 + 816) = v21;
        long long v23 = *(_OWORD *)(a2 + 864);
        long long v24 = *(_OWORD *)(a2 + 880);
        long long v25 = *(_OWORD *)(a2 + 912);
        *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
        *(_OWORD *)(a1 + 912) = v25;
        *(_OWORD *)(a1 + 864) = v23;
        *(_OWORD *)(a1 + 880) = v24;
        *(void *)(a1 + 928) = *(void *)(a2 + 928);
        *(void *)(a1 + 936) = *(void *)(a2 + 936);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v52 = *v6;
        long long v53 = *(_OWORD *)(a2 + 776);
        long long v54 = *(_OWORD *)(a2 + 808);
        *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
        *(_OWORD *)(a1 + 808) = v54;
        *char v5 = v52;
        *(_OWORD *)(a1 + 776) = v53;
        long long v55 = *(_OWORD *)(a2 + 824);
        long long v56 = *(_OWORD *)(a2 + 840);
        long long v57 = *(_OWORD *)(a2 + 872);
        *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
        *(_OWORD *)(a1 + 872) = v57;
        *(_OWORD *)(a1 + 824) = v55;
        *(_OWORD *)(a1 + 840) = v56;
        long long v58 = *(_OWORD *)(a2 + 888);
        long long v59 = *(_OWORD *)(a2 + 904);
        long long v60 = *(_OWORD *)(a2 + 920);
        *(void *)(a1 + 936) = *(void *)(a2 + 936);
        *(_OWORD *)(a1 + 904) = v59;
        *(_OWORD *)(a1 + 920) = v60;
        *(_OWORD *)(a1 + 888) = v58;
      }
      uint64_t v61 = (_OWORD *)(a1 + 944);
      BOOL v62 = (_OWORD *)(a2 + 944);
      uint64_t v63 = *(void *)(a2 + 952);
      if (*(void *)(a1 + 952))
      {
        if (v63)
        {
          *(void *)(a1 + 944) = *(void *)(a2 + 944);
          *(void *)(a1 + 952) = *(void *)(a2 + 952);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 960) = *(void *)(a2 + 960);
          *(void *)(a1 + 968) = *(void *)(a2 + 968);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 976) = *(void *)(a2 + 976);
          *(void *)(a1 + 984) = *(void *)(a2 + 984);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_8EF54(a1 + 944);
          long long v65 = *(_OWORD *)(a2 + 960);
          long long v64 = *(_OWORD *)(a2 + 976);
          *uint64_t v61 = *v62;
          *(_OWORD *)(a1 + 960) = v65;
          *(_OWORD *)(a1 + 976) = v64;
        }
      }
      else if (v63)
      {
        *(void *)(a1 + 944) = *(void *)(a2 + 944);
        *(void *)(a1 + 952) = *(void *)(a2 + 952);
        *(void *)(a1 + 960) = *(void *)(a2 + 960);
        *(void *)(a1 + 968) = *(void *)(a2 + 968);
        *(void *)(a1 + 976) = *(void *)(a2 + 976);
        *(void *)(a1 + 984) = *(void *)(a2 + 984);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v66 = *v62;
        long long v67 = *(_OWORD *)(a2 + 976);
        *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
        *(_OWORD *)(a1 + 976) = v67;
        *uint64_t v61 = v66;
      }
      uint64_t v68 = (_OWORD *)(a1 + 992);
      uint64_t v69 = (_OWORD *)(a2 + 992);
      uint64_t v70 = *(void *)(a2 + 1016);
      if (*(void *)(a1 + 1016))
      {
        if (v70)
        {
          *(void *)(a1 + 992) = *(void *)(a2 + 992);
          *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
          *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
          *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
          *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
        }
        else
        {
          sub_8EFA8(a1 + 992);
          long long v72 = *(_OWORD *)(a2 + 1008);
          long long v71 = *(_OWORD *)(a2 + 1024);
          *uint64_t v68 = *v69;
          *(_OWORD *)(a1 + 1008) = v72;
          *(_OWORD *)(a1 + 1024) = v71;
        }
      }
      else if (v70)
      {
        *(void *)(a1 + 992) = *(void *)(a2 + 992);
        *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
        *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
        *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
        *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
        *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v73 = *v69;
        long long v74 = *(_OWORD *)(a2 + 1024);
        *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
        *(_OWORD *)(a1 + 1024) = v74;
        *uint64_t v68 = v73;
      }
      *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
      *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
      *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
      *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v75 = (_OWORD *)(a1 + 1072);
      uint64_t v76 = (_OWORD *)(a2 + 1072);
      uint64_t v77 = *(void *)(a2 + 1096);
      if (*(void *)(a1 + 1096))
      {
        if (v77)
        {
          *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
          *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
          *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
          *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
          *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
          *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
        }
        else
        {
          sub_8EFFC(a1 + 1072);
          *uint64_t v75 = *v76;
          long long v79 = *(_OWORD *)(a2 + 1104);
          long long v78 = *(_OWORD *)(a2 + 1120);
          long long v80 = *(_OWORD *)(a2 + 1088);
          *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
          *(_OWORD *)(a1 + 1104) = v79;
          *(_OWORD *)(a1 + 1120) = v78;
          *(_OWORD *)(a1 + 1088) = v80;
        }
      }
      else if (v77)
      {
        *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
        *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
        *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
        *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
        *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
        *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
        *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
        *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
        *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      else
      {
        *uint64_t v75 = *v76;
        long long v81 = *(_OWORD *)(a2 + 1088);
        long long v82 = *(_OWORD *)(a2 + 1104);
        long long v83 = *(_OWORD *)(a2 + 1120);
        *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
        *(_OWORD *)(a1 + 1104) = v82;
        *(_OWORD *)(a1 + 1120) = v83;
        *(_OWORD *)(a1 + 1088) = v81;
      }
      *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
      *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
      *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
      *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_46;
    }
    sub_153BCC(a1 + 8);
LABEL_12:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x4B0uLL);
    goto LABEL_46;
  }
  if (!v4) {
    goto LABEL_12;
  }
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  long long v8 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 33) = *(_OWORD *)(a2 + 33);
  *(_OWORD *)(a1 + 24) = v8;
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(unsigned char *)(a1 + 58) = *(unsigned char *)(a2 + 58);
  *(_WORD *)(a1 + 59) = *(_WORD *)(a2 + 59);
  *(_WORD *)(a1 + 61) = *(_WORD *)(a2 + 61);
  *(_WORD *)(a1 + 63) = *(_WORD *)(a2 + 63);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  long long v9 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v9;
  long long v10 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v10;
  long long v11 = *(_OWORD *)(a2 + 176);
  long long v12 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v12;
  *(_OWORD *)(a1 + 176) = v11;
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
  *(unsigned char *)(a1 + 474) = *(unsigned char *)(a2 + 474);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(unsigned char *)(a1 + 681) = *(unsigned char *)(a2 + 681);
  long long v13 = *(_OWORD *)(a2 + 688);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(_OWORD *)(a1 + 688) = v13;
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  uint64_t v86 = *(void *)(a2 + 928);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v86)
  {
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(void *)(a1 + 776) = *(void *)(a2 + 776);
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    long long v14 = *(_OWORD *)(a2 + 800);
    long long v15 = *(_OWORD *)(a2 + 816);
    long long v16 = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 848) = v16;
    *(_OWORD *)(a1 + 800) = v14;
    *(_OWORD *)(a1 + 816) = v15;
    long long v17 = *(_OWORD *)(a2 + 864);
    long long v18 = *(_OWORD *)(a2 + 880);
    long long v19 = *(_OWORD *)(a2 + 912);
    *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 912) = v19;
    *(_OWORD *)(a1 + 864) = v17;
    *(_OWORD *)(a1 + 880) = v18;
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    *(void *)(a1 + 936) = *(void *)(a2 + 936);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (*(void *)(a2 + 952)) {
      goto LABEL_9;
    }
LABEL_17:
    long long v44 = *(_OWORD *)(a2 + 944);
    long long v45 = *(_OWORD *)(a2 + 976);
    *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
    *(_OWORD *)(a1 + 976) = v45;
    *(_OWORD *)(a1 + 944) = v44;
    if (*(void *)(a2 + 1016)) {
      goto LABEL_10;
    }
LABEL_18:
    long long v46 = *(_OWORD *)(a2 + 992);
    long long v47 = *(_OWORD *)(a2 + 1024);
    *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 1024) = v47;
    *(_OWORD *)(a1 + 992) = v46;
    goto LABEL_19;
  }
  long long v35 = *(_OWORD *)(a2 + 760);
  long long v36 = *(_OWORD *)(a2 + 776);
  long long v37 = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
  *(_OWORD *)(a1 + 808) = v37;
  *(_OWORD *)(a1 + 760) = v35;
  *(_OWORD *)(a1 + 776) = v36;
  long long v38 = *(_OWORD *)(a2 + 824);
  long long v39 = *(_OWORD *)(a2 + 840);
  long long v40 = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 872) = v40;
  *(_OWORD *)(a1 + 824) = v38;
  *(_OWORD *)(a1 + 840) = v39;
  long long v41 = *(_OWORD *)(a2 + 888);
  long long v42 = *(_OWORD *)(a2 + 904);
  long long v43 = *(_OWORD *)(a2 + 920);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(_OWORD *)(a1 + 904) = v42;
  *(_OWORD *)(a1 + 920) = v43;
  *(_OWORD *)(a1 + 888) = v41;
  if (!*(void *)(a2 + 952)) {
    goto LABEL_17;
  }
LABEL_9:
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  *(void *)(a1 + 984) = *(void *)(a2 + 984);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (!*(void *)(a2 + 1016)) {
    goto LABEL_18;
  }
LABEL_10:
  *(void *)(a1 + 992) = *(void *)(a2 + 992);
  *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
  *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
  *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_19:
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  uint64_t v48 = *(void *)(a2 + 1096);
  swift_bridgeObjectRetain();
  if (v48)
  {
    *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
    *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    long long v49 = *(_OWORD *)(a2 + 1088);
    long long v50 = *(_OWORD *)(a2 + 1104);
    long long v51 = *(_OWORD *)(a2 + 1120);
    *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
    *(_OWORD *)(a1 + 1104) = v50;
    *(_OWORD *)(a1 + 1120) = v51;
    *(_OWORD *)(a1 + 1088) = v49;
  }
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
LABEL_46:
  uint64_t v84 = *(void *)(a2 + 1208);
  if (!*(void *)(a1 + 1208))
  {
    if (v84)
    {
      *(void *)(a1 + 1208) = v84;
      *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_52:
    *(_OWORD *)(a1 + 1208) = *(_OWORD *)(a2 + 1208);
    return a1;
  }
  if (!v84)
  {
    sub_153C20(a1 + 1208);
    goto LABEL_52;
  }
  *(void *)(a1 + 1208) = v84;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_153BCC(uint64_t a1)
{
  return a1;
}

uint64_t sub_153C20(uint64_t a1)
{
  return a1;
}

void *initializeWithTake for InternalCollectionRecommendationResponse(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4C8uLL);
}

uint64_t assignWithTake for InternalCollectionRecommendationResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 8);
  if (!*(void *)(a1 + 8)) {
    goto LABEL_7;
  }
  if (!v4)
  {
    sub_153BCC(a1 + 8);
LABEL_7:
    memcpy((void *)(a1 + 8), (const void *)(a2 + 8), 0x4B0uLL);
    goto LABEL_26;
  }
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_WORD *)(a1 + 88) = *(_WORD *)(a2 + 88);
  uint64_t v5 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v6;
  long long v7 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v7;
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  long long v8 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v8;
  long long v9 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v9;
  long long v10 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v10;
  long long v11 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v11;
  long long v12 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v12;
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)&long long v12 = *(void *)(a2 + 432);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = v12;
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  uint64_t v13 = *(void *)(a2 + 464);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(void *)(a1 + 464) = v13;
  *(unsigned char *)(a1 + 472) = *(unsigned char *)(a2 + 472);
  *(unsigned char *)(a1 + 473) = *(unsigned char *)(a2 + 473);
  *(unsigned char *)(a1 + 474) = *(unsigned char *)(a2 + 474);
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 504) = *(unsigned char *)(a2 + 504);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 584) = *(unsigned char *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  *(void *)(a1 + 672) = *(void *)(a2 + 672);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 680) = *(unsigned char *)(a2 + 680);
  *(unsigned char *)(a1 + 681) = *(unsigned char *)(a2 + 681);
  *(unsigned char *)(a1 + 688) = *(unsigned char *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(_OWORD *)(a1 + 704) = *(_OWORD *)(a2 + 704);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 752) = *(void *)(a2 + 752);
  if (*(void *)(a1 + 928))
  {
    uint64_t v14 = *(void *)(a2 + 928);
    if (v14)
    {
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      long long v15 = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = v15;
      long long v16 = *(_OWORD *)(a2 + 816);
      *(_OWORD *)(a1 + 800) = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 816) = v16;
      long long v17 = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 832) = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 848) = v17;
      long long v18 = *(_OWORD *)(a2 + 880);
      *(_OWORD *)(a1 + 864) = *(_OWORD *)(a2 + 864);
      *(_OWORD *)(a1 + 880) = v18;
      long long v19 = *(_OWORD *)(a2 + 912);
      *(_OWORD *)(a1 + 896) = *(_OWORD *)(a2 + 896);
      *(_OWORD *)(a1 + 912) = v19;
      *(void *)(a1 + 928) = v14;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      swift_bridgeObjectRelease();
      goto LABEL_10;
    }
    sub_8EF00(a1 + 760);
  }
  long long v20 = *(_OWORD *)(a2 + 904);
  *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 904) = v20;
  *(_OWORD *)(a1 + 920) = *(_OWORD *)(a2 + 920);
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  long long v21 = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 840) = v21;
  long long v22 = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 872) = v22;
  long long v23 = *(_OWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 760) = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 776) = v23;
  long long v24 = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
  *(_OWORD *)(a1 + 808) = v24;
LABEL_10:
  if (*(void *)(a1 + 952))
  {
    uint64_t v25 = *(void *)(a2 + 952);
    if (v25)
    {
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      *(void *)(a1 + 952) = v25;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_8EF54(a1 + 944);
  }
  long long v26 = *(_OWORD *)(a2 + 960);
  *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 960) = v26;
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
LABEL_15:
  if (*(void *)(a1 + 1016))
  {
    uint64_t v27 = *(void *)(a2 + 1016);
    if (v27)
    {
      *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      *(void *)(a1 + 1016) = v27;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
      swift_bridgeObjectRelease();
      goto LABEL_20;
    }
    sub_8EFA8(a1 + 992);
  }
  long long v28 = *(_OWORD *)(a2 + 1008);
  *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 1008) = v28;
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
LABEL_20:
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 1096))
  {
LABEL_24:
    long long v30 = *(_OWORD *)(a2 + 1120);
    *(_OWORD *)(a1 + 1104) = *(_OWORD *)(a2 + 1104);
    *(_OWORD *)(a1 + 1120) = v30;
    *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
    long long v31 = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1088) = v31;
    goto LABEL_25;
  }
  uint64_t v29 = *(void *)(a2 + 1096);
  if (!v29)
  {
    sub_8EFFC(a1 + 1072);
    goto LABEL_24;
  }
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = v29;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
LABEL_25:
  *(_OWORD *)(a1 + 1144) = *(_OWORD *)(a2 + 1144);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1200) = *(void *)(a2 + 1200);
  swift_bridgeObjectRelease();
LABEL_26:
  if (!*(void *)(a1 + 1208))
  {
LABEL_30:
    *(_OWORD *)(a1 + 1208) = *(_OWORD *)(a2 + 1208);
    return a1;
  }
  uint64_t v32 = *(void *)(a2 + 1208);
  if (!v32)
  {
    sub_153C20(a1 + 1208);
    goto LABEL_30;
  }
  *(void *)(a1 + 1208) = v32;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1216) = *(void *)(a2 + 1216);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalCollectionRecommendationResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 1224)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalCollectionRecommendationResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1192) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1208) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1224) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1224) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalCollectionRecommendationResponse()
{
  return &type metadata for InternalCollectionRecommendationResponse;
}

uint64_t dispatch thunk of CollectionRecommendationServiceType.recommend(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_5958;
  return v11(a1, a2, a3, a4);
}

uint64_t dispatch thunk of InternalCollectionRecommendationServiceType.recommend(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_98BD4;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_154690()
{
  return type metadata accessor for InternalCollectionRecommendationService(0);
}

uint64_t type metadata accessor for InternalCollectionRecommendationService(uint64_t a1)
{
  return sub_DA140(a1, qword_271088);
}

uint64_t sub_1546B8()
{
  uint64_t result = sub_1FB430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t getEnumTagSinglePayload for CollectionRecommendationSource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9)
  {
    unsigned int v2 = a2 + 7;
    if (a2 + 7 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 7;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x15481CLL);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 7;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  BOOL v8 = v7 >= 7;
  unsigned int v9 = v7 - 7;
  if (!v8) {
    unsigned int v9 = -1;
  }
  if (v9 + 1 >= 2) {
    return v9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for CollectionRecommendationSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 7;
  if (a3 + 7 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF9) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v7 = ((a2 - 249) >> 8) + 1;
    *uint64_t result = a2 + 7;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x154904);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *uint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

uint64_t sub_15492C(unsigned __int8 *a1)
{
  unsigned int v1 = *a1;
  if (v1 >= 7) {
    return v1 - 6;
  }
  else {
    return 0;
  }
}

unsigned char *sub_154940(unsigned char *result, int a2)
{
  if (a2) {
    *uint64_t result = a2 + 6;
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationSource()
{
  return &type metadata for CollectionRecommendationSource;
}

ValueMetadata *type metadata accessor for CollectionRecommendationSource.CodingKeys()
{
  return &type metadata for CollectionRecommendationSource.CodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendationSource.DerivedCodingKeys()
{
  return &type metadata for CollectionRecommendationSource.DerivedCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendationSource.StandaloneCodingKeys()
{
  return &type metadata for CollectionRecommendationSource.StandaloneCodingKeys;
}

ValueMetadata *type metadata accessor for InternalCollectionRecommendationResponse.CodingKeys()
{
  return &type metadata for InternalCollectionRecommendationResponse.CodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendationResponse.CodingKeys()
{
  return &type metadata for CollectionRecommendationResponse.CodingKeys;
}

uint64_t _s20BooksPersonalization28CollectionRecommendationTypeOwet_0(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF5) {
    goto LABEL_17;
  }
  if (a2 + 11 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 11) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 11;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 11;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xC;
  int v8 = v6 - 12;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s20BooksPersonalization28CollectionRecommendationTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 11 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 11) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF5) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v6 = ((a2 - 245) >> 8) + 1;
    *uint64_t result = a2 + 11;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x154B18);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.CodingKeys()
{
  return &type metadata for CollectionRecommendation.CodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BookCodingKeys()
{
  return &type metadata for CollectionRecommendation.BookCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BooksCodingKeys()
{
  return &type metadata for CollectionRecommendation.BooksCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BooksBasedOnSeedCodingKeys()
{
  return &type metadata for CollectionRecommendation.BooksBasedOnSeedCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BooksByAuthorCodingKeys()
{
  return &type metadata for CollectionRecommendation.BooksByAuthorCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BooksBySuggestedAuthorsCodingKeys()
{
  return &type metadata for CollectionRecommendation.BooksBySuggestedAuthorsCodingKeys;
}

unsigned char *_s20BooksPersonalization40InternalCollectionRecommendationResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *uint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x154C6CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BooksInGenreCodingKeys()
{
  return &type metadata for CollectionRecommendation.BooksInGenreCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.BooksYouMightLikeCodingKeys()
{
  return &type metadata for CollectionRecommendation.BooksYouMightLikeCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.MangaYouMightLikeCodingKeys()
{
  return &type metadata for CollectionRecommendation.MangaYouMightLikeCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.MoreFromYourAuthorsCodingKeys()
{
  return &type metadata for CollectionRecommendation.MoreFromYourAuthorsCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.SeriesCodingKeys()
{
  return &type metadata for CollectionRecommendation.SeriesCodingKeys;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.NextInSeriesCodingKeys()
{
  return &type metadata for CollectionRecommendation.NextInSeriesCodingKeys;
}

unsigned char *_s20BooksPersonalization30CollectionRecommendationSourceO20StandaloneCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x154D90);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendation.MoreInSeriesCodingKeys()
{
  return &type metadata for CollectionRecommendation.MoreInSeriesCodingKeys;
}

unsigned char *_s20BooksPersonalization30CollectionRecommendationSourceO10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x154E94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationOptions.CodingKeys()
{
  return &type metadata for CollectionRecommendationOptions.CodingKeys;
}

uint64_t getEnumTagSinglePayload for CollectionRecommendationRequest.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF4) {
    goto LABEL_17;
  }
  if (a2 + 12 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 12) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 12;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 12;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xD;
  int v8 = v6 - 13;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for CollectionRecommendationRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 12 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 12) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF4) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF3)
  {
    unsigned int v6 = ((a2 - 244) >> 8) + 1;
    *uint64_t result = a2 + 12;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x155028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 12;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionRecommendationRequest.CodingKeys()
{
  return &type metadata for CollectionRecommendationRequest.CodingKeys;
}

unint64_t sub_155064()
{
  unint64_t result = qword_271158;
  if (!qword_271158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271158);
  }
  return result;
}

unint64_t sub_1550BC()
{
  unint64_t result = qword_271160;
  if (!qword_271160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271160);
  }
  return result;
}

unint64_t sub_155114()
{
  unint64_t result = qword_271168;
  if (!qword_271168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271168);
  }
  return result;
}

unint64_t sub_15516C()
{
  unint64_t result = qword_271170;
  if (!qword_271170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271170);
  }
  return result;
}

unint64_t sub_1551C4()
{
  unint64_t result = qword_271178;
  if (!qword_271178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271178);
  }
  return result;
}

unint64_t sub_15521C()
{
  unint64_t result = qword_271180;
  if (!qword_271180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271180);
  }
  return result;
}

unint64_t sub_155274()
{
  unint64_t result = qword_271188;
  if (!qword_271188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271188);
  }
  return result;
}

unint64_t sub_1552CC()
{
  unint64_t result = qword_271190;
  if (!qword_271190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271190);
  }
  return result;
}

unint64_t sub_155324()
{
  unint64_t result = qword_271198;
  if (!qword_271198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271198);
  }
  return result;
}

unint64_t sub_15537C()
{
  unint64_t result = qword_2711A0;
  if (!qword_2711A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711A0);
  }
  return result;
}

unint64_t sub_1553D4()
{
  unint64_t result = qword_2711A8;
  if (!qword_2711A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711A8);
  }
  return result;
}

unint64_t sub_15542C()
{
  unint64_t result = qword_2711B0;
  if (!qword_2711B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711B0);
  }
  return result;
}

unint64_t sub_155484()
{
  unint64_t result = qword_2711B8;
  if (!qword_2711B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711B8);
  }
  return result;
}

unint64_t sub_1554DC()
{
  unint64_t result = qword_2711C0;
  if (!qword_2711C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711C0);
  }
  return result;
}

unint64_t sub_155534()
{
  unint64_t result = qword_2711C8;
  if (!qword_2711C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711C8);
  }
  return result;
}

unint64_t sub_15558C()
{
  unint64_t result = qword_2711D0;
  if (!qword_2711D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711D0);
  }
  return result;
}

unint64_t sub_1555E4()
{
  unint64_t result = qword_2711D8;
  if (!qword_2711D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711D8);
  }
  return result;
}

unint64_t sub_15563C()
{
  unint64_t result = qword_2711E0;
  if (!qword_2711E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711E0);
  }
  return result;
}

unint64_t sub_155694()
{
  unint64_t result = qword_2711E8;
  if (!qword_2711E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2711E8);
  }
  return result;
}

unint64_t sub_1556EC()
{
  unint64_t result = qword_271200;
  if (!qword_271200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271200);
  }
  return result;
}

unint64_t sub_155744()
{
  unint64_t result = qword_271208;
  if (!qword_271208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271208);
  }
  return result;
}

unint64_t sub_15579C()
{
  unint64_t result = qword_271210;
  if (!qword_271210)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271210);
  }
  return result;
}

unint64_t sub_1557F4()
{
  unint64_t result = qword_271218;
  if (!qword_271218)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271218);
  }
  return result;
}

unint64_t sub_15584C()
{
  unint64_t result = qword_271220;
  if (!qword_271220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271220);
  }
  return result;
}

unint64_t sub_1558A4()
{
  unint64_t result = qword_271228;
  if (!qword_271228)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271228);
  }
  return result;
}

unint64_t sub_1558FC()
{
  unint64_t result = qword_271230;
  if (!qword_271230)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271230);
  }
  return result;
}

unint64_t sub_155954()
{
  unint64_t result = qword_271238;
  if (!qword_271238)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271238);
  }
  return result;
}

unint64_t sub_1559AC()
{
  unint64_t result = qword_271240;
  if (!qword_271240)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271240);
  }
  return result;
}

unint64_t sub_155A04()
{
  unint64_t result = qword_271248;
  if (!qword_271248)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271248);
  }
  return result;
}

unint64_t sub_155A5C()
{
  unint64_t result = qword_271250;
  if (!qword_271250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271250);
  }
  return result;
}

unint64_t sub_155AB4()
{
  unint64_t result = qword_271258;
  if (!qword_271258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271258);
  }
  return result;
}

unint64_t sub_155B0C()
{
  unint64_t result = qword_271260;
  if (!qword_271260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271260);
  }
  return result;
}

unint64_t sub_155B64()
{
  unint64_t result = qword_271268;
  if (!qword_271268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271268);
  }
  return result;
}

unint64_t sub_155BBC()
{
  unint64_t result = qword_271270;
  if (!qword_271270)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271270);
  }
  return result;
}

unint64_t sub_155C14()
{
  unint64_t result = qword_271278;
  if (!qword_271278)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271278);
  }
  return result;
}

unint64_t sub_155C6C()
{
  unint64_t result = qword_271280;
  if (!qword_271280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271280);
  }
  return result;
}

unint64_t sub_155CC4()
{
  unint64_t result = qword_271288;
  if (!qword_271288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271288);
  }
  return result;
}

unint64_t sub_155D1C()
{
  unint64_t result = qword_271290;
  if (!qword_271290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271290);
  }
  return result;
}

unint64_t sub_155D74()
{
  unint64_t result = qword_271298;
  if (!qword_271298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271298);
  }
  return result;
}

unint64_t sub_155DCC()
{
  unint64_t result = qword_2712A0;
  if (!qword_2712A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712A0);
  }
  return result;
}

unint64_t sub_155E24()
{
  unint64_t result = qword_2712A8;
  if (!qword_2712A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712A8);
  }
  return result;
}

unint64_t sub_155E7C()
{
  unint64_t result = qword_2712B0;
  if (!qword_2712B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712B0);
  }
  return result;
}

unint64_t sub_155ED4()
{
  unint64_t result = qword_2712B8;
  if (!qword_2712B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712B8);
  }
  return result;
}

unint64_t sub_155F2C()
{
  unint64_t result = qword_2712C0;
  if (!qword_2712C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712C0);
  }
  return result;
}

unint64_t sub_155F84()
{
  unint64_t result = qword_2712C8;
  if (!qword_2712C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712C8);
  }
  return result;
}

unint64_t sub_155FDC()
{
  unint64_t result = qword_2712D0;
  if (!qword_2712D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712D0);
  }
  return result;
}

unint64_t sub_156034()
{
  unint64_t result = qword_2712D8;
  if (!qword_2712D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712D8);
  }
  return result;
}

unint64_t sub_15608C()
{
  unint64_t result = qword_2712E0;
  if (!qword_2712E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712E0);
  }
  return result;
}

unint64_t sub_1560E4()
{
  unint64_t result = qword_2712E8;
  if (!qword_2712E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712E8);
  }
  return result;
}

unint64_t sub_15613C()
{
  unint64_t result = qword_2712F0;
  if (!qword_2712F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712F0);
  }
  return result;
}

unint64_t sub_156194()
{
  unint64_t result = qword_2712F8;
  if (!qword_2712F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2712F8);
  }
  return result;
}

unint64_t sub_1561EC()
{
  unint64_t result = qword_271300;
  if (!qword_271300)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271300);
  }
  return result;
}

unint64_t sub_156244()
{
  unint64_t result = qword_271308;
  if (!qword_271308)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271308);
  }
  return result;
}

unint64_t sub_15629C()
{
  unint64_t result = qword_271310;
  if (!qword_271310)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271310);
  }
  return result;
}

unint64_t sub_1562F4()
{
  unint64_t result = qword_271318;
  if (!qword_271318)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271318);
  }
  return result;
}

unint64_t sub_15634C()
{
  unint64_t result = qword_271320;
  if (!qword_271320)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271320);
  }
  return result;
}

unint64_t sub_1563A4()
{
  unint64_t result = qword_271328;
  if (!qword_271328)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271328);
  }
  return result;
}

unint64_t sub_1563FC()
{
  unint64_t result = qword_271330;
  if (!qword_271330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271330);
  }
  return result;
}

unint64_t sub_156454()
{
  unint64_t result = qword_271338;
  if (!qword_271338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_271338);
  }
  return result;
}

uint64_t sub_1564A8(uint64_t a1, void (*a2)(char *, uint64_t), uint64_t a3)
{
  long long v33 = a2;
  uint64_t v34 = a3;
  uint64_t v5 = type metadata accessor for SeedBasedRecommendationRequest(0);
  uint64_t v32 = *(void *)(v5 - 8);
  __chkstk_darwin(v5 - 8);
  BOOL v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  unsigned int v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  uint64_t v27 = v3;
  long long v37 = _swiftEmptyArrayStorage;
  sub_468BC(0, v8, 0);
  unsigned int v9 = v37;
  uint64_t result = sub_73C38(a1);
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  uint64_t v28 = a1 + 80;
  int64_t v29 = v8;
  uint64_t v30 = v11;
  uint64_t v31 = a1 + 64;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v12 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_23;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_24;
    }
    uint64_t v18 = *(void *)(*(void *)(a1 + 56) + 8 * v12);
    v35[0] = *(unsigned char *)(*(void *)(a1 + 48) + v12);
    uint64_t v36 = v18;
    swift_bridgeObjectRetain();
    v33(v35, v18);
    swift_bridgeObjectRelease();
    long long v37 = v9;
    uint64_t v19 = (uint64_t)v7;
    unint64_t v21 = v9[2];
    unint64_t v20 = v9[3];
    if (v21 >= v20 >> 1)
    {
      sub_468BC(v20 > 1, v21 + 1, 1);
      unsigned int v9 = v37;
    }
    void v9[2] = v21 + 1;
    uint64_t result = sub_159238(v19, (uint64_t)v9+ ((*(unsigned __int8 *)(v32 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v32 + 80))+ *(void *)(v32 + 72) * v21, type metadata accessor for SeedBasedRecommendationRequest);
    int64_t v15 = 1 << *(unsigned char *)(a1 + 32);
    if (v12 >= v15) {
      goto LABEL_25;
    }
    uint64_t v14 = v31;
    uint64_t v22 = *(void *)(v31 + 8 * v17);
    if ((v22 & (1 << v12)) == 0) {
      goto LABEL_26;
    }
    LODWORD(v11) = v30;
    if (*(_DWORD *)(a1 + 36) != v30) {
      goto LABEL_27;
    }
    BOOL v7 = (char *)v19;
    unint64_t v23 = v22 & (-2 << (v12 & 0x3F));
    if (v23)
    {
      int64_t v15 = __clz(__rbit64(v23)) | v12 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v29;
    }
    else
    {
      unint64_t v24 = v17 + 1;
      unint64_t v25 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v29;
      if (v17 + 1 < v25)
      {
        unint64_t v26 = *(void *)(v31 + 8 * v24);
        if (v26)
        {
LABEL_20:
          int64_t v15 = __clz(__rbit64(v26)) + (v24 << 6);
        }
        else
        {
          while (v25 - 2 != v17)
          {
            unint64_t v26 = *(void *)(v28 + 8 * v17++);
            if (v26)
            {
              unint64_t v24 = v17 + 1;
              goto LABEL_20;
            }
          }
        }
      }
    }
    ++v13;
    uint64_t v12 = v15;
    if (v13 == v16) {
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_156790(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (!v2) {
    return (uint64_t)v3;
  }
  int64_t v16 = _swiftEmptyArrayStorage;
  uint64_t result = sub_46588(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  BOOL v7 = (void *)(a1 + 32);
  while (*(void *)(a2 + 16))
  {
    uint64_t result = sub_56168(*v7);
    if ((v8 & 1) == 0) {
      goto LABEL_10;
    }
    memcpy(__dst, (const void *)(*(void *)(a2 + 56) + 560 * result), sizeof(__dst));
    uint64_t result = sub_18FEF8();
    uint64_t v9 = result;
    uint64_t v11 = v10;
    int64_t v16 = v3;
    unint64_t v13 = v3[2];
    unint64_t v12 = v3[3];
    if (v13 >= v12 >> 1)
    {
      uint64_t result = sub_46588(v12 > 1, v13 + 1, 1);
      uint64_t v3 = v16;
    }
    v3[2] = v13 + 1;
    uint64_t v14 = &v3[2 * v13];
    v14[4] = v9;
    v14[5] = v11;
    ++v7;
    if (!--v2) {
      return (uint64_t)v3;
    }
  }
  __break(1u);
LABEL_10:
  __break(1u);
  return result;
}

uint64_t sub_1568B0(uint64_t result, uint64_t a2)
{
  unint64_t v2 = *(void *)(result + 16);
  if (!v2) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v3 = a2;
  unint64_t v4 = 0;
  uint64_t v24 = result + 32;
  uint64_t v5 = a2 + 56;
  uint64_t v6 = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v23 = v6;
    if (v4 <= v2) {
      unint64_t v7 = v2;
    }
    else {
      unint64_t v7 = v4;
    }
    while (1)
    {
      if (v4 == v7)
      {
        __break(1u);
        return result;
      }
      uint64_t v8 = v24 + 80 * v4;
      uint64_t v9 = *(void *)v8;
      char v28 = *(unsigned char *)(v8 + 8);
      uint64_t v27 = *(void *)(v8 + 16);
      char v26 = *(unsigned char *)(v8 + 24);
      uint64_t v29 = *(void *)(v8 + 32);
      char v10 = *(unsigned char *)(v8 + 40);
      uint64_t v11 = *(void *)(v8 + 48);
      uint64_t v25 = *(void *)(v8 + 56);
      uint64_t v12 = *(void *)(v8 + 64);
      uint64_t v13 = *(void *)(v8 + 72);
      ++v4;
      if (!*(void *)(v3 + 16)) {
        break;
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v14 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v15 = result & ~v14;
      if (((*(void *)(v5 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
        break;
      }
      uint64_t v16 = *(void *)(v3 + 48);
      if (*(void *)(v16 + 8 * v15) != v9)
      {
        uint64_t v17 = ~v14;
        do
        {
          unint64_t v15 = (v15 + 1) & v17;
          if (((*(void *)(v5 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            goto LABEL_15;
          }
        }
        while (*(void *)(v16 + 8 * v15) != v9);
      }
      if (v4 == v2) {
        return (uint64_t)v23;
      }
    }
LABEL_15:
    sub_5480C(v29, v10);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v6 = v23;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_467B8(0, v23[2] + 1, 1);
      uint64_t v6 = v23;
    }
    unint64_t v19 = v6[2];
    unint64_t v18 = v6[3];
    unint64_t v20 = v19 + 1;
    if (v19 >= v18 >> 1)
    {
      uint64_t result = sub_467B8(v18 > 1, v19 + 1, 1);
      unint64_t v20 = v19 + 1;
      uint64_t v6 = v23;
    }
    v6[2] = v20;
    unint64_t v21 = &v6[10 * v19];
    v21[4] = v9;
    *((unsigned char *)v21 + 40) = v28;
    v21[6] = v27;
    *((unsigned char *)v21 + 56) = v26;
    v21[8] = v29;
    *((unsigned char *)v21 + 72) = v10;
    v21[10] = v11;
    v21[11] = v25;
    v21[12] = v12;
    v21[13] = v13;
    uint64_t v3 = a2;
  }
  while (v4 != v2);
  return (uint64_t)v6;
}

uint64_t sub_156AFC(uint64_t a1, uint64_t *a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t result = swift_beginAccess();
  if (!v4) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v6 = 0;
  uint64_t v7 = a1 + 32;
  uint64_t v8 = _swiftEmptyArrayStorage;
  do
  {
    if (v6 <= v4) {
      unint64_t v9 = v4;
    }
    else {
      unint64_t v9 = v6;
    }
    while (1)
    {
      if (v6 == v9)
      {
        __break(1u);
        return result;
      }
      char v10 = (long long *)(v7 + 152 * v6);
      long long v11 = v10[5];
      long long v36 = v10[4];
      long long v37 = v11;
      long long v12 = v10[3];
      long long v34 = v10[2];
      long long v35 = v12;
      char v41 = *((unsigned char *)v10 + 144);
      long long v13 = v10[8];
      long long v14 = v10[6];
      long long v39 = v10[7];
      long long v40 = v13;
      long long v38 = v14;
      long long v15 = v10[1];
      long long v32 = *v10;
      long long v33 = v15;
      ++v6;
      uint64_t v16 = *a2;
      if (!*(void *)(*a2 + 16)) {
        break;
      }
      uint64_t v17 = v32;
      uint64_t result = sub_1FC7D0();
      uint64_t v18 = -1 << *(unsigned char *)(v16 + 32);
      unint64_t v19 = result & ~v18;
      if (((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
        break;
      }
      uint64_t v20 = *(void *)(v16 + 48);
      if (*(void *)(v20 + 8 * v19) != v17)
      {
        uint64_t v21 = ~v18;
        do
        {
          unint64_t v19 = (v19 + 1) & v21;
          if (((*(void *)(v16 + 56 + ((v19 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v19) & 1) == 0) {
            goto LABEL_15;
          }
        }
        while (*(void *)(v20 + 8 * v19) != v17);
      }
      if (v6 == v4) {
        return (uint64_t)v8;
      }
    }
LABEL_15:
    sub_54834((uint64_t)&v32);
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    long long v42 = v8;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_467D8(0, v8[2] + 1, 1);
      uint64_t v8 = v42;
    }
    unint64_t v23 = v8[2];
    unint64_t v22 = v8[3];
    if (v23 >= v22 >> 1)
    {
      uint64_t result = sub_467D8(v22 > 1, v23 + 1, 1);
      uint64_t v8 = v42;
    }
    v8[2] = v23 + 1;
    uint64_t v24 = &v8[19 * v23];
    long long v25 = v33;
    *((_OWORD *)v24 + 2) = v32;
    *((_OWORD *)v24 + 3) = v25;
    long long v26 = v34;
    long long v27 = v35;
    long long v28 = v37;
    *((_OWORD *)v24 + 6) = v36;
    *((_OWORD *)v24 + 7) = v28;
    *((_OWORD *)v24 + 4) = v26;
    *((_OWORD *)v24 + 5) = v27;
    long long v29 = v38;
    long long v30 = v39;
    long long v31 = v40;
    *((unsigned char *)v24 + 176) = v41;
    *((_OWORD *)v24 + 9) = v30;
    *((_OWORD *)v24 + 10) = v31;
    *((_OWORD *)v24 + 8) = v29;
  }
  while (v6 != v4);
  return (uint64_t)v8;
}

uint64_t sub_156D14(uint64_t result, uint64_t a2, const void *a3)
{
  unint64_t v3 = *(void *)(result + 16);
  if (!v3) {
    return (uint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t v6 = 0;
  uint64_t v27 = result + 32;
  uint64_t v7 = _swiftEmptyArrayStorage;
  do
  {
    if (v6 <= v3) {
      unint64_t v8 = v3;
    }
    else {
      unint64_t v8 = v6;
    }
    uint64_t v9 = v27 + 152 * v6;
    unint64_t v10 = v6;
    while (1)
    {
      if (v8 == v10)
      {
        __break(1u);
        return result;
      }
      long long v11 = *(_OWORD *)(v9 + 112);
      long long v36 = *(_OWORD *)(v9 + 96);
      long long v37 = v11;
      long long v38 = *(_OWORD *)(v9 + 128);
      char v39 = *(unsigned char *)(v9 + 144);
      long long v12 = *(_OWORD *)(v9 + 48);
      long long v32 = *(_OWORD *)(v9 + 32);
      long long v33 = v12;
      long long v13 = *(_OWORD *)(v9 + 80);
      long long v34 = *(_OWORD *)(v9 + 64);
      long long v35 = v13;
      long long v14 = *(_OWORD *)(v9 + 16);
      long long v30 = *(_OWORD *)v9;
      long long v31 = v14;
      if (!*(void *)(a2 + 16)) {
        break;
      }
      uint64_t v15 = sub_56168(v30);
      if ((v16 & 1) == 0) {
        break;
      }
      memcpy(__dst, (const void *)(*(void *)(a2 + 56) + 384 * v15), sizeof(__dst));
      memcpy(__src, a3, 0x16BuLL);
      sub_54834((uint64_t)&v30);
      if (BookHistory.isEligibleForRecommendation(with:)(__src)) {
        goto LABEL_14;
      }
      ++v10;
      uint64_t result = sub_7A018((uint64_t)&v30);
      v9 += 152;
      if (v3 == v10) {
        return (uint64_t)v7;
      }
    }
    sub_54834((uint64_t)&v30);
LABEL_14:
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    long long v40 = v7;
    if ((result & 1) == 0)
    {
      uint64_t result = sub_467D8(0, v7[2] + 1, 1);
      uint64_t v7 = v40;
    }
    unint64_t v18 = v7[2];
    unint64_t v17 = v7[3];
    if (v18 >= v17 >> 1)
    {
      uint64_t result = sub_467D8(v17 > 1, v18 + 1, 1);
      uint64_t v7 = v40;
    }
    unint64_t v6 = v10 + 1;
    v7[2] = v18 + 1;
    unint64_t v19 = &v7[19 * v18];
    long long v20 = v31;
    *((_OWORD *)v19 + 2) = v30;
    *((_OWORD *)v19 + 3) = v20;
    long long v21 = v32;
    long long v22 = v33;
    long long v23 = v35;
    *((_OWORD *)v19 + 6) = v34;
    *((_OWORD *)v19 + 7) = v23;
    *((_OWORD *)v19 + 4) = v21;
    *((_OWORD *)v19 + 5) = v22;
    long long v24 = v36;
    long long v25 = v37;
    long long v26 = v38;
    *((unsigned char *)v19 + 176) = v39;
    *((_OWORD *)v19 + 9) = v25;
    *((_OWORD *)v19 + 10) = v26;
    *((_OWORD *)v19 + 8) = v24;
  }
  while (v3 - 1 != v10);
  return (uint64_t)v7;
}

void *sub_156F10(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 56;
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  uint64_t v7 = _swiftEmptyArrayStorage;
  do
  {
    unint64_t v8 = (uint64_t *)(v4 + 152 * v6);
    if ((v8[3] & 1) == 0)
    {
      if (*(void *)(a2 + 16))
      {
        uint64_t v9 = *v8;
        uint64_t v10 = v8[2];
        uint64_t v11 = sub_1FC7D0();
        uint64_t v12 = -1 << *(unsigned char *)(a2 + 32);
        unint64_t v13 = v11 & ~v12;
        if ((*(void *)(v5 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
        {
          uint64_t v14 = *(void *)(a2 + 48);
          if (*(void *)(v14 + 8 * v13) == v10)
          {
LABEL_12:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v7 = sub_41858(0, v7[2] + 1, 1, v7);
            }
            unint64_t v17 = v7[2];
            unint64_t v16 = v7[3];
            if (v17 >= v16 >> 1) {
              uint64_t v7 = sub_41858((void *)(v16 > 1), v17 + 1, 1, v7);
            }
            v7[2] = v17 + 1;
            v7[v17 + 4] = v9;
          }
          else
          {
            uint64_t v15 = ~v12;
            while (1)
            {
              unint64_t v13 = (v13 + 1) & v15;
              if (((*(void *)(v5 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
                break;
              }
              if (*(void *)(v14 + 8 * v13) == v10) {
                goto LABEL_12;
              }
            }
          }
        }
      }
    }
    ++v6;
  }
  while (v6 != v2);
  swift_bridgeObjectRelease();
  return v7;
}

unint64_t sub_1570A4(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  unint64_t v13 = _swiftEmptyArrayStorage;
  while (1)
  {
    while (v9)
    {
      unint64_t v15 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v16 = v15 | (v12 << 6);
      if (*(void *)(a2 + 16))
      {
LABEL_4:
        unint64_t result = sub_4C69C(*(unsigned char *)(*(void *)(a1 + 48) + v16));
        if (v14)
        {
          uint64_t v20 = *(void *)(*(void *)(a2 + 56) + 8 * result);
          swift_bridgeObjectRetain();
          unint64_t result = swift_isUniquelyReferenced_nonNull_native();
          uint64_t v24 = v3;
          if ((result & 1) == 0)
          {
            unint64_t result = (unint64_t)sub_43930(0, v13[2] + 1, 1, v13);
            unint64_t v13 = (void *)result;
          }
          unint64_t v22 = v13[2];
          unint64_t v21 = v13[3];
          long long v23 = v13;
          if (v22 >= v21 >> 1)
          {
            unint64_t result = (unint64_t)sub_43930((void *)(v21 > 1), v22 + 1, 1, v13);
            long long v23 = (void *)result;
          }
          v23[2] = v22 + 1;
          unint64_t v13 = v23;
          v23[v22 + 4] = v20;
          uint64_t v3 = v24;
        }
      }
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v12 >= v10) {
      goto LABEL_31;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v12);
    if (!v18) {
      break;
    }
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v12 << 6);
    if (*(void *)(a2 + 16)) {
      goto LABEL_4;
    }
  }
  int64_t v19 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_31;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_19;
  }
  int64_t v19 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_31;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_19;
  }
  int64_t v19 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_31;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_19;
  }
  int64_t v19 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_31:
    swift_release();
    return (unint64_t)v13;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_19:
    int64_t v12 = v19;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v12 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_31;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v12);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t sub_1572B0(uint64_t a1, void (*a2)(unsigned char *, uint64_t *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v18 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v18 >= v8) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v4 + 8 * v18);
    ++v10;
    if (!v19)
    {
      int64_t v10 = v18 + 1;
      if (v18 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v19 = *(void *)(v4 + 8 * v10);
      if (!v19)
      {
        int64_t v10 = v18 + 2;
        if (v18 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v19 = *(void *)(v4 + 8 * v10);
        if (!v19)
        {
          int64_t v10 = v18 + 3;
          if (v18 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v19 = *(void *)(v4 + 8 * v10);
          if (!v19) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v12 = __clz(__rbit64(v19)) + (v10 << 6);
LABEL_5:
    char v13 = *(unsigned char *)(*(void *)(a1 + 48) + v12);
    uint64_t v14 = *(void *)(a1 + 56) + 24 * v12;
    uint64_t v15 = *(void *)v14;
    char v16 = *(unsigned char *)(v14 + 8);
    uint64_t v17 = *(void *)(v14 + 16);
    v21[0] = v13;
    uint64_t v22 = v15;
    char v23 = v16;
    uint64_t v24 = v17;
    swift_bridgeObjectRetain();
    a2(v21, &v22);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v20 = v18 + 4;
  if (v20 >= v8) {
    return swift_release();
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
    int64_t v10 = v20;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v19 = *(void *)(v4 + 8 * v10);
    ++v20;
    if (v19) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_157460(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F666E4972657375 && a2 == 0xE800000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x666E4965726F7473 && a2 == 0xE90000000000006FLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002195D0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x536465776F6C6C61 && a2 == 0xEC00000073656C61 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x746963696C707865 && a2 == 0xEF6465776F6C6C41 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x80000000002195F0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000219610 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000000219630 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000000219660 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x8000000000219680 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000000002196A0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x80000000002196D0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0x656469727265766FLL && a2 == 0xEE00656372756F53)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 12;
    }
    else {
      return 13;
    }
  }
}

uint64_t sub_1579A4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E756F4378616DLL && a2 == 0xE800000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xEA00000000007365)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_157AA4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 12895 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_157BB4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1802465122 && a2 == 0xE400000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B6F6F62 && a2 == 0xE500000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000216AA0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x417942736B6F6F62 && a2 == 0xED0000726F687475 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000017 && a2 == 0x8000000000216200 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x476E49736B6F6F62 && a2 == 0xEC00000065726E65 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000216220 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000216240 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000013 && a2 == 0x8000000000216260 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x736569726573 && a2 == 0xE600000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0x65536E497478656ELL && a2 == 0xEC00000073656972 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x65536E4965726F6DLL && a2 == 0xEC00000073656972)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 11;
    }
    else {
      return 12;
    }
  }
}

uint64_t sub_15809C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 12383 && a2 == 0xE200000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 12639 && a2 == 0xE200000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_158160(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656D6D6F636572 && a2 == 0xEF736E6F69746164;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000015 && a2 == 0x8000000000219700 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000219720)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

unint64_t *sub_1582D0(unint64_t *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v21 = result;
  uint64_t v22 = 0;
  int64_t v6 = 0;
  uint64_t v7 = a3 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & *(void *)(a3 + 64);
  int64_t v11 = (unint64_t)(v8 + 63) >> 6;
  while (1)
  {
    if (v10)
    {
      unint64_t v12 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v13 = v12 | (v6 << 6);
      goto LABEL_5;
    }
    int64_t v16 = v6 + 1;
    if (__OFADD__(v6, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v16 >= v11) {
      return sub_737C0(v21, a2, v22, a3);
    }
    unint64_t v17 = *(void *)(v7 + 8 * v16);
    ++v6;
    if (!v17)
    {
      int64_t v6 = v16 + 1;
      if (v16 + 1 >= v11) {
        return sub_737C0(v21, a2, v22, a3);
      }
      unint64_t v17 = *(void *)(v7 + 8 * v6);
      if (!v17)
      {
        int64_t v6 = v16 + 2;
        if (v16 + 2 >= v11) {
          return sub_737C0(v21, a2, v22, a3);
        }
        unint64_t v17 = *(void *)(v7 + 8 * v6);
        if (!v17) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v10 = (v17 - 1) & v17;
    unint64_t v13 = __clz(__rbit64(v17)) + (v6 << 6);
LABEL_5:
    unsigned __int8 v14 = *(unsigned char *)(*(void *)(a3 + 48) + v13);
    swift_bridgeObjectRetain();
    char v15 = sub_39B60(v14, a4);
    uint64_t result = (unint64_t *)swift_bridgeObjectRelease();
    if (v15)
    {
      *(unint64_t *)((char *)v21 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v22++, 1))
      {
        __break(1u);
        return sub_737C0(v21, a2, v22, a3);
      }
    }
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v11) {
    return sub_737C0(v21, a2, v22, a3);
  }
  unint64_t v17 = *(void *)(v7 + 8 * v18);
  if (v17)
  {
    int64_t v6 = v18;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v6 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v6 >= v11) {
      return sub_737C0(v21, a2, v22, a3);
    }
    unint64_t v17 = *(void *)(v7 + 8 * v6);
    ++v18;
    if (v17) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

unint64_t *sub_158494(uint64_t a1, uint64_t a2)
{
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  unint64_t v7 = (unint64_t)((1 << v5) + 63) >> 6;
  size_t v8 = 8 * v7;
  uint64_t isStackAllocationSafe = swift_bridgeObjectRetain_n();
  if (v6 <= 0xD || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1582D0((unint64_t *)((char *)&v13 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0)), v7, a1, a2);
    swift_bridgeObjectRelease();
    if (v2) {
      swift_willThrow();
    }
    swift_bridgeObjectRelease_n();
  }
  else
  {
    int64_t v11 = (void *)swift_slowAlloc();
    bzero(v11, v8);
    swift_bridgeObjectRetain();
    unint64_t v10 = sub_1582D0((unint64_t *)v11, v7, a1, a2);
    swift_bridgeObjectRelease();
    swift_slowDealloc();
    swift_bridgeObjectRelease_n();
  }
  return v10;
}

uint64_t sub_158650(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x64657669726564 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6C61646E617473 && a2 == 0xEA0000000000656ELL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_158750(char *a1, uint64_t a2)
{
  return sub_14B1B8(a1, a2, *(void *)(v2 + 16), *(void *)(v2 + 24), *(void *)(v2 + 32), *(uint64_t **)(v2 + 40));
}

uint64_t *sub_15875C(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1587DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t *sub_158878(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1588F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

unint64_t sub_158994()
{
  unint64_t result = qword_271360;
  if (!qword_271360)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_271360);
  }
  return result;
}

uint64_t sub_1589E8()
{
  swift_bridgeObjectRelease();
  if (v0[3])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v0[118])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[121])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    if (v0[129])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    if (v0[139])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[153])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 1240, 7);
}

uint64_t sub_158B68(uint64_t result)
{
  if ((*(_DWORD *)(*(void *)(*(void *)(result + 24) - 8) + 80) & 0x20000) != 0) {
    return swift_slowDealloc();
  }
  return result;
}

uint64_t sub_158BBC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_271370);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_158C24(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v8 = v2[4];
  uint64_t v9 = v2[5];
  uint64_t v10 = v2[6];
  uint64_t v11 = v2[7];
  unint64_t v12 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v12;
  *unint64_t v12 = v3;
  v12[1] = sub_98BD4;
  return sub_149484(a1, a2, v6, v7, v8, v9, v10, v11);
}

uint64_t sub_158D14()
{
  uint64_t v1 = sub_1FB430();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = *(void *)(v2 + 64);
  swift_unknownObjectRelease();
  sub_1264C((uint64_t)(v0 + 32));
  sub_158F14(*((void *)v0 + 9), *((void *)v0 + 10), *((void *)v0 + 11), *((void *)v0 + 12), *((void *)v0 + 13), *((void *)v0 + 14), *((void *)v0 + 15));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*((void *)v0 + 131))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*((void *)v0 + 134))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*((void *)v0 + 142))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*((void *)v0 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (v3 + 1273) & ~v3;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v2 + 8))(&v0[v5], v1);

  return _swift_deallocObject(v0, v5 + v4, v3 | 7);
}

uint64_t sub_158F14(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  switch(a7 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_4;
    case 5uLL:
      goto LABEL_3;
    case 6uLL:
      swift_bridgeObjectRelease();
LABEL_3:
      swift_bridgeObjectRelease();
LABEL_4:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_158FB0(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_15900C(uint64_t a1)
{
  sub_1FB430();
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v6 = v1 + 32;
  uint64_t v7 = v1 + 72;
  uint64_t v8 = v1 + 144;
  uint64_t v9 = *(void *)(v1 + 1264);
  char v10 = *(unsigned char *)(v1 + 1272);
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v11;
  *uint64_t v11 = v2;
  v11[1] = sub_5958;
  return sub_14A498(a1, v4, v5, v6, v7, v8, v9, v10);
}

uint64_t sub_15913C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_159174(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_98BD4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_2713B0 + dword_2713B0);
  return v6(a1, v4);
}

uint64_t sub_15922C@<X0>(char *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  return sub_147B10(a1, a2, *(long long **)(v3 + 16), *(void *)(v3 + 24), *(void *)(v3 + 32), a3);
}

uint64_t sub_159238(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

void *sub_1592A0(char *a1)
{
  return sub_12328(a1, *(void **)(v1 + 16), *(void **)(v1 + 24));
}

unint64_t sub_1592BC()
{
  unint64_t result = qword_2713D8;
  if (!qword_2713D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2713D8);
  }
  return result;
}

uint64_t sub_159320()
{
  return 0x6C696261626F7270;
}

uint64_t sub_159344(uint64_t a1)
{
  unint64_t v2 = sub_15E334();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159380(uint64_t a1)
{
  unint64_t v2 = sub_15E334();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1593BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_271698, (void (*)(void))sub_15E334, a2);
}

uint64_t sub_1593F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271578, (void (*)(void))sub_15E334);
}

uint64_t sub_159434(uint64_t a1)
{
  unint64_t v2 = sub_15E388();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159470(uint64_t a1)
{
  unint64_t v2 = sub_15E388();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1594AC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716A0, (void (*)(void))sub_15E388, a2);
}

uint64_t sub_1594E8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271588, (void (*)(void))sub_15E388);
}

uint64_t sub_159524(uint64_t a1)
{
  unint64_t v2 = sub_15E3DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159560(uint64_t a1)
{
  unint64_t v2 = sub_15E3DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15959C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716A8, (void (*)(void))sub_15E3DC, a2);
}

uint64_t sub_1595D8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271598, (void (*)(void))sub_15E3DC);
}

uint64_t sub_159614(uint64_t a1)
{
  unint64_t v2 = sub_15E430();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159650(uint64_t a1)
{
  unint64_t v2 = sub_15E430();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15968C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716B0, (void (*)(void))sub_15E430, a2);
}

uint64_t sub_1596C8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_2715A8, (void (*)(void))sub_15E430);
}

uint64_t sub_159704(uint64_t a1)
{
  unint64_t v2 = sub_15E484();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159740(uint64_t a1)
{
  unint64_t v2 = sub_15E484();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15977C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716B8, (void (*)(void))sub_15E484, a2);
}

uint64_t sub_1597B8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_2715B8, (void (*)(void))sub_15E484);
}

uint64_t sub_1597F4(uint64_t a1)
{
  unint64_t v2 = sub_15E4D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159830(uint64_t a1)
{
  unint64_t v2 = sub_15E4D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15986C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716C0, (void (*)(void))sub_15E4D8, a2);
}

uint64_t sub_1598A8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_2715C8, (void (*)(void))sub_15E4D8);
}

uint64_t sub_1598E4(uint64_t a1)
{
  unint64_t v2 = sub_15E52C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159920(uint64_t a1)
{
  unint64_t v2 = sub_15E52C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15995C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716C8, (void (*)(void))sub_15E52C, a2);
}

uint64_t sub_159998(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_2715D8, (void (*)(void))sub_15E52C);
}

uint64_t sub_1599D4(uint64_t a1)
{
  unint64_t v2 = sub_15E580();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159A10(uint64_t a1)
{
  unint64_t v2 = sub_15E580();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159A4C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716D0, (void (*)(void))sub_15E580, a2);
}

uint64_t sub_159A88(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_2715E8, (void (*)(void))sub_15E580);
}

uint64_t sub_159AC4(uint64_t a1)
{
  unint64_t v2 = sub_15E5D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159B00(uint64_t a1)
{
  unint64_t v2 = sub_15E5D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159B3C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716D8, (void (*)(void))sub_15E5D4, a2);
}

uint64_t sub_159B78(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_2715F8, (void (*)(void))sub_15E5D4);
}

uint64_t sub_159BB4(uint64_t a1)
{
  unint64_t v2 = sub_15E628();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159BF0(uint64_t a1)
{
  unint64_t v2 = sub_15E628();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159C2C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716E0, (void (*)(void))sub_15E628, a2);
}

uint64_t sub_159C68(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271608, (void (*)(void))sub_15E628);
}

uint64_t sub_159CA4(uint64_t a1)
{
  unint64_t v2 = sub_15E67C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159CE0(uint64_t a1)
{
  unint64_t v2 = sub_15E67C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159D1C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716E8, (void (*)(void))sub_15E67C, a2);
}

uint64_t sub_159D58(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271618, (void (*)(void))sub_15E67C);
}

uint64_t sub_159D94(uint64_t a1)
{
  unint64_t v2 = sub_15E6D0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159DD0(uint64_t a1)
{
  unint64_t v2 = sub_15E6D0();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159E0C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716F0, (void (*)(void))sub_15E6D0, a2);
}

uint64_t sub_159E48(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271628, (void (*)(void))sub_15E6D0);
}

uint64_t sub_159E84(uint64_t a1)
{
  unint64_t v2 = sub_15E724();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159EC0(uint64_t a1)
{
  unint64_t v2 = sub_15E724();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159EFC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_2716F8, (void (*)(void))sub_15E724, a2);
}

uint64_t sub_159F38(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271638, (void (*)(void))sub_15E724);
}

uint64_t sub_159F74(uint64_t a1)
{
  unint64_t v2 = sub_15E778();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_159FB0(uint64_t a1)
{
  unint64_t v2 = sub_15E778();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_159FEC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_271700, (void (*)(void))sub_15E778, a2);
}

uint64_t sub_15A028(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271648, (void (*)(void))sub_15E778);
}

uint64_t sub_15A064(uint64_t a1)
{
  unint64_t v2 = sub_15E7CC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15A0A0(uint64_t a1)
{
  unint64_t v2 = sub_15E7CC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15A0DC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_271708, (void (*)(void))sub_15E7CC, a2);
}

uint64_t sub_15A118(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271658, (void (*)(void))sub_15E7CC);
}

uint64_t sub_15A154(uint64_t a1)
{
  unint64_t v2 = sub_15E820();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15A190(uint64_t a1)
{
  unint64_t v2 = sub_15E820();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15A1CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_271710, (void (*)(void))sub_15E820, a2);
}

uint64_t sub_15A208(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271668, (void (*)(void))sub_15E820);
}

uint64_t sub_15A244(uint64_t a1)
{
  unint64_t v2 = sub_15E874();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15A280(uint64_t a1)
{
  unint64_t v2 = sub_15E874();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15A2BC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_271718, (void (*)(void))sub_15E874, a2);
}

uint64_t sub_15A2F8(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271678, (void (*)(void))sub_15E874);
}

uint64_t sub_15A334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6C696261626F7270 && a2 == 0xEB00000000797469)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_15A3E4(uint64_t a1)
{
  unint64_t v2 = sub_15E8C8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15A420(uint64_t a1)
{
  unint64_t v2 = sub_15E8C8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15A45C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return sub_15A498(a1, &qword_271720, (void (*)(void))sub_15E8C8, a2);
}

uint64_t sub_15A498@<X0>(void *a1@<X0>, uint64_t *a2@<X3>, void (*a3)(void)@<X4>, void *a4@<X8>)
{
  uint64_t v13 = a4;
  uint64_t v7 = sub_12124(a2);
  uint64_t v14 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v13 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  a3();
  sub_1FC850();
  if (v4) {
    return sub_1264C((uint64_t)a1);
  }
  sub_1FC3C0();
  uint64_t v11 = v10;
  (*(void (**)(char *, uint64_t))(v14 + 8))(v9, v7);
  uint64_t result = sub_1264C((uint64_t)a1);
  void *v13 = v11;
  return result;
}

uint64_t sub_15A60C(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_15A648(a1, a2, a3, &qword_271688, (void (*)(void))sub_15E8C8);
}

uint64_t sub_15A648(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void))
{
  uint64_t v7 = sub_12124(a4);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v12 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  a5();
  sub_1FC870();
  sub_1FC500();
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_15A78C(char a1)
{
  unint64_t result = 0x6E61576F54646461;
  switch(a1)
  {
    case 1:
    case 10:
      unint64_t result = 0xD000000000000012;
      break;
    case 2:
      unint64_t result = 0x72706D496B6F6F62;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0x637275506B6F6F62;
      break;
    case 5:
      unint64_t result = 0x527361576B6F6F62;
      break;
    case 6:
      unint64_t result = 0x64616F6C6E776F64;
      break;
    case 7:
      unint64_t result = 0x746963696C707865;
      break;
    case 8:
      unint64_t result = 0x6B6F6F4265646968;
      break;
    case 9:
      unint64_t result = 0x694673416B72616DLL;
      break;
    case 11:
      unint64_t result = 0x676E69746172;
      break;
    case 12:
      unint64_t result = 0xD000000000000014;
      break;
    case 13:
      unint64_t result = 0x615365766F6D6572;
      break;
    case 14:
      unint64_t result = 0x4C74736567677573;
      break;
    case 15:
      unint64_t result = 0x4D74736567677573;
      break;
    case 16:
      unint64_t result = 0x6572616873;
      break;
    case 17:
      unint64_t result = 0x657461726E75;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15AA04(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_12124(&qword_271428);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_15D3E4();
  sub_1FC870();
  uint64_t v11 = *v3;
  HIBYTE(v10) = 0;
  sub_15D438();
  sub_1FC530();
  if (!v2)
  {
    uint64_t v11 = v3[1];
    HIBYTE(v10) = 1;
    sub_15D48C();
    sub_1FC530();
    uint64_t v11 = v3[2];
    HIBYTE(v10) = 2;
    sub_15D4E0();
    sub_1FC530();
    uint64_t v11 = v3[3];
    HIBYTE(v10) = 3;
    sub_15D534();
    sub_1FC530();
    uint64_t v11 = v3[4];
    HIBYTE(v10) = 4;
    sub_15D588();
    sub_1FC530();
    uint64_t v11 = v3[5];
    HIBYTE(v10) = 5;
    sub_15D5DC();
    sub_1FC530();
    uint64_t v11 = v3[6];
    HIBYTE(v10) = 6;
    sub_15D630();
    sub_1FC530();
    uint64_t v11 = v3[7];
    HIBYTE(v10) = 7;
    sub_15D684();
    sub_1FC530();
    uint64_t v11 = v3[8];
    HIBYTE(v10) = 8;
    sub_15D6D8();
    sub_1FC530();
    uint64_t v11 = v3[9];
    HIBYTE(v10) = 9;
    sub_15D72C();
    sub_1FC530();
    uint64_t v11 = v3[10];
    HIBYTE(v10) = 10;
    sub_15D780();
    sub_1FC530();
    uint64_t v11 = v3[11];
    HIBYTE(v10) = 11;
    sub_15D7D4();
    sub_1FC530();
    uint64_t v11 = v3[12];
    HIBYTE(v10) = 12;
    sub_15D828();
    sub_1FC530();
    uint64_t v11 = v3[13];
    HIBYTE(v10) = 13;
    sub_15D87C();
    sub_1FC530();
    uint64_t v11 = v3[14];
    HIBYTE(v10) = 14;
    sub_15D8D0();
    sub_1FC530();
    uint64_t v11 = v3[15];
    HIBYTE(v10) = 15;
    sub_15D924();
    sub_1FC530();
    uint64_t v11 = v3[16];
    HIBYTE(v10) = 16;
    sub_15D978();
    sub_1FC530();
    uint64_t v11 = v3[17];
    HIBYTE(v10) = 17;
    sub_15D9CC();
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_15AF94()
{
  return sub_15A78C(*v0);
}

uint64_t sub_15AF9C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_15C8C0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_15AFC4(uint64_t a1)
{
  unint64_t v2 = sub_15D3E4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15B000(uint64_t a1)
{
  unint64_t v2 = sub_15D3E4();

  return CodingKey.debugDescription.getter(a1, v2);
}

__n128 sub_15B03C@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_15C168(a1, (double *)v8);
  if (!v2)
  {
    long long v5 = v8[7];
    *(_OWORD *)(a2 + 96) = v8[6];
    *(_OWORD *)(a2 + 112) = v5;
    *(_OWORD *)(a2 + 128) = v8[8];
    long long v6 = v8[3];
    *(_OWORD *)(a2 + 32) = v8[2];
    *(_OWORD *)(a2 + 48) = v6;
    long long v7 = v8[5];
    *(_OWORD *)(a2 + 64) = v8[4];
    *(_OWORD *)(a2 + 80) = v7;
    __n128 result = (__n128)v8[1];
    *(_OWORD *)a2 = v8[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

uint64_t sub_15B098(void *a1)
{
  return sub_15AA04(a1);
}

unint64_t sub_15B0B0()
{
  unint64_t result = 0x746E65764578616DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x65726E654778616DLL;
      break;
    case 2:
      unint64_t result = 0x6F6874754178616DLL;
      break;
    case 3:
      unint64_t result = 0x6E6F43746E657665;
      break;
    case 4:
      unint64_t result = 0x614E74757074756FLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15B1A4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_15D0EC(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_15B1CC(uint64_t a1)
{
  unint64_t v2 = sub_15B510();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15B208(uint64_t a1)
{
  unint64_t v2 = sub_15B510();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabiConfiguration.EventAggregationConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = v1;
  uint64_t v5 = sub_12124(&qword_2713E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v3 + 8);
  uint64_t v19 = *(void *)(v3 + 16);
  uint64_t v20 = v9;
  uint64_t v18 = *(void *)(v3 + 168);
  uint64_t v17 = *(void *)(v3 + 176);
  sub_5D64(a1, a1[3]);
  sub_15B510();
  sub_1FC870();
  LOBYTE(v21) = 0;
  sub_1FC520();
  if (!v2)
  {
    uint64_t v10 = v18;
    uint64_t v11 = v17;
    LOBYTE(v21) = 1;
    sub_1FC520();
    LOBYTE(v21) = 2;
    sub_1FC520();
    long long v12 = *(_OWORD *)(v3 + 136);
    long long v27 = *(_OWORD *)(v3 + 120);
    long long v28 = v12;
    long long v29 = *(_OWORD *)(v3 + 152);
    long long v13 = *(_OWORD *)(v3 + 72);
    long long v23 = *(_OWORD *)(v3 + 56);
    long long v24 = v13;
    long long v14 = *(_OWORD *)(v3 + 104);
    long long v25 = *(_OWORD *)(v3 + 88);
    long long v26 = v14;
    long long v15 = *(_OWORD *)(v3 + 40);
    long long v21 = *(_OWORD *)(v3 + 24);
    long long v22 = v15;
    char v30 = 3;
    sub_15B564();
    sub_1FC530();
    *(void *)&long long v21 = v10;
    char v30 = 4;
    sub_12124(&qword_26C6D8);
    sub_15BA44(&qword_26C6E0);
    sub_1FC530();
    *(void *)&long long v21 = v11;
    char v30 = 5;
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

unint64_t sub_15B510()
{
  unint64_t result = qword_2713F0;
  if (!qword_2713F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2713F0);
  }
  return result;
}

unint64_t sub_15B564()
{
  unint64_t result = qword_2713F8;
  if (!qword_2713F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2713F8);
  }
  return result;
}

uint64_t TabiConfiguration.EventAggregationConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_271400);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  long long v71 = a1;
  sub_5D64(a1, v9);
  sub_15B510();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)v71);
  }
  uint64_t v10 = v6;
  LOBYTE(v29[0]) = 0;
  uint64_t v11 = v5;
  uint64_t v12 = sub_1FC3E0();
  LOBYTE(v29[0]) = 1;
  uint64_t v13 = sub_1FC3E0();
  LOBYTE(v29[0]) = 2;
  uint64_t v25 = sub_1FC3E0();
  char v52 = 3;
  sub_15B9F0();
  sub_1FC3F0();
  long long v49 = v59;
  long long v50 = v60;
  long long v51 = v61;
  long long v45 = v55;
  long long v46 = v56;
  long long v47 = v57;
  long long v48 = v58;
  long long v43 = v53;
  long long v44 = v54;
  long long v68 = v59;
  long long v69 = v60;
  long long v70 = v61;
  long long v64 = v55;
  long long v65 = v56;
  long long v66 = v57;
  long long v67 = v58;
  long long v62 = v53;
  long long v63 = v54;
  uint64_t v14 = sub_12124(&qword_26C6D8);
  LOBYTE(v26) = 4;
  v24[1] = sub_15BA44(&qword_26C708);
  v24[2] = v14;
  sub_1FC3F0();
  char v41 = 5;
  v24[0] = v29[0];
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  *(_OWORD *)((char *)&v27[5] + 8) = v48;
  *(_OWORD *)((char *)&v27[6] + 8) = v49;
  *(_OWORD *)((char *)&v27[7] + 8) = v50;
  *(_OWORD *)((char *)&v27[8] + 8) = v51;
  *(_OWORD *)((char *)&v27[1] + 8) = v44;
  *(_OWORD *)((char *)&v27[2] + 8) = v45;
  *(_OWORD *)((char *)&v27[3] + 8) = v46;
  *(_OWORD *)((char *)&v27[4] + 8) = v47;
  uint64_t v15 = v42;
  *(void *)&long long v26 = v12;
  *((void *)&v26 + 1) = v13;
  uint64_t v16 = v25;
  *(void *)&v27[0] = v25;
  *(_OWORD *)((char *)v27 + 8) = v43;
  uint64_t v17 = v24[0];
  *((void *)&v27[9] + 1) = v24[0];
  uint64_t v28 = v42;
  sub_15BAA8((uint64_t)&v26);
  swift_bridgeObjectRelease();
  long long v18 = v27[8];
  *(_OWORD *)(a2 + 128) = v27[7];
  *(_OWORD *)(a2 + 144) = v18;
  *(_OWORD *)(a2 + 160) = v27[9];
  *(void *)(a2 + 176) = v28;
  long long v19 = v27[4];
  *(_OWORD *)(a2 + 64) = v27[3];
  *(_OWORD *)(a2 + 80) = v19;
  long long v20 = v27[6];
  *(_OWORD *)(a2 + 96) = v27[5];
  *(_OWORD *)(a2 + 112) = v20;
  long long v21 = v27[0];
  *(_OWORD *)a2 = v26;
  *(_OWORD *)(a2 + 16) = v21;
  long long v22 = v27[2];
  *(_OWORD *)(a2 + 32) = v27[1];
  *(_OWORD *)(a2 + 48) = v22;
  sub_1264C((uint64_t)v71);
  long long v35 = v67;
  long long v36 = v68;
  long long v37 = v69;
  long long v38 = v70;
  long long v31 = v63;
  long long v32 = v64;
  long long v33 = v65;
  long long v34 = v66;
  v29[0] = v12;
  v29[1] = v13;
  long long v30 = v62;
  long long v29[2] = v16;
  uint64_t v39 = v17;
  uint64_t v40 = v15;
  return sub_15BAE0((uint64_t)v29);
}

unint64_t sub_15B9F0()
{
  unint64_t result = qword_271408;
  if (!qword_271408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271408);
  }
  return result;
}

uint64_t sub_15BA44(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26C6D8);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_15BAA8(uint64_t a1)
{
  return a1;
}

uint64_t sub_15BAE0(uint64_t a1)
{
  return a1;
}

uint64_t sub_15BB14@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return TabiConfiguration.EventAggregationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_15BB2C(void *a1)
{
  return TabiConfiguration.EventAggregationConfiguration.encode(to:)(a1);
}

uint64_t _s11descr251E29O29EventAggregationConfigurationVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s11descr251E29O29EventAggregationConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  uint64_t v3 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11descr251E29O29EventAggregationConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  a1[4] = a2[4];
  a1[5] = a2[5];
  a1[6] = a2[6];
  a1[7] = a2[7];
  a1[8] = a2[8];
  a1[9] = a2[9];
  a1[10] = a2[10];
  a1[11] = a2[11];
  a1[12] = a2[12];
  a1[13] = a2[13];
  a1[14] = a2[14];
  a1[15] = a2[15];
  a1[16] = a2[16];
  a1[17] = a2[17];
  a1[18] = a2[18];
  a1[19] = a2[19];
  a1[20] = a2[20];
  a1[21] = a2[21];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[22] = a2[22];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s11descr251E29O29EventAggregationConfigurationVwtk(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[1];
  long long v4 = a2[3];
  *(_OWORD *)(a1 + 32) = a2[2];
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)a1 = v2;
  *(_OWORD *)(a1 + 16) = v3;
  long long v5 = a2[4];
  long long v6 = a2[5];
  long long v7 = a2[7];
  *(_OWORD *)(a1 + 96) = a2[6];
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  __n128 result = (__n128)a2[8];
  long long v9 = a2[9];
  long long v10 = a2[10];
  *(void *)(a1 + 176) = *((void *)a2 + 22);
  *(_OWORD *)(a1 + 144) = v9;
  *(_OWORD *)(a1 + 160) = v10;
  *(__n128 *)(a1 + 128) = result;
  return result;
}

uint64_t _s11descr251E29O29EventAggregationConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11descr251E29O29EventAggregationConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 184)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 168);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11descr251E29O29EventAggregationConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 184) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 168) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 184) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiConfiguration.EventAggregationConfiguration()
{
  return &type metadata for TabiConfiguration.EventAggregationConfiguration;
}

__n128 _s11descr251E29O29EventAggregationConfigurationV15EventConditionsVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  long long v2 = *(_OWORD *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(_OWORD *)(a1 + 16) = v2;
  *(_OWORD *)(a1 + 32) = v3;
  __n128 result = *(__n128 *)(a2 + 80);
  long long v6 = *(_OWORD *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(__n128 *)(a1 + 80) = result;
  *(_OWORD *)(a1 + 96) = v6;
  return result;
}

uint64_t _s11descr251E29O29EventAggregationConfigurationV15EventConditionsVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 144)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s11descr251E29O29EventAggregationConfigurationV15EventConditionsVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 144) = v3;
  return result;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV15EventConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV15EventConditionsVN;
}

unsigned char *_s11descr251E29O29EventAggregationConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15C028);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV10CodingKeysON;
}

unint64_t sub_15C064()
{
  unint64_t result = qword_271410;
  if (!qword_271410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271410);
  }
  return result;
}

unint64_t sub_15C0BC()
{
  unint64_t result = qword_271418;
  if (!qword_271418)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271418);
  }
  return result;
}

unint64_t sub_15C114()
{
  unint64_t result = qword_271420;
  if (!qword_271420)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271420);
  }
  return result;
}

uint64_t sub_15C168@<X0>(void *a1@<X0>, double *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2714C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v35 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_15D3E4();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v48 = 0;
  sub_15DA20();
  sub_1FC360();
  double v9 = 0.0;
  if (v47) {
    double v10 = 0.0;
  }
  else {
    double v10 = v46;
  }
  char v48 = 1;
  sub_15DA74();
  sub_1FC360();
  if (!v47) {
    double v9 = v46;
  }
  char v48 = 2;
  sub_15DAC8();
  sub_1FC360();
  double v11 = 0.0;
  if (v47) {
    double v12 = 0.0;
  }
  else {
    double v12 = v46;
  }
  char v48 = 3;
  sub_15DB1C();
  sub_1FC360();
  if (!v47) {
    double v11 = v46;
  }
  char v48 = 4;
  sub_15DB70();
  sub_1FC360();
  double v13 = 0.0;
  if (v47) {
    double v14 = 0.0;
  }
  else {
    double v14 = v46;
  }
  char v48 = 5;
  sub_15DBC4();
  sub_1FC360();
  if (!v47) {
    double v13 = v46;
  }
  char v48 = 6;
  sub_15DC18();
  sub_1FC360();
  if (v47) {
    double v15 = 0.0;
  }
  else {
    double v15 = v46;
  }
  char v48 = 7;
  sub_15DC6C();
  sub_1FC360();
  double v16 = v46;
  if (v47) {
    double v16 = 0.0;
  }
  double v45 = v16;
  char v48 = 8;
  sub_15DCC0();
  sub_1FC360();
  double v17 = v46;
  if (v47) {
    double v17 = 0.0;
  }
  double v44 = v17;
  char v48 = 9;
  sub_15DD14();
  sub_1FC360();
  double v18 = v46;
  if (v47) {
    double v18 = 0.0;
  }
  double v43 = v18;
  char v48 = 10;
  sub_15DD68();
  sub_1FC360();
  double v19 = v46;
  if (v47) {
    double v19 = 0.0;
  }
  double v42 = v19;
  char v48 = 11;
  sub_15DDBC();
  sub_1FC360();
  double v20 = v46;
  if (v47) {
    double v20 = 0.0;
  }
  double v41 = v20;
  char v48 = 12;
  sub_15DE10();
  sub_1FC360();
  double v21 = v46;
  if (v47) {
    double v21 = 0.0;
  }
  double v40 = v21;
  char v48 = 13;
  sub_15DE64();
  sub_1FC360();
  double v22 = v46;
  if (v47) {
    double v22 = 0.0;
  }
  double v39 = v22;
  char v48 = 14;
  sub_15DEB8();
  sub_1FC360();
  double v23 = v46;
  if (v47) {
    double v23 = 0.0;
  }
  double v38 = v23;
  char v48 = 15;
  sub_15DF0C();
  sub_1FC360();
  double v24 = v46;
  if (v47) {
    double v24 = 0.0;
  }
  double v37 = v24;
  char v48 = 16;
  sub_15DF60();
  sub_1FC360();
  double v25 = v46;
  int v26 = v47;
  char v48 = 17;
  sub_15DFB4();
  sub_1FC360();
  double v28 = 0.0;
  if (!v26) {
    double v28 = v25;
  }
  double v29 = 0.0;
  double v36 = v28;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  if (!v47) {
    double v29 = v46;
  }
  uint64_t result = sub_1264C((uint64_t)a1);
  *a2 = v10;
  a2[1] = v9;
  a2[2] = v12;
  a2[3] = v11;
  a2[4] = v14;
  a2[5] = v13;
  double v30 = v45;
  a2[6] = v15;
  a2[7] = v30;
  double v31 = v43;
  a2[8] = v44;
  a2[9] = v31;
  double v32 = v41;
  a2[10] = v42;
  a2[11] = v32;
  double v33 = v39;
  a2[12] = v40;
  a2[13] = v33;
  double v34 = v37;
  a2[14] = v38;
  a2[15] = v34;
  a2[16] = v36;
  a2[17] = v29;
  return result;
}

uint64_t sub_15C8C0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E61576F54646461 && a2 == 0xEF646165526F5474;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000217B90 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72706D496B6F6F62 && a2 == 0xEE006E6F69737365 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000000217B70 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x637275506B6F6F62 && a2 == 0xED00006465736168 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x527361576B6F6F62 && a2 == 0xEB00000000646165 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0x64616F6C6E776F64 && a2 == 0xEE00656C706D6153 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x746963696C707865 && a2 == 0xEF656E696C636544 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0x6B6F6F4265646968 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0x694673416B72616DLL && a2 == 0xEE0064656873696ELL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else if (a1 == 0xD000000000000012 && a2 == 0x8000000000217B50 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 10;
  }
  else if (a1 == 0x676E69746172 && a2 == 0xE600000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 11;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000217B30 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 12;
  }
  else if (a1 == 0x615365766F6D6572 && a2 == 0xEC000000656C706DLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 13;
  }
  else if (a1 == 0x4C74736567677573 && a2 == 0xEB00000000737365 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 14;
  }
  else if (a1 == 0x4D74736567677573 && a2 == 0xEB0000000065726FLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 15;
  }
  else if (a1 == 0x6572616873 && a2 == 0xE500000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 16;
  }
  else if (a1 == 0x657461726E75 && a2 == 0xE600000000000000)
  {
    swift_bridgeObjectRelease();
    return 17;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 17;
    }
    else {
      return 18;
    }
  }
}

uint64_t sub_15D0EC(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x746E65764578616DLL && a2 == 0xE900000000000073;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726E654778616DLL && a2 == 0xEB00000000734449 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6F6874754178616DLL && a2 == 0xEC00000073444972 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6E6F43746E657665 && a2 == 0xEF736E6F69746964 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x614E74757074756FLL && a2 == 0xEB0000000073656DLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000219740)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

unint64_t sub_15D3E4()
{
  unint64_t result = qword_271430;
  if (!qword_271430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271430);
  }
  return result;
}

unint64_t sub_15D438()
{
  unint64_t result = qword_271438;
  if (!qword_271438)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271438);
  }
  return result;
}

unint64_t sub_15D48C()
{
  unint64_t result = qword_271440;
  if (!qword_271440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271440);
  }
  return result;
}

unint64_t sub_15D4E0()
{
  unint64_t result = qword_271448;
  if (!qword_271448)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271448);
  }
  return result;
}

unint64_t sub_15D534()
{
  unint64_t result = qword_271450;
  if (!qword_271450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271450);
  }
  return result;
}

unint64_t sub_15D588()
{
  unint64_t result = qword_271458;
  if (!qword_271458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271458);
  }
  return result;
}

unint64_t sub_15D5DC()
{
  unint64_t result = qword_271460;
  if (!qword_271460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271460);
  }
  return result;
}

unint64_t sub_15D630()
{
  unint64_t result = qword_271468;
  if (!qword_271468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271468);
  }
  return result;
}

unint64_t sub_15D684()
{
  unint64_t result = qword_271470;
  if (!qword_271470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271470);
  }
  return result;
}

unint64_t sub_15D6D8()
{
  unint64_t result = qword_271478;
  if (!qword_271478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271478);
  }
  return result;
}

unint64_t sub_15D72C()
{
  unint64_t result = qword_271480;
  if (!qword_271480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271480);
  }
  return result;
}

unint64_t sub_15D780()
{
  unint64_t result = qword_271488;
  if (!qword_271488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271488);
  }
  return result;
}

unint64_t sub_15D7D4()
{
  unint64_t result = qword_271490;
  if (!qword_271490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271490);
  }
  return result;
}

unint64_t sub_15D828()
{
  unint64_t result = qword_271498;
  if (!qword_271498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271498);
  }
  return result;
}

unint64_t sub_15D87C()
{
  unint64_t result = qword_2714A0;
  if (!qword_2714A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714A0);
  }
  return result;
}

unint64_t sub_15D8D0()
{
  unint64_t result = qword_2714A8;
  if (!qword_2714A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714A8);
  }
  return result;
}

unint64_t sub_15D924()
{
  unint64_t result = qword_2714B0;
  if (!qword_2714B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714B0);
  }
  return result;
}

unint64_t sub_15D978()
{
  unint64_t result = qword_2714B8;
  if (!qword_2714B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714B8);
  }
  return result;
}

unint64_t sub_15D9CC()
{
  unint64_t result = qword_2714C0;
  if (!qword_2714C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714C0);
  }
  return result;
}

unint64_t sub_15DA20()
{
  unint64_t result = qword_2714D0;
  if (!qword_2714D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714D0);
  }
  return result;
}

unint64_t sub_15DA74()
{
  unint64_t result = qword_2714D8;
  if (!qword_2714D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714D8);
  }
  return result;
}

unint64_t sub_15DAC8()
{
  unint64_t result = qword_2714E0;
  if (!qword_2714E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714E0);
  }
  return result;
}

unint64_t sub_15DB1C()
{
  unint64_t result = qword_2714E8;
  if (!qword_2714E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714E8);
  }
  return result;
}

unint64_t sub_15DB70()
{
  unint64_t result = qword_2714F0;
  if (!qword_2714F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714F0);
  }
  return result;
}

unint64_t sub_15DBC4()
{
  unint64_t result = qword_2714F8;
  if (!qword_2714F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2714F8);
  }
  return result;
}

unint64_t sub_15DC18()
{
  unint64_t result = qword_271500;
  if (!qword_271500)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271500);
  }
  return result;
}

unint64_t sub_15DC6C()
{
  unint64_t result = qword_271508;
  if (!qword_271508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271508);
  }
  return result;
}

unint64_t sub_15DCC0()
{
  unint64_t result = qword_271510;
  if (!qword_271510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271510);
  }
  return result;
}

unint64_t sub_15DD14()
{
  unint64_t result = qword_271518;
  if (!qword_271518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271518);
  }
  return result;
}

unint64_t sub_15DD68()
{
  unint64_t result = qword_271520;
  if (!qword_271520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271520);
  }
  return result;
}

unint64_t sub_15DDBC()
{
  unint64_t result = qword_271528;
  if (!qword_271528)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271528);
  }
  return result;
}

unint64_t sub_15DE10()
{
  unint64_t result = qword_271530;
  if (!qword_271530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271530);
  }
  return result;
}

unint64_t sub_15DE64()
{
  unint64_t result = qword_271538;
  if (!qword_271538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271538);
  }
  return result;
}

unint64_t sub_15DEB8()
{
  unint64_t result = qword_271540;
  if (!qword_271540)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271540);
  }
  return result;
}

unint64_t sub_15DF0C()
{
  unint64_t result = qword_271548;
  if (!qword_271548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271548);
  }
  return result;
}

unint64_t sub_15DF60()
{
  unint64_t result = qword_271550;
  if (!qword_271550)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271550);
  }
  return result;
}

unint64_t sub_15DFB4()
{
  unint64_t result = qword_271558;
  if (!qword_271558)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271558);
  }
  return result;
}

unsigned char *_s11descr251E29O29EventAggregationConfigurationV15EventConditionsV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 17 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 17) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xEF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xEE)
  {
    unsigned int v6 = ((a2 - 239) >> 8) + 1;
    *unint64_t result = a2 + 17;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x15E0D4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 17;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV15EventConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV15EventConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV16UnrateConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV16UnrateConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV15ShareConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV15ShareConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV21SuggestMoreConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV21SuggestMoreConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV21SuggestLessConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV21SuggestLessConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV22RemoveSampleConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV22RemoveSampleConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV30RemoveFromWantToReadConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV30RemoveFromWantToReadConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV16RatingConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV16RatingConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV28MarkAsStillReadingConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV28MarkAsStillReadingConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV24MarkAsFinishedConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV24MarkAsFinishedConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV18HideBookConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV18HideBookConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV25ExplicitDeclineConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV25ExplicitDeclineConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV24DownloadSampleConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV24DownloadSampleConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV21BookWasReadConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV21BookWasReadConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV23BookPurchasedConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV23BookPurchasedConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV35BookProductPageImpressionConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV35BookProductPageImpressionConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV24BookImpressionConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV24BookImpressionConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV28AudiobookWasPlayedConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV28AudiobookWasPlayedConditionsVN;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV25AddToWantToReadConditionsVMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV25AddToWantToReadConditionsVN;
}

unint64_t sub_15E230()
{
  unint64_t result = qword_271560;
  if (!qword_271560)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271560);
  }
  return result;
}

unint64_t sub_15E288()
{
  unint64_t result = qword_271568;
  if (!qword_271568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271568);
  }
  return result;
}

unint64_t sub_15E2E0()
{
  unint64_t result = qword_271570;
  if (!qword_271570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271570);
  }
  return result;
}

unint64_t sub_15E334()
{
  unint64_t result = qword_271580;
  if (!qword_271580)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271580);
  }
  return result;
}

unint64_t sub_15E388()
{
  unint64_t result = qword_271590;
  if (!qword_271590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271590);
  }
  return result;
}

unint64_t sub_15E3DC()
{
  unint64_t result = qword_2715A0;
  if (!qword_2715A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2715A0);
  }
  return result;
}

unint64_t sub_15E430()
{
  unint64_t result = qword_2715B0;
  if (!qword_2715B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2715B0);
  }
  return result;
}

unint64_t sub_15E484()
{
  unint64_t result = qword_2715C0;
  if (!qword_2715C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2715C0);
  }
  return result;
}

unint64_t sub_15E4D8()
{
  unint64_t result = qword_2715D0;
  if (!qword_2715D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2715D0);
  }
  return result;
}

unint64_t sub_15E52C()
{
  unint64_t result = qword_2715E0;
  if (!qword_2715E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2715E0);
  }
  return result;
}

unint64_t sub_15E580()
{
  unint64_t result = qword_2715F0;
  if (!qword_2715F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2715F0);
  }
  return result;
}

unint64_t sub_15E5D4()
{
  unint64_t result = qword_271600;
  if (!qword_271600)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271600);
  }
  return result;
}

unint64_t sub_15E628()
{
  unint64_t result = qword_271610;
  if (!qword_271610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271610);
  }
  return result;
}

unint64_t sub_15E67C()
{
  unint64_t result = qword_271620;
  if (!qword_271620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271620);
  }
  return result;
}

unint64_t sub_15E6D0()
{
  unint64_t result = qword_271630;
  if (!qword_271630)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271630);
  }
  return result;
}

unint64_t sub_15E724()
{
  unint64_t result = qword_271640;
  if (!qword_271640)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271640);
  }
  return result;
}

unint64_t sub_15E778()
{
  unint64_t result = qword_271650;
  if (!qword_271650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271650);
  }
  return result;
}

unint64_t sub_15E7CC()
{
  unint64_t result = qword_271660;
  if (!qword_271660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271660);
  }
  return result;
}

unint64_t sub_15E820()
{
  unint64_t result = qword_271670;
  if (!qword_271670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271670);
  }
  return result;
}

unint64_t sub_15E874()
{
  unint64_t result = qword_271680;
  if (!qword_271680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271680);
  }
  return result;
}

unint64_t sub_15E8C8()
{
  unint64_t result = qword_271690;
  if (!qword_271690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271690);
  }
  return result;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV16UnrateConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV16UnrateConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV15ShareConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV15ShareConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV21SuggestMoreConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV21SuggestMoreConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV21SuggestLessConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV21SuggestLessConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV22RemoveSampleConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV22RemoveSampleConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV30RemoveFromWantToReadConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV30RemoveFromWantToReadConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV16RatingConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV16RatingConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV28MarkAsStillReadingConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV28MarkAsStillReadingConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV24MarkAsFinishedConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV24MarkAsFinishedConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV18HideBookConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV18HideBookConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV25ExplicitDeclineConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV25ExplicitDeclineConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV24DownloadSampleConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV24DownloadSampleConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV21BookWasReadConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV21BookWasReadConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV23BookPurchasedConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV23BookPurchasedConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV35BookProductPageImpressionConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV35BookProductPageImpressionConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV24BookImpressionConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV24BookImpressionConditionsV10CodingKeysON;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV28AudiobookWasPlayedConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV28AudiobookWasPlayedConditionsV10CodingKeysON;
}

unsigned char *_s11descr251E29O29EventAggregationConfigurationV16UnrateConditionsV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x15EACCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s11descr251E29O29EventAggregationConfigurationV25AddToWantToReadConditionsV10CodingKeysOMa()
{
  return &_s11descr251E29O29EventAggregationConfigurationV25AddToWantToReadConditionsV10CodingKeysON;
}

unint64_t sub_15EB08()
{
  unint64_t result = qword_271728;
  if (!qword_271728)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271728);
  }
  return result;
}

unint64_t sub_15EB60()
{
  unint64_t result = qword_271730;
  if (!qword_271730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271730);
  }
  return result;
}

unint64_t sub_15EBB8()
{
  unint64_t result = qword_271738;
  if (!qword_271738)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271738);
  }
  return result;
}

unint64_t sub_15EC10()
{
  unint64_t result = qword_271740;
  if (!qword_271740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271740);
  }
  return result;
}

unint64_t sub_15EC68()
{
  unint64_t result = qword_271748;
  if (!qword_271748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271748);
  }
  return result;
}

unint64_t sub_15ECC0()
{
  unint64_t result = qword_271750;
  if (!qword_271750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271750);
  }
  return result;
}

unint64_t sub_15ED18()
{
  unint64_t result = qword_271758;
  if (!qword_271758)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271758);
  }
  return result;
}

unint64_t sub_15ED70()
{
  unint64_t result = qword_271760;
  if (!qword_271760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271760);
  }
  return result;
}

unint64_t sub_15EDC8()
{
  unint64_t result = qword_271768;
  if (!qword_271768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271768);
  }
  return result;
}

unint64_t sub_15EE20()
{
  unint64_t result = qword_271770;
  if (!qword_271770)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271770);
  }
  return result;
}

unint64_t sub_15EE78()
{
  unint64_t result = qword_271778;
  if (!qword_271778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271778);
  }
  return result;
}

unint64_t sub_15EED0()
{
  unint64_t result = qword_271780;
  if (!qword_271780)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271780);
  }
  return result;
}

unint64_t sub_15EF28()
{
  unint64_t result = qword_271788;
  if (!qword_271788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271788);
  }
  return result;
}

unint64_t sub_15EF80()
{
  unint64_t result = qword_271790;
  if (!qword_271790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271790);
  }
  return result;
}

unint64_t sub_15EFD8()
{
  unint64_t result = qword_271798;
  if (!qword_271798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271798);
  }
  return result;
}

unint64_t sub_15F030()
{
  unint64_t result = qword_2717A0;
  if (!qword_2717A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717A0);
  }
  return result;
}

unint64_t sub_15F088()
{
  unint64_t result = qword_2717A8;
  if (!qword_2717A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717A8);
  }
  return result;
}

unint64_t sub_15F0E0()
{
  unint64_t result = qword_2717B0;
  if (!qword_2717B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717B0);
  }
  return result;
}

unint64_t sub_15F138()
{
  unint64_t result = qword_2717B8;
  if (!qword_2717B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717B8);
  }
  return result;
}

unint64_t sub_15F190()
{
  unint64_t result = qword_2717C0;
  if (!qword_2717C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717C0);
  }
  return result;
}

unint64_t sub_15F1E8()
{
  unint64_t result = qword_2717C8;
  if (!qword_2717C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717C8);
  }
  return result;
}

unint64_t sub_15F240()
{
  unint64_t result = qword_2717D0;
  if (!qword_2717D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717D0);
  }
  return result;
}

unint64_t sub_15F298()
{
  unint64_t result = qword_2717D8;
  if (!qword_2717D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717D8);
  }
  return result;
}

unint64_t sub_15F2F0()
{
  unint64_t result = qword_2717E0;
  if (!qword_2717E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717E0);
  }
  return result;
}

unint64_t sub_15F348()
{
  unint64_t result = qword_2717E8;
  if (!qword_2717E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717E8);
  }
  return result;
}

unint64_t sub_15F3A0()
{
  unint64_t result = qword_2717F0;
  if (!qword_2717F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717F0);
  }
  return result;
}

unint64_t sub_15F3F8()
{
  unint64_t result = qword_2717F8;
  if (!qword_2717F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2717F8);
  }
  return result;
}

unint64_t sub_15F450()
{
  unint64_t result = qword_271800;
  if (!qword_271800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271800);
  }
  return result;
}

unint64_t sub_15F4A8()
{
  unint64_t result = qword_271808;
  if (!qword_271808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271808);
  }
  return result;
}

unint64_t sub_15F500()
{
  unint64_t result = qword_271810;
  if (!qword_271810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271810);
  }
  return result;
}

unint64_t sub_15F558()
{
  unint64_t result = qword_271818;
  if (!qword_271818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271818);
  }
  return result;
}

unint64_t sub_15F5B0()
{
  unint64_t result = qword_271820;
  if (!qword_271820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271820);
  }
  return result;
}

unint64_t sub_15F608()
{
  unint64_t result = qword_271828;
  if (!qword_271828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271828);
  }
  return result;
}

unint64_t sub_15F660()
{
  unint64_t result = qword_271830;
  if (!qword_271830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271830);
  }
  return result;
}

unint64_t sub_15F6B8()
{
  unint64_t result = qword_271838;
  if (!qword_271838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271838);
  }
  return result;
}

unint64_t sub_15F710()
{
  unint64_t result = qword_271840;
  if (!qword_271840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271840);
  }
  return result;
}

unint64_t sub_15F768()
{
  unint64_t result = qword_271848;
  if (!qword_271848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271848);
  }
  return result;
}

unint64_t sub_15F7C0()
{
  unint64_t result = qword_271850;
  if (!qword_271850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271850);
  }
  return result;
}

unint64_t sub_15F818()
{
  unint64_t result = qword_271858;
  if (!qword_271858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271858);
  }
  return result;
}

unint64_t sub_15F870()
{
  unint64_t result = qword_271860;
  if (!qword_271860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271860);
  }
  return result;
}

unint64_t sub_15F8C8()
{
  unint64_t result = qword_271868;
  if (!qword_271868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271868);
  }
  return result;
}

unint64_t sub_15F920()
{
  unint64_t result = qword_271870;
  if (!qword_271870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271870);
  }
  return result;
}

unint64_t sub_15F978()
{
  unint64_t result = qword_271878;
  if (!qword_271878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271878);
  }
  return result;
}

unint64_t sub_15F9D0()
{
  unint64_t result = qword_271880;
  if (!qword_271880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271880);
  }
  return result;
}

unint64_t sub_15FA28()
{
  unint64_t result = qword_271888;
  if (!qword_271888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271888);
  }
  return result;
}

unint64_t sub_15FA80()
{
  unint64_t result = qword_271890;
  if (!qword_271890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271890);
  }
  return result;
}

unint64_t sub_15FAD8()
{
  unint64_t result = qword_271898;
  if (!qword_271898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271898);
  }
  return result;
}

unint64_t sub_15FB30()
{
  unint64_t result = qword_2718A0;
  if (!qword_2718A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718A0);
  }
  return result;
}

unint64_t sub_15FB88()
{
  unint64_t result = qword_2718A8;
  if (!qword_2718A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718A8);
  }
  return result;
}

unint64_t sub_15FBE0()
{
  unint64_t result = qword_2718B0;
  if (!qword_2718B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718B0);
  }
  return result;
}

unint64_t sub_15FC38()
{
  unint64_t result = qword_2718B8;
  if (!qword_2718B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718B8);
  }
  return result;
}

unint64_t sub_15FC90()
{
  unint64_t result = qword_2718C0;
  if (!qword_2718C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718C0);
  }
  return result;
}

unint64_t sub_15FCE8()
{
  unint64_t result = qword_2718C8;
  if (!qword_2718C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718C8);
  }
  return result;
}

unint64_t sub_15FD40()
{
  unint64_t result = qword_2718D0;
  if (!qword_2718D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718D0);
  }
  return result;
}

uint64_t sub_15FD94()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_15FE94()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_15FFE0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_160104()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_160208()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1602E8()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_160464()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_16054C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_160680()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_16079C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_16087C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_160954()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t sub_160A3C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

unint64_t sub_160B74(uint64_t a1)
{
  return sub_16125C(a1, &qword_26C4F0, (uint64_t (*)(uint64_t))sub_4C69C);
}

unint64_t sub_160B94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    BOOL v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_2703C0);
  BOOL v2 = (void *)sub_1FC2A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  unsigned int v4 = (void *)(a1 + 40);
  while (1)
  {
    char v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_4C69C(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_160C90(uint64_t a1)
{
  return sub_16125C(a1, &qword_2703B8, (uint64_t (*)(uint64_t))sub_4C69C);
}

unint64_t sub_160CB0(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D808);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_271CE0);
  uint64_t v6 = sub_1FC2A0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_5606C(v12, (uint64_t)v5, &qword_26D808);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_4C328(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    double v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_1FB550();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_160EB0(uint64_t a1)
{
  return sub_16125C(a1, &qword_26D7E0, (uint64_t (*)(uint64_t))sub_4C744);
}

unint64_t sub_160ED0(uint64_t a1)
{
  return sub_1618F4(a1, &qword_271D30, (uint64_t (*)(uint64_t))sub_4C3A0);
}

unint64_t sub_160EF0(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D9B8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_271CF0);
  uint64_t v6 = sub_1FC2A0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_5606C(v12, (uint64_t)v5, &qword_26D9B8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_4C328(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    double v19 = (uint64_t *)(v7[6] + 16 * result);
    uint64_t *v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_12124(&qword_26D938);
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1610F4(uint64_t a1)
{
  return sub_161134(a1, &qword_271D28, (uint64_t (*)(void))sub_4C7F4);
}

unint64_t sub_161114(uint64_t a1)
{
  return sub_161134(a1, &qword_271D20, (uint64_t (*)(void))sub_4C900);
}

unint64_t sub_161134(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void))
{
  if (!*(void *)(a1 + 16))
  {
    char v5 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(a2);
  char v5 = (void *)sub_1FC2A0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v8 = *((unsigned char *)v7 - 8);
    uint64_t v9 = *v7;
    unint64_t result = a3(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    uint64_t v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_16123C(uint64_t a1)
{
  return sub_16125C(a1, &qword_271CE8, (uint64_t (*)(uint64_t))sub_4C69C);
}

unint64_t sub_16125C(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    char v5 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(a2);
  char v5 = (void *)sub_1FC2A0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    uint64_t v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_16136C(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D490);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_2703F0);
  uint64_t v6 = sub_1FC2A0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_5606C(v12, (uint64_t)v5, &qword_26D490);
    unint64_t result = sub_4C9C4((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1FB110();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_161560(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_271D18);
  uint64_t v2 = (void *)sub_1FC2A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_4C328(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    uint64_t *v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_161674(uint64_t a1)
{
  return sub_16168C(a1, &qword_270460);
}

unint64_t sub_161680(uint64_t a1)
{
  return sub_16168C(a1, &qword_270468);
}

unint64_t sub_16168C(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_10;
  }
  sub_12124(a2);
  uint64_t v3 = (void *)sub_1FC2A0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_10:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = v4 - 1;
  for (uint64_t i = 32; ; i += 568)
  {
    memcpy(__dst, (const void *)(a1 + i), sizeof(__dst));
    uint64_t v7 = __dst[70];
    memcpy(__src, (const void *)(a1 + i), 0x229uLL);
    sub_16C834(__dst);
    unint64_t result = sub_4C880(__src);
    if (v9) {
      break;
    }
    unint64_t v10 = result;
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    unint64_t result = (unint64_t)memcpy((void *)(v3[6] + 560 * result), __src, 0x229uLL);
    *(void *)(v3[7] + 8 * v10) = v7;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_12;
    }
    v3[2] = v13;
    if (!v5)
    {
      swift_release();
      goto LABEL_10;
    }
    --v5;
  }
  __break(1u);
LABEL_12:
  __break(1u);
  return result;
}

unint64_t sub_1617D8(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_270450);
  uint64_t v2 = (void *)sub_1FC2A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void *)(a1 + 40);
  while (1)
  {
    unsigned __int8 v5 = *((unsigned char *)v4 - 8);
    uint64_t v6 = *v4;
    unint64_t result = sub_4CC78(v5);
    if (v8) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v2[6] + result) = v5;
    *(void *)(v2[7] + 8 * result) = v6;
    uint64_t v9 = v2[2];
    BOOL v10 = __OFADD__(v9, 1);
    uint64_t v11 = v9 + 1;
    if (v10) {
      goto LABEL_11;
    }
    v4 += 2;
    v2[2] = v11;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1618D4(uint64_t a1)
{
  return sub_1618F4(a1, &qword_270458, (uint64_t (*)(uint64_t))sub_4C7F4);
}

unint64_t sub_1618F4(uint64_t a1, uint64_t *a2, uint64_t (*a3)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    unsigned __int8 v5 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(a2);
  unsigned __int8 v5 = (void *)sub_1FC2A0();
  uint64_t v6 = *(void *)(a1 + 16);
  if (!v6)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v5;
  }
  swift_retain();
  uint64_t v7 = (uint64_t *)(a1 + 40);
  while (1)
  {
    uint64_t v8 = *((unsigned __int8 *)v7 - 8);
    uint64_t v9 = *v7;
    swift_bridgeObjectRetain();
    unint64_t result = a3(v8);
    if (v11) {
      break;
    }
    *(void *)((char *)v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(unsigned char *)(v5[6] + result) = v8;
    *(void *)(v5[7] + 8 * result) = v9;
    uint64_t v12 = v5[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    uint64_t v5[2] = v14;
    v7 += 2;
    if (!--v6)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_161A04(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_12124(&qword_271CF8);
  uint64_t v2 = (void *)sub_1FC2A0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (unsigned char *)(a1 + 52);
  while (1)
  {
    uint64_t v5 = *(void *)(v4 - 20);
    unint64_t v6 = *(void *)(v4 - 12);
    int v7 = *((_DWORD *)v4 - 1);
    char v8 = *v4;
    sub_2F5CC(v5, v6);
    unint64_t result = sub_4CD3C(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v2[6] + 16 * result);
    *char v11 = v5;
    v11[1] = v6;
    uint64_t v12 = v2[7] + 8 * result;
    *(_DWORD *)uint64_t v12 = v7;
    *(unsigned char *)(v12 + 4) = v8;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v2[2] = v15;
    v4 += 24;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

double InternalAffinitySource.affinity.getter()
{
  return sub_165310(Array<A>.affinity.getter);
}

void *SeedBook.init(storeID:metadata:positiveAffinitySource:)@<X0>(uint64_t a1@<X0>, char *a2@<X1>, char *a3@<X2>, void *a4@<X8>)
{
  char v6 = *a2;
  uint64_t v7 = *((void *)a2 + 3);
  char v8 = a2[32];
  long long v14 = *(_OWORD *)(a2 + 40);
  uint64_t v9 = *((void *)a2 + 7);
  uint64_t v10 = *((void *)a2 + 8);
  char v11 = a2[72];
  char v15 = *a3;
  sub_7A8D0((uint64_t)v17);
  unint64_t v12 = sub_1618F4((uint64_t)_swiftEmptyArrayStorage, &qword_271D30, (uint64_t (*)(uint64_t))sub_4C3A0);
  *(void *)&__src[0] = a1;
  BYTE8(__src[0]) = v6;
  __src[1] = *(_OWORD *)(a2 + 8);
  *(void *)&__src[2] = v7;
  BYTE8(__src[2]) = v8;
  __src[3] = v14;
  *(void *)&__src[4] = v9;
  *((void *)&__src[4] + 1) = v10;
  LOBYTE(__src[5]) = v11;
  *(_OWORD *)((char *)&__src[5] + 8) = 0u;
  *(_OWORD *)((char *)&__src[6] + 8) = 0u;
  *(_OWORD *)((char *)&__src[7] + 8) = 0u;
  *((void *)&__src[8] + 1) = 0x1FFFFFFFELL;
  __src[9] = 0uLL;
  sub_12588((uint64_t)v17, (uint64_t)&__src[10]);
  *(void *)&__src[34] = v12;
  BYTE8(__src[34]) = v15;
  return memcpy(a4, __src, 0x229uLL);
}

BooksPersonalization::ReviewInfo __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> ReviewInfo.init(score:secondsSinceReviewed:)(Swift::Double score, Swift::Double secondsSinceReviewed)
{
  BOOL v4 = score >= -1.0;
  double v5 = 1.0;
  BOOL v6 = score <= 1.0 && v4;
  if (v6)
  {
    if (secondsSinceReviewed >= 0.0)
    {
      *uint64_t v2 = score;
      v2[1] = secondsSinceReviewed;
      goto LABEL_10;
    }
    sub_10BFC0();
    swift_allocError();
    *(Swift::Double *)uint64_t v8 = secondsSinceReviewed;
  }
  else
  {
    sub_10BFC0();
    swift_allocError();
    *(Swift::Double *)uint64_t v8 = score;
  }
  *(unsigned char *)(v8 + 8) = v6;
  swift_willThrow();
LABEL_10:
  result.secondsSinceReviewed = secondsSinceReviewed;
  result.score = v5;
  return result;
}

uint64_t SeedBook.metadata.getter@<X0>(uint64_t a1@<X8>)
{
  long long v2 = *(_OWORD *)(v1 + 64);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 48);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  char v7 = *(unsigned char *)(v1 + 80);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 8);
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(unsigned char *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 56) = v2;
  *(unsigned char *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t SeedBook.internalAffinitySource.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[11];
  uint64_t v3 = v1[12];
  uint64_t v4 = v1[13];
  uint64_t v5 = v1[14];
  uint64_t v6 = v1[15];
  uint64_t v7 = v1[16];
  unint64_t v8 = v1[17];
  uint64_t v9 = v1[18];
  uint64_t v10 = v1[19];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_12430(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t SeedBook.bookHistory.getter@<X0>(uint64_t a1@<X8>)
{
  sub_12588(v1 + 160, (uint64_t)v4);
  return sub_12588((uint64_t)v4, a1);
}

uint64_t SeedBook.affinityInfosByImplicitFeature.getter()
{
  return swift_bridgeObjectRetain();
}

void SeedBook.positiveAffinitySource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 552);
}

void sub_161E30(char *a1@<X8>)
{
  switch(*(void *)(v1 + 48) >> 62)
  {
    case 1:
      char v4 = 3;
      goto LABEL_4;
    case 2:
      ReviewInfo.starRating.getter(&v5);
      if (!v2)
      {
        switch(v5)
        {
          case 2:
            *a1 = 0;
            break;
          case 3:
            char v4 = 1;
            goto LABEL_4;
          case 4:
            char v4 = 2;
            goto LABEL_4;
          default:
            goto LABEL_2;
        }
      }
      break;
    case 3:
      switch(*(unsigned char *)(v1 + 8))
      {
        case 1:
          char v4 = 6;
          break;
        case 2:
          char v4 = 5;
          break;
        case 3:
          char v4 = 7;
          break;
        case 4:
          char v4 = 8;
          break;
        case 5:
          char v4 = 9;
          break;
        case 6:
          char v4 = 10;
          break;
        case 7:
          char v4 = 11;
          break;
        default:
          char v4 = 4;
          break;
      }
LABEL_4:
      *a1 = v4;
      break;
    default:
LABEL_2:
      sub_16C998();
      swift_allocError();
      swift_willThrow();
      break;
  }
}

void SeedBook.hash(into:)(uint64_t a1)
{
  Swift::UInt64 v3 = *(void *)v1;
  char v4 = *(unsigned char *)(v1 + 8);
  uint64_t v5 = *(void *)(v1 + 32);
  char v6 = *(unsigned char *)(v1 + 40);
  long long v20 = *(_OWORD *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  char v9 = *(unsigned char *)(v1 + 80);
  uint64_t v17 = *(void *)(v1 + 96);
  uint64_t v18 = *(void *)(v1 + 88);
  uint64_t v15 = *(void *)(v1 + 112);
  uint64_t v16 = *(void *)(v1 + 104);
  unint64_t v10 = *(void *)(v1 + 136);
  uint64_t v13 = *(void *)(v1 + 128);
  uint64_t v14 = *(void *)(v1 + 120);
  uint64_t v11 = *(void *)(v1 + 152);
  uint64_t v12 = *(void *)(v1 + 144);
  long long v19 = *(_OWORD *)(v1 + 16);
  sub_12588(v1 + 160, (uint64_t)v33);
  uint64_t v21 = *(void *)(v1 + 544);
  int v22 = *(unsigned __int8 *)(v1 + 552);
  sub_1FC820(v3);
  LOBYTE(v25) = v4;
  long long v26 = v19;
  uint64_t v27 = v5;
  LOBYTE(v28) = v6;
  long long v29 = v20;
  uint64_t v30 = v8;
  uint64_t v31 = v7;
  char v32 = v9;
  Book.Metadata.hash(into:)(a1);
  if (v10 >> 1 == 0xFFFFFFFF)
  {
    sub_1FC800(0);
  }
  else
  {
    uint64_t v25 = v18;
    *(void *)&long long v26 = v17;
    *((void *)&v26 + 1) = v16;
    uint64_t v27 = v15;
    uint64_t v28 = v14;
    *(void *)&long long v29 = v13;
    *((void *)&v29 + 1) = v10;
    uint64_t v30 = v12;
    uint64_t v31 = v11;
    sub_1FC800(1u);
    InternalAffinitySource.hash(into:)(a1);
  }
  sub_12588((uint64_t)v33, (uint64_t)&v25);
  if (sub_125F0((uint64_t)&v25) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_12588((uint64_t)v33, (uint64_t)__src);
    memcpy(__dst, __src, sizeof(__dst));
    sub_1FC800(1u);
    BookHistory.hash(into:)();
  }
  swift_bridgeObjectRetain();
  sub_167680(a1, v21);
  swift_bridgeObjectRelease();
  if (v22 == 12)
  {
    sub_1FC800(0);
  }
  else
  {
    __src[0] = v22;
    sub_1FC800(1u);
    PositiveAffinitySource.hash(into:)();
  }
}

unint64_t sub_1621FC(char a1)
{
  unint64_t result = 0x444965726F7473;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x617461646174656DLL;
      break;
    case 2:
    case 5:
      unint64_t result = 0xD000000000000016;
      break;
    case 3:
      unint64_t result = 0x747369486B6F6F62;
      break;
    case 4:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1622D0()
{
  return sub_1621FC(*v0);
}

uint64_t sub_1622D8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16BEF0(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_162300(uint64_t a1)
{
  unint64_t v2 = sub_16847C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_16233C(uint64_t a1)
{
  unint64_t v2 = sub_16847C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t SeedBook.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_2718D8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)&v18 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v48 = *(unsigned __int8 *)(v1 + 8);
  long long v36 = *(_OWORD *)(v1 + 16);
  uint64_t v35 = *(void *)(v1 + 32);
  int v34 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v32 = *(void *)(v1 + 56);
  uint64_t v33 = v7;
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v30 = *(void *)(v1 + 72);
  uint64_t v31 = v8;
  int v29 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 88);
  uint64_t v27 = *(void *)(v1 + 96);
  uint64_t v28 = v9;
  uint64_t v10 = *(void *)(v1 + 104);
  uint64_t v25 = *(void *)(v1 + 112);
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v1 + 120);
  uint64_t v23 = *(void *)(v1 + 128);
  uint64_t v24 = v11;
  uint64_t v12 = *(void *)(v1 + 136);
  uint64_t v21 = *(void *)(v1 + 144);
  uint64_t v22 = v12;
  uint64_t v20 = *(void *)(v1 + 152);
  sub_12588(v1 + 160, (uint64_t)v47);
  uint64_t v19 = *(void *)(v1 + 544);
  HIDWORD(v18) = *(unsigned __int8 *)(v1 + 552);
  sub_5D64(a1, a1[3]);
  sub_16847C();
  sub_1FC870();
  LOBYTE(v38) = 0;
  uint64_t v13 = v37;
  sub_1FC560();
  if (!v13)
  {
    uint64_t v14 = v26;
    uint64_t v15 = v27;
    uint64_t v16 = v28;
    LOBYTE(v38) = v48;
    long long v39 = v36;
    uint64_t v40 = v35;
    LOBYTE(v41) = v34;
    uint64_t v42 = v33;
    uint64_t v43 = v32;
    uint64_t v44 = v31;
    uint64_t v45 = v30;
    char v46 = v29;
    char v49 = 1;
    sub_1684D0();
    sub_1FC530();
    uint64_t v38 = v16;
    *(void *)&long long v39 = v15;
    *((void *)&v39 + 1) = v14;
    uint64_t v40 = v25;
    uint64_t v41 = v24;
    uint64_t v42 = v23;
    uint64_t v43 = v22;
    uint64_t v44 = v21;
    uint64_t v45 = v20;
    char v49 = 2;
    sub_168524();
    sub_1FC4A0();
    sub_12588((uint64_t)v47, (uint64_t)&v38);
    char v49 = 3;
    sub_168578();
    sub_1FC4A0();
    uint64_t v38 = v19;
    char v49 = 4;
    sub_12124(&qword_271900);
    sub_1685CC();
    sub_1FC530();
    LOBYTE(v38) = BYTE4(v18);
    char v49 = 5;
    sub_168720();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int SeedBook.hashValue.getter()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1FC7E0();
  SeedBook.hash(into:)((uint64_t)v2);
  return sub_1FC830();
}

void *SeedBook.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_271938);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = a1[3];
  char v49 = a1;
  sub_5D64(a1, v9);
  sub_16847C();
  sub_1FC850();
  if (v2) {
    return (void *)sub_1264C((uint64_t)v49);
  }
  uint64_t v10 = v6;
  int v48 = a2;
  LOBYTE(v51[0]) = 0;
  uint64_t v11 = v5;
  uint64_t v12 = sub_1FC420();
  v54[0] = v12;
  LOBYTE(v50[0]) = 1;
  sub_168774();
  sub_1FC3F0();
  uint64_t v46 = v12;
  uint64_t v13 = v51[1];
  uint64_t v14 = v51[2];
  LODWORD(v12) = LOBYTE(v51[9]);
  int v55 = LOBYTE(v51[0]);
  LOBYTE(v54[1]) = v51[0];
  v54[2] = v51[1];
  v54[3] = v51[2];
  uint64_t v45 = v51[3];
  v54[4] = v51[3];
  int v44 = LOBYTE(v51[4]);
  LOBYTE(v54[5]) = v51[4];
  uint64_t v42 = v51[6];
  uint64_t v43 = v51[5];
  v54[6] = v51[5];
  v54[7] = v51[6];
  uint64_t v40 = v51[8];
  uint64_t v41 = v51[7];
  v54[8] = v51[7];
  v54[9] = v51[8];
  LOBYTE(v54[10]) = v51[9];
  LOBYTE(v50[0]) = 2;
  sub_1687C8();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1FC360();
  uint64_t v47 = 0;
  int v30 = v12;
  uint64_t v38 = v13;
  uint64_t v39 = v14;
  uint64_t v15 = v51[6];
  uint64_t v16 = v51[8];
  v54[11] = v51[0];
  v54[12] = v51[1];
  v54[13] = v51[2];
  v54[14] = v51[3];
  v54[15] = v51[4];
  v54[16] = v51[5];
  v54[17] = v51[6];
  v54[18] = v51[7];
  v54[19] = v51[8];
  char v58 = 3;
  uint64_t v35 = v51[0];
  uint64_t v36 = v51[3];
  uint64_t v31 = v51[1];
  uint64_t v32 = v51[2];
  uint64_t v33 = v51[4];
  uint64_t v34 = v51[5];
  uint64_t v37 = v51[7];
  sub_12430(v51[0], v51[1], v51[2], v51[3], v51[4], v51[5], v51[6]);
  sub_16881C();
  sub_1FC360();
  uint64_t v29 = v16;
  sub_12588((uint64_t)&v53, (uint64_t)v52);
  sub_12588((uint64_t)v52, (uint64_t)&v54[20]);
  sub_12124(&qword_271900);
  LOBYTE(v50[0]) = 4;
  sub_168870();
  sub_1FC3F0();
  unint64_t v28 = v15;
  uint64_t v17 = v51[0];
  v54[68] = v51[0];
  char v56 = 5;
  sub_168A34();
  uint64_t v27 = v17;
  swift_bridgeObjectRetain();
  sub_1FC360();
  uint64_t v18 = v38;
  uint64_t v19 = v36;
  (*(void (**)(char *, uint64_t))(v10 + 8))(v8, v11);
  LODWORD(v47) = v57;
  LOBYTE(v54[69]) = v57;
  v50[0] = v46;
  LOBYTE(v50[1]) = v55;
  uint64_t v20 = v19;
  v50[2] = v18;
  v50[3] = v39;
  v50[4] = v45;
  LOBYTE(v50[5]) = v44;
  v50[6] = v43;
  v50[7] = v42;
  v50[8] = v41;
  v50[9] = v40;
  LOBYTE(v50[10]) = v30;
  uint64_t v21 = v34;
  uint64_t v23 = v31;
  uint64_t v22 = v32;
  v50[11] = v35;
  v50[12] = v31;
  v50[13] = v32;
  v50[14] = v20;
  uint64_t v24 = v33;
  v50[15] = v33;
  v50[16] = v34;
  unint64_t v25 = v28;
  v50[17] = v28;
  v50[18] = v37;
  v50[19] = v29;
  sub_12588((uint64_t)v52, (uint64_t)&v50[20]);
  v50[68] = v27;
  LOBYTE(v50[69]) = v47;
  sub_12384(v50);
  swift_bridgeObjectRelease();
  sub_1255C(v35, v23, v22, v36, v24, v21, v25);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v48, v50, 0x229uLL);
  sub_1264C((uint64_t)v49);
  memcpy(v51, v54, 0x229uLL);
  return sub_124B4(v51);
}

void *sub_162DD4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return SeedBook.init(from:)(a1, a2);
}

uint64_t sub_162DEC(void *a1)
{
  return SeedBook.encode(to:)(a1);
}

Swift::Int sub_162E08()
{
  memcpy(__dst, v0, sizeof(__dst));
  sub_1FC7E0();
  SeedBook.hash(into:)((uint64_t)v2);
  return sub_1FC830();
}

BooksPersonalization::PositiveAffinitySource::PositiveStarRating_optional __swiftcall PositiveAffinitySource.PositiveStarRating.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_256D48;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t PositiveAffinitySource.PositiveStarRating.rawValue.getter()
{
  uint64_t v1 = 1920298854;
  if (*v0 != 1) {
    uint64_t v1 = 1702259046;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6565726874;
  }
}

BooksPersonalization::PositiveAffinitySource::PositiveStarRating_optional sub_162F0C(Swift::String *a1)
{
  return PositiveAffinitySource.PositiveStarRating.init(rawValue:)(*a1);
}

void sub_162F18(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = 1920298854;
  if (v2 != 1) {
    uint64_t v4 = 1702259046;
  }
  BOOL v5 = v2 == 0;
  if (*v1) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = 0x6565726874;
  }
  if (!v5) {
    unint64_t v3 = 0xE400000000000000;
  }
  *a1 = v6;
  a1[1] = v3;
}

uint64_t sub_162F64()
{
  return sub_1FBA60();
}

uint64_t sub_162FC4()
{
  return sub_1FBA40();
}

uint64_t sub_163014(char *a1, unsigned __int8 *a2)
{
  return sub_1D98B0(*a1, *a2);
}

Swift::Int sub_163020()
{
  return sub_1FC830();
}

uint64_t sub_1630B0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_16312C()
{
  return sub_1FC830();
}

void PositiveAffinitySource.hash(into:)()
{
  switch(*v0)
  {
    case 3:
      Swift::UInt v1 = 0;
      goto LABEL_14;
    case 4:
      Swift::UInt v1 = 2;
      goto LABEL_14;
    case 5:
      Swift::UInt v1 = 3;
      goto LABEL_14;
    case 6:
      Swift::UInt v1 = 4;
      goto LABEL_14;
    case 7:
      Swift::UInt v1 = 5;
      goto LABEL_14;
    case 8:
      Swift::UInt v1 = 6;
      goto LABEL_14;
    case 9:
      Swift::UInt v1 = 7;
      goto LABEL_14;
    case 0xA:
      Swift::UInt v1 = 8;
      goto LABEL_14;
    case 0xB:
      Swift::UInt v1 = 9;
LABEL_14:
      sub_1FC7F0(v1);
      break;
    default:
      sub_1FC7F0(1uLL);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      break;
  }
}

unint64_t sub_163300(char a1)
{
  unint64_t result = 0xD000000000000015;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6465776569766572;
      break;
    case 2:
      unint64_t result = 1684104562;
      break;
    case 3:
      unint64_t result = 0x64656873696E6966;
      break;
    case 4:
      unint64_t result = 0x706D615364616572;
      break;
    case 5:
      unint64_t result = 0x6573616863727570;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 7:
      unint64_t result = 0x64656C706D6173;
      break;
    case 8:
    case 9:
      unint64_t result = 0xD000000000000011;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_16343C(uint64_t a1)
{
  unint64_t v2 = sub_168B30();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_163478(uint64_t a1)
{
  unint64_t v2 = sub_168B30();

  return CodingKey.debugDescription.getter(a1, v2);
}

unint64_t sub_1634B4()
{
  return sub_163300(*v0);
}

uint64_t sub_1634BC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16C174(a1, a2);
  *a3 = result;
  return result;
}

void sub_1634E4(unsigned char *a1@<X8>)
{
  *a1 = 10;
}

uint64_t sub_1634F0(uint64_t a1)
{
  unint64_t v2 = sub_168A88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_16352C(uint64_t a1)
{
  unint64_t v2 = sub_168A88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_163568(uint64_t a1)
{
  unint64_t v2 = sub_168BD8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1635A4(uint64_t a1)
{
  unint64_t v2 = sub_168BD8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1635E0(uint64_t a1)
{
  unint64_t v2 = sub_168CD4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_16361C(uint64_t a1)
{
  unint64_t v2 = sub_168CD4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_163658(uint64_t a1)
{
  unint64_t v2 = sub_168E24();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_163694(uint64_t a1)
{
  unint64_t v2 = sub_168E24();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1636D0(uint64_t a1)
{
  unint64_t v2 = sub_168C2C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_16370C(uint64_t a1)
{
  unint64_t v2 = sub_168C2C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_163748(uint64_t a1)
{
  unint64_t v2 = sub_168D28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_163784(uint64_t a1)
{
  unint64_t v2 = sub_168D28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1637C0(uint64_t a1)
{
  unint64_t v2 = sub_168C80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1637FC(uint64_t a1)
{
  unint64_t v2 = sub_168C80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_163838()
{
  return 0x676E69746172;
}

uint64_t sub_16384C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x676E69746172 && a2 == 0xE600000000000000)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1638DC(uint64_t a1)
{
  unint64_t v2 = sub_168D7C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_163918(uint64_t a1)
{
  unint64_t v2 = sub_168D7C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_163954(uint64_t a1)
{
  unint64_t v2 = sub_168B84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_163990(uint64_t a1)
{
  unint64_t v2 = sub_168B84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1639CC(uint64_t a1)
{
  unint64_t v2 = sub_168ADC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_163A08(uint64_t a1)
{
  unint64_t v2 = sub_168ADC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t PositiveAffinitySource.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_271980);
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  long long v64 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_271988);
  uint64_t v62 = *(void *)(v5 - 8);
  uint64_t v63 = v5;
  __chkstk_darwin(v5);
  long long v61 = (char *)&v41 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_271990);
  uint64_t v59 = *(void *)(v7 - 8);
  uint64_t v60 = v7;
  __chkstk_darwin(v7);
  char v58 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_271998);
  uint64_t v56 = *(void *)(v9 - 8);
  uint64_t v57 = v9;
  __chkstk_darwin(v9);
  int v55 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_2719A0);
  uint64_t v53 = *(void *)(v11 - 8);
  uint64_t v54 = v11;
  __chkstk_darwin(v11);
  char v52 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v51 = sub_12124(&qword_2719A8);
  uint64_t v50 = *(void *)(v51 - 8);
  __chkstk_darwin(v51);
  char v49 = (char *)&v41 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v48 = sub_12124(&qword_2719B0);
  uint64_t v47 = *(void *)(v48 - 8);
  __chkstk_darwin(v48);
  uint64_t v46 = (char *)&v41 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_12124(&qword_2719B8);
  uint64_t v44 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v16 = (char *)&v41 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_12124(&qword_2719C0);
  uint64_t v42 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  uint64_t v18 = (char *)&v41 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v19 = sub_12124(&qword_2719C8);
  uint64_t v41 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v21 = (char *)&v41 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = sub_12124(&qword_2719D0);
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v68 = v22;
  uint64_t v69 = v23;
  __chkstk_darwin(v22);
  unint64_t v25 = (char *)&v41 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v26 = *v1;
  sub_5D64(a1, a1[3]);
  sub_168A88();
  long long v67 = v25;
  sub_1FC870();
  switch(v26)
  {
    case 3:
      char v70 = 0;
      sub_168E24();
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v41 + 8))(v21, v19);
      goto LABEL_15;
    case 4:
      char v73 = 2;
      sub_168D28();
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v44 + 8);
      uint64_t v34 = v16;
      uint64_t v35 = &v81;
      goto LABEL_6;
    case 5:
      char v74 = 3;
      sub_168CD4();
      uint64_t v36 = v46;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v33 = *(void (**)(char *, uint64_t))(v47 + 8);
      uint64_t v34 = v36;
      uint64_t v35 = &v82;
LABEL_6:
      uint64_t v37 = *(v35 - 32);
      goto LABEL_14;
    case 6:
      char v75 = 4;
      sub_168C80();
      uint64_t v38 = v49;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v38, v51);
      goto LABEL_15;
    case 7:
      char v76 = 5;
      sub_168C2C();
      uint64_t v39 = v52;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v40 = v53;
      uint64_t v37 = v54;
      goto LABEL_13;
    case 8:
      char v77 = 6;
      sub_168BD8();
      uint64_t v39 = v55;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v40 = v56;
      uint64_t v37 = v57;
      goto LABEL_13;
    case 9:
      char v78 = 7;
      sub_168B84();
      uint64_t v39 = v58;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v40 = v59;
      uint64_t v37 = v60;
      goto LABEL_13;
    case 10:
      char v79 = 8;
      sub_168B30();
      uint64_t v39 = v61;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v40 = v62;
      uint64_t v37 = v63;
      goto LABEL_13;
    case 11:
      char v80 = 9;
      sub_168ADC();
      uint64_t v39 = v64;
      unint64_t v28 = v67;
      uint64_t v27 = v68;
      sub_1FC440();
      uint64_t v40 = v65;
      uint64_t v37 = v66;
LABEL_13:
      uint64_t v33 = *(void (**)(char *, uint64_t))(v40 + 8);
      uint64_t v34 = v39;
LABEL_14:
      v33(v34, v37);
LABEL_15:
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v28, v27);
      break;
    default:
      char v72 = 1;
      sub_168D7C();
      uint64_t v29 = v67;
      uint64_t v30 = v68;
      sub_1FC440();
      char v71 = v26;
      sub_168DD0();
      uint64_t v31 = v43;
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v42 + 8))(v18, v31);
      uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v69 + 8))(v29, v30);
      break;
  }
  return result;
}

Swift::Int PositiveAffinitySource.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t PositiveAffinitySource.init(from:)@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  char v72 = a2;
  uint64_t v3 = sub_12124(&qword_271A38);
  uint64_t v65 = *(void *)(v3 - 8);
  uint64_t v66 = v3;
  __chkstk_darwin(v3);
  char v76 = (char *)&v45 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_271A40);
  uint64_t v63 = *(void *)(v5 - 8);
  uint64_t v64 = v5;
  __chkstk_darwin(v5);
  char v71 = (char *)&v45 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_271A48);
  uint64_t v61 = *(void *)(v7 - 8);
  uint64_t v62 = v7;
  __chkstk_darwin(v7);
  char v75 = (char *)&v45 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_271A50);
  uint64_t v59 = *(void *)(v9 - 8);
  uint64_t v60 = v9;
  __chkstk_darwin(v9);
  char v70 = (char *)&v45 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v58 = sub_12124(&qword_271A58);
  uint64_t v57 = *(void *)(v58 - 8);
  __chkstk_darwin(v58);
  char v74 = (char *)&v45 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = sub_12124(&qword_271A60);
  uint64_t v55 = *(void *)(v56 - 8);
  __chkstk_darwin(v56);
  uint64_t v69 = (char *)&v45 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v73 = sub_12124(&qword_271A68);
  uint64_t v54 = *(void *)(v73 - 8);
  __chkstk_darwin(v73);
  uint64_t v68 = (char *)&v45 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v53 = sub_12124(&qword_271A70);
  uint64_t v51 = *(void *)(v53 - 8);
  __chkstk_darwin(v53);
  long long v67 = (char *)&v45 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v52 = sub_12124(&qword_271A78);
  uint64_t v50 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v16 = (char *)&v45 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_12124(&qword_271A80);
  uint64_t v49 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v19 = (char *)&v45 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v20 = sub_12124(&qword_271A88);
  uint64_t v21 = *(void *)(v20 - 8);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v45 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = a1[3];
  char v77 = a1;
  sub_5D64(a1, v24);
  sub_168A88();
  uint64_t v25 = v78;
  sub_1FC850();
  if (v25) {
    goto LABEL_26;
  }
  uint64_t v47 = v19;
  uint64_t v46 = v17;
  uint64_t v48 = v16;
  uint64_t v27 = v73;
  int v26 = v74;
  uint64_t v29 = v75;
  unint64_t v28 = v76;
  uint64_t v78 = v21;
  uint64_t v30 = sub_1FC430();
  if (*(void *)(v30 + 16) != 1)
  {
    uint64_t v33 = sub_1FC0F0();
    swift_allocError();
    uint64_t v35 = v34;
    sub_12124(&qword_26F030);
    *uint64_t v35 = &type metadata for PositiveAffinitySource;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v33 - 8) + 104))(v35, enum case for DecodingError.typeMismatch(_:), v33);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
LABEL_26:
    uint64_t v43 = (uint64_t)v77;
    return sub_1264C(v43);
  }
  switch(*(unsigned char *)(v30 + 32))
  {
    case 1:
      char v81 = 1;
      sub_168D7C();
      uint64_t v36 = v48;
      sub_1FC2F0();
      sub_168E78();
      uint64_t v37 = v52;
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v50 + 8))(v36, v37);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = v80;
      break;
    case 2:
      char v82 = 2;
      sub_168D28();
      uint64_t v38 = v67;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v51 + 8))(v38, v53);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 4;
      break;
    case 3:
      char v83 = 3;
      sub_168CD4();
      uint64_t v39 = v68;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v54 + 8))(v39, v27);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 5;
      break;
    case 4:
      char v84 = 4;
      sub_168C80();
      uint64_t v40 = v69;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v55 + 8))(v40, v56);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 6;
      break;
    case 5:
      char v85 = 5;
      sub_168C2C();
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v26, v58);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 7;
      break;
    case 6:
      char v86 = 6;
      sub_168BD8();
      uint64_t v41 = v70;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v59 + 8))(v41, v60);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 8;
      break;
    case 7:
      char v87 = 7;
      sub_168B84();
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v61 + 8))(v29, v62);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 9;
      break;
    case 8:
      char v88 = 8;
      sub_168B30();
      uint64_t v42 = v71;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v63 + 8))(v42, v64);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 10;
      break;
    case 9:
      char v89 = 9;
      sub_168ADC();
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v65 + 8))(v28, v66);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 11;
      break;
    default:
      char v79 = 0;
      sub_168E24();
      uint64_t v31 = v47;
      sub_1FC2F0();
      (*(void (**)(char *, uint64_t))(v49 + 8))(v31, v46);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v78 + 8))(v23, v20);
      char v32 = 3;
      break;
  }
  uint64_t v43 = (uint64_t)v77;
  *char v72 = v32;
  return sub_1264C(v43);
}

uint64_t sub_165180@<X0>(void *a1@<X0>, char *a2@<X8>)
{
  return PositiveAffinitySource.init(from:)(a1, a2);
}

uint64_t sub_165198(void *a1)
{
  return PositiveAffinitySource.encode(to:)(a1);
}

Swift::Int sub_1651B4()
{
  return sub_1FC830();
}

uint64_t InternalAffinitySource.affinityInfos.getter()
{
  uint64_t v1 = *v0;
  uint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  uint64_t v4 = v0[3];
  uint64_t v5 = v0[4];
  uint64_t v6 = v0[5];
  unint64_t v7 = v0[6];
  if (v7 >> 62 == 3)
  {
    uint64_t v8 = *v0;
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_1FD2A0;
    *(void *)(v8 + 32) = v1;
    *(void *)(v8 + 40) = v2;
    *(void *)(v8 + 48) = v3;
    *(void *)(v8 + 56) = v4;
    *(void *)(v8 + 64) = v5;
    *(void *)(v8 + 72) = v6;
    *(unsigned char *)(v8 + 80) = v7 & 1;
  }
  sub_1244C();
  return v8;
}

double InternalAffinitySource.rawAffinity.getter()
{
  return sub_165310(Array<A>.rawAffinity.getter);
}

double sub_165310(uint64_t (*a1)(uint64_t))
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  unint64_t v8 = v1[6];
  if (v8 >> 62 == 3)
  {
    uint64_t v10 = *v1;
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v10 = swift_allocObject();
    *(_OWORD *)(v10 + 16) = xmmword_1FD2A0;
    *(void *)(v10 + 32) = v2;
    *(void *)(v10 + 40) = v3;
    *(void *)(v10 + 48) = v4;
    *(void *)(v10 + 56) = v5;
    *(void *)(v10 + 64) = v6;
    *(void *)(v10 + 72) = v7;
    *(unsigned char *)(v10 + 80) = v8 & 1;
  }
  sub_1244C();
  double v11 = COERCE_DOUBLE(a1(v10));
  char v13 = v12;
  swift_bridgeObjectRelease();
  double result = v11;
  if (v13) {
    return 0.0;
  }
  return result;
}

void ReviewInfo.starRating.getter(unsigned char *a1@<X8>)
{
  double v2 = *v1;
  double v3 = round((*v1 * 0.5 + 0.5) * 5.0);
  if ((~*(void *)&v3 & 0x7FF0000000000000) == 0)
  {
    __break(1u);
    goto LABEL_8;
  }
  if (v3 <= -9.22337204e18)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  if (v3 >= 9.22337204e18)
  {
LABEL_9:
    __break(1u);
    return;
  }
  unint64_t v4 = (uint64_t)v3 - 1;
  if (v4 >= 5)
  {
    sub_10BFC0();
    swift_allocError();
    *(double *)uint64_t v5 = v2;
    *(unsigned char *)(v5 + 8) = 0;
    swift_willThrow();
  }
  else
  {
    *a1 = v4;
  }
}

BOOL static DatedAffinity.== infix(_:_:)(double *a1, double *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void InternalAffinitySource.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *v1;
  Swift::UInt64 v4 = v1[2];
  Swift::UInt64 v3 = v1[3];
  Swift::UInt64 v6 = v1[4];
  Swift::UInt64 v5 = v1[5];
  unint64_t v7 = v1[6];
  Swift::UInt64 v8 = v1[7];
  Swift::UInt64 v9 = v1[8];
  switch(v7 >> 62)
  {
    case 1uLL:
      Swift::UInt v11 = 1;
      goto LABEL_4;
    case 2uLL:
      sub_1FC7F0(2uLL);
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_12578();
      if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v16 = v4;
      }
      else {
        Swift::UInt64 v16 = 0;
      }
      sub_1FC820(v16);
      if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v17 = v3;
      }
      else {
        Swift::UInt64 v17 = 0;
      }
      sub_1FC820(v17);
      if (v7)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v18 = v6;
        }
        else {
          Swift::UInt64 v18 = 0;
        }
        sub_1FC820(v18);
        if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v19 = v5;
        }
        else {
          Swift::UInt64 v19 = 0;
        }
        sub_1FC820(v19);
      }
      if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v20 = v8;
      }
      else {
        Swift::UInt64 v20 = 0;
      }
      sub_1FC820(v20);
      if ((v9 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v15 = v9;
      }
      else {
        Swift::UInt64 v15 = 0;
      }
      goto LABEL_40;
    case 3uLL:
      sub_1FC7F0(3uLL);
      sub_2CB54(a1, v2);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      return;
    default:
      Swift::UInt v11 = 0;
LABEL_4:
      sub_1FC7F0(v11);
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_12578();
      if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v12 = v4;
      }
      else {
        Swift::UInt64 v12 = 0;
      }
      sub_1FC820(v12);
      if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v13 = v3;
      }
      else {
        Swift::UInt64 v13 = 0;
      }
      sub_1FC820(v13);
      if (v7)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v14 = v6;
        }
        else {
          Swift::UInt64 v14 = 0;
        }
        sub_1FC820(v14);
        if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v15 = v5;
        }
        else {
          Swift::UInt64 v15 = 0;
        }
LABEL_40:
        sub_1FC820(v15);
      }
      return;
  }
}

uint64_t sub_165860()
{
  uint64_t result = 0x656B694C7373656CLL;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x656B694C65726F6DLL;
      break;
    case 2:
      uint64_t result = 0x776569766572;
      break;
    case 3:
      uint64_t result = 0x746963696C706D69;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1658F0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16C56C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_165918(uint64_t a1)
{
  unint64_t v2 = sub_168ECC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_165954(uint64_t a1)
{
  unint64_t v2 = sub_168ECC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_165990(uint64_t a1)
{
  unint64_t v2 = sub_168F20();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1659CC(uint64_t a1)
{
  unint64_t v2 = sub_168F20();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_165A08(uint64_t a1)
{
  unint64_t v2 = sub_16901C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_165A44(uint64_t a1)
{
  unint64_t v2 = sub_16901C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_165A80(uint64_t a1)
{
  unint64_t v2 = sub_168FC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_165ABC(uint64_t a1)
{
  unint64_t v2 = sub_168FC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_165AF8(uint64_t a1)
{
  unint64_t v2 = sub_168F74();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_165B34(uint64_t a1)
{
  unint64_t v2 = sub_168F74();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t InternalAffinitySource.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_271A98);
  uint64_t v38 = *(void *)(v3 - 8);
  uint64_t v39 = v3;
  __chkstk_darwin(v3);
  uint64_t v37 = (char *)&v31 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v36 = sub_12124(&qword_271AA0);
  uint64_t v35 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v34 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v33 = sub_12124(&qword_271AA8);
  uint64_t v32 = *(void *)(v33 - 8);
  __chkstk_darwin(v33);
  unint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_271AB0);
  uint64_t v31 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_271AB8);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v47 = v11;
  uint64_t v48 = v12;
  __chkstk_darwin(v11);
  Swift::UInt64 v14 = (char *)&v31 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *v1;
  uint64_t v44 = v1[1];
  uint64_t v45 = v15;
  uint64_t v16 = v1[3];
  uint64_t v40 = v1[2];
  uint64_t v41 = v16;
  uint64_t v17 = v1[5];
  unint64_t v18 = v1[6];
  uint64_t v42 = v1[4];
  uint64_t v43 = v17;
  uint64_t v19 = v1[7];
  uint64_t v20 = v1[8];
  sub_5D64(a1, a1[3]);
  sub_168ECC();
  sub_1FC870();
  switch(v18 >> 62)
  {
    case 1uLL:
      LOBYTE(v49) = 1;
      sub_168FC8();
      uint64_t v22 = v47;
      sub_1FC440();
      uint64_t v49 = v45;
      uint64_t v50 = v44;
      uint64_t v51 = v40;
      uint64_t v52 = v41;
      uint64_t v53 = v42;
      uint64_t v54 = v43;
      char v55 = v18 & 1;
      sub_1686CC();
      uint64_t v23 = v33;
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v23);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v14, v22);
    case 2uLL:
      LOBYTE(v49) = 2;
      sub_168F74();
      uint64_t v24 = v34;
      uint64_t v22 = v47;
      sub_1FC440();
      uint64_t v49 = v45;
      uint64_t v50 = v44;
      uint64_t v51 = v40;
      uint64_t v52 = v41;
      uint64_t v53 = v42;
      uint64_t v54 = v43;
      char v55 = v18 & 1;
      char v56 = 0;
      sub_1686CC();
      uint64_t v25 = v36;
      uint64_t v26 = v46;
      sub_1FC530();
      if (!v26)
      {
        uint64_t v49 = v19;
        uint64_t v50 = v20;
        char v56 = 1;
        sub_1082DC();
        sub_1FC530();
      }
      (*(void (**)(char *, uint64_t))(v35 + 8))(v24, v25);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v14, v22);
    case 3uLL:
      LOBYTE(v49) = 3;
      sub_168F20();
      unint64_t v28 = v37;
      uint64_t v21 = v47;
      sub_1FC440();
      uint64_t v49 = v45;
      char v56 = 0;
      sub_12124(&qword_271920);
      sub_168970(&qword_271918, (void (*)(void))sub_1686CC);
      uint64_t v29 = v39;
      uint64_t v30 = v46;
      sub_1FC530();
      if (!v30)
      {
        LOBYTE(v49) = v44;
        char v56 = 1;
        sub_168678();
        sub_1FC530();
      }
      (*(void (**)(char *, uint64_t))(v38 + 8))(v28, v29);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v14, v21);
    default:
      LOBYTE(v49) = 0;
      sub_16901C();
      uint64_t v21 = v47;
      sub_1FC440();
      uint64_t v49 = v45;
      uint64_t v50 = v44;
      uint64_t v51 = v40;
      uint64_t v52 = v41;
      uint64_t v53 = v42;
      uint64_t v54 = v43;
      char v55 = v18 & 1;
      sub_1686CC();
      sub_1FC530();
      (*(void (**)(char *, uint64_t))(v31 + 8))(v10, v8);
      return (*(uint64_t (**)(char *, uint64_t))(v48 + 8))(v14, v21);
  }
}

Swift::Int InternalAffinitySource.hashValue.getter()
{
  uint64_t v1 = *((void *)v0 + 8);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  uint64_t v10 = v1;
  sub_1FC7E0();
  InternalAffinitySource.hash(into:)((uint64_t)v5);
  return sub_1FC830();
}

uint64_t InternalAffinitySource.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v49 = a2;
  uint64_t v46 = sub_12124(&qword_271AE8);
  uint64_t v48 = *(void *)(v46 - 8);
  __chkstk_darwin(v46);
  *(void *)&long long v51 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_12124(&qword_271AF0);
  uint64_t v47 = *(void *)(v45 - 8);
  __chkstk_darwin(v45);
  uint64_t v50 = (char *)&v41 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v43 = sub_12124(&qword_271AF8);
  uint64_t v44 = *(void *)(v43 - 8);
  __chkstk_darwin(v43);
  long long v6 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_271B00);
  uint64_t v42 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v9 = (char *)&v41 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_12124(&qword_271B08);
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v41 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1[3];
  uint64_t v52 = a1;
  sub_5D64(a1, v14);
  sub_168ECC();
  uint64_t v15 = v53;
  sub_1FC850();
  if (v15) {
    goto LABEL_9;
  }
  *(void *)&long long v53 = v9;
  uint64_t v41 = v7;
  uint64_t v16 = v6;
  unint64_t v18 = v50;
  uint64_t v17 = v51;
  uint64_t v19 = sub_1FC430();
  uint64_t v20 = v19;
  if (*(void *)(v19 + 16) != 1)
  {
    uint64_t v29 = sub_1FC0F0();
    swift_allocError();
    uint64_t v31 = v30;
    sub_12124(&qword_26F030);
    *uint64_t v31 = &type metadata for InternalAffinitySource;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v29 - 8) + 104))(v31, enum case for DecodingError.typeMismatch(_:), v29);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_9:
    uint64_t v40 = (uint64_t)v52;
    return sub_1264C(v40);
  }
  switch(*(unsigned char *)(v19 + 32))
  {
    case 1:
      LOBYTE(v55) = 1;
      sub_168FC8();
      sub_1FC2F0();
      sub_1689E0();
      uint64_t v32 = v43;
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v44 + 8))(v16, v32);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      uint64_t v24 = v55;
      uint64_t v23 = v56;
      long long v25 = v57;
      long long v26 = v58;
      unint64_t v28 = v59 | 0x4000000000000000;
      goto LABEL_11;
    case 2:
      LOBYTE(v55) = 2;
      sub_168F74();
      sub_1FC2F0();
      LOBYTE(v54) = 0;
      sub_1689E0();
      uint64_t v33 = v45;
      sub_1FC3F0();
      uint64_t v37 = v13;
      uint64_t v24 = v55;
      uint64_t v23 = v56;
      long long v53 = v57;
      long long v51 = v58;
      uint64_t v48 = v59;
      char v60 = 1;
      sub_108384();
      sub_1FC3F0();
      (*(void (**)(char *, uint64_t))(v47 + 8))(v18, v33);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v37, v10);
      long long v25 = v53;
      long long v27 = v54;
      uint64_t v39 = v49;
      unint64_t v28 = v48 | 0x8000000000000000;
      uint64_t v40 = (uint64_t)v52;
      long long v26 = v51;
      goto LABEL_13;
    case 3:
      LOBYTE(v55) = 3;
      sub_168F20();
      sub_1FC2F0();
      *(void *)&long long v53 = v20;
      sub_12124(&qword_271920);
      LOBYTE(v54) = 0;
      sub_168970(&qword_271968, (void (*)(void))sub_1689E0);
      uint64_t v35 = v46;
      uint64_t v36 = v17;
      sub_1FC3F0();
      uint64_t v38 = v13;
      uint64_t v24 = v55;
      char v60 = 1;
      sub_16891C();
      sub_1FC3F0();
      (*(void (**)(uint64_t, uint64_t))(v48 + 8))(v36, v35);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v38, v10);
      uint64_t v23 = v54;
      long long v25 = 0uLL;
      unint64_t v28 = 0xC000000000000000;
      long long v26 = 0uLL;
LABEL_11:
      long long v27 = 0uLL;
      goto LABEL_12;
    default:
      LOBYTE(v55) = 0;
      sub_16901C();
      uint64_t v21 = v53;
      sub_1FC2F0();
      sub_1689E0();
      uint64_t v22 = v41;
      sub_1FC3F0();
      (*(void (**)(uint64_t, uint64_t))(v42 + 8))(v21, v22);
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
      uint64_t v24 = v55;
      uint64_t v23 = v56;
      long long v25 = v57;
      long long v26 = v58;
      long long v27 = 0uLL;
      unint64_t v28 = v59;
LABEL_12:
      uint64_t v40 = (uint64_t)v52;
      uint64_t v39 = v49;
LABEL_13:
      *(void *)uint64_t v39 = v24;
      *(void *)(v39 + 8) = v23;
      *(_OWORD *)(v39 + 16) = v25;
      *(_OWORD *)(v39 + 32) = v26;
      *(void *)(v39 + 48) = v28;
      *(_OWORD *)(v39 + 56) = v27;
      break;
  }
  return sub_1264C(v40);
}

uint64_t sub_166C1C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return InternalAffinitySource.init(from:)(a1, a2);
}

uint64_t sub_166C34(void *a1)
{
  return InternalAffinitySource.encode(to:)(a1);
}

Swift::Int sub_166C50()
{
  uint64_t v1 = *((void *)v0 + 8);
  long long v2 = v0[1];
  long long v6 = *v0;
  long long v7 = v2;
  long long v3 = v0[3];
  long long v8 = v0[2];
  long long v9 = v3;
  uint64_t v10 = v1;
  sub_1FC7E0();
  InternalAffinitySource.hash(into:)((uint64_t)v5);
  return sub_1FC830();
}

uint64_t ReviewInfo.StarRating.rawValue.getter()
{
  return *v0 + 1;
}

BooksPersonalization::ReviewInfo::StarRating_optional __swiftcall ReviewInfo.StarRating.init(rawValue:)(Swift::Int rawValue)
{
  unint64_t v2 = 0x40302010005uLL >> (8 * rawValue);
  if ((unint64_t)rawValue >= 6) {
    LOBYTE(v2) = 5;
  }
  *uint64_t v1 = v2;
  return (BooksPersonalization::ReviewInfo::StarRating_optional)rawValue;
}

Swift::Int sub_166CDC()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  sub_1FC7F0(v1 + 1);
  return sub_1FC830();
}

void sub_166D24()
{
  sub_1FC7F0(*v0 + 1);
}

Swift::Int sub_166D54()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  sub_1FC7F0(v1 + 1);
  return sub_1FC830();
}

BooksPersonalization::ReviewInfo::StarRating_optional sub_166D98(Swift::Int *a1)
{
  return ReviewInfo.StarRating.init(rawValue:)(*a1);
}

void sub_166DA0(void *a1@<X8>)
{
  *a1 = *v1 + 1;
}

double DatedAffinity.secondsSinceReferenceDate.getter()
{
  return *(double *)(v0 + 8);
}

void ReviewInfo.scoreInStars.getter()
{
  ReviewInfo.starRating.getter(&v0);
}

uint64_t ReviewInfo.maxStarCount.getter()
{
  return 5;
}

void DatedAffinity.hash(into:)()
{
  Swift::UInt64 v1 = v0[1];
  if ((*v0 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *v0;
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1FC820(v2);
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1FC820(v3);
}

uint64_t sub_166E50()
{
  if (*v0) {
    return 0xD000000000000014;
  }
  else {
    return 0x65726F6373;
  }
}

uint64_t sub_166E8C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_16C74C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_166EB4(uint64_t a1)
{
  unint64_t v2 = sub_169070();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_166EF0(uint64_t a1)
{
  unint64_t v2 = sub_169070();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ReviewInfo.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_271B10);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_169070();
  sub_1FC870();
  v8[15] = 0;
  sub_1FC500();
  if (!v1)
  {
    v8[14] = 1;
    sub_1FC500();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int DatedAffinity.hashValue.getter()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1FC7E0();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1FC820(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_1FC820(v4);
  return sub_1FC830();
}

uint64_t ReviewInfo.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_271B20);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_169070();
  sub_1FC850();
  if (!v2)
  {
    char v16 = 0;
    sub_1FC3C0();
    uint64_t v10 = v9;
    char v15 = 1;
    sub_1FC3C0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return sub_1264C((uint64_t)a1);
}

Swift::Int sub_1672A0()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1FC7E0();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v3 = v1;
  }
  else {
    Swift::UInt64 v3 = 0;
  }
  sub_1FC820(v3);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v4 = v2;
  }
  else {
    Swift::UInt64 v4 = 0;
  }
  sub_1FC820(v4);
  return sub_1FC830();
}

uint64_t sub_167300@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return ReviewInfo.init(from:)(a1, a2);
}

uint64_t sub_167318(void *a1)
{
  return ReviewInfo.encode(to:)(a1);
}

BooksPersonalization::ImplicitFeature_optional __swiftcall ImplicitFeature.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  Swift::UInt64 v3 = v1;
  v4._rawValue = &off_256DB0;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 8;
  if (v5 < 8) {
    char v7 = v5;
  }
  *Swift::UInt64 v3 = v7;
  return result;
}

_UNKNOWN **static ImplicitFeature.allCases.getter()
{
  return &off_252BE0;
}

unint64_t ImplicitFeature.rawValue.getter()
{
  unint64_t result = 0xD000000000000019;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000015;
      break;
    case 3:
      unint64_t result = 0x6863727550736177;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0x6C706D6153736177;
      break;
    case 6:
    case 7:
      unint64_t result = 0xD000000000000014;
      break;
    default:
      return result;
  }
  return result;
}

BooksPersonalization::ImplicitFeature_optional sub_167494(Swift::String *a1)
{
  return ImplicitFeature.init(rawValue:)(*a1);
}

unint64_t sub_1674A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = ImplicitFeature.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_1674C8(void *a1@<X8>)
{
  *a1 = &off_252BE0;
}

uint64_t sub_1674D8()
{
  return sub_1FBA60();
}

uint64_t sub_167538()
{
  return sub_1FBA40();
}

uint64_t sub_167588(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_16C8F0();

  return RawRepresentable<>.codingKey.getter(a1, a2, v4);
}

uint64_t sub_1675DC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_16C8F0();

  return RawRepresentable<>.init<A>(codingKey:)(a1, a4, a2, a5, v10, a3);
}

uint64_t sub_167658(char *a1, char *a2)
{
  return sub_1D99A4(*a1, *a2);
}

Swift::Int sub_167664()
{
  return sub_114E24();
}

uint64_t sub_167670()
{
  return sub_16054C();
}

Swift::Int sub_167678()
{
  return sub_114E24();
}

void sub_167680(uint64_t a1, uint64_t a2)
{
  uint64_t v20 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  swift_bridgeObjectRetain();
  Swift::UInt v8 = 0;
  int64_t v9 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_18;
    }
    int64_t v12 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_21;
    }
    if (v12 >= v7) {
      goto LABEL_19;
    }
    unint64_t v13 = *(void *)(v20 + 8 * v12);
    ++v9;
    if (!v13)
    {
      int64_t v9 = v12 + 1;
      if (v12 + 1 >= v7) {
        goto LABEL_19;
      }
      unint64_t v13 = *(void *)(v20 + 8 * v9);
      if (!v13) {
        break;
      }
    }
LABEL_17:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v9 << 6);
LABEL_18:
    uint64_t v15 = *(void *)(*(void *)(a2 + 56) + 8 * v11);
    uint64_t v16 = *(void *)(a1 + 64);
    long long v17 = *(_OWORD *)(a1 + 16);
    v21[0] = *(_OWORD *)a1;
    v21[1] = v17;
    long long v18 = *(_OWORD *)(a1 + 32);
    long long v19 = *(_OWORD *)(a1 + 48);
    uint64_t v22 = v16;
    v21[2] = v18;
    v21[3] = v19;
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    sub_2CB54((uint64_t)v21, v15);
    swift_bridgeObjectRelease();
    v8 ^= sub_1FC830();
  }
  int64_t v14 = v12 + 2;
  if (v14 < v7)
  {
    unint64_t v13 = *(void *)(v20 + 8 * v14);
    if (!v13)
    {
      while (1)
      {
        int64_t v9 = v14 + 1;
        if (__OFADD__(v14, 1)) {
          break;
        }
        if (v9 >= v7) {
          goto LABEL_19;
        }
        unint64_t v13 = *(void *)(v20 + 8 * v9);
        ++v14;
        if (v13) {
          goto LABEL_17;
        }
      }
LABEL_21:
      __break(1u);
      JUMPOUT(0x167938);
    }
    int64_t v9 = v14;
    goto LABEL_17;
  }
LABEL_19:
  swift_release();
  sub_1FC7F0(v8);
}

uint64_t _s20BooksPersonalization22InternalAffinitySourceO2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a1;
  uint64_t v2 = *(void *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  unint64_t v8 = *(void *)(a1 + 48);
  double v9 = *(double *)(a1 + 56);
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v11 = *(void *)a2;
  uint64_t v12 = *(void *)(a2 + 8);
  uint64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = *(void *)(a2 + 24);
  uint64_t v16 = *(void *)(a2 + 32);
  uint64_t v15 = *(void *)(a2 + 40);
  unint64_t v18 = *(void *)(a2 + 48);
  uint64_t v17 = *(void *)(a2 + 56);
  double v19 = *(double *)(a2 + 64);
  v41[0] = *(void *)a1;
  v41[1] = v2;
  v41[2] = v5;
  v41[3] = v4;
  v41[4] = v7;
  v41[5] = v6;
  v41[6] = v8;
  *(double *)&v41[7] = v9;
  double v26 = *(double *)&v10;
  v41[8] = v10;
  v41[9] = v11;
  v41[10] = v12;
  v41[11] = v13;
  v41[12] = v14;
  v41[13] = v16;
  v41[14] = v15;
  v41[15] = v18;
  v41[16] = v17;
  *(double *)&v41[17] = v19;
  switch(v8 >> 62)
  {
    case 1uLL:
      if (v18 >> 62 != 1) {
        goto LABEL_14;
      }
      goto LABEL_13;
    case 2uLL:
      if (v18 >> 62 != 2) {
        goto LABEL_14;
      }
      uint64_t v34 = v3;
      uint64_t v35 = v2;
      uint64_t v36 = v5;
      uint64_t v37 = v4;
      uint64_t v38 = v7;
      uint64_t v39 = v6;
      char v40 = v8 & 1;
      uint64_t v27 = v11;
      uint64_t v28 = v12;
      uint64_t v29 = v13;
      uint64_t v30 = v14;
      uint64_t v31 = v16;
      uint64_t v32 = v15;
      char v33 = v18 & 1;
      double v24 = *(double *)&v17;
      char v23 = _s20BooksPersonalization19FeatureAffinityInfoV2eeoiySbAC_ACtFZ_0((uint64_t)&v34, (uint64_t)&v27);
      sub_1244C();
      sub_1244C();
      sub_16C9EC(v41, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
      if ((v23 & 1) == 0) {
        goto LABEL_15;
      }
      char v20 = v26 == v19 && v9 == v24;
      break;
    case 3uLL:
      if (v18 >> 62 != 3) {
        goto LABEL_14;
      }
      char v25 = v2;
      if ((sub_192D0(v3, v11) & 1) == 0) {
        goto LABEL_14;
      }
      sub_1244C();
      sub_1244C();
      char v21 = sub_1D99A4(v25, v12);
      sub_16C9EC(v41, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
      return v21 & 1;
    default:
      if (v18 >> 62)
      {
LABEL_14:
        sub_1244C();
        sub_1244C();
        sub_16C9EC(v41, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
LABEL_15:
        char v20 = 0;
      }
      else
      {
LABEL_13:
        uint64_t v34 = v3;
        uint64_t v35 = v2;
        uint64_t v36 = v5;
        uint64_t v37 = v4;
        uint64_t v38 = v7;
        uint64_t v39 = v6;
        char v40 = v8 & 1;
        uint64_t v27 = v11;
        uint64_t v28 = v12;
        uint64_t v29 = v13;
        uint64_t v30 = v14;
        uint64_t v31 = v16;
        uint64_t v32 = v15;
        char v33 = v18 & 1;
        char v20 = _s20BooksPersonalization19FeatureAffinityInfoV2eeoiySbAC_ACtFZ_0((uint64_t)&v34, (uint64_t)&v27);
        sub_1244C();
        sub_1244C();
        sub_16C9EC(v41, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_12578);
      }
      break;
  }
  return v20 & 1;
}

uint64_t _s20BooksPersonalization22PositiveAffinitySourceO2eeoiySbAC_ACtFZ_0(unsigned char *a1, unsigned char *a2)
{
  int v2 = *a2;
  switch(*a1)
  {
    case 3:
      if (v2 != 3) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 4:
      if (v2 == 4) {
        goto LABEL_9;
      }
      goto LABEL_23;
    case 5:
      if (v2 != 5) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 6:
      if (v2 != 6) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 7:
      if (v2 != 7) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 8:
      if (v2 != 8) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 9:
      if (v2 != 9) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 0xA:
      if (v2 != 10) {
        goto LABEL_23;
      }
      goto LABEL_9;
    case 0xB:
      if (v2 != 11) {
        goto LABEL_23;
      }
LABEL_9:
      uint64_t result = 1;
      break;
    default:
      if ((v2 - 3) < 9)
      {
LABEL_23:
        uint64_t result = 0;
      }
      else
      {
        if (*a1)
        {
          unint64_t v3 = 0xE400000000000000;
          if (*a1 == 1) {
            uint64_t v4 = 1920298854;
          }
          else {
            uint64_t v4 = 1702259046;
          }
        }
        else
        {
          unint64_t v3 = 0xE500000000000000;
          uint64_t v4 = 0x6565726874;
        }
        uint64_t v6 = 1920298854;
        if (v2 != 1) {
          uint64_t v6 = 1702259046;
        }
        if (*a2) {
          uint64_t v7 = v6;
        }
        else {
          uint64_t v7 = 0x6565726874;
        }
        if (*a2) {
          unint64_t v8 = 0xE400000000000000;
        }
        else {
          unint64_t v8 = 0xE500000000000000;
        }
        if (v4 == v7 && v3 == v8)
        {
          swift_bridgeObjectRelease_n();
          uint64_t result = 1;
        }
        else
        {
          char v9 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t result = v9 & 1;
        }
      }
      break;
  }
  return result;
}

BOOL _s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v4 = *a1;
  char v51 = *((unsigned char *)a1 + 8);
  long long v53 = *((_OWORD *)a1 + 1);
  uint64_t v50 = a1[4];
  char v49 = *((unsigned char *)a1 + 40);
  unint64_t v47 = a1[7];
  uint64_t v48 = a1[6];
  uint64_t v45 = a1[9];
  uint64_t v46 = a1[8];
  char v44 = *((unsigned char *)a1 + 80);
  uint64_t v34 = a1[11];
  long long v35 = *((_OWORD *)a1 + 6);
  uint64_t v36 = a1[14];
  uint64_t v37 = a1[15];
  uint64_t v38 = a1[16];
  uint64_t v39 = a1[18];
  unint64_t v40 = a1[17];
  uint64_t v33 = a1[19];
  sub_12588((uint64_t)(a1 + 20), (uint64_t)v83);
  uint64_t v25 = a1[68];
  int v24 = *((unsigned __int8 *)a1 + 552);
  uint64_t v5 = *a2;
  char v42 = *((unsigned char *)a2 + 8);
  long long v43 = *((_OWORD *)a2 + 1);
  uint64_t v6 = a2[4];
  char v7 = *((unsigned char *)a2 + 40);
  uint64_t v8 = a2[6];
  unint64_t v9 = a2[7];
  uint64_t v10 = a2[8];
  uint64_t v11 = a2[9];
  char v12 = *((unsigned char *)a2 + 80);
  uint64_t v27 = a2[11];
  long long v28 = *((_OWORD *)a2 + 6);
  uint64_t v29 = a2[14];
  uint64_t v30 = a2[15];
  uint64_t v31 = a2[16];
  unint64_t v41 = a2[17];
  uint64_t v32 = a2[18];
  uint64_t v26 = a2[19];
  sub_12588((uint64_t)(a2 + 20), (uint64_t)v84);
  if (v4 != v5) {
    return 0;
  }
  uint64_t v13 = a2[68];
  int v14 = *((unsigned __int8 *)a2 + 552);
  LOBYTE(v67) = v51;
  long long v68 = v53;
  uint64_t v69 = v50;
  LOBYTE(v70) = v49;
  uint64_t v71 = v48;
  unint64_t v72 = v47;
  uint64_t v73 = v46;
  uint64_t v74 = v45;
  LOBYTE(v75) = v44;
  LOBYTE(v58) = v42;
  long long v59 = v43;
  uint64_t v60 = v6;
  LOBYTE(v61) = v7;
  uint64_t v62 = v8;
  unint64_t v63 = v9;
  uint64_t v64 = v10;
  uint64_t v65 = v11;
  char v66 = v12;
  if ((_s20BooksPersonalization4BookV8MetadataV2eeoiySbAE_AEtFZ_0((uint64_t)&v67, (uint64_t)&v58) & 1) == 0) {
    return 0;
  }
  if (v40 >> 1 == 0xFFFFFFFF)
  {
    int v54 = v14;
    unint64_t v15 = v41;
    uint64_t v17 = v38;
    uint64_t v16 = v39;
    uint64_t v19 = v36;
    uint64_t v18 = v37;
    uint64_t v20 = *((void *)&v35 + 1);
    uint64_t v21 = v35;
    uint64_t v22 = v34;
    if (v41 >> 1 == 0xFFFFFFFF) {
      goto LABEL_11;
    }
LABEL_8:
    uint64_t v67 = v22;
    *(void *)&long long v68 = v21;
    *((void *)&v68 + 1) = v20;
    uint64_t v69 = v19;
    uint64_t v70 = v18;
    uint64_t v71 = v17;
    unint64_t v72 = v40;
    uint64_t v73 = v16;
    uint64_t v74 = v33;
    uint64_t v75 = v27;
    long long v76 = v28;
    uint64_t v77 = v29;
    uint64_t v78 = v30;
    uint64_t v79 = v31;
    unint64_t v80 = v15;
    uint64_t v81 = v32;
    uint64_t v82 = v26;
    sub_12430(v27, v28, *((uint64_t *)&v28 + 1), v29, v30, v31, v15);
    sub_16C9EC(&v67, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1255C);
    return 0;
  }
  uint64_t v22 = v34;
  uint64_t v21 = v35;
  uint64_t v67 = v34;
  long long v68 = v35;
  uint64_t v20 = *((void *)&v35 + 1);
  uint64_t v19 = v36;
  uint64_t v69 = v36;
  uint64_t v18 = v37;
  uint64_t v17 = v38;
  uint64_t v70 = v37;
  uint64_t v71 = v38;
  unint64_t v72 = v40;
  uint64_t v16 = v39;
  uint64_t v73 = v39;
  uint64_t v74 = v33;
  if (v41 >> 1 == 0xFFFFFFFF)
  {
    sub_1244C();
    sub_1244C();
    sub_12578();
    unint64_t v15 = v41;
    goto LABEL_8;
  }
  int v54 = v14;
  uint64_t v58 = v27;
  long long v59 = v28;
  uint64_t v60 = v29;
  uint64_t v61 = v30;
  uint64_t v62 = v31;
  unint64_t v63 = v41;
  uint64_t v64 = v32;
  uint64_t v65 = v26;
  sub_12430(v34, v35, *((uint64_t *)&v35 + 1), v36, v37, v38, v40);
  sub_1244C();
  char v52 = _s20BooksPersonalization22InternalAffinitySourceO2eeoiySbAC_ACtFZ_0((uint64_t)&v67, (uint64_t)&v58);
  sub_12578();
  sub_1255C(v34, v35, *((uint64_t *)&v35 + 1), v36, v37, v38, v40);
  if ((v52 & 1) == 0) {
    return 0;
  }
LABEL_11:
  sub_12588((uint64_t)v83, (uint64_t)&v67);
  if (sub_125F0((uint64_t)&v67) == 1)
  {
    sub_12588((uint64_t)v84, (uint64_t)&v58);
    if (sub_125F0((uint64_t)&v58) != 1) {
      return 0;
    }
  }
  else
  {
    sub_12588((uint64_t)v83, (uint64_t)v57);
    sub_12588((uint64_t)v84, (uint64_t)&v58);
    if (sub_125F0((uint64_t)&v58) == 1) {
      return 0;
    }
    sub_12588((uint64_t)v84, (uint64_t)__src);
    memcpy(__dst, __src, 0x179uLL);
    if (!_s20BooksPersonalization11BookHistoryV2eeoiySbAC_ACtFZ_0((uint64_t)v57, (uint64_t)__dst)) {
      return 0;
    }
  }
  if ((sub_6CDD4(v25, v13) & 1) == 0) {
    return 0;
  }
  if (v24 != 12)
  {
    LOBYTE(v58) = v24;
    if (v54 != 12)
    {
      v57[0] = v54;
      if (_s20BooksPersonalization22PositiveAffinitySourceO2eeoiySbAC_ACtFZ_0(&v58, v57)) {
        return 1;
      }
    }
    return 0;
  }
  return v54 == 12;
}

unint64_t sub_16847C()
{
  unint64_t result = qword_2718E0;
  if (!qword_2718E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718E0);
  }
  return result;
}

unint64_t sub_1684D0()
{
  unint64_t result = qword_2718E8;
  if (!qword_2718E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718E8);
  }
  return result;
}

unint64_t sub_168524()
{
  unint64_t result = qword_2718F0;
  if (!qword_2718F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718F0);
  }
  return result;
}

unint64_t sub_168578()
{
  unint64_t result = qword_2718F8;
  if (!qword_2718F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2718F8);
  }
  return result;
}

unint64_t sub_1685CC()
{
  unint64_t result = qword_271908;
  if (!qword_271908)
  {
    sub_121C4(&qword_271900);
    sub_168678();
    sub_168970(&qword_271918, (void (*)(void))sub_1686CC);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271908);
  }
  return result;
}

unint64_t sub_168678()
{
  unint64_t result = qword_271910;
  if (!qword_271910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271910);
  }
  return result;
}

unint64_t sub_1686CC()
{
  unint64_t result = qword_271928;
  if (!qword_271928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271928);
  }
  return result;
}

unint64_t sub_168720()
{
  unint64_t result = qword_271930;
  if (!qword_271930)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271930);
  }
  return result;
}

unint64_t sub_168774()
{
  unint64_t result = qword_271940;
  if (!qword_271940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271940);
  }
  return result;
}

unint64_t sub_1687C8()
{
  unint64_t result = qword_271948;
  if (!qword_271948)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271948);
  }
  return result;
}

unint64_t sub_16881C()
{
  unint64_t result = qword_271950;
  if (!qword_271950)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271950);
  }
  return result;
}

unint64_t sub_168870()
{
  unint64_t result = qword_271958;
  if (!qword_271958)
  {
    sub_121C4(&qword_271900);
    sub_16891C();
    sub_168970(&qword_271968, (void (*)(void))sub_1689E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271958);
  }
  return result;
}

unint64_t sub_16891C()
{
  unint64_t result = qword_271960;
  if (!qword_271960)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271960);
  }
  return result;
}

uint64_t sub_168970(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_271920);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1689E0()
{
  unint64_t result = qword_271970;
  if (!qword_271970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271970);
  }
  return result;
}

unint64_t sub_168A34()
{
  unint64_t result = qword_271978;
  if (!qword_271978)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271978);
  }
  return result;
}

unint64_t sub_168A88()
{
  unint64_t result = qword_2719D8;
  if (!qword_2719D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2719D8);
  }
  return result;
}

unint64_t sub_168ADC()
{
  unint64_t result = qword_2719E0;
  if (!qword_2719E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2719E0);
  }
  return result;
}

unint64_t sub_168B30()
{
  unint64_t result = qword_2719E8;
  if (!qword_2719E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2719E8);
  }
  return result;
}

unint64_t sub_168B84()
{
  unint64_t result = qword_2719F0;
  if (!qword_2719F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2719F0);
  }
  return result;
}

unint64_t sub_168BD8()
{
  unint64_t result = qword_2719F8;
  if (!qword_2719F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2719F8);
  }
  return result;
}

unint64_t sub_168C2C()
{
  unint64_t result = qword_271A00;
  if (!qword_271A00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A00);
  }
  return result;
}

unint64_t sub_168C80()
{
  unint64_t result = qword_271A08;
  if (!qword_271A08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A08);
  }
  return result;
}

unint64_t sub_168CD4()
{
  unint64_t result = qword_271A10;
  if (!qword_271A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A10);
  }
  return result;
}

unint64_t sub_168D28()
{
  unint64_t result = qword_271A18;
  if (!qword_271A18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A18);
  }
  return result;
}

unint64_t sub_168D7C()
{
  unint64_t result = qword_271A20;
  if (!qword_271A20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A20);
  }
  return result;
}

unint64_t sub_168DD0()
{
  unint64_t result = qword_271A28;
  if (!qword_271A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A28);
  }
  return result;
}

unint64_t sub_168E24()
{
  unint64_t result = qword_271A30;
  if (!qword_271A30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A30);
  }
  return result;
}

unint64_t sub_168E78()
{
  unint64_t result = qword_271A90;
  if (!qword_271A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271A90);
  }
  return result;
}

unint64_t sub_168ECC()
{
  unint64_t result = qword_271AC0;
  if (!qword_271AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271AC0);
  }
  return result;
}

unint64_t sub_168F20()
{
  unint64_t result = qword_271AC8;
  if (!qword_271AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271AC8);
  }
  return result;
}

unint64_t sub_168F74()
{
  unint64_t result = qword_271AD0;
  if (!qword_271AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271AD0);
  }
  return result;
}

unint64_t sub_168FC8()
{
  unint64_t result = qword_271AD8;
  if (!qword_271AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271AD8);
  }
  return result;
}

unint64_t sub_16901C()
{
  unint64_t result = qword_271AE0;
  if (!qword_271AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271AE0);
  }
  return result;
}

unint64_t sub_169070()
{
  unint64_t result = qword_271B18;
  if (!qword_271B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B18);
  }
  return result;
}

unint64_t sub_1690C8()
{
  unint64_t result = qword_271B28;
  if (!qword_271B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B28);
  }
  return result;
}

unint64_t sub_169120()
{
  unint64_t result = qword_271B30;
  if (!qword_271B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B30);
  }
  return result;
}

unint64_t sub_169178()
{
  unint64_t result = qword_271B38;
  if (!qword_271B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B38);
  }
  return result;
}

unint64_t sub_1691D0()
{
  unint64_t result = qword_271B40;
  if (!qword_271B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B40);
  }
  return result;
}

unint64_t sub_169228()
{
  unint64_t result = qword_271B48;
  if (!qword_271B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B48);
  }
  return result;
}

unint64_t sub_169280()
{
  unint64_t result = qword_271B50;
  if (!qword_271B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B50);
  }
  return result;
}

unint64_t sub_1692D8()
{
  unint64_t result = qword_271B58;
  if (!qword_271B58)
  {
    sub_121C4(&qword_271B60);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B58);
  }
  return result;
}

unint64_t sub_169338()
{
  unint64_t result = qword_271B68;
  if (!qword_271B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B68);
  }
  return result;
}

unint64_t sub_169390()
{
  unint64_t result = qword_271B70;
  if (!qword_271B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B70);
  }
  return result;
}

uint64_t destroy for SeedBook(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 136) >> 1 != 0xFFFFFFFFLL) {
    sub_12578();
  }

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeedBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v5;
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  unint64_t v6 = *(void *)(a2 + 136);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 >> 1 == 0xFFFFFFFF)
  {
    long long v7 = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = v7;
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    long long v8 = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = v8;
  }
  else
  {
    uint64_t v9 = *(void *)(a2 + 88);
    uint64_t v10 = *(void *)(a2 + 96);
    uint64_t v11 = *(void *)(a2 + 104);
    uint64_t v12 = *(void *)(a2 + 112);
    uint64_t v13 = *(void *)(a2 + 120);
    uint64_t v14 = *(void *)(a2 + 128);
    uint64_t v15 = *(void *)(a2 + 144);
    uint64_t v17 = *(void *)(a2 + 152);
    sub_1244C();
    *(void *)(a1 + 88) = v9;
    *(void *)(a1 + 96) = v10;
    *(void *)(a1 + 104) = v11;
    *(void *)(a1 + 112) = v12;
    *(void *)(a1 + 120) = v13;
    *(void *)(a1 + 128) = v14;
    *(void *)(a1 + 136) = v6;
    *(void *)(a1 + 144) = v15;
    *(void *)(a1 + 152) = v17;
  }
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x179uLL);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeedBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(void *)(a1 + 32) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  long long v6 = *(_OWORD *)(a2 + 64);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v5;
  *(_OWORD *)(a1 + 64) = v6;
  long long v7 = (_OWORD *)(a1 + 88);
  long long v8 = (_OWORD *)(a2 + 88);
  uint64_t v9 = *(void *)(a2 + 136);
  unint64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
  if (*(void *)(a1 + 136) >> 1 == 0xFFFFFFFFLL)
  {
    if (v10 == 0x1FFFFFFFELL)
    {
      *long long v7 = *v8;
      long long v11 = *(_OWORD *)(a2 + 104);
      long long v12 = *(_OWORD *)(a2 + 120);
      long long v13 = *(_OWORD *)(a2 + 136);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(_OWORD *)(a1 + 120) = v12;
      *(_OWORD *)(a1 + 136) = v13;
      *(_OWORD *)(a1 + 104) = v11;
    }
    else
    {
      uint64_t v17 = *(void *)(a2 + 88);
      uint64_t v18 = *(void *)(a2 + 96);
      uint64_t v19 = *(void *)(a2 + 104);
      uint64_t v20 = *(void *)(a2 + 112);
      uint64_t v21 = *(void *)(a2 + 120);
      uint64_t v22 = *(void *)(a2 + 128);
      uint64_t v23 = *(void *)(a2 + 144);
      uint64_t v32 = *(void *)(a2 + 152);
      sub_1244C();
      *(void *)(a1 + 88) = v17;
      *(void *)(a1 + 96) = v18;
      *(void *)(a1 + 104) = v19;
      *(void *)(a1 + 112) = v20;
      *(void *)(a1 + 120) = v21;
      *(void *)(a1 + 128) = v22;
      *(void *)(a1 + 136) = v9;
      *(void *)(a1 + 144) = v23;
      *(void *)(a1 + 152) = v32;
    }
  }
  else if (v10 == 0x1FFFFFFFELL)
  {
    sub_1697BC(a1 + 88);
    *long long v7 = *v8;
    long long v15 = *(_OWORD *)(a2 + 120);
    long long v14 = *(_OWORD *)(a2 + 136);
    long long v16 = *(_OWORD *)(a2 + 104);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(_OWORD *)(a1 + 120) = v15;
    *(_OWORD *)(a1 + 136) = v14;
    *(_OWORD *)(a1 + 104) = v16;
  }
  else
  {
    uint64_t v24 = *(void *)(a2 + 88);
    uint64_t v25 = *(void *)(a2 + 96);
    uint64_t v26 = *(void *)(a2 + 104);
    uint64_t v27 = *(void *)(a2 + 112);
    uint64_t v28 = *(void *)(a2 + 120);
    uint64_t v29 = *(void *)(a2 + 128);
    uint64_t v30 = *(void *)(a2 + 144);
    uint64_t v33 = *(void *)(a2 + 152);
    sub_1244C();
    *(void *)(a1 + 88) = v24;
    *(void *)(a1 + 96) = v25;
    *(void *)(a1 + 104) = v26;
    *(void *)(a1 + 112) = v27;
    *(void *)(a1 + 120) = v28;
    *(void *)(a1 + 128) = v29;
    *(void *)(a1 + 136) = v9;
    *(void *)(a1 + 144) = v30;
    *(void *)(a1 + 152) = v33;
    sub_12578();
  }
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x179uLL);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  return a1;
}

uint64_t sub_1697BC(uint64_t a1)
{
  return a1;
}

uint64_t assignWithTake for SeedBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  unint64_t v5 = *(void *)(a1 + 136);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  if (v5 >> 1 != 0xFFFFFFFF)
  {
    unint64_t v6 = *(void *)(a2 + 136);
    if (v6 >> 1 != 0xFFFFFFFF)
    {
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(void *)(a1 + 136) = v6;
      *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
      sub_12578();
      goto LABEL_6;
    }
    sub_1697BC(a1 + 88);
  }
  long long v7 = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = v7;
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  long long v8 = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = v8;
LABEL_6:
  memcpy((void *)(a1 + 160), (const void *)(a2 + 160), 0x179uLL);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 552) = *(unsigned char *)(a2 + 552);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeedBook(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 553)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeedBook(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 552) = 0;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 553) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 553) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeedBook()
{
  return &type metadata for SeedBook;
}

uint64_t getEnumTagSinglePayload for PositiveAffinitySource(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF5)
  {
    unsigned int v2 = a2 + 11;
    if (a2 + 11 >= 0xFFFF00) {
      unsigned int v3 = 4;
    }
    else {
      unsigned int v3 = 2;
    }
    if (v2 >> 8 < 0xFF) {
      unsigned int v3 = 1;
    }
    if (v2 >= 0x100) {
      uint64_t v4 = v3;
    }
    else {
      uint64_t v4 = 0;
    }
    switch(v4)
    {
      case 1:
        int v5 = a1[1];
        if (!a1[1]) {
          break;
        }
        return (*a1 | (v5 << 8)) - 11;
      case 2:
        int v5 = *(unsigned __int16 *)(a1 + 1);
        if (*(_WORD *)(a1 + 1)) {
          return (*a1 | (v5 << 8)) - 11;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x169B00);
      case 4:
        int v5 = *(_DWORD *)(a1 + 1);
        if (!v5) {
          break;
        }
        return (*a1 | (v5 << 8)) - 11;
      default:
        break;
    }
  }
  unsigned int v7 = *a1;
  if (v7 >= 3) {
    unsigned int v8 = v7 - 2;
  }
  else {
    unsigned int v8 = 0;
  }
  if (v8 >= 0xA) {
    return v8 - 9;
  }
  else {
    return 0;
  }
}

unsigned char *storeEnumTagSinglePayload for PositiveAffinitySource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  unsigned int v3 = a3 + 11;
  if (a3 + 11 >= 0xFFFF00) {
    int v4 = 4;
  }
  else {
    int v4 = 2;
  }
  if (v3 >> 8 < 0xFF) {
    int v4 = 1;
  }
  if (v3 >= 0x100) {
    unsigned int v5 = v4;
  }
  else {
    unsigned int v5 = 0;
  }
  if (a3 >= 0xF5) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0;
  }
  if (a2 > 0xF4)
  {
    unsigned int v7 = ((a2 - 245) >> 8) + 1;
    *unint64_t result = a2 + 11;
    switch(v6)
    {
      case 1:
        result[1] = v7;
        break;
      case 2:
        *(_WORD *)(result + 1) = v7;
        break;
      case 3:
LABEL_25:
        __break(1u);
        JUMPOUT(0x169BE8);
      case 4:
        *(_DWORD *)(result + 1) = v7;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v6)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_19;
      case 3:
        goto LABEL_25;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_20;
      default:
LABEL_19:
        if (a2) {
LABEL_20:
        }
          *unint64_t result = a2 + 11;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource()
{
  return &type metadata for PositiveAffinitySource;
}

unsigned char *storeEnumTagSinglePayload for PositiveAffinitySource.PositiveStarRating(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x169CECLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.PositiveStarRating()
{
  return &type metadata for PositiveAffinitySource.PositiveStarRating;
}

uint64_t destroy for InternalAffinitySource()
{
  return sub_12578();
}

void *initializeWithCopy for InternalAffinitySource(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  sub_1244C();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  return a1;
}

void *assignWithCopy for InternalAffinitySource(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  uint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  sub_1244C();
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  sub_12578();
  return a1;
}

uint64_t assignWithTake for InternalAffinitySource(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  long long v5 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v5;
  *(void *)(a1 + 64) = v3;
  sub_12578();
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalAffinitySource(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *(void *)(a1 + 48) >> 1;
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for InternalAffinitySource(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)(a1 + 16) = 0u;
      *(_OWORD *)(a1 + 32) = 0u;
      *(_OWORD *)a1 = 0u;
      *(void *)(a1 + 56) = 0;
      *(void *)(a1 + 64) = 0;
      *(void *)(a1 + 48) = 2 * -a2;
      return result;
    }
    *(unsigned char *)(a1 + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_169FCC(uint64_t a1)
{
  return *(void *)(a1 + 48) >> 62;
}

uint64_t sub_169FD8(uint64_t result)
{
  *(void *)(result + 48) &= 0x3FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_169FE8(uint64_t result, uint64_t a2)
{
  *(void *)(result + 48) = *(void *)(result + 48) & 1 | (a2 << 62);
  return result;
}

ValueMetadata *type metadata accessor for InternalAffinitySource()
{
  return &type metadata for InternalAffinitySource;
}

uint64_t getEnumTagSinglePayload for DatedAffinity(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for DatedAffinity(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)double result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

ValueMetadata *type metadata accessor for ReviewInfo()
{
  return &type metadata for ReviewInfo;
}

unsigned char *storeEnumTagSinglePayload for ReviewInfo.StarRating(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *double result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A130);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ReviewInfo.StarRating()
{
  return &type metadata for ReviewInfo.StarRating;
}

unsigned char *storeEnumTagSinglePayload for ImplicitFeature(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *double result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A234);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ImplicitFeature()
{
  return &type metadata for ImplicitFeature;
}

ValueMetadata *type metadata accessor for ReviewInfo.CodingKeys()
{
  return &type metadata for ReviewInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for InternalAffinitySource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A34CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAffinitySource.CodingKeys()
{
  return &type metadata for InternalAffinitySource.CodingKeys;
}

ValueMetadata *type metadata accessor for InternalAffinitySource.LessLikeThisCodingKeys()
{
  return &type metadata for InternalAffinitySource.LessLikeThisCodingKeys;
}

ValueMetadata *type metadata accessor for InternalAffinitySource.MoreLikeThisCodingKeys()
{
  return &type metadata for InternalAffinitySource.MoreLikeThisCodingKeys;
}

ValueMetadata *type metadata accessor for InternalAffinitySource.ReviewCodingKeys()
{
  return &type metadata for InternalAffinitySource.ReviewCodingKeys;
}

unsigned char *_s20BooksPersonalization10ReviewInfoV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A484);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAffinitySource.ImplicitCodingKeys()
{
  return &type metadata for InternalAffinitySource.ImplicitCodingKeys;
}

uint64_t getEnumTagSinglePayload for PositiveAffinitySource.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF7) {
    goto LABEL_17;
  }
  if (a2 + 9 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 9) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 9;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 9;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xA;
  int v8 = v6 - 10;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for PositiveAffinitySource.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 9 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 9) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF7) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF6)
  {
    unsigned int v6 = ((a2 - 247) >> 8) + 1;
    *double result = a2 + 9;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A618);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 9;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.CodingKeys()
{
  return &type metadata for PositiveAffinitySource.CodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.IndicatedMoreLikeThisCodingKeys()
{
  return &type metadata for PositiveAffinitySource.IndicatedMoreLikeThisCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.ReviewedCodingKeys()
{
  return &type metadata for PositiveAffinitySource.ReviewedCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.ReadCodingKeys()
{
  return &type metadata for PositiveAffinitySource.ReadCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.FinishedCodingKeys()
{
  return &type metadata for PositiveAffinitySource.FinishedCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.ReadSampleCodingKeys()
{
  return &type metadata for PositiveAffinitySource.ReadSampleCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.PurchasedCodingKeys()
{
  return &type metadata for PositiveAffinitySource.PurchasedCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.DownloadedViaFamilySharingCodingKeys()
{
  return &type metadata for PositiveAffinitySource.DownloadedViaFamilySharingCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.SampledCodingKeys()
{
  return &type metadata for PositiveAffinitySource.SampledCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.AddedToWantToReadCodingKeys()
{
  return &type metadata for PositiveAffinitySource.AddedToWantToReadCodingKeys;
}

ValueMetadata *type metadata accessor for PositiveAffinitySource.ViewedProductPageCodingKeys()
{
  return &type metadata for PositiveAffinitySource.ViewedProductPageCodingKeys;
}

unsigned char *storeEnumTagSinglePayload for SeedBook.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *double result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16A7BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeedBook.CodingKeys()
{
  return &type metadata for SeedBook.CodingKeys;
}

uint64_t getEnumTagSinglePayload for Book.Content(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Book.Content(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = a2 - 255;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_16A880(uint64_t result, char a2)
{
  *(unsigned char *)(result + 8) = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for ReviewInfo.Errors()
{
  return &type metadata for ReviewInfo.Errors;
}

unint64_t sub_16A8A0()
{
  unint64_t result = qword_271B78;
  if (!qword_271B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B78);
  }
  return result;
}

unint64_t sub_16A8F8()
{
  unint64_t result = qword_271B80;
  if (!qword_271B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B80);
  }
  return result;
}

unint64_t sub_16A950()
{
  unint64_t result = qword_271B88;
  if (!qword_271B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B88);
  }
  return result;
}

unint64_t sub_16A9A8()
{
  unint64_t result = qword_271B90;
  if (!qword_271B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B90);
  }
  return result;
}

unint64_t sub_16AA00()
{
  unint64_t result = qword_271B98;
  if (!qword_271B98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271B98);
  }
  return result;
}

unint64_t sub_16AA58()
{
  unint64_t result = qword_271BA0;
  if (!qword_271BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BA0);
  }
  return result;
}

unint64_t sub_16AAB0()
{
  unint64_t result = qword_271BA8;
  if (!qword_271BA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BA8);
  }
  return result;
}

unint64_t sub_16AB08()
{
  unint64_t result = qword_271BB0;
  if (!qword_271BB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BB0);
  }
  return result;
}

unint64_t sub_16AB60()
{
  unint64_t result = qword_271BB8;
  if (!qword_271BB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BB8);
  }
  return result;
}

unint64_t sub_16ABB8()
{
  unint64_t result = qword_271BC0;
  if (!qword_271BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BC0);
  }
  return result;
}

unint64_t sub_16AC10()
{
  unint64_t result = qword_271BC8;
  if (!qword_271BC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BC8);
  }
  return result;
}

unint64_t sub_16AC68()
{
  unint64_t result = qword_271BD0;
  if (!qword_271BD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BD0);
  }
  return result;
}

unint64_t sub_16ACC0()
{
  unint64_t result = qword_271BD8;
  if (!qword_271BD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BD8);
  }
  return result;
}

unint64_t sub_16AD18()
{
  unint64_t result = qword_271BE0;
  if (!qword_271BE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BE0);
  }
  return result;
}

unint64_t sub_16AD70()
{
  unint64_t result = qword_271BE8;
  if (!qword_271BE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BE8);
  }
  return result;
}

unint64_t sub_16ADC8()
{
  unint64_t result = qword_271BF0;
  if (!qword_271BF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BF0);
  }
  return result;
}

unint64_t sub_16AE20()
{
  unint64_t result = qword_271BF8;
  if (!qword_271BF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271BF8);
  }
  return result;
}

unint64_t sub_16AE78()
{
  unint64_t result = qword_271C00;
  if (!qword_271C00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C00);
  }
  return result;
}

unint64_t sub_16AED0()
{
  unint64_t result = qword_271C08;
  if (!qword_271C08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C08);
  }
  return result;
}

unint64_t sub_16AF28()
{
  unint64_t result = qword_271C10;
  if (!qword_271C10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C10);
  }
  return result;
}

unint64_t sub_16AF80()
{
  unint64_t result = qword_271C18;
  if (!qword_271C18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C18);
  }
  return result;
}

unint64_t sub_16AFD8()
{
  unint64_t result = qword_271C20;
  if (!qword_271C20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C20);
  }
  return result;
}

unint64_t sub_16B030()
{
  unint64_t result = qword_271C28;
  if (!qword_271C28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C28);
  }
  return result;
}

unint64_t sub_16B088()
{
  unint64_t result = qword_271C30;
  if (!qword_271C30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C30);
  }
  return result;
}

unint64_t sub_16B0E0()
{
  unint64_t result = qword_271C38;
  if (!qword_271C38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C38);
  }
  return result;
}

unint64_t sub_16B138()
{
  unint64_t result = qword_271C40;
  if (!qword_271C40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C40);
  }
  return result;
}

unint64_t sub_16B190()
{
  unint64_t result = qword_271C48;
  if (!qword_271C48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C48);
  }
  return result;
}

unint64_t sub_16B1E8()
{
  unint64_t result = qword_271C50;
  if (!qword_271C50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C50);
  }
  return result;
}

unint64_t sub_16B240()
{
  unint64_t result = qword_271C58;
  if (!qword_271C58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C58);
  }
  return result;
}

unint64_t sub_16B298()
{
  unint64_t result = qword_271C60;
  if (!qword_271C60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C60);
  }
  return result;
}

unint64_t sub_16B2F0()
{
  unint64_t result = qword_271C68;
  if (!qword_271C68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C68);
  }
  return result;
}

unint64_t sub_16B348()
{
  unint64_t result = qword_271C70;
  if (!qword_271C70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C70);
  }
  return result;
}

unint64_t sub_16B3A0()
{
  unint64_t result = qword_271C78;
  if (!qword_271C78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C78);
  }
  return result;
}

unint64_t sub_16B3F8()
{
  unint64_t result = qword_271C80;
  if (!qword_271C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C80);
  }
  return result;
}

unint64_t sub_16B450()
{
  unint64_t result = qword_271C88;
  if (!qword_271C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C88);
  }
  return result;
}

unint64_t sub_16B4A8()
{
  unint64_t result = qword_271C90;
  if (!qword_271C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C90);
  }
  return result;
}

unint64_t sub_16B500()
{
  unint64_t result = qword_271C98;
  if (!qword_271C98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271C98);
  }
  return result;
}

unint64_t sub_16B558()
{
  unint64_t result = qword_271CA0;
  if (!qword_271CA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CA0);
  }
  return result;
}

unint64_t sub_16B5B0()
{
  unint64_t result = qword_271CA8;
  if (!qword_271CA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CA8);
  }
  return result;
}

unint64_t sub_16B608()
{
  unint64_t result = qword_271CB0;
  if (!qword_271CB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CB0);
  }
  return result;
}

unint64_t sub_16B660()
{
  unint64_t result = qword_271CB8;
  if (!qword_271CB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CB8);
  }
  return result;
}

unint64_t sub_16B6B8()
{
  unint64_t result = qword_271CC0;
  if (!qword_271CC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CC0);
  }
  return result;
}

unint64_t sub_16B710()
{
  unint64_t result = qword_271CC8;
  if (!qword_271CC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CC8);
  }
  return result;
}

unint64_t sub_16B768()
{
  unint64_t result = qword_271CD0;
  if (!qword_271CD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CD0);
  }
  return result;
}

unint64_t sub_16B7C0()
{
  unint64_t result = qword_271CD8;
  if (!qword_271CD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271CD8);
  }
  return result;
}

unint64_t sub_16B814(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_2703D0);
    unsigned int v3 = (void *)sub_1FC2A0();
    for (uint64_t i = (unsigned char *)(a1 + 40); ; i += 16)
    {
      uint64_t v5 = *((void *)i - 1);
      char v6 = *i;
      unint64_t result = sub_56168(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      *(unsigned char *)(v3[7] + result) = v6;
      uint64_t v9 = v3[2];
      BOOL v10 = __OFADD__(v9, 1);
      uint64_t v11 = v9 + 1;
      if (v10) {
        goto LABEL_10;
      }
      v3[2] = v11;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_16B8EC(void *a1)
{
  return sub_16BBD4(a1, &qword_2703C8);
}

unint64_t sub_16B8F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_270398);
    unsigned int v3 = (void *)sub_1FC2A0();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_56168(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_16B9D0(void *a1)
{
  return sub_16BBD4(a1, &qword_270438);
}

unint64_t sub_16B9DC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_270168);
    unsigned int v3 = (void *)sub_1FC2A0();
    for (uint64_t i = (uint64_t *)(a1 + 40); ; i += 2)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      unint64_t result = sub_56168(v5);
      if (v8) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      uint64_t v9 = 8 * result;
      *(void *)(v3[6] + v9) = v5;
      *(void *)(v3[7] + v9) = v6;
      uint64_t v10 = v3[2];
      BOOL v11 = __OFADD__(v10, 1);
      uint64_t v12 = v10 + 1;
      if (v11) {
        goto LABEL_10;
      }
      v3[2] = v12;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_16BAB8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_12124(&qword_270428);
  unsigned int v3 = (void *)sub_1FC2A0();
  uint64_t v4 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v6 = a1[6];
  unint64_t result = sub_56168(v4);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v9 = a1 + 9;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v3[6] + 8 * result) = v4;
    uint64_t v10 = (void *)(v3[7] + 16 * result);
    void *v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v3[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v3[2] = v13;
    if (!--v1) {
      goto LABEL_8;
    }
    long long v14 = v9 + 3;
    uint64_t v4 = *(v9 - 2);
    uint64_t v5 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_56168(v4);
    uint64_t v9 = v14;
    uint64_t v6 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_16BBC8(void *a1)
{
  return sub_16BBD4(a1, &qword_270380);
}

unint64_t sub_16BBD4(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_12124(a2);
  uint64_t v4 = (void *)sub_1FC2A0();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_56168(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v4;
  }
  uint64_t v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v10) = v6;
    *(void *)(v4[7] + v10) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    long long v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_bridgeObjectRetain();
    unint64_t result = sub_56168(v6);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_16BCD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_270410);
    unsigned int v3 = (void *)sub_1FC2A0();
    for (uint64_t i = (unsigned char *)(a1 + 72); ; i += 48)
    {
      uint64_t v5 = *((void *)i - 5);
      uint64_t v6 = *((void *)i - 4);
      uint64_t v7 = *((void *)i - 3);
      char v8 = *(i - 16);
      uint64_t v9 = *((void *)i - 1);
      char v10 = *i;
      unint64_t result = sub_56168(v5);
      if (v12) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v13 = v3[7] + 40 * result;
      *(void *)uint64_t v13 = v6;
      *(void *)(v13 + 8) = v7;
      *(unsigned char *)(v13 + 16) = v8;
      *(void *)(v13 + 24) = v9;
      *(unsigned char *)(v13 + 32) = v10;
      uint64_t v14 = v3[2];
      BOOL v15 = __OFADD__(v14, 1);
      uint64_t v16 = v14 + 1;
      if (v15) {
        goto LABEL_10;
      }
      v3[2] = v16;
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_16BDD0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_12124(&qword_2703E8);
    unsigned int v3 = (void *)sub_1FC2A0();
    uint64_t v4 = (void *)(a1 + 80);
    while (1)
    {
      uint64_t v5 = *(v4 - 6);
      long long v16 = *(_OWORD *)(v4 - 5);
      char v6 = *((unsigned char *)v4 - 24);
      uint64_t v7 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v9 = *v4;
      unint64_t result = sub_56168(v5);
      if (v11) {
        break;
      }
      *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v3[6] + 8 * result) = v5;
      uint64_t v12 = v3[7] + 48 * result;
      *(_OWORD *)uint64_t v12 = v16;
      *(unsigned char *)(v12 + 16) = v6;
      *(void *)(v12 + 24) = v7;
      *(void *)(v12 + 32) = v8;
      *(void *)(v12 + 40) = v9;
      uint64_t v13 = v3[2];
      BOOL v14 = __OFADD__(v13, 1);
      uint64_t v15 = v13 + 1;
      if (v14) {
        goto LABEL_10;
      }
      v4 += 7;
      v3[2] = v15;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!--v1) {
        return (unint64_t)v3;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

uint64_t sub_16BEF0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x617461646174656DLL && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000000219760 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x747369486B6F6F62 && a2 == 0xEB0000000079726FLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001ELL && a2 == 0x8000000000219780 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x80000000002197A0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_16C174(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000015 && a2 == 0x80000000002197C0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6465776569766572 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 1684104562 && a2 == 0xE400000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x64656873696E6966 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x706D615364616572 && a2 == 0xEA0000000000656CLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6573616863727570 && a2 == 0xE900000000000064 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002197E0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else if (a1 == 0x64656C706D6173 && a2 == 0xE700000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 7;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000218FA0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 8;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000219800)
  {
    swift_bridgeObjectRelease();
    return 9;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 9;
    }
    else {
      return 10;
    }
  }
}

uint64_t sub_16C56C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x656B694C7373656CLL && a2 == 0xEC00000073696854;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x656B694C65726F6DLL && a2 == 0xEC00000073696854 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x776569766572 && a2 == 0xE600000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746963696C706D69 && a2 == 0xE800000000000000)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_16C74C(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726F6373 && a2 == 0xE500000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x8000000000219820)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

void *sub_16C834(void *a1)
{
  uint64_t v2 = a1[12];
  uint64_t v3 = a1[13];
  uint64_t v4 = a1[14];
  uint64_t v5 = a1[15];
  uint64_t v6 = a1[16];
  unint64_t v7 = a1[17];
  uint64_t v9 = a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_12430(v9, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

unint64_t sub_16C8F0()
{
  unint64_t result = qword_271D00;
  if (!qword_271D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271D00);
  }
  return result;
}

unint64_t sub_16C944()
{
  unint64_t result = qword_271D08;
  if (!qword_271D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271D08);
  }
  return result;
}

unint64_t sub_16C998()
{
  unint64_t result = qword_271D10;
  if (!qword_271D10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271D10);
  }
  return result;
}

uint64_t *sub_16C9EC(uint64_t *a1, void (*a2)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = a1[10];
  uint64_t v5 = a1[11];
  uint64_t v6 = a1[12];
  uint64_t v7 = a1[13];
  uint64_t v8 = a1[14];
  uint64_t v9 = a1[15];
  uint64_t v10 = a1[16];
  uint64_t v11 = a1[17];
  uint64_t v13 = a1[9];
  a2(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8]);
  a2(v13, v4, v5, v6, v7, v8, v9, v10, v11);
  return a1;
}

unsigned char *_s20BooksPersonalization22InternalAffinitySourceO22LessLikeThisCodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x16CB38);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalAffinitySource.Errors()
{
  return &type metadata for InternalAffinitySource.Errors;
}

unint64_t sub_16CB74()
{
  unint64_t result = qword_271D38;
  if (!qword_271D38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271D38);
  }
  return result;
}

uint64_t sub_16CBC8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1FB110();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB100();
  sub_5D64((void *)(v1 + 16), *(void *)(v1 + 40));
  uint64_t v7 = sub_1FAF90();
  unint64_t v9 = v8;
  sub_1FAC30();
  swift_allocObject();
  sub_1FAC20();
  sub_1FB690();
  sub_16CEC4(&qword_271DE8, (void (*)(uint64_t))&type metadata accessor for Features);
  sub_1FAC00();
  swift_release();
  sub_520E8(v7, v9);
  uint64_t v11 = v12;
  (*(void (**)(uint64_t, char *, uint64_t))(v4 + 32))(a1, v6, v3);
  uint64_t result = type metadata accessor for EventAggregationWork();
  *(void *)(a1 + *(int *)(result + 20)) = v11;
  return result;
}

uint64_t type metadata accessor for UserFeaturesWorkFactory()
{
  return self;
}

uint64_t sub_16CE58()
{
  return sub_16CEC4(&qword_271DE0, (void (*)(uint64_t))type metadata accessor for EventAggregationWork);
}

uint64_t sub_16CEA0@<X0>(uint64_t a1@<X8>)
{
  return sub_16CBC8(a1);
}

uint64_t sub_16CEC4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_16CF0C(uint64_t a1)
{
  uint64_t v48 = sub_12124(&qword_2709F8);
  uint64_t v3 = __chkstk_darwin(v48);
  unint64_t v47 = (void *)((char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v46 = (void *)((char *)v39 - v6);
  __chkstk_darwin(v5);
  uint64_t v45 = (char *)v39 - v7;
  int64_t v8 = *(void *)(a1 + 16);
  unint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  v39[1] = v1;
  char v51 = _swiftEmptyArrayStorage;
  sub_46ADC(0, v8, 0);
  uint64_t result = sub_73C38(a1);
  uint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  uint64_t v40 = a1 + 80;
  int64_t v41 = v8;
  uint64_t v43 = a1 + 64;
  uint64_t v44 = a1;
  uint64_t v42 = v11;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v17 = (unint64_t)v12 >> 6;
    if ((*(void *)(v14 + 8 * ((unint64_t)v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_26;
    }
    uint64_t v49 = v13;
    uint64_t v18 = v48;
    uint64_t v19 = v45;
    uint64_t v20 = (uint64_t)&v45[*(int *)(v48 + 48)];
    uint64_t v21 = *(void *)(a1 + 48);
    uint64_t v22 = *(void *)(a1 + 56);
    uint64_t v23 = *(void *)(v21 + 8 * v12);
    uint64_t v24 = type metadata accessor for AttributeAffinityResult() - 8;
    sub_557E0(v22 + *(void *)(*(void *)v24 + 72) * v12, v20);
    void *v19 = v23;
    uint64_t v25 = (uint64_t)v46;
    *uint64_t v46 = v23;
    sub_557E0(v20, v25 + *(int *)(v18 + 48));
    uint64_t v26 = v47;
    sub_135BD8(v25, (uint64_t)v47);
    sub_135C40((uint64_t)v19);
    uint64_t v27 = *v26;
    uint64_t v28 = (uint64_t *)((char *)v26 + *(int *)(v18 + 48));
    sub_12124(&qword_270A00);
    sub_1FB3A0();
    uint64_t v29 = v50;
    uint64_t v30 = *v28;
    sub_135C40((uint64_t)v26);
    unint64_t v9 = v51;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_46ADC(0, v9[2] + 1, 1);
      unint64_t v9 = v51;
    }
    unint64_t v32 = v9[2];
    unint64_t v31 = v9[3];
    if (v32 >= v31 >> 1)
    {
      uint64_t result = sub_46ADC(v31 > 1, v32 + 1, 1);
      unint64_t v9 = v51;
    }
    void v9[2] = v32 + 1;
    uint64_t v33 = &v9[3 * v32];
    v33[4] = v27;
    v33[5] = v29;
    v33[6] = v30;
    a1 = v44;
    int64_t v15 = 1 << *(unsigned char *)(v44 + 32);
    if (v12 >= v15) {
      goto LABEL_27;
    }
    uint64_t v14 = v43;
    uint64_t v34 = *(void *)(v43 + 8 * v17);
    if ((v34 & (1 << v12)) == 0) {
      goto LABEL_28;
    }
    LODWORD(v11) = v42;
    if (*(_DWORD *)(v44 + 36) != v42) {
      goto LABEL_29;
    }
    unint64_t v35 = v34 & (-2 << (v12 & 0x3F));
    if (v35)
    {
      int64_t v15 = __clz(__rbit64(v35)) | v12 & 0xFFFFFFFFFFFFFFC0;
      int64_t v16 = v41;
    }
    else
    {
      unint64_t v36 = v17 + 1;
      unint64_t v37 = (unint64_t)(v15 + 63) >> 6;
      int64_t v16 = v41;
      if (v17 + 1 < v37)
      {
        unint64_t v38 = *(void *)(v43 + 8 * v36);
        if (v38)
        {
LABEL_22:
          int64_t v15 = __clz(__rbit64(v38)) + (v36 << 6);
        }
        else
        {
          while (v37 - 2 != v17)
          {
            unint64_t v38 = *(void *)(v40 + 8 * v17++);
            if (v38)
            {
              unint64_t v36 = v17 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v13 = v49 + 1;
    uint64_t v12 = v15;
    if (v49 + 1 == v16) {
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_16D294(char *__src)
{
  v2[143] = v1;
  memcpy(v2 + 2, __src, 0x1A8uLL);
  v2[144] = *((void *)__src + 53);
  memcpy(v2 + 56, __src + 432, 0x2B0uLL);
  return _swift_task_switch(sub_16D324, 0, 0);
}

uint64_t sub_16D324()
{
  uint64_t v1 = v0[144];
  uint64_t v2 = (void *)v0[143];
  uint64_t v3 = v2[10];
  uint64_t v4 = v2[11];
  sub_5D64(v2 + 7, v3);
  v0[55] = v1;
  int64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[145] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_16D448;
  uint64_t v6 = v0[144];
  return v8(v0 + 2, v6, v3, v4);
}

uint64_t sub_16D448(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1168) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_16D6A4;
  }
  else
  {
    *(void *)(v4 + 1176) = a1;
    uint64_t v5 = sub_16D570;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_16D570()
{
  uint64_t v1 = v0[147];
  uint64_t v2 = (void *)v0[143];
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  sub_5D64(v2 + 2, v3);
  uint64_t v5 = sub_4B8F8(v1);
  swift_bridgeObjectRelease();
  uint64_t v6 = (*(uint64_t (**)(uint64_t (*)(uint64_t), void, void *, void *, void *, uint64_t, uint64_t))(v4 + 8))(sub_16D6BC, 0, v5, &type metadata for UInt64, &protocol witness table for UInt64, v3, v4);
  swift_release();
  uint64_t v7 = sub_16D7E0(v6);
  swift_bridgeObjectRelease();
  uint64_t v8 = sub_16CF0C(v7);
  swift_release();
  uint64_t v9 = (uint64_t (*)(uint64_t))v0[1];
  return v9(v8);
}

uint64_t sub_16D6A4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16D6BC(uint64_t result)
{
  if (*(void *)(result + 136) >> 1 != 0xFFFFFFFFLL) {
    return swift_bridgeObjectRetain();
  }
  __break(1u);
  return result;
}

uint64_t type metadata accessor for SeedBookAuthorRecommendationService()
{
  return self;
}

uint64_t sub_16D6FC(void *a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_B06F4;
  v5[143] = v4;
  memcpy(v5 + 2, a1, 0x1A8uLL);
  v5[144] = a1[53];
  memcpy(v5 + 56, a1 + 54, 0x2B0uLL);
  return _swift_task_switch(sub_16D324, 0, 0);
}

uint64_t sub_16D7E0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (uint64_t isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_16D938((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    if (v1) {
      swift_willThrow();
    }
    else {
      return v6;
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v2 = sub_16D938((unint64_t *)v7, v4, v2);
    swift_slowDealloc();
  }
  return v2;
}

uint64_t sub_16D938(unint64_t *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v30 = a2;
  unint64_t v31 = a1;
  uint64_t v36 = sub_12124(&qword_2709F8);
  uint64_t v4 = __chkstk_darwin(v36);
  uint64_t v6 = (uint64_t *)((char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v4);
  uint64_t v8 = (uint64_t *)((char *)&v29 - v7);
  uint64_t v9 = type metadata accessor for AttributeAffinityResult();
  uint64_t v35 = *(void *)(v9 - 8);
  uint64_t result = __chkstk_darwin(v9 - 8);
  uint64_t v12 = (char *)&v29 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = 0;
  unint64_t v37 = (void *)a3;
  uint64_t v14 = *(void *)(a3 + 64);
  uint64_t v32 = 0;
  uint64_t v33 = a3 + 64;
  uint64_t v15 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v16 = -1;
  if (v15 < 64) {
    uint64_t v16 = ~(-1 << v15);
  }
  unint64_t v17 = v16 & v14;
  int64_t v34 = (unint64_t)(v15 + 63) >> 6;
  while (1)
  {
    if (v17)
    {
      unint64_t v18 = __clz(__rbit64(v17));
      v17 &= v17 - 1;
      unint64_t v19 = v18 | (v13 << 6);
      goto LABEL_5;
    }
    int64_t v25 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v25 >= v34) {
      return sub_72EE0(v31, v30, v32, v37);
    }
    unint64_t v26 = *(void *)(v33 + 8 * v25);
    ++v13;
    if (!v26)
    {
      int64_t v13 = v25 + 1;
      if (v25 + 1 >= v34) {
        return sub_72EE0(v31, v30, v32, v37);
      }
      unint64_t v26 = *(void *)(v33 + 8 * v13);
      if (!v26)
      {
        int64_t v13 = v25 + 2;
        if (v25 + 2 >= v34) {
          return sub_72EE0(v31, v30, v32, v37);
        }
        unint64_t v26 = *(void *)(v33 + 8 * v13);
        if (!v26) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v17 = (v26 - 1) & v26;
    unint64_t v19 = __clz(__rbit64(v26)) + (v13 << 6);
LABEL_5:
    uint64_t v20 = *(void *)(v37[6] + 8 * v19);
    sub_557E0(v37[7] + *(void *)(v35 + 72) * v19, (uint64_t)v12);
    uint64_t v21 = v36;
    uint64_t v22 = (uint64_t)v8 + *(int *)(v36 + 48);
    void *v8 = v20;
    sub_557E0((uint64_t)v12, v22);
    uint64_t v23 = (double *)((char *)v6 + *(int *)(v21 + 48));
    void *v6 = v20;
    sub_135CA0(v22, (uint64_t)v23);
    double v24 = *v23;
    sub_1111A8((uint64_t)v23);
    uint64_t result = sub_1111A8((uint64_t)v12);
    if (v24 > 0.0)
    {
      *(unint64_t *)((char *)v31 + ((v19 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v19;
      if (__OFADD__(v32++, 1))
      {
        __break(1u);
        return sub_72EE0(v31, v30, v32, v37);
      }
    }
  }
  int64_t v27 = v25 + 3;
  if (v27 >= v34) {
    return sub_72EE0(v31, v30, v32, v37);
  }
  unint64_t v26 = *(void *)(v33 + 8 * v27);
  if (v26)
  {
    int64_t v13 = v27;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v13 = v27 + 1;
    if (__OFADD__(v27, 1)) {
      break;
    }
    if (v13 >= v34) {
      return sub_72EE0(v31, v30, v32, v37);
    }
    unint64_t v26 = *(void *)(v33 + 8 * v13);
    ++v27;
    if (v26) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

_UNKNOWN **static MediaTypeMethod.allCases.getter()
{
  return &off_256558;
}

uint64_t sub_16DC50(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  *(void *)(v4 + 1280) = v3;
  *(void *)(v4 + 1272) = a2;
  *(void *)(v4 + 1264) = a1;
  *(unsigned char *)(v4 + 1312) = *(unsigned char *)(a2 + 480);
  *(unsigned char *)(v4 + 1313) = *a3;
  return _swift_task_switch(sub_16DC88, 0, 0);
}

uint64_t sub_16DC88()
{
  unsigned int v1 = *(unsigned __int8 *)(v0 + 1313);
  if (v1 == 4) {
    unsigned int v1 = 0x1020100u >> (8 * *(unsigned char *)(v0 + 1312));
  }
  *(unsigned char *)(v0 + 1314) = v1;
  uint64_t v2 = *(void *)(v0 + 1280);
  swift_beginAccess();
  uint64_t v3 = *(void *)(v2 + 16);
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_4C58C(v1), (v5 & 1) != 0))
  {
    sub_51B70(*(void *)(v3 + 56) + 40 * v4, v0 + 1136);
  }
  else
  {
    *(void *)(v0 + 1168) = 0;
    *(_OWORD *)(v0 + 1136) = 0u;
    *(_OWORD *)(v0 + 1152) = 0u;
  }
  swift_endAccess();
  if (*(void *)(v0 + 1160))
  {
    char v6 = *(unsigned char *)(v0 + 1312);
    uint64_t v7 = *(void *)(v0 + 1272);
    sub_37C30((long long *)(v0 + 1136), v0 + 1176);
    uint64_t v8 = *(void *)(v0 + 1200);
    uint64_t v9 = *(void *)(v0 + 1208);
    sub_5D64((void *)(v0 + 1176), v8);
    memcpy((void *)(v0 + 16), (const void *)v7, 0x1E0uLL);
    *(unsigned char *)(v0 + 496) = v6;
    memcpy((void *)(v0 + 497), (const void *)(v7 + 481), 0x27FuLL);
    uint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 + 8) + **(int **)(v9 + 8));
    uint64_t v10 = (void *)swift_task_alloc();
    *(void *)(v0 + 1288) = v10;
    void *v10 = v0;
    v10[1] = sub_16DEFC;
    uint64_t v11 = *(void *)(v0 + 1264);
    return v15(v11, v0 + 16, v8, v9);
  }
  else
  {
    sub_16EE5C(v0 + 1136);
    sub_16EEBC();
    swift_allocError();
    unsigned char *v13 = v1;
    swift_willThrow();
    uint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_16DEFC(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1296) = a1;
  *(void *)(v3 + 1304) = v1;
  swift_task_dealloc();
  if (v1) {
    unint64_t v4 = sub_16E3E0;
  }
  else {
    unint64_t v4 = sub_16E014;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_16E014()
{
  uint64_t v18 = v0;
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDC0();
  if (os_log_type_enabled(v1, v2))
  {
    unint64_t v3 = 0xEB00000000746E69;
    int v4 = *(unsigned __int8 *)(v0 + 1313);
    uint64_t v5 = 0x6F4A656C676E6973;
    uint64_t v6 = swift_slowAlloc();
    uint64_t v17 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136315650;
    if (v4 == 4)
    {
      unint64_t v7 = 0xE500000000000000;
      uint64_t v8 = 0x3E6C696E3CLL;
    }
    else
    {
      unint64_t v7 = 0xEB00000000746E69;
      uint64_t v8 = 0x6F4A656C676E6973;
      switch(*(unsigned char *)(v0 + 1313))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x746E696F4A6C6C61;
          break;
        case 2:
          uint64_t v8 = 0x6F6A7369446C6C61;
          break;
        case 3:
          uint64_t v8 = 0x7473657265746E69;
          unint64_t v7 = 0xED00006465736142;
          break;
        default:
          break;
      }
    }
    uint64_t v9 = *(unsigned __int8 *)(v0 + 1314);
    *(void *)(v0 + 1240) = sub_D5890(v8, v7, &v17);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 12) = 2080;
    switch(v9)
    {
      case 1:
        unint64_t v3 = 0xE800000000000000;
        uint64_t v5 = 0x746E696F4A6C6C61;
        break;
      case 2:
        uint64_t v5 = 0x6F6A7369446C6C61;
        break;
      case 3:
        uint64_t v5 = 0x7473657265746E69;
        unint64_t v3 = 0xED00006465736142;
        break;
      default:
        break;
    }
    *(void *)(v0 + 1248) = sub_D5890(v5, v3, &v17);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v6 + 22) = 2080;
    uint64_t v10 = swift_bridgeObjectRetain();
    sub_38DC4(v10);
    sub_55738();
    uint64_t v11 = sub_1FBCC0();
    unint64_t v13 = v12;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 1256) = sub_D5890(v11, v13, &v17);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v1, v2, "maybeMediaTypeMethod=%s\nmediaTypeMethod=%s\nrecommendedMediaTypes=%s", (uint8_t *)v6, 0x20u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  sub_1264C(v0 + 1176);
  uint64_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v15 = *(void *)(v0 + 1296);
  return v14(v15);
}

uint64_t sub_16E3E0()
{
  sub_1264C(v0 + 1176);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

BooksPersonalization::MediaTypeMethod_optional __swiftcall MediaTypeMethod.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_256E90;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 4;
  if (v5 < 4) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

uint64_t MediaTypeMethod.rawValue.getter()
{
  uint64_t result = 0x6F4A656C676E6973;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x746E696F4A6C6C61;
      break;
    case 2:
      uint64_t result = 0x6F6A7369446C6C61;
      break;
    case 3:
      uint64_t result = 0x7473657265746E69;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_16E544()
{
  unint64_t result = qword_271EA8;
  if (!qword_271EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271EA8);
  }
  return result;
}

Swift::Int sub_16E598()
{
  return sub_1FC830();
}

uint64_t sub_16E684()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_16E758()
{
  return sub_1FC830();
}

BooksPersonalization::MediaTypeMethod_optional sub_16E840(Swift::String *a1)
{
  return MediaTypeMethod.init(rawValue:)(*a1);
}

void sub_16E84C(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000746E69;
  uint64_t v3 = 0x6F4A656C676E6973;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x746E696F4A6C6C61;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0x6F6A7369446C6C61;
      *(void *)(a1 + 8) = 0xEB00000000746E69;
      break;
    case 3:
      strcpy((char *)a1, "interestBased");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_16E8FC()
{
  unint64_t result = qword_271EB0;
  if (!qword_271EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271EB0);
  }
  return result;
}

unint64_t sub_16E954()
{
  unint64_t result = qword_271EB8;
  if (!qword_271EB8)
  {
    sub_121C4(&qword_271EC0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271EB8);
  }
  return result;
}

void sub_16E9B0(void *a1@<X8>)
{
  *a1 = &off_256F10;
}

uint64_t sub_16E9C0()
{
  return sub_1FBA60();
}

uint64_t sub_16EA20()
{
  return sub_1FBA40();
}

ValueMetadata *type metadata accessor for MediaTypeMethod()
{
  return &type metadata for MediaTypeMethod;
}

uint64_t sub_16EA84()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = v0 + OBJC_IVAR____TtC20BooksPersonalization41DelegatingMediaTypesRecommendationService_logger;
  uint64_t v2 = sub_1FB430();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(v1, v2);

  return swift_deallocClassInstance();
}

uint64_t sub_16EB2C()
{
  return type metadata accessor for DelegatingMediaTypesRecommendationService();
}

uint64_t type metadata accessor for DelegatingMediaTypesRecommendationService()
{
  uint64_t result = qword_271EF8;
  if (!qword_271EF8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_16EB80()
{
  uint64_t result = sub_1FB430();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_updateClassMetadata2();
    if (!result) {
      return 0;
    }
  }
  return result;
}

uint64_t sub_16EC20(uint64_t a1, const void *a2)
{
  uint64_t v5 = *v2;
  memcpy((void *)(v3 + 16), a2, 0x460uLL);
  *(unsigned char *)(v3 + 1152) = 4;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v3 + 1136) = v6;
  *(void *)uint64_t v6 = v3;
  *(void *)(v6 + 8) = sub_16ED08;
  *(void *)(v6 + 1280) = v5;
  *(void *)(v6 + 1272) = v3 + 16;
  *(void *)(v6 + 1264) = a1;
  *(unsigned char *)(v6 + 1312) = *(unsigned char *)(v3 + 496);
  *(unsigned char *)(v6 + 1313) = *(unsigned char *)(v3 + 1152);
  return _swift_task_switch(sub_16DC88, 0, 0);
}

uint64_t sub_16ED08(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(v4 + 1144) = v1;
  swift_task_dealloc();
  if (v1)
  {
    return _swift_task_switch(sub_16EE44, 0, 0);
  }
  else
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
    return v5(a1);
  }
}

uint64_t sub_16EE44()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16EE5C(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_271F98);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_16EEBC()
{
  unint64_t result = qword_271FA0;
  if (!qword_271FA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271FA0);
  }
  return result;
}

unint64_t sub_16EF10()
{
  unint64_t result = qword_271FA8;
  if (!qword_271FA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_271FA8);
  }
  return result;
}

unsigned char *_s20BooksPersonalization15MediaTypeMethodOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x16F030);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DelegatingMediaTypesRecommendationService.Errors()
{
  return &type metadata for DelegatingMediaTypesRecommendationService.Errors;
}

uint64_t sub_16F068()
{
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  qword_2A5C08 = result;
  return result;
}

uint64_t sub_16F0D0()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5C10);
  sub_6DBC8(v0, (uint64_t)qword_2A5C10);
  if (qword_26C350 != -1) {
    swift_once();
  }
  id v1 = (id)qword_2A5C08;
  return sub_1FB440();
}

uint64_t sub_16F15C(uint64_t a1)
{
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v2 + 40) = v4;
  *unsigned int v4 = v2;
  v4[1] = sub_16F244;
  v4[291] = v1;
  v4[290] = a1;
  v4[289] = v2 + 32;
  v4[292] = *v1;
  return _swift_task_switch(sub_16F7D0, 0, 0);
}

uint64_t sub_16F244()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_16F768;
  }
  else {
    uint64_t v2 = sub_16F358;
  }
  return _swift_task_switch(v2, 0, 0);
}

void *sub_16F358()
{
  uint64_t v38 = v0;
  if (*(void *)(v0 + 32)) {
    uint64_t v1 = *(void **)(v0 + 32);
  }
  else {
    uint64_t v1 = _swiftEmptyArrayStorage;
  }
  uint64_t v31 = v1[2];
  if (v31)
  {
    swift_bridgeObjectRetain();
    uint64_t v2 = 0;
    int v3 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v5 = (uint64_t)&v1[6 * v2 + 4];
      uint64_t v6 = *(void *)v5;
      if ((*(void *)v5 & 0x8000000000000000) != 0) {
        return (void *)sub_1FC210();
      }
      long long v34 = *(_OWORD *)v5;
      char v33 = *(unsigned char *)(v5 + 16);
      uint64_t v7 = *(void *)(v5 + 24);
      uint64_t v8 = *(void *)(v5 + 32);
      uint64_t v9 = *(void *)(v5 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain_n();
      uint64_t v10 = sub_1FBCD0();
      uint64_t v36 = v10;
      uint64_t v11 = *(void *)(v7 + 16);
      uint64_t v35 = v8;
      if (v11)
      {
        unint64_t v12 = (Swift::Int *)(v7 + 40);
        do
        {
          Swift::Int v14 = *(v12 - 1);
          Swift::Int v13 = *v12;
          swift_bridgeObjectRetain();
          sub_7094(v37, v14, v13);
          swift_bridgeObjectRelease();
          v12 += 2;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
        uint64_t v15 = v36;
        uint64_t v8 = v35;
        if (v9)
        {
LABEL_13:
          *(void *)(v30 + 16) = v8;
          *(void *)(v30 + 24) = v9;
          swift_bridgeObjectRetain();
          uint64_t v35 = sub_1FB960();
          uint64_t v32 = v16;
          goto LABEL_16;
        }
      }
      else
      {
        uint64_t v15 = v10;
        swift_bridgeObjectRelease();
        if (v9) {
          goto LABEL_13;
        }
      }
      uint64_t v32 = 0;
LABEL_16:
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      v37[0] = (Swift::Int)v3;
      unint64_t v19 = sub_56168(v6);
      uint64_t v20 = v3[2];
      BOOL v21 = (v18 & 1) == 0;
      uint64_t result = (void *)(v20 + v21);
      if (__OFADD__(v20, v21))
      {
        __break(1u);
LABEL_37:
        __break(1u);
        return result;
      }
      char v23 = v18;
      if (v3[3] >= (uint64_t)result)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          if (v18) {
            goto LABEL_6;
          }
        }
        else
        {
          uint64_t result = sub_121A6C();
          int v3 = (void *)v37[0];
          if (v23) {
            goto LABEL_6;
          }
        }
      }
      else
      {
        sub_1197DC((uint64_t)result, isUniquelyReferenced_nonNull_native);
        int v3 = (void *)v37[0];
        uint64_t result = (void *)sub_56168(v6);
        if ((v23 & 1) != (v24 & 1))
        {
          return (void *)sub_1FC770();
        }
        unint64_t v19 = (unint64_t)result;
        if (v23)
        {
LABEL_6:
          uint64_t v4 = v3[7] + 48 * v19;
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          *(void *)uint64_t v4 = v6;
          *(void *)(v4 + 8) = *((void *)&v34 + 1);
          *(unsigned char *)(v4 + 16) = v33;
          *(void *)(v4 + 24) = v15;
          *(void *)(v4 + 32) = v35;
          *(void *)(v4 + 40) = v32;
          goto LABEL_7;
        }
      }
      v3[(v19 >> 6) + 8] |= 1 << v19;
      *(void *)(v3[6] + 8 * v19) = v6;
      uint64_t v25 = v3[7] + 48 * v19;
      *(_OWORD *)uint64_t v25 = v34;
      *(unsigned char *)(v25 + 16) = v33;
      *(void *)(v25 + 24) = v15;
      *(void *)(v25 + 32) = v35;
      *(void *)(v25 + 40) = v32;
      uint64_t v26 = v3[2];
      BOOL v27 = __OFADD__(v26, 1);
      uint64_t v28 = v26 + 1;
      if (v27) {
        goto LABEL_37;
      }
      v3[2] = v28;
LABEL_7:
      ++v2;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v2 == v31)
      {
        swift_bridgeObjectRelease();
        uint64_t v0 = v30;
        goto LABEL_29;
      }
    }
  }
  int v3 = _swiftEmptyDictionarySingleton;
LABEL_29:
  swift_bridgeObjectRelease();
  uint64_t v29 = *(uint64_t (**)(void *))(v0 + 8);
  return (void *)v29(v3);
}

uint64_t sub_16F768()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_16F780(uint64_t a1, uint64_t a2)
{
  v3[291] = v2;
  v3[290] = a2;
  v3[289] = a1;
  v3[292] = *v2;
  return _swift_task_switch(sub_16F7D0, 0, 0);
}

uint64_t sub_16F7D0()
{
  uint64_t v1 = (void *)v0[291];
  type metadata accessor for PersonalizationMetadataRequest();
  uint64_t v2 = swift_bridgeObjectRetain();
  v0[293] = sub_4AB04(v2);
  swift_bridgeObjectRelease();
  v0[294] = v1[2];
  v0[295] = v1[3];
  v0[296] = v1[4];
  v0[297] = v1[5];
  sub_51B70((uint64_t)(v1 + 9), (uint64_t)(v0 + 282));
  uint64_t v3 = v1[17];
  uint64_t v4 = v1[18];
  sub_5D64(v1 + 14, v3);
  uint64_t v7 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v4 + 16) + **(int **)(v4 + 16));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[298] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_16F948;
  return v7(v0 + 2, v3, v4);
}

uint64_t sub_16F948()
{
  *(void *)(*(void *)v1 + 2392) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_16FDAC;
  }
  else
  {
    uint64_t v2 = sub_16FA64;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_16FA64()
{
  uint64_t v1 = *(void *)(v0 + 2376);
  uint64_t v2 = *(void *)(v0 + 2368);
  long long v11 = *(_OWORD *)(v0 + 2352);
  uint64_t v3 = *(void *)(v0 + 2344);
  uint64_t v4 = *(void *)(v0 + 2336);
  memcpy((void *)(v0 + 1136), (const void *)(v0 + 16), 0x460uLL);
  long long v10 = *(_OWORD *)(v0 + 2320);
  sub_11D3C(v0 + 1136);
  uint64_t v5 = *(void *)(v0 + 1816);
  if (v5 <= 0) {
    uint64_t v5 = 0x7FFFFFFFFFFFFFFFLL;
  }
  *(void *)(v0 + 2296) = v5;
  uint64_t v6 = swift_task_alloc();
  *(void *)(v0 + 2400) = v6;
  *(void *)(v6 + 16) = v3;
  *(void *)(v6 + 24) = v0 + 2296;
  *(_OWORD *)(v6 + 32) = v10;
  *(_OWORD *)(v6 + 48) = v11;
  *(void *)(v6 + 64) = v2;
  *(void *)(v6 + 72) = v1;
  *(void *)(v6 + 80) = v0 + 2256;
  *(void *)(v6 + 88) = v4;
  uint64_t v7 = sub_12124(&qword_26CBA0);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 2408) = v8;
  void *v8 = v0;
  v8[1] = sub_16FBE8;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 2304, &type metadata for Transport.MetadataResponse, v7, 0, 0, &unk_272088, v6, &type metadata for Transport.MetadataResponse);
}

uint64_t sub_16FBE8()
{
  *(void *)(*(void *)v1 + 2416) = v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_16FE10;
  }
  else {
    uint64_t v2 = sub_16FD3C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_16FD3C()
{
  **(void **)(v0 + 2312) = *(void *)(v0 + 2304);
  sub_1264C(v0 + 2256);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_16FDAC()
{
  sub_1264C(v0 + 2256);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_16FE10()
{
  sub_1264C(v0 + 2256);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_16FE74(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 224) = v14;
  *(void *)(v8 + 232) = v15;
  *(_OWORD *)(v8 + 208) = v13;
  *(void *)(v8 + 192) = a7;
  *(void *)(v8 + 200) = a8;
  *(void *)(v8 + 176) = a5;
  *(void *)(v8 + 184) = a6;
  *(void *)(v8 + 160) = a3;
  *(void *)(v8 + 168) = a4;
  *(void *)(v8 + 144) = a1;
  *(void *)(v8 + 152) = a2;
  uint64_t v9 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  *(void *)(v8 + 240) = v9;
  *(void *)(v8 + 248) = *(void *)(v9 + 64);
  *(void *)(v8 + 256) = swift_task_alloc();
  sub_12124(&qword_26D908);
  *(void *)(v8 + 264) = swift_task_alloc();
  *(void *)(v8 + 272) = swift_task_alloc();
  uint64_t v10 = sub_12124(&qword_272090);
  *(void *)(v8 + 280) = v10;
  *(void *)(v8 + 288) = *(void *)(v10 - 8);
  *(void *)(v8 + 296) = swift_task_alloc();
  return _swift_task_switch(sub_16FFF8, 0, 0);
}

uint64_t sub_16FFF8()
{
  uint64_t v1 = **(void **)(v0 + 168);
  if (v1)
  {
    uint64_t v2 = *(void *)(v0 + 160);
    int64_t v3 = *(void *)(v2 + 16);
    swift_bridgeObjectRetain();
    uint64_t v4 = (uint64_t)sub_171D88(0, v3, v1, v1, v2);
    swift_bridgeObjectRelease();
    uint64_t v5 = *(void *)(v4 + 16);
    if (!v5) {
      goto LABEL_15;
    }
  }
  else
  {
    sub_12124(&qword_26D478);
    uint64_t v4 = swift_allocObject();
    *(_OWORD *)(v4 + 16) = xmmword_1FD2A0;
    *(void *)(v4 + 32) = _swiftEmptyArrayStorage;
    *(void *)(v4 + 40) = &_swiftEmptyArrayStorage[4];
    *(_OWORD *)(v4 + 48) = xmmword_202690;
    uint64_t v5 = 1;
  }
  unint64_t v47 = (long long *)(v0 + 16);
  uint64_t v35 = *(void *)(v0 + 240);
  uint64_t v34 = *(void *)(v0 + 248) + 7;
  uint64_t v6 = sub_1FBC60();
  uint64_t v7 = *(void *)(v6 - 8);
  char v33 = *(void (**)(void))(v7 + 56);
  uint64_t v32 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
  uint64_t v31 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  uint64_t v8 = (void *)(v4 + 56);
  do
  {
    uint64_t v37 = v5;
    uint64_t v42 = *(void *)(v0 + 272);
    uint64_t v10 = *(void *)(v0 + 256);
    uint64_t v11 = *(void *)(v0 + 224);
    uint64_t v45 = *(void *)(v0 + 232);
    uint64_t v46 = *(void *)(v0 + 264);
    uint64_t v43 = *(void *)(v0 + 208);
    uint64_t v44 = *(void *)(v0 + 216);
    uint64_t v12 = *(void *)(v0 + 184);
    uint64_t v40 = *(void *)(v0 + 192);
    uint64_t v41 = *(void *)(v0 + 200);
    uint64_t v13 = *(void *)(v0 + 176);
    uint64_t v38 = *v8;
    uint64_t v39 = *(v8 - 1);
    uint64_t v36 = v8;
    long long v48 = *(_OWORD *)(v8 - 3);
    v33();
    sub_172008(v13, v10);
    sub_51B70(v11, (uint64_t)v47);
    unint64_t v14 = (*(unsigned __int8 *)(v35 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v35 + 80);
    unint64_t v15 = (v34 + v14) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v16 = (v15 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v17 = (v16 + 15) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v18 = (v17 + 39) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v19 = swift_allocObject();
    *(void *)(v19 + 16) = 0;
    *(void *)(v19 + 24) = 0;
    sub_1721D4(v10, v19 + v14);
    unint64_t v20 = v19 + v15;
    *(_OWORD *)unint64_t v20 = v48;
    *(void *)(v20 + 16) = v39;
    *(void *)(v20 + 24) = v38;
    *(void *)(v19 + v16) = v12;
    BOOL v21 = (uint64_t *)(v19 + v17);
    uint64_t *v21 = v40;
    v21[1] = v41;
    v21[2] = v43;
    v21[3] = v44;
    sub_37C30(v47, v19 + v18);
    *(void *)(v19 + ((v18 + 47) & 0xFFFFFFFFFFFFFFF8)) = v45;
    sub_98A40(v42, v46);
    LODWORD(v18) = (*v32)(v46, 1, v6);
    swift_unknownObjectRetain_n();
    swift_retain();
    sub_52948(v40);
    sub_52948(v43);
    uint64_t v22 = *(void *)(v0 + 264);
    if (v18 == 1)
    {
      sub_989E0(*(void *)(v0 + 264));
    }
    else
    {
      sub_1FBC50();
      (*v31)(v22, v6);
    }
    if (*(void *)(v19 + 16))
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v23 = sub_1FBBD0();
      uint64_t v25 = v24;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v23 = 0;
      uint64_t v25 = 0;
    }
    uint64_t v26 = **(void **)(v0 + 152);
    uint64_t v27 = v25 | v23;
    if (v25 | v23)
    {
      uint64_t v27 = v0 + 56;
      *(void *)(v0 + 56) = 0;
      *(void *)(v0 + 64) = 0;
      *(void *)(v0 + 72) = v23;
      *(void *)(v0 + 80) = v25;
    }
    uint64_t v9 = *(void *)(v0 + 272);
    *(void *)(v0 + 88) = 1;
    *(void *)(v0 + 96) = v27;
    *(void *)(v0 + 104) = v26;
    swift_task_create();
    swift_unknownObjectRelease();
    swift_release();
    sub_989E0(v9);
    uint64_t v8 = v36 + 4;
    uint64_t v5 = v37 - 1;
  }
  while (v37 != 1);
LABEL_15:
  swift_bridgeObjectRelease();
  *(void *)(v0 + 120) = _swiftEmptyArrayStorage;
  sub_12124(&qword_26D670);
  sub_1FBC80();
  uint64_t v28 = (void *)swift_task_alloc();
  *(void *)(v0 + 304) = v28;
  *uint64_t v28 = v0;
  v28[1] = sub_1704E4;
  uint64_t v29 = *(void *)(v0 + 280);
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 128, 0, 0, v29, v0 + 136);
}

uint64_t sub_1704E4()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_17076C;
  }
  else
  {
    uint64_t v1 = sub_1705FC;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1705FC()
{
  uint64_t v1 = v0[16];
  if (v1 == 1)
  {
    uint64_t v2 = (void *)v0[18];
    (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
    *uint64_t v2 = v0[15];
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = (uint64_t (*)(void))v0[1];
    return v3();
  }
  else
  {
    if (v1) {
      uint64_t v5 = (void *)v0[16];
    }
    else {
      uint64_t v5 = _swiftEmptyArrayStorage;
    }
    sub_AAD4C((uint64_t)v5);
    uint64_t v6 = (void *)swift_task_alloc();
    v0[38] = v6;
    void *v6 = v0;
    v6[1] = sub_1704E4;
    uint64_t v7 = v0[35];
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v0 + 16, 0, 0, v7, v0 + 17);
  }
}

uint64_t sub_17076C()
{
  (*(void (**)(void, void))(v0[36] + 8))(v0[37], v0[35]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_170818(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 864) = v15;
  *(void *)(v8 + 856) = v14;
  *(_OWORD *)(v8 + 840) = v13;
  *(_OWORD *)(v8 + 824) = v12;
  *(void *)(v8 + 816) = a8;
  *(void *)(v8 + 808) = a7;
  *(void *)(v8 + 800) = a6;
  *(void *)(v8 + 792) = a5;
  *(void *)(v8 + 784) = a4;
  *(void *)(v8 + 776) = a1;
  uint64_t v9 = sub_1FB110();
  *(void *)(v8 + 872) = v9;
  *(void *)(v8 + 880) = *(void *)(v9 - 8);
  *(void *)(v8 + 888) = swift_task_alloc();
  *(void *)(v8 + 896) = swift_task_alloc();
  *(void *)(v8 + 904) = swift_task_alloc();
  *(void *)(v8 + 912) = swift_task_alloc();
  *(void *)(v8 + 920) = swift_task_alloc();
  return _swift_task_switch(sub_170944, 0, 0);
}

void sub_170944()
{
  uint64_t v76 = v0;
  unint64_t v1 = *(void *)(v0 + 816);
  uint64_t v2 = *(void *)(v0 + 792);
  if (v1)
  {
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v4 = (void *)swift_dynamicCastClass();
    if (!v4)
    {
      swift_unknownObjectRelease();
      unint64_t v1 = *(void *)(v0 + 816);
      uint64_t v4 = _swiftEmptyArrayStorage;
    }
    uint64_t v5 = *(void *)(v0 + 808);
    uint64_t v6 = v4[2];
    swift_release();
    if (__OFSUB__(v1 >> 1, v5))
    {
      __break(1u);
    }
    else if (v6 == (v1 >> 1) - v5)
    {
      uint64_t v3 = (void *)swift_dynamicCastClass();
      if (!v3)
      {
        swift_unknownObjectRelease();
        uint64_t v3 = _swiftEmptyArrayStorage;
      }
LABEL_10:
      swift_unknownObjectRelease();
      sub_9EBA4((uint64_t)v3, v75);
      swift_release();
      uint64_t v74 = v75[0];
      *(void *)(v0 + 928) = v75[0];
      sub_1FB100();
      if (qword_26C358 != -1) {
        swift_once();
      }
      uint64_t v68 = v0 + 648;
      uint64_t v7 = *(void *)(v0 + 920);
      uint64_t v8 = *(void *)(v0 + 912);
      uint64_t v9 = *(void *)(v0 + 880);
      uint64_t v10 = *(void *)(v0 + 872);
      uint64_t v11 = sub_1FB430();
      *(void *)(v0 + 936) = sub_6DBC8(v11, (uint64_t)qword_2A5C10);
      long long v12 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
      *(void *)(v0 + 944) = v12;
      *(void *)(v0 + 952) = (v9 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
      uint64_t v70 = v12;
      v12(v8, v7, v10);
      long long v13 = sub_1FB410();
      os_log_type_t v14 = sub_1FBDC0();
      BOOL v15 = os_log_type_enabled(v13, v14);
      uint64_t v16 = *(void *)(v0 + 912);
      uint64_t v17 = *(void *)(v0 + 880);
      uint64_t v18 = *(void *)(v0 + 872);
      if (v15)
      {
        uint64_t v19 = (uint8_t *)swift_slowAlloc();
        v75[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v19 = 136446210;
        sub_172434();
        uint64_t v20 = sub_1FC580();
        *(void *)(v0 + 768) = sub_D5890(v20, v21, v75);
        sub_1FBED0();
        swift_bridgeObjectRelease();
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v22(v16, v18);
        _os_log_impl(&dword_0, v13, v14, "initiating personalization metadata request for batch %{public}s", v19, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        uint64_t v22 = *(void (**)(uint64_t, uint64_t))(v17 + 8);
        v22(*(void *)(v0 + 912), *(void *)(v0 + 872));
      }

      uint64_t v64 = (_OWORD *)(v0 + 16);
      uint64_t v23 = (_OWORD *)(v0 + 256);
      uint64_t v69 = v22;
      *(void *)(v0 + 960) = v22;
      uint64_t v24 = *(void *)(v0 + 824);
      uint64_t v25 = sub_1FB0F0();
      uint64_t v71 = v26;
      uint64_t v72 = v25;
      *(void *)(v0 + 968) = v26;
      unint64_t v27 = *(void *)(v24 + 48);
      if (*(unsigned char *)(v24 + 64))
      {
        unint64_t v28 = 0xD00000000000003DLL;
        unint64_t v29 = 0x8000000000219AD0;
        switch((char)v27)
        {
          case 1:
            unint64_t v28 = 0xD00000000000004CLL;
            uint64_t v30 = "https://public-news-qa-books-personalization-server.us-west-3d.app.apple.com";
            goto LABEL_20;
          case 2:
            unint64_t v28 = 0xD00000000000003FLL;
            uint64_t v30 = "https://staging-books-personalization-server.newsapps.apple.com";
LABEL_20:
            unint64_t v29 = (unint64_t)(v30 - 32) | 0x8000000000000000;
            break;
          case 3:
            unint64_t v29 = 0x8000000000219A10;
            unint64_t v28 = 0xD00000000000002ELL;
            break;
          default:
            break;
        }
      }
      else
      {
        unint64_t v29 = *(void *)(*(void *)(v0 + 824) + 56);
        swift_bridgeObjectRetain();
        unint64_t v28 = v27;
      }
      uint64_t v65 = *(void *)(v0 + 904);
      uint64_t v66 = *(void *)(v0 + 872);
      uint64_t v67 = *(void *)(v0 + 920);
      uint64_t v31 = *(void *)(v0 + 856);
      uint64_t v32 = *(void *)(v0 + 848);
      uint64_t v33 = *(void *)(v0 + 840);
      uint64_t v34 = *(void *)(v0 + 832);
      sub_51B70(*(void *)(v0 + 864), v68);
      *(void *)(v0 + 408) = v28;
      *(void *)(v0 + 416) = v29;
      *(void *)(v0 + 424) = v34;
      *(void *)(v0 + 432) = v33;
      *(void *)(v0 + 440) = v32;
      *(void *)(v0 + 448) = v31;
      sub_51B70(v68, v0 + 456);
      v75[0] = v34;
      v75[1] = v33;
      v75[2] = v32;
      v75[3] = v31;
      sub_52948(v34);
      sub_52948(v32);
      sub_52948(v34);
      sub_52948(v32);
      ClientConverter.init(configuration:)(v75, (uint64_t *)(v0 + 496));
      sub_1264C(v68);
      long long v35 = *(_OWORD *)(v0 + 592);
      long long v36 = *(_OWORD *)(v0 + 608);
      *(_OWORD *)(v0 + 352) = v35;
      *(_OWORD *)(v0 + 368) = v36;
      *(_OWORD *)(v0 + 384) = *(_OWORD *)(v0 + 624);
      *(void *)(v0 + 400) = *(void *)(v0 + 640);
      long long v37 = *(_OWORD *)(v0 + 528);
      long long v38 = *(_OWORD *)(v0 + 544);
      *(_OWORD *)(v0 + 288) = v37;
      *(_OWORD *)(v0 + 304) = v38;
      long long v39 = *(_OWORD *)(v0 + 576);
      *(_OWORD *)(v0 + 320) = *(_OWORD *)(v0 + 560);
      *(_OWORD *)(v0 + 336) = v39;
      long long v40 = *(_OWORD *)(v0 + 512);
      _OWORD *v23 = *(_OWORD *)(v0 + 496);
      *(_OWORD *)(v0 + 272) = v40;
      long long v41 = *(_OWORD *)(v0 + 432);
      long long v42 = *(_OWORD *)(v0 + 464);
      long long v43 = *(_OWORD *)(v0 + 480);
      *(_OWORD *)(v0 + 208) = *(_OWORD *)(v0 + 448);
      *(_OWORD *)(v0 + 224) = v42;
      *(_OWORD *)(v0 + 240) = v43;
      long long v44 = *(_OWORD *)(v0 + 368);
      long long v45 = *(_OWORD *)(v0 + 384);
      *(_OWORD *)(v0 + 112) = v35;
      *(_OWORD *)(v0 + 128) = v44;
      long long v46 = *(_OWORD *)(v0 + 400);
      long long v47 = *(_OWORD *)(v0 + 416);
      *(_OWORD *)(v0 + 144) = v45;
      *(_OWORD *)(v0 + 160) = v46;
      *(_OWORD *)(v0 + 176) = v47;
      *(_OWORD *)(v0 + 192) = v41;
      long long v48 = *(_OWORD *)(v0 + 304);
      long long v49 = *(_OWORD *)(v0 + 320);
      *(_OWORD *)(v0 + 48) = v37;
      *(_OWORD *)(v0 + 64) = v48;
      long long v50 = *(_OWORD *)(v0 + 336);
      *(_OWORD *)(v0 + 80) = v49;
      *(_OWORD *)(v0 + 96) = v50;
      long long v51 = *(_OWORD *)(v0 + 272);
      *uint64_t v64 = *v23;
      *(_OWORD *)(v0 + 32) = v51;
      v70(v65, v67, v66);
      char v52 = sub_1FB410();
      os_log_type_t v53 = sub_1FBD90();
      BOOL v54 = os_log_type_enabled(v52, v53);
      uint64_t v55 = *(void *)(v0 + 904);
      uint64_t v56 = *(void *)(v0 + 872);
      if (v54)
      {
        long long v57 = (uint8_t *)swift_slowAlloc();
        v75[0] = swift_slowAlloc();
        *(_DWORD *)long long v57 = 136446210;
        sub_172434();
        uint64_t v58 = sub_1FC580();
        *(void *)(v0 + 760) = sub_D5890(v58, v59, v75);
        sub_1FBED0();
        swift_bridgeObjectRelease();
        v69(v55, v56);
        _os_log_impl(&dword_0, v52, v53, "fetching personalization metadata for batch %{public}s", v57, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {
        v69(*(void *)(v0 + 904), *(void *)(v0 + 872));
      }

      uint64_t v60 = (void *)swift_task_alloc();
      *(void *)(v0 + 976) = v60;
      v60[2] = v64;
      v60[3] = v72;
      v60[4] = v71;
      v60[5] = v74;
      uint64_t v61 = swift_task_alloc();
      *(void *)(v0 + 984) = v61;
      *(void *)(v61 + 16) = v64;
      uint64_t v62 = swift_task_alloc();
      *(void *)(v0 + 992) = v62;
      *(void *)(v62 + 16) = v64;
      uint64_t v73 = (char *)&dword_270848 + dword_270848;
      unint64_t v63 = (void *)swift_task_alloc();
      *(void *)(v0 + 1000) = v63;
      *unint64_t v63 = v0;
      v63[1] = sub_171168;
      uint64_t v78 = sub_131E14;
      uint64_t v79 = v62;
      __asm { BR              X8; sub_12F1CC }
    }
    swift_unknownObjectRelease();
    unint64_t v1 = *(void *)(v0 + 816);
    uint64_t v2 = *(void *)(v0 + 792);
  }
  else
  {
    swift_unknownObjectRetain();
  }
  uint64_t v3 = sub_4B17C(v2, *(void *)(v0 + 800), *(void *)(v0 + 808), v1);
  goto LABEL_10;
}

uint64_t sub_171168()
{
  *(void *)(*(void *)v1 + 1008) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_171818;
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v2 = sub_17130C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17130C()
{
  uint64_t v35 = v0;
  uint64_t v1 = v0 + 16;
  uint64_t v2 = *(void *)(v0 + 712);
  unsigned __int8 v3 = *(unsigned char *)(v0 + 720);
  (*(void (**)(void, void, void))(v0 + 944))(*(void *)(v0 + 896), *(void *)(v0 + 920), *(void *)(v0 + 872));
  uint64_t v4 = sub_1FB410();
  os_log_type_t v5 = sub_1FBD90();
  if (os_log_type_enabled(v4, v5))
  {
    uint64_t v29 = *(void *)(v0 + 896);
    uint64_t v30 = *(void (**)(uint64_t, uint64_t))(v0 + 960);
    uint64_t v6 = *(void *)(v0 + 872);
    uint64_t v7 = (uint8_t *)swift_slowAlloc();
    uint64_t v33 = swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 136446210;
    sub_172434();
    uint64_t v8 = sub_1FC580();
    *(void *)(v0 + 752) = sub_D5890(v8, v9, &v33);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    uint64_t v10 = v6;
    uint64_t v1 = v0 + 16;
    v30(v29, v10);
    _os_log_impl(&dword_0, v4, v5, "fetched personalization metadata for batch %{public}s", v7, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 960))(*(void *)(v0 + 896), *(void *)(v0 + 872));
  }

  uint64_t v11 = *(void *)(v0 + 1008);
  long long v12 = *(void **)(v0 + 776);
  uint64_t v33 = v2;
  unsigned __int8 v34 = v3;
  sub_9EC7C(v12);
  if (v11)
  {
    sub_12B544(v2, v3);
    (*(void (**)(void, void, void))(v0 + 944))(*(void *)(v0 + 888), *(void *)(v0 + 920), *(void *)(v0 + 872));
    swift_errorRetain();
    swift_errorRetain();
    long long v13 = sub_1FB410();
    os_log_type_t v14 = sub_1FBDA0();
    BOOL v15 = os_log_type_enabled(v13, v14);
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 960);
    uint64_t v31 = *(void *)(v0 + 920);
    uint64_t v17 = *(void *)(v0 + 888);
    uint64_t v18 = *(void *)(v0 + 872);
    if (v15)
    {
      uint64_t v32 = v1;
      uint64_t v19 = swift_slowAlloc();
      uint64_t v33 = swift_slowAlloc();
      *(_DWORD *)uint64_t v19 = 136446466;
      sub_172434();
      uint64_t v20 = sub_1FC580();
      *(void *)(v0 + 736) = sub_D5890(v20, v21, &v33);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      v16(v17, v18);
      *(_WORD *)(v19 + 12) = 2080;
      swift_getErrorValue();
      uint64_t v22 = sub_1FC780();
      *(void *)(v0 + 744) = sub_D5890(v22, v23, &v33);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      swift_errorRelease();
      swift_errorRelease();
      _os_log_impl(&dword_0, v13, v14, "error fetching personalization metadata for batch %{public}s %s", (uint8_t *)v19, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      swift_errorRelease();
      sub_1723E0(v32);
    }
    else
    {

      swift_errorRelease();
      swift_errorRelease();
      v16(v17, v18);
      swift_errorRelease();
      sub_1723E0(v1);
    }
    v16(v31, v18);
    **(void **)(v0 + 776) = 0;
  }
  else
  {
    uint64_t v24 = *(void (**)(uint64_t, uint64_t))(v0 + 960);
    uint64_t v25 = *(void *)(v0 + 920);
    uint64_t v26 = *(void *)(v0 + 872);
    sub_12B544(v2, v3);
    sub_1723E0(v1);
    v24(v25, v26);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unint64_t v27 = *(uint64_t (**)(void))(v0 + 8);
  return v27();
}

uint64_t sub_171818()
{
  uint64_t v19 = v0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  (*(void (**)(void, void, void))(v0 + 944))(*(void *)(v0 + 888), *(void *)(v0 + 920), *(void *)(v0 + 872));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDA0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v16 = *(void (**)(uint64_t, uint64_t))(v0 + 960);
    uint64_t v17 = *(void *)(v0 + 920);
    uint64_t v3 = *(void *)(v0 + 888);
    uint64_t v4 = *(void *)(v0 + 872);
    uint64_t v5 = swift_slowAlloc();
    uint64_t v18 = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136446466;
    sub_172434();
    uint64_t v6 = sub_1FC580();
    *(void *)(v0 + 736) = sub_D5890(v6, v7, &v18);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    v16(v3, v4);
    *(_WORD *)(v5 + 12) = 2080;
    swift_getErrorValue();
    uint64_t v8 = sub_1FC780();
    *(void *)(v0 + 744) = sub_D5890(v8, v9, &v18);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "error fetching personalization metadata for batch %{public}s %s", (uint8_t *)v5, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
    sub_1723E0(v0 + 16);
    v16(v17, v4);
  }
  else
  {
    uint64_t v10 = *(void (**)(uint64_t, uint64_t))(v0 + 960);
    uint64_t v11 = *(void *)(v0 + 920);
    uint64_t v12 = *(void *)(v0 + 888);
    uint64_t v13 = *(void *)(v0 + 872);

    swift_errorRelease();
    swift_errorRelease();
    v10(v12, v13);
    swift_errorRelease();
    sub_1723E0(v0 + 16);
    v10(v11, v13);
  }
  **(void **)(v0 + 776) = 0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v14 = *(uint64_t (**)(void))(v0 + 8);
  return v14();
}

uint64_t sub_171B58()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_52958(*(void *)(v0 + 16));
  sub_52958(v1);
  sub_B8190(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_1264C(v0 + 72);
  sub_1264C(v0 + 112);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BooksBackendPersonalizationMetadataService()
{
  return self;
}

uint64_t sub_171BF0(uint64_t a1)
{
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B06F4;
  return sub_16F15C(a1);
}

uint64_t sub_171C88(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v7 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v9 = v2[6];
  uint64_t v10 = v2[7];
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v11;
  *uint64_t v11 = v3;
  v11[1] = sub_98BD4;
  return sub_16FE74(a1, a2, v5, v6, v7, v8, v9, v10);
}

void *sub_171D88(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v6 = a2;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t result = (void *)sub_46AFC(0, v8, 0);
  int64_t v28 = v6;
  if (v8)
  {
    int64_t v27 = *(void *)(a5 + 16);
    while (1)
    {
      BOOL v14 = v7 <= v6;
      if (a3 > 0) {
        BOOL v14 = v7 >= v6;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, a3)) {
        int64_t v15 = ((v7 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + a3;
      }
      if (__OFADD__(v7, a4)) {
        goto LABEL_49;
      }
      if (v27 >= v7 + a4) {
        int64_t v16 = v7 + a4;
      }
      else {
        int64_t v16 = v27;
      }
      if (v16 < v7) {
        goto LABEL_50;
      }
      if (v7 < 0) {
        goto LABEL_51;
      }
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v18 >= v17 >> 1) {
        uint64_t result = (void *)sub_46AFC(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[4 * v18];
      void v19[4] = a5;
      _OWORD v19[5] = a5 + 32;
      v19[6] = v7;
      v19[7] = (2 * v16) | 1;
      int64_t v7 = v15;
      --v8;
      int64_t v6 = v28;
      if (!v8) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
LABEL_29:
    BOOL v20 = v15 <= v6;
    if (a3 > 0) {
      BOOL v20 = v15 >= v6;
    }
    if (v20) {
      return _swiftEmptyArrayStorage;
    }
    while (1)
    {
      int64_t v21 = __OFADD__(v15, a3) ? ((v15 + a3) >> 63) ^ 0x8000000000000000 : v15 + a3;
      if (__OFADD__(v15, a4)) {
        break;
      }
      if (*(void *)(a5 + 16) >= v15 + a4) {
        int64_t v22 = v15 + a4;
      }
      else {
        int64_t v22 = *(void *)(a5 + 16);
      }
      if (v22 < v15) {
        goto LABEL_53;
      }
      if (v15 < 0) {
        goto LABEL_54;
      }
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      unint64_t v23 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (v24 >= v23 >> 1) {
        uint64_t result = (void *)sub_46AFC(v23 > 1, v24 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v24 + 1;
      uint64_t v25 = &_swiftEmptyArrayStorage[4 * v24];
      v25[4] = a5;
      v25[5] = a5 + 32;
      v25[6] = v15;
      v25[7] = (2 * v22) | 1;
      BOOL v26 = v21 <= v28;
      if (a3 > 0) {
        BOOL v26 = v21 >= v28;
      }
      int64_t v15 = v21;
      if (v26) {
        return _swiftEmptyArrayStorage;
      }
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_172008(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonalizationMetadataRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_17206C()
{
  uint64_t v1 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 39) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v5 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_release();
  if (*(void *)(v0 + v4)) {
    swift_release();
  }
  if (*(void *)(v0 + v4 + 16)) {
    swift_release();
  }
  unint64_t v6 = (v4 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = ((v6 + 47) & 0xFFFFFFFFFFFFFFF8) + 8;
  sub_1264C(v0 + v6);

  return _swift_deallocObject(v0, v7, v2 | 7);
}

uint64_t sub_1721D4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for PersonalizationMetadataRequest();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_172238(uint64_t a1)
{
  uint64_t v3 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v5 = (*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = *(void *)(v1 + 16);
  uint64_t v12 = v1 + v4;
  uint64_t v6 = *(void *)(v1 + v5);
  uint64_t v7 = *(void *)(v1 + v5 + 8);
  uint64_t v8 = *(void *)(v1 + v5 + 16);
  uint64_t v9 = *(void *)(v1 + v5 + 24);
  BOOL v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  void *v10 = v2;
  v10[1] = sub_5958;
  return sub_170818(a1, v14, v13, v12, v6, v7, v8, v9);
}

uint64_t sub_1723E0(uint64_t a1)
{
  return a1;
}

unint64_t sub_172434()
{
  unint64_t result = qword_26D7B8;
  if (!qword_26D7B8)
  {
    sub_1FB110();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7B8);
  }
  return result;
}

uint64_t initializeBufferWithCopyOfBuffer for BooksBackendPersonalizationMetadataService.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1724D4(*(void *)a2, v4);
  *(void *)a1 = v3;
  *(unsigned char *)(a1 + 8) = v4;
  return a1;
}

uint64_t sub_1724D4(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t destroy for BooksBackendPersonalizationMetadataService.Errors(uint64_t a1)
{
  return sub_1724F8(*(void *)a1, *(unsigned char *)(a1 + 8));
}

uint64_t sub_1724F8(uint64_t a1, unsigned __int8 a2)
{
  if (a2 <= 2u) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t assignWithCopy for BooksBackendPersonalizationMetadataService.Errors(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unsigned __int8 v4 = *(unsigned char *)(a2 + 8);
  sub_1724D4(*(void *)a2, v4);
  uint64_t v5 = *(void *)a1;
  *(void *)a1 = v3;
  unsigned __int8 v6 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v4;
  sub_1724F8(v5, v6);
  return a1;
}

uint64_t assignWithTake for BooksBackendPersonalizationMetadataService.Errors(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)a1;
  *(void *)a1 = *(void *)a2;
  unsigned __int8 v5 = *(unsigned char *)(a1 + 8);
  *(unsigned char *)(a1 + 8) = v3;
  sub_1724F8(v4, v5);
  return a1;
}

uint64_t getEnumTagSinglePayload for BooksBackendPersonalizationMetadataService.Errors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFD && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 253);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 3) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksBackendPersonalizationMetadataService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFC)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 - 253;
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFD) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BooksBackendPersonalizationMetadataService.Errors()
{
  return &type metadata for BooksBackendPersonalizationMetadataService.Errors;
}

BooksPersonalization::Series::Metadata __swiftcall Series.Metadata.init(isOrdered:)(BooksPersonalization::Series::Metadata isOrdered)
{
  v1->isOrdered = isOrdered.isOrdered;
  return isOrdered;
}

uint64_t Series.Rationale.targetBook.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  uint64_t v9 = *(void *)(v1 + 72);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v10 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v8;
  *(void *)(a1 + 72) = v9;
  sub_5480C(v5, v10);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t Series.Rationale.seedBooksByMethodology.getter()
{
  return swift_bridgeObjectRetain();
}

double Series.Rationale.init(targetBook:seedBooksByMethodology:)@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  char v7 = *(unsigned char *)(a1 + 40);
  uint64_t v8 = *(void *)(a1 + 48);
  double result = *(double *)(a1 + 72);
  *(void *)a3 = *(void *)a1;
  *(unsigned char *)(a3 + 8) = v3;
  *(void *)(a3 + 16) = v4;
  *(unsigned char *)(a3 + 24) = v5;
  *(void *)(a3 + 32) = v6;
  *(unsigned char *)(a3 + 40) = v7;
  *(void *)(a3 + 48) = v8;
  *(_OWORD *)(a3 + 56) = *(_OWORD *)(a1 + 56);
  *(double *)(a3 + 72) = result;
  *(void *)(a3 + 80) = a2;
  return result;
}

uint64_t sub_17272C()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0x6F42746567726174;
  }
}

uint64_t sub_172770@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_175BC8(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_172798(uint64_t a1)
{
  unint64_t v2 = sub_172A28();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1727D4(uint64_t a1)
{
  unint64_t v2 = sub_172A28();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Series.Rationale.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_2720A8);
  uint64_t v20 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v5 = (char *)&v13 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  char v7 = *((unsigned char *)v1 + 8);
  uint64_t v8 = v1[2];
  int v18 = *((unsigned __int8 *)v1 + 24);
  uint64_t v17 = v1[4];
  int v16 = *((unsigned __int8 *)v1 + 40);
  long long v15 = *((_OWORD *)v1 + 3);
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[9];
  uint64_t v13 = v1[10];
  uint64_t v14 = v9;
  sub_5D64(a1, a1[3]);
  sub_172A28();
  sub_1FC870();
  uint64_t v22 = v6;
  char v23 = v7;
  uint64_t v24 = v8;
  char v25 = v18;
  uint64_t v26 = v17;
  char v27 = v16;
  long long v28 = v15;
  uint64_t v29 = v14;
  uint64_t v30 = v10;
  char v21 = 0;
  sub_14D76C();
  uint64_t v11 = v19;
  sub_1FC530();
  if (!v11)
  {
    uint64_t v22 = v13;
    char v21 = 1;
    sub_12124(&qword_2720B8);
    sub_172A7C();
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v5, v3);
}

unint64_t sub_172A28()
{
  unint64_t result = qword_2720B0;
  if (!qword_2720B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2720B0);
  }
  return result;
}

unint64_t sub_172A7C()
{
  unint64_t result = qword_2720C0;
  if (!qword_2720C0)
  {
    sub_121C4(&qword_2720B8);
    sub_14DB98();
    sub_C2D20(&qword_26EC50, (void (*)(void))sub_AFB24);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2720C0);
  }
  return result;
}

uint64_t Series.Rationale.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2720C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_172A28();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v28 = 0;
  sub_14DC94();
  sub_1FC3F0();
  uint64_t v23 = v29;
  int v22 = v30;
  uint64_t v21 = v31;
  int v20 = v32;
  uint64_t v9 = v33;
  int v24 = v34;
  uint64_t v10 = v35;
  uint64_t v19 = v36;
  uint64_t v25 = v37;
  uint64_t v11 = v38;
  sub_12124(&qword_2720B8);
  char v28 = 1;
  uint64_t v26 = v9;
  uint64_t v12 = v9;
  LOBYTE(v9) = v24;
  sub_5480C(v12, v24);
  sub_172E84();
  uint64_t v27 = v10;
  uint64_t v13 = v25;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v14 = v29;
  uint64_t v15 = v26;
  sub_5480C(v26, v9);
  uint64_t v16 = v27;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_54820(v15, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)a2 = v23;
  *(unsigned char *)(a2 + 8) = v22;
  *(void *)(a2 + 16) = v21;
  *(unsigned char *)(a2 + 24) = v20;
  *(void *)(a2 + 32) = v15;
  *(unsigned char *)(a2 + 40) = v9;
  uint64_t v17 = v19;
  *(void *)(a2 + 48) = v16;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v13;
  *(void *)(a2 + 72) = v11;
  *(void *)(a2 + 80) = v14;
  sub_1264C((uint64_t)a1);
  sub_54820(v15, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_172E84()
{
  unint64_t result = qword_2720D0;
  if (!qword_2720D0)
  {
    sub_121C4(&qword_2720B8);
    sub_14DDCC();
    sub_C2D20(&qword_26EC68, (void (*)(void))sub_AFB78);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2720D0);
  }
  return result;
}

uint64_t sub_172F30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Series.Rationale.init(from:)(a1, a2);
}

uint64_t sub_172F48(void *a1)
{
  return Series.Rationale.encode(to:)(a1);
}

uint64_t Series.rationale.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = v1[2];
  uint64_t v3 = v1[3];
  uint64_t v4 = v1[4];
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  uint64_t v7 = v1[7];
  uint64_t v8 = v1[8];
  uint64_t v9 = v1[9];
  uint64_t v10 = v1[10];
  uint64_t v11 = v1[11];
  uint64_t v12 = v1[12];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  a1[9] = v11;
  a1[10] = v12;
  return sub_172FB8(v2, v3, v4, v5, v6, v7, v8);
}

uint64_t sub_172FB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_5480C(a5, a6);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_173020()
{
  uint64_t v1 = 0x707954616964656DLL;
  if (*v0 != 1) {
    uint64_t v1 = 0x6C616E6F69746172;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x444965726F7473;
  }
}

uint64_t sub_173084@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_175CC4(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1730AC(uint64_t a1)
{
  unint64_t v2 = sub_17336C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1730E8(uint64_t a1)
{
  unint64_t v2 = sub_17336C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Series.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_2720D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v41 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v8 = *(void *)(v1 + 16);
  uint64_t v28 = *(void *)(v1 + 24);
  uint64_t v29 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  uint64_t v26 = *(void *)(v1 + 40);
  uint64_t v27 = v9;
  uint64_t v10 = *(void *)(v1 + 48);
  uint64_t v24 = *(void *)(v1 + 56);
  uint64_t v25 = v10;
  uint64_t v11 = *(void *)(v1 + 64);
  uint64_t v22 = *(void *)(v1 + 72);
  uint64_t v23 = v11;
  uint64_t v12 = *(void *)(v1 + 80);
  uint64_t v20 = *(void *)(v1 + 88);
  uint64_t v21 = v12;
  uint64_t v19 = *(void *)(v1 + 96);
  sub_5D64(a1, a1[3]);
  sub_17336C();
  sub_1FC870();
  LOBYTE(v30) = 0;
  sub_1FC560();
  if (!v2)
  {
    uint64_t v14 = v26;
    uint64_t v13 = v27;
    uint64_t v16 = v28;
    uint64_t v15 = v29;
    LOBYTE(v30) = v41;
    char v42 = 1;
    sub_ACF24();
    sub_1FC530();
    uint64_t v30 = v15;
    uint64_t v31 = v16;
    uint64_t v32 = v13;
    uint64_t v33 = v14;
    uint64_t v34 = v25;
    uint64_t v35 = v24;
    uint64_t v36 = v23;
    uint64_t v37 = v22;
    uint64_t v38 = v21;
    uint64_t v39 = v20;
    uint64_t v40 = v19;
    char v42 = 2;
    sub_1733C0();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_17336C()
{
  unint64_t result = qword_2720E0;
  if (!qword_2720E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2720E0);
  }
  return result;
}

unint64_t sub_1733C0()
{
  unint64_t result = qword_2720E8;
  if (!qword_2720E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2720E8);
  }
  return result;
}

uint64_t Series.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2720F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_17336C();
  sub_1FC850();
  if (!v2)
  {
    LOBYTE(v18[0]) = 0;
    uint64_t v9 = sub_1FC420();
    char v20 = 1;
    sub_AD020();
    sub_1FC3F0();
    char v11 = v18[0];
    char v20 = 2;
    sub_17362C();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v19;
    long long v13 = v18[0];
    long long v14 = v18[1];
    long long v15 = v18[2];
    long long v16 = v18[3];
    long long v17 = v18[4];
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11;
    *(_OWORD *)(a2 + 16) = v13;
    *(_OWORD *)(a2 + 32) = v14;
    *(_OWORD *)(a2 + 48) = v15;
    *(_OWORD *)(a2 + 64) = v16;
    *(_OWORD *)(a2 + 80) = v17;
    *(void *)(a2 + 96) = v12;
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_17362C()
{
  unint64_t result = qword_2720F8;
  if (!qword_2720F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2720F8);
  }
  return result;
}

uint64_t sub_173680@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Series.init(from:)(a1, a2);
}

uint64_t sub_173698(void *a1)
{
  return Series.encode(to:)(a1);
}

uint64_t ScoredSeries.series.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  uint64_t v4 = *(void *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v8 = *(void *)(v1 + 56);
  uint64_t v9 = *(void *)(v1 + 64);
  uint64_t v10 = *(void *)(v1 + 72);
  uint64_t v11 = *(void *)(v1 + 80);
  uint64_t v12 = *(void *)(v1 + 88);
  uint64_t v13 = *(void *)(v1 + 96);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  *(void *)(a1 + 40) = v6;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v8;
  *(void *)(a1 + 64) = v9;
  *(void *)(a1 + 72) = v10;
  *(void *)(a1 + 80) = v11;
  *(void *)(a1 + 88) = v12;
  *(void *)(a1 + 96) = v13;
  return sub_172FB8(v3, v4, v5, v6, v7, v8, v9);
}

double ScoredSeries.score.getter()
{
  return *(double *)(v0 + 104);
}

uint64_t sub_173720()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 0x736569726573;
  }
}

uint64_t sub_173754@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_175E34(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_17377C(uint64_t a1)
{
  unint64_t v2 = sub_1739EC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1737B8(uint64_t a1)
{
  unint64_t v2 = sub_1739EC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScoredSeries.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_272100);
  uint64_t v18 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  char v7 = *((unsigned char *)v1 + 8);
  long long v8 = *((_OWORD *)v1 + 1);
  long long v15 = *((_OWORD *)v1 + 2);
  long long v16 = v8;
  long long v14 = *((_OWORD *)v1 + 3);
  long long v13 = *((_OWORD *)v1 + 4);
  long long v12 = *((_OWORD *)v1 + 5);
  uint64_t v9 = v1[12];
  sub_5D64(a1, a1[3]);
  sub_1739EC();
  sub_1FC870();
  uint64_t v20 = v6;
  char v21 = v7;
  long long v22 = v16;
  long long v23 = v15;
  long long v24 = v14;
  long long v25 = v13;
  long long v26 = v12;
  uint64_t v27 = v9;
  char v19 = 0;
  sub_173A40();
  uint64_t v10 = v17;
  sub_1FC530();
  if (!v10)
  {
    LOBYTE(v20) = 1;
    sub_1FC500();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v3);
}

unint64_t sub_1739EC()
{
  unint64_t result = qword_272108;
  if (!qword_272108)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272108);
  }
  return result;
}

unint64_t sub_173A40()
{
  unint64_t result = qword_272110;
  if (!qword_272110)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272110);
  }
  return result;
}

uint64_t ScoredSeries.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_272118);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1739EC();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v31 = 0;
  sub_173E24();
  sub_1FC3F0();
  uint64_t v21 = v32;
  int v20 = v33;
  LOBYTE(v32) = 1;
  uint64_t v27 = v44;
  uint64_t v28 = v43;
  uint64_t v29 = v42;
  uint64_t v25 = v35;
  uint64_t v26 = v34;
  uint64_t v24 = v36;
  uint64_t v22 = v37;
  uint64_t v23 = v38;
  uint64_t v9 = v39;
  uint64_t v10 = v40;
  uint64_t v30 = v41;
  sub_172FB8(v34, v35, v36, v37, v38, v39, v40);
  sub_1FC3C0();
  uint64_t v12 = v11;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v21;
  *(unsigned char *)(a2 + 8) = v20;
  uint64_t v13 = v25;
  *(void *)(a2 + 16) = v26;
  *(void *)(a2 + 24) = v13;
  uint64_t v14 = v22;
  *(void *)(a2 + 32) = v24;
  *(void *)(a2 + 40) = v14;
  *(void *)(a2 + 48) = v23;
  *(void *)(a2 + 56) = v9;
  uint64_t v19 = v9;
  *(void *)(a2 + 64) = v10;
  uint64_t v15 = v29;
  *(void *)(a2 + 72) = v30;
  *(void *)(a2 + 80) = v15;
  uint64_t v16 = v27;
  *(void *)(a2 + 88) = v28;
  *(void *)(a2 + 96) = v16;
  *(void *)(a2 + 104) = v12;
  sub_1264C((uint64_t)a1);
  return sub_7B974(v26, v25, v24, v14, v23, v19, v10);
}

unint64_t sub_173E24()
{
  unint64_t result = qword_272120;
  if (!qword_272120)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272120);
  }
  return result;
}

uint64_t sub_173E78@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScoredSeries.init(from:)(a1, a2);
}

uint64_t sub_173E90(void *a1)
{
  return ScoredSeries.encode(to:)(a1);
}

void Series.Metadata.hash(into:)()
{
  sub_1FC800(*v0);
}

uint64_t sub_173ED4()
{
  return 0x65726564724F7369;
}

uint64_t sub_173EF0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x65726564724F7369 && a2 == 0xE900000000000064)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_173F94(uint64_t a1)
{
  unint64_t v2 = sub_174140();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_173FD0(uint64_t a1)
{
  unint64_t v2 = sub_174140();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Series.Metadata.encode(to:)(void *a1)
{
  uint64_t v2 = sub_12124(&qword_272128);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_174140();
  sub_1FC870();
  sub_1FC4F0();
  return (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
}

unint64_t sub_174140()
{
  unint64_t result = qword_272130;
  if (!qword_272130)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272130);
  }
  return result;
}

Swift::Int Series.Metadata.hashValue.getter()
{
  Swift::UInt8 v1 = *v0;
  sub_1FC7E0();
  sub_1FC800(v1);
  return sub_1FC830();
}

uint64_t Series.Metadata.init(from:)@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_272138);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  long long v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_174140();
  sub_1FC850();
  if (!v2)
  {
    char v9 = sub_1FC3B0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9 & 1;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_174330@<X0>(void *a1@<X0>, unsigned char *a2@<X8>)
{
  return Series.Metadata.init(from:)(a1, a2);
}

Swift::Int sub_174348()
{
  Swift::UInt8 v1 = *v0;
  sub_1FC7E0();
  sub_1FC800(v1);
  return sub_1FC830();
}

unint64_t sub_174390()
{
  unint64_t result = qword_272140;
  if (!qword_272140)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272140);
  }
  return result;
}

uint64_t initializeWithCopy for Series(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 64);
  if (v4)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    int v5 = *(unsigned __int8 *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    if (v5 == 255)
    {
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    else
    {
      *(unsigned char *)(a1 + 56) = v5 & 1;
      swift_bridgeObjectRetain();
    }
    uint64_t v8 = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v4;
    *(void *)(a1 + 72) = v8;
    uint64_t v10 = *(void *)(a2 + 88);
    uint64_t v11 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
  }
  return a1;
}

uint64_t assignWithCopy for Series(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v7 = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      uint64_t v8 = (uint64_t *)(a1 + 48);
      uint64_t v9 = (uint64_t *)(a2 + 48);
      int v10 = *(unsigned __int8 *)(a2 + 56);
      if (*(unsigned __int8 *)(a1 + 56) == 255)
      {
        if (v10 == 255)
        {
          uint64_t v20 = *v9;
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          uint64_t *v8 = v20;
        }
        else
        {
          *(void *)(a1 + 48) = *v9;
          *(unsigned char *)(a1 + 56) = v10 & 1;
          swift_bridgeObjectRetain();
        }
      }
      else if (v10 == 255)
      {
        sub_57194(a1 + 48);
        char v11 = *(unsigned char *)(a2 + 56);
        uint64_t *v8 = *v9;
        *(unsigned char *)(a1 + 56) = v11;
      }
      else
      {
        *(void *)(a1 + 48) = *v9;
        *(unsigned char *)(a1 + 56) = v10 & 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_174734(a1 + 16);
      long long v16 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
      *(_OWORD *)(v4 + 16) = v16;
      long long v18 = *(_OWORD *)(v5 + 48);
      long long v17 = *(_OWORD *)(v5 + 64);
      long long v19 = *(_OWORD *)(v5 + 32);
      *(void *)(v4 + 80) = *(void *)(v5 + 80);
      *(_OWORD *)(v4 + 48) = v18;
      *(_OWORD *)(v4 + 64) = v17;
      *(_OWORD *)(v4 + 32) = v19;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = v12;
    uint64_t v13 = (uint64_t *)(a2 + 48);
    int v14 = *(unsigned __int8 *)(a2 + 56);
    if (v14 == 255)
    {
      uint64_t v15 = *v13;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 48) = v15;
    }
    else
    {
      *(void *)(a1 + 48) = *v13;
      *(unsigned char *)(a1 + 56) = v14 & 1;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v21;
    long long v22 = *(_OWORD *)(a2 + 48);
    long long v23 = *(_OWORD *)(a2 + 64);
    long long v24 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v23;
    *(_OWORD *)(a1 + 80) = v24;
    *(_OWORD *)(a1 + 48) = v22;
  }
  return a1;
}

uint64_t sub_174734(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for Series(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[5];
  *(void *)(a1 + 96) = *((void *)a2 + 12);
  *(_OWORD *)(a1 + 64) = v5;
  *(_OWORD *)(a1 + 80) = v6;
  *(__n128 *)(a1 + 48) = result;
  return result;
}

uint64_t assignWithTake for Series(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = a1 + 16;
  uint64_t v4 = a2 + 16;
  if (*(void *)(a1 + 64))
  {
    uint64_t v6 = *(void *)(a2 + 64);
    if (v6)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v7 = (void *)(a1 + 48);
      uint64_t v8 = (void *)(a2 + 48);
      if (*(unsigned __int8 *)(a1 + 56) != 255)
      {
        int v9 = *(unsigned __int8 *)(a2 + 56);
        if (v9 != 255)
        {
          *(void *)(a1 + 48) = *v8;
          *(unsigned char *)(a1 + 56) = v9 & 1;
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        sub_57194(a1 + 48);
      }
      *uint64_t v7 = *v8;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_10:
      *(void *)(a1 + 64) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_174734(a1 + 16);
  }
  long long v10 = *(_OWORD *)(v4 + 48);
  *(_OWORD *)(v3 + 32) = *(_OWORD *)(v4 + 32);
  *(_OWORD *)(v3 + 48) = v10;
  *(_OWORD *)(v3 + 64) = *(_OWORD *)(v4 + 64);
  *(void *)(v3 + 80) = *(void *)(v4 + 80);
  long long v11 = *(_OWORD *)(v4 + 16);
  *(_OWORD *)uint64_t v3 = *(_OWORD *)v4;
  *(_OWORD *)(v3 + 16) = v11;
  return a1;
}

uint64_t getEnumTagSinglePayload for Series(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 104)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for Series(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 104) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Series()
{
  return &type metadata for Series;
}

uint64_t destroy for Series.Rationale(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) != 255) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for Series.Rationale(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (v4 == 255)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    *(unsigned char *)(a1 + 40) = v4 & 1;
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Series.Rationale(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = (uint64_t *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      uint64_t v9 = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)uint64_t v5 = v9;
    }
    else
    {
      *(void *)(a1 + 32) = *v6;
      *(unsigned char *)(a1 + 40) = v7 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 255)
  {
    sub_57194(a1 + 32);
    char v8 = *((unsigned char *)v6 + 8);
    *(void *)uint64_t v5 = *v6;
    *(unsigned char *)(v5 + 8) = v8;
  }
  else
  {
    *(void *)(a1 + 32) = *v6;
    *(unsigned char *)(a1 + 40) = v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for Series.Rationale(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for Series.Rationale(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      *(void *)(a1 + 32) = *(void *)v5;
      *(unsigned char *)(a1 + 40) = v6 & 1;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_57194(a1 + 32);
  }
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Series.Rationale(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 88)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Series.Rationale(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 88) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 88) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Series.Rationale()
{
  return &type metadata for Series.Rationale;
}

uint64_t _s20BooksPersonalization6SeriesVwxx_0(uint64_t result)
{
  if (*(void *)(result + 64))
  {
    if (*(unsigned __int8 *)(result + 56) != 255) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for ScoredSeries(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 64);
  if (v4)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    int v5 = *(unsigned __int8 *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    if (v5 == 255)
    {
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    }
    else
    {
      *(unsigned char *)(a1 + 56) = v5 & 1;
      swift_bridgeObjectRetain();
    }
    uint64_t v8 = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 80);
    *(void *)(a1 + 64) = v4;
    *(void *)(a1 + 72) = v8;
    uint64_t v10 = *(void *)(a2 + 88);
    uint64_t v11 = *(void *)(a2 + 96);
    *(void *)(a1 + 80) = v9;
    *(void *)(a1 + 88) = v10;
    *(void *)(a1 + 96) = v11;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v6 = *(_OWORD *)(a2 + 64);
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 64) = v6;
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    long long v7 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    *(_OWORD *)(a1 + 32) = v7;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t assignWithCopy for ScoredSeries(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      uint64_t v7 = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)(a1 + 32) = v7;
      uint64_t v8 = (uint64_t *)(a1 + 48);
      uint64_t v9 = (uint64_t *)(a2 + 48);
      int v10 = *(unsigned __int8 *)(a2 + 56);
      if (*(unsigned __int8 *)(a1 + 56) == 255)
      {
        if (v10 == 255)
        {
          uint64_t v20 = *v9;
          *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
          uint64_t *v8 = v20;
        }
        else
        {
          *(void *)(a1 + 48) = *v9;
          *(unsigned char *)(a1 + 56) = v10 & 1;
          swift_bridgeObjectRetain();
        }
      }
      else if (v10 == 255)
      {
        sub_57194(a1 + 48);
        char v11 = *(unsigned char *)(a2 + 56);
        uint64_t *v8 = *v9;
        *(unsigned char *)(a1 + 56) = v11;
      }
      else
      {
        *(void *)(a1 + 48) = *v9;
        *(unsigned char *)(a1 + 56) = v10 & 1;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
      }
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_174734(a1 + 16);
      long long v16 = *(_OWORD *)(v5 + 16);
      *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
      *(_OWORD *)(v4 + 16) = v16;
      long long v18 = *(_OWORD *)(v5 + 48);
      long long v17 = *(_OWORD *)(v5 + 64);
      long long v19 = *(_OWORD *)(v5 + 32);
      *(void *)(v4 + 80) = *(void *)(v5 + 80);
      *(_OWORD *)(v4 + 48) = v18;
      *(_OWORD *)(v4 + 64) = v17;
      *(_OWORD *)(v4 + 32) = v19;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 16) = *(void *)(a2 + 16);
    *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
    uint64_t v12 = *(void *)(a2 + 32);
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
    *(void *)(a1 + 32) = v12;
    uint64_t v13 = (uint64_t *)(a2 + 48);
    int v14 = *(unsigned __int8 *)(a2 + 56);
    if (v14 == 255)
    {
      uint64_t v15 = *v13;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      *(void *)(a1 + 48) = v15;
    }
    else
    {
      *(void *)(a1 + 48) = *v13;
      *(unsigned char *)(a1 + 56) = v14 & 1;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(void *)(a1 + 72) = *(void *)(a2 + 72);
    *(void *)(a1 + 80) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v21 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
    *(_OWORD *)(a1 + 32) = v21;
    long long v22 = *(_OWORD *)(a2 + 48);
    long long v23 = *(_OWORD *)(a2 + 64);
    long long v24 = *(_OWORD *)(a2 + 80);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(_OWORD *)(a1 + 64) = v23;
    *(_OWORD *)(a1 + 80) = v24;
    *(_OWORD *)(a1 + 48) = v22;
  }
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

__n128 initializeWithTake for ScoredSeries(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 80) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for ScoredSeries(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = a1 + 16;
  uint64_t v5 = a2 + 16;
  if (*(void *)(a1 + 64))
  {
    uint64_t v6 = *(void *)(a2 + 64);
    if (v6)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      uint64_t v7 = (void *)(a1 + 48);
      uint64_t v8 = (void *)(a2 + 48);
      if (*(unsigned __int8 *)(a1 + 56) != 255)
      {
        int v9 = *(unsigned __int8 *)(a2 + 56);
        if (v9 != 255)
        {
          *(void *)(a1 + 48) = *v8;
          *(unsigned char *)(a1 + 56) = v9 & 1;
          swift_bridgeObjectRelease();
          goto LABEL_10;
        }
        sub_57194(a1 + 48);
      }
      *uint64_t v7 = *v8;
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
LABEL_10:
      *(void *)(a1 + 64) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 72) = *(void *)(a2 + 72);
      *(void *)(a1 + 80) = *(void *)(a2 + 80);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_174734(a1 + 16);
  }
  long long v10 = *(_OWORD *)(v5 + 48);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)(v5 + 32);
  *(_OWORD *)(v4 + 48) = v10;
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(v5 + 64);
  *(void *)(v4 + 80) = *(void *)(v5 + 80);
  long long v11 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)uint64_t v4 = *(_OWORD *)v5;
  *(_OWORD *)(v4 + 16) = v11;
LABEL_11:
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoredSeries(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 112)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 64);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoredSeries(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 112) = 0;
    }
    if (a2) {
      *(void *)(result + 64) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredSeries()
{
  return &type metadata for ScoredSeries;
}

unsigned char *storeEnumTagSinglePayload for Series.Metadata(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x175480);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Series.Metadata()
{
  return &type metadata for Series.Metadata;
}

unsigned char *storeEnumTagSinglePayload for Series.Metadata.CodingKeys(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x175554);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Series.Metadata.CodingKeys()
{
  return &type metadata for Series.Metadata.CodingKeys;
}

ValueMetadata *type metadata accessor for ScoredSeries.CodingKeys()
{
  return &type metadata for ScoredSeries.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Series.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17566CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Series.CodingKeys()
{
  return &type metadata for Series.CodingKeys;
}

unsigned char *_s20BooksPersonalization12ScoredSeriesV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x175770);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Series.Rationale.CodingKeys()
{
  return &type metadata for Series.Rationale.CodingKeys;
}

unint64_t sub_1757AC()
{
  unint64_t result = qword_272148;
  if (!qword_272148)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272148);
  }
  return result;
}

unint64_t sub_175804()
{
  unint64_t result = qword_272150;
  if (!qword_272150)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272150);
  }
  return result;
}

unint64_t sub_17585C()
{
  unint64_t result = qword_272158;
  if (!qword_272158)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272158);
  }
  return result;
}

unint64_t sub_1758B4()
{
  unint64_t result = qword_272160;
  if (!qword_272160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272160);
  }
  return result;
}

unint64_t sub_17590C()
{
  unint64_t result = qword_272168;
  if (!qword_272168)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272168);
  }
  return result;
}

unint64_t sub_175964()
{
  unint64_t result = qword_272170;
  if (!qword_272170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272170);
  }
  return result;
}

unint64_t sub_1759BC()
{
  unint64_t result = qword_272178;
  if (!qword_272178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272178);
  }
  return result;
}

unint64_t sub_175A14()
{
  unint64_t result = qword_272180;
  if (!qword_272180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272180);
  }
  return result;
}

unint64_t sub_175A6C()
{
  unint64_t result = qword_272188;
  if (!qword_272188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272188);
  }
  return result;
}

unint64_t sub_175AC4()
{
  unint64_t result = qword_272190;
  if (!qword_272190)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272190);
  }
  return result;
}

unint64_t sub_175B1C()
{
  unint64_t result = qword_272198;
  if (!qword_272198)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272198);
  }
  return result;
}

unint64_t sub_175B74()
{
  unint64_t result = qword_2721A0;
  if (!qword_2721A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721A0);
  }
  return result;
}

uint64_t sub_175BC8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F42746567726174 && a2 == 0xEA00000000006B6FLL;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000000219B10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_175CC4(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6C616E6F69746172 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_175E34(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736569726573 && a2 == 0xE600000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BOOL static CollectionMembershipInfo.== infix(_:_:)(void *a1, void *a2)
{
  return *a1 == *a2 && a1[1] == a2[1];
}

void CollectionMembershipInfo.hash(into:)()
{
  Swift::UInt v1 = v0[1];
  sub_1FC7F0(*v0);
  sub_1FC7F0(v1);
}

uint64_t sub_175F6C()
{
  if (*v0) {
    return 0x746E756F63;
  }
  else {
    return 0x7865646E69;
  }
}

uint64_t sub_175F98@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_17B114(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_175FC0(uint64_t a1)
{
  unint64_t v2 = sub_1761A4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_175FFC(uint64_t a1)
{
  unint64_t v2 = sub_1761A4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t CollectionMembershipInfo.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_2721B0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[1] = *(void *)(v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_1761A4();
  sub_1FC870();
  char v11 = 0;
  sub_1FC520();
  if (!v2)
  {
    char v10 = 1;
    sub_1FC520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1761A4()
{
  unint64_t result = qword_2721B8;
  if (!qword_2721B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721B8);
  }
  return result;
}

Swift::Int CollectionMembershipInfo.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_1FC7E0();
  sub_1FC7F0(v1);
  sub_1FC7F0(v2);
  return sub_1FC830();
}

uint64_t CollectionMembershipInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2721C0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1761A4();
  sub_1FC850();
  if (!v2)
  {
    char v14 = 0;
    uint64_t v9 = sub_1FC3E0();
    char v13 = 1;
    uint64_t v10 = sub_1FC3E0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v10;
  }
  return sub_1264C((uint64_t)a1);
}

Swift::Int sub_1763F0()
{
  Swift::UInt v1 = *v0;
  Swift::UInt v2 = v0[1];
  sub_1FC7E0();
  sub_1FC7F0(v1);
  sub_1FC7F0(v2);
  return sub_1FC830();
}

uint64_t sub_176448@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return CollectionMembershipInfo.init(from:)(a1, a2);
}

uint64_t sub_176460(void *a1)
{
  return CollectionMembershipInfo.encode(to:)(a1);
}

uint64_t StoreBook.Origin.hash(into:)()
{
  uint64_t v1 = sub_12124(&qword_26D638);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  uint64_t v4 = (char *)&v15 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v6 = (char *)&v15 - v5;
  uint64_t v7 = sub_1FB0E0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = type metadata accessor for StoreBook.Origin(0);
  __chkstk_darwin(v11);
  char v13 = (char *)&v15 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1784B4(v0, (uint64_t)v13);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    sub_178518((uint64_t)v13, (uint64_t)v6);
    sub_1FC7F0(1uLL);
    sub_5606C((uint64_t)v6, (uint64_t)v4, &qword_26D638);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v4, 1, v7) == 1)
    {
      sub_1FC800(0);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v4, v7);
      sub_1FC800(1u);
      sub_178700(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
      sub_1FB7A0();
      (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
    }
    return sub_55F38((uint64_t)v6, &qword_26D638);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v13, v7);
    sub_1FC7F0(0);
    sub_178700(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1FB7A0();
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
}

Swift::Int StoreBook.Origin.hashValue.getter()
{
  return sub_177134((void (*)(unsigned char *))StoreBook.Origin.hash(into:));
}

Swift::Int sub_1767A8(uint64_t a1, uint64_t a2)
{
  return sub_177194(a1, a2, (void (*)(unsigned char *))StoreBook.Origin.hash(into:));
}

Swift::Int sub_1767C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1771F8(a1, a2, a3, (void (*)(unsigned char *))StoreBook.Origin.hash(into:));
}

uint64_t StoreBook.origin.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_5606C(v1, a1, &qword_26FE68);
}

uint64_t StoreBook.storeID.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StoreBook(0) + 20));
}

uint64_t StoreBook.highWaterMarkReadingProgress.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for StoreBook(0) + 24));
}

__n128 StoreBook.finishedInfo.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for StoreBook(0) + 28));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

double StoreBook.lastEngagedIntervalSinceReferenceDate.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoreBook(0) + 32));
}

double StoreBook.finishedIntervalSinceReferenceDate.getter()
{
  return *(double *)(v0 + *(int *)(type metadata accessor for StoreBook(0) + 36));
}

__n128 StoreBook.wantToReadInfo.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for StoreBook(0) + 40));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

__n128 StoreBook.samplesInfo.getter@<Q0>(__n128 *a1@<X8>)
{
  uint64_t v3 = (__n128 *)(v1 + *(int *)(type metadata accessor for StoreBook(0) + 44));
  unsigned __int8 v4 = v3[1].n128_u8[0];
  __n128 result = *v3;
  *a1 = *v3;
  a1[1].n128_u8[0] = v4;
  return result;
}

int *StoreBook.init(storeID:purchaseDate:highWaterMarkReadingProgress:finishedInfo:wantToReadInfo:lastEngagedIntervalSinceReferenceDate:finishedIntervalSinceReferenceDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v15 = *a5;
  uint64_t v16 = a5[1];
  char v17 = *((unsigned char *)a5 + 16);
  uint64_t v18 = *a6;
  uint64_t v19 = a6[1];
  char v20 = *((unsigned char *)a6 + 16);
  uint64_t v21 = sub_1FB0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a7, a2, v21);
  uint64_t v22 = type metadata accessor for StoreBook.Origin(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v22 - 8) + 56))(a7, 0, 1, v22);
  __n128 result = (int *)type metadata accessor for StoreBook(0);
  *(void *)(a7 + result[5]) = a1;
  uint64_t v24 = a7 + result[6];
  *(void *)uint64_t v24 = a3;
  *(unsigned char *)(v24 + 8) = a4 & 1;
  uint64_t v25 = a7 + result[7];
  *(void *)uint64_t v25 = v15;
  *(void *)(v25 + 8) = v16;
  *(unsigned char *)(v25 + 16) = v17;
  uint64_t v26 = a7 + result[10];
  *(void *)uint64_t v26 = v18;
  *(void *)(v26 + 8) = v19;
  *(unsigned char *)(v26 + 16) = v20;
  uint64_t v27 = a7 + result[11];
  *(void *)uint64_t v27 = 0;
  *(void *)(v27 + 8) = 0;
  *(unsigned char *)(v27 + 16) = 1;
  *(double *)(a7 + result[8]) = a8;
  *(double *)(a7 + result[9]) = a9;
  return result;
}

int *StoreBook.init(storeID:creationDate:highWaterMarkReadingProgress:finishedInfo:wantToReadInfo:lastEngagedIntervalSinceReferenceDate:finishedIntervalSinceReferenceDate:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t *a5@<X4>, uint64_t *a6@<X5>, uint64_t a7@<X8>, double a8@<D0>, double a9@<D1>)
{
  uint64_t v14 = *a5;
  uint64_t v15 = a5[1];
  char v16 = *((unsigned char *)a5 + 16);
  uint64_t v17 = *a6;
  uint64_t v18 = a6[1];
  char v19 = *((unsigned char *)a6 + 16);
  sub_178518(a2, a7);
  uint64_t v20 = type metadata accessor for StoreBook.Origin(0);
  swift_storeEnumTagMultiPayload();
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a7, 0, 1, v20);
  __n128 result = (int *)type metadata accessor for StoreBook(0);
  *(void *)(a7 + result[5]) = a1;
  uint64_t v22 = a7 + result[6];
  *(void *)uint64_t v22 = a3;
  *(unsigned char *)(v22 + 8) = a4 & 1;
  uint64_t v23 = a7 + result[7];
  *(void *)uint64_t v23 = v14;
  *(void *)(v23 + 8) = v15;
  *(unsigned char *)(v23 + 16) = v16;
  uint64_t v24 = a7 + result[10];
  *(void *)uint64_t v24 = v17;
  *(void *)(v24 + 8) = v18;
  *(unsigned char *)(v24 + 16) = v19;
  uint64_t v25 = a7 + result[11];
  *(void *)uint64_t v25 = 0;
  *(void *)(v25 + 8) = 0;
  *(unsigned char *)(v25 + 16) = 1;
  *(double *)(a7 + result[8]) = a8;
  *(double *)(a7 + result[9]) = a9;
  return result;
}

int *StoreBook.init(storeID:finishedInfo:wantToReadInfo:samplesInfo:lastEngagedIntervalSinceReferenceDate:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  char v11 = *((unsigned char *)a2 + 16);
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  char v14 = *((unsigned char *)a3 + 16);
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  char v23 = *((unsigned char *)a4 + 16);
  uint64_t v17 = type metadata accessor for StoreBook.Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a5, 1, 1, v17);
  __n128 result = (int *)type metadata accessor for StoreBook(0);
  *(void *)(a5 + result[5]) = a1;
  uint64_t v19 = a5 + result[6];
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = a5 + result[7];
  *(void *)uint64_t v20 = v9;
  *(void *)(v20 + 8) = v10;
  *(unsigned char *)(v20 + 16) = v11;
  uint64_t v21 = a5 + result[10];
  *(void *)uint64_t v21 = v12;
  *(void *)(v21 + 8) = v13;
  *(unsigned char *)(v21 + 16) = v14;
  uint64_t v22 = a5 + result[11];
  *(void *)uint64_t v22 = v15;
  *(void *)(v22 + 8) = v16;
  *(unsigned char *)(v22 + 16) = v23;
  *(double *)(a5 + result[8]) = a6;
  *(void *)(a5 + result[9]) = 0xBFF0000000000000;
  return result;
}

int *StoreBook.init(storeID:finishedInfo:wantToReadInfo:samplesInfo:finishedIntervalSinceReferenceDate:)@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X8>, double a6@<D0>)
{
  uint64_t v9 = *a2;
  uint64_t v10 = a2[1];
  char v11 = *((unsigned char *)a2 + 16);
  uint64_t v12 = *a3;
  uint64_t v13 = a3[1];
  char v14 = *((unsigned char *)a3 + 16);
  uint64_t v15 = *a4;
  uint64_t v16 = a4[1];
  char v23 = *((unsigned char *)a4 + 16);
  uint64_t v17 = type metadata accessor for StoreBook.Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(a5, 1, 1, v17);
  __n128 result = (int *)type metadata accessor for StoreBook(0);
  *(void *)(a5 + result[5]) = a1;
  uint64_t v19 = a5 + result[6];
  *(void *)uint64_t v19 = 0;
  *(unsigned char *)(v19 + 8) = 1;
  uint64_t v20 = a5 + result[7];
  *(void *)uint64_t v20 = v9;
  *(void *)(v20 + 8) = v10;
  *(unsigned char *)(v20 + 16) = v11;
  uint64_t v21 = a5 + result[10];
  *(void *)uint64_t v21 = v12;
  *(void *)(v21 + 8) = v13;
  *(unsigned char *)(v21 + 16) = v14;
  uint64_t v22 = a5 + result[11];
  *(void *)uint64_t v22 = v15;
  *(void *)(v22 + 8) = v16;
  *(unsigned char *)(v22 + 16) = v23;
  *(void *)(a5 + result[8]) = 0xBFF0000000000000;
  *(double *)(a5 + result[9]) = a6;
  return result;
}

void StoreBook.hash(into:)()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_12124(&qword_26FE68);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5606C(v1, (uint64_t)v8, &qword_26FE68);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v3 + 48))(v8, 1, v2) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1785A0((uint64_t)v8, (uint64_t)v5);
    sub_1FC800(1u);
    StoreBook.Origin.hash(into:)();
    sub_178604((uint64_t)v5);
  }
  uint64_t v9 = (int *)type metadata accessor for StoreBook(0);
  sub_1FC820(*(void *)(v1 + v9[5]));
  uint64_t v10 = v1 + v9[6];
  if (*(unsigned char *)(v10 + 8) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt64 v11 = *(void *)v10;
    sub_1FC800(1u);
    if ((v11 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v12 = v11;
    }
    else {
      Swift::UInt64 v12 = 0;
    }
    sub_1FC820(v12);
  }
  uint64_t v13 = v1 + v9[7];
  if (*(unsigned char *)(v13 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt v15 = *(void *)v13;
    Swift::UInt v14 = *(void *)(v13 + 8);
    sub_1FC800(1u);
    sub_1FC7F0(v15);
    sub_1FC7F0(v14);
  }
  if ((*(void *)(v1 + v9[8]) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v16 = *(void *)(v1 + v9[8]);
  }
  else {
    Swift::UInt64 v16 = 0;
  }
  sub_1FC820(v16);
  if ((*(void *)(v1 + v9[9]) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v17 = *(void *)(v1 + v9[9]);
  }
  else {
    Swift::UInt64 v17 = 0;
  }
  sub_1FC820(v17);
  uint64_t v18 = v1 + v9[10];
  if (*(unsigned char *)(v18 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt v20 = *(void *)v18;
    Swift::UInt v19 = *(void *)(v18 + 8);
    sub_1FC800(1u);
    sub_1FC7F0(v20);
    sub_1FC7F0(v19);
  }
  uint64_t v21 = v1 + v9[11];
  if (*(unsigned char *)(v21 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt v23 = *(void *)v21;
    Swift::UInt v22 = *(void *)(v21 + 8);
    sub_1FC800(1u);
    sub_1FC7F0(v23);
    sub_1FC7F0(v22);
  }
}

Swift::Int StoreBook.hashValue.getter()
{
  return sub_177134((void (*)(unsigned char *))StoreBook.hash(into:));
}

Swift::Int sub_177134(void (*a1)(unsigned char *))
{
  sub_1FC7E0();
  a1(v3);
  return sub_1FC830();
}

Swift::Int sub_17717C(uint64_t a1, uint64_t a2)
{
  return sub_177194(a1, a2, (void (*)(unsigned char *))StoreBook.hash(into:));
}

Swift::Int sub_177194(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *))
{
  sub_1FC7E0();
  a3(v5);
  return sub_1FC830();
}

Swift::Int sub_1771E0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1771F8(a1, a2, a3, (void (*)(unsigned char *))StoreBook.hash(into:));
}

Swift::Int sub_1771F8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *))
{
  sub_1FC7E0();
  a4(v6);
  return sub_1FC830();
}

void static StoreBookCollectionOptions.sampled.getter(void *a1@<X8>)
{
  *a1 = 1;
}

void static StoreBookCollectionOptions.wantToRead.getter(void *a1@<X8>)
{
  *a1 = 2;
}

void static StoreBookCollectionOptions.purchased.getter(void *a1@<X8>)
{
  *a1 = 4;
}

void static StoreBookCollectionOptions.downloadedViaFamilySharing.getter(void *a1@<X8>)
{
  *a1 = 8;
}

void static StoreBookCollectionOptions.finished.getter(void *a1@<X8>)
{
  *a1 = 16;
}

void sub_177278()
{
  qword_2721A8 = 12;
}

uint64_t static StoreBookCollectionOptions.owned.getter@<X0>(void *a1@<X8>)
{
  if (qword_26C360 != -1) {
    uint64_t result = swift_once();
  }
  *a1 = qword_2721A8;
  return result;
}

void *sub_1772F8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_17730C@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_177320@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

BOOL sub_177334(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

void *sub_177364@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_177390@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1773B4(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1773C8(void *result)
{
  *v1 &= *result;
  return result;
}

void *sub_1773DC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1773F0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_177404(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_177418(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_17742C(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_177440()
{
  return *v0 == 0;
}

uint64_t sub_177450(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_177468(void *result)
{
  *v1 &= ~*result;
  return result;
}

void *sub_17747C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

BOOL sub_17748C(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t StoreBookForDeduplication.title.getter()
{
  uint64_t v1 = *(void *)(v0 + 8);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t StoreBookForDeduplication.author.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  swift_bridgeObjectRetain();
  return v1;
}

void __swiftcall StoreBookForDeduplication.init(storeID:title:author:)(BooksPersonalization::StoreBookForDeduplication *__return_ptr retstr, Swift::UInt64 storeID, Swift::String title, Swift::String author)
{
  retstr->storeID = storeID;
  retstr->title = title;
  retstr->author = author;
}

uint64_t StoreBookForDeduplication.hash(into:)()
{
  sub_1FC820(*v0);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int StoreBookForDeduplication.hashValue.getter()
{
  Swift::UInt64 v1 = *v0;
  sub_1FC7E0();
  sub_1FC820(v1);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

Swift::Int sub_177648()
{
  Swift::UInt64 v1 = *v0;
  sub_1FC7E0();
  sub_1FC820(v1);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t NextInSeriesProcessorMetadata.isOwned.getter()
{
  return *(unsigned __int8 *)(v0 + 33);
}

void __swiftcall NextInSeriesProcessorMetadata.init(storeID:seriesID:seriesSortKey:isOwned:)(BooksPersonalization::NextInSeriesProcessorMetadata *__return_ptr retstr, Swift::UInt64 storeID, Swift::UInt64_optional seriesID, Swift::Int64_optional seriesSortKey, Swift::Bool isOwned)
{
  retstr->storeID = storeID;
  retstr->seriesID.value = seriesID.value;
  retstr->seriesID.is_nil = seriesID.is_nil;
  retstr->seriesSortKey.value = seriesSortKey.value;
  retstr->seriesSortKey.is_nil = seriesSortKey.is_nil;
  retstr->isOwned = isOwned;
}

void NextInSeriesProcessorMetadata.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 16);
  Swift::UInt64 v3 = *(void *)(v0 + 24);
  int v4 = *(unsigned __int8 *)(v0 + 32);
  Swift::UInt8 v5 = *(unsigned char *)(v0 + 33);
  sub_1FC820(*(void *)v0);
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (!v4) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    goto LABEL_6;
  }
  sub_1FC800(0);
  if (v4) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC820(v3);
LABEL_6:
  sub_1FC800(v5);
}

Swift::Int NextInSeriesProcessorMetadata.hashValue.getter()
{
  Swift::UInt64 v2 = *(void *)v0;
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Swift::UInt64 v4 = *(void *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 32);
  Swift::UInt8 v6 = *(unsigned char *)(v0 + 33);
  sub_1FC7E0();
  sub_1FC820(v2);
  if (v3 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (!v5) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    goto LABEL_6;
  }
  sub_1FC800(0);
  if (v5) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC820(v4);
LABEL_6:
  sub_1FC800(v6);
  return sub_1FC830();
}

Swift::Int sub_177884()
{
  Swift::UInt64 v2 = *(void *)v0;
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  Swift::UInt64 v4 = *(void *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 32);
  Swift::UInt8 v6 = *(unsigned char *)(v0 + 33);
  sub_1FC7E0();
  sub_1FC820(v2);
  if (v3 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (!v5) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    goto LABEL_6;
  }
  sub_1FC800(0);
  if (v5) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC820(v4);
LABEL_6:
  sub_1FC800(v6);
  return sub_1FC830();
}

uint64_t _s20BooksPersonalization25StoreBookForDeduplicationV2eeoiySbAC_ACtFZ_0(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v2 = a1[3];
  uint64_t v3 = a1[4];
  uint64_t v4 = a2[3];
  uint64_t v5 = a2[4];
  BOOL v6 = a1[1] == a2[1] && a1[2] == a2[2];
  if (v6 || (char v7 = sub_1FC5F0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1FC5F0();
    }
  }
  return result;
}

uint64_t _s20BooksPersonalization29NextInSeriesProcessorMetadataV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v2 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 8) != *(void *)(a2 + 8)) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 32))
  {
    if (!*(unsigned char *)(a2 + 32)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 24) == *(void *)(a2 + 24)) {
      char v4 = *(unsigned char *)(a2 + 32);
    }
    else {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  return *(unsigned __int8 *)(a1 + 33) ^ *(unsigned __int8 *)(a2 + 33) ^ 1u;
}

uint64_t _s20BooksPersonalization9StoreBookV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v44 = (uint64_t)&v43 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_2723B8);
  uint64_t v8 = v7 - 8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v43 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26FE68);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  Swift::UInt v14 = (char *)&v43 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  Swift::UInt64 v17 = (char *)&v43 - v16;
  __chkstk_darwin(v15);
  Swift::UInt v19 = (char *)&v43 - v18;
  uint64_t v45 = a1;
  sub_5606C(a1, (uint64_t)&v43 - v18, &qword_26FE68);
  uint64_t v46 = a2;
  sub_5606C(a2, (uint64_t)v17, &qword_26FE68);
  uint64_t v20 = (uint64_t)&v10[*(int *)(v8 + 56)];
  sub_5606C((uint64_t)v19, (uint64_t)v10, &qword_26FE68);
  sub_5606C((uint64_t)v17, v20, &qword_26FE68);
  uint64_t v21 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v21((uint64_t)v10, 1, v4) == 1)
  {
    sub_55F38((uint64_t)v17, &qword_26FE68);
    sub_55F38((uint64_t)v19, &qword_26FE68);
    if (v21(v20, 1, v4) == 1)
    {
      sub_55F38((uint64_t)v10, &qword_26FE68);
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  sub_5606C((uint64_t)v10, (uint64_t)v14, &qword_26FE68);
  if (v21(v20, 1, v4) == 1)
  {
    sub_55F38((uint64_t)v17, &qword_26FE68);
    sub_55F38((uint64_t)v19, &qword_26FE68);
    sub_178604((uint64_t)v14);
LABEL_6:
    sub_55F38((uint64_t)v10, &qword_2723B8);
    return 0;
  }
  uint64_t v22 = v44;
  sub_1785A0(v20, v44);
  char v23 = _s20BooksPersonalization9StoreBookV6OriginO2eeoiySbAE_AEtFZ_0((uint64_t)v14, v22);
  sub_178604(v22);
  sub_55F38((uint64_t)v17, &qword_26FE68);
  sub_55F38((uint64_t)v19, &qword_26FE68);
  sub_178604((uint64_t)v14);
  sub_55F38((uint64_t)v10, &qword_26FE68);
  if ((v23 & 1) == 0) {
    return 0;
  }
LABEL_8:
  uint64_t v24 = (int *)type metadata accessor for StoreBook(0);
  if (*(void *)(v45 + v24[5]) != *(void *)(v46 + v24[5])) {
    return 0;
  }
  uint64_t v25 = v24[6];
  uint64_t v26 = (double *)(v45 + v25);
  char v27 = *(unsigned char *)(v45 + v25 + 8);
  uint64_t v28 = (double *)(v46 + v25);
  uint64_t v29 = *(unsigned __int8 *)(v46 + v25 + 8);
  if (v27)
  {
    if (!v29) {
      return v29;
    }
  }
  else
  {
    if (*v26 != *v28) {
      LOBYTE(v29) = 1;
    }
    if (v29) {
      return 0;
    }
  }
  uint64_t v30 = v24[7];
  char v31 = (void *)(v45 + v30);
  uint64_t v32 = (void *)(v46 + v30);
  char v33 = *(unsigned char *)(v46 + v30 + 16);
  if (*(unsigned char *)(v45 + v30 + 16))
  {
    if (!*(unsigned char *)(v46 + v30 + 16)) {
      return 0;
    }
  }
  else
  {
    uint64_t v29 = 0;
    if ((v33 & 1) != 0 || *v31 != *v32 || v31[1] != v32[1]) {
      return v29;
    }
  }
  if (*(double *)(v45 + v24[8]) != *(double *)(v46 + v24[8]) || *(double *)(v45 + v24[9]) != *(double *)(v46 + v24[9])) {
    return 0;
  }
  uint64_t v34 = v24[10];
  uint64_t v35 = (void *)(v45 + v34);
  uint64_t v36 = (void *)(v46 + v34);
  char v37 = *(unsigned char *)(v46 + v34 + 16);
  if (*(unsigned char *)(v45 + v34 + 16))
  {
    if (!*(unsigned char *)(v46 + v34 + 16)) {
      return 0;
    }
  }
  else
  {
    uint64_t v29 = 0;
    if ((v37 & 1) != 0 || *v35 != *v36 || v35[1] != v36[1]) {
      return v29;
    }
  }
  uint64_t v38 = v24[11];
  uint64_t v39 = (void *)(v45 + v38);
  char v40 = *(unsigned char *)(v45 + v38 + 16);
  uint64_t v41 = v46 + v38;
  if (v40)
  {
    if ((*(unsigned char *)(v41 + 16) & 1) == 0) {
      return 0;
    }
  }
  else if ((*(unsigned char *)(v41 + 16) & 1) != 0 || *v39 != *(void *)v41 || v39[1] != *(void *)(v41 + 8))
  {
    return 0;
  }
  return 1;
}

uint64_t _s20BooksPersonalization9StoreBookV6OriginO2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v48 = a1;
  long long v49 = (char *)a2;
  uint64_t v45 = sub_12124(&qword_2723C0);
  __chkstk_darwin(v45);
  uint64_t v3 = (char *)&v44 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_12124(&qword_26D638);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v44 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v44 - v8;
  uint64_t v10 = sub_1FB0E0();
  uint64_t v46 = *(void *)(v10 - 8);
  uint64_t v47 = v10;
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v44 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v44 - v14;
  uint64_t v16 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v17 = __chkstk_darwin(v16);
  Swift::UInt v19 = (char *)&v44 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v21 = (char *)&v44 - v20;
  uint64_t v22 = sub_12124(&qword_2723C8);
  uint64_t v23 = __chkstk_darwin(v22 - 8);
  uint64_t v25 = (char *)&v44 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v26 = (uint64_t)&v25[*(int *)(v23 + 56)];
  sub_1784B4(v48, (uint64_t)v25);
  sub_1784B4((uint64_t)v49, v26);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v27 = v45;
    long long v49 = v13;
    sub_1784B4((uint64_t)v25, (uint64_t)v19);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v28 = (uint64_t)v9;
      sub_178518(v26, (uint64_t)v9);
      uint64_t v29 = (uint64_t)v3;
      uint64_t v30 = (uint64_t)&v3[*(int *)(v27 + 48)];
      sub_178518((uint64_t)v19, (uint64_t)v3);
      sub_5606C((uint64_t)v9, v30, &qword_26D638);
      uint64_t v31 = v46;
      uint64_t v32 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v46 + 48);
      char v33 = v3;
      uint64_t v34 = v47;
      if (v32((uint64_t)v33, 1, v47) == 1)
      {
        sub_55F38((uint64_t)v9, &qword_26D638);
        if (v32(v30, 1, v34) == 1)
        {
          sub_55F38(v29, &qword_26D638);
LABEL_15:
          sub_178604((uint64_t)v25);
          char v37 = 1;
          return v37 & 1;
        }
      }
      else
      {
        uint64_t v39 = v7;
        sub_5606C(v29, (uint64_t)v7, &qword_26D638);
        if (v32(v30, 1, v34) != 1)
        {
          uint64_t v40 = (uint64_t)v49;
          (*(void (**)(char *, uint64_t, uint64_t))(v31 + 32))(v49, v30, v34);
          sub_178700(&qword_26D408, (void (*)(uint64_t))&type metadata accessor for Date);
          char v41 = sub_1FB7D0();
          uint64_t v42 = *(void (**)(uint64_t, uint64_t))(v31 + 8);
          v42(v40, v34);
          sub_55F38(v28, &qword_26D638);
          v42((uint64_t)v39, v34);
          sub_55F38(v29, &qword_26D638);
          if (v41) {
            goto LABEL_15;
          }
          goto LABEL_16;
        }
        sub_55F38(v28, &qword_26D638);
        (*(void (**)(char *, uint64_t))(v31 + 8))(v7, v34);
      }
      sub_55F38(v29, &qword_2723C0);
LABEL_16:
      sub_178604((uint64_t)v25);
      goto LABEL_17;
    }
    sub_55F38((uint64_t)v19, &qword_26D638);
LABEL_9:
    sub_55F38((uint64_t)v25, &qword_2723C8);
LABEL_17:
    char v37 = 0;
    return v37 & 1;
  }
  sub_1784B4((uint64_t)v25, (uint64_t)v21);
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    (*(void (**)(char *, uint64_t))(v46 + 8))(v21, v47);
    goto LABEL_9;
  }
  uint64_t v36 = v46;
  uint64_t v35 = v47;
  (*(void (**)(char *, uint64_t, uint64_t))(v46 + 32))(v15, v26, v47);
  char v37 = sub_1FB0A0();
  uint64_t v38 = *(void (**)(char *, uint64_t))(v36 + 8);
  v38(v15, v35);
  v38(v21, v35);
  sub_178604((uint64_t)v25);
  return v37 & 1;
}

uint64_t type metadata accessor for StoreBook.Origin(uint64_t a1)
{
  return sub_DA140(a1, (uint64_t *)&unk_272330);
}

uint64_t sub_1784B4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoreBook.Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_178518(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for StoreBook(uint64_t a1)
{
  return sub_DA140(a1, (uint64_t *)&unk_272268);
}

uint64_t sub_1785A0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for StoreBook.Origin(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_178604(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StoreBook.Origin(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t sub_178664()
{
  unint64_t result = qword_2721C8;
  if (!qword_2721C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721C8);
  }
  return result;
}

uint64_t sub_1786B8()
{
  return sub_178700(&qword_2721D0, (void (*)(uint64_t))type metadata accessor for StoreBook.Origin);
}

uint64_t sub_178700(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_178748()
{
  return sub_178700(&qword_2721D8, (void (*)(uint64_t))type metadata accessor for StoreBook);
}

unint64_t sub_178794()
{
  unint64_t result = qword_2721E0;
  if (!qword_2721E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721E0);
  }
  return result;
}

unint64_t sub_1787EC()
{
  unint64_t result = qword_2721E8;
  if (!qword_2721E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721E8);
  }
  return result;
}

unint64_t sub_178844()
{
  unint64_t result = qword_2721F0;
  if (!qword_2721F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721F0);
  }
  return result;
}

unint64_t sub_17889C()
{
  unint64_t result = qword_2721F8;
  if (!qword_2721F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2721F8);
  }
  return result;
}

unint64_t sub_1788F4()
{
  unint64_t result = qword_272200;
  if (!qword_272200)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272200);
  }
  return result;
}

unint64_t sub_17894C()
{
  unint64_t result = qword_272208;
  if (!qword_272208)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272208);
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionMembershipInfo()
{
  return &type metadata for CollectionMembershipInfo;
}

uint64_t *initializeBufferWithCopyOfBuffer for StoreBook(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = type metadata accessor for StoreBook.Origin(0);
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_12124(&qword_26FE68);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_1FB0E0();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = v13;
      if (EnumCaseMultiPayload == 1)
      {
        if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v15 = sub_12124(&qword_26D638);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v14 + 16))(a1, a2, v12);
          (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v12);
        }
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v13 + 16))(a1, a2, v12);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v16 = a3[6];
    *(uint64_t *)((char *)a1 + a3[5]) = *(uint64_t *)((char *)a2 + a3[5]);
    uint64_t v17 = (char *)a1 + v16;
    uint64_t v18 = (char *)a2 + v16;
    *(void *)uint64_t v17 = *(void *)v18;
    v17[8] = v18[8];
    uint64_t v19 = a3[7];
    uint64_t v20 = a3[8];
    uint64_t v21 = (char *)a1 + v19;
    uint64_t v22 = (char *)a2 + v19;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v22;
    v21[16] = v22[16];
    *(uint64_t *)((char *)a1 + v20) = *(uint64_t *)((char *)a2 + v20);
    uint64_t v23 = a3[10];
    *(uint64_t *)((char *)a1 + a3[9]) = *(uint64_t *)((char *)a2 + a3[9]);
    uint64_t v24 = (char *)a1 + v23;
    uint64_t v25 = (char *)a2 + v23;
    *(_OWORD *)uint64_t v24 = *(_OWORD *)v25;
    v24[16] = v25[16];
    uint64_t v26 = a3[11];
    uint64_t v27 = (char *)a1 + v26;
    uint64_t v28 = (char *)a2 + v26;
    *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
    v27[16] = v28[16];
  }
  return a1;
}

uint64_t destroy for StoreBook(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for StoreBook.Origin(0);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 48))(a1, 1, v2);
  if (!result)
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1FB0E0();
    uint64_t v6 = *(void *)(v5 - 8);
    if (EnumCaseMultiPayload == 1)
    {
      uint64_t v10 = *(void *)(v5 - 8);
      uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5);
      if (result) {
        return result;
      }
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
      uint64_t v8 = a1;
      uint64_t v9 = v5;
    }
    else
    {
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
      uint64_t v8 = a1;
      uint64_t v9 = v5;
    }
    return v7(v8, v9);
  }
  return result;
}

char *initializeWithCopy for StoreBook(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_12124(&qword_26FE68);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_1FB0E0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = v11;
    if (EnumCaseMultiPayload == 1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v13 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v10);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 16))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v21 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  uint64_t v24 = a3[11];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  return a1;
}

char *assignWithCopy for StoreBook(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_1FB0E0();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = v13;
      if (EnumCaseMultiPayload == 1)
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v15 = sub_12124(&qword_26D638);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 16))(a1, a2, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v12);
        }
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 16))(a1, a2, v12);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v16 = sub_12124(&qword_26FE68);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
    sub_178604((uint64_t)a1);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_178604((uint64_t)a1);
    int v17 = swift_getEnumCaseMultiPayload();
    uint64_t v18 = sub_1FB0E0();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v19;
    if (v17 == 1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
      {
        uint64_t v21 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 16))(a1, a2, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 16))(a1, a2, v18);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v22 = a3[6];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  uint64_t v25 = *(void *)v24;
  v23[8] = v24[8];
  *(void *)uint64_t v23 = v25;
  uint64_t v26 = a3[7];
  uint64_t v27 = &a1[v26];
  uint64_t v28 = &a2[v26];
  long long v29 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(_OWORD *)uint64_t v27 = v29;
  *(void *)&a1[a3[8]] = *(void *)&a2[a3[8]];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v30 = a3[10];
  uint64_t v31 = &a1[v30];
  uint64_t v32 = &a2[v30];
  long long v33 = *(_OWORD *)v32;
  v31[16] = v32[16];
  *(_OWORD *)uint64_t v31 = v33;
  uint64_t v34 = a3[11];
  uint64_t v35 = &a1[v34];
  uint64_t v36 = &a2[v34];
  long long v37 = *(_OWORD *)v36;
  v35[16] = v36[16];
  *(_OWORD *)uint64_t v35 = v37;
  return a1;
}

char *initializeWithTake for StoreBook(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_12124(&qword_26FE68);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v10 = sub_1FB0E0();
    uint64_t v11 = *(void *)(v10 - 8);
    uint64_t v12 = v11;
    if (EnumCaseMultiPayload == 1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(a2, 1, v10))
      {
        uint64_t v13 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v13 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 32))(a1, a2, v10);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v12 + 56))(a1, 0, 1, v10);
      }
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v11 + 32))(a1, a2, v10);
    }
    swift_storeEnumTagMultiPayload();
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v14 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v15 = &a1[v14];
  uint64_t v16 = &a2[v14];
  *(void *)uint64_t v15 = *(void *)v16;
  v15[8] = v16[8];
  uint64_t v17 = a3[7];
  uint64_t v18 = a3[8];
  uint64_t v19 = &a1[v17];
  uint64_t v20 = &a2[v17];
  *(_OWORD *)uint64_t v19 = *(_OWORD *)v20;
  v19[16] = v20[16];
  *(void *)&a1[v18] = *(void *)&a2[v18];
  uint64_t v21 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v22 = &a1[v21];
  uint64_t v23 = &a2[v21];
  *(_OWORD *)uint64_t v22 = *(_OWORD *)v23;
  v22[16] = v23[16];
  uint64_t v24 = a3[11];
  uint64_t v25 = &a1[v24];
  uint64_t v26 = &a2[v24];
  *(_OWORD *)uint64_t v25 = *(_OWORD *)v26;
  v25[16] = v26[16];
  return a1;
}

char *assignWithTake for StoreBook(char *a1, char *a2, int *a3)
{
  uint64_t v6 = type metadata accessor for StoreBook.Origin(0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (v9)
  {
    if (!v10)
    {
      int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
      uint64_t v12 = sub_1FB0E0();
      uint64_t v13 = *(void *)(v12 - 8);
      uint64_t v14 = v13;
      if (EnumCaseMultiPayload == 1)
      {
        if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(a2, 1, v12))
        {
          uint64_t v15 = sub_12124(&qword_26D638);
          memcpy(a1, a2, *(void *)(*(void *)(v15 - 8) + 64));
        }
        else
        {
          (*(void (**)(char *, char *, uint64_t))(v14 + 32))(a1, a2, v12);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v14 + 56))(a1, 0, 1, v12);
        }
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(a1, a2, v12);
      }
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
      goto LABEL_16;
    }
LABEL_8:
    uint64_t v16 = sub_12124(&qword_26FE68);
    memcpy(a1, a2, *(void *)(*(void *)(v16 - 8) + 64));
    goto LABEL_16;
  }
  if (v10)
  {
    sub_178604((uint64_t)a1);
    goto LABEL_8;
  }
  if (a1 != a2)
  {
    sub_178604((uint64_t)a1);
    int v17 = swift_getEnumCaseMultiPayload();
    uint64_t v18 = sub_1FB0E0();
    uint64_t v19 = *(void *)(v18 - 8);
    uint64_t v20 = v19;
    if (v17 == 1)
    {
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v19 + 48))(a2, 1, v18))
      {
        uint64_t v21 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v21 - 8) + 64));
      }
      else
      {
        (*(void (**)(char *, char *, uint64_t))(v20 + 32))(a1, a2, v18);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v20 + 56))(a1, 0, 1, v18);
      }
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v19 + 32))(a1, a2, v18);
      swift_storeEnumTagMultiPayload();
    }
  }
LABEL_16:
  uint64_t v22 = a3[6];
  *(void *)&a1[a3[5]] = *(void *)&a2[a3[5]];
  uint64_t v23 = &a1[v22];
  uint64_t v24 = &a2[v22];
  *(void *)uint64_t v23 = *(void *)v24;
  v23[8] = v24[8];
  uint64_t v25 = a3[7];
  uint64_t v26 = a3[8];
  uint64_t v27 = &a1[v25];
  uint64_t v28 = &a2[v25];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)v28;
  v27[16] = v28[16];
  *(void *)&a1[v26] = *(void *)&a2[v26];
  uint64_t v29 = a3[10];
  *(void *)&a1[a3[9]] = *(void *)&a2[a3[9]];
  uint64_t v30 = &a1[v29];
  uint64_t v31 = &a2[v29];
  *(_OWORD *)uint64_t v30 = *(_OWORD *)v31;
  v30[16] = v31[16];
  uint64_t v32 = a3[11];
  long long v33 = &a1[v32];
  uint64_t v34 = &a2[v32];
  *(_OWORD *)long long v33 = *(_OWORD *)v34;
  v33[16] = v34[16];
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreBook(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_179BA0);
}

uint64_t sub_179BA0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26FE68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for StoreBook(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_179C24);
}

uint64_t sub_179C24(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26FE68);
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

void sub_179C98()
{
  sub_17A694(319, (unint64_t *)&unk_272278, (void (*)(uint64_t))type metadata accessor for StoreBook.Origin);
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for StoreBook.Origin(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v7 = sub_1FB0E0();
    uint64_t v8 = *(void *)(v7 - 8);
    uint64_t v9 = v8;
    if (EnumCaseMultiPayload == 1)
    {
      if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
      {
        uint64_t v10 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v10 - 8) + 64));
      }
      else
      {
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v9 + 16))(a1, a2, v7);
        (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v9 + 56))(a1, 0, 1, v7);
      }
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for StoreBook.Origin(uint64_t a1)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v3 = sub_1FB0E0();
  uint64_t v4 = *(void *)(v3 - 8);
  if (EnumCaseMultiPayload != 1)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v4 + 8);
    uint64_t v7 = a1;
    uint64_t v8 = v3;
    return v6(v7, v8);
  }
  uint64_t v9 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(v9 + 8);
    uint64_t v7 = a1;
    uint64_t v8 = v3;
    return v6(v7, v8);
  }
  return result;
}

void *initializeWithCopy for StoreBook.Origin(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1FB0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  if (EnumCaseMultiPayload == 1)
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      uint64_t v8 = sub_12124(&qword_26D638);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v5);
    }
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithCopy for StoreBook.Origin(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_178604((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1FB0E0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    if (EnumCaseMultiPayload == 1)
    {
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        uint64_t v8 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 16))(a1, a2, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v5);
      }
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void *initializeWithTake for StoreBook.Origin(void *a1, const void *a2)
{
  int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
  uint64_t v5 = sub_1FB0E0();
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = v6;
  if (EnumCaseMultiPayload == 1)
  {
    if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
    {
      uint64_t v8 = sub_12124(&qword_26D638);
      memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v5);
    }
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

void *assignWithTake for StoreBook.Origin(void *a1, const void *a2)
{
  if (a1 != a2)
  {
    sub_178604((uint64_t)a1);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v5 = sub_1FB0E0();
    uint64_t v6 = *(void *)(v5 - 8);
    uint64_t v7 = v6;
    if (EnumCaseMultiPayload == 1)
    {
      if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
      {
        uint64_t v8 = sub_12124(&qword_26D638);
        memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
      }
      else
      {
        (*(void (**)(void *, const void *, uint64_t))(v7 + 32))(a1, a2, v5);
        (*(void (**)(void *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v5);
      }
    }
    else
    {
      (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

void sub_17A5B4()
{
  sub_1FB0E0();
  if (v0 <= 0x3F)
  {
    sub_17A694(319, (unint64_t *)&qword_272340, (void (*)(uint64_t))&type metadata accessor for Date);
    if (v1 <= 0x3F) {
      swift_initEnumMetadataMultiPayload();
    }
  }
}

void sub_17A694(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1FBEB0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

ValueMetadata *type metadata accessor for StoreBookCollectionOptions()
{
  return &type metadata for StoreBookCollectionOptions;
}

uint64_t destroy for StoreBookForDeduplication()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for StoreBookForDeduplication(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for StoreBookForDeduplication(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for StoreBookForDeduplication(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for StoreBookForDeduplication()
{
  return &type metadata for StoreBookForDeduplication;
}

__n128 initializeWithCopy for NextInSeriesProcessorMetadata(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_WORD *)(a1 + 32) = *(_WORD *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t getEnumTagSinglePayload for NextInSeriesProcessorMetadata(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 34)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 33);
  BOOL v4 = v3 >= 2;
  int v5 = (v3 + 2147483646) & 0x7FFFFFFF;
  if (!v4) {
    int v5 = -1;
  }
  return (v5 + 1);
}

uint64_t storeEnumTagSinglePayload for NextInSeriesProcessorMetadata(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(_WORD *)(result + 32) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 34) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 33) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for NextInSeriesProcessorMetadata()
{
  return &type metadata for NextInSeriesProcessorMetadata;
}

uint64_t dispatch thunk of StoreBooksServiceType.fetchStoreBooks(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of StoreBooksServiceType.earliestStorePurchaseTimestamp()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 16) + **(int **)(a3 + 16));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_5958;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of StoreBooksServiceType.fetchStoreBooksForDeduplication()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 24) + **(int **)(a2 + 24));
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int v5 = v2;
  v5[1] = sub_9E870;
  return v7(a1, a2);
}

uint64_t dispatch thunk of StoreBooksServiceType.fetchHiddenPurchaseIDs()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 32) + **(int **)(a2 + 32));
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int v5 = v2;
  v5[1] = sub_9E870;
  return v7(a1, a2);
}

uint64_t dispatch thunk of StoreBooksServiceType.fetchNextInSeriesProcessorMetadata(storeIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 40) + **(int **)(a3 + 40));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E870;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of StoreBooksServiceType.fetchNextInSeriesProcessorMetadata(seriesIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 48) + **(int **)(a3 + 48));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_9E870;
  return v9(a1, a2, a3);
}

unsigned char *storeEnumTagSinglePayload for CollectionMembershipInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17AFD4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionMembershipInfo.CodingKeys()
{
  return &type metadata for CollectionMembershipInfo.CodingKeys;
}

unint64_t sub_17B010()
{
  unint64_t result = qword_2723A0;
  if (!qword_2723A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2723A0);
  }
  return result;
}

unint64_t sub_17B068()
{
  unint64_t result = qword_2723A8;
  if (!qword_2723A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2723A8);
  }
  return result;
}

unint64_t sub_17B0C0()
{
  unint64_t result = qword_2723B0;
  if (!qword_2723B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2723B0);
  }
  return result;
}

uint64_t sub_17B114(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7865646E69 && a2 == 0xE500000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746E756F63 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

BooksPersonalization::Methodology_optional __swiftcall Methodology.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  int v3 = v1;
  v4._rawValue = &off_256F38;
  v8._object = object;
  Swift::Int v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  if (v5 == 1) {
    char v7 = 1;
  }
  else {
    char v7 = 2;
  }
  if (!v5) {
    char v7 = 0;
  }
  *int v3 = v7;
  return result;
}

_UNKNOWN **static Methodology.allCases.getter()
{
  return &off_256F88;
}

unint64_t sub_17B270()
{
  unint64_t result = qword_2723D0;
  if (!qword_2723D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2723D0);
  }
  return result;
}

BooksPersonalization::Methodology_optional sub_17B2C4(Swift::String *a1)
{
  return Methodology.init(rawValue:)(*a1);
}

uint64_t sub_17B2D0()
{
  return sub_1FBA60();
}

uint64_t sub_17B330()
{
  return sub_1FBA40();
}

unint64_t sub_17B384()
{
  unint64_t result = qword_2723D8;
  if (!qword_2723D8)
  {
    sub_121C4(&qword_2723E0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2723D8);
  }
  return result;
}

void sub_17B3E0(void *a1@<X8>)
{
  *a1 = &off_256FB0;
}

uint64_t sub_17B3F0(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = sub_17B5C4();

  return RawRepresentable<>.codingKey.getter(a1, a2, v4);
}

uint64_t sub_17B444(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v10 = sub_17B5C4();

  return RawRepresentable<>.init<A>(codingKey:)(a1, a4, a2, a5, v10, a3);
}

unsigned char *storeEnumTagSinglePayload for Methodology(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17B58CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Methodology()
{
  return &type metadata for Methodology;
}

unint64_t sub_17B5C4()
{
  unint64_t result = qword_2723E8;
  if (!qword_2723E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2723E8);
  }
  return result;
}

uint64_t sub_17B618()
{
  return sub_17B92C(&qword_2723F0, (void (*)(uint64_t))type metadata accessor for EventAggregationWork);
}

uint64_t type metadata accessor for EventAggregationWork()
{
  uint64_t result = qword_272468;
  if (!qword_272468) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_17B6AC()
{
  return sub_17B92C(&qword_2723F8, (void (*)(uint64_t))type metadata accessor for EventAggregationWork);
}

uint64_t sub_17B6F4()
{
  return sub_17B92C((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

unint64_t sub_17B740()
{
  unint64_t result = qword_272400;
  if (!qword_272400)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272400);
  }
  return result;
}

uint64_t sub_17B794(uint64_t a1)
{
  sub_A404C(a1 + 48, (uint64_t)v4);
  sub_A404C((uint64_t)v4, (uint64_t)v5);
  if (sub_A40B4((uint64_t)v5) == 1)
  {
    char v1 = 0;
  }
  else
  {
    if (*(void *)(v6 + 16))
    {
      type metadata accessor for EventAggregationWork();
      sub_1FB660();
      swift_allocObject();
      swift_bridgeObjectRetain();
      swift_retain();
      return sub_1FB650();
    }
    char v1 = 1;
  }
  sub_17B974();
  swift_allocError();
  *int v3 = v1;
  return swift_willThrow();
}

unint64_t sub_17B87C()
{
  return 0xD000000000000011;
}

uint64_t sub_17B898@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_17B794(a1);
  if (!v2) {
    *a2 = result;
  }
  return result;
}

uint64_t sub_17B8C4@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  *a2 = a1;
  return swift_retain();
}

uint64_t sub_17B8E4()
{
  return sub_17B92C(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_17B92C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_17B974()
{
  unint64_t result = qword_272408;
  if (!qword_272408)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272408);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for EventAggregationWork.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x17BA94);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventAggregationWork.Errors()
{
  return &type metadata for EventAggregationWork.Errors;
}

ValueMetadata *type metadata accessor for EventAggregationWork.Context()
{
  return &type metadata for EventAggregationWork.Context;
}

uint64_t *sub_17BADC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v8 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v8 + ((v5 + 16) & ~(unint64_t)v5));
  }
  else
  {
    uint64_t v7 = sub_1FB110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 20)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 20));
  }
  swift_retain();
  return a1;
}

uint64_t sub_17BBA8(uint64_t a1)
{
  uint64_t v2 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);

  return swift_release();
}

uint64_t sub_17BC1C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  return a1;
}

uint64_t sub_17BC9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_retain();
  swift_release();
  return a1;
}

uint64_t sub_17BD28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + *(int *)(a3 + 20)) = *(void *)(a2 + *(int *)(a3 + 20));
  swift_release();
  return a1;
}

uint64_t sub_17BDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_17BDC0);
}

uint64_t sub_17BDC0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_17BE80(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_17BE94);
}

uint64_t sub_17BE94(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FB110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_17BF50()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_17BFE8(uint64_t a1)
{
  uint64_t result = sub_17B92C(&qword_2723F0, (void (*)(uint64_t))type metadata accessor for EventAggregationWork);
  *(void *)(a1 + 8) = result;
  return result;
}

unint64_t sub_17C044()
{
  unint64_t result = qword_2724A0;
  if (!qword_2724A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2724A0);
  }
  return result;
}

uint64_t InternalGenreRecommendationResponse.configuration.getter@<X0>(void *a1@<X8>)
{
  int v3 = (const void *)(v1 + 8);
  memcpy(v5, v3, sizeof(v5));
  memcpy(a1, v3, 0x460uLL);
  return sub_A1310((uint64_t)v5);
}

uint64_t destroy for InternalGenreRecommendationResponse(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[114])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[117])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[125])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1[135];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for InternalGenreRecommendationResponse(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(_WORD *)(a1 + 40) = *(_WORD *)(a2 + 40);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(_DWORD *)(a1 + 43) = *(_DWORD *)(a2 + 43);
  *(_WORD *)(a1 + 47) = *(_WORD *)(a2 + 47);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v4 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v4;
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v5;
  long long v6 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v6;
  long long v7 = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 160) = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 176) = v7;
  long long v8 = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 192) = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 208) = v8;
  long long v9 = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 224) = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 240) = v9;
  long long v10 = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 256) = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 272) = v10;
  long long v11 = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 304) = v11;
  long long v12 = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 320) = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 336) = v12;
  long long v13 = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 352) = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 368) = v13;
  long long v14 = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 400) = v14;
  uint64_t v15 = *(void *)(a2 + 424);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = v15;
  *(_OWORD *)(a1 + 432) = *(_OWORD *)(a2 + 432);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(unsigned char *)(a1 + 457) = *(unsigned char *)(a2 + 457);
  *(unsigned char *)(a1 + 458) = *(unsigned char *)(a2 + 458);
  uint64_t v16 = *(void *)(a2 + 472);
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  *(void *)(a1 + 472) = v16;
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(_OWORD *)(a1 + 528) = *(_OWORD *)(a2 + 528);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(unsigned char *)(a1 + 568) = *(unsigned char *)(a2 + 568);
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = *(unsigned char *)(a2 + 632);
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  *(unsigned char *)(a1 + 648) = *(unsigned char *)(a2 + 648);
  *(unsigned char *)(a1 + 649) = *(unsigned char *)(a2 + 649);
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  *(unsigned char *)(a1 + 664) = *(unsigned char *)(a2 + 664);
  *(unsigned char *)(a1 + 665) = *(unsigned char *)(a2 + 665);
  long long v17 = *(_OWORD *)(a2 + 672);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(_OWORD *)(a1 + 672) = v17;
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  uint64_t v36 = *(void *)(a2 + 912);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v36)
  {
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    long long v18 = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 864) = v18;
    long long v19 = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 896) = v19;
    long long v20 = *(_OWORD *)(a2 + 800);
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 800) = v20;
    long long v21 = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
    *(_OWORD *)(a1 + 832) = v21;
    long long v22 = *(_OWORD *)(a2 + 768);
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
    *(_OWORD *)(a1 + 768) = v22;
    *(void *)(a1 + 912) = v36;
    *(void *)(a1 + 920) = *(void *)(a2 + 920);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v23 = *(void *)(a2 + 936);
    if (v23) {
      goto LABEL_3;
    }
LABEL_6:
    long long v30 = *(_OWORD *)(a2 + 944);
    *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
    *(_OWORD *)(a1 + 944) = v30;
    *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
    uint64_t v24 = *(void *)(a2 + 1000);
    if (v24) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  long long v25 = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 888) = v25;
  *(_OWORD *)(a1 + 904) = *(_OWORD *)(a2 + 904);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  long long v26 = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = v26;
  long long v27 = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 856) = v27;
  long long v28 = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 760) = v28;
  long long v29 = *(_OWORD *)(a2 + 792);
  *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 792) = v29;
  uint64_t v23 = *(void *)(a2 + 936);
  if (!v23) {
    goto LABEL_6;
  }
LABEL_3:
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  *(void *)(a1 + 936) = v23;
  *(void *)(a1 + 944) = *(void *)(a2 + 944);
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v24 = *(void *)(a2 + 1000);
  if (v24)
  {
LABEL_4:
    *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    *(void *)(a1 + 1000) = v24;
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
LABEL_7:
  long long v31 = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 992) = v31;
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
LABEL_8:
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  uint64_t v32 = *(void *)(a2 + 1080);
  swift_bridgeObjectRetain();
  if (v32)
  {
    *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
    *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
    *(void *)(a1 + 1080) = v32;
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v33 = *(_OWORD *)(a2 + 1104);
    *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1104) = v33;
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    long long v34 = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
    *(_OWORD *)(a1 + 1072) = v34;
  }
  return a1;
}

uint64_t assignWithCopy for InternalGenreRecommendationResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 456);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(unsigned char *)(a1 + 17) = *(unsigned char *)(a2 + 17);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 42) = *(unsigned char *)(a2 + 42);
  *(unsigned char *)(a1 + 43) = *(unsigned char *)(a2 + 43);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(unsigned char *)(a1 + 45) = *(unsigned char *)(a2 + 45);
  *(unsigned char *)(a1 + 46) = *(unsigned char *)(a2 + 46);
  *(unsigned char *)(a1 + 47) = *(unsigned char *)(a2 + 47);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 57) = *(unsigned char *)(a2 + 57);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(unsigned char *)(a1 + 457) = v4[1];
  *(unsigned char *)(a1 + 458) = v4[2];
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(void *)(a1 + 496) = *(void *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 568) = v4[112];
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = v4[176];
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 648) = v4[192];
  *(unsigned char *)(a1 + 649) = v4[193];
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 664) = v4[208];
  *(unsigned char *)(a1 + 665) = v4[209];
  *(unsigned char *)(a1 + 672) = v4[216];
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  long long v5 = (_OWORD *)(a1 + 744);
  long long v6 = (long long *)(a2 + 744);
  uint64_t v7 = *(void *)(a2 + 912);
  if (*(void *)(a1 + 912))
  {
    if (v7)
    {
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      *(void *)(a1 + 856) = *(void *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(void *)(a1 + 872) = *(void *)(a2 + 872);
      *(void *)(a1 + 880) = *(void *)(a2 + 880);
      *(void *)(a1 + 888) = *(void *)(a2 + 888);
      *(void *)(a1 + 896) = *(void *)(a2 + 896);
      *(void *)(a1 + 904) = *(void *)(a2 + 904);
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF00(a1 + 744);
      long long v14 = *(_OWORD *)(a2 + 792);
      long long v16 = *v6;
      long long v15 = *(_OWORD *)(a2 + 760);
      *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
      *(_OWORD *)(a1 + 792) = v14;
      *long long v5 = v16;
      *(_OWORD *)(a1 + 760) = v15;
      long long v17 = *(_OWORD *)(a2 + 856);
      long long v19 = *(_OWORD *)(a2 + 808);
      long long v18 = *(_OWORD *)(a2 + 824);
      *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
      *(_OWORD *)(a1 + 856) = v17;
      *(_OWORD *)(a1 + 808) = v19;
      *(_OWORD *)(a1 + 824) = v18;
      long long v21 = *(_OWORD *)(a2 + 888);
      long long v20 = *(_OWORD *)(a2 + 904);
      long long v22 = *(_OWORD *)(a2 + 872);
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      *(_OWORD *)(a1 + 888) = v21;
      *(_OWORD *)(a1 + 904) = v20;
      *(_OWORD *)(a1 + 872) = v22;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 744) = *(void *)(a2 + 744);
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(_OWORD *)(a1 + 768) = *(_OWORD *)(a2 + 768);
    long long v8 = *(_OWORD *)(a2 + 784);
    long long v9 = *(_OWORD *)(a2 + 800);
    long long v10 = *(_OWORD *)(a2 + 832);
    *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
    *(_OWORD *)(a1 + 832) = v10;
    *(_OWORD *)(a1 + 784) = v8;
    *(_OWORD *)(a1 + 800) = v9;
    long long v11 = *(_OWORD *)(a2 + 848);
    long long v12 = *(_OWORD *)(a2 + 864);
    long long v13 = *(_OWORD *)(a2 + 896);
    *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
    *(_OWORD *)(a1 + 896) = v13;
    *(_OWORD *)(a1 + 848) = v11;
    *(_OWORD *)(a1 + 864) = v12;
    *(void *)(a1 + 912) = *(void *)(a2 + 912);
    *(void *)(a1 + 920) = *(void *)(a2 + 920);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v6;
    long long v24 = *(_OWORD *)(a2 + 760);
    long long v25 = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(_OWORD *)(a1 + 792) = v25;
    *long long v5 = v23;
    *(_OWORD *)(a1 + 760) = v24;
    long long v26 = *(_OWORD *)(a2 + 808);
    long long v27 = *(_OWORD *)(a2 + 824);
    long long v28 = *(_OWORD *)(a2 + 856);
    *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 856) = v28;
    *(_OWORD *)(a1 + 808) = v26;
    *(_OWORD *)(a1 + 824) = v27;
    long long v29 = *(_OWORD *)(a2 + 872);
    long long v30 = *(_OWORD *)(a2 + 888);
    long long v31 = *(_OWORD *)(a2 + 904);
    *(void *)(a1 + 920) = *(void *)(a2 + 920);
    *(_OWORD *)(a1 + 888) = v30;
    *(_OWORD *)(a1 + 904) = v31;
    *(_OWORD *)(a1 + 872) = v29;
  }
  uint64_t v32 = (_OWORD *)(a1 + 928);
  long long v33 = (_OWORD *)(a2 + 928);
  uint64_t v34 = *(void *)(a2 + 936);
  if (*(void *)(a1 + 936))
  {
    if (v34)
    {
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF54(a1 + 928);
      long long v36 = *(_OWORD *)(a2 + 944);
      long long v35 = *(_OWORD *)(a2 + 960);
      *uint64_t v32 = *v33;
      *(_OWORD *)(a1 + 944) = v36;
      *(_OWORD *)(a1 + 960) = v35;
    }
  }
  else if (v34)
  {
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    *(void *)(a1 + 936) = *(void *)(a2 + 936);
    *(void *)(a1 + 944) = *(void *)(a2 + 944);
    *(void *)(a1 + 952) = *(void *)(a2 + 952);
    *(void *)(a1 + 960) = *(void *)(a2 + 960);
    *(void *)(a1 + 968) = *(void *)(a2 + 968);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *v33;
    long long v38 = *(_OWORD *)(a2 + 960);
    *(_OWORD *)(a1 + 944) = *(_OWORD *)(a2 + 944);
    *(_OWORD *)(a1 + 960) = v38;
    *uint64_t v32 = v37;
  }
  uint64_t v39 = (_OWORD *)(a1 + 976);
  uint64_t v40 = (_OWORD *)(a2 + 976);
  uint64_t v41 = *(void *)(a2 + 1000);
  if (*(void *)(a1 + 1000))
  {
    if (v41)
    {
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EFA8(a1 + 976);
      long long v43 = *(_OWORD *)(a2 + 992);
      long long v42 = *(_OWORD *)(a2 + 1008);
      *uint64_t v39 = *v40;
      *(_OWORD *)(a1 + 992) = v43;
      *(_OWORD *)(a1 + 1008) = v42;
    }
  }
  else if (v41)
  {
    *(void *)(a1 + 976) = *(void *)(a2 + 976);
    *(void *)(a1 + 984) = *(void *)(a2 + 984);
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *v40;
    long long v45 = *(_OWORD *)(a2 + 1008);
    *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
    *(_OWORD *)(a1 + 1008) = v45;
    *uint64_t v39 = v44;
  }
  *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = (_OWORD *)(a1 + 1056);
  uint64_t v47 = (_OWORD *)(a2 + 1056);
  uint64_t v48 = *(void *)(a2 + 1080);
  if (*(void *)(a1 + 1080))
  {
    if (v48)
    {
      *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
      *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
      *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
      *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
      *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
      *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    }
    else
    {
      sub_8EFFC(a1 + 1056);
      *uint64_t v46 = *v47;
      long long v50 = *(_OWORD *)(a2 + 1088);
      long long v49 = *(_OWORD *)(a2 + 1104);
      long long v51 = *(_OWORD *)(a2 + 1072);
      *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
      *(_OWORD *)(a1 + 1088) = v50;
      *(_OWORD *)(a1 + 1104) = v49;
      *(_OWORD *)(a1 + 1072) = v51;
    }
  }
  else if (v48)
  {
    *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
    *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
    *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
    *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v46 = *v47;
    long long v52 = *(_OWORD *)(a2 + 1072);
    long long v53 = *(_OWORD *)(a2 + 1088);
    long long v54 = *(_OWORD *)(a2 + 1104);
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    *(_OWORD *)(a1 + 1088) = v53;
    *(_OWORD *)(a1 + 1104) = v54;
    *(_OWORD *)(a1 + 1072) = v52;
  }
  return a1;
}

void *initializeWithTake for InternalGenreRecommendationResponse(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x468uLL);
}

uint64_t assignWithTake for InternalGenreRecommendationResponse(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 456);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(_WORD *)(a1 + 16) = *(_WORD *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_WORD *)(a1 + 56) = *(_WORD *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  long long v6 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 96) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 112) = v6;
  long long v7 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v7;
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  long long v8 = *(_OWORD *)(a2 + 224);
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(_OWORD *)(a1 + 224) = v8;
  long long v9 = *(_OWORD *)(a2 + 256);
  *(_OWORD *)(a1 + 240) = *(_OWORD *)(a2 + 240);
  *(_OWORD *)(a1 + 256) = v9;
  long long v10 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v10;
  long long v11 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v11;
  long long v12 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v12;
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(_OWORD *)(a1 + 384) = *(_OWORD *)(a2 + 384);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)&long long v12 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v12;
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  uint64_t v13 = *(void *)(a2 + 448);
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = v13;
  *(unsigned char *)(a1 + 456) = *(unsigned char *)(a2 + 456);
  *(unsigned char *)(a1 + 457) = v4[1];
  *(unsigned char *)(a1 + 458) = v4[2];
  *(void *)(a1 + 464) = *(void *)(a2 + 464);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 488) = *(unsigned char *)(a2 + 488);
  *(_OWORD *)(a1 + 496) = *(_OWORD *)(a2 + 496);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 568) = v4[112];
  *(void *)(a1 + 576) = *(void *)(a2 + 576);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(unsigned char *)(a1 + 632) = v4[176];
  *(void *)(a1 + 640) = *(void *)(a2 + 640);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 648) = v4[192];
  *(unsigned char *)(a1 + 649) = v4[193];
  *(void *)(a1 + 656) = *(void *)(a2 + 656);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 664) = v4[208];
  *(unsigned char *)(a1 + 665) = v4[209];
  *(unsigned char *)(a1 + 672) = v4[216];
  *(void *)(a1 + 680) = *(void *)(a2 + 680);
  *(_OWORD *)(a1 + 688) = *(_OWORD *)(a2 + 688);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  if (*(void *)(a1 + 912))
  {
    uint64_t v14 = *(void *)(a2 + 912);
    if (v14)
    {
      *(void *)(a1 + 744) = *(void *)(a2 + 744);
      long long v15 = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
      *(_OWORD *)(a1 + 768) = v15;
      long long v16 = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 800) = v16;
      long long v17 = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
      *(_OWORD *)(a1 + 832) = v17;
      long long v18 = *(_OWORD *)(a2 + 864);
      *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 864) = v18;
      long long v19 = *(_OWORD *)(a2 + 896);
      *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
      *(_OWORD *)(a1 + 896) = v19;
      *(void *)(a1 + 912) = v14;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_8EF00(a1 + 744);
  }
  long long v20 = *(_OWORD *)(a2 + 888);
  *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
  *(_OWORD *)(a1 + 888) = v20;
  *(_OWORD *)(a1 + 904) = *(_OWORD *)(a2 + 904);
  *(void *)(a1 + 920) = *(void *)(a2 + 920);
  long long v21 = *(_OWORD *)(a2 + 824);
  *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
  *(_OWORD *)(a1 + 824) = v21;
  long long v22 = *(_OWORD *)(a2 + 856);
  *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
  *(_OWORD *)(a1 + 856) = v22;
  long long v23 = *(_OWORD *)(a2 + 760);
  *(_OWORD *)(a1 + 744) = *(_OWORD *)(a2 + 744);
  *(_OWORD *)(a1 + 760) = v23;
  long long v24 = *(_OWORD *)(a2 + 792);
  *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
  *(_OWORD *)(a1 + 792) = v24;
LABEL_6:
  if (*(void *)(a1 + 936))
  {
    uint64_t v25 = *(void *)(a2 + 936);
    if (v25)
    {
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      *(void *)(a1 + 936) = v25;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_8EF54(a1 + 928);
  }
  long long v26 = *(_OWORD *)(a2 + 944);
  *(_OWORD *)(a1 + 928) = *(_OWORD *)(a2 + 928);
  *(_OWORD *)(a1 + 944) = v26;
  *(_OWORD *)(a1 + 960) = *(_OWORD *)(a2 + 960);
LABEL_11:
  if (*(void *)(a1 + 1000))
  {
    uint64_t v27 = *(void *)(a2 + 1000);
    if (v27)
    {
      *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      *(void *)(a1 + 1000) = v27;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_8EFA8(a1 + 976);
  }
  long long v28 = *(_OWORD *)(a2 + 992);
  *(_OWORD *)(a1 + 976) = *(_OWORD *)(a2 + 976);
  *(_OWORD *)(a1 + 992) = v28;
  *(_OWORD *)(a1 + 1008) = *(_OWORD *)(a2 + 1008);
LABEL_16:
  *(_OWORD *)(a1 + 1024) = *(_OWORD *)(a2 + 1024);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 1080))
  {
LABEL_20:
    long long v30 = *(_OWORD *)(a2 + 1104);
    *(_OWORD *)(a1 + 1088) = *(_OWORD *)(a2 + 1088);
    *(_OWORD *)(a1 + 1104) = v30;
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    long long v31 = *(_OWORD *)(a2 + 1072);
    *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
    *(_OWORD *)(a1 + 1072) = v31;
    return a1;
  }
  uint64_t v29 = *(void *)(a2 + 1080);
  if (!v29)
  {
    sub_8EFFC(a1 + 1056);
    goto LABEL_20;
  }
  *(_OWORD *)(a1 + 1056) = *(_OWORD *)(a2 + 1056);
  *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
  *(void *)(a1 + 1080) = v29;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  return a1;
}

uint64_t getEnumTagSinglePayload for InternalGenreRecommendationResponse(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 1128)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for InternalGenreRecommendationResponse(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1128) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1128) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalGenreRecommendationResponse()
{
  return &type metadata for InternalGenreRecommendationResponse;
}

uint64_t dispatch thunk of InternalGenreRecommendationServiceType.fetchRecommendedGenres(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_5958;
  return v11(a1, a2, a3, a4);
}

ValueMetadata *type metadata accessor for BooksYouMightLikeOptions()
{
  return &type metadata for BooksYouMightLikeOptions;
}

uint64_t dispatch thunk of BooksYouMightLikeServiceType.fetchBooks(with:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  long long v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  void *v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t destroy for EventFeatures()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for EventFeatures(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for EventFeatures(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(_DWORD *)(a1 + 24) = *(_DWORD *)(a2 + 24);
  *(_DWORD *)(a1 + 28) = *(_DWORD *)(a2 + 28);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for EventFeatures(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 16) = *(_DWORD *)(a2 + 16);
  *(_DWORD *)(a1 + 20) = *(_DWORD *)(a2 + 20);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 48) = *(_DWORD *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for EventFeatures(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for EventFeatures(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for EventFeatures()
{
  return &type metadata for EventFeatures;
}

uint64_t ClientConverter.init(configuration:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v69 = a2;
  uint64_t v3 = sub_1FABE0();
  uint64_t v72 = *(void *)(v3 - 8);
  uint64_t v73 = v3;
  __chkstk_darwin(v3);
  uint64_t v71 = (uint64_t *)((char *)&v53 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v80 = sub_1FAC90();
  uint64_t v70 = *(void *)(v80 - 8);
  __chkstk_darwin(v80);
  uint64_t v68 = (uint64_t *)((char *)&v53 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v67 = sub_1FAC70();
  uint64_t v6 = *(void *)(v67 - 8);
  uint64_t v7 = __chkstk_darwin(v67);
  uint64_t v79 = (char *)&v53 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v77 = (char *)&v53 - v9;
  uint64_t v10 = a1[1];
  uint64_t v11 = a1[2];
  uint64_t v12 = a1[3];
  uint64_t v81 = *a1;
  if (!v81)
  {
    id v17 = objc_allocWithZone((Class)NSISO8601DateFormatter);
    sub_52948(0);
    sub_52948(v11);
    sub_52948(0);
    sub_52948(v11);
    sub_52948(0);
    sub_52948(v11);
    id v18 = [v17 init];
    uint64_t v14 = swift_allocObject();
    *(void *)(v14 + 16) = v18;
    char v83 = sub_529A0;
    if (v11) {
      goto LABEL_3;
    }
LABEL_5:
    uint64_t v19 = v81;
    sub_52948(v81);
    sub_52958(v19);
    sub_52958(0);
    id v20 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
    uint64_t v16 = swift_allocObject();
    *(void *)(v16 + 16) = v20;
    char v84 = sub_529BC;
    goto LABEL_6;
  }
  uint64_t v13 = v81;
  sub_52948(v81);
  sub_52948(v11);
  sub_52948(v13);
  sub_52948(v11);
  sub_52948(v13);
  sub_52948(v11);
  char v83 = (uint64_t (*)(uint64_t))v13;
  uint64_t v14 = v10;
  if (!v11) {
    goto LABEL_5;
  }
LABEL_3:
  uint64_t v15 = v81;
  sub_52948(v81);
  uint64_t v16 = v12;
  sub_52948(v11);
  sub_52958(v15);
  sub_52958(v11);
  char v84 = (uint64_t (*)@<X0>(uint64_t@<X8>))v11;
LABEL_6:
  uint64_t v78 = sub_1FACE0();
  uint64_t v21 = sub_12124(&qword_2724B8);
  uint64_t v22 = *(void *)(v6 + 72);
  uint64_t v23 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v65 = ((v23 + 32) & ~v23) + 2 * v22;
  uint64_t v66 = v21;
  uint64_t v62 = (v23 + 32) & ~v23;
  uint64_t v61 = v22;
  uint64_t v64 = v23 | 7;
  uint64_t v24 = swift_allocObject();
  long long v63 = xmmword_2055D0;
  *(_OWORD *)(v24 + 16) = xmmword_2055D0;
  uint64_t v82 = v6;
  uint64_t v25 = v81;
  sub_52948(v81);
  uint64_t v26 = v12;
  sub_52948(v11);
  swift_retain();
  swift_retain();
  uint64_t v27 = v25;
  uint64_t v53 = v10;
  sub_52948(v25);
  sub_52948(v11);
  swift_retain();
  swift_retain();
  sub_52948(v25);
  sub_52948(v11);
  uint64_t v74 = v14;
  swift_retain();
  uint64_t v75 = v16;
  swift_retain();
  sub_1FAC40();
  sub_1FAC50();
  uint64_t v85 = v24;
  uint64_t v59 = sub_184984(&qword_2724C0, (void (*)(uint64_t))&type metadata accessor for JSONEncoder.OutputFormatting);
  uint64_t v58 = sub_12124(&qword_2724C8);
  uint64_t v60 = sub_52CC0(&qword_2724D0, &qword_2724C8);
  long long v28 = v77;
  uint64_t v29 = v67;
  sub_1FBF60();
  uint64_t v76 = sub_1FACC0();
  uint64_t v30 = v82;
  uint64_t v56 = *(void (**)(char *, char *, uint64_t))(v82 + 16);
  uint64_t v57 = v82 + 16;
  v56(v79, v28, v29);
  swift_retain();
  sub_1FAC80();
  long long v31 = (void *)swift_allocObject();
  uint64_t v32 = v27;
  uint64_t v33 = v53;
  v31[2] = v27;
  v31[3] = v33;
  v31[4] = v11;
  v31[5] = v26;
  v31[6] = v83;
  v31[7] = v14;
  v31[8] = v84;
  v31[9] = v16;
  uint64_t v34 = v68;
  *uint64_t v68 = sub_52B04;
  v34[1] = v31;
  unsigned int v55 = enum case for JSONEncoder.DateEncodingStrategy.custom(_:);
  uint64_t v35 = v26;
  uint64_t v36 = v32;
  uint64_t v70 = *(void *)(v70 + 104);
  ((void (*)(void *))v70)(v34);
  sub_1FACA0();
  swift_release();
  long long v37 = *(void (**)(char *, uint64_t))(v30 + 8);
  uint64_t v82 = v30 + 8;
  long long v54 = v37;
  v37(v28, v29);
  sub_52948(v36);
  sub_52948(v11);
  sub_52958(v11);
  sub_52958(v36);
  uint64_t v38 = swift_allocObject();
  *(_OWORD *)(v38 + 16) = v63;
  sub_1FAC40();
  sub_1FAC60();
  uint64_t v85 = v38;
  sub_1FBF60();
  uint64_t v39 = sub_1FACC0();
  v56(v79, v28, v29);
  swift_retain();
  sub_1FAC80();
  uint64_t v40 = (void *)swift_allocObject();
  v40[2] = v36;
  v40[3] = v33;
  v40[4] = v11;
  v40[5] = v35;
  uint64_t v41 = v84;
  uint64_t v42 = v74;
  v40[6] = v83;
  v40[7] = v42;
  uint64_t v43 = v75;
  v40[8] = v41;
  _OWORD v40[9] = v43;
  *uint64_t v34 = sub_187688;
  v34[1] = v40;
  ((void (*)(void *, void, uint64_t))v70)(v34, v55, v80);
  sub_1FACA0();
  swift_release();
  v54(v77, v29);
  sub_1FAC30();
  sub_52948(v36);
  sub_52948(v11);
  sub_52958(v11);
  sub_52958(v36);
  uint64_t v44 = sub_1FAC10();
  long long v45 = (void *)swift_allocObject();
  v45[2] = v36;
  v45[3] = v33;
  v45[4] = v11;
  v45[5] = v35;
  uint64_t v46 = v83;
  uint64_t v47 = v74;
  uint64_t v48 = v75;
  v45[6] = v83;
  v45[7] = v47;
  v45[8] = v41;
  v45[9] = v48;
  long long v50 = v71;
  uint64_t v49 = v72;
  *uint64_t v71 = sub_52A84;
  v50[1] = v45;
  (*(void (**)(void *, void, uint64_t))(v49 + 104))(v50, enum case for JSONDecoder.DateDecodingStrategy.custom(_:), v73);
  swift_retain();
  sub_1FABF0();
  uint64_t result = swift_release();
  long long v52 = v69;
  *uint64_t v69 = v36;
  v52[1] = v33;
  v52[2] = v11;
  v52[3] = v35;
  v52[4] = v36;
  v52[5] = v33;
  v52[6] = v11;
  v52[7] = v35;
  v52[8] = v36;
  v52[9] = v33;
  v52[10] = v11;
  v52[11] = v35;
  v52[12] = (uint64_t)v46;
  v52[13] = v47;
  v52[14] = (uint64_t)v84;
  v52[15] = v48;
  v52[16] = v76;
  v52[17] = v44;
  v52[18] = v39;
  return result;
}

uint64_t sub_17E5D4()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t static APIClientHelpers.makeServerComponents(from:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_12124(&qword_2708A0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FADB0();
  uint64_t v9 = sub_1FADC0();
  uint64_t v10 = *(void *)(v9 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) != 1) {
    return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v10 + 32))(a3, v8, v9);
  }
  sub_55F38((uint64_t)v8, &qword_2708A0);
  type metadata accessor for ClientErrorPayload();
  sub_184984((unint64_t *)&qword_2708A8, (void (*)(uint64_t))type metadata accessor for ClientErrorPayload);
  swift_allocError();
  *uint64_t v11 = a1;
  v11[1] = a2;
  swift_storeEnumTagMultiPayload();
  swift_bridgeObjectRetain();
  return swift_willThrow();
}

uint64_t type metadata accessor for ClientErrorPayload()
{
  uint64_t result = qword_272610;
  if (!qword_272610) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t static APIClientHelpers.createRequest(components:method:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v28 = a2;
  uint64_t v8 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v27 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1FAF80();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v27 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  id v17 = (char *)v27 - v16;
  sub_1FAD90();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_55F38((uint64_t)v10, &qword_26E7A8);
    type metadata accessor for ClientErrorPayload();
    sub_184984((unint64_t *)&qword_2708A8, (void (*)(uint64_t))type metadata accessor for ClientErrorPayload);
    swift_allocError();
    uint64_t v19 = v18;
    uint64_t v20 = sub_1FADC0();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 16))(v19, a1, v20);
    swift_storeEnumTagMultiPayload();
    return swift_willThrow();
  }
  else
  {
    v27[1] = v4;
    uint64_t v22 = *(void (**)(char *, char *, uint64_t))(v12 + 32);
    v22(v17, v10, v11);
    (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v15, v17, v11);
    uint64_t v23 = *(void (**)(char *, uint64_t))(v12 + 8);
    swift_bridgeObjectRetain();
    v23(v17, v11);
    uint64_t v24 = (int *)type metadata accessor for ClientCurrency.Request();
    uint64_t v25 = v24[7];
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v22)(a4, v15, v11);
    uint64_t v26 = (void *)(a4 + v24[5]);
    *uint64_t v26 = v28;
    v26[1] = a3;
    *(void *)(a4 + v24[6]) = _swiftEmptyArrayStorage;
    *(_OWORD *)(a4 + v25) = xmmword_20ADA0;
  }
  return result;
}

uint64_t ClientConverter.addPrimitiveHeader<A>(name:value:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return CommonCurrency.Headers.addPrimitive<A>(name:value:)(a1, a2, a3, a5);
}

uint64_t static APIClientHelpers.validateContentTypeIfPresent(_:in:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a3 + 8);
  swift_bridgeObjectRetain();
  sub_52780(a1, a2, &v6);
  return swift_bridgeObjectRelease();
}

uint64_t static APIClientHelpers.perform<A>(operation:for:makeRequest:makeCall:makeOutput:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  *(void *)(v8 + 120) = v12;
  *(_OWORD *)(v8 + 104) = v11;
  *(void *)(v8 + 88) = a7;
  *(void *)(v8 + 96) = a8;
  *(void *)(v8 + 72) = a5;
  *(void *)(v8 + 80) = a6;
  *(void *)(v8 + 56) = a3;
  *(void *)(v8 + 64) = a4;
  *(void *)(v8 + 48) = a1;
  type metadata accessor for ClientCurrency.Request();
  *(void *)(v8 + 128) = swift_task_alloc();
  return _swift_task_switch(sub_17EC90, 0, 0);
}

uint64_t sub_17EC90()
{
  uint64_t v1 = *(void *)(v0 + 56);
  uint64_t v2 = swift_task_alloc();
  *(void *)(v0 + 136) = v2;
  *(_OWORD *)(v2 + 16) = *(_OWORD *)(v0 + 112);
  *(void *)(v2 + 32) = v1;
  uint64_t v8 = (uint64_t (*)(uint64_t, uint64_t (*)@<X0>(uint64_t@<X0>, uint64_t *@<X8>), uint64_t, uint64_t, uint64_t))((char *)&dword_2724E0 + dword_2724E0);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v0 + 144) = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_17ED78;
  uint64_t v4 = *(void *)(v0 + 128);
  uint64_t v5 = *(void *)(v0 + 64);
  uint64_t v6 = *(void *)(v0 + 72);
  return v8(v4, sub_18477C, v2, v5, v6);
}

uint64_t sub_17ED78()
{
  *(void *)(*(void *)v1 + 152) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_12F700;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_17EE94;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17EE94()
{
  uint64_t v1 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 160) = v3;
  long long v8 = *(_OWORD *)(v0 + 80);
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v0 + 112);
  *(_OWORD *)(v3 + 16) = v8;
  *(void *)(v3 + 32) = v1;
  *(void *)(v0 + 168) = v4;
  *(_OWORD *)(v4 + 16) = v5;
  *(void *)(v4 + 32) = v2;
  *(void *)(v4 + 40) = v1;
  uint64_t v9 = (uint64_t (*)(uint64_t, int *, uint64_t, uint64_t, uint64_t))((char *)&dword_2724F0 + dword_2724F0);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v6;
  void *v6 = v0;
  v6[1] = sub_17EFC8;
  return v9(v0 + 16, (int *)&unk_270850, v3, (uint64_t)sub_184788, v4);
}

uint64_t sub_17EFC8()
{
  *(void *)(*(void *)v1 + 184) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_17F4AC;
  }
  else {
    uint64_t v2 = sub_17F11C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17F11C()
{
  uint64_t v1 = *(void *)(v0 + 120);
  uint64_t v15 = *(void *)(v0 + 128);
  uint64_t v2 = *(void *)(v0 + 112);
  uint64_t v3 = *(void *)(v0 + 56);
  uint64_t v4 = *(void *)(v0 + 16);
  uint64_t v5 = *(void *)(v0 + 24);
  uint64_t v7 = *(void *)(v0 + 32);
  uint64_t v6 = *(void *)(v0 + 40);
  *(void *)(v0 + 192) = v5;
  *(void *)(v0 + 200) = v7;
  *(void *)(v0 + 208) = v6;
  uint64_t v8 = swift_task_alloc();
  *(void *)(v0 + 216) = v8;
  long long v9 = *(_OWORD *)(v0 + 96);
  *(void *)(v8 + 16) = v2;
  *(void *)(v8 + 24) = v1;
  *(_OWORD *)(v8 + 32) = v9;
  *(void *)(v8 + 48) = v4;
  *(void *)(v8 + 56) = v5;
  *(void *)(v8 + 64) = v7;
  *(void *)(v8 + 72) = v6;
  uint64_t v10 = (void *)swift_task_alloc();
  *(void *)(v0 + 224) = v10;
  void v10[2] = v2;
  v10[3] = v1;
  v10[4] = v3;
  v10[5] = v15;
  v10[6] = v4;
  v10[7] = v5;
  v10[8] = v7;
  v10[9] = v6;
  long long v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 232) = v11;
  *long long v11 = v0;
  v11[1] = sub_17F2B4;
  uint64_t v12 = *(void *)(v0 + 48);
  v11[7] = sub_184870;
  v11[8] = v10;
  uint64_t v16 = (uint64_t (*)(uint64_t))((char *)&dword_272500 + dword_272500);
  uint64_t v13 = (void *)swift_task_alloc();
  v11[9] = v13;
  void *v13 = v11;
  v13[1] = sub_182278;
  return v16(v12);
}

uint64_t sub_17F2B4()
{
  *(void *)(*(void *)v1 + 240) = v0;
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_17F52C;
  }
  else {
    uint64_t v2 = sub_17F408;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_17F408()
{
  uint64_t v1 = v0[25];
  unint64_t v2 = v0[26];
  uint64_t v3 = v0[16];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_186B40(v3, (uint64_t (*)(void))type metadata accessor for ClientCurrency.Request);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_17F4AC()
{
  sub_186B40(*(void *)(v0 + 128), (uint64_t (*)(void))type metadata accessor for ClientCurrency.Request);
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_17F52C()
{
  uint64_t v1 = v0[25];
  unint64_t v2 = v0[26];
  uint64_t v3 = v0[16];
  swift_bridgeObjectRelease();
  sub_520E8(v1, v2);
  sub_186B40(v3, (uint64_t (*)(void))type metadata accessor for ClientCurrency.Request);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_17F5D0@<X0>(void (*a1)(char *, char *)@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X6>, uint64_t a6@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v26 = a2;
  uint64_t v28 = a4;
  uint64_t v27 = a1;
  uint64_t v24 = *(void *)(a3 - 8);
  uint64_t v10 = ((uint64_t (*)(void))__chkstk_darwin)();
  uint64_t v12 = (char *)&v24 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = *(void *)(v14 - 8);
  uint64_t v16 = __chkstk_darwin(v10);
  uint64_t v18 = (char *)&v24 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v16);
  uint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t))(v21 + 16))(v20, v6);
  uint64_t v22 = 1;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v15 + 48))(v20, 1, v14) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v15 + 32))(v18, v20, v14);
    v27(v18, v12);
    (*(void (**)(char *, uint64_t))(v15 + 8))(v18, v14);
    if (v7) {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v24 + 32))(v25, v12, a3);
    }
    uint64_t v22 = 0;
  }
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(a6, v22, 1);
}

uint64_t ClientError.errorDescription.getter()
{
  return sub_1FC580();
}

uint64_t GeneralClientError.operationId.getter()
{
  uint64_t v0 = sub_1848A4();
  swift_bridgeObjectRetain();
  return v0;
}

uint64_t GeneralClientError.input.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16);

  return v6(a2, v4, AssociatedTypeWitness);
}

uint64_t GeneralClientError.input.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + *(int *)(a2 + 36);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 40);

  return v6(v4, a1, AssociatedTypeWitness);
}

uint64_t (*GeneralClientError.input.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t GeneralClientError.request.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_5606C(v2 + *(int *)(a1 + 40), a2, &qword_270858);
}

uint64_t GeneralClientError.request.setter(uint64_t a1, uint64_t a2)
{
  return sub_1848AC(a1, v2 + *(int *)(a2 + 40));
}

uint64_t (*GeneralClientError.request.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

void GeneralClientError.response.getter(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = (uint64_t *)(v2 + *(int *)(a1 + 44));
  uint64_t v4 = *v3;
  uint64_t v5 = v3[1];
  uint64_t v6 = v3[2];
  unint64_t v7 = v3[3];
  *a2 = *v3;
  a2[1] = v5;
  a2[2] = v6;
  a2[3] = v7;
  sub_184914(v4, v5, v6, v7);
}

__n128 GeneralClientError.response.setter(__n128 *a1, uint64_t a2)
{
  __n128 v7 = *a1;
  unint64_t v3 = a1[1].n128_u64[0];
  unint64_t v4 = a1[1].n128_u64[1];
  uint64_t v5 = v2 + *(int *)(a2 + 44);
  sub_134108(*(void *)v5, *(void *)(v5 + 8), *(void *)(v5 + 16), *(void *)(v5 + 24));
  __n128 result = v7;
  *(__n128 *)uint64_t v5 = v7;
  *(void *)(v5 + 16) = v3;
  *(void *)(v5 + 24) = v4;
  return result;
}

uint64_t (*GeneralClientError.response.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t GeneralClientError.underlyingError.getter(uint64_t a1)
{
  uint64_t v1 = sub_184960(a1);
  swift_errorRetain();
  return v1;
}

uint64_t GeneralClientError.underlyingError.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(int *)(a2 + 48);
  uint64_t result = swift_errorRelease();
  *(void *)(v2 + v4) = a1;
  return result;
}

uint64_t (*GeneralClientError.underlyingError.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t GeneralClientError.init(operationId:input:request:response:underlyingError:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, long long *a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  long long v26 = *a5;
  uint64_t v25 = *((void *)a5 + 2);
  uint64_t v24 = *((void *)a5 + 3);
  uint64_t v12 = (int *)type metadata accessor for GeneralClientError();
  uint64_t v13 = (uint64_t)a7 + v12[10];
  uint64_t v14 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(v13, 1, 1, v14);
  uint64_t v15 = (char *)a7 + v12[11];
  *(_OWORD *)uint64_t v15 = 0u;
  *((_OWORD *)v15 + 1) = 0u;
  *a7 = a1;
  a7[1] = a2;
  uint64_t v27 = v12;
  uint64_t v16 = (char *)a7 + v12[9];
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v18 = *(void *)(AssociatedTypeWitness - 8);
  (*(void (**)(char *, uint64_t, uint64_t))(v18 + 16))(v16, a3, AssociatedTypeWitness);
  sub_1340A0(a4, v13);
  sub_134108(*(void *)v15, *((void *)v15 + 1), *((void *)v15 + 2), *((void *)v15 + 3));
  *(_OWORD *)uint64_t v15 = v26;
  *((void *)v15 + 2) = v25;
  *((void *)v15 + 3) = v24;
  uint64_t v30 = a6;
  swift_errorRetain();
  sub_12124(&qword_26D670);
  sub_12124(&qword_270870);
  if (swift_dynamicCast())
  {
    sub_37C30(v28, (uint64_t)v31);
    uint64_t v19 = v32;
    uint64_t v20 = v33;
    sub_5D64(v31, v32);
    uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(v20 + 48))(v19, v20);
    swift_errorRelease();
    sub_55F38(a4, &qword_270858);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a3, AssociatedTypeWitness);
    *(void *)((char *)a7 + v27[12]) = v21;
    return sub_1264C((uint64_t)v31);
  }
  else
  {
    uint64_t v29 = 0;
    memset(v28, 0, sizeof(v28));
    sub_55F38(a4, &qword_270858);
    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(a3, AssociatedTypeWitness);
    uint64_t result = sub_55F38((uint64_t)v28, &qword_270878);
    *(void *)((char *)a7 + v27[12]) = a6;
  }
  return result;
}

uint64_t GeneralClientError.description.getter(int *a1)
{
  uint64_t v3 = 0x3E6C696E3CLL;
  uint64_t v4 = sub_12124(&qword_270858);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v8 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v10 = (char *)&v22 - v9;
  uint64_t v22 = 0;
  unint64_t v23 = 0xE000000000000000;
  sub_1FC050(90);
  uint64_t v25 = v22;
  unint64_t v26 = v23;
  v27._countAndFlagsBits = 0xD00000000000001CLL;
  v27._object = (void *)0x8000000000219B50;
  sub_1FB8F0(v27);
  uint64_t v11 = *v1;
  uint64_t v12 = (void *)v1[1];
  swift_bridgeObjectRetain();
  v28._countAndFlagsBits = v11;
  v28._object = v12;
  sub_1FB8F0(v28);
  swift_bridgeObjectRelease();
  v29._countAndFlagsBits = 0x3A7475706E69202CLL;
  v29._object = (void *)0xE900000000000020;
  sub_1FB8F0(v29);
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v10, (char *)v1 + a1[9], AssociatedTypeWitness);
  v30._countAndFlagsBits = sub_1FB880();
  sub_1FB8F0(v30);
  swift_bridgeObjectRelease();
  v31._countAndFlagsBits = 0x736575716572202CLL;
  v31._object = (void *)0xEB00000000203A74;
  sub_1FB8F0(v31);
  sub_5606C((uint64_t)v1 + a1[10], (uint64_t)v6, &qword_270858);
  uint64_t v13 = type metadata accessor for ClientCurrency.Request();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v13 - 8) + 48))(v6, 1, v13) == 1)
  {
    sub_55F38((uint64_t)v6, &qword_270858);
    uint64_t v14 = (void *)0xE500000000000000;
    uint64_t v15 = 0x3E6C696E3CLL;
  }
  else
  {
    uint64_t v15 = ClientCurrency.Request.description.getter();
    uint64_t v14 = v16;
    sub_186B40((uint64_t)v6, (uint64_t (*)(void))type metadata accessor for ClientCurrency.Request);
  }
  v32._countAndFlagsBits = v15;
  v32._object = v14;
  sub_1FB8F0(v32);
  swift_bridgeObjectRelease();
  v33._countAndFlagsBits = 0x6E6F70736572202CLL;
  v33._object = (void *)0xEC000000203A6573;
  sub_1FB8F0(v33);
  uint64_t v17 = (char *)v1 + a1[11];
  unint64_t v18 = *((void *)v17 + 1);
  if (v18)
  {
    uint64_t v22 = *(void *)v17;
    unint64_t v23 = v18;
    long long v24 = *((_OWORD *)v17 + 1);
    uint64_t v3 = ClientCurrency.Response.description.getter();
    uint64_t v20 = v19;
  }
  else
  {
    uint64_t v20 = (void *)0xE500000000000000;
  }
  v34._countAndFlagsBits = v3;
  v34._object = v20;
  sub_1FB8F0(v34);
  swift_bridgeObjectRelease();
  v35._object = (void *)0x8000000000219B70;
  v35._countAndFlagsBits = 0xD000000000000014;
  sub_1FB8F0(v35);
  v36._countAndFlagsBits = sub_18062C((uint64_t)a1);
  sub_1FB8F0(v36);
  swift_bridgeObjectRelease();
  return v25;
}

uint64_t ClientCurrency.Request.description.getter()
{
  sub_1FC050(51);
  object = (void *)0xE500000000000000;
  v14._countAndFlagsBits = 0x203A4C5255;
  v14._object = (void *)0xE500000000000000;
  sub_1FB8F0(v14);
  v15._countAndFlagsBits = sub_1FAEE0();
  sub_1FB8F0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x646F6874656D202CLL;
  v16._object = (void *)0xEA0000000000203ALL;
  sub_1FB8F0(v16);
  uint64_t v2 = type metadata accessor for ClientCurrency.Request();
  uint64_t v3 = (uint64_t *)(v0 + *(int *)(v2 + 20));
  uint64_t v4 = *v3;
  uint64_t v5 = (void *)v3[1];
  swift_bridgeObjectRetain();
  v17._countAndFlagsBits = v4;
  v17._object = v5;
  sub_1FB8F0(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 0x726564616568202CLL;
  v18._object = (void *)0xEB00000000203A73;
  sub_1FB8F0(v18);
  uint64_t v6 = swift_bridgeObjectRetain();
  sub_382EC(v6);
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v7 = sub_1FB7B0();
  uint64_t v9 = v8;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = v7;
  v19._object = v9;
  sub_1FB8F0(v19);
  swift_bridgeObjectRelease();
  v20._object = (void *)0x8000000000219B90;
  v20._countAndFlagsBits = 0xD000000000000011;
  sub_1FB8F0(v20);
  uint64_t v10 = (uint64_t *)(v0 + *(int *)(v2 + 28));
  unint64_t v11 = v10[1];
  if (v11 >> 60 == 15)
  {
    v12._countAndFlagsBits = 0x3E6C696E3CLL;
  }
  else
  {
    v12._countAndFlagsBits = sub_182E6C(*v10, v11);
    object = v12._object;
  }
  v12._object = object;
  sub_1FB8F0(v12);
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t ClientCurrency.Response.description.getter()
{
  uint64_t v1 = sub_1FB870();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = *(void *)(v0 + 16);
  unint64_t v3 = *(void *)(v0 + 24);
  sub_1FC050(33);
  swift_bridgeObjectRelease();
  uint64_t v17 = 0x203A737574617473;
  unint64_t v18 = 0xE800000000000000;
  v19._countAndFlagsBits = sub_1FC580();
  sub_1FB8F0(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 0x726564616568202CLL;
  v20._object = (void *)0xEB00000000203A73;
  sub_1FB8F0(v20);
  uint64_t v4 = swift_bridgeObjectRetain();
  v16[0] = (uint64_t)sub_382EC(v4);
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v5 = sub_1FB7B0();
  uint64_t v7 = v6;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v21._countAndFlagsBits = v5;
  v21._object = v7;
  sub_1FB8F0(v21);
  swift_bridgeObjectRelease();
  v22._countAndFlagsBits = 0x203A79646F62202CLL;
  v22._object = (void *)0xE800000000000000;
  sub_1FB8F0(v22);
  sub_52090(v2, v3);
  sub_3E20C(256, v2, v3, v16);
  uint64_t v9 = v16[0];
  unint64_t v8 = v16[1];
  sub_1FB850();
  uint64_t v10 = sub_1FB830();
  if (v11 || (sub_1FB860(), uint64_t v10 = sub_1FB830(), v11))
  {
    uint64_t v12 = v10;
    uint64_t v13 = v11;
  }
  else
  {
    sub_52090(v9, v8);
    uint64_t v12 = sub_1FAFA0();
    uint64_t v13 = v15;
    sub_520E8(v9, v8);
  }
  sub_520E8(v9, v8);
  v23._countAndFlagsBits = v12;
  v23._object = v13;
  sub_1FB8F0(v23);
  swift_bridgeObjectRelease();
  return v17;
}

uint64_t sub_18062C(uint64_t a1)
{
  v52[0] = sub_1FC110();
  uint64_t v57 = *(void *)(v52[0] - 8);
  __chkstk_darwin(v52[0]);
  uint64_t v56 = (char *)v52 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_12124(&qword_272648);
  __chkstk_darwin(v4 - 8);
  uint64_t v58 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1FC120();
  uint64_t v59 = *(void *)(v6 - 8);
  uint64_t v60 = v6;
  uint64_t v7 = __chkstk_darwin(v6);
  unsigned int v55 = (char *)v52 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  long long v54 = (char *)v52 - v9;
  uint64_t v10 = sub_1FC0E0();
  uint64_t v53 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v52 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_12124(&qword_272650);
  __chkstk_darwin(v13 - 8);
  Swift::String v15 = (char *)v52 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = sub_1FC0F0();
  uint64_t v17 = *(void *)(v16 - 8);
  uint64_t v18 = __chkstk_darwin(v16);
  Swift::String v20 = (long long *)((char *)v52 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v18);
  Swift::String v22 = (char *)v52 - v21;
  v52[1] = a1;
  uint64_t v23 = *(int *)(a1 + 48);
  *(void *)&long long v61 = *(void *)(v1 + v23);
  swift_errorRetain();
  sub_12124(&qword_26D670);
  int v24 = swift_dynamicCast();
  uint64_t v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v17 + 56);
  if (v24)
  {
    uint64_t v26 = v53;
    v25(v15, 0, 1, v16);
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v22, v15, v16);
    (*(void (**)(long long *, char *, uint64_t))(v17 + 16))(v20, v22, v16);
    int v27 = (*(uint64_t (**)(long long *, uint64_t))(v17 + 88))(v20, v16);
    if (v27 == enum case for DecodingError.typeMismatch(_:))
    {
      (*(void (**)(long long *, uint64_t))(v17 + 96))(v20, v16);
      uint64_t v28 = sub_12124(&qword_26F030);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, (char *)v20 + *(int *)(v28 + 48), v10);
      *(void *)&long long v61 = 0;
      *((void *)&v61 + 1) = 0xE000000000000000;
      sub_1FC050(23);
      swift_bridgeObjectRelease();
      strcpy((char *)&v61, "typeMismatch ");
      HIWORD(v61) = -4864;
      v65._countAndFlagsBits = sub_1FC8A0();
      sub_1FB8F0(v65);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = 0x206E69202D20;
      v29._object = (void *)0xE600000000000000;
    }
    else
    {
      if (v27 != enum case for DecodingError.valueNotFound(_:))
      {
        if (v27 == enum case for DecodingError.keyNotFound(_:))
        {
          (*(void (**)(long long *, uint64_t))(v17 + 96))(v20, v16);
          long long v51 = (char *)v20 + *(int *)(sub_12124(&qword_272658) + 48);
          sub_37C30(v20, (uint64_t)&v61);
          (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, v51, v10);
          uint64_t v63 = 0;
          unint64_t v64 = 0xE000000000000000;
          sub_1FC050(19);
          v73._countAndFlagsBits = 0x6F46746F4E79656BLL;
          v73._object = (void *)0xEC00000020646E75;
          sub_1FB8F0(v73);
          sub_5D64(&v61, v62);
          sub_1FC5D0();
          v74._countAndFlagsBits = 2108704;
          v74._object = (void *)0xE300000000000000;
          sub_1FB8F0(v74);
          v75._countAndFlagsBits = sub_1FC0D0();
          sub_1FB8F0(v75);
          swift_bridgeObjectRelease();
          uint64_t v47 = v63;
          uint64_t v48 = (void *)v64;
          (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
          sub_1264C((uint64_t)&v61);
        }
        else if (v27 == enum case for DecodingError.dataCorrupted(_:))
        {
          (*(void (**)(long long *, uint64_t))(v17 + 96))(v20, v16);
          (*(void (**)(char *, long long *, uint64_t))(v26 + 32))(v12, v20, v10);
          *(void *)&long long v61 = 0;
          *((void *)&v61 + 1) = 0xE000000000000000;
          sub_1FC050(18);
          swift_bridgeObjectRelease();
          *(void *)&long long v61 = 0xD000000000000010;
          *((void *)&v61 + 1) = 0x8000000000219CC0;
          v76._countAndFlagsBits = sub_1FC0D0();
          sub_1FB8F0(v76);
          swift_bridgeObjectRelease();
          uint64_t v48 = (void *)*((void *)&v61 + 1);
          uint64_t v47 = v61;
          (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
        }
        else
        {
          strcpy((char *)&v61, "unknown: ");
          WORD5(v61) = 0;
          HIDWORD(v61) = -385875968;
          swift_getWitnessTable();
          v77._countAndFlagsBits = sub_1FC780();
          sub_1FB8F0(v77);
          swift_bridgeObjectRelease();
          uint64_t v48 = (void *)*((void *)&v61 + 1);
          uint64_t v47 = v61;
          (*(void (**)(long long *, uint64_t))(v17 + 8))(v20, v16);
        }
        goto LABEL_10;
      }
      (*(void (**)(long long *, uint64_t))(v17 + 96))(v20, v16);
      uint64_t v46 = sub_12124(&qword_26F030);
      (*(void (**)(char *, char *, uint64_t))(v26 + 32))(v12, (char *)v20 + *(int *)(v46 + 48), v10);
      *(void *)&long long v61 = 0;
      *((void *)&v61 + 1) = 0xE000000000000000;
      sub_1FC050(21);
      swift_bridgeObjectRelease();
      strcpy((char *)&v61, "valueNotFound ");
      HIBYTE(v61) = -18;
      v68._countAndFlagsBits = sub_1FC8A0();
      sub_1FB8F0(v68);
      swift_bridgeObjectRelease();
      v29._countAndFlagsBits = 2108704;
      v29._object = (void *)0xE300000000000000;
    }
    sub_1FB8F0(v29);
    v69._countAndFlagsBits = sub_1FC0D0();
    sub_1FB8F0(v69);
    swift_bridgeObjectRelease();
    uint64_t v48 = (void *)*((void *)&v61 + 1);
    uint64_t v47 = v61;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v12, v10);
LABEL_10:
    *(void *)&long long v61 = 0;
    *((void *)&v61 + 1) = 0xE000000000000000;
    sub_1FC050(22);
    swift_bridgeObjectRelease();
    *(void *)&long long v61 = 0xD000000000000014;
    *((void *)&v61 + 1) = 0x8000000000219CA0;
    v70._countAndFlagsBits = v47;
    v70._object = v48;
    sub_1FB8F0(v70);
    swift_bridgeObjectRelease();
    uint64_t v49 = v61;
    (*(void (**)(char *, uint64_t))(v17 + 8))(v22, v16);
    return v49;
  }
  Swift::String v30 = v55;
  Swift::String v31 = v56;
  uint64_t v32 = v57;
  Swift::String v33 = v54;
  v25(v15, 1, 1, v16);
  sub_55F38((uint64_t)v15, &qword_272650);
  *(void *)&long long v61 = *(void *)(v1 + v23);
  swift_errorRetain();
  uint64_t v34 = (uint64_t)v58;
  uint64_t v35 = v60;
  int v36 = swift_dynamicCast();
  uint64_t v37 = v59;
  uint64_t v38 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v59 + 56);
  if (v36)
  {
    v38(v34, 0, 1, v35);
    uint64_t v39 = v33;
    (*(void (**)(char *, uint64_t, uint64_t))(v37 + 32))(v33, v34, v35);
    (*(void (**)(_OWORD *, char *, uint64_t))(v37 + 16))(v30, v33, v35);
    if ((*(unsigned int (**)(_OWORD *, uint64_t))(v37 + 88))(v30, v35) == enum case for EncodingError.invalidValue(_:))
    {
      (*(void (**)(_OWORD *, uint64_t))(v37 + 96))(v30, v35);
      uint64_t v40 = (char *)v30 + *(int *)(sub_12124(&qword_26D1C8) + 48);
      sub_560D0(v30, &v61);
      uint64_t v41 = v31;
      uint64_t v42 = v31;
      uint64_t v43 = v52[0];
      (*(void (**)(char *, char *, void))(v32 + 32))(v42, v40, v52[0]);
      uint64_t v63 = 0;
      unint64_t v64 = 0xE000000000000000;
      sub_1FC050(20);
      v66._countAndFlagsBits = 0x5664696C61766E69;
      v66._object = (void *)0xED00002065756C61;
      sub_1FB8F0(v66);
      sub_1FC1D0();
      v67._countAndFlagsBits = 2108704;
      v67._object = (void *)0xE300000000000000;
      sub_1FB8F0(v67);
      sub_1FC1D0();
      uint64_t v44 = v63;
      long long v45 = (void *)v64;
      (*(void (**)(char *, uint64_t))(v32 + 8))(v41, v43);
      sub_1264C((uint64_t)&v61);
    }
    else
    {
      strcpy((char *)&v61, "unknown: ");
      WORD5(v61) = 0;
      HIDWORD(v61) = -385875968;
      swift_getWitnessTable();
      v71._countAndFlagsBits = sub_1FC780();
      sub_1FB8F0(v71);
      swift_bridgeObjectRelease();
      long long v45 = (void *)*((void *)&v61 + 1);
      uint64_t v44 = v61;
      (*(void (**)(_OWORD *, uint64_t))(v37 + 8))(v30, v35);
    }
    *(void *)&long long v61 = 0;
    *((void *)&v61 + 1) = 0xE000000000000000;
    sub_1FC050(22);
    swift_bridgeObjectRelease();
    *(void *)&long long v61 = 0xD000000000000014;
    *((void *)&v61 + 1) = 0x8000000000219C80;
    v72._countAndFlagsBits = v44;
    v72._object = v45;
    sub_1FB8F0(v72);
    swift_bridgeObjectRelease();
    uint64_t v49 = v61;
    (*(void (**)(char *, uint64_t))(v37 + 8))(v39, v35);
  }
  else
  {
    v38(v34, 1, 1, v35);
    sub_55F38(v34, &qword_272648);
    swift_getErrorValue();
    return sub_1FC780();
  }
  return v49;
}

uint64_t sub_181228()
{
  swift_getWitnessTable();

  return ClientError.errorDescription.getter();
}

unint64_t ClientErrorPayload.description.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1FADC0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = type metadata accessor for ClientErrorPayload();
  __chkstk_darwin(v6);
  uint64_t v8 = (uint64_t *)((char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_1875EC(v1, (uint64_t)v8, (uint64_t (*)(void))type metadata accessor for ClientErrorPayload);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      (*(void (**)(char *, uint64_t *, uint64_t))(v3 + 32))(v5, v8, v2);
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1FC050(26);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000018;
      unint64_t v19 = 0x8000000000219C40;
      sub_184984(qword_272510, (void (*)(uint64_t))&type metadata accessor for URLComponents);
      v20._countAndFlagsBits = sub_1FC580();
      sub_1FB8F0(v20);
      swift_bridgeObjectRelease();
      unint64_t v13 = v18;
      (*(void (**)(char *, uint64_t))(v3 + 8))(v5, v2);
      return v13;
    case 2u:
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1FC050(42);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD000000000000028;
      unint64_t v19 = 0x8000000000219C10;
      swift_getErrorValue();
      v21._countAndFlagsBits = sub_1FC780();
      sub_1FB8F0(v21);
      swift_bridgeObjectRelease();
      swift_errorRelease();
      return v18;
    case 3u:
      uint64_t v9 = *v8;
      uint64_t v10 = (void *)v8[1];
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1FC050(27);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000019;
      uint64_t v12 = "Unexpected content-type: ";
      goto LABEL_7;
    case 4u:
      uint64_t v9 = *v8;
      uint64_t v10 = (void *)v8[1];
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1FC050(27);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000019;
      uint64_t v12 = "Required header missing: ";
      goto LABEL_7;
    case 5u:
      uint64_t v14 = *v8;
      Swift::String v15 = (void *)v8[1];
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1FC050(46);
      swift_bridgeObjectRelease();
      unint64_t v18 = 0xD00000000000001FLL;
      unint64_t v19 = 0x8000000000219BB0;
      v23._countAndFlagsBits = v14;
      v23._object = v15;
      sub_1FB8F0(v23);
      swift_bridgeObjectRelease();
      v24._countAndFlagsBits = 0x73206D6F72662027;
      v24._object = (void *)0xED0000676E697274;
      sub_1FB8F0(v24);
      return v18;
    default:
      uint64_t v9 = *v8;
      uint64_t v10 = (void *)v8[1];
      unint64_t v18 = 0;
      unint64_t v19 = 0xE000000000000000;
      sub_1FC050(22);
      swift_bridgeObjectRelease();
      unint64_t v11 = 0xD000000000000014;
      uint64_t v12 = "Invalid server URL: ";
LABEL_7:
      unint64_t v18 = v11;
      unint64_t v19 = (unint64_t)(v12 - 32) | 0x8000000000000000;
      v22._countAndFlagsBits = v9;
      v22._object = v10;
      sub_1FB8F0(v22);
      swift_bridgeObjectRelease();
      return v18;
  }
}

uint64_t sub_18167C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  uint64_t v27 = a4;
  uint64_t v28 = a1;
  uint64_t v29 = a3;
  Swift::String v30 = a7;
  uint64_t v10 = sub_12124(&qword_270858);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)&v25 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v14 = *(void *)(AssociatedTypeWitness - 8);
  __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)&v25 - v15;
  uint64_t v17 = *a2;
  uint64_t v18 = a2[1];
  uint64_t v19 = a2[2];
  unint64_t v20 = a2[3];
  uint64_t v21 = (*(uint64_t (**)(uint64_t, uint64_t))(a6 + 24))(a5, a6);
  uint64_t v25 = v22;
  uint64_t v26 = v21;
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, v27, AssociatedTypeWitness);
  sub_5606C(v28, (uint64_t)v12, &qword_270858);
  *(void *)&long long v31 = v17;
  *((void *)&v31 + 1) = v18;
  uint64_t v32 = v19;
  unint64_t v33 = v20;
  sub_184914(v17, v18, v19, v20);
  uint64_t v23 = v29;
  swift_errorRetain();
  return GeneralClientError.init(operationId:input:request:response:underlyingError:)(v26, v25, (uint64_t)v16, (uint64_t)v12, &v31, v23, v30);
}

uint64_t sub_18184C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t *a5@<X8>)
{
  uint64_t v10 = sub_12124(&qword_270858);
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(v12, 1, 1, v13);
  uint64_t v14 = type metadata accessor for GeneralClientError();
  memset(v17, 0, sizeof(v17));
  a5[3] = v14;
  a5[4] = swift_getWitnessTable();
  uint64_t v15 = sub_51BD4(a5);
  sub_18167C((uint64_t)v12, (uint64_t *)v17, a1, a2, a3, a4, v15);
  return sub_55F38((uint64_t)v12, &qword_270858);
}

uint64_t sub_181998(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[10] = a4;
  v5[11] = a5;
  v5[8] = a2;
  v5[9] = a3;
  v5[7] = a1;
  return _swift_task_switch(sub_1819C0, 0, 0);
}

uint64_t sub_1819C0()
{
  (*(void (**)(void))(v0 + 80))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_181B8C(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[9] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_181C6C;
  return v9(a1);
}

uint64_t sub_181C6C()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_181DA0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_181DA0()
{
  (*(void (**)(void))(v0 + 56))(*(void *)(v0 + 80));
  uint64_t v1 = *(void *)(v0 + 40);
  uint64_t v2 = sub_5D64((void *)(v0 + 16), v1);
  uint64_t v3 = *(void *)(v1 - 8);
  uint64_t v4 = swift_task_alloc();
  (*(void (**)(uint64_t, void *, uint64_t))(v3 + 16))(v4, v2, v1);
  if (sub_1FC5B0())
  {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(v4, v1);
  }
  else
  {
    swift_allocError();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 32))(v5, v4, v1);
  }
  swift_willThrow();
  swift_errorRelease();
  swift_task_dealloc();
  sub_1264C(v0 + 16);
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_181F44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[14] = a8;
  v8[15] = v10;
  v8[12] = a6;
  v8[13] = a7;
  v8[10] = a4;
  v8[11] = a5;
  void v8[8] = a2;
  _OWORD v8[9] = a3;
  v8[7] = a1;
  return _swift_task_switch(sub_181F7C, 0, 0);
}

uint64_t sub_181F7C()
{
  uint64_t v9 = v0;
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void (**)(void *))(v0 + 80);
  v7[0] = *(void *)(v0 + 96);
  v7[1] = v1;
  long long v8 = *(_OWORD *)(v0 + 112);
  v2(v7);
  uint64_t v3 = *(void *)(v0 + 112);
  unint64_t v4 = *(void *)(v0 + 120);
  swift_bridgeObjectRelease();
  sub_520E8(v3, v4);
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t static APIClientHelpers.wrappingErrors<A>(work:mapError:)(uint64_t a1, int *a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  v5[7] = a4;
  v5[8] = a5;
  uint64_t v9 = (uint64_t (*)(uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  v5[9] = v7;
  *uint64_t v7 = v5;
  v7[1] = sub_182278;
  return v9(a1);
}

uint64_t sub_182278()
{
  uint64_t v2 = *v1;
  *(void *)(v2 + 80) = v0;
  swift_task_dealloc();
  if (v0)
  {
    return _swift_task_switch(sub_1876A0, 0, 0);
  }
  else
  {
    uint64_t v3 = *(uint64_t (**)(void))(v2 + 8);
    return v3();
  }
}

uint64_t sub_1823AC(uint64_t a1, int *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t))((char *)a2 + *a2);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v7;
  *uint64_t v7 = v4;
  v7[1] = sub_5958;
  return v9(a1, a4);
}

uint64_t sub_182498@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = sub_12124(&qword_270858);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1875EC(a3, (uint64_t)v14, (uint64_t (*)(void))type metadata accessor for ClientCurrency.Request);
  uint64_t v15 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v15 - 8) + 56))(v14, 0, 1, v15);
  uint64_t v16 = type metadata accessor for GeneralClientError();
  memset(v19, 0, sizeof(v19));
  a6[3] = v16;
  a6[4] = swift_getWitnessTable();
  uint64_t v17 = sub_51BD4(a6);
  sub_18167C((uint64_t)v14, (uint64_t *)v19, a1, a2, a4, a5, v17);
  return sub_55F38((uint64_t)v14, &qword_270858);
}

uint64_t sub_182608(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  v7[7] = a6;
  v7[8] = a7;
  v7[5] = a4;
  v7[6] = a5;
  v7[3] = a2;
  v7[4] = a3;
  void v7[2] = a1;
  return _swift_task_switch(sub_182638, 0, 0);
}

uint64_t sub_182638()
{
  uint64_t v7 = v0;
  uint64_t v1 = *(void *)(v0 + 48);
  uint64_t v2 = *(void (**)(void *))(v0 + 24);
  v5[0] = *(void *)(v0 + 40);
  v5[1] = v1;
  long long v6 = *(_OWORD *)(v0 + 56);
  v2(v5);
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_1826D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, unint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t *a9@<X8>, uint64_t a10)
{
  uint64_t v25 = a2;
  uint64_t v18 = sub_12124(&qword_270858);
  __chkstk_darwin(v18 - 8);
  unint64_t v20 = (char *)&v24 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1875EC(a3, (uint64_t)v20, (uint64_t (*)(void))type metadata accessor for ClientCurrency.Request);
  uint64_t v21 = type metadata accessor for ClientCurrency.Request();
  (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56))(v20, 0, 1, v21);
  v26[0] = a4;
  v26[1] = a5;
  v26[2] = a6;
  v26[3] = a7;
  a9[3] = type metadata accessor for GeneralClientError();
  a9[4] = swift_getWitnessTable();
  uint64_t v22 = sub_51BD4(a9);
  swift_bridgeObjectRetain();
  sub_52090(a6, a7);
  sub_18167C((uint64_t)v20, v26, a1, v25, a8, a10, v22);
  swift_bridgeObjectRelease();
  sub_520E8(a6, a7);
  return sub_55F38((uint64_t)v20, &qword_270858);
}

uint64_t URLComponents.addQueryItem<A>(name:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v18[1] = a2;
  uint64_t v6 = sub_1FBEB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v18 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  __chkstk_darwin(v8);
  uint64_t v13 = (char *)v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))(v10, a3, v6);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v10, 1, a4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, v6);
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v10, a4);
  uint64_t v15 = sub_1FAD70();
  if (v15) {
    uint64_t v16 = (void *)v15;
  }
  else {
    uint64_t v16 = _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D5F0);
  sub_1FAD60();
  uint64_t v17 = swift_allocObject();
  *(_OWORD *)(v17 + 16) = xmmword_1FD2A0;
  sub_1FC580();
  sub_1FAD50();
  swift_bridgeObjectRelease();
  v18[2] = v16;
  sub_AAEA8(v17);
  sub_1FAD80();
  return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, a4);
}

uint64_t URLComponents.addQueryItem<A>(name:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v22 = a2;
  uint64_t v23 = a5;
  uint64_t v21 = a1;
  uint64_t v20 = sub_1FBEB0();
  uint64_t v7 = *(void *)(v20 - 8);
  uint64_t v8 = __chkstk_darwin(v20);
  uint64_t v10 = (char *)&v18 - v9;
  uint64_t v11 = *(void *)(a4 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t result = __chkstk_darwin(v8);
  uint64_t v24 = (char *)&v18 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    swift_bridgeObjectRetain();
    if (sub_1FBB80())
    {
      uint64_t v18 = v12;
      uint64_t v14 = 0;
      uint64_t v19 = (void (**)(char *, uint64_t *, uint64_t))(v11 + 16);
      uint64_t v15 = (void (**)(char *, uint64_t))(v7 + 8);
      while (1)
      {
        BOOL v16 = sub_1FBB50();
        sub_1FBB10();
        if (v16)
        {
          (*(void (**)(char *, unint64_t, uint64_t))(v11 + 16))(v24, a3+ ((*(unsigned __int8 *)(v11 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80))+ *(void *)(v11 + 72) * v14, a4);
          uint64_t v17 = v14 + 1;
          if (__OFADD__(v14, 1)) {
            goto LABEL_11;
          }
        }
        else
        {
          uint64_t result = sub_1FC080();
          if (v18 != 8)
          {
            __break(1u);
            return result;
          }
          uint64_t v25 = result;
          (*v19)(v24, &v25, a4);
          swift_unknownObjectRelease();
          uint64_t v17 = v14 + 1;
          if (__OFADD__(v14, 1))
          {
LABEL_11:
            __break(1u);
            return swift_bridgeObjectRelease();
          }
        }
        (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v10, v24, a4);
        (*(void (**)(char *, void, uint64_t, uint64_t))(v11 + 56))(v10, 0, 1, a4);
        URLComponents.addQueryItem<A>(name:value:)(v21, v22, (uint64_t)v10, a4);
        (*v15)(v10, v20);
        ++v14;
        if (v17 == sub_1FBB80()) {
          return swift_bridgeObjectRelease();
        }
      }
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_182E6C(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1FB870();
  __chkstk_darwin(v4 - 8);
  sub_52090(a1, a2);
  sub_3E20C(256, a1, a2, v12);
  uint64_t v6 = v12[0];
  unint64_t v5 = v12[1];
  sub_1FB850();
  uint64_t v7 = sub_1FB830();
  if (v8 || (sub_1FB860(), uint64_t v7 = sub_1FB830(), v9))
  {
    uint64_t v10 = v7;
  }
  else
  {
    sub_52090(v6, v5);
    uint64_t v10 = sub_1FAFA0();
    sub_520E8(v6, v5);
  }
  sub_520E8(v6, v5);
  return v10;
}

uint64_t ClientConverter.common.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 72);
  uint64_t v8 = *(void *)(v1 + 80);
  uint64_t v9 = *(void *)(v1 + 88);
  uint64_t v10 = *(void *)(v1 + 96);
  uint64_t v11 = *(void *)(v1 + 120);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(void *)(a1 + 40) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = v10;
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(v1 + 104);
  *(void *)(a1 + 88) = v11;
  sub_52948(v2);
  sub_52948(v4);
  sub_52948(v6);
  sub_52948(v8);
  swift_retain();

  return swift_retain();
}

__n128 ClientConverter.common.setter(long long *a1)
{
  long long v11 = a1[1];
  long long v12 = *a1;
  long long v10 = a1[2];
  uint64_t v8 = *((void *)a1 + 7);
  uint64_t v9 = *((void *)a1 + 6);
  uint64_t v3 = *(void *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 80);
  sub_52958(*(void *)(v1 + 32));
  sub_52958(v3);
  sub_52958(v4);
  sub_52958(v5);
  swift_release();
  swift_release();
  *(_OWORD *)(v1 + 32) = v12;
  *(_OWORD *)(v1 + 48) = v11;
  *(_OWORD *)(v1 + 64) = v10;
  *(void *)(v1 + 80) = v9;
  *(void *)(v1 + 88) = v8;
  __n128 result = (__n128)a1[4];
  long long v7 = a1[5];
  *(__n128 *)(v1 + 96) = result;
  *(_OWORD *)(v1 + 112) = v7;
  return result;
}

uint64_t ClientConverter.encoder.getter()
{
  return swift_retain();
}

uint64_t ClientConverter.encoder.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 128) = a1;
  return result;
}

uint64_t (*ClientConverter.encoder.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t ClientConverter.decoder.getter()
{
  return swift_retain();
}

uint64_t ClientConverter.decoder.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 136) = a1;
  return result;
}

uint64_t (*ClientConverter.decoder.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t ClientConverter.headerEncoder.getter()
{
  return swift_retain();
}

uint64_t ClientConverter.headerEncoder.setter(uint64_t a1)
{
  uint64_t result = swift_release();
  *(void *)(v1 + 144) = a1;
  return result;
}

uint64_t (*ClientConverter.headerEncoder.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t ClientConverter.addQueryItem<A>(name:value:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return URLComponents.addQueryItem<A>(name:value:)(a1, a2, a3, a5);
}

uint64_t ClientConverter.addQueryItem(name:value:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  long long v28[2] = a2;
  v28[3] = a4;
  v28[1] = a1;
  uint64_t v6 = type metadata accessor for DateConfiguration.EncoderInput();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)v28 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_26D638);
  __chkstk_darwin(v9 - 8);
  long long v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1FB0E0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v28 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v4[9];
  uint64_t v32 = v4[8];
  uint64_t v33 = v16;
  uint64_t v17 = v4[10];
  uint64_t v29 = (uint64_t (*)(char *))v4[12];
  uint64_t v30 = v17;
  uint64_t v31 = v4[13];
  sub_5606C(a3, (uint64_t)v11, &qword_26D638);
  uint64_t v34 = v13;
  uint64_t v35 = v12;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v11, 1, v12) == 1) {
    return sub_55F38((uint64_t)v11, &qword_26D638);
  }
  uint64_t v20 = v34;
  uint64_t v19 = v35;
  (*(void (**)(char *, char *, uint64_t))(v34 + 32))(v15, v11, v35);
  (*(void (**)(char *, char *, uint64_t))(v20 + 16))(v8, v15, v19);
  sub_52948(v32);
  uint64_t v21 = v30;
  sub_52948(v30);
  swift_retain();
  swift_retain();
  uint64_t v22 = v36;
  uint64_t v23 = v29(v8);
  if (v22)
  {
    sub_186B40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DateConfiguration.EncoderInput);
    sub_52958(v32);
    sub_52958(v21);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v15, v35);
  }
  else
  {
    uint64_t v36 = v23;
    sub_186B40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DateConfiguration.EncoderInput);
    sub_52958(v32);
    sub_52958(v21);
    swift_release();
    swift_release();
    swift_bridgeObjectRetain();
    uint64_t v24 = sub_1FAD70();
    uint64_t v25 = v15;
    if (v24) {
      uint64_t v26 = (void *)v24;
    }
    else {
      uint64_t v26 = _swiftEmptyArrayStorage;
    }
    sub_12124(&qword_26D5F0);
    sub_1FAD60();
    uint64_t v27 = swift_allocObject();
    *(_OWORD *)(v27 + 16) = xmmword_1FD2A0;
    swift_bridgeObjectRetain();
    sub_1FAD50();
    swift_bridgeObjectRelease();
    uint64_t v37 = v26;
    sub_AAEA8(v27);
    sub_1FAD80();
    swift_bridgeObjectRelease_n();
    return (*(uint64_t (**)(char *, uint64_t))(v34 + 8))(v25, v35);
  }
}

uint64_t ClientConverter.addQueryItem<A>(name:value:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  return URLComponents.addQueryItem<A>(name:value:)(a1, a2, a3, a5, a6);
}

uint64_t ClientConverter.getComplexHeaderRequired<A>(_:in:as:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v26 = a6;
  uint64_t v12 = sub_1FBEB0();
  uint64_t v23 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v22 - v13;
  uint64_t v15 = *(void *)(a3 + 8);
  v24[0] = *(void *)a3;
  v24[1] = v15;
  long long v25 = *(_OWORD *)(a3 + 16);
  uint64_t result = ClientConverter.getComplexHeaderOptional<A>(_:in:as:)(a1, a2, (uint64_t)v24, a4, a5, (uint64_t)&v22 - v13);
  if (!v6)
  {
    uint64_t v17 = v23;
    uint64_t v18 = a2;
    uint64_t v19 = v26;
    uint64_t v20 = *(void *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v20 + 48))(v14, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v17 + 8))(v14, v12);
      sub_52198();
      swift_allocError();
      *(void *)uint64_t v21 = a1;
      *(void *)(v21 + 8) = v18;
      *(unsigned char *)(v21 + 16) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v20 + 32))(v19, v14, a4);
    }
  }
  return result;
}

uint64_t ClientConverter.getComplexHeaderOptional<A>(_:in:as:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X5>, uint64_t a6@<X8>)
{
  uint64_t v43 = a2;
  uint64_t v13 = sub_1FB870();
  uint64_t v14 = __chkstk_darwin(v13);
  uint64_t v17 = (char *)v31 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = *(void *)(a3 + 8);
  uint64_t v19 = *(void *)(v18 + 16);
  if (!v19)
  {
    uint64_t v22 = 1;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, v22, 1, a4);
  }
  uint64_t v32 = v17;
  uint64_t v33 = v15;
  uint64_t v34 = v14;
  uint64_t v35 = a6;
  uint64_t v36 = a4;
  uint64_t v37 = v7;
  v31[1] = *(void *)(v6 + 136);
  v31[2] = a5;
  swift_bridgeObjectRetain_n();
  sub_51438();
  uint64_t v38 = v18;
  uint64_t v20 = v18 + 56;
  while (1)
  {
    uint64_t v21 = *(void *)(v20 - 16);
    uint64_t v41 = *(void *)(v20 - 24);
    uint64_t v42 = v21;
    uint64_t v39 = a1;
    uint64_t v40 = v43;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!sub_1FBF00()) {
      break;
    }
    v20 += 32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v19)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v22 = 1;
      a4 = v36;
      a6 = v35;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, v22, 1, a4);
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v24 = v32;
  sub_1FB850();
  uint64_t v25 = sub_1FB820();
  unint64_t v27 = v26;
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v33 + 8))(v24, v34);
  if (v27 >> 60 == 15)
  {
    sub_52198();
    swift_allocError();
    uint64_t v28 = v43;
    *(void *)uint64_t v29 = a1;
    *(void *)(v29 + 8) = v28;
    *(unsigned char *)(v29 + 16) = 3;
    swift_bridgeObjectRetain();
    return swift_willThrow();
  }
  a6 = v35;
  a4 = v36;
  uint64_t v30 = v37;
  sub_1FAC00();
  uint64_t result = sub_134480(v25, v27);
  if (!v30)
  {
    uint64_t v22 = 0;
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 - 8) + 56))(a6, v22, 1, a4);
  }
  return result;
}

uint64_t ClientConverter.getPrimitiveHeaderOptional<A>(_:in:as:)@<X0>(uint64_t a1@<X4>, uint64_t a2@<X8>)
{
  return swift_bridgeObjectRelease();
}

uint64_t ClientConverter.getPrimitiveHeaderRequired<A>(_:in:as:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v25 = a5;
  uint64_t v10 = sub_1FBEB0();
  uint64_t v21 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = a3[1];
  uint64_t v22 = *a3;
  uint64_t v23 = v13;
  long long v24 = *((_OWORD *)a3 + 1);
  uint64_t result = ClientConverter.getPrimitiveHeaderOptional<A>(_:in:as:)(a4, (uint64_t)&v20 - v11);
  if (!v5)
  {
    uint64_t v15 = v21;
    uint64_t v16 = a2;
    uint64_t v17 = v25;
    uint64_t v18 = *(void *)(a4 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v18 + 48))(v12, 1, a4) == 1)
    {
      (*(void (**)(char *, uint64_t))(v15 + 8))(v12, v10);
      sub_52198();
      swift_allocError();
      *(void *)uint64_t v19 = a1;
      *(void *)(v19 + 8) = v16;
      *(unsigned char *)(v19 + 16) = 2;
      swift_bridgeObjectRetain();
      return swift_willThrow();
    }
    else
    {
      return (*(uint64_t (**)(uint64_t, char *, uint64_t))(v18 + 32))(v17, v12, a4);
    }
  }
  return result;
}

uint64_t ClientConverter.getPrimitiveHeaderOptional(_:in:as:)@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X8>)
{
  uint64_t v21 = a1;
  uint64_t v5 = a3;
  uint64_t v6 = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(v6 + 16);
  if (v7)
  {
    uint64_t v16 = v3[8];
    uint64_t v17 = v3[10];
    uint64_t v15 = (void (*)(uint64_t *))v3[14];
    swift_bridgeObjectRetain_n();
    sub_51438();
    uint64_t v8 = (uint64_t *)(v6 + 56);
    while (1)
    {
      uint64_t v10 = *(v8 - 1);
      uint64_t v9 = *v8;
      uint64_t v11 = *(v8 - 2);
      uint64_t v19 = *(v8 - 3);
      uint64_t v20 = v11;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!sub_1FBF00()) {
        break;
      }
      v8 += 4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v7)
      {
        swift_bridgeObjectRelease_n();
        uint64_t v5 = a3;
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t v19 = v10;
    uint64_t v20 = v9;
    swift_bridgeObjectRetain();
    sub_52948(v16);
    sub_52948(v17);
    swift_retain();
    swift_retain();
    v15(&v19);
    swift_bridgeObjectRelease();
    sub_52958(v16);
    sub_52958(v17);
    swift_bridgeObjectRelease();
    swift_release();
    uint64_t result = swift_release();
    if (!v4)
    {
      uint64_t v14 = sub_1FB0E0();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v14 - 8) + 56))(a3, 0, 1, v14);
    }
  }
  else
  {
LABEL_6:
    uint64_t v12 = sub_1FB0E0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56))(v5, 1, 1, v12);
  }
  return result;
}

uint64_t ClientConverter.addComplexHeader<A>(name:value:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  long long v7 = *(_OWORD *)(v6 + 112);
  v16[6] = *(_OWORD *)(v6 + 96);
  v16[7] = v7;
  v16[8] = *(_OWORD *)(v6 + 128);
  uint64_t v17 = *(void *)(v6 + 144);
  long long v8 = *(_OWORD *)(v6 + 48);
  uint64_t v16[2] = *(_OWORD *)(v6 + 32);
  v16[3] = v8;
  long long v9 = *(_OWORD *)(v6 + 80);
  uint64_t v16[4] = *(_OWORD *)(v6 + 64);
  v16[5] = v9;
  long long v10 = *(_OWORD *)(v6 + 16);
  v16[0] = *(_OWORD *)v6;
  v16[1] = v10;
  v13[2] = a5;
  v13[3] = a6;
  v13[4] = v16;
  v13[5] = a1;
  v13[6] = a2;
  v13[7] = a4;
  sub_1FBEB0();
  uint64_t v11 = sub_12124(&qword_26D670);
  return sub_17F5D0((void (*)(char *, char *))sub_1849CC, (uint64_t)v13, v11, (uint64_t)&type metadata for () + 8, (uint64_t)&v14, (uint64_t)&v15);
}

uint64_t sub_184180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t *a8)
{
  uint64_t v11 = sub_1FB870();
  __chkstk_darwin(v11 - 8);
  uint64_t result = sub_1FACB0();
  uint64_t v14 = v8;
  if (v8) {
    goto LABEL_2;
  }
  uint64_t v15 = result;
  unint64_t v16 = v13;
  uint64_t v30 = a3;
  sub_1FB850();
  uint64_t v17 = sub_1FB830();
  if (!v18)
  {
    sub_52198();
    uint64_t v14 = swift_allocError();
    *(void *)uint64_t v28 = a3;
    *(void *)(v28 + 8) = a4;
    *(unsigned char *)(v28 + 16) = 4;
    swift_bridgeObjectRetain();
    swift_willThrow();
    uint64_t result = sub_520E8(v15, v16);
LABEL_2:
    *a8 = v14;
    return result;
  }
  uint64_t v19 = v17;
  uint64_t v20 = v18;
  uint64_t v21 = *(int *)(type metadata accessor for ClientCurrency.Request() + 24);
  uint64_t v22 = *(void **)(a5 + v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a5 + v21) = v22;
  if ((isUniquelyReferenced_nonNull_native & 1) == 0)
  {
    uint64_t v22 = sub_41A9C(0, v22[2] + 1, 1, v22);
    *(void *)(a5 + v21) = v22;
  }
  unint64_t v25 = v22[2];
  unint64_t v24 = v22[3];
  uint64_t v26 = v30;
  if (v25 >= v24 >> 1)
  {
    uint64_t v29 = sub_41A9C((void *)(v24 > 1), v25 + 1, 1, v22);
    uint64_t v26 = v30;
    uint64_t v22 = v29;
    *(void *)(a5 + v21) = v29;
  }
  void v22[2] = v25 + 1;
  unint64_t v27 = &v22[4 * v25];
  _OWORD v27[4] = v26;
  _OWORD v27[5] = a4;
  v27[6] = v19;
  v27[7] = v20;
  swift_bridgeObjectRelease();
  return sub_520E8(v15, v16);
}

uint64_t ClientConverter.addPrimitiveHeader(name:value:to:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v33 = a2;
  uint64_t v34 = a4;
  uint64_t v32 = a1;
  uint64_t v6 = type metadata accessor for DateConfiguration.EncoderInput();
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (char *)&v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_12124(&qword_26D638);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1FB0E0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v31 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = v4[9];
  uint64_t v36 = v4[8];
  uint64_t v37 = v16;
  uint64_t v38 = v4[10];
  uint64_t v35 = (uint64_t (*)(char *))v4[12];
  uint64_t v18 = v17;
  sub_5606C(a3, (uint64_t)v11, &qword_26D638);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t (*)(char *)))(v13 + 48))(v11, 1, v18) == 1) {
    return sub_55F38((uint64_t)v11, &qword_26D638);
  }
  (*(void (**)(char *, char *, uint64_t (*)(char *)))(v13 + 32))(v15, v11, v18);
  (*(void (**)(char *, char *, uint64_t (*)(char *)))(v13 + 16))(v8, v15, v18);
  sub_52948(v36);
  sub_52948(v38);
  swift_retain();
  swift_retain();
  uint64_t v20 = v39;
  uint64_t v21 = v35(v8);
  if (v20)
  {
    sub_186B40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DateConfiguration.EncoderInput);
    sub_52958(v36);
    sub_52958(v38);
    swift_release();
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t (*)(char *)))(v13 + 8))(v15, v18);
  }
  else
  {
    uint64_t v23 = v22;
    uint64_t v31 = v21;
    uint64_t v35 = v18;
    uint64_t v39 = v15;
    sub_186B40((uint64_t)v8, (uint64_t (*)(void))type metadata accessor for DateConfiguration.EncoderInput);
    sub_52958(v36);
    sub_52958(v38);
    swift_release();
    swift_release();
    uint64_t v24 = *(int *)(type metadata accessor for ClientCurrency.Request() + 24);
    uint64_t v25 = v34;
    uint64_t v26 = *(void **)(v34 + v24);
    swift_bridgeObjectRetain_n();
    uint64_t v27 = v33;
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v26 = sub_41A9C(0, v26[2] + 1, 1, v26);
    }
    unint64_t v29 = v26[2];
    unint64_t v28 = v26[3];
    if (v29 >= v28 >> 1) {
      uint64_t v26 = sub_41A9C((void *)(v28 > 1), v29 + 1, 1, v26);
    }
    v26[2] = v29 + 1;
    uint64_t v30 = &v26[4 * v29];
    v30[4] = v32;
    v30[5] = v27;
    v30[6] = v31;
    v30[7] = v23;
    swift_bridgeObjectRelease_n();
    *(void *)(v25 + v24) = v26;
    return (*(uint64_t (**)(char *, uint64_t (*)(char *)))(v13 + 8))(v39, v35);
  }
}

uint64_t sub_18477C@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18184C(a1, v2[4], v2[2], v2[3], a2);
}

uint64_t sub_184788@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_182498(a1, v2[4], v2[5], v2[2], v2[3], a2);
}

uint64_t sub_184794(uint64_t a1)
{
  long long v9 = *(_OWORD *)(v1 + 48);
  uint64_t v4 = *(void *)(v1 + 64);
  uint64_t v5 = *(void *)(v1 + 72);
  uint64_t v6 = swift_task_alloc();
  long long v7 = *(_OWORD *)(v1 + 32);
  *(void *)(v2 + 16) = v6;
  *(void *)uint64_t v6 = v2;
  *(void *)(v6 + 8) = sub_5958;
  *(void *)(v6 + 56) = v4;
  *(void *)(v6 + 64) = v5;
  *(_OWORD *)(v6 + 40) = v9;
  *(_OWORD *)(v6 + 24) = v7;
  *(void *)(v6 + 16) = a1;
  return _swift_task_switch(sub_182638, 0, 0);
}

uint64_t sub_184870@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1826D0(a1, *(void *)(v2 + 32), *(void *)(v2 + 40), *(void *)(v2 + 48), *(void *)(v2 + 56), *(void *)(v2 + 64), *(void *)(v2 + 72), *(void *)(v2 + 16), a2, *(void *)(v2 + 24));
}

uint64_t sub_1848A4()
{
  return *(void *)v0;
}

uint64_t sub_1848AC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_270858);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

void sub_184914(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (a2)
  {
    swift_bridgeObjectRetain();
    sub_52090(a3, a4);
  }
}

uint64_t sub_184960(uint64_t a1)
{
  return *(void *)(v1 + *(int *)(a1 + 48));
}

uint64_t type metadata accessor for GeneralClientError()
{
  return sub_187654();
}

uint64_t sub_184984(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1849CC(uint64_t a1, uint64_t *a2)
{
  return sub_184180(a1, v2[4], v2[5], v2[6], v2[7], v2[2], v2[3], a2);
}

uint64_t sub_1849F4(uint64_t a1)
{
  *(void *)(a1 + 8) = swift_getWitnessTable();
  uint64_t result = swift_getWitnessTable();
  *(void *)(a1 + 16) = result;
  return result;
}

uint64_t sub_184A54()
{
  return swift_getWitnessTable();
}

uint64_t sub_184A70()
{
  return sub_184984((unint64_t *)&qword_2708A8, (void (*)(uint64_t))type metadata accessor for ClientErrorPayload);
}

uint64_t dispatch thunk of ClientError.operationId.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

uint64_t dispatch thunk of ClientError.request.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 32))();
}

uint64_t dispatch thunk of ClientError.response.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 40))();
}

uint64_t dispatch thunk of ClientError.underlyingError.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 48))();
}

uint64_t sub_184B08(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 40);
}

void sub_184B10()
{
  swift_getAssociatedTypeWitness();
  if (v0 <= 0x3F)
  {
    sub_186554();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

uint64_t *sub_184C0C(uint64_t *a1, uint64_t *a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  int v6 = *(_DWORD *)(v5 + 80);
  uint64_t v7 = v6;
  uint64_t v8 = *(void *)(v5 + 64);
  uint64_t v9 = sub_1FAF80();
  uint64_t v10 = *(void *)(v9 - 8);
  int v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = *(unsigned int *)(v10 + 84);
  uint64_t v13 = v11 & 0xF8 | 7;
  uint64_t v14 = *(void *)(v10 + 64) + 7;
  uint64_t v15 = v8 + v13;
  int v16 = (v11 | v6) & 0x100000;
  if ((v13 | v6) != 7
    || v16 != 0
    || ((((v15 + ((v6 + 16) & ~(unint64_t)v6)) & ~v13)
       + (((((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
       + 16
       + 39) & 0xFFFFFFFFFFFFFFF8)
     + 8 > 0x18)
  {
    uint64_t v19 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v19 + (((v13 | v6) + 16) & ~(v13 | v6)));
    swift_retain();
    return a1;
  }
  uint64_t v46 = v9;
  uint64_t v20 = ~v13;
  uint64_t v21 = a2[1];
  *a1 = *a2;
  a1[1] = v21;
  uint64_t v47 = a1;
  uint64_t v22 = (char *)a2 + v7;
  uint64_t v23 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v24 = (unint64_t)(v22 + 16) & ~v7;
  uint64_t v25 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
  swift_bridgeObjectRetain();
  v25(v23, v24, AssociatedTypeWitness);
  uint64_t v26 = (char *)((v23 + v15) & v20);
  uint64_t v27 = (v24 + v15) & v20;
  if (v12 < 0x7FFFFFFF)
  {
    unint64_t v30 = *(void *)(((v14 + v27) & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v30 >= 0xFFFFFFFF) {
      LODWORD(v30) = -1;
    }
    size_t v29 = (((((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v30 != -1) {
      goto LABEL_12;
    }
LABEL_16:
    (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))(v26, (v24 + v15) & v20, v46);
    uint64_t v31 = (void *)((unint64_t)&v26[v14] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v32 = (void *)((v14 + v27) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v31 = *v32;
    v31[1] = v32[1];
    uint64_t v33 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v34 = (void *)(((unint64_t)v32 + 23) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v33 = *v34;
    unint64_t v35 = ((unint64_t)v33 + 15) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v36 = (uint64_t *)(((unint64_t)v34 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v37 = v36[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v37 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v35 = *(_OWORD *)v36;
    }
    else
    {
      uint64_t v38 = *v36;
      sub_52090(*v36, v37);
      *(void *)unint64_t v35 = v38;
      *(void *)(v35 + 8) = v37;
    }
    a1 = v47;
    goto LABEL_20;
  }
  int v28 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v10 + 48))((v24 + v15) & v20, v12, v46);
  size_t v29 = (((((v14 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (!v28) {
    goto LABEL_16;
  }
LABEL_12:
  memcpy(v26, (const void *)((v24 + v15) & v20), v29);
LABEL_20:
  uint64_t v39 = &v26[v29];
  size_t v40 = v29 + v27;
  if (*(void *)(v29 + v27 + 8) < 0xFFFFFFFFuLL)
  {
    long long v43 = *(_OWORD *)(v40 + 16);
    *(_OWORD *)uint64_t v39 = *(_OWORD *)v40;
    *((_OWORD *)v39 + 1) = v43;
  }
  else
  {
    *(void *)uint64_t v39 = *(void *)v40;
    *((void *)v39 + 1) = *(void *)(v40 + 8);
    uint64_t v41 = *(void *)(v40 + 16);
    unint64_t v42 = *(void *)(v40 + 24);
    swift_bridgeObjectRetain();
    sub_52090(v41, v42);
    *((void *)v39 + 2) = v41;
    *((void *)v39 + 3) = v42;
  }
  uint64_t v44 = *(void *)((v40 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_errorRetain();
  *(void *)((unint64_t)(v39 + 39) & 0xFFFFFFFFFFFFFFF8) = v44;
  return a1;
}

uint64_t sub_184F68(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v3 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t, uint64_t))(v3 + 8))(v5, AssociatedTypeWitness);
  uint64_t v6 = *(void *)(v4 + 56);
  uint64_t v7 = sub_1FAF80();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80) & 0xF8 | 7;
  unint64_t v10 = (v5 + v6 + v9) & ~v9;
  uint64_t v11 = *(void *)(v8 + 64) + 7;
  unint64_t v12 = (((v11 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15;
  if (*(_DWORD *)(v8 + 84) >= 0x7FFFFFFFu)
  {
    unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFF8;
    if ((*(unsigned int (**)(unint64_t))(v8 + 48))(v10)) {
      goto LABEL_9;
    }
    goto LABEL_7;
  }
  unint64_t v14 = *(void *)(((v11 + v10) & 0xFFFFFFFFFFFFFFF8) + 8);
  if (v14 >= 0xFFFFFFFF) {
    LODWORD(v14) = -1;
  }
  unint64_t v13 = v12 & 0xFFFFFFFFFFFFFFF8;
  if (v14 == -1)
  {
LABEL_7:
    (*(void (**)(unint64_t, uint64_t))(v8 + 8))(v10, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v15 = (uint64_t *)((((((v11 + v10) & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v16 = v15[1];
    if ((v16 & 0x3000000000000000) == 0) {
      sub_520E8(*v15, v16);
    }
  }
LABEL_9:
  unint64_t v17 = v10 + v13;
  uint64_t v18 = v10 + v13 + 16;
  if (*(void *)(v17 + 24) >= 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    sub_520E8(*(void *)(v18 + 16), *(void *)(v18 + 24));
  }

  return swift_errorRelease();
}

void *sub_185168(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 16);
  uint64_t v8 = v6 + 16;
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v10 = ((unint64_t)a1 + v9 + 16) & ~v9;
  uint64_t v11 = ((unint64_t)a2 + v9 + 16) & ~v9;
  swift_bridgeObjectRetain();
  v7(v10, v11, AssociatedTypeWitness);
  uint64_t v12 = *(void *)(v8 + 48);
  uint64_t v13 = sub_1FAF80();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(_DWORD *)(v14 + 80) & 0xF8 | 7;
  uint64_t v16 = v12 + v15 + v11;
  unint64_t v17 = (char *)((v12 + v15 + v10) & ~v15);
  uint64_t v18 = (char *)(v16 & ~v15);
  uint64_t v19 = *(void *)(v14 + 64) + 7;
  unint64_t v20 = ((((v19 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_DWORD *)(v14 + 84) < 0x7FFFFFFFu)
  {
    unint64_t v22 = *(void *)(((unint64_t)&v18[v19] & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v22 >= 0xFFFFFFFF) {
      LODWORD(v22) = -1;
    }
    size_t v21 = v20 + 16;
    if (v22 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v18, v13);
    uint64_t v23 = (void *)((unint64_t)&v17[v19] & 0xFFFFFFFFFFFFFFF8);
    uint64_t v24 = (void *)((unint64_t)&v18[v19] & 0xFFFFFFFFFFFFFFF8);
    void *v23 = *v24;
    v23[1] = v24[1];
    uint64_t v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v26 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
    void *v25 = *v26;
    unint64_t v27 = ((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8;
    int v28 = (uint64_t *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v29 = v28[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((v29 & 0x3000000000000000) != 0)
    {
      *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
    }
    else
    {
      uint64_t v30 = *v28;
      sub_52090(*v28, v29);
      *(void *)unint64_t v27 = v30;
      *(void *)(v27 + 8) = v29;
    }
    goto LABEL_10;
  }
  size_t v21 = v20 + 16;
  if (!(*(unsigned int (**)(char *))(v14 + 48))(v18)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(v17, v18, v21);
LABEL_10:
  uint64_t v31 = &v17[v21];
  uint64_t v32 = &v18[v21];
  if (*((void *)v32 + 1) < 0xFFFFFFFFuLL)
  {
    long long v35 = *((_OWORD *)v32 + 1);
    *(_OWORD *)uint64_t v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v35;
  }
  else
  {
    *(void *)uint64_t v31 = *(void *)v32;
    *((void *)v31 + 1) = *((void *)v32 + 1);
    uint64_t v33 = *((void *)v32 + 2);
    unint64_t v34 = *((void *)v32 + 3);
    swift_bridgeObjectRetain();
    sub_52090(v33, v34);
    *((void *)v31 + 2) = v33;
    *((void *)v31 + 3) = v34;
  }
  uint64_t v36 = *(void *)((unint64_t)(v32 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_errorRetain();
  *(void *)((unint64_t)(v31 + 39) & 0xFFFFFFFFFFFFFFF8) = v36;
  return a1;
}

void *sub_185420(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = v5 + 24;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 24))(v8, v9, AssociatedTypeWitness);
  uint64_t v10 = *(void *)(v6 + 40);
  uint64_t v11 = sub_1FAF80();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = *(unsigned int *)(v12 + 84);
  uint64_t v14 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  uint64_t v15 = v10 + v14 + v9;
  uint64_t v16 = (char *)((v10 + v14 + v8) & ~v14);
  unint64_t v17 = (char *)(v15 & ~v14);
  uint64_t v18 = *(void *)(v12 + 64) + 7;
  size_t v19 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v13 < 0x7FFFFFFF)
  {
    unint64_t v30 = *(void *)(((unint64_t)&v17[v18] & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v30 >= 0xFFFFFFFF) {
      LODWORD(v30) = -1;
    }
    int v22 = v30 + 1;
    if (*(void *)(((unint64_t)&v16[v18] & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL)
    {
LABEL_3:
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v12 + 16))(v16, v17, v11);
        uint64_t v23 = (void *)((unint64_t)&v16[v18] & 0xFFFFFFFFFFFFFFF8);
        uint64_t v24 = (void *)((unint64_t)&v17[v18] & 0xFFFFFFFFFFFFFFF8);
        void *v23 = *v24;
        v23[1] = v24[1];
        uint64_t v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
        uint64_t v26 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
        void *v25 = *v26;
        unint64_t v27 = (uint64_t *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8);
        unint64_t v28 = ((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8;
        unint64_t v29 = *(void *)(v28 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if ((v29 & 0x3000000000000000) != 0)
        {
          *(_OWORD *)unint64_t v27 = *(_OWORD *)v28;
          goto LABEL_13;
        }
        uint64_t v54 = *(void *)v28;
        goto LABEL_25;
      }
LABEL_12:
      memcpy(v16, v17, v19);
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v12 + 48);
    int v21 = v20(v16, v13, v11);
    int v22 = v20(v17, v13, v11);
    size_t v19 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v21) {
      goto LABEL_3;
    }
  }
  uint64_t v31 = (void *)((unint64_t)&v16[v18] & 0xFFFFFFFFFFFFFFF8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v12 + 8))(v16, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v32 = (uint64_t *)(((((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v33 = v32[1];
    if ((v33 & 0x3000000000000000) == 0) {
      sub_520E8(*v32, v33);
    }
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 24))(v16, v17, v11);
  uint64_t v46 = (void *)((unint64_t)&v17[v18] & 0xFFFFFFFFFFFFFFF8);
  *uint64_t v31 = *v46;
  v31[1] = v46[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v47 = (void *)(((unint64_t)v31 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v48 = (uint64_t *)(((unint64_t)v46 + 23) & 0xFFFFFFFFFFFFFFF8);
  uint64_t v50 = *v48;
  unint64_t v49 = (unint64_t)v48 + 15;
  *uint64_t v47 = v50;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v27 = (uint64_t *)(((unint64_t)v47 + 15) & 0xFFFFFFFFFFFFFFF8);
  long long v51 = (uint64_t *)(v49 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v52 = v27[1];
  unint64_t v29 = *(void *)((v49 & 0xFFFFFFFFFFFFFFF8) + 8);
  uint64_t v53 = v29 & 0x3000000000000000;
  if ((v52 & 0x3000000000000000) != 0)
  {
    if (!v53)
    {
      uint64_t v54 = *v51;
LABEL_25:
      sub_52090(v54, v29);
      uint64_t *v27 = v54;
      v27[1] = v29;
      goto LABEL_13;
    }
    goto LABEL_28;
  }
  if (v53)
  {
    sub_520E8(*v27, v52);
LABEL_28:
    *(_OWORD *)unint64_t v27 = *(_OWORD *)v51;
    goto LABEL_13;
  }
  uint64_t v55 = *v51;
  sub_52090(v55, *(void *)((v49 & 0xFFFFFFFFFFFFFFF8) + 8));
  uint64_t v56 = *v27;
  unint64_t v57 = v27[1];
  uint64_t *v27 = v55;
  v27[1] = v29;
  sub_520E8(v56, v57);
LABEL_13:
  unint64_t v34 = &v16[v19];
  long long v35 = &v17[v19];
  unint64_t v36 = *(void *)&v17[v19 + 8];
  if (*(void *)&v16[v19 + 8] < 0xFFFFFFFFuLL)
  {
    if (v36 >= 0xFFFFFFFF)
    {
      *(void *)unint64_t v34 = *(void *)v35;
      *((void *)v34 + 1) = *((void *)v35 + 1);
      uint64_t v41 = *((void *)v35 + 2);
      unint64_t v42 = *((void *)v35 + 3);
      swift_bridgeObjectRetain();
      sub_52090(v41, v42);
      *((void *)v34 + 2) = v41;
      *((void *)v34 + 3) = v42;
      goto LABEL_20;
    }
LABEL_19:
    long long v43 = *((_OWORD *)v35 + 1);
    *(_OWORD *)unint64_t v34 = *(_OWORD *)v35;
    *((_OWORD *)v34 + 1) = v43;
    goto LABEL_20;
  }
  if (v36 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    sub_520E8(*((void *)v34 + 2), *((void *)v34 + 3));
    goto LABEL_19;
  }
  *(void *)unint64_t v34 = *(void *)v35;
  *((void *)v34 + 1) = *((void *)v35 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v37 = *((void *)v35 + 2);
  unint64_t v38 = *((void *)v35 + 3);
  sub_52090(v37, v38);
  uint64_t v39 = *((void *)v34 + 2);
  unint64_t v40 = *((void *)v34 + 3);
  *((void *)v34 + 2) = v37;
  *((void *)v34 + 3) = v38;
  sub_520E8(v39, v40);
LABEL_20:
  uint64_t v44 = *(void *)((unint64_t)(v35 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_errorRetain();
  *(void *)((unint64_t)(v34 + 39) & 0xFFFFFFFFFFFFFFF8) = v44;
  swift_errorRelease();
  return a1;
}