uint64_t sub_4DD4(uint64_t a1)
{
  uint64_t v1;
  uint64_t v2;

  *(void *)(v2 + 4504) = v1;
  *(void *)(v2 + 4496) = a1;
  return _swift_task_switch(sub_4DF8, 0, 0);
}

uint64_t sub_4DF8()
{
  v1 = *(void **)(v0 + 4504);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 4512) = v4;
  void *v4 = v0;
  v4[1] = sub_4F14;
  return v6(v0 + 16, v2, v3);
}

uint64_t sub_4F14()
{
  *(void *)(*(void *)v1 + 4520) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_564C;
  }
  else {
    uint64_t v2 = sub_5028;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_5028()
{
  uint64_t v1 = (void *)v0[563];
  memcpy(v0 + 142, v0 + 2, 0x460uLL);
  uint64_t v2 = v0[195];
  uint64_t v3 = v1 + 12;
  uint64_t v4 = v1[15];
  uint64_t v5 = v1[16];
  sub_5D64(v3, v4);
  memcpy(v0 + 282, v0 + 142, 0x460uLL);
  v8 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v5 + 8) + **(int **)(v5 + 8));
  v6 = (void *)swift_task_alloc();
  v0[566] = v6;
  void *v6 = v0;
  v6[1] = sub_5174;
  return v8(v0 + 282, v2, v4, v5);
}

uint64_t sub_5174(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 4536) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_5664;
  }
  else
  {
    *(void *)(v4 + 4544) = a1;
    uint64_t v5 = sub_529C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_529C()
{
  uint64_t v1 = (void *)v0[563];
  uint64_t v2 = sub_5DA8((uint64_t)&_swiftEmptyDictionarySingleton, v0[568]);
  uint64_t v3 = sub_6308(v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_6DD4(v3);
  v0[569] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = v1[10];
  uint64_t v6 = v1[11];
  sub_5D64(v1 + 7, v5);
  memcpy(v0 + 422, v0 + 142, 0x460uLL);
  uint64_t v9 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v6 + 8) + **(int **)(v6 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  v0[570] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_5420;
  return v9(v4, v0 + 422, v5, v6);
}

uint64_t sub_5420(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 4568) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_55DC;
  }
  else
  {
    *(void *)(v4 + 4576) = a1;
    uint64_t v5 = sub_5548;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_5548()
{
  sub_56C8(*(void *)(v0 + 4576), *(char **)(v0 + 4496));
  swift_bridgeObjectRelease();
  swift_release();
  sub_11D3C(v0 + 1136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_55DC()
{
  swift_release();
  sub_11D3C(v0 + 1136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_564C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_5664()
{
  sub_11D3C(v0 + 1136);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_56C8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  uint64_t result = sub_12278(a1);
  if (v6) {
    goto LABEL_8;
  }
  if (*(_DWORD *)(a1 + 36) != v5)
  {
    __break(1u);
LABEL_8:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32))
  {
    char v7 = 2;
  }
  else
  {
    uint64_t result = sub_11CE8(result, v5, a1, &v8);
    char v7 = v8;
  }
  *a2 = v7;
  return result;
}

uint64_t sub_5744(uint64_t a1)
{
  uint64_t result = sub_14D538(a1);
  if (v4) {
    goto LABEL_7;
  }
  if (*(_DWORD *)(a1 + 36) != v3)
  {
    __break(1u);
LABEL_7:
    __break(1u);
    return result;
  }
  if (result == 1 << *(unsigned char *)(a1 + 32)) {
    return 0;
  }
  else {
    return sub_1C504C(result, v3, 0, a1);
  }
}

uint64_t sub_57C0()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for MediaTypesMediaTypeRecommendationService()
{
  return self;
}

__n128 sub_582C(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u32[0] = a2[1].n128_u32[0];
  *a1 = result;
  return result;
}

uint64_t sub_5844(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 20)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_5864(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(_DWORD *)(result + 16) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 20) = v3;
  return result;
}

void type metadata accessor for Decimal(uint64_t a1)
{
}

uint64_t sub_58A4(uint64_t a1)
{
  uint64_t v4 = *v1;
  int v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *int v5 = v2;
  v5[1] = sub_5958;
  v5[563] = v4;
  v5[562] = a1;
  return _swift_task_switch(sub_4DF8, 0, 0);
}

uint64_t sub_5958()
{
  uint64_t v3 = *v0;
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v3 + 8);
  return v1();
}

uint64_t sub_5A4C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[144] = a3;
  v4[143] = a2;
  v4[142] = a1;
  v4[145] = *v3;
  return _swift_task_switch(sub_5A7C, 0, 0);
}

uint64_t sub_5A7C()
{
  uint64_t v1 = (void *)v0[145];
  uint64_t v2 = (const void *)v0[144];
  uint64_t v3 = v1[10];
  uint64_t v4 = v1[11];
  sub_5D64(v1 + 7, v3);
  memcpy(v0 + 2, v2, 0x460uLL);
  char v8 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  int v5 = (void *)swift_task_alloc();
  v0[146] = v5;
  *int v5 = v0;
  v5[1] = sub_5BB0;
  uint64_t v6 = v0[143];
  return v8(v6, v0 + 2, v3, v4);
}

uint64_t sub_5BB0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    int v5 = sub_5D4C;
  }
  else
  {
    *(void *)(v4 + 1184) = a1;
    int v5 = sub_5CD8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_5CD8()
{
  sub_56C8(*(void *)(v0 + 1184), *(char **)(v0 + 1136));
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_5D4C()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

void *sub_5D64(void *result, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0) {
    return (void *)(*result
  }
                    + ((*(_DWORD *)(*(void *)(a2 - 8) + 80) + 16) & ~(unint64_t)*(_DWORD *)(*(void *)(a2 - 8) + 80)));
  return result;
}

uint64_t sub_5DA8(uint64_t a1, uint64_t a2)
{
  uint64_t v23 = a1;
  uint64_t v3 = a2 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(a2 + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  long long v20 = xmmword_1FD2A0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v9 << 6);
      goto LABEL_5;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v9 >= v7) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v9);
    if (!v17) {
      break;
    }
LABEL_19:
    unint64_t v6 = (v17 - 1) & v17;
    unint64_t v11 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_5:
    memcpy(v22, (const void *)(*(void *)(a2 + 56) + 560 * v11), 0x229uLL);
    char v12 = v22[1];
    memcpy(v21, v22, 0x229uLL);
    sub_12124(&qword_26C510);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = v20;
    *(unsigned char *)(v13 + 32) = v12;
    sub_12384(v22);
    Swift::Int v14 = sub_BD5F4(v13);
    swift_setDeallocating();
    uint64_t v15 = swift_deallocClassInstance();
    __chkstk_darwin(v15);
    v19[2] = &v23;
    v19[3] = v21;
    sub_6008((uint64_t (*)(char *))sub_1245C, (uint64_t)v19, v14);
    swift_bridgeObjectRelease();
    uint64_t result = (uint64_t)sub_124B4(v22);
  }
  int64_t v18 = v9 + 1;
  if (v9 + 1 >= v7) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v9 + 2;
  if (v9 + 2 >= v7) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v9 + 3;
  if (v9 + 3 >= v7) {
    goto LABEL_24;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17) {
    goto LABEL_18;
  }
  int64_t v18 = v9 + 4;
  if (v9 + 4 >= v7)
  {
LABEL_24:
    swift_release();
    return v23;
  }
  unint64_t v17 = *(void *)(v3 + 8 * v18);
  if (v17)
  {
LABEL_18:
    int64_t v9 = v18;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v7) {
      goto LABEL_24;
    }
    unint64_t v17 = *(void *)(v3 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_6008(uint64_t (*a1)(char *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    char v18 = *(unsigned char *)(*(void *)(a3 + 48) + v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_6188(uint64_t (*a1)(uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v6 = a3 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  while (v9)
  {
    unint64_t v13 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v14 = v13 | (v12 << 6);
LABEL_5:
    uint64_t v18 = *(void *)(*(void *)(a3 + 48) + 8 * v14);
    uint64_t result = a1(&v18);
    if (v3) {
      return swift_release();
    }
  }
  if (__OFADD__(v12++, 1))
  {
    __break(1u);
    goto LABEL_26;
  }
  if (v12 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v12);
  if (v16)
  {
LABEL_19:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v12 << 6);
    goto LABEL_5;
  }
  int64_t v17 = v12 + 1;
  if (v12 + 1 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 2;
  if (v12 + 2 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 3;
  if (v12 + 3 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16) {
    goto LABEL_18;
  }
  int64_t v17 = v12 + 4;
  if (v12 + 4 >= v10) {
    return swift_release();
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
LABEL_18:
    int64_t v12 = v17;
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v12 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v12 >= v10) {
      return swift_release();
    }
    unint64_t v16 = *(void *)(v6 + 8 * v12);
    ++v17;
    if (v16) {
      goto LABEL_19;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_6308(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26C4F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v39 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26C4E8);
  uint64_t v6 = __chkstk_darwin(v5);
  v43 = (char *)v39 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  v44 = (char *)v39 - v9;
  v45 = &_swiftEmptyDictionarySingleton;
  v50 = &_swiftEmptyDictionarySingleton;
  uint64_t v10 = *(void *)(a1 + 64);
  uint64_t v48 = a1 + 64;
  uint64_t v11 = -1 << *(unsigned char *)(a1 + 32);
  if (-v11 < 64) {
    uint64_t v12 = ~(-1 << -(char)v11);
  }
  else {
    uint64_t v12 = -1;
  }
  unint64_t v13 = v12 & v10;
  v39[1] = -1 << *(unsigned char *)(a1 + 32);
  unint64_t v14 = (unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48);
  uint64_t v40 = v8;
  v46 = (void (**)(char *, char *, uint64_t))(v8 + 32);
  int64_t v47 = (unint64_t)(63 - v11) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v16 = 0;
  uint64_t v41 = v5;
  if (!v13) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v17 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  unint64_t v18 = v17 | (v16 << 6);
  while (1)
  {
    char v19 = *(unsigned char *)(*(void *)(a1 + 48) + v18);
    uint64_t v49 = *(void *)(*(void *)(a1 + 56) + 8 * v18);
    swift_bridgeObjectRetain_n();
    sub_12124(&qword_26C500);
    sub_12168();
    sub_1FB3D0();
    if ((*v14)(v4, 1, v5) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_1220C((uint64_t)v4);
      if (v13) {
        goto LABEL_5;
      }
    }
    else
    {
      v24 = *v46;
      (*v46)(v44, v4, v5);
      v42 = v24;
      v24(v43, v44, v5);
      v25 = v45;
      unint64_t v26 = v45[2];
      if (v45[3] <= v26)
      {
        sub_117324(v26 + 1, 1);
        v25 = v50;
      }
      v27 = v25;
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      v28 = v27 + 8;
      v45 = v27;
      uint64_t v29 = -1 << *((unsigned char *)v27 + 32);
      unint64_t v30 = result & ~v29;
      unint64_t v31 = v30 >> 6;
      unint64_t v32 = (-1 << v30) & ~v27[(v30 >> 6) + 8];
      uint64_t v5 = v41;
      if (!v32)
      {
        char v34 = 0;
        unint64_t v35 = (unint64_t)(63 - v29) >> 6;
        while (++v31 != v35 || (v34 & 1) == 0)
        {
          BOOL v36 = v31 == v35;
          if (v31 == v35) {
            unint64_t v31 = 0;
          }
          v34 |= v36;
          uint64_t v37 = v28[v31];
          if (v37 != -1)
          {
            unint64_t v33 = __clz(__rbit64(~v37)) + (v31 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v33 = __clz(__rbit64(v32)) | v30 & 0x7FFFFFFFFFFFFFC0;
LABEL_36:
      *(void *)((char *)v28 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
      v38 = v45;
      *(unsigned char *)(v45[6] + v33) = v19;
      v42((char *)(v38[7] + *(void *)(v40 + 72) * v33), v43, v5);
      ++v38[2];
      uint64_t result = swift_bridgeObjectRelease();
      if (v13) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v20 >= v47) {
      goto LABEL_38;
    }
    unint64_t v21 = *(void *)(v48 + 8 * v20);
    int64_t v22 = v16 + 1;
    if (!v21)
    {
      int64_t v22 = v16 + 2;
      if (v16 + 2 >= v47) {
        goto LABEL_38;
      }
      unint64_t v21 = *(void *)(v48 + 8 * v22);
      if (!v21)
      {
        int64_t v22 = v16 + 3;
        if (v16 + 3 >= v47) {
          goto LABEL_38;
        }
        unint64_t v21 = *(void *)(v48 + 8 * v22);
        if (!v21)
        {
          int64_t v22 = v16 + 4;
          if (v16 + 4 >= v47) {
            goto LABEL_38;
          }
          unint64_t v21 = *(void *)(v48 + 8 * v22);
          if (!v21) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v13 = (v21 - 1) & v21;
    unint64_t v18 = __clz(__rbit64(v21)) + (v22 << 6);
    int64_t v16 = v22;
  }
  int64_t v23 = v16 + 5;
  if (v16 + 5 >= v47)
  {
LABEL_38:
    sub_1226C();
    return (uint64_t)v45;
  }
  unint64_t v21 = *(void *)(v48 + 8 * v23);
  if (v21)
  {
    int64_t v22 = v16 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v22 = v23 + 1;
    if (__OFADD__(v23, 1)) {
      break;
    }
    if (v22 >= v47) {
      goto LABEL_38;
    }
    unint64_t v21 = *(void *)(v48 + 8 * v22);
    ++v23;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_6814(char a1, void *a2, void *a3)
{
  char v6 = a1 & 1;
  sub_12384(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  __src[0] = *a2;
  uint64_t v8 = __src[0];
  *a2 = 0x8000000000000000;
  unint64_t v10 = sub_4C69C(v6);
  uint64_t v11 = *(void *)(v8 + 16);
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_11;
  }
  char v3 = v9;
  if (*(void *)(v8 + 24) >= v13)
  {
    if (isUniquelyReferenced_nonNull_native) {
      goto LABEL_6;
    }
LABEL_11:
    sub_120740();
    uint64_t v8 = __src[0];
    goto LABEL_6;
  }
  sub_116FD8(v13, isUniquelyReferenced_nonNull_native);
  uint64_t v8 = __src[0];
  unint64_t v14 = sub_4C69C(v6);
  if ((v3 & 1) != (v15 & 1)) {
    goto LABEL_13;
  }
  unint64_t v10 = v14;
LABEL_6:
  *a2 = v8;
  swift_bridgeObjectRelease();
  int64_t v16 = (void *)*a2;
  if (v3)
  {
LABEL_9:
    sub_74A0(__src, a3);
    memcpy(v21, __src, 0x229uLL);
    return sub_124B4(v21);
  }
  v16[(v10 >> 6) + 8] |= 1 << v10;
  *(unsigned char *)(v16[6] + v10) = v6;
  *(void *)(v16[7] + 8 * v10) = &_swiftEmptySetSingleton;
  uint64_t v17 = v16[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (!v18)
  {
    v16[2] = v19;
    goto LABEL_9;
  }
  __break(1u);
LABEL_13:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_69A0(uint64_t a1, uint64_t a2)
{
  return sub_6C3C(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

uint64_t sub_69B8(uint64_t a1, id *a2)
{
  uint64_t result = sub_1FB7F0();
  *a2 = 0;
  return result;
}

uint64_t sub_6A30(uint64_t a1, id *a2)
{
  char v3 = sub_1FB800();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_6AB0@<X0>(void *a1@<X8>)
{
  sub_1FB810();
  NSString v2 = sub_1FB7E0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_6AF4@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1FB7E0();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_6B3C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1FB810();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_6B68(uint64_t a1)
{
  uint64_t v2 = sub_12604(&qword_26C5D8, type metadata accessor for URLResourceKey);
  uint64_t v3 = sub_12604(&qword_26C5E0, type metadata accessor for URLResourceKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_6C24(uint64_t a1, uint64_t a2)
{
  return sub_6C3C(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_6C3C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1FB810();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_6C80()
{
  sub_1FB810();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_6CD4()
{
  sub_1FB810();
  sub_1FC7E0();
  sub_1FB8C0();
  Swift::Int v0 = sub_1FC830();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_6D48()
{
  uint64_t v0 = sub_1FB810();
  uint64_t v2 = v1;
  if (v0 == sub_1FB810() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_6DD4(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26C4E8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  char v5 = (char *)&v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_26C4F0);
  uint64_t result = sub_1FC280();
  uint64_t v7 = (void *)result;
  int64_t v8 = 0;
  uint64_t v30 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = a1 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v25 = v10;
  int64_t v26 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v28 = v3 + 8;
  uint64_t v29 = v3 + 16;
  uint64_t v27 = result + 64;
  if ((v13 & v9) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v15 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v15 | (v8 << 6); ; unint64_t i = __clz(__rbit64(v18)) + (v8 << 6))
  {
    char v20 = *(unsigned char *)(*(void *)(v30 + 48) + i);
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v30 + 56) + *(void *)(v3 + 72) * i, v2);
    sub_1FB3A0();
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v3 + 8))(v5, v2);
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    *(unsigned char *)(v7[6] + i) = v20;
    *(void *)(v7[7] + 8 * i) = v31;
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v7[2] = v23;
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v17 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_24;
    }
    if (v17 >= v26) {
      return (uint64_t)v7;
    }
    unint64_t v18 = *(void *)(v25 + 8 * v17);
    ++v8;
    if (!v18)
    {
      int64_t v8 = v17 + 1;
      if (v17 + 1 >= v26) {
        return (uint64_t)v7;
      }
      unint64_t v18 = *(void *)(v25 + 8 * v8);
      if (!v18)
      {
        int64_t v8 = v17 + 2;
        if (v17 + 2 >= v26) {
          return (uint64_t)v7;
        }
        unint64_t v18 = *(void *)(v25 + 8 * v8);
        if (!v18) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v14 = (v18 - 1) & v18;
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v26) {
    return (uint64_t)v7;
  }
  unint64_t v18 = *(void *)(v25 + 8 * v19);
  if (v18)
  {
    int64_t v8 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v8 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v8 >= v26) {
      return (uint64_t)v7;
    }
    unint64_t v18 = *(void *)(v25 + 8 * v8);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_7094(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  Swift::Int v8 = sub_1FC830();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    uint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1FC5F0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unint64_t v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1FC5F0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_BD14(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_7244(unsigned char *a1, Swift::Int a2)
{
  return sub_726C(a1, a2, &qword_26C580);
}

uint64_t sub_7258(unsigned char *a1, Swift::Int a2)
{
  return sub_726C(a1, a2, &qword_26C550);
}

uint64_t sub_726C(unsigned char *a1, Swift::Int a2, uint64_t *a3)
{
  uint64_t v7 = *v3;
  sub_1FC7E0();
  sub_1FC7F0(a2);
  Swift::Int v8 = sub_1FC830();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v15 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_BEC4(a2, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v3 = v15;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v11 = *(void *)(v7 + 48);
  if (*(unsigned __int8 *)(v11 + v10) != a2)
  {
    uint64_t v12 = ~v9;
    do
    {
      unint64_t v10 = (v10 + 1) & v12;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(unsigned __int8 *)(v11 + v10) != a2);
  }
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_73A4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = *v2;
  uint64_t v7 = sub_1FC7D0();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0)
  {
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v14 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_C020(a2, v9, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v14;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_8;
  }
  uint64_t v10 = *(void *)(v6 + 48);
  if (*(void *)(v10 + 8 * v9) != a2)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_7;
      }
    }
    while (*(void *)(v10 + 8 * v9) != a2);
  }
  uint64_t result = 0;
LABEL_8:
  *a1 = a2;
  return result;
}

uint64_t sub_74A0(void *a1, void *a2)
{
  uint64_t v3 = v2;
  memcpy(__dst, a2, 0x229uLL);
  uint64_t v6 = *v2;
  memcpy(__src, a2, 0x229uLL);
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  SeedBook.hash(into:)((uint64_t)v15);
  Swift::Int v7 = sub_1FC830();
  uint64_t v8 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = 560 * v9;
    memcpy(__src, (const void *)(*(void *)(v6 + 48) + 560 * v9), 0x229uLL);
    if (_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(__src, __dst))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_124B4(a2);
      uint64_t v12 = (const void *)(*(void *)(*v2 + 48) + v10);
      memcpy(__src, (const void *)(*(void *)(*v3 + 48) + v10), 0x229uLL);
      memcpy(a1, v12, 0x229uLL);
      sub_12384(__src);
      return 0;
    }
    uint64_t v11 = ~v8;
    while (1)
    {
      unint64_t v9 = (v9 + 1) & v11;
      if (((*(void *)(v6 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        break;
      }
      uint64_t v10 = 560 * v9;
      memcpy(__src, (const void *)(*(void *)(v6 + 48) + 560 * v9), 0x229uLL);
      if (_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(__src, __dst)) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  memcpy(__src, __dst, 0x229uLL);
  v15[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_12384(__src);
  sub_C144((char *)__src, v9, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v15[0];
  swift_bridgeObjectRelease();
  memcpy(a1, __src, 0x229uLL);
  return 1;
}

uint64_t sub_769C(unsigned char *a1, char a2)
{
  uint64_t v4 = *v2;
  sub_1FC7E0();
  unsigned int v18 = a2 & 1;
  if (a2) {
    uint64_t v5 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v5 = 0x6B6F6F6265;
  }
  if (a2) {
    unint64_t v6 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v7 = sub_1FC830();
  uint64_t v8 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v9 = v7 & ~v8;
  if ((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9))
  {
    uint64_t v10 = ~v8;
    while (1)
    {
      uint64_t v11 = *(unsigned char *)(*(void *)(v4 + 48) + v9) ? 0x6F6F626F69647561 : 0x6B6F6F6265;
      unint64_t v12 = *(unsigned char *)(*(void *)(v4 + 48) + v9) ? 0xE90000000000006BLL : 0xE500000000000000;
      if (v11 == v5 && v12 == v6) {
        break;
      }
      char v14 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_23;
      }
      unint64_t v9 = (v9 + 1) & v10;
      if (((*(void *)(v4 + 56 + ((v9 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    char v16 = *(unsigned char *)(*(void *)(*v19 + 48) + v9);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v21 = *v19;
    *BOOL v19 = 0x8000000000000000;
    char v16 = v18;
    sub_C3DC(v18, v9, isUniquelyReferenced_nonNull_native);
    *BOOL v19 = v21;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v16;
  return result;
}

uint64_t sub_7894(Swift::Int *a1, Swift::Int a2, Swift::Int a3)
{
  uint64_t v7 = *v3;
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  Swift::Int v8 = sub_1FC830();
  uint64_t v9 = -1 << *(unsigned char *)(v7 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = *(void *)(v7 + 48);
    unint64_t v12 = (void *)(v11 + 16 * v10);
    BOOL v13 = *v12 == a2 && v12[1] == a3;
    if (v13 || (sub_1FC5F0() & 1) != 0)
    {
LABEL_7:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      char v14 = (Swift::Int *)(*(void *)(*v3 + 48) + 16 * v10);
      Swift::Int v15 = v14[1];
      *a1 = *v14;
      a1[1] = v15;
      swift_bridgeObjectRetain();
      return 0;
    }
    uint64_t v17 = ~v9;
    while (1)
    {
      unint64_t v10 = (v10 + 1) & v17;
      if (((*(void *)(v7 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        break;
      }
      unsigned int v18 = (void *)(v11 + 16 * v10);
      BOOL v19 = *v18 == a2 && v18[1] == a3;
      if (v19 || (sub_1FC5F0() & 1) != 0) {
        goto LABEL_7;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v21 = *v3;
  *uint64_t v3 = 0x8000000000000000;
  swift_bridgeObjectRetain();
  sub_C5EC(a2, a3, v10, isUniquelyReferenced_nonNull_native);
  *uint64_t v3 = v21;
  swift_bridgeObjectRelease();
  *a1 = a2;
  a1[1] = a3;
  return 1;
}

uint64_t sub_7A44(unsigned char *a1, char a2)
{
  return sub_7A6C(a1, a2, &qword_26C530);
}

uint64_t sub_7A58(unsigned char *a1, char a2)
{
  return sub_7A6C(a1, a2, &qword_26C5A8);
}

uint64_t sub_7A6C(unsigned char *a1, char a2, uint64_t *a3)
{
  uint64_t v5 = *v3;
  sub_1FC7E0();
  unsigned int v20 = a2 & 1;
  if (a2) {
    unint64_t v6 = 0xD000000000000011;
  }
  else {
    unint64_t v6 = 0x6168637275706F63;
  }
  if (a2) {
    unint64_t v7 = 0x8000000000216470;
  }
  else {
    unint64_t v7 = 0xEA00000000006573;
  }
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_1FC830();
  uint64_t v9 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      unint64_t v12 = *(unsigned char *)(*(void *)(v5 + 48) + v10) ? 0xD000000000000011 : 0x6168637275706F63;
      unint64_t v13 = *(unsigned char *)(*(void *)(v5 + 48) + v10) ? 0x8000000000216470 : 0xEA00000000006573;
      if (v12 == v6 && v13 == v7) {
        break;
      }
      char v15 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v15) {
        goto LABEL_23;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_21;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    char v17 = *(unsigned char *)(*(void *)(*v21 + 48) + v10);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v23 = *v21;
    *uint64_t v21 = 0x8000000000000000;
    char v17 = v20;
    sub_C788(v20, v10, isUniquelyReferenced_nonNull_native, a3);
    *uint64_t v21 = v23;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v17;
  return result;
}

uint64_t sub_7C7C(unsigned char *a1, char a2)
{
  uint64_t v3 = v2;
  uint64_t v5 = *v3;
  sub_1FC7E0();
  Swift::Int v6 = a2 & 1;
  if (a2) {
    uint64_t v7 = 1684627824;
  }
  else {
    uint64_t v7 = 1701147238;
  }
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v8 = sub_1FC830();
  uint64_t v9 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v10 = v8 & ~v9;
  if ((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10))
  {
    uint64_t v11 = ~v9;
    while (1)
    {
      uint64_t v12 = *(unsigned char *)(*(void *)(v5 + 48) + v10) ? 1684627824 : 1701147238;
      if (v12 == v7) {
        break;
      }
      char v13 = sub_1FC5F0();
      swift_bridgeObjectRelease_n();
      if (v13) {
        goto LABEL_14;
      }
      unint64_t v10 = (v10 + 1) & v11;
      if (((*(void *)(v5 + 56 + ((v10 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v10) & 1) == 0) {
        goto LABEL_12;
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_14:
    swift_bridgeObjectRelease();
    uint64_t result = 0;
    LOBYTE(v6) = *(unsigned char *)(*(void *)(*v3 + 48) + v10);
  }
  else
  {
LABEL_12:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v17 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_C9A4(v6, v10, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v17;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
  }
  *a1 = v6;
  return result;
}

uint64_t sub_7E24(uint64_t a1, uint64_t a2)
{
  sub_1269C(a2, (uint64_t)v14);
  uint64_t v5 = *v2;
  sub_1269C(a2, (uint64_t)v15);
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  ScorableAttribute.hash(into:)((uint64_t)v13);
  Swift::Int v6 = sub_1FC830();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if ((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
  {
    uint64_t v9 = 560 * v8;
    sub_1269C(*(void *)(v5 + 48) + 560 * v8, (uint64_t)v15);
    sub_1269C((uint64_t)v15, (uint64_t)v13);
    if (_s20BooksPersonalization17ScorableAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)v13))
    {
LABEL_6:
      swift_bridgeObjectRelease();
      sub_127D4(a2, sub_128C0);
      sub_1269C(*(void *)(*v2 + 48) + v9, (uint64_t)v13);
      sub_1269C((uint64_t)v13, a1);
      sub_127D4(v13, sub_126F8);
      return 0;
    }
    uint64_t v10 = ~v7;
    while (1)
    {
      unint64_t v8 = (v8 + 1) & v10;
      if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
        break;
      }
      uint64_t v9 = 560 * v8;
      sub_1269C(*(void *)(v5 + 48) + 560 * v8, (uint64_t)v15);
      sub_1269C((uint64_t)v15, (uint64_t)v13);
      if (_s20BooksPersonalization17ScorableAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)v13)) {
        goto LABEL_6;
      }
    }
  }
  swift_bridgeObjectRelease();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  sub_1269C((uint64_t)v14, (uint64_t)v15);
  v13[0] = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_127D4(v15, sub_126F8);
  sub_CB68((uint64_t)v15, v8, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v13[0];
  swift_bridgeObjectRelease();
  sub_1269C((uint64_t)v15, a1);
  return 1;
}

uint64_t sub_8054(unsigned char *a1, Swift::Int a2)
{
  uint64_t v5 = *v2;
  sub_1FC7E0();
  unsigned int v18 = v2;
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v6 = sub_1FC830();
  uint64_t v7 = -1 << *(unsigned char *)(v5 + 32);
  unint64_t v8 = v6 & ~v7;
  if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0)
  {
LABEL_21:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v19 = *v18;
    *unsigned int v18 = 0x8000000000000000;
    sub_CD30(a2, v8, isUniquelyReferenced_nonNull_native);
    *unsigned int v18 = v19;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_24;
  }
  uint64_t v9 = ~v7;
  while (!*(unsigned char *)(*(void *)(v5 + 48) + v8))
  {
    unint64_t v11 = 0xE500000000000000;
    uint64_t v10 = 0x6B6F6F6265;
    int v12 = a2;
    if (!(_BYTE)a2) {
      goto LABEL_17;
    }
LABEL_8:
    if (v12 == 1) {
      uint64_t v13 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v13 = 0x646578696DLL;
    }
    if (v12 == 1) {
      unint64_t v14 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v14 = 0xE500000000000000;
    }
    if (v10 == v13) {
      goto LABEL_18;
    }
LABEL_19:
    char v15 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v15) {
      goto LABEL_23;
    }
    unint64_t v8 = (v8 + 1) & v9;
    if (((*(void *)(v5 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8) & 1) == 0) {
      goto LABEL_21;
    }
  }
  if (*(unsigned char *)(*(void *)(v5 + 48) + v8) == 1)
  {
    uint64_t v10 = 0x6F6F626F69647561;
    unint64_t v11 = 0xE90000000000006BLL;
    int v12 = a2;
    if (!(_BYTE)a2) {
      goto LABEL_17;
    }
    goto LABEL_8;
  }
  unint64_t v11 = 0xE500000000000000;
  uint64_t v10 = 0x646578696DLL;
  int v12 = a2;
  if ((_BYTE)a2) {
    goto LABEL_8;
  }
LABEL_17:
  unint64_t v14 = 0xE500000000000000;
  if (v10 != 0x6B6F6F6265) {
    goto LABEL_19;
  }
LABEL_18:
  if (v11 != v14) {
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_23:
  swift_bridgeObjectRelease();
  uint64_t result = 0;
  LOBYTE(a2) = *(unsigned char *)(*(void *)(*v18 + 48) + v8);
LABEL_24:
  *a1 = a2;
  return result;
}

uint64_t sub_82F0(uint64_t a1, Swift::UInt64 a2, char a3)
{
  uint64_t v4 = v3;
  int v8 = a3 & 1;
  uint64_t v9 = *v4;
  sub_1FC7E0();
  if (a3)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(a2);
  }
  Swift::Int v10 = sub_1FC830();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  unint64_t v12 = v10 & ~v11;
  if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0)
  {
LABEL_12:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v18 = *v4;
    uint64_t *v4 = 0x8000000000000000;
    sub_CFD4(a2, v8, v12, isUniquelyReferenced_nonNull_native);
    uint64_t *v4 = v18;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_13;
  }
  uint64_t v13 = ~v11;
  while (1)
  {
    uint64_t v14 = *(void *)(v9 + 48) + 16 * v12;
    if ((*(unsigned char *)(v14 + 8) & 1) == 0) {
      break;
    }
    if (v8) {
      goto LABEL_11;
    }
LABEL_7:
    unint64_t v12 = (v12 + 1) & v13;
    if (((*(void *)(v9 + 56 + ((v12 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_12;
    }
  }
  if (v8 || *(void *)v14 != a2) {
    goto LABEL_7;
  }
LABEL_11:
  uint64_t result = 0;
  uint64_t v16 = *(void *)(*v4 + 48) + 16 * v12;
  a2 = *(void *)v16;
  LOBYTE(v8) = *(unsigned char *)(v16 + 8);
LABEL_13:
  *(void *)a1 = a2;
  *(unsigned char *)(a1 + 8) = v8;
  return result;
}

uint64_t sub_8460(unsigned char *a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_1FC7E0();
  CollectionRecommendationType.rawValue.getter();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v5 = sub_1FC830();
  uint64_t v6 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v7 = v5 & ~v6;
  if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0)
  {
LABEL_43:
    swift_bridgeObjectRelease();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v26 = *v2;
    *uint64_t v2 = 0x8000000000000000;
    sub_D160(a2, v7, isUniquelyReferenced_nonNull_native);
    *uint64_t v2 = v26;
    swift_bridgeObjectRelease();
    uint64_t result = 1;
    goto LABEL_47;
  }
  uint64_t v8 = ~v6;
  while (2)
  {
    unint64_t v9 = 0xE400000000000000;
    uint64_t v10 = 1802465122;
    switch(*(unsigned char *)(*(void *)(v4 + 48) + v7))
    {
      case 1:
        unint64_t v9 = 0xE500000000000000;
        uint64_t v10 = 0x736B6F6F62;
        break;
      case 2:
        uint64_t v10 = 0xD000000000000010;
        unint64_t v9 = 0x8000000000216AA0;
        break;
      case 3:
        uint64_t v10 = 0x417942736B6F6F62;
        unint64_t v9 = 0xED0000726F687475;
        break;
      case 4:
        uint64_t v10 = 0xD000000000000017;
        unint64_t v9 = 0x8000000000216200;
        break;
      case 5:
        uint64_t v10 = 0x476E49736B6F6F62;
        uint64_t v11 = 1701998181;
        goto LABEL_17;
      case 6:
        unint64_t v12 = "booksBySuggestedAuthors";
        goto LABEL_11;
      case 7:
        unint64_t v12 = "booksYouMightLike";
LABEL_11:
        unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
        uint64_t v10 = 0xD000000000000011;
        break;
      case 8:
        uint64_t v10 = 0xD000000000000013;
        unint64_t v9 = 0x8000000000216260;
        break;
      case 9:
        unint64_t v9 = 0xE600000000000000;
        uint64_t v10 = 0x736569726573;
        break;
      case 0xA:
        unsigned int v13 = 1954047342;
        goto LABEL_16;
      case 0xB:
        unsigned int v13 = 1701998445;
LABEL_16:
        uint64_t v10 = v13 | 0x65536E4900000000;
        uint64_t v11 = 1936025970;
LABEL_17:
        unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      default:
        break;
    }
    unint64_t v14 = 0xE400000000000000;
    uint64_t v15 = 1802465122;
    switch((char)a2)
    {
      case 1:
        unint64_t v14 = 0xE500000000000000;
        if (v10 == 0x736B6F6F62) {
          goto LABEL_40;
        }
        goto LABEL_41;
      case 2:
        unint64_t v16 = 0xD000000000000010;
        uint64_t v17 = "http://localhost:18060";
        goto LABEL_31;
      case 3:
        unint64_t v14 = 0xED0000726F687475;
        if (v10 != 0x417942736B6F6F62) {
          goto LABEL_41;
        }
        goto LABEL_40;
      case 4:
        unint64_t v16 = 0xD000000000000017;
        uint64_t v17 = "ry";
        goto LABEL_31;
      case 5:
        uint64_t v18 = 0x476E49736B6F6F62;
        uint64_t v19 = 1701998181;
        goto LABEL_39;
      case 6:
        unsigned int v20 = "booksBySuggestedAuthors";
        goto LABEL_28;
      case 7:
        unsigned int v20 = "booksYouMightLike";
LABEL_28:
        unint64_t v14 = (unint64_t)v20 | 0x8000000000000000;
        if (v10 != 0xD000000000000011) {
          goto LABEL_41;
        }
        goto LABEL_40;
      case 8:
        unint64_t v16 = 0xD000000000000013;
        uint64_t v17 = "mangaYouMightLike";
LABEL_31:
        unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
        if (v10 != v16) {
          goto LABEL_41;
        }
        goto LABEL_40;
      case 9:
        unint64_t v14 = 0xE600000000000000;
        uint64_t v15 = 0x736569726573;
        goto LABEL_34;
      case 10:
        unsigned int v21 = 1954047342;
        goto LABEL_38;
      case 11:
        unsigned int v21 = 1701998445;
LABEL_38:
        uint64_t v18 = v21 | 0x65536E4900000000;
        uint64_t v19 = 1936025970;
LABEL_39:
        unint64_t v14 = v19 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        if (v10 == v18) {
          goto LABEL_40;
        }
        goto LABEL_41;
      default:
LABEL_34:
        if (v10 != v15) {
          goto LABEL_41;
        }
LABEL_40:
        if (v9 == v14)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease_n();
          goto LABEL_46;
        }
LABEL_41:
        char v22 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v22 & 1) == 0)
        {
          unint64_t v7 = (v7 + 1) & v8;
          if (((*(void *)(v4 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) == 0) {
            goto LABEL_43;
          }
          continue;
        }
        swift_bridgeObjectRelease();
LABEL_46:
        uint64_t result = 0;
        LOBYTE(a2) = *(unsigned char *)(*(void *)(*v2 + 48) + v7);
LABEL_47:
        *a1 = a2;
        return result;
    }
  }
}

uint64_t sub_8918(uint64_t a1, Swift::Int a2)
{
  uint64_t v4 = *v2;
  sub_1FC7E0();
  Swift::UInt v5 = *(void *)a2;
  Swift::UInt64 v6 = *(void *)(a2 + 8);
  char v7 = *(unsigned char *)(a2 + 16);
  sub_1FC7F0(*(void *)a2);
  sub_1FC820(v6);
  int v8 = v7 & 1;
  Swift::UInt64 v9 = *(void *)(a2 + 24);
  int v10 = *(unsigned __int8 *)(a2 + 32);
  sub_1FC800(v8);
  if (v10 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v9);
  }
  Swift::Int v11 = sub_1FC830();
  uint64_t v12 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v14 = v4 + 56;
  if ((*(void *)(v4 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v15 = ~v12;
    uint64_t v16 = *(void *)(v4 + 48);
    uint64_t v17 = a1;
    while (1)
    {
      uint64_t v19 = v16 + 40 * v13;
      BOOL v20 = *(void *)v19 == v5 && *(void *)(v19 + 8) == v6;
      if (v20 && (((v8 != 0) ^ *(unsigned __int8 *)(v19 + 16)) & 1) == 0)
      {
        if (*(unsigned char *)(v19 + 32))
        {
          if (v10) {
            goto LABEL_19;
          }
        }
        else
        {
          if (*(void *)(v19 + 24) == v9) {
            char v18 = v10;
          }
          else {
            char v18 = 1;
          }
          if ((v18 & 1) == 0)
          {
LABEL_19:
            uint64_t result = 0;
            uint64_t v22 = *(void *)(*v2 + 48) + 40 * v13;
            char v23 = *(unsigned char *)(v22 + 16);
            uint64_t v24 = *(void *)(v22 + 24);
            char v25 = *(unsigned char *)(v22 + 32);
            *(_OWORD *)a1 = *(_OWORD *)v22;
            *(unsigned char *)(a1 + 16) = v23;
            *(void *)(a1 + 24) = v24;
            *(unsigned char *)(a1 + 32) = v25;
            return result;
          }
        }
      }
      unint64_t v13 = (v13 + 1) & v15;
      if (((*(void *)(v14 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0) {
        goto LABEL_21;
      }
    }
  }
  uint64_t v17 = a1;
LABEL_21:
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v29 = *v2;
  *uint64_t v2 = 0x8000000000000000;
  sub_D634(a2, v13, isUniquelyReferenced_nonNull_native);
  *uint64_t v2 = v29;
  swift_bridgeObjectRelease();
  long long v27 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)uint64_t v17 = *(_OWORD *)a2;
  *(_OWORD *)(v17 + 16) = v27;
  *(unsigned char *)(v17 + 32) = *(unsigned char *)(a2 + 32);
  return 1;
}

uint64_t sub_8B0C(uint64_t a1, char *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::UInt64 v9 = (char *)v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *v2;
  sub_12604(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
  swift_bridgeObjectRetain();
  unint64_t v33 = a2;
  uint64_t v11 = sub_1FB790();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  unint64_t v13 = v11 & ~v12;
  uint64_t v32 = v10 + 56;
  if ((*(void *)(v10 + 56 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v28 = v2;
    uint64_t v29 = a1;
    uint64_t v30 = ~v12;
    uint64_t v27 = v7;
    uint64_t v16 = *(void (**)(void, void, void))(v7 + 16);
    uint64_t v15 = v7 + 16;
    uint64_t v14 = v16;
    uint64_t v31 = *(void *)(v15 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v15 - 8);
    v26[1] = v15 & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    while (1)
    {
      uint64_t v18 = v10;
      unint64_t v19 = v31 * v13;
      BOOL v20 = v14;
      v14(v9, *(void *)(v10 + 48) + v31 * v13, v6);
      sub_12604(&qword_26C570, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_1FB7D0();
      uint64_t v22 = *v17;
      (*v17)(v9, v6);
      if (v21) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v30;
      uint64_t v10 = v18;
      uint64_t v14 = v20;
      if (((*(void *)(v32 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v3 = v28;
        a1 = v29;
        uint64_t v7 = v27;
        goto LABEL_7;
      }
    }
    swift_bridgeObjectRelease();
    v22(v33, v6);
    v20(v29, *(void *)(*v28 + 48) + v19, v6);
    return 0;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v14 = *(void (**)(void, void, void))(v7 + 16);
LABEL_7:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v24 = v33;
    v14(v9, v33, v6);
    uint64_t v34 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    sub_D834((uint64_t)v9, v13, isUniquelyReferenced_nonNull_native);
    *uint64_t v3 = v34;
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, char *, uint64_t))(v7 + 32))(a1, v24, v6);
    return 1;
  }
}

uint64_t sub_8E30()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C548);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_37;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v31 = v0;
  uint64_t v32 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v14 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_22;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_38:
      __break(1u);
LABEL_39:
      __break(1u);
      return result;
    }
    if (v16 >= v8) {
      break;
    }
    uint64_t v17 = (void *)(v2 + 56);
    unint64_t v18 = *(void *)(v32 + 8 * v16);
    ++v11;
    if (!v18)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v8) {
        goto LABEL_31;
      }
      unint64_t v18 = *(void *)(v32 + 8 * v11);
      if (!v18)
      {
        int64_t v19 = v16 + 2;
        if (v19 >= v8)
        {
LABEL_31:
          swift_release();
          uint64_t v1 = v31;
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v32 + 8 * v19);
        if (!v18)
        {
          while (1)
          {
            int64_t v11 = v19 + 1;
            if (__OFADD__(v19, 1)) {
              goto LABEL_39;
            }
            if (v11 >= v8) {
              goto LABEL_31;
            }
            unint64_t v18 = *(void *)(v32 + 8 * v11);
            ++v19;
            if (v18) {
              goto LABEL_21;
            }
          }
        }
        int64_t v11 = v19;
      }
    }
LABEL_21:
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v11 << 6);
LABEL_22:
    BOOL v20 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v21 = *v20;
    uint64_t v22 = v20[1];
    sub_1FC7E0();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v23 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v24 = result & ~v23;
    unint64_t v25 = v24 >> 6;
    if (((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v24) & ~*(void *)(v9 + 8 * (v24 >> 6)))) | v24 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v23) >> 6;
      do
      {
        if (++v25 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_38;
        }
        BOOL v28 = v25 == v27;
        if (v25 == v27) {
          unint64_t v25 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v9 + 8 * v25);
      }
      while (v29 == -1);
      unint64_t v12 = __clz(__rbit64(~v29)) + (v25 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v21;
    v13[1] = v22;
    ++*(void *)(v4 + 16);
  }
  swift_release();
  uint64_t v1 = v31;
  uint64_t v17 = (void *)(v2 + 56);
LABEL_33:
  uint64_t v30 = 1 << *(unsigned char *)(v2 + 32);
  if (v30 > 63) {
    bzero(v17, ((unint64_t)(v30 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v17 = -1 << v30;
  }
  *(void *)(v2 + 16) = 0;
LABEL_37:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_90F8(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_12124(a2);
  uint64_t result = sub_1FC020();
  uint64_t v6 = result;
  if (*(void *)(v4 + 16))
  {
    int64_t v7 = 0;
    int64_t v8 = (void *)(v4 + 56);
    uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
    if (v9 < 64) {
      uint64_t v10 = ~(-1 << v9);
    }
    else {
      uint64_t v10 = -1;
    }
    unint64_t v11 = v10 & *(void *)(v4 + 56);
    int64_t v12 = (unint64_t)(v9 + 63) >> 6;
    uint64_t v13 = result + 56;
    while (1)
    {
      if (v11)
      {
        unint64_t v15 = __clz(__rbit64(v11));
        v11 &= v11 - 1;
        unint64_t v16 = v15 | (v7 << 6);
      }
      else
      {
        int64_t v17 = v7 + 1;
        if (__OFADD__(v7, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = v8[v17];
        ++v7;
        if (!v18)
        {
          int64_t v7 = v17 + 1;
          if (v17 + 1 >= v12) {
            goto LABEL_33;
          }
          unint64_t v18 = v8[v7];
          if (!v18)
          {
            int64_t v7 = v17 + 2;
            if (v17 + 2 >= v12) {
              goto LABEL_33;
            }
            unint64_t v18 = v8[v7];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v12)
              {
LABEL_33:
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero((void *)(v4 + 56), ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *int64_t v8 = -1 << v28;
                }
                uint64_t v3 = v2;
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v8[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v7 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v7 >= v12) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v8[v7];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v7 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v11 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
      }
      Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
      sub_1FC7E0();
      sub_1FC7F0(v20);
      uint64_t result = sub_1FC830();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v13 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_93A0()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C528);
  uint64_t result = sub_1FC020();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v6 = (uint64_t *)(v2 + 56);
    uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v26 = -1 << v7;
    uint64_t v27 = v1;
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v2 + 56);
    uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = result + 56;
    while (1)
    {
      if (v9)
      {
        unint64_t v13 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v15 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = v6[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v16 = v6[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v16 = v6[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v10)
              {
LABEL_33:
                if (v28 >= 64) {
                  bzero((void *)(v2 + 56), 8 * v10);
                }
                else {
                  uint64_t *v6 = v26;
                }
                uint64_t v1 = v27;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v6[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_39;
                  }
                  if (v5 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v16 = v6[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
      uint64_t result = sub_1FC7D0();
      uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v20 = result & ~v19;
      unint64_t v21 = v20 >> 6;
      if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v22 = 0;
        unint64_t v23 = (unint64_t)(63 - v19) >> 6;
        do
        {
          if (++v21 == v23 && (v22 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v24 = v21 == v23;
          if (v21 == v23) {
            unint64_t v21 = 0;
          }
          v22 |= v24;
          uint64_t v25 = *(void *)(v11 + 8 * v21);
        }
        while (v25 == -1);
        unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
      }
      *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_9624()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C520);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    BOOL v36 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    uint64_t v34 = v0;
    int64_t v35 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v8 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v10 = 0;
    uint64_t v37 = v4;
    uint64_t v38 = v2;
    while (1)
    {
      if (v7)
      {
        int64_t v45 = v10;
        uint64_t v46 = (v7 - 1) & v7;
        unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
      }
      else
      {
        int64_t v13 = v10 + 1;
        if (__OFADD__(v10, 1))
        {
LABEL_47:
          __break(1u);
LABEL_48:
          __break(1u);
          return result;
        }
        if (v13 >= v35) {
          goto LABEL_42;
        }
        unint64_t v14 = v36[v13];
        int64_t v15 = v10 + 1;
        if (!v14)
        {
          int64_t v15 = v10 + 2;
          if (v10 + 2 >= v35) {
            goto LABEL_42;
          }
          unint64_t v14 = v36[v15];
          if (!v14)
          {
            int64_t v15 = v10 + 3;
            if (v10 + 3 >= v35) {
              goto LABEL_42;
            }
            unint64_t v14 = v36[v15];
            if (!v14)
            {
              uint64_t v16 = v10 + 4;
              if (v10 + 4 >= v35)
              {
LABEL_42:
                swift_release();
                uint64_t v1 = v34;
                uint64_t v33 = 1 << *(unsigned char *)(v2 + 32);
                if (v33 > 63) {
                  bzero(v36, ((unint64_t)(v33 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *BOOL v36 = -1 << v33;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v14 = v36[v16];
              if (!v14)
              {
                while (1)
                {
                  int64_t v15 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_48;
                  }
                  if (v15 >= v35) {
                    goto LABEL_42;
                  }
                  unint64_t v14 = v36[v15];
                  ++v16;
                  if (v14) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v15 = v10 + 4;
            }
          }
        }
LABEL_23:
        int64_t v45 = v15;
        uint64_t v46 = (v14 - 1) & v14;
        unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
      }
      memcpy(__src, (const void *)(*(void *)(v2 + 48) + 560 * v12), 0x229uLL);
      sub_1FC7E0();
      char v17 = BYTE8(__src[0]);
      uint64_t v18 = *(void *)&__src[2];
      char v19 = BYTE8(__src[2]);
      long long v48 = __src[3];
      long long v20 = __src[4];
      char v21 = __src[5];
      long long v22 = __src[6];
      uint64_t v44 = *((void *)&__src[5] + 1);
      uint64_t v42 = *((void *)&__src[7] + 1);
      uint64_t v43 = *(void *)&__src[7];
      unint64_t v23 = *((void *)&__src[8] + 1);
      uint64_t v40 = *(void *)&__src[9];
      uint64_t v41 = *(void *)&__src[8];
      uint64_t v39 = *((void *)&__src[9] + 1);
      long long v47 = __src[1];
      sub_1FC820(*(Swift::UInt64 *)&__src[0]);
      LOBYTE(v51) = v17;
      long long v52 = v47;
      uint64_t v53 = v18;
      LOBYTE(v54) = v19;
      long long v55 = v48;
      long long v56 = v20;
      char v57 = v21;
      Book.Metadata.hash(into:)((uint64_t)v58);
      if (v23 >> 1 == 0xFFFFFFFF)
      {
        sub_1FC800(0);
      }
      else
      {
        uint64_t v51 = v44;
        long long v52 = v22;
        uint64_t v53 = v43;
        uint64_t v54 = v42;
        *(void *)&long long v55 = v41;
        *((void *)&v55 + 1) = v23;
        *(void *)&long long v56 = v40;
        *((void *)&v56 + 1) = v39;
        sub_1FC800(1u);
        InternalAffinitySource.hash(into:)((uint64_t)v58);
      }
      uint64_t v4 = v37;
      uint64_t v2 = v38;
      unint64_t v7 = v46;
      sub_12588((uint64_t)&__src[10], (uint64_t)&v51);
      if (sub_125F0((uint64_t)&v51) == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_12588((uint64_t)&__src[10], (uint64_t)v50);
        memcpy(__dst, v50, sizeof(__dst));
        sub_1FC800(1u);
        BookHistory.hash(into:)();
      }
      uint64_t v24 = *(void *)&__src[34];
      int v25 = BYTE8(__src[34]);
      swift_bridgeObjectRetain();
      sub_167680((uint64_t)v58, v24);
      swift_bridgeObjectRelease();
      if (v25 == 12)
      {
        sub_1FC800(0);
      }
      else
      {
        v50[0] = v25;
        sub_1FC800(1u);
        PositiveAffinitySource.hash(into:)();
      }
      uint64_t result = sub_1FC830();
      uint64_t v26 = -1 << *(unsigned char *)(v37 + 32);
      unint64_t v27 = result & ~v26;
      unint64_t v28 = v27 >> 6;
      if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v29 = 0;
        unint64_t v30 = (unint64_t)(63 - v26) >> 6;
        do
        {
          if (++v28 == v30 && (v29 & 1) != 0)
          {
            __break(1u);
            goto LABEL_47;
          }
          BOOL v31 = v28 == v30;
          if (v28 == v30) {
            unint64_t v28 = 0;
          }
          v29 |= v31;
          uint64_t v32 = *(void *)(v8 + 8 * v28);
        }
        while (v32 == -1);
        unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
      }
      *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v37 + 48) + 560 * v11), __src, 0x229uLL);
      ++*(void *)(v37 + 16);
      int64_t v10 = v45;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_9B20()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C558);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_9E18()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C5B0);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    unint64_t v30 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v6 = ~(-1 << v5);
    }
    else {
      uint64_t v6 = -1;
    }
    unint64_t v7 = v6 & *(void *)(v2 + 56);
    int64_t v8 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v9 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v11 = 0;
    while (1)
    {
      if (v7)
      {
        unint64_t v14 = __clz(__rbit64(v7));
        v7 &= v7 - 1;
        unint64_t v15 = v14 | (v11 << 6);
      }
      else
      {
        int64_t v16 = v11 + 1;
        if (__OFADD__(v11, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v8) {
          goto LABEL_33;
        }
        unint64_t v17 = v30[v16];
        ++v11;
        if (!v17)
        {
          int64_t v11 = v16 + 1;
          if (v16 + 1 >= v8) {
            goto LABEL_33;
          }
          unint64_t v17 = v30[v11];
          if (!v17)
          {
            int64_t v11 = v16 + 2;
            if (v16 + 2 >= v8) {
              goto LABEL_33;
            }
            unint64_t v17 = v30[v11];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v8)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v29 = 1 << *(unsigned char *)(v2 + 32);
                if (v29 > 63) {
                  bzero(v30, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *unint64_t v30 = -1 << v29;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v30[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v11 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v11 >= v8) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v30[v11];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v11 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v7 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
      }
      char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
      uint64_t v20 = *v19;
      uint64_t v21 = v19[1];
      sub_1FC7E0();
      sub_1FB8C0();
      uint64_t result = sub_1FC830();
      uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v25 = 0;
        unint64_t v26 = (unint64_t)(63 - v22) >> 6;
        do
        {
          if (++v24 == v26 && (v25 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v27 = v24 == v26;
          if (v24 == v26) {
            unint64_t v24 = 0;
          }
          v25 |= v27;
          uint64_t v28 = *(void *)(v9 + 8 * v24);
        }
        while (v28 == -1);
        unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
      }
      *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
      unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
      *unint64_t v13 = v20;
      v13[1] = v21;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_A0F8(uint64_t a1)
{
  return sub_A104(a1, &qword_26C530);
}

uint64_t sub_A104(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_12124(a2);
  uint64_t v5 = sub_1FC020();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v29 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v8 = ~(-1 << v7);
    }
    else {
      uint64_t v8 = -1;
    }
    unint64_t v9 = v8 & *(void *)(v4 + 56);
    int64_t v10 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    while (1)
    {
      if (v9)
      {
        unint64_t v15 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v16 = v15 | (v13 << 6);
      }
      else
      {
        int64_t v17 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v17 >= v10) {
          goto LABEL_33;
        }
        unint64_t v18 = v29[v17];
        ++v13;
        if (!v18)
        {
          int64_t v13 = v17 + 1;
          if (v17 + 1 >= v10) {
            goto LABEL_33;
          }
          unint64_t v18 = v29[v13];
          if (!v18)
          {
            int64_t v13 = v17 + 2;
            if (v17 + 2 >= v10) {
              goto LABEL_33;
            }
            unint64_t v18 = v29[v13];
            if (!v18)
            {
              int64_t v19 = v17 + 3;
              if (v19 >= v10)
              {
LABEL_33:
                swift_release();
                uint64_t v3 = v2;
                uint64_t v28 = 1 << *(unsigned char *)(v4 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v18 = v29[v19];
              if (!v18)
              {
                while (1)
                {
                  int64_t v13 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_39;
                  }
                  if (v13 >= v10) {
                    goto LABEL_33;
                  }
                  unint64_t v18 = v29[v13];
                  ++v19;
                  if (v18) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v13 = v19;
            }
          }
        }
LABEL_23:
        unint64_t v9 = (v18 - 1) & v18;
        unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
      }
      char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v11 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
      ++*(void *)(v6 + 16);
    }
  }
  uint64_t result = swift_release();
  *uint64_t v3 = v6;
  return result;
}

uint64_t sub_A418()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C540);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_A6F4()
{
  uint64_t v1 = *v0;
  sub_12124(&qword_26C5A0);
  uint64_t v2 = sub_1FC020();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16)) {
    goto LABEL_47;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v5 = (void *)(v1 + 56);
  if (v4 < 64) {
    uint64_t v6 = ~(-1 << v4);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v1 + 56);
  int64_t v31 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v8 = v2 + 56;
  swift_retain();
  int64_t v9 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v9 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v9 + 1;
    if (__OFADD__(v9, 1)) {
      goto LABEL_48;
    }
    if (v13 >= v31) {
      break;
    }
    unint64_t v14 = v5[v13];
    ++v9;
    if (!v14)
    {
      int64_t v9 = v13 + 1;
      if (v13 + 1 >= v31) {
        break;
      }
      unint64_t v14 = v5[v9];
      if (!v14)
      {
        int64_t v9 = v13 + 2;
        if (v13 + 2 >= v31) {
          break;
        }
        unint64_t v14 = v5[v9];
        if (!v14)
        {
          int64_t v15 = v13 + 3;
          if (v15 >= v31) {
            break;
          }
          unint64_t v14 = v5[v15];
          if (!v14)
          {
            while (1)
            {
              int64_t v9 = v15 + 1;
              if (__OFADD__(v15, 1)) {
                goto LABEL_49;
              }
              if (v9 >= v31) {
                goto LABEL_43;
              }
              unint64_t v14 = v5[v9];
              ++v15;
              if (v14) {
                goto LABEL_23;
              }
            }
          }
          int64_t v9 = v15;
        }
      }
    }
LABEL_23:
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v9 << 6);
LABEL_24:
    sub_1269C(*(void *)(v1 + 48) + 560 * v12, (uint64_t)v34);
    sub_1FC7E0();
    sub_1269C((uint64_t)v34, (uint64_t)v35);
    switch(sub_1299C((uint64_t)v35))
    {
      case 1u:
        Swift::UInt64 v17 = *(void *)sub_129A8((uint64_t)v35);
        Swift::UInt v18 = 1;
        goto LABEL_28;
      case 2u:
        Swift::UInt64 v17 = *(void *)sub_129A8((uint64_t)v35);
        Swift::UInt v18 = 2;
LABEL_28:
        sub_1FC7F0(v18);
        sub_1FC820(v17);
        break;
      case 3u:
        Swift::UInt64 v19 = *(void *)sub_129A8((uint64_t)v35);
        Swift::UInt v20 = 3;
        goto LABEL_31;
      case 4u:
        Swift::UInt64 v19 = *(void *)sub_129A8((uint64_t)v35);
        Swift::UInt v20 = 4;
LABEL_31:
        sub_1FC7F0(v20);
        sub_1FC820(v19);
        uint64_t v5 = (void *)(v1 + 56);
        goto LABEL_33;
      case 5u:
        sub_129A8((uint64_t)v35);
        sub_1FC7F0(5uLL);
LABEL_33:
        sub_1FB8C0();
        swift_bridgeObjectRelease();
        break;
      default:
        int64_t v16 = (const void *)sub_129A8((uint64_t)v35);
        sub_1FC7F0(0);
        memcpy(__dst, v16, sizeof(__dst));
        SeedBook.hash(into:)((uint64_t)v33);
        break;
    }
    Swift::Int v21 = sub_1FC830();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v23) & ~*(void *)(v8 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        JUMPOUT(0xAB34);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v8 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v10 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v8 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    sub_1269C((uint64_t)v34, *(void *)(v3 + 48) + 560 * v10);
    ++*(void *)(v3 + 16);
  }
LABEL_43:
  swift_release();
  uint64_t v29 = 1 << *(unsigned char *)(v1 + 32);
  if (v29 > 63) {
    bzero(v5, ((unint64_t)(v29 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    *uint64_t v5 = -1 << v29;
  }
  *(void *)(v1 + 16) = 0;
LABEL_47:
  uint64_t result = swift_release();
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_AB4C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C538);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (*(void *)(v2 + 16))
  {
    uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
    uint64_t v6 = (void *)(v2 + 56);
    if (v5 < 64) {
      uint64_t v7 = ~(-1 << v5);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v5 + 63) >> 6;
    uint64_t v10 = v3 + 56;
    uint64_t result = swift_retain();
    int64_t v12 = 0;
    while (1)
    {
      if (v8)
      {
        unint64_t v14 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v15 = v14 | (v12 << 6);
      }
      else
      {
        int64_t v16 = v12 + 1;
        if (__OFADD__(v12, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v16 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = v6[v16];
        ++v12;
        if (!v17)
        {
          int64_t v12 = v16 + 1;
          if (v16 + 1 >= v9) {
            goto LABEL_33;
          }
          unint64_t v17 = v6[v12];
          if (!v17)
          {
            int64_t v12 = v16 + 2;
            if (v16 + 2 >= v9) {
              goto LABEL_33;
            }
            unint64_t v17 = v6[v12];
            if (!v17)
            {
              int64_t v18 = v16 + 3;
              if (v18 >= v9)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v0;
                uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
                if (v27 > 63) {
                  bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  void *v6 = -1 << v27;
                }
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v17 = v6[v18];
              if (!v17)
              {
                while (1)
                {
                  int64_t v12 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_39;
                  }
                  if (v12 >= v9) {
                    goto LABEL_33;
                  }
                  unint64_t v17 = v6[v12];
                  ++v18;
                  if (v17) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v12 = v18;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v17 - 1) & v17;
        unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
      }
      char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v21 = result & ~v20;
      unint64_t v22 = v21 >> 6;
      if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
      {
        unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v23 = 0;
        unint64_t v24 = (unint64_t)(63 - v20) >> 6;
        do
        {
          if (++v22 == v24 && (v23 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v25 = v22 == v24;
          if (v22 == v24) {
            unint64_t v22 = 0;
          }
          v23 |= v25;
          uint64_t v26 = *(void *)(v10 + 8 * v22);
        }
        while (v26 == -1);
        unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
      }
      *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_AE5C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C598);
  uint64_t result = sub_1FC020();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v29 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v9 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v10 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v13 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        unint64_t v14 = v13 | (v5 << 6);
      }
      else
      {
        int64_t v15 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v15 >= v9) {
          goto LABEL_36;
        }
        unint64_t v16 = v29[v15];
        ++v5;
        if (!v16)
        {
          int64_t v5 = v15 + 1;
          if (v15 + 1 >= v9) {
            goto LABEL_36;
          }
          unint64_t v16 = v29[v5];
          if (!v16)
          {
            int64_t v5 = v15 + 2;
            if (v15 + 2 >= v9) {
              goto LABEL_36;
            }
            unint64_t v16 = v29[v5];
            if (!v16)
            {
              int64_t v17 = v15 + 3;
              if (v17 >= v9)
              {
LABEL_36:
                uint64_t v28 = 1 << *(unsigned char *)(v2 + 32);
                if (v28 > 63) {
                  bzero(v29, ((unint64_t)(v28 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v29 = -1 << v28;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v16 = v29[v17];
              if (!v16)
              {
                while (1)
                {
                  int64_t v5 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v5 >= v9) {
                    goto LABEL_36;
                  }
                  unint64_t v16 = v29[v5];
                  ++v17;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v5 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v16 - 1) & v16;
        unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
      }
      uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
      Swift::UInt64 v19 = *(void *)v18;
      int v20 = *(unsigned __int8 *)(v18 + 8);
      sub_1FC7E0();
      if (v20 == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        sub_1FC820(v19);
      }
      uint64_t result = sub_1FC830();
      uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v22 = result & ~v21;
      unint64_t v23 = v22 >> 6;
      if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
      {
        unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v24 = 0;
        unint64_t v25 = (unint64_t)(63 - v21) >> 6;
        do
        {
          if (++v23 == v25 && (v24 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v26 = v23 == v25;
          if (v23 == v25) {
            unint64_t v23 = 0;
          }
          v24 |= v26;
          uint64_t v27 = *(void *)(v10 + 8 * v23);
        }
        while (v27 == -1);
        unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
      }
      *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
      uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
      *(void *)uint64_t v12 = v19;
      *(unsigned char *)(v12 + 8) = v20;
      ++*(void *)(v4 + 16);
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_B154()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C560);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16)) {
    goto LABEL_38;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = (void *)(v2 + 56);
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_39;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = v6[v19];
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = v6[v11];
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = v6[v11];
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = v6[v21];
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_40;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = v6[v11];
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_1FC830();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_39:
        __break(1u);
LABEL_40:
        __break(1u);
        JUMPOUT(0xB588);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  swift_release();
  uint64_t v1 = v0;
  uint64_t v27 = 1 << *(unsigned char *)(v2 + 32);
  if (v27 > 63) {
    bzero((void *)(v2 + 56), ((unint64_t)(v27 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
  }
  else {
    void *v6 = -1 << v27;
  }
  *(void *)(v2 + 16) = 0;
LABEL_38:
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_B5B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C588);
  uint64_t result = sub_1FC020();
  uint64_t v4 = result;
  if (*(void *)(v2 + 16))
  {
    int64_t v5 = 0;
    uint64_t v34 = (void *)(v2 + 56);
    uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
    if (v6 < 64) {
      uint64_t v7 = ~(-1 << v6);
    }
    else {
      uint64_t v7 = -1;
    }
    unint64_t v8 = v7 & *(void *)(v2 + 56);
    int64_t v33 = (unint64_t)(v6 + 63) >> 6;
    uint64_t v9 = result + 56;
    while (1)
    {
      if (v8)
      {
        unint64_t v12 = __clz(__rbit64(v8));
        v8 &= v8 - 1;
        int64_t v35 = v5;
        unint64_t v13 = v12 | (v5 << 6);
      }
      else
      {
        int64_t v14 = v5 + 1;
        if (__OFADD__(v5, 1))
        {
LABEL_41:
          __break(1u);
LABEL_42:
          __break(1u);
          return result;
        }
        if (v14 >= v33) {
          goto LABEL_36;
        }
        unint64_t v15 = v34[v14];
        int64_t v16 = v5 + 1;
        if (!v15)
        {
          int64_t v16 = v14 + 1;
          if (v14 + 1 >= v33) {
            goto LABEL_36;
          }
          unint64_t v15 = v34[v16];
          if (!v15)
          {
            int64_t v16 = v14 + 2;
            if (v14 + 2 >= v33) {
              goto LABEL_36;
            }
            unint64_t v15 = v34[v16];
            if (!v15)
            {
              int64_t v17 = v14 + 3;
              if (v17 >= v33)
              {
LABEL_36:
                uint64_t v32 = 1 << *(unsigned char *)(v2 + 32);
                if (v32 > 63) {
                  bzero(v34, ((unint64_t)(v32 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v34 = -1 << v32;
                }
                uint64_t v1 = v0;
                *(void *)(v2 + 16) = 0;
                break;
              }
              unint64_t v15 = v34[v17];
              if (!v15)
              {
                while (1)
                {
                  int64_t v16 = v17 + 1;
                  if (__OFADD__(v17, 1)) {
                    goto LABEL_42;
                  }
                  if (v16 >= v33) {
                    goto LABEL_36;
                  }
                  unint64_t v15 = v34[v16];
                  ++v17;
                  if (v15) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v16 = v17;
            }
          }
        }
LABEL_23:
        unint64_t v8 = (v15 - 1) & v15;
        int64_t v35 = v16;
        unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
      }
      uint64_t v18 = v2;
      uint64_t v19 = *(void *)(v2 + 48) + 40 * v13;
      Swift::UInt v20 = *(void *)v19;
      Swift::UInt64 v21 = *(void *)(v19 + 8);
      Swift::UInt8 v22 = *(unsigned char *)(v19 + 16);
      Swift::UInt64 v23 = *(void *)(v19 + 24);
      int v24 = *(unsigned __int8 *)(v19 + 32);
      sub_1FC7E0();
      sub_1FC7F0(v20);
      sub_1FC820(v21);
      sub_1FC800(v22);
      if (v24 == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        sub_1FC820(v23);
      }
      uint64_t result = sub_1FC830();
      uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
      unint64_t v26 = result & ~v25;
      unint64_t v27 = v26 >> 6;
      if (((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6))) != 0)
      {
        unint64_t v10 = __clz(__rbit64((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v28 = 0;
        unint64_t v29 = (unint64_t)(63 - v25) >> 6;
        do
        {
          if (++v27 == v29 && (v28 & 1) != 0)
          {
            __break(1u);
            goto LABEL_41;
          }
          BOOL v30 = v27 == v29;
          if (v27 == v29) {
            unint64_t v27 = 0;
          }
          v28 |= v30;
          uint64_t v31 = *(void *)(v9 + 8 * v27);
        }
        while (v31 == -1);
        unint64_t v10 = __clz(__rbit64(~v31)) + (v27 << 6);
      }
      *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
      uint64_t v11 = *(void *)(v4 + 48) + 40 * v10;
      *(void *)uint64_t v11 = v20;
      *(void *)(v11 + 8) = v21;
      *(unsigned char *)(v11 + 16) = v22;
      *(void *)(v11 + 24) = v23;
      *(unsigned char *)(v11 + 32) = v24;
      ++*(void *)(v4 + 16);
      uint64_t v2 = v18;
      int64_t v5 = v35;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_B918()
{
  uint64_t v1 = v0;
  uint64_t v42 = sub_1FB110();
  uint64_t v2 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = *v0;
  sub_12124(&qword_26C578);
  uint64_t v5 = sub_1FC020();
  uint64_t v6 = v5;
  if (*(void *)(v4 + 16))
  {
    uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
    uint64_t v8 = *(void *)(v4 + 56);
    uint64_t v37 = (void *)(v4 + 56);
    if (v7 < 64) {
      uint64_t v9 = ~(-1 << v7);
    }
    else {
      uint64_t v9 = -1;
    }
    unint64_t v10 = v9 & v8;
    int64_t v35 = v0;
    int64_t v36 = (unint64_t)(v7 + 63) >> 6;
    uint64_t v39 = v2;
    uint64_t v11 = v5 + 56;
    uint64_t result = swift_retain();
    int64_t v13 = 0;
    uint64_t v38 = v6;
    int64_t v14 = v41;
    uint64_t v15 = v42;
    while (1)
    {
      if (v10)
      {
        unint64_t v17 = __clz(__rbit64(v10));
        v10 &= v10 - 1;
        int64_t v40 = v13;
        unint64_t v18 = v17 | (v13 << 6);
      }
      else
      {
        int64_t v19 = v13 + 1;
        if (__OFADD__(v13, 1))
        {
LABEL_38:
          __break(1u);
LABEL_39:
          __break(1u);
          return result;
        }
        if (v19 >= v36) {
          goto LABEL_33;
        }
        unint64_t v20 = v37[v19];
        int64_t v21 = v13 + 1;
        if (!v20)
        {
          int64_t v21 = v13 + 2;
          if (v13 + 2 >= v36) {
            goto LABEL_33;
          }
          unint64_t v20 = v37[v21];
          if (!v20)
          {
            int64_t v21 = v13 + 3;
            if (v13 + 3 >= v36) {
              goto LABEL_33;
            }
            unint64_t v20 = v37[v21];
            if (!v20)
            {
              uint64_t v22 = v13 + 4;
              if (v13 + 4 >= v36)
              {
LABEL_33:
                swift_release();
                uint64_t v1 = v35;
                uint64_t v34 = 1 << *(unsigned char *)(v4 + 32);
                if (v34 > 63) {
                  bzero(v37, ((unint64_t)(v34 + 63) >> 3) & 0x1FFFFFFFFFFFFFF8);
                }
                else {
                  *uint64_t v37 = -1 << v34;
                }
                *(void *)(v4 + 16) = 0;
                break;
              }
              unint64_t v20 = v37[v22];
              if (!v20)
              {
                while (1)
                {
                  int64_t v21 = v22 + 1;
                  if (__OFADD__(v22, 1)) {
                    goto LABEL_39;
                  }
                  if (v21 >= v36) {
                    goto LABEL_33;
                  }
                  unint64_t v20 = v37[v21];
                  ++v22;
                  if (v20) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v21 = v13 + 4;
            }
          }
        }
LABEL_23:
        unint64_t v10 = (v20 - 1) & v20;
        int64_t v40 = v21;
        unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
      }
      uint64_t v23 = v4;
      uint64_t v24 = *(void *)(v4 + 48);
      uint64_t v25 = *(void *)(v39 + 72);
      unint64_t v26 = *(void (**)(char *, unint64_t, uint64_t))(v39 + 32);
      v26(v14, v24 + v25 * v18, v15);
      uint64_t v6 = v38;
      sub_12604(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
      uint64_t result = sub_1FB790();
      uint64_t v27 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6))) != 0)
      {
        unint64_t v16 = __clz(__rbit64((-1 << v28) & ~*(void *)(v11 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
      }
      else
      {
        char v30 = 0;
        unint64_t v31 = (unint64_t)(63 - v27) >> 6;
        do
        {
          if (++v29 == v31 && (v30 & 1) != 0)
          {
            __break(1u);
            goto LABEL_38;
          }
          BOOL v32 = v29 == v31;
          if (v29 == v31) {
            unint64_t v29 = 0;
          }
          v30 |= v32;
          uint64_t v33 = *(void *)(v11 + 8 * v29);
        }
        while (v33 == -1);
        unint64_t v16 = __clz(__rbit64(~v33)) + (v29 << 6);
      }
      *(void *)(v11 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
      uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v26)(*(void *)(v6 + 48) + v16 * v25, v41, v42);
      ++*(void *)(v6 + 16);
      uint64_t v4 = v23;
      int64_t v13 = v40;
    }
  }
  uint64_t result = swift_release();
  uint64_t *v1 = v6;
  return result;
}

Swift::Int sub_BD14(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  uint64_t v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_8E30();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_DAD4();
      goto LABEL_22;
    }
    sub_EB3C();
  }
  uint64_t v11 = *v4;
  sub_1FC7E0();
  sub_1FB8C0();
  uint64_t result = sub_1FC830();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1FC760();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        unint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1FC5F0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  int64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *int64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_BEB0(Swift::Int a1, unint64_t a2, char a3)
{
  return sub_BEC4(a1, a2, a3, &qword_26C550);
}

Swift::Int sub_BEC4(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  Swift::UInt v6 = result;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_90F8(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_E1C0(a4);
      goto LABEL_14;
    }
    sub_EDEC(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_1FC7E0();
  sub_1FC7F0(v6);
  uint64_t result = sub_1FC830();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = *(void *)(v10 + 48);
    if (*(unsigned __int8 *)(v12 + a2) == v6)
    {
LABEL_13:
      uint64_t result = sub_1FC760();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v11;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(unsigned __int8 *)(v12 + a2) == v6) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v14 + 48) + a2) = v6;
  uint64_t v15 = *(void *)(v14 + 16);
  BOOL v16 = __OFADD__(v15, 1);
  uint64_t v17 = v15 + 1;
  if (v16) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v17;
  }
  return result;
}

uint64_t sub_C020(uint64_t result, unint64_t a2, char a3)
{
  uint64_t v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_93A0();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (uint64_t)sub_DC88();
      goto LABEL_14;
    }
    sub_F064();
  }
  uint64_t v8 = *v3;
  uint64_t result = sub_1FC7D0();
  uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v9;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v10 = *(void *)(v8 + 48);
    if (*(void *)(v10 + 8 * a2) == v5)
    {
LABEL_13:
      uint64_t result = sub_1FC760();
      __break(1u);
    }
    else
    {
      uint64_t v11 = ~v9;
      while (1)
      {
        a2 = (a2 + 1) & v11;
        if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        if (*(void *)(v10 + 8 * a2) == v5) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v12 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(void *)(*(void *)(v12 + 48) + 8 * a2) = v5;
  uint64_t v13 = *(void *)(v12 + 16);
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    *(void *)(v12 + 16) = v15;
  }
  return result;
}

void *sub_C144(char *__src, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  memcpy(__dst, __src, 0x229uLL);
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  char v30 = v4;
  if (v9 > v8 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_9624();
  }
  else
  {
    if (v9 > v8)
    {
      sub_DE20();
      goto LABEL_14;
    }
    sub_F2C8();
  }
  uint64_t v10 = *v4;
  memcpy(__srca, __src, 0x229uLL);
  sub_1FC7E0();
  SeedBook.hash(into:)((uint64_t)v31);
  Swift::Int v11 = sub_1FC830();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  a2 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    memcpy(__srca, (const void *)(*(void *)(v10 + 48) + 560 * a2), 0x229uLL);
    if (_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0((uint64_t *)__srca, __dst))
    {
LABEL_13:
      sub_1FC760();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        memcpy(__srca, (const void *)(*(void *)(v10 + 48) + 560 * a2), 0x229uLL);
        if (_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0((uint64_t *)__srca, __dst)) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  char v14 = __src[80];
  uint64_t v16 = *((void *)__src + 8);
  uint64_t v15 = *((void *)__src + 9);
  char v17 = __src[40];
  uint64_t v18 = *((void *)__src + 4);
  char v19 = __src[8] & 1;
  char v29 = __src[552];
  uint64_t v20 = *((void *)__src + 68);
  long long v27 = *((_OWORD *)__src + 1);
  long long v28 = *((_OWORD *)__src + 3);
  sub_12588((uint64_t)(__src + 160), (uint64_t)v31);
  uint64_t v21 = *((void *)__src + 19);
  *(void *)&__srca[0] = *(void *)__src;
  BYTE8(__srca[0]) = v19;
  __srca[1] = v27;
  *(void *)&__srca[2] = v18;
  BYTE8(__srca[2]) = v17 & 1;
  __srca[3] = v28;
  *(void *)&__srca[4] = v16;
  *((void *)&__srca[4] + 1) = v15;
  LOBYTE(__srca[5]) = v14;
  *(_OWORD *)((char *)&__srca[5] + 8) = *(_OWORD *)(__src + 88);
  *(_OWORD *)((char *)&__srca[6] + 8) = *(_OWORD *)(__src + 104);
  *(_OWORD *)((char *)&__srca[7] + 8) = *(_OWORD *)(__src + 120);
  *(_OWORD *)((char *)&__srca[8] + 8) = *(_OWORD *)(__src + 136);
  *((void *)&__srca[9] + 1) = v21;
  sub_12588((uint64_t)v31, (uint64_t)&__srca[10]);
  *(void *)&__srca[34] = v20;
  BYTE8(__srca[34]) = v29;
  uint64_t v22 = *v30;
  *(void *)(*v30 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = memcpy((void *)(*(void *)(v22 + 48) + 560 * a2), __srca, 0x229uLL);
  uint64_t v24 = *(void *)(v22 + 16);
  BOOL v25 = __OFADD__(v24, 1);
  uint64_t v26 = v24 + 1;
  if (v25) {
    __break(1u);
  }
  else {
    *(void *)(v22 + 16) = v26;
  }
  return result;
}

Swift::Int sub_C3DC(Swift::Int result, unint64_t a2, char a3)
{
  int v5 = result & 1;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  char v22 = result & 1;
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_25;
  }
  if (a3)
  {
    sub_9B20();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_E1C0(&qword_26C558);
      goto LABEL_25;
    }
    sub_F790();
  }
  uint64_t v8 = 0x6B6F6F6265;
  uint64_t v9 = *v3;
  sub_1FC7E0();
  if (v5)
  {
    uint64_t v8 = 0x6F6F626F69647561;
    unint64_t v10 = 0xE90000000000006BLL;
  }
  else
  {
    unint64_t v10 = 0xE500000000000000;
  }
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1FC830();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(unsigned char *)(*(void *)(v9 + 48) + a2) ? 0x6F6F626F69647561 : 0x6B6F6F6265;
      unint64_t v14 = *(unsigned char *)(*(void *)(v9 + 48) + a2) ? 0xE90000000000006BLL : 0xE500000000000000;
      if (v13 == v8 && v14 == v10) {
        goto LABEL_28;
      }
      char v16 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v16) {
        goto LABEL_29;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_25:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v22;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (!v19)
  {
    *(void *)(v17 + 16) = v20;
    return result;
  }
  __break(1u);
LABEL_28:
  swift_bridgeObjectRelease_n();
LABEL_29:
  uint64_t result = sub_1FC760();
  __break(1u);
  return result;
}

Swift::Int sub_C5EC(Swift::Int result, Swift::Int a2, unint64_t a3, char a4)
{
  int v5 = v4;
  Swift::Int v8 = result;
  unint64_t v9 = *(void *)(*v4 + 16);
  unint64_t v10 = *(void *)(*v4 + 24);
  if (v10 > v9 && (a4 & 1) != 0) {
    goto LABEL_22;
  }
  if (a4)
  {
    sub_9E18();
  }
  else
  {
    if (v10 > v9)
    {
      uint64_t result = (Swift::Int)sub_E000();
      goto LABEL_22;
    }
    sub_FA54();
  }
  uint64_t v11 = *v4;
  sub_1FC7E0();
  sub_1FB8C0();
  uint64_t result = sub_1FC830();
  uint64_t v12 = -1 << *(unsigned char *)(v11 + 32);
  a3 = result & ~v12;
  uint64_t v13 = v11 + 56;
  if ((*(void *)(v11 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v14 = *(void *)(v11 + 48);
    uint64_t v15 = (void *)(v14 + 16 * a3);
    BOOL v16 = *v15 == v8 && v15[1] == a2;
    if (v16 || (uint64_t result = sub_1FC5F0(), (result & 1) != 0))
    {
LABEL_21:
      uint64_t result = sub_1FC760();
      __break(1u);
    }
    else
    {
      uint64_t v17 = ~v12;
      while (1)
      {
        a3 = (a3 + 1) & v17;
        if (((*(void *)(v13 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) == 0) {
          break;
        }
        uint64_t v18 = (void *)(v14 + 16 * a3);
        if (*v18 != v8 || v18[1] != a2)
        {
          uint64_t result = sub_1FC5F0();
          if ((result & 1) == 0) {
            continue;
          }
        }
        goto LABEL_21;
      }
    }
  }
LABEL_22:
  uint64_t v20 = *v5;
  *(void *)(*v5 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v21 = (Swift::Int *)(*(void *)(v20 + 48) + 16 * a3);
  *uint64_t v21 = v8;
  v21[1] = a2;
  uint64_t v22 = *(void *)(v20 + 16);
  BOOL v23 = __OFADD__(v22, 1);
  uint64_t v24 = v22 + 1;
  if (v23) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v24;
  }
  return result;
}

Swift::Int sub_C788(Swift::Int result, unint64_t a2, char a3, uint64_t *a4)
{
  int v6 = result & 1;
  unint64_t v7 = *(void *)(*v4 + 16);
  unint64_t v8 = *(void *)(*v4 + 24);
  char v24 = result & 1;
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_28;
  }
  uint64_t v9 = v7 + 1;
  if (a3)
  {
    sub_A104(v9, a4);
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_E1C0(a4);
      goto LABEL_28;
    }
    sub_FD10(v9, a4);
  }
  uint64_t v10 = *v4;
  sub_1FC7E0();
  if (v6) {
    unint64_t v11 = 0xD000000000000011;
  }
  else {
    unint64_t v11 = 0x6168637275706F63;
  }
  if (v6) {
    unint64_t v12 = 0x8000000000216470;
  }
  else {
    unint64_t v12 = 0xEA00000000006573;
  }
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1FC830();
  uint64_t v13 = -1 << *(unsigned char *)(v10 + 32);
  a2 = result & ~v13;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v14 = ~v13;
    do
    {
      unint64_t v15 = *(unsigned char *)(*(void *)(v10 + 48) + a2) ? 0xD000000000000011 : 0x6168637275706F63;
      unint64_t v16 = *(unsigned char *)(*(void *)(v10 + 48) + a2) ? 0x8000000000216470 : 0xEA00000000006573;
      if (v15 == v11 && v16 == v12) {
        goto LABEL_31;
      }
      char v18 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v18) {
        goto LABEL_32;
      }
      a2 = (a2 + 1) & v14;
    }
    while (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_28:
  uint64_t v19 = *v23;
  *(void *)(*v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v19 + 48) + a2) = v24;
  uint64_t v20 = *(void *)(v19 + 16);
  BOOL v21 = __OFADD__(v20, 1);
  uint64_t v22 = v20 + 1;
  if (!v21)
  {
    *(void *)(v19 + 16) = v22;
    return result;
  }
  __break(1u);
LABEL_31:
  swift_bridgeObjectRelease_n();
LABEL_32:
  uint64_t result = sub_1FC760();
  __break(1u);
  return result;
}

Swift::Int sub_C9A4(Swift::Int result, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  int v6 = result & 1;
  unint64_t v7 = *(void *)(*v3 + 16);
  unint64_t v8 = *(void *)(*v3 + 24);
  if (v8 > v7 && (a3 & 1) != 0) {
    goto LABEL_19;
  }
  if (a3)
  {
    sub_A418();
  }
  else
  {
    if (v8 > v7)
    {
      uint64_t result = (Swift::Int)sub_E1C0(&qword_26C540);
      goto LABEL_19;
    }
    sub_FFEC();
  }
  uint64_t v9 = *v3;
  sub_1FC7E0();
  if (v6) {
    uint64_t v10 = 1684627824;
  }
  else {
    uint64_t v10 = 1701147238;
  }
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  uint64_t result = sub_1FC830();
  uint64_t v11 = -1 << *(unsigned char *)(v9 + 32);
  a2 = result & ~v11;
  if ((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(unsigned char *)(*(void *)(v9 + 48) + a2) ? 1684627824 : 1701147238;
      if (v13 == v10) {
        goto LABEL_22;
      }
      char v14 = sub_1FC5F0();
      uint64_t result = swift_bridgeObjectRelease_n();
      if (v14) {
        goto LABEL_23;
      }
      a2 = (a2 + 1) & v12;
    }
    while (((*(void *)(v9 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_19:
  uint64_t v15 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v15 + 48) + a2) = v6;
  uint64_t v16 = *(void *)(v15 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (!v17)
  {
    *(void *)(v15 + 16) = v18;
    return result;
  }
  __break(1u);
LABEL_22:
  swift_bridgeObjectRelease_n();
LABEL_23:
  uint64_t result = sub_1FC760();
  __break(1u);
  return result;
}

uint64_t sub_CB68(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v4 = v3;
  sub_1269C(a1, (uint64_t)v21);
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a3 & 1) != 0) {
    goto LABEL_14;
  }
  if (a3)
  {
    sub_A6F4();
  }
  else
  {
    if (v9 > v8)
    {
      sub_E34C();
      goto LABEL_14;
    }
    sub_10294();
  }
  uint64_t v10 = *v4;
  sub_1269C(a1, (uint64_t)v20);
  sub_1FC7E0();
  ScorableAttribute.hash(into:)((uint64_t)v19);
  Swift::Int v11 = sub_1FC830();
  uint64_t v12 = -1 << *(unsigned char *)(v10 + 32);
  a2 = v11 & ~v12;
  if ((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    sub_1269C(*(void *)(v10 + 48) + 560 * a2, (uint64_t)v20);
    sub_1269C((uint64_t)v20, (uint64_t)v19);
    if (_s20BooksPersonalization17ScorableAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)v19))
    {
LABEL_13:
      sub_1FC760();
      __break(1u);
    }
    else
    {
      uint64_t v13 = ~v12;
      while (1)
      {
        a2 = (a2 + 1) & v13;
        if (((*(void *)(v10 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
          break;
        }
        sub_1269C(*(void *)(v10 + 48) + 560 * a2, (uint64_t)v20);
        sub_1269C((uint64_t)v20, (uint64_t)v19);
        if (_s20BooksPersonalization17ScorableAttributeO2eeoiySbAC_ACtFZ_0((uint64_t)v19)) {
          goto LABEL_13;
        }
      }
    }
  }
LABEL_14:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = sub_1269C(a1, *(void *)(v14 + 48) + 560 * a2);
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v18;
  }
  return result;
}

Swift::Int sub_CD30(Swift::Int result, unint64_t a2, char a3)
{
  unsigned __int8 v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_AB4C();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_E1C0(&qword_26C538);
        goto LABEL_28;
      }
      sub_106DC();
    }
    uint64_t v8 = *v3;
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      do
      {
        if (*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          if (*(unsigned char *)(*(void *)(v8 + 48) + a2) == 1)
          {
            uint64_t v11 = 0x6F6F626F69647561;
            unint64_t v12 = 0xE90000000000006BLL;
            int v13 = v5;
            if (!v5) {
              goto LABEL_24;
            }
          }
          else
          {
            unint64_t v12 = 0xE500000000000000;
            uint64_t v11 = 0x646578696DLL;
            int v13 = v5;
            if (!v5)
            {
LABEL_24:
              unint64_t v15 = 0xE500000000000000;
              if (v11 == 0x6B6F6F6265) {
                goto LABEL_25;
              }
              goto LABEL_26;
            }
          }
        }
        else
        {
          unint64_t v12 = 0xE500000000000000;
          uint64_t v11 = 0x6B6F6F6265;
          int v13 = v5;
          if (!v5) {
            goto LABEL_24;
          }
        }
        if (v13 == 1) {
          uint64_t v14 = 0x6F6F626F69647561;
        }
        else {
          uint64_t v14 = 0x646578696DLL;
        }
        if (v13 == 1) {
          unint64_t v15 = 0xE90000000000006BLL;
        }
        else {
          unint64_t v15 = 0xE500000000000000;
        }
        if (v11 == v14)
        {
LABEL_25:
          if (v12 == v15) {
            goto LABEL_31;
          }
        }
LABEL_26:
        char v16 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        if (v16) {
          goto LABEL_32;
        }
        a2 = (a2 + 1) & v10;
      }
      while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
    }
  }
LABEL_28:
  uint64_t v17 = *v21;
  *(void *)(*v21 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v17 + 48) + a2) = v5;
  uint64_t v18 = *(void *)(v17 + 16);
  BOOL v19 = __OFADD__(v18, 1);
  uint64_t v20 = v18 + 1;
  if (v19)
  {
    __break(1u);
LABEL_31:
    swift_bridgeObjectRelease_n();
LABEL_32:
    uint64_t result = sub_1FC760();
    __break(1u);
  }
  else
  {
    *(void *)(v17 + 16) = v20;
  }
  return result;
}

Swift::Int sub_CFD4(Swift::Int result, char a2, unint64_t a3, char a4)
{
  Swift::UInt64 v7 = result;
  unint64_t v8 = *(void *)(*v4 + 16);
  unint64_t v9 = *(void *)(*v4 + 24);
  if (v9 > v8 && (a4 & 1) != 0) {
    goto LABEL_19;
  }
  if (a4)
  {
    sub_AE5C();
  }
  else
  {
    if (v9 > v8)
    {
      uint64_t result = (Swift::Int)sub_E534();
      goto LABEL_19;
    }
    sub_109B8();
  }
  uint64_t v10 = *v4;
  sub_1FC7E0();
  if (a2)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v7);
  }
  uint64_t result = sub_1FC830();
  uint64_t v11 = -1 << *(unsigned char *)(v10 + 32);
  a3 = result & ~v11;
  if ((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3))
  {
    uint64_t v12 = ~v11;
    do
    {
      uint64_t v13 = *(void *)(v10 + 48) + 16 * a3;
      if (*(unsigned char *)(v13 + 8))
      {
        if (a2) {
          goto LABEL_18;
        }
      }
      else if ((a2 & 1) == 0 && *(void *)v13 == v7)
      {
LABEL_18:
        sub_12124(&qword_26C590);
        uint64_t result = sub_1FC760();
        __break(1u);
        break;
      }
      a3 = (a3 + 1) & v12;
    }
    while (((*(void *)(v10 + 56 + ((a3 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a3) & 1) != 0);
  }
LABEL_19:
  uint64_t v14 = *v4;
  *(void *)(*v4 + 8 * (a3 >> 6) + 56) |= 1 << a3;
  uint64_t v15 = *(void *)(v14 + 48) + 16 * a3;
  *(void *)uint64_t v15 = v7;
  *(unsigned char *)(v15 + 8) = a2 & 1;
  uint64_t v16 = *(void *)(v14 + 16);
  BOOL v17 = __OFADD__(v16, 1);
  uint64_t v18 = v16 + 1;
  if (v17) {
    __break(1u);
  }
  else {
    *(void *)(v14 + 16) = v18;
  }
  return result;
}

Swift::Int sub_D160(Swift::Int result, unint64_t a2, char a3)
{
  char v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 <= v6 || (a3 & 1) == 0)
  {
    if (a3)
    {
      sub_B154();
    }
    else
    {
      if (v7 > v6)
      {
        uint64_t result = (Swift::Int)sub_E1C0(&qword_26C560);
        goto LABEL_52;
      }
      sub_10C7C();
    }
    uint64_t v8 = *v3;
    sub_1FC7E0();
    CollectionRecommendationType.rawValue.getter();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v9 = -1 << *(unsigned char *)(v8 + 32);
    a2 = result & ~v9;
    if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
    {
      uint64_t v10 = ~v9;
      while (2)
      {
        unint64_t v11 = 0xE400000000000000;
        uint64_t v12 = 1802465122;
        switch(*(unsigned char *)(*(void *)(v8 + 48) + a2))
        {
          case 1:
            unint64_t v11 = 0xE500000000000000;
            uint64_t v12 = 0x736B6F6F62;
            break;
          case 2:
            uint64_t v12 = 0xD000000000000010;
            unint64_t v11 = 0x8000000000216AA0;
            break;
          case 3:
            uint64_t v12 = 0x417942736B6F6F62;
            unint64_t v11 = 0xED0000726F687475;
            break;
          case 4:
            uint64_t v12 = 0xD000000000000017;
            unint64_t v11 = 0x8000000000216200;
            break;
          case 5:
            uint64_t v12 = 0x476E49736B6F6F62;
            uint64_t v15 = 1701998181;
            goto LABEL_24;
          case 6:
            uint64_t v14 = "booksBySuggestedAuthors";
            goto LABEL_20;
          case 7:
            uint64_t v14 = "booksYouMightLike";
LABEL_20:
            unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
            uint64_t v12 = 0xD000000000000011;
            break;
          case 8:
            uint64_t v12 = 0xD000000000000013;
            unint64_t v11 = 0x8000000000216260;
            break;
          case 9:
            unint64_t v11 = 0xE600000000000000;
            uint64_t v12 = 0x736569726573;
            break;
          case 0xA:
            unsigned int v13 = 1954047342;
            goto LABEL_23;
          case 0xB:
            unsigned int v13 = 1701998445;
LABEL_23:
            uint64_t v12 = v13 | 0x65536E4900000000;
            uint64_t v15 = 1936025970;
LABEL_24:
            unint64_t v11 = v15 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          default:
            break;
        }
        unint64_t v16 = 0xE400000000000000;
        unint64_t v17 = 1802465122;
        switch(v5)
        {
          case 1:
            unint64_t v16 = 0xE500000000000000;
            if (v12 != 0x736B6F6F62) {
              goto LABEL_45;
            }
            goto LABEL_44;
          case 2:
            uint64_t v20 = "http://localhost:18060";
            unint64_t v19 = 0xD000000000000010;
            goto LABEL_33;
          case 3:
            unint64_t v16 = 0xED0000726F687475;
            if (v12 != 0x417942736B6F6F62) {
              goto LABEL_45;
            }
            goto LABEL_44;
          case 4:
            unint64_t v19 = 0xD000000000000017;
            uint64_t v20 = "ry";
LABEL_33:
            unint64_t v16 = (unint64_t)v20 | 0x8000000000000000;
            if (v12 != v19) {
              goto LABEL_45;
            }
            goto LABEL_44;
          case 5:
            uint64_t v22 = 0x476E49736B6F6F62;
            uint64_t v23 = 1701998181;
            goto LABEL_50;
          case 6:
            BOOL v21 = "booksBySuggestedAuthors";
            goto LABEL_40;
          case 7:
            BOOL v21 = "booksYouMightLike";
LABEL_40:
            unint64_t v16 = (unint64_t)v21 | 0x8000000000000000;
            if (v12 != 0xD000000000000011) {
              goto LABEL_45;
            }
            goto LABEL_44;
          case 8:
            unint64_t v17 = 0xD000000000000013;
            unint64_t v16 = 0x8000000000216260;
            goto LABEL_43;
          case 9:
            unint64_t v16 = 0xE600000000000000;
            if (v12 != 0x736569726573) {
              goto LABEL_45;
            }
            goto LABEL_44;
          case 10:
            unsigned int v18 = 1954047342;
            goto LABEL_49;
          case 11:
            unsigned int v18 = 1701998445;
LABEL_49:
            uint64_t v22 = v18 | 0x65536E4900000000;
            uint64_t v23 = 1936025970;
LABEL_50:
            unint64_t v16 = v23 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v12 != v22) {
              goto LABEL_45;
            }
            goto LABEL_44;
          default:
LABEL_43:
            if (v12 != v17) {
              goto LABEL_45;
            }
LABEL_44:
            if (v11 == v16) {
              goto LABEL_55;
            }
LABEL_45:
            char v24 = sub_1FC5F0();
            swift_bridgeObjectRelease();
            uint64_t result = swift_bridgeObjectRelease();
            if (v24) {
              goto LABEL_56;
            }
            a2 = (a2 + 1) & v10;
            if (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) == 0) {
              break;
            }
            continue;
        }
        break;
      }
    }
  }
LABEL_52:
  uint64_t v25 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  *(unsigned char *)(*(void *)(v25 + 48) + a2) = v5;
  uint64_t v26 = *(void *)(v25 + 16);
  BOOL v27 = __OFADD__(v26, 1);
  uint64_t v28 = v26 + 1;
  if (v27)
  {
    __break(1u);
LABEL_55:
    swift_bridgeObjectRelease_n();
LABEL_56:
    sub_1FC760();
    __break(1u);
    JUMPOUT(0xD5D4);
  }
  *(void *)(v25 + 16) = v28;
  return result;
}

Swift::Int sub_D634(Swift::Int result, unint64_t a2, char a3)
{
  Swift::Int v5 = result;
  unint64_t v6 = *(void *)(*v3 + 16);
  unint64_t v7 = *(void *)(*v3 + 24);
  if (v7 > v6 && (a3 & 1) != 0) {
    goto LABEL_27;
  }
  if (a3)
  {
    sub_B5B8();
  }
  else
  {
    if (v7 > v6)
    {
      uint64_t result = (Swift::Int)sub_E6DC();
      goto LABEL_27;
    }
    sub_110AC();
  }
  uint64_t v8 = *v3;
  sub_1FC7E0();
  Swift::UInt v9 = *(void *)v5;
  Swift::UInt64 v10 = *(void *)(v5 + 8);
  char v11 = *(unsigned char *)(v5 + 16);
  sub_1FC7F0(*(void *)v5);
  sub_1FC820(v10);
  int v12 = v11 & 1;
  Swift::UInt64 v13 = *(void *)(v5 + 24);
  int v14 = *(unsigned __int8 *)(v5 + 32);
  sub_1FC800(v11 & 1);
  if (v14 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v13);
  }
  uint64_t result = sub_1FC830();
  uint64_t v15 = -1 << *(unsigned char *)(v8 + 32);
  a2 = result & ~v15;
  if ((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v15;
    do
    {
      uint64_t v17 = *(void *)(v8 + 48) + 40 * a2;
      BOOL v18 = *(void *)v17 == v9 && *(void *)(v17 + 8) == v10;
      if (v18 && (((v12 != 0) ^ *(unsigned __int8 *)(v17 + 16)) & 1) == 0)
      {
        if (*(unsigned char *)(v17 + 32))
        {
          if (v14) {
            goto LABEL_26;
          }
        }
        else
        {
          if (*(void *)(v17 + 24) == v13) {
            char v19 = v14;
          }
          else {
            char v19 = 1;
          }
          if ((v19 & 1) == 0)
          {
LABEL_26:
            uint64_t result = sub_1FC760();
            __break(1u);
            break;
          }
        }
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v8 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_27:
  uint64_t v20 = *v3;
  *(void *)(*v3 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t v21 = *(void *)(v20 + 48) + 40 * a2;
  long long v22 = *(_OWORD *)(v5 + 16);
  *(_OWORD *)uint64_t v21 = *(_OWORD *)v5;
  *(_OWORD *)(v21 + 16) = v22;
  *(unsigned char *)(v21 + 32) = *(unsigned char *)(v5 + 32);
  uint64_t v23 = *(void *)(v20 + 16);
  BOOL v24 = __OFADD__(v23, 1);
  uint64_t v25 = v23 + 1;
  if (v24) {
    __break(1u);
  }
  else {
    *(void *)(v20 + 16) = v25;
  }
  return result;
}

uint64_t sub_D834(uint64_t a1, unint64_t a2, char a3)
{
  uint64_t v31 = a1;
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  Swift::UInt v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v10 = *(void *)(*v3 + 16);
  unint64_t v11 = *(void *)(*v3 + 24);
  uint64_t v28 = v3;
  uint64_t v29 = v7;
  if (v11 > v10 && (a3 & 1) != 0) {
    goto LABEL_12;
  }
  if (a3)
  {
    sub_B918();
  }
  else
  {
    if (v11 > v10)
    {
      sub_E898();
      goto LABEL_12;
    }
    sub_113D8();
  }
  uint64_t v12 = *v3;
  sub_12604(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v13 = sub_1FB790();
  uint64_t v14 = -1 << *(unsigned char *)(v12 + 32);
  a2 = v13 & ~v14;
  uint64_t v30 = v12;
  uint64_t v15 = v12 + 56;
  if ((*(void *)(v12 + 56 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2))
  {
    uint64_t v16 = ~v14;
    char v19 = *(void (**)(char *, unint64_t, uint64_t))(v7 + 16);
    uint64_t v18 = v7 + 16;
    uint64_t v17 = v19;
    uint64_t v20 = *(void *)(v18 + 56);
    do
    {
      v17(v9, *(void *)(v30 + 48) + v20 * a2, v6);
      sub_12604(&qword_26C570, (void (*)(uint64_t))&type metadata accessor for UUID);
      char v21 = sub_1FB7D0();
      (*(void (**)(char *, uint64_t))(v18 - 8))(v9, v6);
      if (v21) {
        goto LABEL_15;
      }
      a2 = (a2 + 1) & v16;
    }
    while (((*(void *)(v15 + ((a2 >> 3) & 0xFFFFFFFFFFFFFF8)) >> a2) & 1) != 0);
  }
LABEL_12:
  uint64_t v22 = v29;
  uint64_t v23 = *v28;
  *(void *)(v23 + 8 * (a2 >> 6) + 56) |= 1 << a2;
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(v22 + 32))(*(void *)(v23 + 48) + *(void *)(v22 + 72) * a2, v31, v6);
  uint64_t v25 = *(void *)(v23 + 16);
  BOOL v26 = __OFADD__(v25, 1);
  uint64_t v27 = v25 + 1;
  if (!v26)
  {
    *(void *)(v23 + 16) = v27;
    return result;
  }
  __break(1u);
LABEL_15:
  uint64_t result = sub_1FC760();
  __break(1u);
  return result;
}

void *sub_DAD4()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C548);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    char v19 = (void *)(*(void *)(v4 + 48) + v16);
    *char v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_DC88()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C528);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v16 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v16 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v9;
    if (!v17)
    {
      int64_t v9 = v16 + 1;
      if (v16 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v9);
      if (!v17)
      {
        int64_t v9 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v9);
        if (!v17) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v9 << 6);
LABEL_12:
    *(void *)(*(void *)(v4 + 48) + 8 * v15) = *(void *)(*(void *)(v2 + 48) + 8 * v15);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v13) {
    goto LABEL_28;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v9 = v18;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v9);
    ++v18;
    if (v17) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_DE20()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C520);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v18 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v18 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v18);
    ++v9;
    if (!v19)
    {
      int64_t v9 = v18 + 1;
      if (v18 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v19 = *(void *)(v6 + 8 * v9);
      if (!v19)
      {
        int64_t v9 = v18 + 2;
        if (v18 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v19 = *(void *)(v6 + 8 * v9);
        if (!v19) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v19 - 1) & v19;
    unint64_t v15 = __clz(__rbit64(v19)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 560 * v15;
    unint64_t v17 = (const void *)(*(void *)(v2 + 48) + 560 * v15);
    memcpy(__dst, v17, 0x229uLL);
    memmove((void *)(*(void *)(v4 + 48) + v16), v17, 0x229uLL);
    uint64_t result = sub_12384(__dst);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v13) {
    goto LABEL_28;
  }
  unint64_t v19 = *(void *)(v6 + 8 * v20);
  if (v19)
  {
    int64_t v9 = v20;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v19 = *(void *)(v6 + 8 * v9);
    ++v20;
    if (v19) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_E000()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C5B0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    unint64_t v17 = (void *)(*(void *)(v2 + 48) + v16);
    uint64_t v18 = v17[1];
    unint64_t v19 = (void *)(*(void *)(v4 + 48) + v16);
    *unint64_t v19 = *v17;
    v19[1] = v18;
    uint64_t result = (void *)swift_bridgeObjectRetain();
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_E1B4()
{
  return sub_E1C0(&qword_26C530);
}

void *sub_E1C0(uint64_t *a1)
{
  uint64_t v2 = v1;
  sub_12124(a1);
  uint64_t v3 = *v1;
  uint64_t v4 = sub_1FC010();
  uint64_t v5 = v4;
  if (!*(void *)(v3 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    *uint64_t v2 = v5;
    return result;
  }
  uint64_t result = (void *)(v4 + 56);
  uint64_t v7 = v3 + 56;
  unint64_t v8 = (unint64_t)((1 << *(unsigned char *)(v5 + 32)) + 63) >> 6;
  if (v5 != v3 || (unint64_t)result >= v3 + 56 + 8 * v8) {
    uint64_t result = memmove(result, (const void *)(v3 + 56), 8 * v8);
  }
  int64_t v10 = 0;
  *(void *)(v5 + 16) = *(void *)(v3 + 16);
  uint64_t v11 = 1 << *(unsigned char *)(v3 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & *(void *)(v3 + 56);
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  while (1)
  {
    if (v13)
    {
      unint64_t v15 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      unint64_t v16 = v15 | (v10 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v17);
    ++v10;
    if (!v18)
    {
      int64_t v10 = v17 + 1;
      if (v17 + 1 >= v14) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v7 + 8 * v10);
      if (!v18)
      {
        int64_t v10 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v7 + 8 * v10);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v13 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v10 << 6);
LABEL_12:
    *(unsigned char *)(*(void *)(v5 + 48) + v16) = *(unsigned char *)(*(void *)(v3 + 48) + v16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v14) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v7 + 8 * v19);
  if (v18)
  {
    int64_t v10 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v10 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v10 >= v14) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v7 + 8 * v10);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_E34C()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C5A0);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v17 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v17 >= v13) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v9;
    if (!v18)
    {
      int64_t v9 = v17 + 1;
      if (v17 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v18 = *(void *)(v6 + 8 * v9);
      if (!v18)
      {
        int64_t v9 = v17 + 2;
        if (v17 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v9);
        if (!v18) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v15 = __clz(__rbit64(v18)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 560 * v15;
    sub_1269C(*(void *)(v2 + 48) + 560 * v15, (uint64_t)v20);
    sub_1269C((uint64_t)v20, *(void *)(v4 + 48) + v16);
    uint64_t result = (void *)sub_127D4(v20, sub_126F8);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v13) {
    goto LABEL_28;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
    int64_t v9 = v19;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v9);
    ++v19;
    if (v18) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_E534()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C598);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v20 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v20 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v20);
    ++v9;
    if (!v21)
    {
      int64_t v9 = v20 + 1;
      if (v20 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v21 = *(void *)(v6 + 8 * v9);
      if (!v21)
      {
        int64_t v9 = v20 + 2;
        if (v20 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v21 = *(void *)(v6 + 8 * v9);
        if (!v21) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v15 = __clz(__rbit64(v21)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 16 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    uint64_t v18 = *(void *)v17;
    LOBYTE(v17) = *(unsigned char *)(v17 + 8);
    uint64_t v19 = *(void *)(v4 + 48) + v16;
    *(void *)uint64_t v19 = v18;
    *(unsigned char *)(v19 + 8) = v17;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v13) {
    goto LABEL_28;
  }
  unint64_t v21 = *(void *)(v6 + 8 * v22);
  if (v21)
  {
    int64_t v9 = v22;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v21 = *(void *)(v6 + 8 * v9);
    ++v22;
    if (v21) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_E6DC()
{
  uint64_t v1 = v0;
  sub_12124(&qword_26C588);
  uint64_t v2 = *v0;
  uint64_t v3 = sub_1FC010();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
LABEL_28:
    uint64_t result = (void *)swift_release();
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t result = (void *)(v3 + 56);
  uint64_t v6 = v2 + 56;
  unint64_t v7 = (unint64_t)((1 << *(unsigned char *)(v4 + 32)) + 63) >> 6;
  if (v4 != v2 || (unint64_t)result >= v2 + 56 + 8 * v7) {
    uint64_t result = memmove(result, (const void *)(v2 + 56), 8 * v7);
  }
  int64_t v9 = 0;
  *(void *)(v4 + 16) = *(void *)(v2 + 16);
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 56);
  int64_t v13 = (unint64_t)(v10 + 63) >> 6;
  while (1)
  {
    if (v12)
    {
      unint64_t v14 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v15 = v14 | (v9 << 6);
      goto LABEL_12;
    }
    int64_t v22 = v9 + 1;
    if (__OFADD__(v9, 1))
    {
      __break(1u);
      goto LABEL_30;
    }
    if (v22 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v22);
    ++v9;
    if (!v23)
    {
      int64_t v9 = v22 + 1;
      if (v22 + 1 >= v13) {
        goto LABEL_28;
      }
      unint64_t v23 = *(void *)(v6 + 8 * v9);
      if (!v23)
      {
        int64_t v9 = v22 + 2;
        if (v22 + 2 >= v13) {
          goto LABEL_28;
        }
        unint64_t v23 = *(void *)(v6 + 8 * v9);
        if (!v23) {
          break;
        }
      }
    }
LABEL_27:
    unint64_t v12 = (v23 - 1) & v23;
    unint64_t v15 = __clz(__rbit64(v23)) + (v9 << 6);
LABEL_12:
    uint64_t v16 = 40 * v15;
    uint64_t v17 = *(void *)(v2 + 48) + v16;
    char v18 = *(unsigned char *)(v17 + 16);
    uint64_t v19 = *(void *)(v17 + 24);
    char v20 = *(unsigned char *)(v17 + 32);
    uint64_t v21 = *(void *)(v4 + 48) + v16;
    *(_OWORD *)uint64_t v21 = *(_OWORD *)v17;
    *(unsigned char *)(v21 + 16) = v18;
    *(void *)(v21 + 24) = v19;
    *(unsigned char *)(v21 + 32) = v20;
  }
  int64_t v24 = v22 + 3;
  if (v24 >= v13) {
    goto LABEL_28;
  }
  unint64_t v23 = *(void *)(v6 + 8 * v24);
  if (v23)
  {
    int64_t v9 = v24;
    goto LABEL_27;
  }
  while (1)
  {
    int64_t v9 = v24 + 1;
    if (__OFADD__(v24, 1)) {
      break;
    }
    if (v9 >= v13) {
      goto LABEL_28;
    }
    unint64_t v23 = *(void *)(v6 + 8 * v9);
    ++v24;
    if (v23) {
      goto LABEL_27;
    }
  }
LABEL_30:
  __break(1u);
  return result;
}

void *sub_E898()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1FB110();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_26C578);
  uint64_t v6 = *v0;
  uint64_t v7 = sub_1FC010();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = (void *)swift_release();
LABEL_27:
    uint64_t *v1 = v8;
    return result;
  }
  int64_t v22 = v1;
  uint64_t result = (void *)(v7 + 56);
  unint64_t v10 = (unint64_t)((1 << *(unsigned char *)(v8 + 32)) + 63) >> 6;
  if (v8 != v6 || (unint64_t)result >= v6 + 56 + 8 * v10) {
    uint64_t result = memmove(result, (const void *)(v6 + 56), 8 * v10);
  }
  uint64_t v23 = v6 + 56;
  int64_t v11 = 0;
  *(void *)(v8 + 16) = *(void *)(v6 + 16);
  uint64_t v12 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & *(void *)(v6 + 56);
  int64_t v24 = (unint64_t)(v12 + 63) >> 6;
  while (1)
  {
    if (v14)
    {
      unint64_t v15 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v16 = v15 | (v11 << 6);
      goto LABEL_9;
    }
    int64_t v18 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
      __break(1u);
      goto LABEL_29;
    }
    if (v18 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v18);
    ++v11;
    if (!v19)
    {
      int64_t v11 = v18 + 1;
      if (v18 + 1 >= v24) {
        goto LABEL_25;
      }
      unint64_t v19 = *(void *)(v23 + 8 * v11);
      if (!v19)
      {
        int64_t v11 = v18 + 2;
        if (v18 + 2 >= v24) {
          goto LABEL_25;
        }
        unint64_t v19 = *(void *)(v23 + 8 * v11);
        if (!v19) {
          break;
        }
      }
    }
LABEL_24:
    unint64_t v14 = (v19 - 1) & v19;
    unint64_t v16 = __clz(__rbit64(v19)) + (v11 << 6);
LABEL_9:
    unint64_t v17 = *(void *)(v3 + 72) * v16;
    (*(void (**)(char *, unint64_t, uint64_t))(v3 + 16))(v5, *(void *)(v6 + 48) + v17, v2);
    uint64_t result = (void *)(*(uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32))(*(void *)(v8 + 48) + v17, v5, v2);
  }
  int64_t v20 = v18 + 3;
  if (v20 >= v24)
  {
LABEL_25:
    uint64_t result = (void *)swift_release();
    uint64_t v1 = v22;
    goto LABEL_27;
  }
  unint64_t v19 = *(void *)(v23 + 8 * v20);
  if (v19)
  {
    int64_t v11 = v20;
    goto LABEL_24;
  }
  while (1)
  {
    int64_t v11 = v20 + 1;
    if (__OFADD__(v20, 1)) {
      break;
    }
    if (v11 >= v24) {
      goto LABEL_25;
    }
    unint64_t v19 = *(void *)(v23 + 8 * v11);
    ++v20;
    if (v19) {
      goto LABEL_24;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_EB3C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C548);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    unint64_t v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    uint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *uint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_EDEC(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_12124(a2);
  uint64_t result = sub_1FC020();
  uint64_t v6 = result;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  int64_t v7 = 0;
  uint64_t v8 = v4 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(v4 + 32);
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  unint64_t v11 = v10 & *(void *)(v4 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v13 = result + 56;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v16 = v15 | (v7 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v7;
    if (!v18)
    {
      int64_t v7 = v17 + 1;
      if (v17 + 1 >= v12) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v7);
      if (!v18)
      {
        int64_t v7 = v17 + 2;
        if (v17 + 2 >= v12) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v7);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v11 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v7 << 6);
LABEL_24:
    Swift::UInt v20 = *(unsigned __int8 *)(*(void *)(v4 + 48) + v16);
    sub_1FC7E0();
    sub_1FC7F0(v20);
    uint64_t result = sub_1FC830();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v13 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v13 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v13 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v12)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v7 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v7 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v7);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F064()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C528);
  uint64_t result = sub_1FC020();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  BOOL v26 = v1;
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v15 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v10) {
        goto LABEL_33;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v10) {
          goto LABEL_33;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(*(void *)(v2 + 48) + 8 * v14);
    uint64_t result = sub_1FC7D0();
    uint64_t v19 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v20) & ~*(void *)(v11 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v24 = v21 == v23;
        if (v21 == v23) {
          unint64_t v21 = 0;
        }
        v22 |= v24;
        uint64_t v25 = *(void *)(v11 + 8 * v21);
      }
      while (v25 == -1);
      unint64_t v12 = __clz(__rbit64(~v25)) + (v21 << 6);
    }
    *(void *)(v11 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    *(void *)(*(void *)(v4 + 48) + 8 * v12) = v18;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v10)
  {
LABEL_33:
    uint64_t result = swift_release();
    uint64_t v1 = v26;
    goto LABEL_35;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v10) {
      goto LABEL_33;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_F2C8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C520);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_44:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v33 = v0;
  uint64_t v34 = v2 + 56;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(v2 + 56);
  int64_t v35 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v8 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v10 = 0;
  uint64_t v36 = v2;
  uint64_t v37 = v4;
  while (1)
  {
    if (v7)
    {
      int64_t v44 = v10;
      uint64_t v45 = (v7 - 1) & v7;
      unint64_t v12 = __clz(__rbit64(v7)) | (v10 << 6);
      goto LABEL_24;
    }
    int64_t v13 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
LABEL_45:
      __break(1u);
      goto LABEL_46;
    }
    if (v13 >= v35) {
      goto LABEL_42;
    }
    unint64_t v14 = *(void *)(v34 + 8 * v13);
    int64_t v15 = v10 + 1;
    if (!v14)
    {
      int64_t v15 = v10 + 2;
      if (v10 + 2 >= v35) {
        goto LABEL_42;
      }
      unint64_t v14 = *(void *)(v34 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v10 + 3;
        if (v10 + 3 >= v35) {
          goto LABEL_42;
        }
        unint64_t v14 = *(void *)(v34 + 8 * v15);
        if (!v14) {
          break;
        }
      }
    }
LABEL_23:
    int64_t v44 = v15;
    uint64_t v45 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v15 << 6);
LABEL_24:
    memcpy(__src, (const void *)(*(void *)(v2 + 48) + 560 * v12), 0x229uLL);
    sub_1FC7E0();
    char v17 = BYTE8(__src[0]);
    uint64_t v18 = *(void *)&__src[2];
    char v19 = BYTE8(__src[2]);
    long long v47 = __src[3];
    long long v20 = __src[4];
    char v21 = __src[5];
    long long v22 = __src[6];
    uint64_t v43 = *((void *)&__src[5] + 1);
    uint64_t v41 = *((void *)&__src[7] + 1);
    uint64_t v42 = *(void *)&__src[7];
    unint64_t v23 = *((void *)&__src[8] + 1);
    uint64_t v39 = *(void *)&__src[9];
    uint64_t v40 = *(void *)&__src[8];
    uint64_t v38 = *((void *)&__src[9] + 1);
    long long v46 = __src[1];
    sub_1FC820(*(Swift::UInt64 *)&__src[0]);
    LOBYTE(v50) = v17;
    long long v51 = v46;
    uint64_t v52 = v18;
    LOBYTE(v53) = v19;
    long long v54 = v47;
    long long v55 = v20;
    char v56 = v21;
    sub_12384(__src);
    Book.Metadata.hash(into:)((uint64_t)v57);
    if (v23 >> 1 == 0xFFFFFFFF)
    {
      sub_1FC800(0);
    }
    else
    {
      uint64_t v50 = v43;
      long long v51 = v22;
      uint64_t v52 = v42;
      uint64_t v53 = v41;
      *(void *)&long long v54 = v40;
      *((void *)&v54 + 1) = v23;
      *(void *)&long long v55 = v39;
      *((void *)&v55 + 1) = v38;
      sub_1FC800(1u);
      InternalAffinitySource.hash(into:)((uint64_t)v57);
    }
    uint64_t v2 = v36;
    uint64_t v4 = v37;
    unint64_t v7 = v45;
    sub_12588((uint64_t)&__src[10], (uint64_t)&v50);
    if (sub_125F0((uint64_t)&v50) == 1)
    {
      sub_1FC800(0);
    }
    else
    {
      sub_12588((uint64_t)&__src[10], (uint64_t)v49);
      memcpy(__dst, v49, sizeof(__dst));
      sub_1FC800(1u);
      BookHistory.hash(into:)();
    }
    uint64_t v24 = *(void *)&__src[34];
    int v25 = BYTE8(__src[34]);
    swift_bridgeObjectRetain();
    sub_167680((uint64_t)v57, v24);
    swift_bridgeObjectRelease();
    if (v25 == 12)
    {
      sub_1FC800(0);
    }
    else
    {
      v49[0] = v25;
      sub_1FC800(1u);
      PositiveAffinitySource.hash(into:)();
    }
    uint64_t result = sub_1FC830();
    uint64_t v26 = -1 << *(unsigned char *)(v37 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v27) & ~*(void *)(v8 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_45;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v8 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v11 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v8 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v37 + 48) + 560 * v11), __src, 0x229uLL);
    ++*(void *)(v37 + 16);
    int64_t v10 = v44;
  }
  uint64_t v16 = v10 + 4;
  if (v10 + 4 >= v35)
  {
LABEL_42:
    uint64_t result = swift_release_n();
    uint64_t v1 = v33;
    goto LABEL_44;
  }
  unint64_t v14 = *(void *)(v34 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v10 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v35) {
      goto LABEL_42;
    }
    unint64_t v14 = *(void *)(v34 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_46:
  __break(1u);
  return result;
}

uint64_t sub_F790()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C558);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_FA54()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C5B0);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v29 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v9 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v11 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v11;
    if (!v17)
    {
      int64_t v11 = v16 + 1;
      if (v16 + 1 >= v29) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v11);
      if (!v17)
      {
        int64_t v11 = v16 + 2;
        if (v16 + 2 >= v29) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v11);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v11 << 6);
LABEL_24:
    char v19 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v15);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    uint64_t result = sub_1FC830();
    uint64_t v22 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v12 = __clz(__rbit64((-1 << v23) & ~*(void *)(v9 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v25 = 0;
      unint64_t v26 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v26 && (v25 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v27 = v24 == v26;
        if (v24 == v26) {
          unint64_t v24 = 0;
        }
        v25 |= v27;
        uint64_t v28 = *(void *)(v9 + 8 * v24);
      }
      while (v28 == -1);
      unint64_t v12 = __clz(__rbit64(~v28)) + (v24 << 6);
    }
    *(void *)(v9 + ((v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v12;
    unint64_t v13 = (void *)(*(void *)(v4 + 48) + 16 * v12);
    *unint64_t v13 = v20;
    v13[1] = v21;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v29)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v11 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v11 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v11 >= v29) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v11);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_FD04(uint64_t a1)
{
  return sub_FD10(a1, &qword_26C530);
}

uint64_t sub_FD10(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v4 = *v2;
  sub_12124(a2);
  uint64_t v5 = sub_1FC020();
  uint64_t v6 = v5;
  if (!*(void *)(v4 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    *uint64_t v3 = v6;
    return result;
  }
  uint64_t v7 = 1 << *(unsigned char *)(v4 + 32);
  uint64_t v8 = v4 + 56;
  if (v7 < 64) {
    uint64_t v9 = ~(-1 << v7);
  }
  else {
    uint64_t v9 = -1;
  }
  unint64_t v10 = v9 & *(void *)(v4 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v11 = v5 + 56;
  uint64_t result = swift_retain();
  int64_t v13 = 0;
  while (1)
  {
    if (v10)
    {
      unint64_t v15 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v16 = v15 | (v13 << 6);
      goto LABEL_24;
    }
    int64_t v17 = v13 + 1;
    if (__OFADD__(v13, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v17 >= v28) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v17);
    ++v13;
    if (!v18)
    {
      int64_t v13 = v17 + 1;
      if (v17 + 1 >= v28) {
        goto LABEL_33;
      }
      unint64_t v18 = *(void *)(v8 + 8 * v13);
      if (!v18)
      {
        int64_t v13 = v17 + 2;
        if (v17 + 2 >= v28) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v8 + 8 * v13);
        if (!v18) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v10 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v13 << 6);
LABEL_24:
    char v20 = *(unsigned char *)(*(void *)(v4 + 48) + v16);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v21 = -1 << *(unsigned char *)(v6 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v22) & ~*(void *)(v11 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v11 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v14 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v11 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    *(unsigned char *)(*(void *)(v6 + 48) + v14) = v20;
    ++*(void *)(v6 + 16);
  }
  int64_t v19 = v17 + 3;
  if (v19 >= v28)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v3 = v2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v8 + 8 * v19);
  if (v18)
  {
    int64_t v13 = v19;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v13 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v13 >= v28) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v8 + 8 * v13);
    ++v19;
    if (v18) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_FFEC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C540);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_10294()
{
  uint64_t v1 = *v0;
  sub_12124(&qword_26C5A0);
  uint64_t v2 = sub_1FC020();
  uint64_t v3 = v2;
  if (!*(void *)(v1 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_45;
  }
  uint64_t v4 = 1 << *(unsigned char *)(v1 + 32);
  uint64_t v30 = v1 + 56;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(v1 + 56);
  int64_t v31 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = v2 + 56;
  swift_retain();
  int64_t v8 = 0;
  while (1)
  {
    if (v6)
    {
      unint64_t v10 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v11 = v10 | (v8 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_46;
    }
    if (v12 >= v31) {
      break;
    }
    unint64_t v13 = *(void *)(v30 + 8 * v12);
    ++v8;
    if (!v13)
    {
      int64_t v8 = v12 + 1;
      if (v12 + 1 >= v31) {
        break;
      }
      unint64_t v13 = *(void *)(v30 + 8 * v8);
      if (!v13)
      {
        int64_t v8 = v12 + 2;
        if (v12 + 2 >= v31) {
          break;
        }
        unint64_t v13 = *(void *)(v30 + 8 * v8);
        if (!v13)
        {
          int64_t v14 = v12 + 3;
          if (v14 >= v31) {
            break;
          }
          unint64_t v13 = *(void *)(v30 + 8 * v14);
          if (!v13)
          {
            while (1)
            {
              int64_t v8 = v14 + 1;
              if (__OFADD__(v14, 1)) {
                goto LABEL_47;
              }
              if (v8 >= v31) {
                goto LABEL_43;
              }
              unint64_t v13 = *(void *)(v30 + 8 * v8);
              ++v14;
              if (v13) {
                goto LABEL_23;
              }
            }
          }
          int64_t v8 = v14;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v8 << 6);
LABEL_24:
    sub_1269C(*(void *)(v1 + 48) + 560 * v11, (uint64_t)v35);
    sub_1FC7E0();
    sub_1269C((uint64_t)v35, (uint64_t)v36);
    switch(sub_1299C((uint64_t)v36))
    {
      case 1u:
        Swift::UInt64 v17 = *(void *)sub_129A8((uint64_t)v36);
        Swift::UInt v18 = 1;
        goto LABEL_28;
      case 2u:
        Swift::UInt64 v17 = *(void *)sub_129A8((uint64_t)v36);
        Swift::UInt v18 = 2;
LABEL_28:
        sub_1FC7F0(v18);
        sub_1FC820(v17);
        break;
      case 3u:
        Swift::UInt64 v19 = *(void *)sub_129A8((uint64_t)v36);
        Swift::UInt v20 = 3;
        goto LABEL_31;
      case 4u:
        Swift::UInt64 v19 = *(void *)sub_129A8((uint64_t)v36);
        Swift::UInt v20 = 4;
LABEL_31:
        sub_1FC7F0(v20);
        sub_1FC820(v19);
        goto LABEL_33;
      case 5u:
        sub_129A8((uint64_t)v36);
        sub_1FC7F0(5uLL);
LABEL_33:
        sub_1FB8C0();
        swift_bridgeObjectRelease();
        break;
      default:
        unint64_t v15 = (const void *)sub_129A8((uint64_t)v36);
        sub_1FC7F0(0);
        memcpy(__dst, v15, sizeof(__dst));
        sub_1269C((uint64_t)v35, (uint64_t)v33);
        int64_t v16 = (void *)sub_129A8((uint64_t)v33);
        sub_12384(v16);
        SeedBook.hash(into:)((uint64_t)v34);
        break;
    }
    Swift::Int v21 = sub_1FC830();
    uint64_t v22 = -1 << *(unsigned char *)(v3 + 32);
    unint64_t v23 = v21 & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v7 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v9 = __clz(__rbit64((-1 << v23) & ~*(void *)(v7 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_7;
    }
    char v25 = 0;
    unint64_t v26 = (unint64_t)(63 - v22) >> 6;
    do
    {
      if (++v24 == v26 && (v25 & 1) != 0)
      {
        __break(1u);
LABEL_46:
        __break(1u);
LABEL_47:
        __break(1u);
        JUMPOUT(0x106C4);
      }
      BOOL v27 = v24 == v26;
      if (v24 == v26) {
        unint64_t v24 = 0;
      }
      v25 |= v27;
      uint64_t v28 = *(void *)(v7 + 8 * v24);
    }
    while (v28 == -1);
    unint64_t v9 = __clz(__rbit64(~v28)) + (v24 << 6);
LABEL_7:
    *(void *)(v7 + ((v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v9;
    sub_1269C((uint64_t)v35, *(void *)(v3 + 48) + 560 * v9);
    ++*(void *)(v3 + 16);
  }
LABEL_43:
  uint64_t result = swift_release_n();
LABEL_45:
  *uint64_t v0 = v3;
  return result;
}

uint64_t sub_106DC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C538);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v4;
    return result;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  uint64_t result = swift_retain();
  int64_t v12 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v14 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_24;
    }
    int64_t v16 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v16 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v16);
    ++v12;
    if (!v17)
    {
      int64_t v12 = v16 + 1;
      if (v16 + 1 >= v9) {
        goto LABEL_33;
      }
      unint64_t v17 = *(void *)(v6 + 8 * v12);
      if (!v17)
      {
        int64_t v12 = v16 + 2;
        if (v16 + 2 >= v9) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v6 + 8 * v12);
        if (!v17) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_24:
    char v19 = *(unsigned char *)(*(void *)(v2 + 48) + v15);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC830();
    uint64_t v20 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v21 = result & ~v20;
    unint64_t v22 = v21 >> 6;
    if (((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6))) != 0)
    {
      unint64_t v13 = __clz(__rbit64((-1 << v21) & ~*(void *)(v10 + 8 * (v21 >> 6)))) | v21 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v20) >> 6;
      do
      {
        if (++v22 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v25 = v22 == v24;
        if (v22 == v24) {
          unint64_t v22 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v10 + 8 * v22);
      }
      while (v26 == -1);
      unint64_t v13 = __clz(__rbit64(~v26)) + (v22 << 6);
    }
    *(void *)(v10 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
    *(unsigned char *)(*(void *)(v4 + 48) + v13) = v19;
    ++*(void *)(v4 + 16);
  }
  int64_t v18 = v16 + 3;
  if (v18 >= v9)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v0;
    goto LABEL_35;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
    int64_t v12 = v18;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v9) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_109B8()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C598);
  uint64_t result = sub_1FC020();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v6 = v2 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(v2 + 32);
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(v2 + 56);
  int64_t v28 = (unint64_t)(v7 + 63) >> 6;
  uint64_t v10 = result + 56;
  while (1)
  {
    if (v9)
    {
      unint64_t v13 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v14 = v13 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v15 >= v28) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v15);
    ++v5;
    if (!v16)
    {
      int64_t v5 = v15 + 1;
      if (v15 + 1 >= v28) {
        goto LABEL_36;
      }
      unint64_t v16 = *(void *)(v6 + 8 * v5);
      if (!v16)
      {
        int64_t v5 = v15 + 2;
        if (v15 + 2 >= v28) {
          goto LABEL_36;
        }
        unint64_t v16 = *(void *)(v6 + 8 * v5);
        if (!v16) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v9 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v5 << 6);
LABEL_24:
    uint64_t v18 = *(void *)(v2 + 48) + 16 * v14;
    Swift::UInt64 v19 = *(void *)v18;
    int v20 = *(unsigned __int8 *)(v18 + 8);
    sub_1FC7E0();
    if (v20 == 1)
    {
      sub_1FC800(0);
    }
    else
    {
      sub_1FC800(1u);
      sub_1FC820(v19);
    }
    uint64_t result = sub_1FC830();
    uint64_t v21 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v22 = result & ~v21;
    unint64_t v23 = v22 >> 6;
    if (((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6))) != 0)
    {
      unint64_t v11 = __clz(__rbit64((-1 << v22) & ~*(void *)(v10 + 8 * (v22 >> 6)))) | v22 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v24 = 0;
      unint64_t v25 = (unint64_t)(63 - v21) >> 6;
      do
      {
        if (++v23 == v25 && (v24 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v26 = v23 == v25;
        if (v23 == v25) {
          unint64_t v23 = 0;
        }
        v24 |= v26;
        uint64_t v27 = *(void *)(v10 + 8 * v23);
      }
      while (v27 == -1);
      unint64_t v11 = __clz(__rbit64(~v27)) + (v23 << 6);
    }
    *(void *)(v10 + ((v11 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v11;
    uint64_t v12 = *(void *)(v4 + 48) + 16 * v11;
    *(void *)uint64_t v12 = v19;
    *(unsigned char *)(v12 + 8) = v20;
    ++*(void *)(v4 + 16);
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v28)
  {
LABEL_36:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v16 = *(void *)(v6 + 8 * v17);
  if (v16)
  {
    int64_t v5 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v5 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v5 >= v28) {
      goto LABEL_36;
    }
    unint64_t v16 = *(void *)(v6 + 8 * v5);
    ++v17;
    if (v16) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_10C7C()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C560);
  uint64_t v3 = sub_1FC020();
  uint64_t v4 = v3;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
    goto LABEL_36;
  }
  uint64_t v5 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v6 = v2 + 56;
  if (v5 < 64) {
    uint64_t v7 = ~(-1 << v5);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v9 = (unint64_t)(v5 + 63) >> 6;
  uint64_t v10 = v3 + 56;
  swift_retain();
  int64_t v11 = 0;
  while (1)
  {
    if (v8)
    {
      unint64_t v17 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v18 = v17 | (v11 << 6);
      goto LABEL_33;
    }
    int64_t v19 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      goto LABEL_37;
    }
    if (v19 >= v9) {
      break;
    }
    unint64_t v20 = *(void *)(v6 + 8 * v19);
    ++v11;
    if (!v20)
    {
      int64_t v11 = v19 + 1;
      if (v19 + 1 >= v9) {
        break;
      }
      unint64_t v20 = *(void *)(v6 + 8 * v11);
      if (!v20)
      {
        int64_t v11 = v19 + 2;
        if (v19 + 2 >= v9) {
          break;
        }
        unint64_t v20 = *(void *)(v6 + 8 * v11);
        if (!v20)
        {
          int64_t v21 = v19 + 3;
          if (v21 >= v9) {
            break;
          }
          unint64_t v20 = *(void *)(v6 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v11 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_38;
              }
              if (v11 >= v9) {
                goto LABEL_34;
              }
              unint64_t v20 = *(void *)(v6 + 8 * v11);
              ++v21;
              if (v20) {
                goto LABEL_32;
              }
            }
          }
          int64_t v11 = v21;
        }
      }
    }
LABEL_32:
    unint64_t v8 = (v20 - 1) & v20;
    unint64_t v18 = __clz(__rbit64(v20)) + (v11 << 6);
LABEL_33:
    char v26 = *(unsigned char *)(*(void *)(v2 + 48) + v18);
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    Swift::Int v12 = sub_1FC830();
    uint64_t v13 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v14 = v12 & ~v13;
    unint64_t v15 = v14 >> 6;
    if (((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6))) != 0)
    {
      unint64_t v16 = __clz(__rbit64((-1 << v14) & ~*(void *)(v10 + 8 * (v14 >> 6)))) | v14 & 0x7FFFFFFFFFFFFFC0;
      goto LABEL_8;
    }
    char v22 = 0;
    unint64_t v23 = (unint64_t)(63 - v13) >> 6;
    do
    {
      if (++v15 == v23 && (v22 & 1) != 0)
      {
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
        JUMPOUT(0x1107CLL);
      }
      BOOL v24 = v15 == v23;
      if (v15 == v23) {
        unint64_t v15 = 0;
      }
      v22 |= v24;
      uint64_t v25 = *(void *)(v10 + 8 * v15);
    }
    while (v25 == -1);
    unint64_t v16 = __clz(__rbit64(~v25)) + (v15 << 6);
LABEL_8:
    *(void *)(v10 + ((v16 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v16;
    *(unsigned char *)(*(void *)(v4 + 48) + v16) = v26;
    ++*(void *)(v4 + 16);
  }
LABEL_34:
  uint64_t result = swift_release_n();
  uint64_t v1 = v0;
LABEL_36:
  uint64_t *v1 = v4;
  return result;
}

uint64_t sub_110AC()
{
  uint64_t v1 = v0;
  uint64_t v2 = *v0;
  sub_12124(&qword_26C588);
  uint64_t result = sub_1FC020();
  uint64_t v4 = result;
  if (!*(void *)(v2 + 16))
  {
    uint64_t result = swift_release();
LABEL_38:
    uint64_t *v1 = v4;
    return result;
  }
  int64_t v5 = 0;
  uint64_t v32 = v2 + 56;
  uint64_t v6 = 1 << *(unsigned char *)(v2 + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(v2 + 56);
  int64_t v33 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v9 = result + 56;
  while (1)
  {
    if (v8)
    {
      unint64_t v12 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      int64_t v34 = v5;
      unint64_t v13 = v12 | (v5 << 6);
      goto LABEL_24;
    }
    int64_t v14 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
LABEL_39:
      __break(1u);
      goto LABEL_40;
    }
    if (v14 >= v33) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v14);
    int64_t v16 = v5 + 1;
    if (!v15)
    {
      int64_t v16 = v14 + 1;
      if (v14 + 1 >= v33) {
        goto LABEL_36;
      }
      unint64_t v15 = *(void *)(v32 + 8 * v16);
      if (!v15)
      {
        int64_t v16 = v14 + 2;
        if (v14 + 2 >= v33) {
          goto LABEL_36;
        }
        unint64_t v15 = *(void *)(v32 + 8 * v16);
        if (!v15) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v15 - 1) & v15;
    int64_t v34 = v16;
    unint64_t v13 = __clz(__rbit64(v15)) + (v16 << 6);
LABEL_24:
    uint64_t v18 = v2;
    uint64_t v19 = *(void *)(v2 + 48) + 40 * v13;
    Swift::UInt v20 = *(void *)v19;
    Swift::UInt64 v21 = *(void *)(v19 + 8);
    Swift::UInt8 v22 = *(unsigned char *)(v19 + 16);
    Swift::UInt64 v23 = *(void *)(v19 + 24);
    int v24 = *(unsigned __int8 *)(v19 + 32);
    sub_1FC7E0();
    sub_1FC7F0(v20);
    sub_1FC820(v21);
    sub_1FC800(v22);
    if (v24 == 1)
    {
      sub_1FC800(0);
    }
    else
    {
      sub_1FC800(1u);
      sub_1FC820(v23);
    }
    uint64_t result = sub_1FC830();
    uint64_t v25 = -1 << *(unsigned char *)(v4 + 32);
    unint64_t v26 = result & ~v25;
    unint64_t v27 = v26 >> 6;
    if (((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6))) != 0)
    {
      unint64_t v10 = __clz(__rbit64((-1 << v26) & ~*(void *)(v9 + 8 * (v26 >> 6)))) | v26 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v28 = 0;
      unint64_t v29 = (unint64_t)(63 - v25) >> 6;
      do
      {
        if (++v27 == v29 && (v28 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v30 = v27 == v29;
        if (v27 == v29) {
          unint64_t v27 = 0;
        }
        v28 |= v30;
        uint64_t v31 = *(void *)(v9 + 8 * v27);
      }
      while (v31 == -1);
      unint64_t v10 = __clz(__rbit64(~v31)) + (v27 << 6);
    }
    *(void *)(v9 + ((v10 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v10;
    uint64_t v11 = *(void *)(v4 + 48) + 40 * v10;
    *(void *)uint64_t v11 = v20;
    *(void *)(v11 + 8) = v21;
    *(unsigned char *)(v11 + 16) = v22;
    *(void *)(v11 + 24) = v23;
    *(unsigned char *)(v11 + 32) = v24;
    ++*(void *)(v4 + 16);
    uint64_t v2 = v18;
    int64_t v5 = v34;
  }
  int64_t v17 = v14 + 3;
  if (v17 >= v33)
  {
LABEL_36:
    uint64_t result = swift_release();
    uint64_t v1 = v0;
    goto LABEL_38;
  }
  unint64_t v15 = *(void *)(v32 + 8 * v17);
  if (v15)
  {
    int64_t v16 = v17;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v16 >= v33) {
      goto LABEL_36;
    }
    unint64_t v15 = *(void *)(v32 + 8 * v16);
    ++v17;
    if (v15) {
      goto LABEL_23;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

uint64_t sub_113D8()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_1FB110();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  int64_t v5 = (char *)&v33 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v0;
  sub_12124(&qword_26C578);
  uint64_t v7 = sub_1FC020();
  uint64_t v8 = v7;
  if (!*(void *)(v6 + 16))
  {
    uint64_t result = swift_release();
LABEL_35:
    uint64_t *v1 = v8;
    return result;
  }
  uint64_t v9 = 1 << *(unsigned char *)(v6 + 32);
  uint64_t v10 = *(void *)(v6 + 56);
  int64_t v34 = v0;
  uint64_t v35 = v6 + 56;
  if (v9 < 64) {
    uint64_t v11 = ~(-1 << v9);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v10;
  int64_t v36 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v37 = v3 + 16;
  uint64_t v13 = v7 + 56;
  uint64_t v38 = v3;
  int64_t v14 = (uint64_t (**)(unint64_t, char *, uint64_t))(v3 + 32);
  uint64_t result = swift_retain();
  int64_t v16 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v18 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v19 = v18 | (v16 << 6);
      goto LABEL_24;
    }
    int64_t v20 = v16 + 1;
    if (__OFADD__(v16, 1))
    {
LABEL_36:
      __break(1u);
      goto LABEL_37;
    }
    if (v20 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v20);
    ++v16;
    if (!v21)
    {
      int64_t v16 = v20 + 1;
      if (v20 + 1 >= v36) {
        goto LABEL_33;
      }
      unint64_t v21 = *(void *)(v35 + 8 * v16);
      if (!v21)
      {
        int64_t v16 = v20 + 2;
        if (v20 + 2 >= v36) {
          goto LABEL_33;
        }
        unint64_t v21 = *(void *)(v35 + 8 * v16);
        if (!v21) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v21 - 1) & v21;
    unint64_t v19 = __clz(__rbit64(v21)) + (v16 << 6);
LABEL_24:
    uint64_t v23 = v6;
    uint64_t v24 = *(void *)(v6 + 48);
    uint64_t v25 = *(void *)(v38 + 72);
    (*(void (**)(char *, unint64_t, uint64_t))(v38 + 16))(v5, v24 + v25 * v19, v2);
    sub_12604(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t result = sub_1FB790();
    uint64_t v26 = -1 << *(unsigned char *)(v8 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v17 = __clz(__rbit64((-1 << v27) & ~*(void *)(v13 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v29 = 0;
      unint64_t v30 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v30 && (v29 & 1) != 0)
        {
          __break(1u);
          goto LABEL_36;
        }
        BOOL v31 = v28 == v30;
        if (v28 == v30) {
          unint64_t v28 = 0;
        }
        v29 |= v31;
        uint64_t v32 = *(void *)(v13 + 8 * v28);
      }
      while (v32 == -1);
      unint64_t v17 = __clz(__rbit64(~v32)) + (v28 << 6);
    }
    *(void *)(v13 + ((v17 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v17;
    uint64_t result = (*v14)(*(void *)(v8 + 48) + v17 * v25, v5, v2);
    ++*(void *)(v8 + 16);
    uint64_t v6 = v23;
  }
  int64_t v22 = v20 + 3;
  if (v22 >= v36)
  {
LABEL_33:
    uint64_t result = swift_release_n();
    uint64_t v1 = v34;
    goto LABEL_35;
  }
  unint64_t v21 = *(void *)(v35 + 8 * v22);
  if (v21)
  {
    int64_t v16 = v22;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v16 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v16 >= v36) {
      goto LABEL_33;
    }
    unint64_t v21 = *(void *)(v35 + 8 * v16);
    ++v22;
    if (v21) {
      goto LABEL_23;
    }
  }
LABEL_37:
  __break(1u);
  return result;
}

uint64_t sub_11788(unint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v8 = a4[6];
  uint64_t v9 = sub_1FB220();
  (*(void (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 32))(v8 + *(void *)(*(void *)(v9 - 8) + 72) * a1, a2, v9);
  uint64_t v10 = a4[7];
  uint64_t v11 = sub_1FB1F0();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a3, v11);
  uint64_t v13 = a4[2];
  BOOL v14 = __OFADD__(v13, 1);
  uint64_t v15 = v13 + 1;
  if (v14) {
    __break(1u);
  }
  else {
    a4[2] = v15;
  }
  return result;
}

void *sub_1187C(unint64_t a1, uint64_t a2, void *__src, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = memcpy((void *)(a4[7] + 384 * a1), __src, 0x179uLL);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_118F4(unint64_t result, uint64_t a2, _OWORD *a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(void *)(a4[6] + 8 * result) = a2;
  uint64_t v4 = (_OWORD *)(a4[7] + 80 * result);
  long long v5 = a3[4];
  long long v6 = a3[2];
  v4[3] = a3[3];
  v4[4] = v5;
  long long v7 = a3[1];
  _OWORD *v4 = *a3;
  v4[1] = v7;
  v4[2] = v6;
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_11954(unint64_t result, uint64_t a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  uint64_t v4 = 8 * result;
  *(void *)(a4[6] + v4) = a2;
  *(void *)(a4[7] + v4) = a3;
  uint64_t v5 = a4[2];
  BOOL v6 = __OFADD__(v5, 1);
  uint64_t v7 = v5 + 1;
  if (v6) {
    __break(1u);
  }
  else {
    a4[2] = v7;
  }
  return result;
}

uint64_t sub_119A0(unint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t v10 = a5[6];
  uint64_t v11 = sub_1FB110();
  uint64_t result = (*(uint64_t (**)(unint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * a1, a2, v11);
  uint64_t v13 = (void *)(a5[7] + 16 * a1);
  *uint64_t v13 = a3;
  v13[1] = a4;
  uint64_t v14 = a5[2];
  BOOL v15 = __OFADD__(v14, 1);
  uint64_t v16 = v14 + 1;
  if (v15) {
    __break(1u);
  }
  else {
    a5[2] = v16;
  }
  return result;
}

void *sub_11A64(unint64_t a1, const void *a2, uint64_t a3, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  uint64_t result = memcpy((void *)(a4[6] + 560 * a1), a2, 0x229uLL);
  *(void *)(a4[7] + 8 * a1) = a3;
  uint64_t v8 = a4[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a4[2] = v10;
  }
  return result;
}

unint64_t sub_11AE0(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(void *)(a6[6] + 8 * result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(void *)uint64_t v6 = a3;
  *(_DWORD *)(v6 + 8) = a4;
  *(unsigned char *)(v6 + 12) = BYTE4(a4) & 1;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

unint64_t sub_11B3C(unint64_t result, char a2, uint64_t a3, char a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a6[6] + result) = a2;
  uint64_t v6 = a6[7] + 24 * result;
  *(void *)uint64_t v6 = a3;
  *(unsigned char *)(v6 + 8) = a4 & 1;
  *(void *)(v6 + 16) = a5;
  uint64_t v7 = a6[2];
  BOOL v8 = __OFADD__(v7, 1);
  uint64_t v9 = v7 + 1;
  if (v8) {
    __break(1u);
  }
  else {
    a6[2] = v9;
  }
  return result;
}

unint64_t sub_11B94(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, void *a5)
{
  a5[(result >> 6) + 8] |= 1 << result;
  uint64_t v5 = (void *)(a5[6] + 16 * result);
  *uint64_t v5 = a2;
  v5[1] = a3;
  *(void *)(a5[7] + 8 * result) = a4;
  uint64_t v6 = a5[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a5[2] = v8;
  }
  return result;
}

unint64_t sub_11BDC(unint64_t result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, void *a6)
{
  a6[(result >> 6) + 8] |= 1 << result;
  uint64_t v6 = (void *)(a6[6] + 16 * result);
  void *v6 = a2;
  v6[1] = a3;
  BOOL v7 = (void *)(a6[7] + 16 * result);
  *BOOL v7 = a4;
  v7[1] = a5;
  uint64_t v8 = a6[2];
  BOOL v9 = __OFADD__(v8, 1);
  uint64_t v10 = v8 + 1;
  if (v9) {
    __break(1u);
  }
  else {
    a6[2] = v10;
  }
  return result;
}

void *sub_11C2C(unint64_t a1, uint64_t a2, void *__src, void *a4)
{
  a4[(a1 >> 6) + 8] |= 1 << a1;
  *(void *)(a4[6] + 8 * a1) = a2;
  uint64_t result = memcpy((void *)(a4[7] + 560 * a1), __src, 0x229uLL);
  uint64_t v6 = a4[2];
  BOOL v7 = __OFADD__(v6, 1);
  uint64_t v8 = v6 + 1;
  if (v7) {
    __break(1u);
  }
  else {
    a4[2] = v8;
  }
  return result;
}

unint64_t sub_11C9C(unint64_t result, char a2, uint64_t a3, void *a4)
{
  a4[(result >> 6) + 8] |= 1 << result;
  *(unsigned char *)(a4[6] + result) = a2 & 1;
  *(void *)(a4[7] + 8 * result) = a3;
  uint64_t v4 = a4[2];
  BOOL v5 = __OFADD__(v4, 1);
  uint64_t v6 = v4 + 1;
  if (v5) {
    __break(1u);
  }
  else {
    a4[2] = v6;
  }
  return result;
}

uint64_t sub_11CE8@<X0>(uint64_t result@<X0>, int a2@<W1>, uint64_t a3@<X3>, unsigned char *a4@<X8>)
{
  if (result < 0 || 1 << *(unsigned char *)(a3 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a3 + 8 * ((unint64_t)result >> 6) + 64) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a3 + 36) == a2)
  {
    *a4 = *(unsigned char *)(*(void *)(a3 + 48) + result);
    return result;
  }
LABEL_8:
  __break(1u);
  return result;
}

uint64_t sub_11D3C(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 744);
  uint64_t v23 = *(void *)(a1 + 736);
  uint64_t v20 = *(void *)(a1 + 760);
  uint64_t v21 = *(void *)(a1 + 752);
  uint64_t v18 = *(void *)(a1 + 776);
  uint64_t v19 = *(void *)(a1 + 768);
  uint64_t v16 = *(void *)(a1 + 792);
  uint64_t v17 = *(void *)(a1 + 784);
  long long v9 = *(_OWORD *)(a1 + 800);
  long long v7 = *(_OWORD *)(a1 + 832);
  long long v8 = *(_OWORD *)(a1 + 816);
  long long v5 = *(_OWORD *)(a1 + 864);
  long long v6 = *(_OWORD *)(a1 + 848);
  long long v4 = *(_OWORD *)(a1 + 880);
  long long v3 = *(_OWORD *)(a1 + 896);
  uint64_t v10 = *(void *)(a1 + 928);
  uint64_t v11 = *(void *)(a1 + 920);
  uint64_t v14 = *(void *)(a1 + 976);
  uint64_t v15 = *(void *)(a1 + 968);
  uint64_t v12 = *(void *)(a1 + 992);
  uint64_t v13 = *(void *)(a1 + 984);
  uint64_t v26 = *(void *)(a1 + 1056);
  uint64_t v27 = *(void *)(a1 + 1048);
  uint64_t v24 = *(void *)(a1 + 1072);
  uint64_t v25 = *(void *)(a1 + 1064);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_11FF4(v23, v22, v21, v20, v19, v18, v17, v16, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3,
    *((uint64_t *)&v3 + 1));
  sub_12040(v11, v10);
  sub_12090(v15, v14, v13, v12);
  swift_bridgeObjectRelease();
  sub_120D4(v27, v26, v25, v24);
  return a1;
}

uint64_t sub_11FF4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22)
{
  uint64_t result = a22;
  if (a22)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_12040(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_12090(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_120D4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_12124(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContext2();
    *a1 = result;
  }
  return result;
}

unint64_t sub_12168()
{
  unint64_t result = qword_26C508;
  if (!qword_26C508)
  {
    sub_121C4(&qword_26C500);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C508);
  }
  return result;
}

uint64_t sub_121C4(uint64_t *a1)
{
  uint64_t result = *a1;
  if (result < 0)
  {
    uint64_t result = swift_getTypeByMangledNameInContextInMetadataState2();
    *a1 = result;
  }
  return result;
}

uint64_t sub_1220C(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26C4F8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1226C()
{
  return swift_release();
}

uint64_t sub_12278(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  if (v6 < 8) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 80);
  if (v1)
  {
    uint64_t v2 = 128;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v1 = *(void *)(a1 + 88);
  if (v1)
  {
    uint64_t v2 = 192;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 4) {
    unint64_t v7 = 4;
  }
  unint64_t v8 = v7 - 4;
  long long v9 = (unint64_t *)(a1 + 96);
  uint64_t v2 = 192;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

void *sub_12328(char *a1, void *a2, void *__src)
{
  char v4 = *a1;
  memcpy(v6, __src, 0x229uLL);
  return sub_6814(v4, a2, v6);
}

void *sub_12384(void *a1)
{
  uint64_t v2 = a1[12];
  uint64_t v3 = a1[13];
  uint64_t v4 = a1[14];
  uint64_t v5 = a1[15];
  uint64_t v6 = a1[16];
  unint64_t v7 = a1[17];
  uint64_t v9 = a1[11];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_12430(v9, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_12430(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a7 >> 1 != 0xFFFFFFFF) {
    return sub_1244C();
  }
  return result;
}

uint64_t sub_1244C()
{
  return swift_bridgeObjectRetain();
}

void *sub_1245C(char *a1)
{
  uint64_t v3 = *(void **)(v1 + 16);
  uint64_t v2 = *(const void **)(v1 + 24);
  char v4 = *a1;
  memcpy(v6, v2, 0x229uLL);
  return sub_6814(v4, v3, v6);
}

void *sub_124B4(void *a1)
{
  uint64_t v2 = a1[12];
  uint64_t v3 = a1[13];
  uint64_t v4 = a1[14];
  uint64_t v5 = a1[15];
  uint64_t v6 = a1[16];
  unint64_t v7 = a1[17];
  uint64_t v9 = a1[11];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_1255C(v9, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1255C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  if (a7 >> 1 != 0xFFFFFFFF) {
    return sub_12578();
  }
  return result;
}

uint64_t sub_12578()
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_12588(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26C518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_125F0(uint64_t a1)
{
  unsigned int v1 = *(unsigned __int8 *)(a1 + 80);
  if (v1 <= 1) {
    return 0;
  }
  else {
    return v1 ^ 0xFF;
  }
}

uint64_t sub_12604(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1264C(uint64_t a1)
{
  uint64_t v1 = *(void *)(*(void *)(a1 + 24) - 8);
  if ((*(unsigned char *)(v1 + 82) & 2) != 0) {
    return swift_release();
  }
  else {
    return (*(uint64_t (**)(void))(v1 + 8))();
  }
}

uint64_t sub_1269C(uint64_t a1, uint64_t a2)
{
  return a2;
}

uint64_t sub_126F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (!(a68 >> 61))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_12430(a12, a13, a14, a15, a16, a17, a18);
    return swift_bridgeObjectRetain();
  }
  return result;
}

#error "1289C: call analysis failed (funcsize=59)"

uint64_t sub_128C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, unint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  if (!(a68 >> 61))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_1255C(a12, a13, a14, a15, a16, a17, a18);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_1299C(uint64_t a1)
{
  return *(void *)(a1 + 536) >> 61;
}

uint64_t sub_129A8(uint64_t result)
{
  *(void *)(result + 536) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

void type metadata accessor for URLResourceKey(uint64_t a1)
{
}

void sub_129CC(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t ForeignTypeMetadata = swift_getForeignTypeMetadata();
    if (!v4) {
      atomic_store(ForeignTypeMetadata, a2);
    }
  }
}

uint64_t sub_12A14()
{
  return sub_12604(&qword_26C5C0, type metadata accessor for URLResourceKey);
}

uint64_t sub_12A5C()
{
  return sub_12604(&qword_26C5C8, type metadata accessor for URLResourceKey);
}

uint64_t sub_12AA4()
{
  return sub_12604(&qword_26C5D0, type metadata accessor for URLResourceKey);
}

uint64_t Transport.SeedBook.bookId.getter()
{
  return *(void *)v0;
}

uint64_t Transport.SeedBook.bookId.setter(uint64_t result)
{
  void *v1 = result;
  return result;
}

uint64_t (*Transport.Recommend.Input.xAppleRequestUUID.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

unint64_t Transport.BookAffinity.affinity.getter()
{
  return *(unsigned int *)(v0 + 8) | ((unint64_t)*(unsigned __int8 *)(v0 + 12) << 32);
}

uint64_t Transport.BookAffinity.affinity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 8) = result;
  *(unsigned char *)(v1 + 12) = BYTE4(result) & 1;
  return result;
}

uint64_t (*Transport.SeedBook.affinity.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendationBlockRequest.profileGenreDenylist.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationBlockRequest.profileGenreDenylist.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 16) = a1;
  return result;
}

uint64_t (*Transport.Recommend.Input.xAppleUserExperimentIds.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.BookAffinity.init(bookId:affinity:inferredFromAffinityForBookIds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(_DWORD *)(a4 + 8) = a2;
  *(unsigned char *)(a4 + 12) = BYTE4(a2) & 1;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t Transport.BookAffinity.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_256D4(a1, a2, (Swift::OpaquePointer)&off_252C58, a3);
}

uint64_t Transport.BookAffinity.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.BookAffinity.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t Transport.Diagnosis.CodingKeys.intValue.getter()
{
  return 0;
}

uint64_t Transport.BookAffinity.CodingKeys.rawValue.getter()
{
  unint64_t v1 = 0x7974696E69666661;
  if (*v0 != 1) {
    unint64_t v1 = 0xD00000000000001ELL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_12C88(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D8DD4(*a1, *a2);
}

Swift::Int sub_12C94()
{
  return sub_1FC830();
}

uint64_t sub_12D38()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_12DC8()
{
  return sub_1FC830();
}

uint64_t sub_12E68@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookAffinity.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_12E74(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x7974696E69666661;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD00000000000001ELL;
    unint64_t v4 = 0x8000000000215D10;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x64496B6F6F62;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_12ED4(uint64_t a1)
{
  unint64_t v2 = sub_2D1AC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_12F10(uint64_t a1)
{
  unint64_t v2 = sub_2D1AC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.BookAffinity.hash(into:)()
{
  Swift::UInt32 v1 = *(_DWORD *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 12);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC820(*(void *)v0);
  if (v2 != 1)
  {
    sub_1FC800(1u);
    if ((v1 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v7 = v1;
    }
    else {
      Swift::UInt32 v7 = 0;
    }
    sub_1FC810(v7);
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_11;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC7F0(*(void *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    unint64_t v5 = (Swift::UInt64 *)(v3 + 32);
    do
    {
      Swift::UInt64 v6 = *v5++;
      sub_1FC820(v6);
      --v4;
    }
    while (v4);
  }
}

uint64_t Transport.BookAffinity.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C5E8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::UInt32 v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(unsigned int *)(v1 + 8);
  int v14 = *(unsigned __int8 *)(v1 + 12);
  uint64_t v11 = *(void *)(v1 + 16);
  sub_5D64(a1, a1[3]);
  sub_2D1AC();
  sub_1FC870();
  char v18 = 0;
  sub_1FC550();
  if (!v2)
  {
    uint64_t v8 = v11;
    char v17 = 1;
    char v15 = v14;
    sub_1FC480();
    uint64_t v13 = v8;
    char v16 = 2;
    sub_12124(&qword_26C5F8);
    sub_2F0D8(&qword_26C600, &qword_26C5F8);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Transport.BookAffinity.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt32 v2 = *(_DWORD *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 12);
  uint64_t v4 = *(void *)(v0 + 16);
  sub_1FC7E0();
  sub_1FC820(v1);
  if (v3 != 1)
  {
    sub_1FC800(1u);
    if ((v2 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v8 = v2;
    }
    else {
      Swift::UInt32 v8 = 0;
    }
    sub_1FC810(v8);
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC7F0(*(void *)(v4 + 16));
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = (Swift::UInt64 *)(v4 + 32);
    do
    {
      Swift::UInt64 v7 = *v6++;
      sub_1FC820(v7);
      --v5;
    }
    while (v5);
  }
  return sub_1FC830();
}

uint64_t Transport.BookAffinity.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C608);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt32 v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2D1AC();
  sub_1FC850();
  if (!v2)
  {
    char v16 = 0;
    uint64_t v9 = sub_1FC410();
    char v15 = 1;
    v13[0] = sub_1FC340();
    sub_12124(&qword_26C5F8);
    char v14 = 2;
    sub_2F0D8(&qword_26C610, &qword_26C5F8);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v13[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v9;
    char v12 = BYTE4(v13[0]);
    *(_DWORD *)(a2 + 8) = v13[0];
    *(unsigned char *)(a2 + 12) = v12 & 1;
    *(void *)(a2 + 16) = v11;
  }
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_13528@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookAffinity.init(from:)(a1, a2);
}

uint64_t sub_13540(void *a1)
{
  return Transport.BookAffinity.encode(to:)(a1);
}

void sub_1355C()
{
  Swift::UInt32 v1 = *(_DWORD *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 12);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC820(*(void *)v0);
  if (v2 != 1)
  {
    sub_1FC800(1u);
    if ((v1 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v7 = v1;
    }
    else {
      Swift::UInt32 v7 = 0;
    }
    sub_1FC810(v7);
    if (v3) {
      goto LABEL_3;
    }
LABEL_11:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_11;
  }
LABEL_3:
  sub_1FC800(1u);
  Swift::UInt v4 = *(void *)(v3 + 16);
  sub_1FC7F0(v4);
  if (v4)
  {
    uint64_t v5 = (Swift::UInt64 *)(v3 + 32);
    do
    {
      Swift::UInt64 v6 = *v5++;
      sub_1FC820(v6);
      --v4;
    }
    while (v4);
  }
}

Swift::Int sub_13600()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt32 v2 = *(_DWORD *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 12);
  uint64_t v4 = *(void *)(v0 + 16);
  sub_1FC7E0();
  sub_1FC820(v1);
  if (v3 != 1)
  {
    sub_1FC800(1u);
    if ((v2 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v8 = v2;
    }
    else {
      Swift::UInt32 v8 = 0;
    }
    sub_1FC810(v8);
    if (v4) {
      goto LABEL_3;
    }
LABEL_11:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v4) {
    goto LABEL_11;
  }
LABEL_3:
  sub_1FC800(1u);
  Swift::UInt v5 = *(void *)(v4 + 16);
  sub_1FC7F0(v5);
  if (v5)
  {
    Swift::UInt64 v6 = (Swift::UInt64 *)(v4 + 32);
    do
    {
      Swift::UInt64 v7 = *v6++;
      sub_1FC820(v7);
      --v5;
    }
    while (v5);
  }
  return sub_1FC830();
}

uint64_t Transport.UserProfileV2.explicitAllowed.getter()
{
  return *v0;
}

uint64_t Transport.UserProfile.explicitAllowed.setter(uint64_t result)
{
  unsigned char *v1 = result;
  return result;
}

uint64_t Transport.StoreAssetRequestDetails.profileGenreDenylist.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.StoreAssetRequestDetails.profileGenreDenylist.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = a1;
  return result;
}

uint64_t Transport.UserProfileV2.init(explicitAllowed:seedBooks:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  *(unsigned char *)a3 = result;
  *(void *)(a3 + 8) = a2;
  return result;
}

uint64_t Transport.UserProfile.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_252CC0, a3);
}

uint64_t Transport.UserProfile.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_252D10, a3);
}

uint64_t Transport.UserProfile.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x696666416B6F6F62;
  }
  else {
    return 0x746963696C707865;
  }
}

uint64_t sub_13798(char *a1, char *a2)
{
  return sub_1D8EE8(*a1, *a2);
}

Swift::Int sub_137A4()
{
  return sub_1FC830();
}

uint64_t sub_13840()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_138C8()
{
  return sub_1FC830();
}

uint64_t sub_13960@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.UserProfile.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1396C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746963696C707865;
  if (*v1) {
    uint64_t v2 = 0x696666416B6F6F62;
  }
  unint64_t v3 = 0xEF6465776F6C6C41;
  if (*v1) {
    unint64_t v3 = 0xEE0073656974696ELL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_139C8(uint64_t a1)
{
  unint64_t v2 = sub_2D200();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_13A04(uint64_t a1)
{
  unint64_t v2 = sub_2D200();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL static Transport.UserProfile.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t v4 = *((void *)a2 + 1);
  if (v3) {
    return v4 && (sub_1651C(v3, v4) & 1) != 0;
  }
  return !v4;
}

void Transport.UserProfile.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 8);
  sub_1FC800(*(unsigned char *)v2);
  if (v4)
  {
    sub_1FC800(1u);
    sub_2B990(a1, v4);
  }
  else
  {
    sub_1FC800(0);
  }
}

uint64_t Transport.UserProfile.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C618);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::UInt64 v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_2D200();
  sub_1FC870();
  char v11 = 0;
  sub_1FC4F0();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    sub_12124(&qword_26C628);
    sub_302AC(&qword_26C630, &qword_26C628, (void (*)(void))sub_2D254);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Transport.UserProfile.hashValue.getter()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  sub_1FC7E0();
  sub_1FC800(v1);
  if (v2)
  {
    sub_1FC800(1u);
    sub_2B990((uint64_t)v4, v2);
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.UserProfile.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C640);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt32 v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2D200();
  sub_1FC850();
  if (!v2)
  {
    char v14 = 0;
    char v9 = sub_1FC3B0();
    sub_12124(&qword_26C628);
    char v13 = 1;
    sub_302AC(&qword_26C648, &qword_26C628, (void (*)(void))sub_2D2A8);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v12[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v11;
  }
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_13F6C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.UserProfile.init(from:)(a1, a2);
}

uint64_t sub_13F84(void *a1)
{
  return Transport.UserProfile.encode(to:)(a1);
}

Swift::Int sub_13F9C()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  sub_1FC7E0();
  sub_1FC800(v1);
  if (v2)
  {
    sub_1FC800(1u);
    sub_2B990((uint64_t)v4, v2);
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.MediaType.init(_:)(uint64_t a1, uint64_t a2)
{
  return sub_2F5E0(a1, a2);
}

uint64_t Transport.MediaType.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_21D58(a1, a2, (void (*)(void))sub_37948);
}

_UNKNOWN **static Transport.RecommendationBlockRequest.MediaTypePayload.allCases.getter()
{
  return &off_252D60;
}

uint64_t sub_14050@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2F5E0(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_14080@<X0>(uint64_t *a1@<X8>)
{
  return sub_21DD0(sub_37948, a1);
}

uint64_t sub_14098()
{
  return sub_1FBA60();
}

uint64_t sub_140F8()
{
  return sub_1FBA40();
}

uint64_t sub_14148(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_21ED0(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_37948);
}

Swift::Int sub_14160(uint64_t a1, uint64_t a2)
{
  return sub_21FE0(a1, a2, (void (*)(uint64_t, uint64_t))sub_37948);
}

uint64_t sub_14178(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22098(a1, a2, a3, (void (*)(void))sub_37948);
}

Swift::Int sub_14190(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22130(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_37948);
}

uint64_t sub_141A8@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2F5E0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_141D0(void *a1@<X8>)
{
  *a1 = &off_252DA0;
}

uint64_t sub_141E0(uint64_t a1, uint64_t a2)
{
  return sub_221F4(a1, a2, (void (*)(void))sub_37948);
}

uint64_t Transport.RecommendationBlockRequest.SaleTypePayload.init(rawValue:)(uint64_t a1, uint64_t a2)
{
  return sub_2F6D8(a1, a2);
}

uint64_t Transport.RecommendationBlockRequest.SaleTypePayload.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_2227C(a1, a2, (void (*)(void))sub_3794C);
}

_UNKNOWN **static Transport.RecommendationBlockRequest.SaleTypePayload.allCases.getter()
{
  return &off_252DE0;
}

uint64_t sub_14234@<X0>(uint64_t *a1@<X8>)
{
  return sub_22344(sub_3794C, a1);
}

uint64_t sub_1424C()
{
  return sub_1FBA60();
}

uint64_t sub_142AC()
{
  return sub_1FBA40();
}

uint64_t sub_142FC(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_22464(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_3794C);
}

Swift::Int sub_14314(uint64_t a1, uint64_t a2)
{
  return sub_225A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_3794C);
}

uint64_t sub_1432C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22678(a1, a2, a3, (void (*)(void))sub_3794C);
}

Swift::Int sub_14344(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22730(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_3794C);
}

void sub_1435C(void *a1@<X8>)
{
  *a1 = &off_252E30;
}

uint64_t sub_1436C(uint64_t a1, uint64_t a2)
{
  return sub_2283C(a1, a2, (void (*)(void))sub_3794C);
}

uint64_t Transport.RecommendationBlockRequest.mediaType.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2E638(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Transport.RecommendationBlockRequest.mediaType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2E648(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t Transport.RecommendationBlockRequest.saleType.getter()
{
  uint64_t v1 = *(void *)(v0 + 24);
  sub_2F818(v1, *(void *)(v0 + 32));
  return v1;
}

uint64_t Transport.RecommendationBlockRequest.saleType.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_2F828(*(void *)(v2 + 24), *(void *)(v2 + 32));
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = a2;
  return result;
}

uint64_t (*Transport.RecommendationBlockRequest.saleType.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

unint64_t Transport.RecommendationBlockRequest.recommendationCount.getter()
{
  return *(unsigned int *)(v0 + 40) | ((unint64_t)*(unsigned __int8 *)(v0 + 44) << 32);
}

uint64_t Transport.RecommendationBlockRequest.recommendationCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 40) = result;
  *(unsigned char *)(v1 + 44) = BYTE4(result) & 1;
  return result;
}

uint64_t (*Transport.RecommendationBlockRequest.recommendationCount.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendationBlockRequest.targetBookIds.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationBlockRequest.targetBookIds.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 48) = a1;
  return result;
}

uint64_t (*Transport.Diagnosis.message.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendationBlockRequest.init(mediaType:profileGenreDenylist:saleType:recommendationCount:targetBookIds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(void *)(a8 + 8) = a2;
  *(void *)(a8 + 16) = a3;
  *(void *)(a8 + 24) = a4;
  *(void *)(a8 + 32) = a5;
  *(_DWORD *)(a8 + 40) = a6;
  *(unsigned char *)(a8 + 44) = BYTE4(a6) & 1;
  *(void *)(a8 + 48) = a7;
  return result;
}

uint64_t Transport.RecommendationBlockRequest.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_252E80;
  v9._object = a2;
  unint64_t v6 = sub_1FC2D0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 5;
  if (v6 < 5) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

uint64_t Transport.RecommendationBlockRequest.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendationBlockRequest.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

void Transport.RecommendationBlockRequest.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 5;
}

unint64_t Transport.RecommendationBlockRequest.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x707954616964656DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x65707954656C6173;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6F42746567726174;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.RecommendationBlockRequest.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x707954616964656DLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x65707954656C6173;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    case 4:
      unint64_t result = 0x6F42746567726174;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_14770(unsigned __int8 *a1, char *a2)
{
  return sub_1D7BD8(*a1, *a2);
}

Swift::Int sub_1477C()
{
  return sub_7D5FC();
}

uint64_t sub_14784()
{
  return sub_15FD94();
}

Swift::Int sub_1478C()
{
  return sub_1143F0();
}

uint64_t sub_14794@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendationBlockRequest.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

unint64_t sub_147A0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Transport.RecommendationBlockRequest.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_147CC(uint64_t a1)
{
  unint64_t v2 = sub_2E658();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_14808(uint64_t a1)
{
  unint64_t v2 = sub_2E658();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.RecommendationBlockRequest.hash(into:)()
{
  unint64_t v2 = *(void *)(v0 + 8);
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  unint64_t v4 = *(void *)(v0 + 32);
  Swift::UInt32 v5 = *(_DWORD *)(v0 + 40);
  char v6 = *(unsigned char *)(v0 + 44);
  uint64_t v7 = *(void *)(v0 + 48);
  if (v2 == 2)
  {
    sub_1FC800(0);
    if (!v1)
    {
LABEL_3:
      sub_1FC800(0);
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v8 = *(void *)v0;
    sub_1FC800(1u);
    sub_2F5CC(v8, v2);
    sub_2F5CC(v8, v2);
    sub_2F5CC(v8, v2);
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    sub_2E648(v8, v2);
    sub_2E648(v8, v2);
    if (!v1) {
      goto LABEL_3;
    }
  }
  sub_1FC800(1u);
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v9 = *(void *)(v1 + 16);
  if (v9)
  {
    char v10 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v11 = *v10++;
      sub_1FC820(v11);
      --v9;
    }
    while (v9);
  }
LABEL_8:
  if (v4 == 3)
  {
    sub_1FC800(0);
    if (v6) {
      goto LABEL_10;
    }
  }
  else
  {
    sub_1FC800(1u);
    sub_2F804(v3, v4);
    sub_2F804(v3, v4);
    sub_2F804(v3, v4);
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    sub_2F828(v3, v4);
    sub_2F828(v3, v4);
    if (v6)
    {
LABEL_10:
      sub_1FC800(0);
      if (v7) {
        goto LABEL_11;
      }
LABEL_17:
      sub_1FC800(0);
      return;
    }
  }
  sub_1FC800(1u);
  sub_1FC810(v5);
  if (!v7) {
    goto LABEL_17;
  }
LABEL_11:
  sub_1FC800(1u);
  sub_1FC7F0(*(void *)(v7 + 16));
  uint64_t v12 = *(void *)(v7 + 16);
  if (v12)
  {
    char v13 = (Swift::UInt64 *)(v7 + 32);
    do
    {
      Swift::UInt64 v14 = *v13++;
      sub_1FC820(v14);
      --v12;
    }
    while (v12);
  }
}

uint64_t Transport.RecommendationBlockRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26C658);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v17 = v1[3];
  uint64_t v18 = v9;
  uint64_t v10 = v1[4];
  v15[1] = *((unsigned int *)v1 + 10);
  uint64_t v16 = v10;
  int v22 = *((unsigned __int8 *)v1 + 44);
  v15[0] = v1[6];
  sub_5D64(a1, a1[3]);
  sub_2E658();
  sub_1FC870();
  uint64_t v20 = v7;
  uint64_t v21 = v8;
  char v23 = 0;
  sub_2E6AC();
  uint64_t v11 = v19;
  sub_1FC4A0();
  if (!v11)
  {
    uint64_t v12 = v16;
    uint64_t v13 = v17;
    uint64_t v20 = v18;
    char v23 = 1;
    sub_12124(&qword_26C5F8);
    sub_2F0D8(&qword_26C600, &qword_26C5F8);
    sub_1FC4A0();
    uint64_t v20 = v13;
    uint64_t v21 = v12;
    char v23 = 2;
    sub_2E700();
    sub_1FC4A0();
    LOBYTE(v20) = 3;
    char v23 = v22;
    sub_1FC4B0();
    uint64_t v20 = v15[0];
    char v23 = 4;
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendationBlockRequest.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t Transport.RecommendationBlockRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C678);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v24 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2E658();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
    sub_2E648(0, 2uLL);
    swift_bridgeObjectRelease();
    sub_2F828(0, 3uLL);
  }
  else
  {
    char v32 = 0;
    sub_2E754();
    sub_1FC360();
    uint64_t v11 = v30;
    unint64_t v10 = v31;
    uint64_t v12 = sub_12124(&qword_26C5F8);
    char v32 = 1;
    unint64_t v28 = v10;
    uint64_t v29 = v11;
    unint64_t v13 = v10;
    uint64_t v14 = v12;
    sub_2E638(v11, v13);
    uint64_t v15 = sub_2F0D8(&qword_26C610, &qword_26C5F8);
    sub_1FC360();
    uint64_t v27 = v15;
    uint64_t v16 = v30;
    char v32 = 2;
    sub_2E7A8();
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v25 = a2;
    uint64_t v26 = v14;
    uint64_t v17 = v30;
    unint64_t v18 = v31;
    LOBYTE(v30) = 3;
    sub_2F818(v17, v31);
    uint64_t v24 = sub_1FC370();
    char v32 = 4;
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v19 = v30;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v21 = v28;
    uint64_t v20 = v29;
    sub_2E638(v29, v28);
    swift_bridgeObjectRetain();
    sub_2F818(v17, v18);
    sub_2F828(v17, v18);
    swift_bridgeObjectRelease();
    sub_2E648(v20, v21);
    uint64_t v22 = v24;
    char v23 = v25;
    uint64_t *v25 = v20;
    v23[1] = v21;
    v23[2] = v16;
    v23[3] = v17;
    v23[4] = v18;
    *((_DWORD *)v23 + 10) = v22;
    *((unsigned char *)v23 + 44) = BYTE4(v22) & 1;
    v23[6] = v19;
    sub_1264C((uint64_t)a1);
    sub_2E648(v20, v21);
    swift_bridgeObjectRelease();
    sub_2F828(v17, v18);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1523C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Transport.RecommendationBlockRequest.init(from:)(a1, a2);
}

uint64_t sub_15254(void *a1)
{
  return Transport.RecommendationBlockRequest.encode(to:)(a1);
}

Swift::Int sub_15270()
{
  return sub_1FC830();
}

uint64_t Transport.RecommendationBlockResponse.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_252F18, a3);
}

uint64_t Transport.RecommendationBlockResponse.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_252F50, a3);
}

unint64_t Transport.RecommendationBlockResponse.CodingKeys.rawValue.getter()
{
  return 0xD000000000000017;
}

uint64_t sub_1530C()
{
  return 1;
}

Swift::Int sub_15314()
{
  return sub_27DD0();
}

uint64_t sub_15330()
{
  return sub_1FB8C0();
}

Swift::Int sub_1534C()
{
  return sub_27E58();
}

uint64_t sub_15368@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_27EB0(a1, (Swift::OpaquePointer)&off_252F88, a2);
}

void sub_15374(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000000215DB0;
}

uint64_t sub_15394@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27F2C(a1, a2, (Swift::OpaquePointer)&off_252FC0, a3);
}

uint64_t sub_153A0(uint64_t a1)
{
  unint64_t v2 = sub_2E7FC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_153DC(uint64_t a1)
{
  unint64_t v2 = sub_2E7FC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t static Transport.RecommendationBlockResponse.== infix(_:_:)(void *a1, uint64_t *a2)
{
  return sub_28010(a1, a2, (uint64_t (*)(void))sub_1651C);
}

void Transport.RecommendationBlockResponse.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  if (*v1)
  {
    sub_1FC800(1u);
    sub_2B990(a1, v3);
  }
  else
  {
    sub_1FC800(0);
  }
}

uint64_t Transport.RecommendationBlockResponse.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26C690);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_2E7FC();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_26C628);
  sub_302AC(&qword_26C630, &qword_26C628, (void (*)(void))sub_2D254);
  sub_1FC4A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendationBlockResponse.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  if (v1)
  {
    sub_1FC800(1u);
    sub_2B990((uint64_t)v3, v1);
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.RecommendationBlockResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C6A0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2E7FC();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_26C628);
    sub_302AC(&qword_26C648, &qword_26C628, (void (*)(void))sub_2D2A8);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1583C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.RecommendationBlockResponse.init(from:)(a1, a2);
}

uint64_t sub_15854(void *a1)
{
  return Transport.RecommendationBlockResponse.encode(to:)(a1);
}

uint64_t sub_1586C(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_28510(a1, a2, a3, a4, (uint64_t (*)(void))sub_1651C);
}

Swift::Int sub_15884()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  if (v1)
  {
    sub_1FC800(1u);
    sub_2B990((uint64_t)v3, v1);
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.Recommend.Input.xAppleRequestUUID.getter()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Transport.Recommend.Input.xAppleRequestUUID.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t Transport.RecommendationRequest.userProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 24);
  *(unsigned char *)a1 = *(unsigned char *)(v1 + 16);
  *(void *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationRequest.userProfile.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)(v1 + 16) = v2;
  *(void *)(v1 + 24) = v3;
  return result;
}

uint64_t Transport.RecommendationResponseV2.bookIdToMediaTypeEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationResponseV2.bookIdToMediaTypeEntries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 32) = a1;
  return result;
}

uint64_t (*Transport.Recommend.Input.body.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendationResponseV2.bookAuthors.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationResponseV2.bookAuthors.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 40) = a1;
  return result;
}

uint64_t Transport.RecommendationRequest.init(storeFrontId:userProfile:recommendationBlockRequests:treatmentIds:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char *a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  char v6 = *a3;
  uint64_t v7 = *((void *)a3 + 1);
  *(void *)a6 = result;
  *(void *)(a6 + 8) = a2;
  *(unsigned char *)(a6 + 16) = v6;
  *(void *)(a6 + 24) = v7;
  *(void *)(a6 + 32) = a4;
  *(void *)(a6 + 40) = a5;
  return result;
}

uint64_t Transport.RecommendationRequest.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_2A5A8(a1, a2, (Swift::OpaquePointer)&off_252FF8, a3);
}

uint64_t Transport.RecommendationRequest.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendationRequest.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

unint64_t Transport.RecommendationRequest.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x6F724665726F7473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x666F725072657375;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0x6E656D7461657274;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.RecommendationRequest.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x6F724665726F7473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x666F725072657375;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0x6E656D7461657274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15BDC(unsigned __int8 *a1, char *a2)
{
  return sub_1D8654(*a1, *a2);
}

Swift::Int sub_15BE8()
{
  return sub_7D710();
}

uint64_t sub_15BF0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_15CD0()
{
  return sub_1147A0();
}

uint64_t sub_15CD8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendationRequest.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_15CE4(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEC0000006449746ELL;
  uint64_t v3 = 0x6F724665726F7473;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEB00000000656C69;
      uint64_t v3 = 0x666F725072657375;
      goto LABEL_3;
    case 2:
      *(void *)a1 = 0xD00000000000001BLL;
      *(void *)(a1 + 8) = 0x8000000000215DF0;
      break;
    case 3:
      strcpy((char *)a1, "treatmentIds");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_15D9C()
{
  unint64_t result = 0x6F724665726F7473;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x666F725072657375;
      break;
    case 2:
      unint64_t result = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t result = 0x6E656D7461657274;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_15E48(uint64_t a1)
{
  unint64_t v2 = sub_2E850();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_15E84(uint64_t a1)
{
  unint64_t v2 = sub_2E850();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_15EC4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  do
  {
    uint64_t v7 = v4 + (v3 << 6);
    uint64_t v8 = *(void *)(v7 + 16);
    uint64_t v9 = *(void *)(v7 + 56);
    uint64_t v10 = v5 + (v3 << 6);
    uint64_t v11 = *(void *)(v10 + 16);
    uint64_t v12 = *(void *)(v10 + 56);
    if (*(unsigned char *)(v7 + 8))
    {
      if (v8 == v11) {
        char v13 = *(unsigned char *)(v10 + 8);
      }
      else {
        char v13 = 0;
      }
      if ((v13 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (*(unsigned char *)(v10 + 8)) {
        return 0;
      }
      uint64_t result = 0;
      if (*(void *)v7 != *(void *)v10 || v8 != v11) {
        return result;
      }
    }
    if (*(unsigned char *)(v7 + 32))
    {
      if (!*(unsigned char *)(v10 + 32)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)(v7 + 24) == *(void *)(v10 + 24)) {
        char v14 = *(unsigned char *)(v10 + 32);
      }
      else {
        char v14 = 1;
      }
      if (v14) {
        return 0;
      }
    }
    if (*(unsigned char *)(v7 + 40))
    {
      if (!*(unsigned char *)(v10 + 40)) {
        return 0;
      }
    }
    else
    {
      if (*(float *)(v7 + 36) == *(float *)(v10 + 36)) {
        char v15 = *(unsigned char *)(v10 + 40);
      }
      else {
        char v15 = 1;
      }
      if (v15) {
        return 0;
      }
    }
    if (*(unsigned char *)(v7 + 48))
    {
      if (!*(unsigned char *)(v10 + 48)) {
        return 0;
      }
    }
    else
    {
      if (*(float *)(v7 + 44) == *(float *)(v10 + 44)) {
        char v16 = *(unsigned char *)(v10 + 48);
      }
      else {
        char v16 = 1;
      }
      if (v16) {
        return 0;
      }
    }
    uint64_t v17 = *(void *)(v9 + 16);
    if (v17 != *(void *)(v12 + 16)) {
      return 0;
    }
    if (v17 && v9 != v12)
    {
      uint64_t v41 = v5;
      uint64_t v42 = v4;
      uint64_t v43 = v3;
      uint64_t v44 = v2;
      uint64_t v18 = v9 + 32;
      uint64_t v19 = v12 + 32;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = 0;
      uint64_t v46 = v9 + 32;
      uint64_t v47 = v17;
      uint64_t v45 = v12 + 32;
      while (1)
      {
        uint64_t v21 = v18 + 24 * v20;
        uint64_t v22 = *(void *)(v21 + 16);
        uint64_t v23 = v19 + 24 * v20;
        uint64_t v24 = *(void *)(v23 + 16);
        if (*(unsigned char *)(v21 + 8))
        {
          if ((*(unsigned char *)(v23 + 8) & 1) == 0) {
            goto LABEL_86;
          }
        }
        else if ((*(unsigned char *)(v23 + 8) & 1) != 0 || *(void *)v21 != *(void *)v23)
        {
LABEL_86:
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          return 0;
        }
        if (v22)
        {
          if (!v24) {
            goto LABEL_86;
          }
          uint64_t v25 = *(void *)(v22 + 16);
          if (v25 != *(void *)(v24 + 16)) {
            goto LABEL_86;
          }
          if (v25) {
            BOOL v26 = v22 == v24;
          }
          else {
            BOOL v26 = 1;
          }
          if (!v26)
          {
            uint64_t v48 = v20;
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            uint64_t v27 = 0;
            uint64_t v49 = v24;
            while (1)
            {
              uint64_t v29 = *(void *)(v22 + v27 + 32);
              unint64_t v30 = *(void *)(v22 + v27 + 40);
              uint64_t v31 = *(void *)(v24 + v27 + 32);
              unint64_t v32 = *(void *)(v24 + v27 + 40);
              if (v30 == 1) {
                unint64_t v33 = 0xD000000000000012;
              }
              else {
                unint64_t v33 = *(void *)(v22 + v27 + 32);
              }
              unint64_t v34 = 0x8000000000216D80;
              if (v30 != 1) {
                unint64_t v34 = *(void *)(v22 + v27 + 40);
              }
              if (v30) {
                uint64_t v35 = v33;
              }
              else {
                uint64_t v35 = 0x4148435255504F43;
              }
              if (v30) {
                unint64_t v36 = v34;
              }
              else {
                unint64_t v36 = 0xEA00000000004553;
              }
              unint64_t v37 = 0x8000000000216D80;
              if (v32 == 1) {
                unint64_t v38 = 0xD000000000000012;
              }
              else {
                unint64_t v38 = *(void *)(v24 + v27 + 32);
              }
              if (v32 != 1) {
                unint64_t v37 = *(void *)(v24 + v27 + 40);
              }
              if (v32) {
                uint64_t v39 = v38;
              }
              else {
                uint64_t v39 = 0x4148435255504F43;
              }
              if (v32) {
                unint64_t v40 = v37;
              }
              else {
                unint64_t v40 = 0xEA00000000004553;
              }
              if (v35 == v39 && v36 == v40)
              {
                sub_2F5CC(*(void *)(v22 + v27 + 32), *(void *)(v22 + v27 + 40));
                sub_2F5CC(v31, v32);
                sub_2F5CC(v29, v30);
                sub_2F5CC(v31, v32);
                swift_bridgeObjectRelease_n();
                sub_3781C(v31, v32);
                sub_3781C(v29, v30);
              }
              else
              {
                char v28 = sub_1FC5F0();
                sub_2F5CC(v29, v30);
                sub_2F5CC(v31, v32);
                sub_2F5CC(v29, v30);
                sub_2F5CC(v31, v32);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                sub_3781C(v31, v32);
                sub_3781C(v29, v30);
                if ((v28 & 1) == 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  goto LABEL_86;
                }
              }
              v27 += 16;
              --v25;
              uint64_t v24 = v49;
              if (!v25)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                uint64_t v18 = v46;
                uint64_t v17 = v47;
                uint64_t v19 = v45;
                uint64_t v20 = v48;
                break;
              }
            }
          }
        }
        else if (v24)
        {
          goto LABEL_86;
        }
        if (++v20 == v17)
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v43;
          uint64_t v2 = v44;
          uint64_t v5 = v41;
          uint64_t v4 = v42;
          break;
        }
      }
    }
    ++v3;
    uint64_t result = 1;
  }
  while (v3 != v2);
  return result;
}

uint64_t sub_162C4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    do
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v7 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v9 = *v4;
      if (*v3 == 1) {
        unint64_t v10 = 0xD000000000000012;
      }
      else {
        unint64_t v10 = *(v3 - 1);
      }
      if (*v3 == 1) {
        unint64_t v11 = 0x8000000000216D80;
      }
      else {
        unint64_t v11 = *v3;
      }
      if (v7) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 0x4148435255504F43;
      }
      if (v7) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = 0xEA00000000004553;
      }
      if (v9 == 1) {
        unint64_t v14 = 0xD000000000000012;
      }
      else {
        unint64_t v14 = *(v4 - 1);
      }
      if (v9 == 1) {
        unint64_t v15 = 0x8000000000216D80;
      }
      else {
        unint64_t v15 = *v4;
      }
      if (v9) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = 0x4148435255504F43;
      }
      if (v9) {
        unint64_t v17 = v15;
      }
      else {
        unint64_t v17 = 0xEA00000000004553;
      }
      if (v12 == v16 && v13 == v17)
      {
        sub_2F5CC(*(v3 - 1), *v3);
        sub_2F5CC(v8, v9);
        sub_2F5CC(v6, v7);
        sub_2F5CC(v8, v9);
        swift_bridgeObjectRelease_n();
        sub_3781C(v8, v9);
        sub_3781C(v6, v7);
      }
      else
      {
        char v5 = sub_1FC5F0();
        sub_2F5CC(v6, v7);
        sub_2F5CC(v8, v9);
        sub_2F5CC(v6, v7);
        sub_2F5CC(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_3781C(v8, v9);
        sub_3781C(v6, v7);
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_16494(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unsigned char *)(a1 + 56);
    for (unint64_t i = (char *)(a2 + 56);
          *((void *)v3 - 3) == *((void *)i - 3) && *((float *)v3 - 4) == *((float *)i - 4);
          i += 32)
    {
      char v5 = *i;
      if (*v3)
      {
        if (!*i) {
          return 0;
        }
      }
      else
      {
        if (*((void *)v3 - 1) != *((void *)i - 1)) {
          char v5 = 1;
        }
        if (v5) {
          return 0;
        }
      }
      v3 += 32;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1651C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    while (1)
    {
      uint64_t v6 = v4 + 24 * v3;
      uint64_t v7 = a2 + 32 + 24 * v3;
      if (*(void *)v6 != *(void *)v7) {
        break;
      }
      uint64_t v8 = *(void **)(v6 + 16);
      unint64_t v9 = *(void **)(v7 + 16);
      if (*(unsigned char *)(v4 + 24 * v3 + 12))
      {
        if (!*(unsigned char *)(v7 + 12)) {
          return 0;
        }
      }
      else
      {
        if (*(float *)(v6 + 8) == *(float *)(v7 + 8)) {
          char v10 = *(unsigned char *)(v7 + 12);
        }
        else {
          char v10 = 1;
        }
        if (v10) {
          return 0;
        }
      }
      if (v8)
      {
        if (!v9) {
          return 0;
        }
        uint64_t v11 = v8[2];
        if (v11 != v9[2]) {
          return 0;
        }
        if (v11) {
          BOOL v12 = v8 == v9;
        }
        else {
          BOOL v12 = 1;
        }
        if (!v12)
        {
          if (v8[4] != v9[4]) {
            return 0;
          }
          unint64_t v13 = v8 + 5;
          unint64_t v14 = v9 + 5;
          for (uint64_t i = v11 - 1; i; --i)
          {
            uint64_t v17 = *v13++;
            uint64_t v16 = v17;
            uint64_t v18 = *v14++;
            if (v16 != v18) {
              return 0;
            }
          }
        }
      }
      else if (v9)
      {
        return 0;
      }
      ++v3;
      uint64_t result = 1;
      if (v3 == v2) {
        return result;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_1661C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    uint64_t v8 = *(void *)(v5 + 8 * v3);
    if (v7) {
      break;
    }
    if (v8) {
      return 0;
    }
LABEL_7:
    ++v3;
    uint64_t result = 1;
    if (v3 == v2) {
      return result;
    }
  }
  if (!v8) {
    return 0;
  }
  uint64_t v9 = *(void *)(v7 + 16);
  if (v9 != *(void *)(v8 + 16)) {
    return 0;
  }
  if (v9) {
    BOOL v10 = v7 == v8;
  }
  else {
    BOOL v10 = 1;
  }
  if (v10) {
    goto LABEL_7;
  }
  uint64_t v11 = v7 + 32;
  uint64_t v12 = v8 + 32;
  swift_bridgeObjectRetain_n();
  uint64_t result = swift_bridgeObjectRetain_n();
  unint64_t v13 = 0;
  while (1)
  {
    if (v13 >= *(void *)(v8 + 16))
    {
      __break(1u);
      return result;
    }
    uint64_t v14 = v11 + (v13 << 6);
    uint64_t result = *(void *)(v14 + 56);
    uint64_t v15 = v12 + (v13 << 6);
    uint64_t v16 = *(void *)(v15 + 56);
    if (*(unsigned char *)(v14 + 8))
    {
      if ((*(unsigned char *)(v15 + 8) & 1) == 0) {
        goto LABEL_88;
      }
    }
    else if ((*(unsigned char *)(v15 + 8) & 1) != 0 || *(void *)v14 != *(void *)v15)
    {
LABEL_88:
      swift_bridgeObjectRelease();
      goto LABEL_91;
    }
    if (*(void *)(v14 + 16) != *(void *)(v15 + 16)) {
      goto LABEL_88;
    }
    if (*(unsigned char *)(v14 + 32))
    {
      if ((*(unsigned char *)(v15 + 32) & 1) == 0) {
        goto LABEL_88;
      }
    }
    else if ((*(unsigned char *)(v15 + 32) & 1) != 0 || *(void *)(v14 + 24) != *(void *)(v15 + 24))
    {
      goto LABEL_88;
    }
    if (*(unsigned char *)(v14 + 40))
    {
      if ((*(unsigned char *)(v15 + 40) & 1) == 0) {
        goto LABEL_88;
      }
    }
    else if ((*(unsigned char *)(v15 + 40) & 1) != 0 || *(float *)(v14 + 36) != *(float *)(v15 + 36))
    {
      goto LABEL_88;
    }
    if (*(unsigned char *)(v14 + 48))
    {
      if ((*(unsigned char *)(v15 + 48) & 1) == 0) {
        goto LABEL_88;
      }
    }
    else if ((*(unsigned char *)(v15 + 48) & 1) != 0 || *(float *)(v14 + 44) != *(float *)(v15 + 44))
    {
      goto LABEL_88;
    }
    uint64_t v17 = *(void *)(result + 16);
    if (v17 != *(void *)(v16 + 16)) {
      goto LABEL_88;
    }
    if (v17 && result != v16) {
      break;
    }
LABEL_86:
    if (++v13 == v9)
    {
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease_n();
      goto LABEL_7;
    }
  }
  unint64_t v43 = v13;
  uint64_t v44 = v5;
  uint64_t v45 = v4;
  uint64_t v46 = v3;
  uint64_t v47 = v2;
  uint64_t v54 = v7;
  uint64_t v55 = v8;
  uint64_t v18 = result + 32;
  uint64_t v19 = v16 + 32;
  uint64_t v56 = *(void *)(result + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v20 = v56;
  uint64_t v21 = 0;
  uint64_t v51 = v11;
  uint64_t v52 = v9;
  uint64_t v49 = v18;
  uint64_t v50 = v12;
  uint64_t v48 = v16 + 32;
  while (2)
  {
    uint64_t v22 = v18 + 24 * v21;
    uint64_t v23 = *(void *)(v22 + 16);
    uint64_t v24 = v19 + 24 * v21;
    uint64_t v25 = *(void *)(v24 + 16);
    if (*(unsigned char *)(v22 + 8))
    {
      if ((*(unsigned char *)(v24 + 8) & 1) == 0) {
        break;
      }
      goto LABEL_49;
    }
    if ((*(unsigned char *)(v24 + 8) & 1) == 0 && *(void *)v22 == *(void *)v24)
    {
LABEL_49:
      if (v23)
      {
        if (!v25) {
          break;
        }
        uint64_t v26 = *(void *)(v23 + 16);
        if (v26 != *(void *)(v25 + 16)) {
          break;
        }
        if (v26) {
          BOOL v27 = v23 == v25;
        }
        else {
          BOOL v27 = 1;
        }
        if (!v27)
        {
          uint64_t v53 = v21;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v28 = 0;
          uint64_t v57 = v23;
          while (1)
          {
            uint64_t v30 = *(void *)(v23 + v28 + 32);
            unint64_t v31 = *(void *)(v23 + v28 + 40);
            uint64_t v32 = v25;
            uint64_t v33 = *(void *)(v25 + v28 + 32);
            unint64_t v34 = *(void *)(v25 + v28 + 40);
            if (v31 == 1) {
              unint64_t v35 = 0xD000000000000012;
            }
            else {
              unint64_t v35 = v30;
            }
            unint64_t v36 = 0x8000000000216D80;
            if (v31 != 1) {
              unint64_t v36 = v31;
            }
            if (v31) {
              uint64_t v37 = v35;
            }
            else {
              uint64_t v37 = 0x4148435255504F43;
            }
            if (v31) {
              unint64_t v38 = v36;
            }
            else {
              unint64_t v38 = 0xEA00000000004553;
            }
            unint64_t v39 = 0x8000000000216D80;
            if (v34 == 1) {
              unint64_t v40 = 0xD000000000000012;
            }
            else {
              unint64_t v40 = *(void *)(v25 + v28 + 32);
            }
            if (v34 != 1) {
              unint64_t v39 = *(void *)(v25 + v28 + 40);
            }
            if (v34) {
              uint64_t v41 = v40;
            }
            else {
              uint64_t v41 = 0x4148435255504F43;
            }
            if (v34) {
              unint64_t v42 = v39;
            }
            else {
              unint64_t v42 = 0xEA00000000004553;
            }
            if (v37 == v41 && v38 == v42)
            {
              sub_2F5CC(v30, v31);
              sub_2F5CC(v33, v34);
              sub_2F5CC(v30, v31);
              sub_2F5CC(v33, v34);
              swift_bridgeObjectRelease_n();
              sub_3781C(v33, v34);
              sub_3781C(v30, v31);
            }
            else
            {
              char v29 = sub_1FC5F0();
              sub_2F5CC(v30, v31);
              sub_2F5CC(v33, v34);
              sub_2F5CC(v30, v31);
              sub_2F5CC(v33, v34);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_3781C(v33, v34);
              sub_3781C(v30, v31);
              if ((v29 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                goto LABEL_90;
              }
            }
            v28 += 16;
            --v26;
            uint64_t v25 = v32;
            uint64_t v23 = v57;
            if (!v26)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v20 = v56;
              uint64_t v11 = v51;
              uint64_t v9 = v52;
              uint64_t v18 = v49;
              uint64_t v12 = v50;
              uint64_t v19 = v48;
              uint64_t v21 = v53;
              break;
            }
          }
        }
      }
      else if (v25)
      {
        break;
      }
      if (++v21 == v20)
      {
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v7 = v54;
        uint64_t v8 = v55;
        uint64_t v3 = v46;
        uint64_t v2 = v47;
        uint64_t v5 = v44;
        uint64_t v4 = v45;
        unint64_t v13 = v43;
        goto LABEL_86;
      }
      continue;
    }
    break;
  }
LABEL_90:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_91:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return 0;
}

uint64_t sub_16B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v6 = v4 + 24 * v3;
    uint64_t v7 = *(void **)(v6 + 16);
    uint64_t v8 = v5 + 24 * v3;
    char v9 = *(unsigned char *)(v8 + 8);
    BOOL v10 = *(void **)(v8 + 16);
    if (*(unsigned char *)(v6 + 8))
    {
      if (!*(unsigned char *)(v8 + 8)) {
        return 0;
      }
    }
    else
    {
      if (*(void *)v6 != *(void *)v8) {
        char v9 = 1;
      }
      if (v9) {
        return 0;
      }
    }
    if (!v7)
    {
      if (v10) {
        return 0;
      }
      goto LABEL_6;
    }
    if (!v10) {
      return 0;
    }
    uint64_t v11 = v7[2];
    if (v11 != v10[2]) {
      return 0;
    }
    if (v11 && v7 != v10)
    {
      BOOL v13 = v7[4] == v10[4] && v7[5] == v10[5];
      if (!v13 && (sub_1FC5F0() & 1) == 0) {
        return 0;
      }
      uint64_t v14 = v11 - 1;
      if (v14) {
        break;
      }
    }
LABEL_6:
    if (++v3 == v2) {
      return 1;
    }
  }
  uint64_t v15 = v10 + 7;
  uint64_t v16 = v7 + 7;
  while (1)
  {
    BOOL v17 = *(v16 - 1) == *(v15 - 1) && *v16 == *v15;
    if (!v17 && (sub_1FC5F0() & 1) == 0) {
      return 0;
    }
    v15 += 2;
    v16 += 2;
    if (!--v14) {
      goto LABEL_6;
    }
  }
}

uint64_t sub_16C4C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (void *)(a2 + 56);
    uint64_t v4 = (uint64_t *)(a1 + 56);
    do
    {
      uint64_t v5 = *v4;
      char v6 = *((unsigned char *)v3 - 16);
      uint64_t v7 = *v3;
      if (*(unsigned char *)(v4 - 2))
      {
        if (!*((unsigned char *)v3 - 16)) {
          return 0;
        }
      }
      else
      {
        if (*(v4 - 3) != *(v3 - 3)) {
          char v6 = 1;
        }
        if (v6) {
          return 0;
        }
      }
      if (v5)
      {
        if (!v7 || (*(v4 - 1) != *(v3 - 1) || v5 != v7) && (sub_1FC5F0() & 1) == 0) {
          return 0;
        }
      }
      else if (v7)
      {
        return 0;
      }
      v3 += 4;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_16D0C(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    do
    {
      int v5 = *(unsigned __int8 *)(a1 + v3 + 57);
      int v6 = *(unsigned __int8 *)(a2 + v3 + 57);
      if (*(unsigned char *)(a1 + v3 + 40))
      {
        if (!*(unsigned char *)(a2 + v3 + 40)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(a1 + v3 + 32) == *(void *)(a2 + v3 + 32)) {
          char v7 = *(unsigned char *)(a2 + v3 + 40);
        }
        else {
          char v7 = 1;
        }
        if (v7) {
          return 0;
        }
      }
      if (*(unsigned char *)(a1 + v3 + 56))
      {
        if (!*(unsigned char *)(a2 + v3 + 56)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)(a1 + v3 + 48) == *(void *)(a2 + v3 + 48)) {
          char v8 = *(unsigned char *)(a2 + v3 + 56);
        }
        else {
          char v8 = 1;
        }
        if (v8) {
          return 0;
        }
      }
      if (v5 == 2)
      {
        if (v6 != 2) {
          return 0;
        }
      }
      else
      {
        uint64_t v9 = 0;
        BOOL v10 = (v5 & 1) == 0;
        if (v6 == 2 || ((v10 ^ v6) & 1) == 0) {
          return v9;
        }
      }
      if (*(unsigned char *)(a1 + v3 + 72))
      {
        if (!*(unsigned char *)(a2 + v3 + 72)) {
          return 0;
        }
      }
      else
      {
        if (*(double *)(a1 + v3 + 64) == *(double *)(a2 + v3 + 64)) {
          char v4 = *(unsigned char *)(a2 + v3 + 72);
        }
        else {
          char v4 = 1;
        }
        if (v4) {
          return 0;
        }
      }
      v3 += 48;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_16E04(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a2 + 56);
    char v4 = (unint64_t *)(a1 + 56);
    do
    {
      uint64_t v6 = *(v4 - 1);
      unint64_t v5 = *v4;
      char v7 = *((unsigned char *)v3 - 16);
      uint64_t v9 = *(v3 - 1);
      unint64_t v8 = *v3;
      if (*(unsigned char *)(v4 - 2))
      {
        if (!*((unsigned char *)v3 - 16)) {
          return 0;
        }
      }
      else
      {
        if (*(v4 - 3) != *(v3 - 3)) {
          char v7 = 1;
        }
        if (v7) {
          return 0;
        }
      }
      if (v5 == 2)
      {
        if (v8 != 2) {
          return 0;
        }
        goto LABEL_6;
      }
      if (v8 == 2) {
        return 0;
      }
      uint64_t v10 = 0x4F4F424F49445541;
      if (v5 != 1) {
        uint64_t v10 = *(v4 - 1);
      }
      unint64_t v11 = 0xE90000000000004BLL;
      if (v5 != 1) {
        unint64_t v11 = *v4;
      }
      if (v5) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 0x4B4F4F4245;
      }
      if (v5) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = 0xE500000000000000;
      }
      if (v8)
      {
        if (v8 == 1)
        {
          unint64_t v14 = 0xE90000000000004BLL;
          if (v12 != 0x4F4F424F49445541) {
            goto LABEL_34;
          }
        }
        else
        {
          unint64_t v14 = *v3;
          if (v12 != v9) {
            goto LABEL_34;
          }
        }
      }
      else
      {
        unint64_t v14 = 0xE500000000000000;
        if (v12 != 0x4B4F4F4245) {
          goto LABEL_34;
        }
      }
      if (v13 == v14)
      {
        sub_2E638(*(v4 - 1), *v4);
        sub_2E638(v6, v5);
        sub_2E638(v9, v8);
        sub_2E638(v6, v5);
        sub_2E638(v9, v8);
        swift_bridgeObjectRelease_n();
        sub_2E648(v9, v8);
        sub_2E648(v6, v5);
        sub_2E648(v6, v5);
        goto LABEL_6;
      }
LABEL_34:
      char v15 = sub_1FC5F0();
      sub_2E638(v6, v5);
      sub_2E638(v6, v5);
      sub_2E638(v9, v8);
      sub_2E638(v6, v5);
      sub_2E638(v9, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2E648(v9, v8);
      sub_2E648(v6, v5);
      sub_2E648(v6, v5);
      if ((v15 & 1) == 0) {
        return 0;
      }
LABEL_6:
      v3 += 4;
      v4 += 4;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_17068(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t result = 1;
    while (1)
    {
      uint64_t v6 = v4 + 24 * v3;
      uint64_t v7 = *(void *)(v6 + 16);
      uint64_t v8 = a2 + 32 + 24 * v3;
      char v9 = *(unsigned char *)(v8 + 8);
      uint64_t v10 = *(void *)(v8 + 16);
      if (*(unsigned char *)(v6 + 8))
      {
        if (!*(unsigned char *)(v8 + 8)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)v6 != *(void *)v8) {
          char v9 = 1;
        }
        if (v9) {
          return 0;
        }
      }
      if (v7)
      {
        if (!v10) {
          return 0;
        }
        uint64_t v11 = *(void *)(v7 + 16);
        if (v11 != *(void *)(v10 + 16)) {
          return 0;
        }
        if (v11) {
          BOOL v12 = v7 == v10;
        }
        else {
          BOOL v12 = 1;
        }
        if (!v12)
        {
          if (*(double *)(v7 + 32) != *(double *)(v10 + 32)) {
            return 0;
          }
          unint64_t v13 = (double *)(v7 + 40);
          unint64_t v14 = (double *)(v10 + 40);
          for (uint64_t i = v11 - 1; i; --i)
          {
            double v16 = *v13++;
            double v17 = v16;
            double v18 = *v14++;
            if (v17 != v18) {
              return 0;
            }
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      if (++v3 == v2) {
        return result;
      }
    }
  }
  return 1;
}

uint64_t sub_17150(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2) {
      return 1;
    }
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v60 = a1 + 32;
    uint64_t v61 = *(void *)(a1 + 16);
    uint64_t v59 = v5;
    while (1)
    {
      uint64_t v6 = (unsigned __int8 *)(v4 + 80 * v3);
      uint64_t v7 = (unsigned __int8 *)(v5 + 80 * v3);
      if (*v6 != *v7) {
        return 0;
      }
      uint64_t v8 = *((void *)v6 + 1);
      uint64_t v9 = *((void *)v7 + 1);
      uint64_t v10 = *(void *)(v8 + 16);
      if (v10 != *(void *)(v9 + 16)) {
        return 0;
      }
      uint64_t v11 = *((void *)v6 + 2);
      uint64_t v72 = *((void *)v6 + 3);
      uint64_t v13 = *((void *)v6 + 4);
      unint64_t v12 = *((void *)v6 + 5);
      uint64_t v14 = *((void *)v6 + 6);
      int v15 = v6[56];
      uint64_t v71 = *((void *)v6 + 8);
      int v16 = *((_DWORD *)v6 + 18);
      uint64_t v17 = *((void *)v7 + 2);
      uint64_t v18 = *((void *)v7 + 3);
      uint64_t v19 = *((void *)v7 + 4);
      unint64_t v20 = *((void *)v7 + 5);
      uint64_t v21 = *((void *)v7 + 6);
      int v67 = v7[56];
      uint64_t v22 = *((void *)v7 + 8);
      BOOL v23 = !v10 || v8 == v9;
      int v24 = *((_DWORD *)v7 + 18);
      if (!v23) {
        break;
      }
LABEL_12:
      uint64_t v69 = v22;
      uint64_t v70 = v17;
      uint64_t v66 = v3;
      int v64 = v24;
      int v65 = v16;
      if (v11 == 1)
      {
        uint64_t v25 = v13;
        uint64_t v26 = v19;
        swift_bridgeObjectRetain();
        unint64_t v63 = v12;
        sub_2FA44(1, v72, v13, v12);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v70 != 1)
        {
          uint64_t v56 = v18;
          unint64_t v57 = v20;
          uint64_t v62 = v26;
          sub_2FA44(v70, v18, v26, v20);
          swift_bridgeObjectRetain();
          uint64_t v50 = v70;
          uint64_t v11 = 1;
LABEL_54:
          sub_2FA44(v50, v56, v62, v57);
          sub_2FAB4(v11, v72, v13, v12);
          sub_2FAB4(v50, v56, v62, v57);
          swift_bridgeObjectRelease();
          sub_2FAB4(v50, v56, v62, v57);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v52 = v11;
          uint64_t v53 = v72;
          uint64_t v54 = v13;
          unint64_t v55 = v12;
          goto LABEL_58;
        }
        uint64_t v27 = v18;
        sub_2FA44(1, v18, v26, v20);
        uint64_t v28 = v69;
        swift_bridgeObjectRetain();
        uint64_t v29 = v25;
        uint64_t v30 = v72;
        uint64_t v31 = v29;
        uint64_t v11 = 1;
      }
      else
      {
        uint64_t v62 = v19;
        unint64_t v57 = v20;
        uint64_t v58 = v21;
        uint64_t v56 = v18;
        if (v17 == 1)
        {
          uint64_t v51 = v19;
          sub_2FA44(v11, v72, v13, v12);
          sub_2FA44(v11, v72, v13, v12);
          swift_bridgeObjectRetain();
          sub_2FA44(v11, v72, v13, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          sub_2FA44(1, v18, v51, v20);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_2F828(v13, v12);
          swift_bridgeObjectRelease();
          uint64_t v50 = 1;
          goto LABEL_54;
        }
        unint64_t v36 = v12;
        uint64_t v37 = v14;
        uint64_t v31 = v13;
        v74[0] = v11;
        v74[1] = v72;
        v74[2] = v13;
        v74[3] = v36;
        v73[0] = v17;
        v73[1] = v18;
        v73[2] = v19;
        v73[3] = v20;
        uint64_t v38 = v17;
        sub_2FA44(v11, v72, v13, v36);
        sub_2FA44(v11, v72, v13, v36);
        swift_bridgeObjectRetain();
        unint64_t v39 = v36;
        unint64_t v40 = v36;
        int v41 = v15;
        sub_2FA44(v11, v72, v31, v40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_2FA44(v38, v18, v62, v20);
        swift_bridgeObjectRetain();
        if (!_s20BooksPersonalization9TransportO24StoreAssetRequestDetailsV2eeoiySbAE_AEtFZ_0(v74, v73))
        {
          unint64_t v43 = v39;
          goto LABEL_56;
        }
        if (v37)
        {
          if (!v58 || (uint64_t v42 = *(void *)(v37 + 16), v42 != *(void *)(v58 + 16)))
          {
            unint64_t v43 = v39;
LABEL_56:
            uint64_t v44 = v72;
LABEL_57:
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            sub_2F828(v31, v43);
            swift_bridgeObjectRelease();
            sub_2FAB4(v11, v44, v31, v43);
            swift_bridgeObjectRelease();
            sub_2FAB4(v70, v18, v62, v20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v52 = v11;
            uint64_t v53 = v44;
            uint64_t v54 = v31;
            unint64_t v55 = v43;
LABEL_58:
            sub_2FAB4(v52, v53, v54, v55);
            swift_bridgeObjectRelease();
            return 0;
          }
          unint64_t v43 = v39;
          uint64_t v44 = v72;
          if (v42 && v37 != v58)
          {
            if (*(void *)(v37 + 32) != *(void *)(v58 + 32)) {
              goto LABEL_57;
            }
            uint64_t v45 = 0;
            uint64_t v46 = v42 - 1;
            while (v46 != v45)
            {
              uint64_t v47 = *(void *)(v37 + 8 * v45 + 40);
              uint64_t v48 = *(void *)(v58 + 40 + 8 * v45++);
              if (v47 != v48) {
                goto LABEL_57;
              }
            }
          }
        }
        else
        {
          unint64_t v43 = v39;
          uint64_t v44 = v72;
          if (v58) {
            goto LABEL_57;
          }
        }
        if (v41 == 2)
        {
          if (v67 != 2) {
            goto LABEL_57;
          }
        }
        else if (v67 == 2 || ((((v41 & 1) == 0) ^ v67) & 1) == 0)
        {
          goto LABEL_57;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2F828(v31, v43);
        swift_bridgeObjectRelease();
        sub_2FAB4(v11, v44, v31, v43);
        unint64_t v63 = v43;
        uint64_t v30 = v44;
        uint64_t v28 = v69;
        uint64_t v26 = v62;
        uint64_t v27 = v18;
      }
      char v68 = sub_162C4(v71, v28);
      swift_bridgeObjectRelease();
      sub_2FAB4(v70, v27, v26, v20);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2FAB4(v11, v30, v31, v63);
      swift_bridgeObjectRelease();
      uint64_t result = 0;
      if (v68)
      {
        uint64_t v4 = v60;
        uint64_t v5 = v59;
        if (v65 == v64)
        {
          uint64_t v3 = v66 + 1;
          uint64_t result = 1;
          if (v66 + 1 != v61) {
            continue;
          }
        }
      }
      return result;
    }
    uint64_t v32 = (unsigned char *)(v8 + 56);
    uint64_t v33 = (char *)(v9 + 56);
    while (*((void *)v32 - 3) == *((void *)v33 - 3) && *((float *)v32 - 4) == *((float *)v33 - 4))
    {
      char v35 = *v33;
      if (*v32)
      {
        if (!*v33) {
          return 0;
        }
      }
      else
      {
        if (*((void *)v32 - 1) != *((void *)v33 - 1)) {
          char v35 = 1;
        }
        if (v35) {
          return 0;
        }
      }
      v32 += 32;
      v33 += 32;
      if (!--v10) {
        goto LABEL_12;
      }
    }
  }
  return 0;
}

uint64_t sub_178D0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  BOOL v5 = a1[4] == a2[4] && a1[5] == a2[5];
  if (v5 || (char v6 = sub_1FC5F0(), result = 0, (v6 & 1) != 0))
  {
    uint64_t v8 = v2 - 1;
    if (!v8) {
      return 1;
    }
    uint64_t v9 = a2 + 7;
    for (uint64_t i = a1 + 7; ; i += 2)
    {
      BOOL v11 = *(i - 1) == *(v9 - 1) && *i == *v9;
      if (!v11 && (sub_1FC5F0() & 1) == 0) {
        break;
      }
      v9 += 2;
      if (!--v8) {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t sub_17998(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  uint64_t v3 = 0;
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  while (1)
  {
    uint64_t v7 = *(void *)(v4 + 8 * v3);
    uint64_t v8 = *(void *)(v5 + 8 * v3);
    if (!v7)
    {
      if (v8) {
        return 0;
      }
      goto LABEL_8;
    }
    if (!v8) {
      return 0;
    }
    uint64_t v9 = *(void *)(v7 + 16);
    if (v9 != *(void *)(v8 + 16)) {
      return 0;
    }
    if (v9 && v7 != v8) {
      break;
    }
LABEL_8:
    ++v3;
    uint64_t result = 1;
    if (v3 == v2) {
      return result;
    }
  }
  uint64_t v11 = 0;
  uint64_t v12 = v7 + 32;
  uint64_t v13 = v8 + 32;
  while (1)
  {
    uint64_t v14 = v12 + 24 * v11;
    uint64_t v15 = v13 + 24 * v11;
    if (*(void *)v14 != *(void *)v15) {
      return 0;
    }
    int v16 = *(void **)(v14 + 16);
    uint64_t v17 = *(void **)(v15 + 16);
    if (*(unsigned char *)(v12 + 24 * v11 + 12))
    {
      if (!*(unsigned char *)(v15 + 12)) {
        return 0;
      }
    }
    else
    {
      if (*(float *)(v14 + 8) == *(float *)(v15 + 8)) {
        char v18 = *(unsigned char *)(v15 + 12);
      }
      else {
        char v18 = 1;
      }
      if (v18) {
        return 0;
      }
    }
    if (v16)
    {
      if (!v17) {
        return 0;
      }
      uint64_t v19 = v16[2];
      if (v19 != v17[2]) {
        return 0;
      }
      if (v19) {
        BOOL v20 = v16 == v17;
      }
      else {
        BOOL v20 = 1;
      }
      if (!v20)
      {
        if (v16[4] != v17[4]) {
          return 0;
        }
        if (v19 != 1)
        {
          if (v16[5] != v17[5]) {
            return 0;
          }
          uint64_t v21 = v16 + 6;
          uint64_t v22 = v17 + 6;
          for (uint64_t i = v19 - 2; i; --i)
          {
            uint64_t v25 = *v21++;
            uint64_t v24 = v25;
            uint64_t v26 = *v22++;
            if (v24 != v26) {
              return 0;
            }
          }
        }
      }
    }
    else if (v17)
    {
      return 0;
    }
    if (++v11 == v9) {
      goto LABEL_8;
    }
  }
}

BOOL sub_17B00(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 == *(void *)(a2 + 16))
  {
    if (!v2 || a1 == a2)
    {
      return 1;
    }
    else
    {
      uint64_t v5 = 0;
      uint64_t v6 = v2 - 1;
      do
      {
        uint64_t v7 = *(void *)(a1 + v5 + 64);
        int v8 = *(_DWORD *)(a1 + v5 + 72);
        char v9 = *(unsigned char *)(a1 + v5 + 76);
        uint64_t v10 = *(void *)(a1 + v5 + 80);
        long long v11 = *(_OWORD *)(a1 + v5 + 48);
        v26[0] = *(_OWORD *)(a1 + v5 + 32);
        v26[1] = v11;
        uint64_t v27 = v7;
        int v28 = v8;
        char v29 = v9;
        uint64_t v30 = v10;
        uint64_t v12 = *(void *)(a2 + v5 + 64);
        int v13 = *(_DWORD *)(a2 + v5 + 72);
        char v14 = *(unsigned char *)(a2 + v5 + 76);
        uint64_t v15 = *(void *)(a2 + v5 + 80);
        long long v16 = *(_OWORD *)(a2 + v5 + 48);
        v21[0] = *(_OWORD *)(a2 + v5 + 32);
        v21[1] = v16;
        uint64_t v22 = v12;
        int v23 = v13;
        char v24 = v14;
        uint64_t v25 = v15;
        BOOL v17 = _s20BooksPersonalization9TransportO26RecommendationBlockRequestV2eeoiySbAE_AEtFZ_0((uint64_t)v26, (uint64_t)v21);
        BOOL v19 = v6-- != 0;
        if (!v17) {
          break;
        }
        v5 += 56;
      }
      while (v19);
    }
  }
  else
  {
    return 0;
  }
  return v17;
}

uint64_t sub_17BE4(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v23 = a2 + 32;
    while (1)
    {
      uint64_t v5 = v4 + 48 * v3;
      uint64_t v6 = v23 + 48 * v3;
      if (*(void *)v5 != *(void *)v6) {
        return 0;
      }
      int v8 = *(void **)(v5 + 24);
      uint64_t v7 = *(void *)(v5 + 32);
      uint64_t v9 = *(void *)(v5 + 40);
      long long v11 = *(void **)(v6 + 24);
      uint64_t v10 = *(void *)(v6 + 32);
      uint64_t v12 = *(void *)(v6 + 40);
      if (*(unsigned char *)(v4 + 48 * v3 + 16))
      {
        if (!*(unsigned char *)(v6 + 16)) {
          return 0;
        }
      }
      else
      {
        if (*(double *)(v5 + 8) == *(double *)(v6 + 8)) {
          char v13 = *(unsigned char *)(v6 + 16);
        }
        else {
          char v13 = 1;
        }
        if (v13) {
          return 0;
        }
      }
      uint64_t v14 = v8[2];
      if (v14 != v11[2]) {
        return 0;
      }
      if (v14) {
        BOOL v15 = v8 == v11;
      }
      else {
        BOOL v15 = 1;
      }
      if (!v15)
      {
        BOOL v16 = v8[4] == v11[4] && v8[5] == v11[5];
        if (!v16 && (sub_1FC5F0() & 1) == 0) {
          return 0;
        }
        if (v14 != 1)
        {
          BOOL v17 = v8[6] == v11[6] && v8[7] == v11[7];
          if (!v17 && (sub_1FC5F0() & 1) == 0) {
            return 0;
          }
          uint64_t v18 = v14 - 2;
          if (v18)
          {
            BOOL v19 = v11 + 9;
            BOOL v20 = v8 + 9;
            do
            {
              BOOL v21 = *(v20 - 1) == *(v19 - 1) && *v20 == *v19;
              if (!v21 && (sub_1FC5F0() & 1) == 0) {
                return 0;
              }
              v19 += 2;
              v20 += 2;
            }
            while (--v18);
          }
        }
      }
      if (v9)
      {
        if (!v12 || (v7 != v10 || v9 != v12) && (sub_1FC5F0() & 1) == 0) {
          return 0;
        }
      }
      else if (v12)
      {
        return 0;
      }
      if (++v3 == v2) {
        return 1;
      }
    }
  }
  return 1;
}

uint64_t sub_17DC0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    uint64_t v4 = a1 + 32;
    uint64_t v5 = a2 + 32;
    uint64_t v31 = a1 + 32;
    uint64_t v32 = *(void *)(a1 + 16);
    uint64_t v30 = a2 + 32;
    do
    {
      uint64_t v6 = v4 + 24 * v3;
      uint64_t v7 = *(void *)(v6 + 16);
      uint64_t v8 = v5 + 24 * v3;
      char v9 = *(unsigned char *)(v8 + 8);
      uint64_t v10 = *(void *)(v8 + 16);
      if (*(unsigned char *)(v6 + 8))
      {
        if (!*(unsigned char *)(v8 + 8)) {
          return 0;
        }
      }
      else
      {
        if (*(void *)v6 != *(void *)v8) {
          char v9 = 1;
        }
        if (v9) {
          return 0;
        }
      }
      if (v7)
      {
        if (!v10) {
          return 0;
        }
        uint64_t v11 = *(void *)(v7 + 16);
        if (v11 != *(void *)(v10 + 16)) {
          return 0;
        }
        if (v11) {
          BOOL v12 = v7 == v10;
        }
        else {
          BOOL v12 = 1;
        }
        if (!v12)
        {
          uint64_t v33 = v3;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v13 = 0;
          uint64_t v34 = v7;
          while (1)
          {
            uint64_t v15 = *(void *)(v7 + v13 + 32);
            unint64_t v16 = *(void *)(v7 + v13 + 40);
            uint64_t v17 = v10;
            uint64_t v18 = v10 + v13;
            uint64_t v19 = *(void *)(v10 + v13 + 32);
            unint64_t v20 = *(void *)(v18 + 40);
            if (v16 == 1) {
              unint64_t v21 = 0xD000000000000012;
            }
            else {
              unint64_t v21 = v15;
            }
            unint64_t v22 = 0x8000000000216D80;
            if (v16 != 1) {
              unint64_t v22 = v16;
            }
            if (v16) {
              uint64_t v23 = v21;
            }
            else {
              uint64_t v23 = 0x4148435255504F43;
            }
            if (v16) {
              unint64_t v24 = v22;
            }
            else {
              unint64_t v24 = 0xEA00000000004553;
            }
            unint64_t v25 = 0x8000000000216D80;
            if (v20 == 1) {
              unint64_t v26 = 0xD000000000000012;
            }
            else {
              unint64_t v26 = v19;
            }
            if (v20 != 1) {
              unint64_t v25 = v20;
            }
            if (v20) {
              uint64_t v27 = v26;
            }
            else {
              uint64_t v27 = 0x4148435255504F43;
            }
            if (v20) {
              unint64_t v28 = v25;
            }
            else {
              unint64_t v28 = 0xEA00000000004553;
            }
            if (v23 == v27 && v24 == v28)
            {
              sub_2F5CC(v15, v16);
              sub_2F5CC(v19, v20);
              sub_2F5CC(v15, v16);
              sub_2F5CC(v19, v20);
              swift_bridgeObjectRelease_n();
              sub_3781C(v19, v20);
              sub_3781C(v15, v16);
              uint64_t v10 = v17;
              uint64_t v7 = v34;
            }
            else
            {
              char v14 = sub_1FC5F0();
              sub_2F5CC(v15, v16);
              sub_2F5CC(v19, v20);
              sub_2F5CC(v15, v16);
              sub_2F5CC(v19, v20);
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_3781C(v19, v20);
              sub_3781C(v15, v16);
              uint64_t v10 = v17;
              uint64_t v7 = v34;
              if ((v14 & 1) == 0)
              {
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                return 0;
              }
            }
            v13 += 16;
            if (!--v11)
            {
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v2 = v32;
              uint64_t v3 = v33;
              uint64_t v5 = v30;
              uint64_t v4 = v31;
              break;
            }
          }
        }
      }
      else if (v10)
      {
        return 0;
      }
      ++v3;
    }
    while (v3 != v2);
  }
  return 1;
}

BOOL sub_18080(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (*(double *)(a1 + 32) != *(double *)(a2 + 32)) {
    return 0;
  }
  uint64_t v3 = (double *)(a1 + 40);
  uint64_t v4 = (double *)(a2 + 40);
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    double v7 = *v3++;
    double v8 = v7;
    double v9 = *v4++;
    --v5;
  }
  while (v8 == v9);
  return result;
}

uint64_t sub_180EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (unint64_t *)(a1 + 40);
    uint64_t v4 = (unint64_t *)(a2 + 40);
    do
    {
      uint64_t v6 = *(v3 - 1);
      unint64_t v7 = *v3;
      uint64_t v8 = *(v4 - 1);
      unint64_t v9 = *v4;
      if (*v3 == 1) {
        uint64_t v10 = 0x4F4F424F49445541;
      }
      else {
        uint64_t v10 = *(v3 - 1);
      }
      if (*v3 == 1) {
        unint64_t v11 = 0xE90000000000004BLL;
      }
      else {
        unint64_t v11 = *v3;
      }
      if (v7) {
        uint64_t v12 = v10;
      }
      else {
        uint64_t v12 = 0x4B4F4F4245;
      }
      if (v7) {
        unint64_t v13 = v11;
      }
      else {
        unint64_t v13 = 0xE500000000000000;
      }
      if (v9 == 1) {
        uint64_t v14 = 0x4F4F424F49445541;
      }
      else {
        uint64_t v14 = *(v4 - 1);
      }
      if (v9 == 1) {
        unint64_t v15 = 0xE90000000000004BLL;
      }
      else {
        unint64_t v15 = *v4;
      }
      if (v9) {
        uint64_t v16 = v14;
      }
      else {
        uint64_t v16 = 0x4B4F4F4245;
      }
      if (v9) {
        unint64_t v17 = v15;
      }
      else {
        unint64_t v17 = 0xE500000000000000;
      }
      if (v12 == v16 && v13 == v17)
      {
        sub_2F5CC(*(v3 - 1), *v3);
        sub_2F5CC(v8, v9);
        sub_2F5CC(v6, v7);
        sub_2F5CC(v8, v9);
        swift_bridgeObjectRelease_n();
        sub_3781C(v8, v9);
        sub_3781C(v6, v7);
      }
      else
      {
        char v5 = sub_1FC5F0();
        sub_2F5CC(v6, v7);
        sub_2F5CC(v8, v9);
        sub_2F5CC(v6, v7);
        sub_2F5CC(v8, v9);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_3781C(v8, v9);
        sub_3781C(v6, v7);
        if ((v5 & 1) == 0) {
          return 0;
        }
      }
      v3 += 2;
      v4 += 2;
      --v2;
    }
    while (v2);
  }
  return 1;
}

BOOL sub_182A8(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  if (v2 != a2[2]) {
    return 0;
  }
  if (!v2 || a1 == a2) {
    return 1;
  }
  if (a1[4] != a2[4]) {
    return 0;
  }
  uint64_t v3 = a1 + 5;
  uint64_t v4 = a2 + 5;
  uint64_t v5 = v2 - 1;
  do
  {
    BOOL result = v5 == 0;
    if (!v5) {
      break;
    }
    uint64_t v8 = *v3++;
    uint64_t v7 = v8;
    uint64_t v9 = *v4++;
    --v5;
  }
  while (v7 == v9);
  return result;
}

BOOL sub_18314(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v78 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v78 - v8;
  uint64_t v10 = type metadata accessor for ScoredCollectionRecommendation();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v13 = __chkstk_darwin(v12);
  unint64_t v15 = (char *)&v78 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = __chkstk_darwin((char *)&v78 - v16);
  uint64_t v19 = (char *)&v78 - v18;
  uint64_t v20 = __chkstk_darwin(v17);
  unint64_t v26 = (char *)&v78 - v23;
  uint64_t v27 = *(void *)(a1 + 16);
  if (v27 != *(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v96 = v20;
  if (!v27 || a1 == a2) {
    return 1;
  }
  uint64_t v89 = v25;
  uint64_t v90 = v24;
  unint64_t v28 = (*(unsigned __int8 *)(v22 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v22 + 80);
  uint64_t v29 = *(void *)(v22 + 72);
  uint64_t v30 = v27 - 1;
  unint64_t v82 = (unint64_t)"http://localhost:18060";
  uint64_t v83 = v29;
  v80 = "booksBySuggestedAuthors";
  unint64_t v81 = (unint64_t)"ry";
  unint64_t v78 = (unint64_t)"mangaYouMightLike";
  v79 = "booksYouMightLike";
  uint64_t v87 = v21;
  uint64_t v88 = v4;
  v84 = v9;
  uint64_t v85 = a1;
  v94 = (char *)&v78 - v23;
  v95 = v19;
  v93 = v15;
  uint64_t v86 = a2;
  while (1)
  {
    uint64_t v92 = v30;
    sub_37830(a1 + v28, (uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    unint64_t v91 = v28;
    sub_37830(a2 + v28, (uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_37830((uint64_t)v26, (uint64_t)v9, type metadata accessor for CollectionRecommendation);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        sub_37898((uint64_t)v9, type metadata accessor for CollectionRecommendation);
        int v31 = 1;
        break;
      case 2u:
        uint64_t v32 = sub_12124(&qword_26D090);
        memcpy(v97, &v9[*(int *)(v32 + 48)], 0x229uLL);
        sub_124B4(v97);
        swift_bridgeObjectRelease();
        uint64_t v33 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v33 - 8) + 8))(v9, v33);
        int v31 = 2;
        break;
      case 3u:
        uint64_t v34 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v34 - 8) + 8))(v9, v34);
        int v31 = 3;
        break;
      case 4u:
        uint64_t v35 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v35 - 8) + 8))(v9, v35);
        int v31 = 4;
        break;
      case 5u:
        uint64_t v36 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v36 - 8) + 8))(v9, v36);
        int v31 = 5;
        break;
      case 6u:
        uint64_t v37 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v37 - 8) + 8))(v9, v37);
        int v31 = 6;
        break;
      case 7u:
        uint64_t v38 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v38 - 8) + 8))(v9, v38);
        int v31 = 7;
        break;
      case 8u:
        uint64_t v39 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v39 - 8) + 8))(v9, v39);
        int v31 = 8;
        break;
      case 9u:
        sub_37898((uint64_t)v9, type metadata accessor for CollectionRecommendation);
        int v31 = 9;
        break;
      case 0xAu:
        sub_37898((uint64_t)v9, type metadata accessor for CollectionRecommendation);
        int v31 = 10;
        break;
      case 0xBu:
        sub_37898((uint64_t)v9, type metadata accessor for CollectionRecommendation);
        int v31 = 11;
        break;
      default:
        sub_37898((uint64_t)v9, type metadata accessor for CollectionRecommendation);
        int v31 = 0;
        break;
    }
    sub_37830((uint64_t)v19, (uint64_t)v7, type metadata accessor for CollectionRecommendation);
    int EnumCaseMultiPayload = swift_getEnumCaseMultiPayload();
    uint64_t v41 = v96;
    switch(EnumCaseMultiPayload)
    {
      case 1:
        sub_37898((uint64_t)v7, type metadata accessor for CollectionRecommendation);
        int v42 = 1;
        break;
      case 2:
        uint64_t v43 = sub_12124(&qword_26D090);
        memcpy(v97, &v7[*(int *)(v43 + 48)], 0x229uLL);
        sub_124B4(v97);
        swift_bridgeObjectRelease();
        uint64_t v44 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v44 - 8) + 8))(v7, v44);
        int v42 = 2;
        break;
      case 3:
        uint64_t v45 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v45 - 8) + 8))(v7, v45);
        int v42 = 3;
        break;
      case 4:
        uint64_t v46 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v46 - 8) + 8))(v7, v46);
        int v42 = 4;
        break;
      case 5:
        uint64_t v47 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v47 - 8) + 8))(v7, v47);
        int v42 = 5;
        break;
      case 6:
        uint64_t v48 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v48 - 8) + 8))(v7, v48);
        int v42 = 6;
        break;
      case 7:
        uint64_t v49 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v49 - 8) + 8))(v7, v49);
        int v42 = 7;
        break;
      case 8:
        uint64_t v50 = sub_12124(&qword_26D088);
        (*(void (**)(char *, uint64_t))(*(void *)(v50 - 8) + 8))(v7, v50);
        int v42 = 8;
        break;
      case 9:
        sub_37898((uint64_t)v7, type metadata accessor for CollectionRecommendation);
        int v42 = 9;
        break;
      case 10:
        sub_37898((uint64_t)v7, type metadata accessor for CollectionRecommendation);
        int v42 = 10;
        break;
      case 11:
        sub_37898((uint64_t)v7, type metadata accessor for CollectionRecommendation);
        int v42 = 11;
        break;
      default:
        sub_37898((uint64_t)v7, type metadata accessor for CollectionRecommendation);
        int v42 = 0;
        break;
    }
    unint64_t v51 = 0xE400000000000000;
    uint64_t v52 = 1802465122;
    switch(v31)
    {
      case 1:
        unint64_t v51 = 0xE500000000000000;
        uint64_t v52 = 0x736B6F6F62;
        break;
      case 2:
        uint64_t v52 = 0xD000000000000010;
        unint64_t v51 = v82 | 0x8000000000000000;
        break;
      case 3:
        uint64_t v52 = 0x417942736B6F6F62;
        unint64_t v51 = 0xED0000726F687475;
        break;
      case 4:
        uint64_t v52 = 0xD000000000000017;
        unint64_t v51 = v81 | 0x8000000000000000;
        break;
      case 5:
        uint64_t v52 = 0x476E49736B6F6F62;
        uint64_t v53 = 1701998181;
        goto LABEL_45;
      case 6:
        uint64_t v54 = v80;
        goto LABEL_39;
      case 7:
        uint64_t v54 = v79;
LABEL_39:
        unint64_t v51 = (unint64_t)v54 | 0x8000000000000000;
        uint64_t v52 = 0xD000000000000011;
        break;
      case 8:
        uint64_t v52 = 0xD000000000000013;
        unint64_t v51 = v78 | 0x8000000000000000;
        break;
      case 9:
        unint64_t v51 = 0xE600000000000000;
        uint64_t v52 = 0x736569726573;
        break;
      case 10:
        unsigned int v55 = 1954047342;
        goto LABEL_44;
      case 11:
        unsigned int v55 = 1701998445;
LABEL_44:
        uint64_t v52 = v55 | 0x65536E4900000000;
        uint64_t v53 = 1936025970;
LABEL_45:
        unint64_t v51 = v53 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      default:
        break;
    }
    unint64_t v56 = 0xE400000000000000;
    uint64_t v57 = 1802465122;
    switch(v42)
    {
      case 1:
        unint64_t v56 = 0xE500000000000000;
        uint64_t v57 = 0x736B6F6F62;
        break;
      case 2:
        uint64_t v57 = 0xD000000000000010;
        unint64_t v56 = v82 | 0x8000000000000000;
        break;
      case 3:
        uint64_t v57 = 0x417942736B6F6F62;
        unint64_t v56 = 0xED0000726F687475;
        break;
      case 4:
        uint64_t v57 = 0xD000000000000017;
        unint64_t v56 = v81 | 0x8000000000000000;
        break;
      case 5:
        uint64_t v57 = 0x476E49736B6F6F62;
        uint64_t v58 = 1701998181;
        goto LABEL_60;
      case 6:
        uint64_t v59 = v80;
        goto LABEL_54;
      case 7:
        uint64_t v59 = v79;
LABEL_54:
        unint64_t v56 = (unint64_t)v59 | 0x8000000000000000;
        uint64_t v57 = 0xD000000000000011;
        break;
      case 8:
        uint64_t v57 = 0xD000000000000013;
        unint64_t v56 = v78 | 0x8000000000000000;
        break;
      case 9:
        unint64_t v56 = 0xE600000000000000;
        uint64_t v57 = 0x736569726573;
        break;
      case 10:
        unsigned int v60 = 1954047342;
        goto LABEL_59;
      case 11:
        unsigned int v60 = 1701998445;
LABEL_59:
        uint64_t v57 = v60 | 0x65536E4900000000;
        uint64_t v58 = 1936025970;
LABEL_60:
        unint64_t v56 = v58 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
        break;
      default:
        break;
    }
    if (v52 == v57 && v51 == v56)
    {
      swift_bridgeObjectRelease_n();
      sub_37830((uint64_t)v26, v41, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37830((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      goto LABEL_65;
    }
    char v61 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_37830((uint64_t)v26, v41, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_37830((uint64_t)v19, (uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    if ((v61 & 1) == 0) {
      break;
    }
LABEL_65:
    uint64_t v62 = *(int *)(v87 + 20);
    int v63 = *(unsigned __int8 *)(v41 + v62);
    int v64 = v15[v62];
    if (v63)
    {
      if (v63 == 1)
      {
        uint64_t v65 = 0x6F6F626F69647561;
        unint64_t v66 = 0xE90000000000006BLL;
        if (!v64) {
          goto LABEL_68;
        }
      }
      else
      {
        unint64_t v66 = 0xE500000000000000;
        uint64_t v65 = 0x646578696DLL;
        if (!v64)
        {
LABEL_68:
          unint64_t v67 = 0xE500000000000000;
          uint64_t v68 = 0x6B6F6F6265;
          goto LABEL_75;
        }
      }
    }
    else
    {
      unint64_t v66 = 0xE500000000000000;
      uint64_t v65 = 0x6B6F6F6265;
      if (!v64) {
        goto LABEL_68;
      }
    }
    if (v64 == 1)
    {
      uint64_t v68 = 0x6F6F626F69647561;
      unint64_t v67 = 0xE90000000000006BLL;
    }
    else
    {
      unint64_t v67 = 0xE500000000000000;
      uint64_t v68 = 0x646578696DLL;
    }
LABEL_75:
    uint64_t v69 = v87;
    uint64_t v70 = v7;
    if (v65 == v68 && v66 == v67)
    {
      swift_bridgeObjectRelease_n();
      sub_37898(v96, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      unint64_t v26 = v94;
      uint64_t v71 = v89;
      sub_37830((uint64_t)v94, v89, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v19 = v95;
      uint64_t v72 = v90;
      sub_37830((uint64_t)v95, v90, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    }
    else
    {
      char v73 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_37898(v96, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      sub_37898((uint64_t)v93, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      unint64_t v26 = v94;
      uint64_t v71 = v89;
      sub_37830((uint64_t)v94, v89, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      uint64_t v19 = v95;
      uint64_t v72 = v90;
      sub_37830((uint64_t)v95, v90, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
      if ((v73 & 1) == 0) {
        goto LABEL_84;
      }
    }
    uint64_t v74 = *(int *)(v69 + 28);
    double v75 = *(double *)(v71 + v74);
    double v76 = *(double *)(v72 + v74);
    sub_37898(v71, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_37898(v72, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_37898((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    sub_37898((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
    uint64_t v30 = v92 - 1;
    BOOL result = v75 == v76;
    if (v75 == v76)
    {
      unint64_t v28 = v91 + v83;
      a1 = v85;
      a2 = v86;
      uint64_t v7 = v70;
      uint64_t v9 = v84;
      unint64_t v26 = v94;
      uint64_t v19 = v95;
      unint64_t v15 = v93;
      if (v92) {
        continue;
      }
    }
    return result;
  }
  sub_37898(v41, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898((uint64_t)v15, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  uint64_t v71 = v89;
  sub_37830((uint64_t)v26, v89, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  uint64_t v72 = v90;
  sub_37830((uint64_t)v19, v90, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
LABEL_84:
  sub_37898(v71, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898(v72, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898((uint64_t)v19, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  sub_37898((uint64_t)v26, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  return 0;
}

uint64_t sub_192D0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v5 = 0;
    do
    {
      double v7 = *(double *)(a1 + v5 + 48);
      double v6 = *(double *)(a1 + v5 + 56);
      double v8 = *(double *)(a1 + v5 + 64);
      double v9 = *(double *)(a1 + v5 + 72);
      char v10 = *(unsigned char *)(a1 + v5 + 80);
      double v12 = *(double *)(a2 + v5 + 48);
      double v11 = *(double *)(a2 + v5 + 56);
      double v13 = *(double *)(a2 + v5 + 64);
      double v14 = *(double *)(a2 + v5 + 72);
      int v15 = *(unsigned __int8 *)(a2 + v5 + 80);
      if (*(void *)(a1 + v5 + 32) == *(void *)(a2 + v5 + 32)
        && *(void *)(a1 + v5 + 40) == *(void *)(a2 + v5 + 40))
      {
        if (v7 != v12 || v6 != v11) {
          return 0;
        }
      }
      else
      {
        char v17 = sub_1FC5F0();
        uint64_t result = 0;
        if ((v17 & 1) == 0) {
          return result;
        }
        if (v7 != v12 || v6 != v11) {
          return result;
        }
      }
      if (v10)
      {
        if (!v15) {
          return 0;
        }
      }
      else
      {
        uint64_t result = 0;
        if (v15) {
          return result;
        }
        if (v8 != v13 || v9 != v14) {
          return result;
        }
      }
      v5 += 56;
      --v2;
    }
    while (v2);
  }
  return 1;
}

uint64_t sub_193EC(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = 0;
    while (1)
    {
      uint64_t v4 = (void *)(a1 + 32 + 16 * v3);
      uint64_t v5 = (void *)(a2 + 32 + 16 * v3);
      if (*v4 != *v5) {
        break;
      }
      double v6 = (void *)v4[1];
      double v7 = (void *)v5[1];
      uint64_t v8 = v6[2];
      if (v8 != v7[2]) {
        break;
      }
      if (v8) {
        BOOL v9 = v6 == v7;
      }
      else {
        BOOL v9 = 1;
      }
      if (!v9)
      {
        if (v6[4] != v7[4]) {
          return 0;
        }
        if (v8 != 1)
        {
          if (v6[5] != v7[5]) {
            return 0;
          }
          char v10 = v6 + 6;
          double v11 = v7 + 6;
          for (uint64_t i = v8 - 2; i; --i)
          {
            uint64_t v14 = *v10++;
            uint64_t v13 = v14;
            uint64_t v15 = *v11++;
            if (v13 != v15) {
              return 0;
            }
          }
        }
      }
      if (++v3 == v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

uint64_t sub_194C0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2 != *(void *)(a2 + 16)) {
    return 0;
  }
  if (v2 && a1 != a2)
  {
    uint64_t v3 = (uint64_t *)(a2 + 56);
    for (uint64_t i = (uint64_t *)(a1 + 56); ; i += 4)
    {
      uint64_t v5 = *(i - 1);
      uint64_t v6 = *i;
      uint64_t v7 = *(v3 - 1);
      uint64_t v8 = *v3;
      BOOL v9 = *(i - 3) == *(v3 - 3) && *(i - 2) == *(v3 - 2);
      if (!v9 && (sub_1FC5F0() & 1) == 0) {
        break;
      }
      BOOL v10 = v5 == v7 && v6 == v8;
      if (!v10 && (sub_1FC5F0() & 1) == 0) {
        break;
      }
      v3 += 4;
      if (!--v2) {
        return 1;
      }
    }
    return 0;
  }
  return 1;
}

void Transport.RecommendationRequest.hash(into:)(uint64_t a1)
{
  Swift::UInt8 v3 = *(unsigned char *)(v1 + 16);
  uint64_t v5 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  uint64_t v6 = *(void *)(v1 + 40);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  sub_1FC800(v3);
  if (v5)
  {
    sub_1FC800(1u);
    sub_2B990(a1, v5);
  }
  else
  {
    sub_1FC800(0);
  }
  Swift::UInt v7 = *(void *)(v4 + 16);
  sub_1FC7F0(v7);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v4 + 80;
    do
    {
      Transport.RecommendationBlockRequest.hash(into:)();
      v8 += 56;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  if (v6)
  {
    sub_1FC800(1u);
    sub_1FC7F0(*(void *)(v6 + 16));
    uint64_t v9 = *(void *)(v6 + 16);
    if (v9)
    {
      swift_bridgeObjectRetain();
      uint64_t v10 = v6 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1FB8C0();
        swift_bridgeObjectRelease();
        v10 += 16;
        --v9;
      }
      while (v9);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1FC800(0);
  }
}

uint64_t Transport.RecommendationRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26C6A8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v18 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v7 = *(void *)(v1 + 24);
  uint64_t v13 = *(void *)(v1 + 32);
  uint64_t v14 = v7;
  uint64_t v12 = *(void *)(v1 + 40);
  sub_5D64(a1, a1[3]);
  sub_2E850();
  sub_1FC870();
  LOBYTE(v16) = 0;
  uint64_t v8 = v15;
  sub_1FC4E0();
  if (!v8)
  {
    uint64_t v10 = v12;
    uint64_t v9 = v13;
    LOBYTE(v16) = v18;
    uint64_t v17 = v14;
    char v19 = 1;
    sub_2E8A4();
    sub_1FC530();
    uint64_t v16 = v9;
    char v19 = 2;
    sub_12124(&qword_26C6C0);
    sub_302AC(&qword_26C6C8, &qword_26C6C0, (void (*)(void))sub_2E8F8);
    sub_1FC530();
    uint64_t v16 = v10;
    char v19 = 3;
    sub_12124(&qword_26C6D8);
    sub_2F0D8(&qword_26C6E0, &qword_26C6D8);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendationRequest.hashValue.getter()
{
  uint64_t v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 3);
  uint64_t v4 = v0[5];
  uint64_t v7 = *v0;
  uint64_t v8 = v1;
  char v9 = v2;
  long long v10 = v3;
  uint64_t v11 = v4;
  sub_1FC7E0();
  Transport.RecommendationRequest.hash(into:)((uint64_t)v6);
  return sub_1FC830();
}

uint64_t Transport.RecommendationRequest.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C6E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2E850();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    LOBYTE(v22) = 0;
    uint64_t v9 = sub_1FC3A0();
    uint64_t v12 = v11;
    uint64_t v21 = v9;
    char v25 = 1;
    sub_2E94C();
    swift_bridgeObjectRetain();
    sub_1FC3F0();
    int v24 = v22;
    uint64_t v13 = v23;
    sub_12124(&qword_26C6C0);
    char v25 = 2;
    sub_302AC(&qword_26C6F8, &qword_26C6C0, (void (*)(void))sub_2E9A0);
    uint64_t v20 = v13;
    swift_bridgeObjectRetain();
    sub_1FC3F0();
    uint64_t v14 = v22;
    uint64_t v18 = sub_12124(&qword_26C6D8);
    char v25 = 3;
    sub_2F0D8(&qword_26C708, &qword_26C6D8);
    uint64_t v19 = v14;
    swift_bridgeObjectRetain();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v20;
    *(void *)a2 = v21;
    *(void *)(a2 + 8) = v12;
    *(unsigned char *)(a2 + 16) = v24;
    uint64_t v17 = v19;
    *(void *)(a2 + 24) = v16;
    *(void *)(a2 + 32) = v17;
    *(void *)(a2 + 40) = v15;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_19E3C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.RecommendationRequest.init(from:)(a1, a2);
}

uint64_t sub_19E54(void *a1)
{
  return Transport.RecommendationRequest.encode(to:)(a1);
}

Swift::Int sub_19E70()
{
  uint64_t v1 = v0[1];
  char v2 = *((unsigned char *)v0 + 16);
  long long v3 = *(_OWORD *)(v0 + 3);
  uint64_t v4 = v0[5];
  uint64_t v7 = *v0;
  uint64_t v8 = v1;
  char v9 = v2;
  long long v10 = v3;
  uint64_t v11 = v4;
  sub_1FC7E0();
  Transport.RecommendationRequest.hash(into:)((uint64_t)v6);
  return sub_1FC830();
}

uint64_t Transport.StoreAssetRequestDetails.mediaType.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.StoreAssetRequestDetails.mediaType.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  void *v1 = a1;
  return result;
}

uint64_t Transport.RecommendationResponseV2.bookIdToSeriesIdEntries.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationResponseV2.bookIdToSeriesIdEntries.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 24) = a1;
  return result;
}

uint64_t Transport.RecommendationResponse.init(recommendationBlockResponses:bookIdToDeduplicationIdEntries:bookIdToSeriesIdEntries:bookAuthors:booksEmbeddings:bookGenres:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X8>)
{
  *a7 = result;
  a7[1] = a2;
  a7[2] = a3;
  a7[3] = a4;
  a7[4] = a5;
  a7[5] = a6;
  return result;
}

uint64_t Transport.RecommendationResponse.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_1B9E0(a1, a2, (Swift::OpaquePointer)&off_253078, a3);
}

uint64_t Transport.RecommendationResponse.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendationResponse.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

unint64_t Transport.RecommendationResponse.CodingKeys.rawValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x687475416B6F6F62;
      break;
    case 4:
      unint64_t result = 0x626D45736B6F6F62;
      break;
    case 5:
      unint64_t result = 0x726E65476B6F6F62;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.RecommendationResponse.CodingKeys.stringValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 2:
      unint64_t result = 0xD000000000000017;
      break;
    case 3:
      unint64_t result = 0x687475416B6F6F62;
      break;
    case 4:
      unint64_t result = 0x626D45736B6F6F62;
      break;
    case 5:
      unint64_t result = 0x726E65476B6F6F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A164(char *a1, char *a2)
{
  return sub_1D8368(*a1, *a2);
}

Swift::Int sub_1A170()
{
  return sub_7D808();
}

uint64_t sub_1A178()
{
  return sub_15FFE0();
}

Swift::Int sub_1A180()
{
  return sub_114664();
}

uint64_t sub_1A188@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendationResponse.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

unint64_t sub_1A194@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Transport.RecommendationResponse.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1A1C0(uint64_t a1)
{
  unint64_t v2 = sub_2E9F4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1A1FC(uint64_t a1)
{
  unint64_t v2 = sub_2E9F4();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.RecommendationResponse.hash(into:)(uint64_t a1)
{
  uint64_t v3 = v1[1];
  uint64_t v5 = v1[2];
  uint64_t v4 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  sub_2CA14(a1, *v1);
  if (v3)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_2C120(a1, v3);
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1FC800(0);
    if (v5)
    {
LABEL_3:
      sub_1FC800(1u);
      sub_2C00C(a1, v5);
      if (v4) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  sub_1FC800(0);
  if (v4)
  {
LABEL_4:
    sub_1FC800(1u);
    sub_2CC3C(a1, v4);
    if (v7) {
      goto LABEL_5;
    }
LABEL_10:
    sub_1FC800(0);
    if (v6) {
      goto LABEL_6;
    }
    goto LABEL_11;
  }
LABEL_9:
  sub_1FC800(0);
  if (!v7) {
    goto LABEL_10;
  }
LABEL_5:
  sub_1FC800(1u);
  sub_2BDD8(a1, v7);
  if (v6)
  {
LABEL_6:
    sub_1FC800(1u);
    sub_2CC3C(a1, v6);
    return;
  }
LABEL_11:
  sub_1FC800(0);
}

uint64_t Transport.RecommendationResponse.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C710);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v15 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v18 = v1[2];
  uint64_t v19 = v8;
  uint64_t v10 = v1[3];
  uint64_t v16 = v1[4];
  uint64_t v17 = v10;
  uint64_t v15 = v1[5];
  sub_5D64(a1, a1[3]);
  sub_2E9F4();
  uint64_t v11 = v4;
  sub_1FC870();
  uint64_t v21 = v9;
  char v20 = 0;
  sub_12124(&qword_26C720);
  sub_302AC(&qword_26C728, &qword_26C720, (void (*)(void))sub_2EA48);
  sub_1FC530();
  if (!v2)
  {
    uint64_t v12 = v17;
    uint64_t v13 = v18;
    uint64_t v21 = v19;
    char v20 = 1;
    sub_12124(&qword_26C738);
    sub_302AC(&qword_26C740, &qword_26C738, (void (*)(void))sub_2EA9C);
    sub_1FC4A0();
    uint64_t v21 = v13;
    char v20 = 2;
    sub_12124(&qword_26C750);
    sub_302AC(&qword_26C758, &qword_26C750, (void (*)(void))sub_2EAF0);
    sub_1FC4A0();
    uint64_t v21 = v12;
    char v20 = 3;
    sub_12124(&qword_26C768);
    sub_302AC(&qword_26C770, &qword_26C768, (void (*)(void))sub_2EB44);
    sub_1FC4A0();
    uint64_t v21 = v16;
    char v20 = 4;
    sub_12124(&qword_26C780);
    sub_302AC(&qword_26C788, &qword_26C780, (void (*)(void))sub_2EB98);
    sub_1FC4A0();
    uint64_t v21 = v15;
    char v20 = 5;
    sub_12124(&qword_26C798);
    sub_302AC(&qword_26C7A0, &qword_26C798, (void (*)(void))sub_2EBEC);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

Swift::Int Transport.RecommendationResponse.hashValue.getter()
{
  uint64_t v1 = v0[5];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  uint64_t v7 = v1;
  sub_1FC7E0();
  Transport.RecommendationResponse.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.RecommendationResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C7B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2E9F4();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    sub_12124(&qword_26C720);
    char v20 = 0;
    sub_302AC(&qword_26C7B8, &qword_26C720, (void (*)(void))sub_2EC40);
    sub_1FC3F0();
    uint64_t v10 = v21;
    sub_12124(&qword_26C738);
    char v20 = 1;
    sub_302AC(&qword_26C7C8, &qword_26C738, (void (*)(void))sub_2EC94);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v19 = v10;
    uint64_t v11 = v21;
    sub_12124(&qword_26C750);
    char v20 = 2;
    sub_302AC(&qword_26C7D8, &qword_26C750, (void (*)(void))sub_2ECE8);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v18 = a2;
    uint64_t v12 = v21;
    sub_12124(&qword_26C768);
    char v20 = 3;
    sub_302AC(&qword_26C7E8, &qword_26C768, (void (*)(void))sub_2ED3C);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v17 = v6;
    uint64_t v13 = v21;
    sub_12124(&qword_26C780);
    char v20 = 4;
    sub_302AC(&qword_26C7F8, &qword_26C780, (void (*)(void))sub_2ED90);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v14 = v21;
    sub_12124(&qword_26C798);
    char v20 = 5;
    sub_302AC(&qword_26C808, &qword_26C798, (void (*)(void))sub_2EDE4);
    swift_bridgeObjectRetain();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v8, v5);
    uint64_t v15 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v18;
    *uint64_t v18 = v19;
    v16[1] = v11;
    v16[2] = v12;
    v16[3] = v13;
    v16[4] = v14;
    v16[5] = v15;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1AEA4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.RecommendationResponse.init(from:)(a1, a2);
}

uint64_t sub_1AEBC(void *a1)
{
  return Transport.RecommendationResponse.encode(to:)(a1);
}

Swift::Int sub_1AED8()
{
  uint64_t v1 = v0[5];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  uint64_t v7 = v1;
  sub_1FC7E0();
  Transport.RecommendationResponse.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

float Transport.SeedBook.affinity.getter()
{
  return *(float *)(v0 + 8);
}

void Transport.SeedBook.affinity.setter(float a1)
{
  *(float *)(v1 + 8) = a1;
}

uint64_t Transport.SeedBook.maxNumberOfCandidates.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Transport.SeedBook.maxNumberOfCandidates.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 16) = result;
  *(unsigned char *)(v2 + 24) = a2 & 1;
  return result;
}

uint64_t Transport.SeedBook.init(bookId:affinity:maxNumberOfCandidates:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>, float a5@<S0>)
{
  *(void *)a4 = result;
  *(float *)(a4 + 8) = a5;
  *(void *)(a4 + 16) = a2;
  *(unsigned char *)(a4 + 24) = a3 & 1;
  return result;
}

uint64_t Transport.SeedBook.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_256D4(a1, a2, (Swift::OpaquePointer)&off_253128, a3);
}

uint64_t Transport.SeedBook.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.SeedBook.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t Transport.SeedBook.CodingKeys.rawValue.getter()
{
  unint64_t v1 = 0x7974696E69666661;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000015;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_1B01C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D78F4(*a1, *a2);
}

Swift::Int sub_1B028()
{
  return sub_1FC830();
}

uint64_t sub_1B0CC()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1B15C()
{
  return sub_1FC830();
}

uint64_t sub_1B1FC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.SeedBook.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1B208(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE600000000000000;
  unint64_t v4 = 0xE800000000000000;
  unint64_t v5 = 0x7974696E69666661;
  if (v2 != 1)
  {
    unint64_t v5 = 0xD000000000000015;
    unint64_t v4 = 0x8000000000215EA0;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x64496B6F6F62;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1B268(uint64_t a1)
{
  unint64_t v2 = sub_2EE38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1B2A4(uint64_t a1)
{
  unint64_t v2 = sub_2EE38();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.SeedBook.hash(into:)()
{
  Swift::UInt32 v1 = *(_DWORD *)(v0 + 8);
  Swift::UInt64 v2 = *(void *)(v0 + 16);
  int v3 = *(unsigned __int8 *)(v0 + 24);
  sub_1FC820(*(void *)v0);
  if ((v1 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v4 = v1;
  }
  else {
    Swift::UInt32 v4 = 0;
  }
  sub_1FC810(v4);
  if (v3 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v2);
  }
}

uint64_t Transport.SeedBook.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C818);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *(void *)(v1 + 16);
  v9[3] = *(unsigned __int8 *)(v1 + 24);
  sub_5D64(a1, a1[3]);
  sub_2EE38();
  sub_1FC870();
  char v13 = 0;
  sub_1FC550();
  if (!v2)
  {
    char v12 = 1;
    sub_1FC510();
    char v11 = 2;
    sub_1FC4C0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Transport.SeedBook.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt32 v2 = *(_DWORD *)(v0 + 8);
  Swift::UInt64 v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 24);
  sub_1FC7E0();
  sub_1FC820(v1);
  if ((v2 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v5 = v2;
  }
  else {
    Swift::UInt32 v5 = 0;
  }
  sub_1FC810(v5);
  if (v4 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v3);
  }
  return sub_1FC830();
}

uint64_t Transport.SeedBook.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C828);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v16[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_2EE38();
  sub_1FC850();
  if (!v2)
  {
    v16[15] = 0;
    uint64_t v9 = sub_1FC410();
    v16[14] = 1;
    sub_1FC3D0();
    int v11 = v10;
    v16[13] = 2;
    uint64_t v13 = sub_1FC380();
    char v15 = v14;
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    *(void *)a2 = v9;
    *(_DWORD *)(a2 + 8) = v11;
    *(void *)(a2 + 16) = v13;
    *(unsigned char *)(a2 + 24) = v15 & 1;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1B790@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.SeedBook.init(from:)(a1, a2);
}

uint64_t sub_1B7A8(void *a1)
{
  return Transport.SeedBook.encode(to:)(a1);
}

Swift::Int sub_1B7C4()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt32 v2 = *(_DWORD *)(v0 + 8);
  Swift::UInt64 v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 24);
  sub_1FC7E0();
  sub_1FC820(v1);
  if ((v2 & 0x7FFFFFFF) != 0) {
    Swift::UInt32 v5 = v2;
  }
  else {
    Swift::UInt32 v5 = 0;
  }
  sub_1FC810(v5);
  if (v4 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v3);
  }
  return sub_1FC830();
}

uint64_t Transport.RecommendedItem.authorId.getter()
{
  return *(void *)v0;
}

uint64_t Transport.RecommendedItem.authorId.setter(uint64_t result, char a2)
{
  *(void *)uint64_t v2 = result;
  *(unsigned char *)(v2 + 8) = a2 & 1;
  return result;
}

uint64_t Transport.RecommendedItem.bookId.getter()
{
  return *(void *)(v0 + 16);
}

uint64_t Transport.RecommendedItem.bookId.setter(uint64_t result)
{
  *(void *)(v1 + 16) = result;
  return result;
}

uint64_t Transport.RecommendedItem.seriesId.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t Transport.RecommendedItem.seriesId.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 24) = result;
  *(unsigned char *)(v2 + 32) = a2 & 1;
  return result;
}

unint64_t Transport.RecommendedItem.copurchaseAffinity.getter()
{
  return *(unsigned int *)(v0 + 36) | ((unint64_t)*(unsigned __int8 *)(v0 + 40) << 32);
}

uint64_t Transport.RecommendedItem.copurchaseAffinity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 36) = result;
  *(unsigned char *)(v1 + 40) = BYTE4(result) & 1;
  return result;
}

uint64_t (*Transport.RecommendedItem.copurchaseAffinity.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

unint64_t Transport.RecommendedItem.contentSimilarityAffinity.getter()
{
  return *(unsigned int *)(v0 + 44) | ((unint64_t)*(unsigned __int8 *)(v0 + 48) << 32);
}

uint64_t Transport.RecommendedItem.contentSimilarityAffinity.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 44) = result;
  *(unsigned char *)(v1 + 48) = BYTE4(result) & 1;
  return result;
}

uint64_t (*Transport.RecommendedItem.contentSimilarityAffinity.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendationResponseV2.bookGenres.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationResponseV2.bookGenres.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 56) = a1;
  return result;
}

uint64_t (*Transport.RecommendationResponseV2.bookGenres.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendedItem.init(authorId:bookId:seriesId:copurchaseAffinity:contentSimilarityAffinity:inferredFromAffinityForBookIds:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  *(void *)a9 = result;
  *(unsigned char *)(a9 + 8) = a2 & 1;
  *(void *)(a9 + 16) = a3;
  *(void *)(a9 + 24) = a4;
  *(unsigned char *)(a9 + 32) = a5 & 1;
  *(_DWORD *)(a9 + 36) = a6;
  *(unsigned char *)(a9 + 40) = BYTE4(a6) & 1;
  *(_DWORD *)(a9 + 44) = a7;
  *(unsigned char *)(a9 + 48) = BYTE4(a7) & 1;
  *(void *)(a9 + 56) = a8;
  return result;
}

uint64_t Transport.RecommendedItem.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_1B9E0(a1, a2, (Swift::OpaquePointer)&off_253190, a3);
}

uint64_t sub_1B9E0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  unint64_t v7 = sub_1FC2D0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  char v9 = 6;
  if (v7 < 6) {
    char v9 = v7;
  }
  *a4 = v9;
  return result;
}

uint64_t Transport.RecommendedItem.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendedItem.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

void Transport.RecommendedItem.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 6;
}

unint64_t Transport.RecommendedItem.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x6449726F68747561;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x64496B6F6F62;
      break;
    case 2:
      unint64_t result = 0x6449736569726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.RecommendedItem.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x6449726F68747561;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x64496B6F6F62;
      break;
    case 2:
      unint64_t result = 0x6449736569726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000012;
      break;
    case 4:
      unint64_t result = 0xD000000000000019;
      break;
    case 5:
      unint64_t result = 0xD00000000000001ELL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1BC14(unsigned __int8 *a1, char *a2)
{
  return sub_1D8A7C(*a1, *a2);
}

Swift::Int sub_1BC20()
{
  return sub_7D948();
}

uint64_t sub_1BC28()
{
  return sub_160104();
}

Swift::Int sub_1BC30()
{
  return sub_11497C();
}

uint64_t sub_1BC38@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendedItem.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

unint64_t sub_1BC44@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Transport.RecommendedItem.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1BC70(uint64_t a1)
{
  unint64_t v2 = sub_2EE8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1BCAC(uint64_t a1)
{
  unint64_t v2 = sub_2EE8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Transport.RecommendedItem.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  Swift::UInt64 v5 = *(void *)(v2 + 16);
  Swift::UInt64 v4 = *(void *)(v2 + 24);
  int v6 = *(unsigned __int8 *)(v2 + 32);
  Swift::UInt32 v7 = *(_DWORD *)(v2 + 36);
  int v8 = *(unsigned __int8 *)(v2 + 40);
  Swift::UInt32 v9 = *(_DWORD *)(v2 + 44);
  int v10 = *(unsigned __int8 *)(v2 + 48);
  uint64_t v11 = *(void *)(v2 + 56);
  if (*(unsigned char *)(v2 + 8) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt64 v12 = *(void *)v2;
    sub_1FC800(1u);
    sub_1FC820(v12);
  }
  sub_1FC820(v5);
  if (v6)
  {
    sub_1FC800(0);
    if (!v8) {
      goto LABEL_6;
    }
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v4);
    if (!v8)
    {
LABEL_6:
      sub_1FC800(1u);
      if ((v7 & 0x7FFFFFFF) != 0) {
        Swift::UInt32 v13 = v7;
      }
      else {
        Swift::UInt32 v13 = 0;
      }
      sub_1FC810(v13);
      if (!v10) {
        goto LABEL_10;
      }
      goto LABEL_16;
    }
  }
  sub_1FC800(0);
  if (!v10)
  {
LABEL_10:
    sub_1FC800(1u);
    if ((v9 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v14 = v9;
    }
    else {
      Swift::UInt32 v14 = 0;
    }
    sub_1FC810(v14);
    goto LABEL_17;
  }
LABEL_16:
  sub_1FC800(0);
LABEL_17:
  swift_bridgeObjectRetain();
  sub_2B704(a1, v11);

  return swift_bridgeObjectRelease();
}

uint64_t Transport.RecommendedItem.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26C830);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  int v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v17 = *(void *)(v1 + 24);
  uint64_t v18 = v7;
  int v21 = *(unsigned __int8 *)(v1 + 32);
  uint64_t v16 = *(unsigned int *)(v1 + 36);
  int v15 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v14 = *(unsigned int *)(v1 + 44);
  int v13 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v12 = *(void *)(v1 + 56);
  sub_5D64(a1, a1[3]);
  sub_2EE8C();
  sub_1FC870();
  LOBYTE(v20) = 0;
  uint64_t v8 = v19;
  sub_1FC4C0();
  if (!v8)
  {
    char v9 = v15;
    LOBYTE(v20) = 1;
    sub_1FC550();
    LOBYTE(v20) = 2;
    sub_1FC4C0();
    LOBYTE(v20) = 3;
    char v22 = v9;
    sub_1FC480();
    LOBYTE(v20) = 4;
    char v22 = v13;
    sub_1FC480();
    uint64_t v20 = v12;
    char v22 = 5;
    sub_12124(&qword_26C840);
    sub_302AC(&qword_26C848, &qword_26C840, (void (*)(void))sub_2EEE0);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendedItem.hashValue.getter()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 32);
  int v3 = *((_DWORD *)v0 + 9);
  char v4 = *((unsigned char *)v0 + 40);
  int v5 = *((_DWORD *)v0 + 11);
  char v6 = *((unsigned char *)v0 + 48);
  uint64_t v7 = v0[7];
  uint64_t v10 = *v0;
  char v11 = v1;
  long long v12 = *((_OWORD *)v0 + 1);
  char v13 = v2;
  int v14 = v3;
  char v15 = v4;
  int v16 = v5;
  char v17 = v6;
  uint64_t v18 = v7;
  sub_1FC7E0();
  Transport.RecommendedItem.hash(into:)((uint64_t)v9);
  return sub_1FC830();
}

uint64_t Transport.RecommendedItem.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C858);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2EE8C();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v28 = 0;
  uint64_t v9 = sub_1FC380();
  char v11 = v10;
  char v27 = 1;
  uint64_t v21 = sub_1FC410();
  char v26 = 2;
  uint64_t v12 = sub_1FC380();
  int v19 = v13;
  uint64_t v20 = v12;
  char v25 = 3;
  uint64_t v18 = sub_1FC340();
  char v24 = 4;
  uint64_t v17 = sub_1FC340();
  sub_12124(&qword_26C840);
  char v23 = 5;
  sub_302AC(&qword_26C860, &qword_26C840, (void (*)(void))sub_2EF34);
  sub_1FC3F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v11 & 1;
  uint64_t v14 = v22;
  uint64_t v15 = v20;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v15;
  *(unsigned char *)(a2 + 32) = v19 & 1;
  BYTE4(v15) = BYTE4(v18);
  *(_DWORD *)(a2 + 36) = v18;
  *(unsigned char *)(a2 + 40) = BYTE4(v15) & 1;
  BYTE4(v15) = BYTE4(v17);
  *(_DWORD *)(a2 + 44) = v17;
  *(unsigned char *)(a2 + 48) = BYTE4(v15) & 1;
  *(void *)(a2 + 56) = v14;
  swift_bridgeObjectRetain();
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C48C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.RecommendedItem.init(from:)(a1, a2);
}

uint64_t sub_1C4A4(void *a1)
{
  return Transport.RecommendedItem.encode(to:)(a1);
}

Swift::Int sub_1C4C0()
{
  char v1 = *((unsigned char *)v0 + 8);
  char v2 = *((unsigned char *)v0 + 32);
  int v3 = *((_DWORD *)v0 + 9);
  char v4 = *((unsigned char *)v0 + 40);
  int v5 = *((_DWORD *)v0 + 11);
  char v6 = *((unsigned char *)v0 + 48);
  uint64_t v7 = v0[7];
  uint64_t v10 = *v0;
  char v11 = v1;
  long long v12 = *((_OWORD *)v0 + 1);
  char v13 = v2;
  int v14 = v3;
  char v15 = v4;
  int v16 = v5;
  char v17 = v6;
  uint64_t v18 = v7;
  sub_1FC7E0();
  Transport.RecommendedItem.hash(into:)((uint64_t)v9);
  return sub_1FC830();
}

uint64_t Transport.UserProfileV2.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_253240, a3);
}

uint64_t Transport.UserProfileV2.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_253290, a3);
}

uint64_t Transport.UserProfileV2.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x6B6F6F4264656573;
  }
  else {
    return 0x746963696C707865;
  }
}

uint64_t sub_1C5AC(char *a1, char *a2)
{
  return sub_1D8D1C(*a1, *a2);
}

Swift::Int sub_1C5B8()
{
  return sub_1FC830();
}

uint64_t sub_1C64C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1C6CC()
{
  return sub_1FC830();
}

uint64_t sub_1C75C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.UserProfileV2.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1C768(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x746963696C707865;
  if (*v1) {
    uint64_t v2 = 0x6B6F6F4264656573;
  }
  unint64_t v3 = 0xEF6465776F6C6C41;
  if (*v1) {
    unint64_t v3 = 0xE900000000000073;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1C7BC(uint64_t a1)
{
  unint64_t v2 = sub_2EF88();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1C7F8(uint64_t a1)
{
  unint64_t v2 = sub_2EF88();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t static Transport.UserProfileV2.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 == *a2) {
    return sub_16494(*((void *)a1 + 1), *((void *)a2 + 1));
  }
  else {
    return 0;
  }
}

void Transport.UserProfileV2.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *(void *)(v1 + 8);
  sub_1FC800(*(unsigned char *)v1);

  sub_2BC58(a1, v3);
}

uint64_t Transport.UserProfileV2.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C870);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v9 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  v9[0] = *(void *)(v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_2EF88();
  sub_1FC870();
  char v11 = 0;
  sub_1FC4F0();
  if (!v2)
  {
    v9[1] = v9[0];
    char v10 = 1;
    sub_12124(&qword_26C880);
    sub_302AC(&qword_26C888, &qword_26C880, (void (*)(void))sub_2EFDC);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Transport.UserProfileV2.hashValue.getter()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  sub_1FC7E0();
  sub_1FC800(v1);
  sub_2BC58((uint64_t)v4, v2);
  return sub_1FC830();
}

uint64_t Transport.UserProfileV2.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C898);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2EF88();
  sub_1FC850();
  if (!v2)
  {
    char v14 = 0;
    char v9 = sub_1FC3B0();
    sub_12124(&qword_26C880);
    char v13 = 1;
    sub_302AC(&qword_26C8A0, &qword_26C880, (void (*)(void))sub_2F030);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v10 = v12[1];
    *(unsigned char *)a2 = v9 & 1;
    *(void *)(a2 + 8) = v10;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1CCD8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.UserProfileV2.init(from:)(a1, a2);
}

uint64_t sub_1CCF0(void *a1)
{
  return Transport.UserProfileV2.encode(to:)(a1);
}

void sub_1CD08()
{
  uint64_t v1 = *(void *)(v0 + 8);
  sub_1FC800(*(unsigned char *)v0);
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    uint64_t v3 = (unsigned __int8 *)(v1 + 56);
    do
    {
      Swift::UInt32 v4 = *((_DWORD *)v3 - 4);
      Swift::UInt64 v5 = *((void *)v3 - 1);
      int v6 = *v3;
      sub_1FC820(*((void *)v3 - 3));
      if ((v4 & 0x7FFFFFFF) != 0) {
        Swift::UInt32 v7 = v4;
      }
      else {
        Swift::UInt32 v7 = 0;
      }
      sub_1FC810(v7);
      if (v6 == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        sub_1FC820(v5);
      }
      v3 += 32;
      --v2;
    }
    while (v2);
  }
}

Swift::Int sub_1CDB0()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  sub_1FC7E0();
  sub_1FC800(v1);
  sub_2BC58((uint64_t)v4, v2);
  return sub_1FC830();
}

uint64_t Transport.BookEmbeddings.init(bookId:embeddings:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(void *)a4 = result;
  *(unsigned char *)(a4 + 8) = a2 & 1;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t Transport.BookEmbeddings.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_2532E0, a3);
}

uint64_t Transport.BookEmbeddings.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_253330, a3);
}

uint64_t Transport.BookEmbeddings.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x6E69646465626D65;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_1CE74(char *a1, char *a2)
{
  return sub_1D8C74(*a1, *a2);
}

Swift::Int sub_1CE80()
{
  return sub_1FC830();
}

uint64_t sub_1CF04()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1CF74()
{
  return sub_1FC830();
}

uint64_t sub_1CFF4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookEmbeddings.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1D000(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x6E69646465626D65;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000007367;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D044(uint64_t a1)
{
  unint64_t v2 = sub_2F084();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D080(uint64_t a1)
{
  unint64_t v2 = sub_2F084();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL static Transport.BookEmbeddings.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2DDE4(a1, a2, (uint64_t (*)(void))sub_18080);
}

void Transport.BookEmbeddings.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 16);
  if (*(unsigned char *)(v2 + 8) != 1)
  {
    Swift::UInt64 v5 = *(void *)v2;
    sub_1FC800(1u);
    sub_1FC820(v5);
    if (v4) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (!v4) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1FC800(1u);

  sub_2BC00(a1, v4);
}

uint64_t Transport.BookEmbeddings.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C8B0);
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  int v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5D64(a1, a1[3]);
  sub_2F084();
  sub_1FC870();
  char v13 = 0;
  sub_1FC4C0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    sub_12124(&qword_26C8C0);
    sub_2F0D8(&qword_26C8C8, &qword_26C8C0);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

Swift::Int Transport.BookEmbeddings.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC7E0();
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_2BC00((uint64_t)v5, v3);
  return sub_1FC830();
}

uint64_t Transport.BookEmbeddings.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C8D0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F084();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    char v17 = 0;
    uint64_t v9 = sub_1FC380();
    char v11 = v10;
    v15[0] = a2;
    sub_12124(&qword_26C8C0);
    char v16 = 1;
    sub_2F0D8(&qword_26C8D8, &qword_26C8C0);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v15[0];
    *(void *)v15[0] = v9;
    *(unsigned char *)(v14 + 8) = v11 & 1;
    *(void *)(v14 + 16) = v13;
    sub_1264C((uint64_t)a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1D624@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookEmbeddings.init(from:)(a1, a2);
}

uint64_t sub_1D63C(void *a1)
{
  return Transport.BookEmbeddings.encode(to:)(a1);
}

Swift::Int sub_1D658()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC7E0();
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_2BC00((uint64_t)v5, v3);
  return sub_1FC830();
}

uint64_t Transport.InferredFromInfo.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_253380, a3);
}

uint64_t Transport.InferredFromInfo.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_2533D0, a3);
}

uint64_t Transport.InferredFromInfo.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x6C6F646F6874656DLL;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_1D754(char *a1, char *a2)
{
  return sub_1D89CC(*a1, *a2);
}

Swift::Int sub_1D760()
{
  return sub_1FC830();
}

uint64_t sub_1D7EC()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1D864()
{
  return sub_1FC830();
}

uint64_t sub_1D8EC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.InferredFromInfo.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1D8F8(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x6C6F646F6874656DLL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xED0000736569676FLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1D944(uint64_t a1)
{
  unint64_t v2 = sub_2F138();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1D980(uint64_t a1)
{
  unint64_t v2 = sub_2F138();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.InferredFromInfo.hash(into:)(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = *(void *)(v2 + 16);
  if (*(unsigned char *)(v2 + 8) != 1)
  {
    Swift::UInt64 v5 = *(void *)v2;
    sub_1FC800(1u);
    sub_1FC820(v5);
    if (v4) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (!v4) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  sub_2B8A4(a1, v4);

  swift_bridgeObjectRelease();
}

uint64_t Transport.InferredFromInfo.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C8E0);
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5D64(a1, a1[3]);
  sub_2F138();
  sub_1FC870();
  char v13 = 0;
  sub_1FC4C0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    sub_12124(&qword_26C8F0);
    sub_302AC(&qword_26C8F8, &qword_26C8F0, (void (*)(void))sub_2F18C);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

Swift::Int Transport.InferredFromInfo.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC7E0();
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  sub_2B8A4((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t Transport.InferredFromInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C908);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F138();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    char v17 = 0;
    uint64_t v9 = sub_1FC380();
    char v11 = v10;
    v15[0] = a2;
    sub_12124(&qword_26C8F0);
    char v16 = 1;
    sub_302AC(&qword_26C910, &qword_26C8F0, (void (*)(void))sub_2F1E0);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v15[0];
    *(void *)v15[0] = v9;
    *(unsigned char *)(v14 + 8) = v11 & 1;
    *(void *)(v14 + 16) = v13;
    sub_1264C((uint64_t)a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1DF30@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.InferredFromInfo.init(from:)(a1, a2);
}

uint64_t sub_1DF48(void *a1)
{
  return Transport.InferredFromInfo.encode(to:)(a1);
}

Swift::Int sub_1DF64()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC7E0();
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  sub_2B8A4((uint64_t)v5, v3);
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t Transport.BookAuthors.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_253420, a3);
}

uint64_t Transport.BookAuthors.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_253470, a3);
}

uint64_t Transport.BookAuthors.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x73726F68747561;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_1E064(char *a1, char *a2)
{
  return sub_1D8FA8(*a1, *a2);
}

Swift::Int sub_1E070()
{
  return sub_1FC830();
}

uint64_t sub_1E0F0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1E15C()
{
  return sub_1FC830();
}

uint64_t sub_1E1D8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookAuthors.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1E1E4(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x73726F68747561;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE700000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1E224(uint64_t a1)
{
  unint64_t v2 = sub_2F234();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E260(uint64_t a1)
{
  unint64_t v2 = sub_2F234();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Transport.BookAuthors.encode(to:)(void *a1)
{
  return sub_1E66C(a1, &qword_26C920, (void (*)(void))sub_2F234);
}

uint64_t Transport.BookAuthors.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E8E4(a1, &qword_26C930, (void (*)(void))sub_2F234, a2);
}

uint64_t sub_1E320@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Transport.BookAuthors.init(from:)(a1, a2);
}

uint64_t sub_1E338(void *a1)
{
  return Transport.BookAuthors.encode(to:)(a1);
}

BooksPersonalization::Transport::Server __swiftcall Transport.Server.init(url:)(BooksPersonalization::Transport::Server url)
{
  BooksPersonalization::Transport::Server *v1 = url;
  return url;
}

uint64_t Transport.BookGenres.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_2534C0, a3);
}

uint64_t Transport.BookGenres.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_253510, a3);
}

uint64_t Transport.BookGenres.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x7365726E6567;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_1E3A8(char *a1, char *a2)
{
  return sub_1D904C(*a1, *a2);
}

Swift::Int sub_1E3B4()
{
  return sub_1FC830();
}

uint64_t sub_1E424()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1E478()
{
  return sub_1FC830();
}

uint64_t sub_1E4E4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookGenres.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1E4F0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x7365726E6567;
  }
  *a1 = v2;
  a1[1] = 0xE600000000000000;
}

uint64_t sub_1E524(uint64_t a1)
{
  unint64_t v2 = sub_2F288();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E560(uint64_t a1)
{
  unint64_t v2 = sub_2F288();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL _s20BooksPersonalization9TransportO11BookAuthorsV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  return *(void *)a1 == *(void *)a2 && sub_182A8(*(void **)(a1 + 8), *(void **)(a2 + 8));
}

void Book.Metadata.GenreTreeNode.hash(into:)()
{
  Swift::UInt64 v1 = v0[1];
  sub_1FC820(*v0);
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v4 = *v3++;
      sub_1FC820(v4);
      --v2;
    }
    while (v2);
  }
}

uint64_t Transport.BookGenres.encode(to:)(void *a1)
{
  return sub_1E66C(a1, &qword_26C938, (void (*)(void))sub_2F288);
}

uint64_t sub_1E66C(void *a1, uint64_t *a2, void (*a3)(void))
{
  char v12 = a3;
  uint64_t v5 = sub_12124(a2);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = *(void *)(v3 + 8);
  sub_5D64(a1, a1[3]);
  v12();
  sub_1FC870();
  char v16 = 0;
  uint64_t v9 = v13;
  sub_1FC550();
  if (!v9)
  {
    uint64_t v14 = v11;
    char v15 = 1;
    sub_12124(&qword_26C5F8);
    sub_2F0D8(&qword_26C600, &qword_26C5F8);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
}

Swift::Int Book.Metadata.GenreTreeNode.hashValue.getter()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1FC7E0();
  sub_1FC820(v1);
  sub_1FC7F0(*(void *)(v2 + 16));
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    Swift::UInt64 v4 = (Swift::UInt64 *)(v2 + 32);
    do
    {
      Swift::UInt64 v5 = *v4++;
      sub_1FC820(v5);
      --v3;
    }
    while (v3);
  }
  return sub_1FC830();
}

uint64_t Transport.BookGenres.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1E8E4(a1, &qword_26C948, (void (*)(void))sub_2F288, a2);
}

uint64_t sub_1E8E4@<X0>(void *a1@<X0>, uint64_t *a2@<X1>, void (*a3)(void)@<X2>, uint64_t *a4@<X8>)
{
  char v17 = a4;
  uint64_t v7 = sub_12124(a2);
  uint64_t v16 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v15 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  a3();
  sub_1FC850();
  if (!v4)
  {
    uint64_t v11 = v16;
    char v10 = v17;
    char v20 = 0;
    uint64_t v12 = sub_1FC410();
    sub_12124(&qword_26C5F8);
    char v19 = 1;
    sub_2F0D8(&qword_26C610, &qword_26C5F8);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v9, v7);
    uint64_t v13 = v18;
    *char v10 = v12;
    v10[1] = v13;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1EADC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Transport.BookGenres.init(from:)(a1, a2);
}

uint64_t sub_1EAF4(void *a1)
{
  return Transport.BookGenres.encode(to:)(a1);
}

void sub_1EB0C()
{
  Swift::UInt64 v1 = v0[1];
  sub_1FC820(*v0);
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    uint64_t v3 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v4 = *v3++;
      sub_1FC820(v4);
      --v2;
    }
    while (v2);
  }
}

Swift::Int sub_1EB64()
{
  Swift::UInt64 v1 = *v0;
  Swift::UInt64 v2 = v0[1];
  sub_1FC7E0();
  sub_1FC820(v1);
  Swift::UInt v3 = *(void *)(v2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    Swift::UInt64 v4 = (Swift::UInt64 *)(v2 + 32);
    do
    {
      Swift::UInt64 v5 = *v4++;
      sub_1FC820(v5);
      --v3;
    }
    while (v3);
  }
  return sub_1FC830();
}

uint64_t Transport.Recommend.Input.xAppleUserExperimentIds.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Transport.Recommend.Input.xAppleUserExperimentIds.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t Transport.BookIdToDeduplicationIdEntry.init(bookId:deduplicationId:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = result;
  *(unsigned char *)(a5 + 8) = a2 & 1;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t Transport.BookIdToDeduplicationIdEntry.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_253560, a3);
}

uint64_t Transport.BookIdToDeduplicationIdEntry.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_2535B0, a3);
}

void Transport.BookIdToDeduplicationIdEntry.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 2;
}

uint64_t Transport.BookIdToDeduplicationIdEntry.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x63696C7075646564;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_1ECC0(char *a1, char *a2)
{
  return sub_1D91DC(*a1, *a2);
}

Swift::Int sub_1ECCC()
{
  return sub_1FC830();
}

uint64_t sub_1ED58()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1EDD0()
{
  return sub_1FC830();
}

uint64_t sub_1EE58@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookIdToDeduplicationIdEntry.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1EE64(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x63696C7075646564;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEF64496E6F697461;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1EEB0(uint64_t a1)
{
  unint64_t v2 = sub_2F2DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EEEC(uint64_t a1)
{
  unint64_t v2 = sub_2F2DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.BookIdToDeduplicationIdEntry.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 8) != 1)
  {
    Swift::UInt64 v2 = *(void *)v0;
    sub_1FC800(1u);
    sub_1FC820(v2);
    if (v1) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (!v1) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  sub_1FB8C0();

  swift_bridgeObjectRelease();
}

uint64_t Transport.BookIdToDeduplicationIdEntry.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26C950);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v10 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  v10[1] = *(void *)(v1 + 24);
  void v10[2] = v7;
  sub_5D64(a1, a1[3]);
  sub_2F2DC();
  sub_1FC870();
  char v12 = 0;
  uint64_t v8 = v10[3];
  sub_1FC4C0();
  if (!v8)
  {
    char v11 = 1;
    sub_1FC450();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.BookIdToDeduplicationIdEntry.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 24);
  sub_1FC7E0();
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t Transport.BookIdToDeduplicationIdEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C960);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F2DC();
  sub_1FC850();
  if (!v2)
  {
    char v20 = 0;
    uint64_t v9 = sub_1FC380();
    char v11 = v10;
    char v19 = 1;
    uint64_t v12 = sub_1FC310();
    uint64_t v15 = v14;
    uint64_t v16 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v18 = v12;
    v16(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(void *)(a2 + 16) = v18;
    *(void *)(a2 + 24) = v15;
  }
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1F3F0@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookIdToDeduplicationIdEntry.init(from:)(a1, a2);
}

uint64_t sub_1F408(void *a1)
{
  return Transport.BookIdToDeduplicationIdEntry.encode(to:)(a1);
}

Swift::Int sub_1F424()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 24);
  sub_1FC7E0();
  if (v2 != 1)
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
    if (v3) {
      goto LABEL_3;
    }
LABEL_5:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(0);
  if (!v3) {
    goto LABEL_5;
  }
LABEL_3:
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t Transport.BookIdToSeriesIdEntry.seriesIsOrdered.getter()
{
  return *(unsigned __int8 *)(v0 + 25);
}

uint64_t Transport.BookIdToSeriesIdEntry.seriesIsOrdered.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 25) = result;
  return result;
}

uint64_t (*Transport.BookIdToSeriesIdEntry.seriesIsOrdered.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.BookIdToSeriesIdEntry.sequenceInSeries.getter()
{
  return *(void *)(v0 + 32);
}

uint64_t Transport.BookIdToSeriesIdEntry.sequenceInSeries.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 32) = result;
  *(unsigned char *)(v2 + 40) = a2 & 1;
  return result;
}

uint64_t Transport.BookIdToSeriesIdEntry.init(bookId:seriesId:seriesIsOrdered:sequenceInSeries:)@<X0>(uint64_t result@<X0>, char a2@<W1>, uint64_t a3@<X2>, char a4@<W3>, char a5@<W4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X8>)
{
  *(void *)a8 = result;
  *(unsigned char *)(a8 + 8) = a2 & 1;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4 & 1;
  *(unsigned char *)(a8 + 25) = a5;
  *(void *)(a8 + 32) = a6;
  *(unsigned char *)(a8 + 40) = a7 & 1;
  return result;
}

uint64_t Transport.BookIdToSeriesIdEntry.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_2A5A8(a1, a2, (Swift::OpaquePointer)&off_253600, a3);
}

uint64_t Transport.BookIdToSeriesIdEntry.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.BookIdToSeriesIdEntry.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

void Transport.BookIdToSeriesIdEntry.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 4;
}

unint64_t Transport.BookIdToSeriesIdEntry.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x64496B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6449736569726573;
      break;
    case 2:
      unint64_t result = 0x7349736569726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.BookIdToSeriesIdEntry.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x64496B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6449736569726573;
      break;
    case 2:
      unint64_t result = 0x7349736569726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F6E0(unsigned __int8 *a1, char *a2)
{
  return sub_1D928C(*a1, *a2);
}

Swift::Int sub_1F6EC()
{
  return sub_7DA60();
}

uint64_t sub_1F6F4()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1F7C4()
{
  return sub_114B40();
}

uint64_t sub_1F7CC@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookIdToSeriesIdEntry.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_1F7D8(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  uint64_t v3 = 0x64496B6F6F62;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x6449736569726573;
      goto LABEL_3;
    case 2:
      *a1 = 0x7349736569726573;
      a1[1] = 0xEF6465726564724FLL;
      break;
    case 3:
      *a1 = 0xD000000000000010;
      a1[1] = 0x8000000000215F60;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1F880()
{
  unint64_t result = 0x64496B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x6449736569726573;
      break;
    case 2:
      unint64_t result = 0x7349736569726573;
      break;
    case 3:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F91C(uint64_t a1)
{
  unint64_t v2 = sub_2F330();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F958(uint64_t a1)
{
  unint64_t v2 = sub_2F330();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.BookIdToSeriesIdEntry.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  int v2 = *(unsigned __int8 *)(v0 + 24);
  int v3 = *(unsigned __int8 *)(v0 + 25);
  Swift::UInt64 v4 = *(void *)(v0 + 32);
  int v5 = *(unsigned __int8 *)(v0 + 40);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1FC800(0);
    if (!v2) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1FC800(0);
    if (v3 != 2) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  Swift::UInt64 v7 = *(void *)v0;
  sub_1FC800(1u);
  sub_1FC820(v7);
  if (v2) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC820(v1);
  if (v3 != 2)
  {
LABEL_4:
    Swift::UInt8 v6 = v3 & 1;
    sub_1FC800(1u);
    goto LABEL_8;
  }
LABEL_7:
  Swift::UInt8 v6 = 0;
LABEL_8:
  sub_1FC800(v6);
  if (v5)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = v4;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    sub_1FC820(v8);
  }
}

uint64_t Transport.BookIdToSeriesIdEntry.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C968);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::UInt64 v7 = (char *)v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(v1 + 16);
  int v17 = *(unsigned __int8 *)(v1 + 24);
  int v15 = *(unsigned __int8 *)(v1 + 25);
  uint64_t v14 = *(void *)(v1 + 32);
  v13[1] = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = a1[3];
  uint64_t v9 = a1;
  uint64_t v11 = v10;
  sub_5D64(v9, v8);
  sub_2F330();
  sub_1FC870();
  char v21 = 0;
  sub_1FC4C0();
  if (!v2)
  {
    char v20 = 1;
    sub_1FC4C0();
    char v19 = 2;
    sub_1FC460();
    char v18 = 3;
    sub_1FC470();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v11);
}

Swift::Int Transport.BookIdToSeriesIdEntry.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Swift::UInt64 v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 25);
  Swift::UInt64 v6 = *(void *)(v0 + 32);
  int v7 = *(unsigned __int8 *)(v0 + 40);
  sub_1FC7E0();
  if (v2 == 1)
  {
    sub_1FC800(0);
    if (!v4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1FC800(0);
    if (v5 != 2) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1FC800(1u);
  sub_1FC820(v1);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC820(v3);
  if (v5 != 2)
  {
LABEL_4:
    Swift::UInt8 v8 = v5 & 1;
    sub_1FC800(1u);
    goto LABEL_8;
  }
LABEL_7:
  Swift::UInt8 v8 = 0;
LABEL_8:
  sub_1FC800(v8);
  if (v7)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v6;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToSeriesIdEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C978);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt8 v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F330();
  sub_1FC850();
  if (!v2)
  {
    char v25 = 0;
    uint64_t v9 = sub_1FC380();
    char v11 = v10;
    char v24 = 1;
    uint64_t v12 = sub_1FC380();
    int v21 = v13;
    uint64_t v20 = v12;
    char v23 = 2;
    HIDWORD(v19) = sub_1FC320();
    char v22 = 3;
    uint64_t v15 = sub_1FC330();
    uint64_t v16 = v8;
    char v18 = v17;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v16, v5);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(void *)(a2 + 16) = v20;
    *(unsigned char *)(a2 + 24) = v21 & 1;
    *(unsigned char *)(a2 + 25) = BYTE4(v19);
    *(void *)(a2 + 32) = v15;
    *(unsigned char *)(a2 + 40) = v18 & 1;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1FFCC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookIdToSeriesIdEntry.init(from:)(a1, a2);
}

uint64_t sub_1FFE4(void *a1)
{
  return Transport.BookIdToSeriesIdEntry.encode(to:)(a1);
}

Swift::Int sub_20004()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  Swift::UInt64 v3 = *(void *)(v0 + 16);
  int v4 = *(unsigned __int8 *)(v0 + 24);
  int v5 = *(unsigned __int8 *)(v0 + 25);
  Swift::UInt64 v6 = *(void *)(v0 + 32);
  int v7 = *(unsigned __int8 *)(v0 + 40);
  sub_1FC7E0();
  if (v2 == 1)
  {
    sub_1FC800(0);
    if (!v4) {
      goto LABEL_3;
    }
LABEL_6:
    sub_1FC800(0);
    if (v5 != 2) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  sub_1FC800(1u);
  sub_1FC820(v1);
  if (v4) {
    goto LABEL_6;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC820(v3);
  if (v5 != 2)
  {
LABEL_4:
    Swift::UInt8 v8 = v5 & 1;
    sub_1FC800(1u);
    goto LABEL_8;
  }
LABEL_7:
  Swift::UInt8 v8 = 0;
LABEL_8:
  sub_1FC800(v8);
  if (v7)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v6;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToBisacCodesEntry.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_253680, a3);
}

uint64_t Transport.BookIdToBisacCodesEntry.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_2536D0, a3);
}

uint64_t Transport.BookIdToBisacCodesEntry.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x646F436361736962;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_20174(char *a1, char *a2)
{
  return sub_1D82C0(*a1, *a2);
}

Swift::Int sub_20180()
{
  return sub_1FC830();
}

uint64_t sub_20204()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_20274()
{
  return sub_1FC830();
}

uint64_t sub_202F4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookIdToBisacCodesEntry.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_20300(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x646F436361736962;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xEA00000000007365;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20344(uint64_t a1)
{
  unint64_t v2 = sub_2F384();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20380(uint64_t a1)
{
  unint64_t v2 = sub_2F384();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL static Transport.BookIdToBisacCodesEntry.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  return sub_2DDE4(a1, a2, (uint64_t (*)(void))sub_178D0);
}

void Transport.BookIdToBisacCodesEntry.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1FC800(0);
    if (v1) {
      goto LABEL_3;
    }
LABEL_10:
    sub_1FC800(0);
    return;
  }
  Swift::UInt64 v4 = *(void *)v0;
  sub_1FC800(1u);
  sub_1FC820(v4);
  if (!v1) {
    goto LABEL_10;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

uint64_t Transport.BookIdToBisacCodesEntry.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C980);
  uint64_t v10 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::UInt64 v6 = (char *)&v8 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(v1 + 16);
  sub_5D64(a1, a1[3]);
  sub_2F384();
  sub_1FC870();
  char v13 = 0;
  sub_1FC4C0();
  if (!v2)
  {
    uint64_t v11 = v9;
    char v12 = 1;
    sub_12124(&qword_26C6D8);
    sub_2F0D8(&qword_26C6E0, &qword_26C6D8);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v6, v4);
}

Swift::Int Transport.BookIdToBisacCodesEntry.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC7E0();
  if (v2 == 1)
  {
    sub_1FC800(0);
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(1u);
  sub_1FC820(v1);
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_1FC7F0(*(void *)(v3 + 16));
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToBisacCodesEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C990);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F384();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    char v17 = 0;
    uint64_t v9 = sub_1FC380();
    char v11 = v10;
    v15[0] = a2;
    sub_12124(&qword_26C6D8);
    char v16 = 1;
    sub_2F0D8(&qword_26C708, &qword_26C6D8);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v13 = v15[1];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v14 = v15[0];
    *(void *)v15[0] = v9;
    *(unsigned char *)(v14 + 8) = v11 & 1;
    *(void *)(v14 + 16) = v13;
    sub_1264C((uint64_t)a1);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_209D8@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookIdToBisacCodesEntry.init(from:)(a1, a2);
}

uint64_t sub_209F0(void *a1)
{
  return Transport.BookIdToBisacCodesEntry.encode(to:)(a1);
}

void sub_20A0C()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (*(unsigned char *)(v0 + 8) == 1)
  {
    sub_1FC800(0);
    if (v1) {
      goto LABEL_3;
    }
LABEL_10:
    sub_1FC800(0);
    return;
  }
  Swift::UInt64 v4 = *(void *)v0;
  sub_1FC800(1u);
  sub_1FC820(v4);
  if (!v1) {
    goto LABEL_10;
  }
LABEL_3:
  sub_1FC800(1u);
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v3 += 16;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

Swift::Int sub_20B04()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  sub_1FC7E0();
  if (v2 == 1)
  {
    sub_1FC800(0);
    if (v3) {
      goto LABEL_3;
    }
LABEL_8:
    sub_1FC800(0);
    return sub_1FC830();
  }
  sub_1FC800(1u);
  sub_1FC820(v1);
  if (!v3) {
    goto LABEL_8;
  }
LABEL_3:
  sub_1FC800(1u);
  Swift::UInt v4 = *(void *)(v3 + 16);
  sub_1FC7F0(v4);
  if (v4)
  {
    swift_bridgeObjectRetain();
    uint64_t v5 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v5 += 16;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToMediaTypeEntry.mediaType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_2E638(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t Transport.BookIdToMediaTypeEntry.mediaType.setter(uint64_t a1, uint64_t a2)
{
  return sub_22900(a1, a2, sub_379B0);
}

uint64_t Transport.BookIdToMediaTypeEntry.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20C50(a1, a2, (Swift::OpaquePointer)&off_253720, a3);
}

uint64_t sub_20C50@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  Swift::Int v7 = sub_1FC2D0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7 == 1) {
    char v9 = 1;
  }
  else {
    char v9 = 2;
  }
  if (!v7) {
    char v9 = 0;
  }
  *a4 = v9;
  return result;
}

uint64_t Transport.BookIdToMediaTypeEntry.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_20CBC(a1, a2, (Swift::OpaquePointer)&off_253770, a3);
}

uint64_t sub_20CBC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  Swift::Int v7 = sub_1FC2D0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  if (v7)
  {
    if (v7 == 1) {
      char v9 = 1;
    }
    else {
      char v9 = 2;
    }
  }
  else
  {
    char v9 = 0;
  }
  *a4 = v9;
  return result;
}

uint64_t Transport.BookIdToMediaTypeEntry.CodingKeys.rawValue.getter()
{
  if (*v0) {
    return 0x707954616964656DLL;
  }
  else {
    return 0x64496B6F6F62;
  }
}

uint64_t sub_20D64(char *a1, char *a2)
{
  return sub_1D85AC(*a1, *a2);
}

Swift::Int sub_20D70()
{
  return sub_1FC830();
}

uint64_t sub_20DF4()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_20E64()
{
  return sub_1FC830();
}

uint64_t sub_20EE4@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookIdToMediaTypeEntry.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_20EF0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x64496B6F6F62;
  if (*v1) {
    uint64_t v2 = 0x707954616964656DLL;
  }
  unint64_t v3 = 0xE600000000000000;
  if (*v1) {
    unint64_t v3 = 0xE900000000000065;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_20F34(uint64_t a1)
{
  unint64_t v2 = sub_2F3D8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_20F70(uint64_t a1)
{
  unint64_t v2 = sub_2F3D8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.BookIdToMediaTypeEntry.hash(into:)()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 8) != 1)
  {
    Swift::UInt64 v3 = *(void *)v0;
    sub_1FC800(1u);
    sub_1FC820(v3);
    if (v2 != 2) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (v2 == 2) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_2F5CC(v1, v2);
  sub_2F5CC(v1, v2);
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  sub_2E648(v1, v2);

  sub_2E648(v1, v2);
}

uint64_t Transport.BookIdToMediaTypeEntry.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C998);
  uint64_t v12 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v10 = *(void *)(v1 + 24);
  uint64_t v11 = v7;
  sub_5D64(a1, a1[3]);
  sub_2F3D8();
  sub_1FC870();
  LOBYTE(v13) = 0;
  sub_1FC4C0();
  if (!v2)
  {
    uint64_t v13 = v11;
    uint64_t v14 = v10;
    char v15 = 1;
    sub_2F42C();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v6, v4);
}

Swift::Int Transport.BookIdToMediaTypeEntry.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  sub_1FC7E0();
  if (v2 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
  }
  if (v4 == 2)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_2F5CC(v3, v4);
    sub_2F5CC(v3, v4);
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    sub_2E648(v3, v4);
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToMediaTypeEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C9B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F3D8();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
    uint64_t v12 = 0;
    unint64_t v13 = 2;
  }
  else
  {
    LOBYTE(v17) = 0;
    uint64_t v9 = sub_1FC380();
    char v11 = v10;
    char v19 = 1;
    sub_2F480();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v17;
    unint64_t v16 = v18;
    sub_2E638(v17, v18);
    sub_2E648(0, 2uLL);
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v11 & 1;
    *(void *)(a2 + 16) = v15;
    *(void *)(a2 + 24) = v16;
    sub_1264C((uint64_t)a1);
    uint64_t v12 = v15;
    unint64_t v13 = v16;
  }
  return sub_2E648(v12, v13);
}

uint64_t sub_2159C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookIdToMediaTypeEntry.init(from:)(a1, a2);
}

uint64_t sub_215B4(void *a1)
{
  return Transport.BookIdToMediaTypeEntry.encode(to:)(a1);
}

void sub_215D0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  unint64_t v2 = *(void *)(v0 + 24);
  if (*(unsigned char *)(v0 + 8) != 1)
  {
    Swift::UInt64 v3 = *(void *)v0;
    sub_1FC800(1u);
    sub_1FC820(v3);
    if (v2 != 2) {
      goto LABEL_3;
    }
LABEL_7:
    sub_1FC800(0);
    return;
  }
  sub_1FC800(0);
  if (v2 == 2) {
    goto LABEL_7;
  }
LABEL_3:
  sub_1FC800(1u);
  sub_2F5CC(v1, v2);
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();

  sub_2E648(v1, v2);
}

Swift::Int sub_216EC()
{
  Swift::UInt64 v1 = *(void *)v0;
  int v2 = *(unsigned __int8 *)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  unint64_t v4 = *(void *)(v0 + 24);
  sub_1FC7E0();
  if (v2 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_1FC820(v1);
  }
  if (v4 == 2)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    sub_2F5CC(v3, v4);
    sub_2F5CC(v3, v4);
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    sub_2E648(v3, v4);
  }
  return sub_1FC830();
}

uint64_t Transport.Methodology.rawValue.getter(uint64_t a1, unint64_t a2)
{
  unint64_t v2 = 0xD000000000000012;
  if (a2 != 1) {
    unint64_t v2 = a1;
  }
  if (a2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x4148435255504F43;
  }
  sub_2F5CC(a1, a2);
  return v3;
}

_UNKNOWN **static Transport.Methodology.allCases.getter()
{
  return &off_2537C0;
}

uint64_t sub_21884@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s20BooksPersonalization9TransportO11MethodologyOyAESgSScfC_0(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_218B4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v4 = 0xEA00000000004553;
  uint64_t v5 = 0x4148435255504F43;
  unint64_t v6 = 0x8000000000216D80;
  unint64_t v7 = 0xD000000000000012;
  if (v3 != 1)
  {
    unint64_t v7 = *v1;
    unint64_t v6 = v1[1];
  }
  if (v3)
  {
    uint64_t v5 = v7;
    unint64_t v4 = v6;
  }
  *a1 = v5;
  a1[1] = v4;
  return sub_2F5CC(v2, v3);
}

uint64_t sub_21908()
{
  return sub_1FBA60();
}

uint64_t sub_21968()
{
  return sub_1FBA40();
}

uint64_t sub_219B8(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v5 = *a2;
  unint64_t v4 = a2[1];
  unint64_t v6 = 0x8000000000216D80;
  unint64_t v7 = 0xD000000000000012;
  if (v3 == 1)
  {
    unint64_t v8 = 0x8000000000216D80;
  }
  else
  {
    unint64_t v7 = *a1;
    unint64_t v8 = a1[1];
  }
  if (v3) {
    uint64_t v9 = v7;
  }
  else {
    uint64_t v9 = 0x4148435255504F43;
  }
  if (v3) {
    unint64_t v10 = v8;
  }
  else {
    unint64_t v10 = 0xEA00000000004553;
  }
  unint64_t v11 = 0xD000000000000012;
  if (v4 != 1)
  {
    unint64_t v11 = *a2;
    unint64_t v6 = a2[1];
  }
  if (v4) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0x4148435255504F43;
  }
  if (v4) {
    unint64_t v13 = v6;
  }
  else {
    unint64_t v13 = 0xEA00000000004553;
  }
  if (v9 == v12 && v10 == v13) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1FC5F0();
  }
  sub_2F5CC(v2, v3);
  sub_2F5CC(v5, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

Swift::Int sub_21AB4()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1FC7E0();
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_21B64()
{
  sub_2F5CC(*(void *)v0, *(void *)(v0 + 8));
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_21C00()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1FC7E0();
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_21CAC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _s20BooksPersonalization9TransportO11MethodologyOyAESgSScfC_0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_21CD4(void *a1@<X8>)
{
  *a1 = &off_253800;
}

uint64_t sub_21CE4()
{
  unint64_t v1 = v0[1];
  unint64_t v2 = 0xD000000000000012;
  if (v1 != 1) {
    unint64_t v2 = *v0;
  }
  if (v1) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x4148435255504F43;
  }
  sub_2F5CC(*v0, v1);
  return v3;
}

uint64_t sub_21D58(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = 0x4F4F424F49445541;
  if (a2 != 1) {
    uint64_t v3 = a1;
  }
  if (a2) {
    uint64_t v4 = v3;
  }
  else {
    uint64_t v4 = 0x4B4F4F4245;
  }
  a3();
  return v4;
}

_UNKNOWN **static Transport.MediaType.allCases.getter()
{
  return &off_253840;
}

uint64_t sub_21DD0@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2[1];
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x4B4F4F4245;
  unint64_t v6 = 0xE90000000000004BLL;
  uint64_t v7 = 0x4F4F424F49445541;
  if (v3 != 1)
  {
    uint64_t v7 = *v2;
    unint64_t v6 = v2[1];
  }
  if (v3)
  {
    uint64_t v5 = v7;
    unint64_t v4 = v6;
  }
  *a2 = v5;
  a2[1] = v4;
  return a1();
}

uint64_t sub_21E20()
{
  return sub_1FBA60();
}

uint64_t sub_21E80()
{
  return sub_1FBA40();
}

uint64_t sub_21ED0(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  uint64_t v10 = 0x4F4F424F49445541;
  unint64_t v11 = 0xE90000000000004BLL;
  if (v7 != 1)
  {
    uint64_t v10 = *a1;
    unint64_t v11 = a1[1];
  }
  if (v7) {
    uint64_t v12 = v10;
  }
  else {
    uint64_t v12 = 0x4B4F4F4245;
  }
  if (v7) {
    unint64_t v13 = v11;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  uint64_t v14 = 0x4F4F424F49445541;
  unint64_t v15 = 0xE90000000000004BLL;
  if (v9 != 1)
  {
    uint64_t v14 = *a2;
    unint64_t v15 = a2[1];
  }
  if (v9) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = 0x4B4F4F4245;
  }
  if (v9) {
    unint64_t v17 = v15;
  }
  else {
    unint64_t v17 = 0xE500000000000000;
  }
  if (v12 == v16 && v13 == v17) {
    char v18 = 1;
  }
  else {
    char v18 = sub_1FC5F0();
  }
  a5(v6, v7);
  a5(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v18 & 1;
}

Swift::Int sub_21FE0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  sub_1FC7E0();
  a3(v6, v5);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_22098(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_22130(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  uint64_t v6 = v4[1];
  sub_1FC7E0();
  a4(v7, v6);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

void sub_221E4(void *a1@<X8>)
{
  *a1 = &off_253880;
}

uint64_t sub_221F4(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = v3[1];
  uint64_t v5 = 0x4F4F424F49445541;
  if (v4 != 1) {
    uint64_t v5 = *v3;
  }
  if (v4) {
    uint64_t v6 = v5;
  }
  else {
    uint64_t v6 = 0x4B4F4F4245;
  }
  a3();
  return v6;
}

uint64_t Transport.StoreAssetRequestDetails.SaleTypePayload.rawValue.getter(uint64_t a1, uint64_t a2)
{
  return sub_2227C(a1, a2, (void (*)(void))sub_2F804);
}

uint64_t sub_2227C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v3 = 1145651536;
  uint64_t v4 = 5852737;
  if (a2 != 2) {
    uint64_t v4 = a1;
  }
  if (a2 != 1) {
    uint64_t v3 = v4;
  }
  if (a2) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = 1162170950;
  }
  a3();
  return v5;
}

_UNKNOWN **static Transport.StoreAssetRequestDetails.SaleTypePayload.allCases.getter()
{
  return &off_2538C0;
}

uint64_t sub_222FC@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_2F6D8(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_2232C@<X0>(uint64_t *a1@<X8>)
{
  return sub_22344((uint64_t (*)(void))sub_2F804, a1);
}

uint64_t sub_22344@<X0>(uint64_t (*a1)(void)@<X2>, uint64_t *a2@<X8>)
{
  uint64_t v3 = v2[1];
  unint64_t v4 = 0xE400000000000000;
  uint64_t v5 = 1162170950;
  unint64_t v6 = 0xE400000000000000;
  uint64_t v7 = 1145651536;
  unint64_t v8 = 0xE300000000000000;
  uint64_t v9 = 5852737;
  if (v3 != 2)
  {
    uint64_t v9 = *v2;
    unint64_t v8 = v2[1];
  }
  if (v3 != 1)
  {
    uint64_t v7 = v9;
    unint64_t v6 = v8;
  }
  if (v3)
  {
    uint64_t v5 = v7;
    unint64_t v4 = v6;
  }
  *a2 = v5;
  a2[1] = v4;
  return a1();
}

uint64_t sub_2239C()
{
  return sub_1FBA60();
}

uint64_t sub_223FC()
{
  return sub_1FBA40();
}

uint64_t sub_2244C(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_22464(a1, a2, a3, a4, (void (*)(uint64_t, uint64_t))sub_2F804);
}

uint64_t sub_22464(uint64_t *a1, uint64_t *a2, uint64_t a3, uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v6 = *a1;
  uint64_t v7 = a1[1];
  uint64_t v8 = *a2;
  uint64_t v9 = a2[1];
  unint64_t v10 = 0xE400000000000000;
  uint64_t v11 = 1145651536;
  unint64_t v12 = 0xE300000000000000;
  uint64_t v13 = 5852737;
  if (v7 != 2)
  {
    uint64_t v13 = *a1;
    unint64_t v12 = a1[1];
  }
  if (v7 != 1)
  {
    uint64_t v11 = v13;
    unint64_t v10 = v12;
  }
  if (v7) {
    uint64_t v14 = v11;
  }
  else {
    uint64_t v14 = 1162170950;
  }
  if (v7) {
    unint64_t v15 = v10;
  }
  else {
    unint64_t v15 = 0xE400000000000000;
  }
  unint64_t v16 = 0xE400000000000000;
  uint64_t v17 = 1145651536;
  unint64_t v18 = 0xE300000000000000;
  uint64_t v19 = 5852737;
  if (v9 != 2)
  {
    uint64_t v19 = *a2;
    unint64_t v18 = a2[1];
  }
  if (v9 != 1)
  {
    uint64_t v17 = v19;
    unint64_t v16 = v18;
  }
  if (v9) {
    uint64_t v20 = v17;
  }
  else {
    uint64_t v20 = 1162170950;
  }
  if (v9) {
    unint64_t v21 = v16;
  }
  else {
    unint64_t v21 = 0xE400000000000000;
  }
  if (v14 == v20 && v15 == v21) {
    char v22 = 1;
  }
  else {
    char v22 = sub_1FC5F0();
  }
  a5(v6, v7);
  a5(v8, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v22 & 1;
}

Swift::Int sub_22588(uint64_t a1, uint64_t a2)
{
  return sub_225A0(a1, a2, (void (*)(uint64_t, uint64_t))sub_2F804);
}

Swift::Int sub_225A0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t, uint64_t))
{
  uint64_t v6 = *v3;
  uint64_t v5 = v3[1];
  sub_1FC7E0();
  a3(v6, v5);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_22660(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22678(a1, a2, a3, (void (*)(void))sub_2F804);
}

uint64_t sub_22678(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  a4();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_22718(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_22730(a1, a2, a3, (void (*)(uint64_t, uint64_t))sub_2F804);
}

Swift::Int sub_22730(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v7 = *v4;
  uint64_t v6 = v4[1];
  sub_1FC7E0();
  a4(v7, v6);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_227EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = sub_2F6D8(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_22814(void *a1@<X8>)
{
  *a1 = &off_253910;
}

uint64_t sub_22824(uint64_t a1, uint64_t a2)
{
  return sub_2283C(a1, a2, (void (*)(void))sub_2F804);
}

uint64_t sub_2283C(uint64_t a1, uint64_t a2, void (*a3)(void))
{
  uint64_t v4 = v3[1];
  uint64_t v5 = 1145651536;
  uint64_t v6 = 5852737;
  if (v4 != 2) {
    uint64_t v6 = *v3;
  }
  if (v4 != 1) {
    uint64_t v5 = v6;
  }
  if (v4) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 1162170950;
  }
  a3();
  return v7;
}

uint64_t Transport.StoreAssetRequestDetails.saleType.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_2F818(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t Transport.StoreAssetRequestDetails.saleType.setter(uint64_t a1, uint64_t a2)
{
  return sub_22900(a1, a2, sub_2F828);
}

uint64_t sub_22900(uint64_t a1, uint64_t a2, uint64_t (*a3)(void, void))
{
  uint64_t result = a3(*(void *)(v3 + 16), *(void *)(v3 + 24));
  *(void *)(v3 + 16) = a1;
  *(void *)(v3 + 24) = a2;
  return result;
}

uint64_t Transport.StoreAssetRequestDetails.init(mediaType:profileGenreDenylist:saleType:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  *a5 = result;
  a5[1] = a2;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t Transport.StoreAssetRequestDetails.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_256D4(a1, a2, (Swift::OpaquePointer)&off_253960, a3);
}

uint64_t Transport.StoreAssetRequestDetails.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.StoreAssetRequestDetails.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t Transport.StoreAssetRequestDetails.CodingKeys.rawValue.getter()
{
  unint64_t v1 = 0xD000000000000014;
  if (*v0 != 1) {
    unint64_t v1 = 0x65707954656C6173;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x707954616964656DLL;
  }
}

uint64_t sub_229F0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D7DDC(*a1, *a2);
}

Swift::Int sub_229FC()
{
  return sub_1FC830();
}

uint64_t sub_22AA8()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_22B40()
{
  return sub_1FC830();
}

uint64_t sub_22BE8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.StoreAssetRequestDetails.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_22BF4(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE900000000000065;
  unint64_t v4 = 0x8000000000215D60;
  unint64_t v5 = 0xD000000000000014;
  if (v2 != 1)
  {
    unint64_t v5 = 0x65707954656C6173;
    unint64_t v4 = 0xE800000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x707954616964656DLL;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_22C5C(uint64_t a1)
{
  unint64_t v2 = sub_2F84C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_22C98(uint64_t a1)
{
  unint64_t v2 = sub_2F84C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.StoreAssetRequestDetails.hash(into:)(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = *v2;
  uint64_t v5 = v2[1];
  uint64_t v6 = v2[2];
  unint64_t v7 = v2[3];
  if (*v2)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_2BCF4(a1, v4);
    swift_bridgeObjectRelease();
    if (v5) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1FC800(0);
    if (v5)
    {
LABEL_3:
      sub_1FC800(1u);
      sub_1FC7F0(*(void *)(v5 + 16));
      uint64_t v8 = *(void *)(v5 + 16);
      if (v8)
      {
        uint64_t v9 = (Swift::UInt64 *)(v5 + 32);
        do
        {
          Swift::UInt64 v10 = *v9++;
          sub_1FC820(v10);
          --v8;
        }
        while (v8);
      }
      if (v7 == 3) {
        goto LABEL_7;
      }
      goto LABEL_10;
    }
  }
  sub_1FC800(0);
  if (v7 == 3)
  {
LABEL_7:
    sub_1FC800(0);
    return;
  }
LABEL_10:
  sub_1FC800(1u);
  sub_2F804(v6, v7);
  sub_2F804(v6, v7);
  sub_2F804(v6, v7);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  sub_2F828(v6, v7);

  sub_2F828(v6, v7);
}

uint64_t Transport.StoreAssetRequestDetails.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26C9C0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v15 = v1[2];
  uint64_t v16 = v8;
  uint64_t v14 = v1[3];
  sub_5D64(a1, a1[3]);
  sub_2F84C();
  sub_1FC870();
  uint64_t v17 = v9;
  char v19 = 0;
  sub_12124(&qword_26C9D0);
  sub_302AC(&qword_26C9D8, &qword_26C9D0, (void (*)(void))sub_2F42C);
  sub_1FC4A0();
  if (!v2)
  {
    uint64_t v11 = v14;
    uint64_t v10 = v15;
    uint64_t v17 = v16;
    char v19 = 1;
    sub_12124(&qword_26C5F8);
    sub_2F0D8(&qword_26C600, &qword_26C5F8);
    sub_1FC4A0();
    uint64_t v17 = v10;
    uint64_t v18 = v11;
    char v19 = 2;
    sub_2F8A0();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Transport.StoreAssetRequestDetails.hashValue.getter()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  sub_1FC7E0();
  Transport.StoreAssetRequestDetails.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.StoreAssetRequestDetails.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26C9E8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F84C();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = 0;
    unint64_t v15 = 3;
  }
  else
  {
    sub_12124(&qword_26C9D0);
    char v18 = 0;
    sub_302AC(&qword_26C9F0, &qword_26C9D0, (void (*)(void))sub_2F480);
    sub_1FC360();
    uint64_t v10 = v16;
    sub_12124(&qword_26C5F8);
    char v18 = 1;
    sub_2F0D8(&qword_26C610, &qword_26C5F8);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v11 = v16;
    char v18 = 2;
    sub_2F8F4();
    swift_bridgeObjectRetain();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v12 = v16;
    unint64_t v13 = v17;
    sub_2F818(v16, v17);
    sub_2F828(0, 3uLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2F818(v12, v13);
    sub_2F828(v12, v13);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *a2 = v10;
    a2[1] = v11;
    a2[2] = v12;
    a2[3] = v13;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v14 = v12;
    unint64_t v15 = v13;
  }
  return sub_2F828(v14, v15);
}

uint64_t sub_23480@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Transport.StoreAssetRequestDetails.init(from:)(a1, a2);
}

uint64_t sub_23498(void *a1)
{
  return Transport.StoreAssetRequestDetails.encode(to:)(a1);
}

Swift::Int sub_234B4()
{
  long long v1 = v0[1];
  long long v4 = *v0;
  long long v5 = v1;
  sub_1FC7E0();
  Transport.StoreAssetRequestDetails.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.BooksRecommendationRequest.assetRequestDetails.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  uint64_t v2 = v1[1];
  uint64_t v5 = v1[2];
  unint64_t v4 = v1[3];
  *a1 = v3;
  a1[1] = v2;
  a1[2] = v5;
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_2F818(v5, v4);
}

__n128 Transport.BooksRecommendationRequest.assetRequestDetails.setter(__n128 *a1)
{
  __n128 v7 = *a1;
  unint64_t v2 = a1[1].n128_u64[0];
  unint64_t v3 = a1[1].n128_u64[1];
  uint64_t v4 = v1[1].n128_i64[0];
  unint64_t v5 = v1[1].n128_u64[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2F828(v4, v5);
  __n128 result = v7;
  __n128 *v1 = v7;
  v1[1].n128_u64[0] = v2;
  v1[1].n128_u64[1] = v3;
  return result;
}

uint64_t Transport.BooksRecommendationRequest.applyBookDenylistToWorks.getter()
{
  return *(unsigned __int8 *)(v0 + 40);
}

uint64_t Transport.BooksRecommendationRequest.applyBookDenylistToWorks.setter(uint64_t result)
{
  *(unsigned char *)(v1 + 40) = result;
  return result;
}

__n128 Transport.BooksRecommendationRequest.init(assetRequestDetails:bookDenylist:applyBookDenylistToWorks:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v5 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a4 = *(_OWORD *)a1;
  *(_OWORD *)(a4 + 16) = v5;
  *(void *)(a4 + 32) = a2;
  *(unsigned char *)(a4 + 40) = a3;
  return result;
}

uint64_t Transport.BooksRecommendationRequest.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_256D4(a1, a2, (Swift::OpaquePointer)&off_2539C8, a3);
}

uint64_t Transport.BooksRecommendationRequest.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.BooksRecommendationRequest.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

void Transport.BooksRecommendationRequest.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 3;
}

unint64_t Transport.BooksRecommendationRequest.CodingKeys.rawValue.getter()
{
  unint64_t v1 = 0x796E65446B6F6F62;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000018;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0xD000000000000013;
  }
}

uint64_t sub_2369C(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D90C4(*a1, *a2);
}

Swift::Int sub_236A8()
{
  return sub_7DB48();
}

uint64_t sub_236B0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2374C()
{
  return sub_114A90();
}

uint64_t sub_23754@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BooksRecommendationRequest.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_23760(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0xEC0000007473696CLL;
  unint64_t v4 = 0x796E65446B6F6F62;
  if (*v1 != 1)
  {
    unint64_t v4 = 0xD000000000000018;
    unint64_t v3 = 0x8000000000215FB0;
  }
  if (*v1)
  {
    unint64_t v2 = v4;
    unint64_t v5 = v3;
  }
  else
  {
    unint64_t v5 = 0x8000000000215F80;
  }
  *a1 = v2;
  a1[1] = v5;
}

uint64_t sub_237CC(uint64_t a1)
{
  unint64_t v2 = sub_2F948();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_23808(uint64_t a1)
{
  unint64_t v2 = sub_2F948();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.BooksRecommendationRequest.hash(into:)(uint64_t a1)
{
  uint64_t v2 = *(void *)(v1 + 32);
  int v3 = *(unsigned __int8 *)(v1 + 40);
  Transport.StoreAssetRequestDetails.hash(into:)(a1);
  if (v2)
  {
    sub_1FC800(1u);
    sub_1FC7F0(*(void *)(v2 + 16));
    uint64_t v4 = *(void *)(v2 + 16);
    if (v4)
    {
      unint64_t v5 = (Swift::UInt64 *)(v2 + 32);
      do
      {
        Swift::UInt64 v6 = *v5++;
        sub_1FC820(v6);
        --v4;
      }
      while (v4);
    }
    if (v3 == 2) {
      goto LABEL_6;
    }
LABEL_8:
    Swift::UInt8 v7 = v3 & 1;
    sub_1FC800(1u);
    goto LABEL_9;
  }
  sub_1FC800(0);
  if (v3 != 2) {
    goto LABEL_8;
  }
LABEL_6:
  Swift::UInt8 v7 = 0;
LABEL_9:
  sub_1FC800(v7);
}

uint64_t Transport.BooksRecommendationRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CA00);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::UInt64 v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v13 = *v1;
  uint64_t v7 = *((void *)v1 + 2);
  uint64_t v8 = *((void *)v1 + 3);
  uint64_t v12 = *((void *)v1 + 4);
  int v18 = *((unsigned __int8 *)v1 + 40);
  sub_5D64(a1, a1[3]);
  sub_2F948();
  sub_1FC870();
  long long v15 = v13;
  uint64_t v16 = v7;
  uint64_t v17 = v8;
  char v19 = 0;
  sub_2F99C();
  uint64_t v9 = v14;
  sub_1FC530();
  if (!v9)
  {
    *(void *)&long long v15 = v12;
    char v19 = 1;
    sub_12124(&qword_26C5F8);
    sub_2F0D8(&qword_26C600, &qword_26C5F8);
    sub_1FC4A0();
    LOBYTE(v15) = 2;
    sub_1FC460();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.BooksRecommendationRequest.hashValue.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  int v2 = *(unsigned __int8 *)(v0 + 40);
  sub_1FC7E0();
  Transport.StoreAssetRequestDetails.hash(into:)((uint64_t)v8);
  if (v1)
  {
    sub_1FC800(1u);
    sub_1FC7F0(*(void *)(v1 + 16));
    uint64_t v3 = *(void *)(v1 + 16);
    if (v3)
    {
      uint64_t v4 = (Swift::UInt64 *)(v1 + 32);
      do
      {
        Swift::UInt64 v5 = *v4++;
        sub_1FC820(v5);
        --v3;
      }
      while (v3);
    }
    if (v2 == 2) {
      goto LABEL_6;
    }
LABEL_8:
    Swift::UInt8 v6 = v2 & 1;
    sub_1FC800(1u);
    goto LABEL_9;
  }
  sub_1FC800(0);
  if (v2 != 2) {
    goto LABEL_8;
  }
LABEL_6:
  Swift::UInt8 v6 = 0;
LABEL_9:
  sub_1FC800(v6);
  return sub_1FC830();
}

uint64_t Transport.BooksRecommendationRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CA18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2F948();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    char v29 = 0;
    sub_2F9F0();
    sub_1FC3F0();
    uint64_t v20 = a2;
    uint64_t v10 = v25;
    uint64_t v11 = v26;
    uint64_t v12 = v27;
    unint64_t v13 = v28;
    uint64_t v21 = sub_12124(&qword_26C5F8);
    uint64_t v22 = v11;
    char v29 = 1;
    swift_bridgeObjectRetain();
    uint64_t v23 = v10;
    swift_bridgeObjectRetain();
    unint64_t v24 = v13;
    sub_2F818(v12, v13);
    sub_2F0D8(&qword_26C610, &qword_26C5F8);
    sub_1FC360();
    uint64_t v14 = v25;
    LOBYTE(v25) = 2;
    swift_bridgeObjectRetain();
    LOBYTE(v10) = sub_1FC320();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v15 = v23;
    swift_bridgeObjectRetain();
    uint64_t v16 = v22;
    swift_bridgeObjectRetain();
    unint64_t v17 = v24;
    sub_2F818(v12, v24);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2F828(v12, v17);
    int v18 = v20;
    *uint64_t v20 = v15;
    v18[1] = v16;
    v18[2] = v12;
    v18[3] = v17;
    v18[4] = v14;
    *((unsigned char *)v18 + 40) = v10;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2F828(v12, v17);
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_23FA0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.BooksRecommendationRequest.init(from:)(a1, a2);
}

uint64_t sub_23FB8(void *a1)
{
  return Transport.BooksRecommendationRequest.encode(to:)(a1);
}

Swift::Int sub_23FD8()
{
  uint64_t v1 = *(void *)(v0 + 32);
  int v2 = *(unsigned __int8 *)(v0 + 40);
  sub_1FC7E0();
  Transport.StoreAssetRequestDetails.hash(into:)((uint64_t)v8);
  if (v1)
  {
    sub_1FC800(1u);
    Swift::UInt v3 = *(void *)(v1 + 16);
    sub_1FC7F0(v3);
    if (v3)
    {
      uint64_t v4 = (Swift::UInt64 *)(v1 + 32);
      do
      {
        Swift::UInt64 v5 = *v4++;
        sub_1FC820(v5);
        --v3;
      }
      while (v3);
    }
    if (v2 == 2) {
      goto LABEL_6;
    }
LABEL_8:
    Swift::UInt8 v6 = v2 & 1;
    sub_1FC800(1u);
    goto LABEL_9;
  }
  sub_1FC800(0);
  if (v2 != 2) {
    goto LABEL_8;
  }
LABEL_6:
  Swift::UInt8 v6 = 0;
LABEL_9:
  sub_1FC800(v6);
  return sub_1FC830();
}

uint64_t Transport.RecommendationBlockRequestV2.userProfile.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 8);
  *(unsigned char *)a1 = *(unsigned char *)v1;
  *(void *)(a1 + 8) = v2;
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationBlockRequestV2.userProfile.setter(char *a1)
{
  char v2 = *a1;
  uint64_t v3 = *((void *)a1 + 1);
  uint64_t result = swift_bridgeObjectRelease();
  *(unsigned char *)uint64_t v1 = v2;
  *(void *)(v1 + 8) = v3;
  return result;
}

uint64_t Transport.RecommendationBlockRequestV2.booksRequest.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(v1 + 32);
  unint64_t v5 = *(void *)(v1 + 40);
  uint64_t v6 = *(void *)(v1 + 48);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(v1 + 56);
  return sub_2FA44(v2, v3, v4, v5);
}

__n128 Transport.RecommendationBlockRequestV2.booksRequest.setter(long long *a1)
{
  __n128 v5 = (__n128)a1[1];
  long long v6 = *a1;
  uint64_t v2 = *((void *)a1 + 4);
  char v3 = *((unsigned char *)a1 + 40);
  sub_2FAB4(*(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
  __n128 result = v5;
  *(_OWORD *)(v1 + 16) = v6;
  *(__n128 *)(v1 + 32) = v5;
  *(void *)(v1 + 48) = v2;
  *(unsigned char *)(v1 + 56) = v3;
  return result;
}

uint64_t Transport.RecommendationBlockRequestV2.methodologies.getter()
{
  return swift_bridgeObjectRetain();
}

uint64_t Transport.RecommendationBlockRequestV2.methodologies.setter(uint64_t a1)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 64) = a1;
  return result;
}

uint64_t (*Transport.RecommendationBlockRequestV2.methodologies.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t Transport.RecommendationBlockRequestV2.recommendationCount.getter()
{
  return *(unsigned int *)(v0 + 72);
}

uint64_t Transport.RecommendationBlockRequestV2.recommendationCount.setter(uint64_t result)
{
  *(_DWORD *)(v1 + 72) = result;
  return result;
}

uint64_t (*Transport.RecommendationBlockRequestV2.recommendationCount.modify())()
{
  return AuthorRecommendationSource.id.getter;
}

__n128 Transport.RecommendationBlockRequestV2.init(userProfile:booksRequest:methodologies:recommendationCount:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 8);
  uint64_t v6 = *(void *)(a2 + 32);
  char v7 = *(unsigned char *)(a2 + 40);
  *(unsigned char *)a5 = *(unsigned char *)a1;
  *(void *)(a5 + 8) = v5;
  __n128 result = *(__n128 *)a2;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a5 + 16) = *(_OWORD *)a2;
  *(_OWORD *)(a5 + 32) = v9;
  *(void *)(a5 + 48) = v6;
  *(unsigned char *)(a5 + 56) = v7;
  *(void *)(a5 + 64) = a3;
  *(_DWORD *)(a5 + 72) = a4;
  return result;
}

uint64_t Transport.RecommendationBlockRequestV2.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_2A5A8(a1, a2, (Swift::OpaquePointer)&off_253A30, a3);
}

uint64_t Transport.RecommendationBlockRequestV2.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendationBlockRequestV2.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

unint64_t Transport.RecommendationBlockRequestV2.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x666F725072657375;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x716552736B6F6F62;
      break;
    case 2:
      unint64_t result = 0x6C6F646F6874656DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.RecommendationBlockRequestV2.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x666F725072657375;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x716552736B6F6F62;
      break;
    case 2:
      unint64_t result = 0x6C6F646F6874656DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_243F8(unsigned __int8 *a1, char *a2)
{
  return sub_1D7A08(*a1, *a2);
}

Swift::Int sub_24404()
{
  return sub_7DBFC();
}

uint64_t sub_2440C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_244F0()
{
  return sub_1142F8();
}

uint64_t sub_244F8@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendationBlockRequestV2.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_24504(uint64_t a1@<X8>)
{
  unint64_t v2 = 0xEB00000000656C69;
  uint64_t v3 = 0x666F725072657375;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xEC00000074736575;
      uint64_t v3 = 0x716552736B6F6F62;
      goto LABEL_3;
    case 2:
      strcpy((char *)a1, "methodologies");
      *(_WORD *)(a1 + 14) = -4864;
      break;
    case 3:
      *(void *)a1 = 0xD000000000000013;
      *(void *)(a1 + 8) = 0x8000000000215D80;
      break;
    default:
LABEL_3:
      *(void *)a1 = v3;
      *(void *)(a1 + 8) = v2;
      break;
  }
}

unint64_t sub_245C0()
{
  unint64_t result = 0x666F725072657375;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x716552736B6F6F62;
      break;
    case 2:
      unint64_t result = 0x6C6F646F6874656DLL;
      break;
    case 3:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_24670(uint64_t a1)
{
  unint64_t v2 = sub_2FBC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_246AC(uint64_t a1)
{
  unint64_t v2 = sub_2FBC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.RecommendationBlockRequestV2.hash(into:)(uint64_t a1)
{
  Swift::UInt8 v3 = *(unsigned char *)v1;
  uint64_t v4 = *(void *)(v1 + 8);
  sub_2FB20(v1 + 16, (uint64_t)v7);
  uint64_t v5 = *(void *)(v1 + 64);
  Swift::UInt32 v6 = *(_DWORD *)(v1 + 72);
  sub_1FC800(v3);
  sub_2BC58(a1, v4);
  sub_2FB88((uint64_t)v7, (void (*)(void, void, void, void, void, void))sub_2FA44);
  sub_2B428(a1);
  sub_2FB88((uint64_t)v7, (void (*)(void, void, void, void, void, void))sub_2FAB4);
  swift_bridgeObjectRetain();
  sub_2B8A4(a1, v5);
  swift_bridgeObjectRelease();
  sub_1FC810(v6);
}

uint64_t Transport.RecommendationBlockRequestV2.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CA30);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::UInt32 v6 = (char *)v15 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v7 = *v1;
  uint64_t v9 = *((void *)v1 + 1);
  uint64_t v8 = *((void *)v1 + 2);
  uint64_t v20 = *((void *)v1 + 3);
  uint64_t v21 = v8;
  uint64_t v10 = *((void *)v1 + 4);
  uint64_t v18 = *((void *)v1 + 5);
  uint64_t v19 = v10;
  uint64_t v11 = *((void *)v1 + 6);
  int v29 = v1[56];
  uint64_t v16 = *((void *)v1 + 8);
  uint64_t v17 = v11;
  v15[1] = *((_DWORD *)v1 + 18);
  sub_5D64(a1, a1[3]);
  sub_2FBC8();
  sub_1FC870();
  LOBYTE(v23) = v7;
  uint64_t v24 = v9;
  char v30 = 0;
  sub_2FC1C();
  uint64_t v12 = v22;
  sub_1FC530();
  if (!v12)
  {
    uint64_t v23 = v21;
    uint64_t v24 = v20;
    uint64_t v25 = v19;
    uint64_t v26 = v18;
    uint64_t v13 = v16;
    uint64_t v27 = v17;
    char v28 = v29;
    char v30 = 1;
    sub_2FC70();
    sub_1FC4A0();
    uint64_t v23 = v13;
    char v30 = 2;
    sub_12124(&qword_26C8F0);
    sub_302AC(&qword_26C8F8, &qword_26C8F0, (void (*)(void))sub_2F18C);
    sub_1FC530();
    LOBYTE(v23) = 3;
    sub_1FC540();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendationBlockRequestV2.hashValue.getter()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  sub_2FB20(v0 + 16, (uint64_t)v7);
  uint64_t v3 = *(void *)(v0 + 64);
  Swift::UInt32 v4 = *(_DWORD *)(v0 + 72);
  sub_1FC7E0();
  sub_1FC800(v1);
  sub_2BC58((uint64_t)v6, v2);
  sub_2FB88((uint64_t)v7, (void (*)(void, void, void, void, void, void))sub_2FA44);
  sub_2B428((uint64_t)v6);
  sub_2FB88((uint64_t)v7, (void (*)(void, void, void, void, void, void))sub_2FAB4);
  swift_bridgeObjectRetain();
  sub_2B8A4((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  sub_1FC810(v4);
  return sub_1FC830();
}

uint64_t Transport.RecommendationBlockRequestV2.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CA50);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v26 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2FBC8();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
    return sub_2FAB4(1, 0, 0, 0);
  }
  else
  {
    char v41 = 0;
    sub_2FCC4();
    sub_1FC3F0();
    int v9 = v34;
    uint64_t v10 = v35;
    char v41 = 1;
    sub_2FD18();
    swift_bridgeObjectRetain();
    sub_1FC360();
    HIDWORD(v26) = v9;
    uint64_t v30 = v10;
    uint64_t v11 = v35;
    unint64_t v12 = v37;
    uint64_t v31 = v36;
    uint64_t v32 = v38;
    uint64_t v33 = v34;
    int v13 = v39;
    uint64_t v27 = sub_12124(&qword_26C8F0);
    uint64_t v28 = v11;
    char v41 = 2;
    unint64_t v29 = v12;
    int v40 = v13;
    sub_2FA44(v33, v11, v31, v12);
    sub_302AC(&qword_26C910, &qword_26C8F0, (void (*)(void))sub_2F1E0);
    sub_1FC3F0();
    uint64_t v14 = v34;
    LOBYTE(v34) = 3;
    swift_bridgeObjectRetain();
    int v15 = sub_1FC400();
    uint64_t v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    LODWORD(v27) = v15;
    v17(v8, v5);
    swift_bridgeObjectRetain();
    uint64_t v18 = v33;
    uint64_t v19 = v28;
    uint64_t v20 = v31;
    sub_2FA44(v33, v28, v31, v29);
    uint64_t v21 = v18;
    unint64_t v22 = v29;
    sub_2FAB4(v21, v19, v20, v29);
    uint64_t v23 = v30;
    swift_bridgeObjectRelease();
    *(unsigned char *)a2 = BYTE4(v26);
    uint64_t v24 = v32;
    uint64_t v25 = v33;
    *(void *)(a2 + 8) = v23;
    *(void *)(a2 + 16) = v25;
    *(void *)(a2 + 24) = v19;
    *(void *)(a2 + 32) = v20;
    *(void *)(a2 + 40) = v22;
    *(void *)(a2 + 48) = v24;
    *(unsigned char *)(a2 + 56) = v40;
    *(void *)(a2 + 64) = v14;
    *(_DWORD *)(a2 + 72) = v27;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
    sub_2FAB4(v25, v19, v20, v22);
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_2501C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.RecommendationBlockRequestV2.init(from:)(a1, a2);
}

uint64_t sub_25034(void *a1)
{
  return Transport.RecommendationBlockRequestV2.encode(to:)(a1);
}

Swift::Int sub_25050()
{
  Swift::UInt8 v1 = *(unsigned char *)v0;
  uint64_t v2 = *(void *)(v0 + 8);
  sub_2FB20(v0 + 16, (uint64_t)v7);
  uint64_t v3 = *(void *)(v0 + 64);
  Swift::UInt32 v4 = *(_DWORD *)(v0 + 72);
  sub_1FC7E0();
  sub_1FC800(v1);
  sub_2BC58((uint64_t)v6, v2);
  sub_2FB88((uint64_t)v7, (void (*)(void, void, void, void, void, void))sub_2FA44);
  sub_2B428((uint64_t)v6);
  sub_2FB88((uint64_t)v7, (void (*)(void, void, void, void, void, void))sub_2FAB4);
  swift_bridgeObjectRetain();
  sub_2B8A4((uint64_t)v6, v3);
  swift_bridgeObjectRelease();
  sub_1FC810(v4);
  return sub_1FC830();
}

uint64_t Transport.RecommendationBlockResponseV2.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_253AB0, a3);
}

uint64_t Transport.RecommendationBlockResponseV2.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_253AE8, a3);
}

unint64_t Transport.RecommendationBlockResponseV2.CodingKeys.rawValue.getter()
{
  return 0xD000000000000010;
}

Swift::Int sub_25170()
{
  return sub_27DD0();
}

uint64_t sub_2518C()
{
  return sub_1FB8C0();
}

Swift::Int sub_251A8()
{
  return sub_27E58();
}

uint64_t sub_251C4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_27EB0(a1, (Swift::OpaquePointer)&off_253B20, a2);
}

void sub_251D0(void *a1@<X8>)
{
  *a1 = 0xD000000000000010;
  a1[1] = 0x8000000000215FE0;
}

uint64_t sub_251F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27F2C(a1, a2, (Swift::OpaquePointer)&off_253B58, a3);
}

uint64_t sub_251FC(uint64_t a1)
{
  unint64_t v2 = sub_2FD6C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_25238(uint64_t a1)
{
  unint64_t v2 = sub_2FD6C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t static Transport.RecommendationBlockResponseV2.== infix(_:_:)(void *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  if (*a1)
  {
    if (v2)
    {
      swift_bridgeObjectRetain();
      uint64_t v3 = swift_bridgeObjectRetain();
      char v4 = sub_15EC4(v3, v2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v4) {
        return 1;
      }
    }
  }
  else if (!v2)
  {
    return 1;
  }
  return 0;
}

void Transport.RecommendationBlockResponseV2.hash(into:)(uint64_t a1)
{
}

uint64_t Transport.RecommendationBlockResponseV2.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CA68);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_2FD6C();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_26CA78);
  sub_302AC(&qword_26CA80, &qword_26CA78, (void (*)(void))sub_2FDC0);
  sub_1FC4A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendationBlockResponseV2.hashValue.getter()
{
  return sub_28298((void (*)(unsigned char *, uint64_t))sub_2B590);
}

uint64_t Transport.RecommendationBlockResponseV2.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CA90);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2FD6C();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_26CA78);
    sub_302AC(&qword_26CA98, &qword_26CA78, (void (*)(void))sub_2FE14);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_25650@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.RecommendationBlockResponseV2.init(from:)(a1, a2);
}

uint64_t sub_25668(void *a1)
{
  return Transport.RecommendationBlockResponseV2.encode(to:)(a1);
}

Swift::Int sub_25680(uint64_t a1, uint64_t a2)
{
  return sub_2856C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_2B590);
}

void sub_25698(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

Swift::Int sub_256B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_286A8(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_2B590);
}

uint64_t Transport.RecommendationRequestV2.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_256D4(a1, a2, (Swift::OpaquePointer)&off_253B90, a3);
}

uint64_t sub_256D4@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  unint64_t v7 = sub_1FC2D0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  char v9 = 3;
  if (v7 < 3) {
    char v9 = v7;
  }
  *a4 = v9;
  return result;
}

uint64_t Transport.RecommendationRequestV2.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendationRequestV2.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t Transport.RecommendationRequestV2.CodingKeys.rawValue.getter()
{
  unint64_t v1 = 0xD00000000000001BLL;
  if (*v0 != 1) {
    unint64_t v1 = 0x6E656D7461657274;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6F724665726F7473;
  }
}

uint64_t sub_257D4(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D818C(*a1, *a2);
}

Swift::Int sub_257E0()
{
  return sub_1FC830();
}

uint64_t sub_25898()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2593C()
{
  return sub_1FC830();
}

uint64_t sub_259F0@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendationRequestV2.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_259FC(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xEC0000006449746ELL;
  unint64_t v4 = 0x8000000000215DF0;
  unint64_t v5 = 0xD00000000000001BLL;
  if (v2 != 1)
  {
    unint64_t v5 = 0x6E656D7461657274;
    unint64_t v4 = 0xEC00000073644974;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6F724665726F7473;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_25A70(uint64_t a1)
{
  unint64_t v2 = sub_2FE68();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_25AAC(uint64_t a1)
{
  unint64_t v2 = sub_2FE68();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.RecommendationRequestV2.hash(into:)(uint64_t a1)
{
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_2C638(a1, v4);
  swift_bridgeObjectRelease();
  if (v3)
  {
    sub_1FC800(1u);
    sub_1FC7F0(*(void *)(v3 + 16));
    uint64_t v5 = *(void *)(v3 + 16);
    if (v5)
    {
      swift_bridgeObjectRetain();
      uint64_t v6 = v3 + 40;
      do
      {
        swift_bridgeObjectRetain();
        sub_1FB8C0();
        swift_bridgeObjectRelease();
        v6 += 16;
        --v5;
      }
      while (v5);
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    sub_1FC800(0);
  }
}

uint64_t Transport.RecommendationRequestV2.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CAA8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v7;
  sub_5D64(a1, a1[3]);
  sub_2FE68();
  sub_1FC870();
  LOBYTE(v15) = 0;
  uint64_t v8 = v13;
  sub_1FC4E0();
  if (!v8)
  {
    uint64_t v9 = v11;
    uint64_t v15 = v12;
    char v14 = 1;
    sub_12124(&qword_26CAB8);
    sub_302AC(&qword_26CAC0, &qword_26CAB8, (void (*)(void))sub_2FEBC);
    sub_1FC530();
    uint64_t v15 = v9;
    char v14 = 2;
    sub_12124(&qword_26C6D8);
    sub_2F0D8(&qword_26C6E0, &qword_26C6D8);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.RecommendationRequestV2.hashValue.getter()
{
  uint64_t v1 = v0[3];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  uint64_t v6 = v1;
  sub_1FC7E0();
  Transport.RecommendationRequestV2.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.RecommendationRequestV2.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CAD0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2FE68();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    LOBYTE(v21) = 0;
    uint64_t v10 = sub_1FC3A0();
    uint64_t v12 = v11;
    uint64_t v19 = a2;
    sub_12124(&qword_26CAB8);
    char v20 = 1;
    sub_302AC(&qword_26CAD8, &qword_26CAB8, (void (*)(void))sub_2FF10);
    swift_bridgeObjectRetain();
    sub_1FC3F0();
    uint64_t v13 = v21;
    sub_12124(&qword_26C6D8);
    char v20 = 2;
    sub_2F0D8(&qword_26C708, &qword_26C6D8);
    uint64_t v18 = v13;
    swift_bridgeObjectRetain();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v14 = v21;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v16 = v18;
    uint64_t v15 = v19;
    *uint64_t v19 = v10;
    v15[1] = v12;
    _DWORD v15[2] = v16;
    v15[3] = v14;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_261DC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Transport.RecommendationRequestV2.init(from:)(a1, a2);
}

uint64_t sub_261F4(void *a1)
{
  return Transport.RecommendationRequestV2.encode(to:)(a1);
}

Swift::Int sub_26210()
{
  uint64_t v1 = v0[3];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  uint64_t v6 = v1;
  sub_1FC7E0();
  Transport.RecommendationRequestV2.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.Diagnosis.init(type:code:requestId:message:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>)
{
  *a9 = result;
  a9[1] = a2;
  a9[2] = a3;
  a9[3] = a4;
  a9[4] = a5;
  a9[5] = a6;
  a9[6] = a7;
  a9[7] = a8;
  return result;
}

uint64_t Transport.RecommendationResponseV2.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  v9._countAndFlagsBits = a1;
  v5._rawValue = &off_253BF8;
  v9._object = a2;
  unint64_t v6 = sub_1FC2D0(v5, v9);
  uint64_t result = swift_bridgeObjectRelease();
  char v8 = 8;
  if (v6 < 8) {
    char v8 = v6;
  }
  *a3 = v8;
  return result;
}

uint64_t Transport.RecommendationResponseV2.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.RecommendationResponseV2.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

void Transport.RecommendationResponseV2.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 8;
}

unint64_t Transport.RecommendationResponseV2.CodingKeys.rawValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x687475416B6F6F62;
      break;
    case 6:
      unint64_t result = 0x626D45736B6F6F62;
      break;
    case 7:
      unint64_t result = 0x726E65476B6F6F62;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.RecommendationResponseV2.CodingKeys.stringValue.getter()
{
  unint64_t result = 0xD00000000000001CLL;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000019;
      break;
    case 2:
      unint64_t result = 0xD00000000000001ELL;
      break;
    case 3:
      unint64_t result = 0xD000000000000017;
      break;
    case 4:
      unint64_t result = 0xD000000000000018;
      break;
    case 5:
      unint64_t result = 0x687475416B6F6F62;
      break;
    case 6:
      unint64_t result = 0x626D45736B6F6F62;
      break;
    case 7:
      unint64_t result = 0x726E65476B6F6F62;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_26544(char *a1, char *a2)
{
  return sub_1D7EF8(*a1, *a2);
}

Swift::Int sub_26550()
{
  return sub_114500();
}

uint64_t sub_2655C()
{
  return sub_15FE94();
}

Swift::Int sub_26564()
{
  return sub_114500();
}

uint64_t sub_2656C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.RecommendationResponseV2.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

unint64_t sub_26578@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = Transport.RecommendationResponseV2.CodingKeys.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_265A4(uint64_t a1)
{
  unint64_t v2 = sub_2FF64();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_265E0(uint64_t a1)
{
  unint64_t v2 = sub_2FF64();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.RecommendationResponseV2.hash(into:)(uint64_t a1)
{
  unint64_t v2 = v1;
  uint64_t v5 = *v2;
  uint64_t v4 = v2[1];
  uint64_t v7 = v2[2];
  uint64_t v6 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  uint64_t v11 = v2[6];
  uint64_t v10 = v2[7];
  swift_bridgeObjectRetain();
  sub_2C2F8(a1, v5);
  swift_bridgeObjectRelease();
  if (v4)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_2C1E4(a1, v4);
    swift_bridgeObjectRelease();
    if (v7) {
      goto LABEL_3;
    }
  }
  else
  {
    sub_1FC800(0);
    if (v7)
    {
LABEL_3:
      sub_1FC800(1u);
      swift_bridgeObjectRetain();
      sub_2C120(a1, v7);
      swift_bridgeObjectRelease();
      if (v6) {
        goto LABEL_4;
      }
      goto LABEL_11;
    }
  }
  sub_1FC800(0);
  if (v6)
  {
LABEL_4:
    sub_1FC800(1u);
    sub_2C00C(a1, v6);
    if (v9) {
      goto LABEL_5;
    }
    goto LABEL_12;
  }
LABEL_11:
  sub_1FC800(0);
  if (v9)
  {
LABEL_5:
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_2BEBC(a1, v9);
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_6;
    }
    goto LABEL_13;
  }
LABEL_12:
  sub_1FC800(0);
  if (v8)
  {
LABEL_6:
    sub_1FC800(1u);
    sub_2CC3C(a1, v8);
    if (v11) {
      goto LABEL_7;
    }
LABEL_14:
    sub_1FC800(0);
    if (v10) {
      goto LABEL_8;
    }
    goto LABEL_15;
  }
LABEL_13:
  sub_1FC800(0);
  if (!v11) {
    goto LABEL_14;
  }
LABEL_7:
  sub_1FC800(1u);
  sub_2BDD8(a1, v11);
  if (v10)
  {
LABEL_8:
    sub_1FC800(1u);
    sub_2CC3C(a1, v10);
    return;
  }
LABEL_15:
  sub_1FC800(0);
}

uint64_t Transport.RecommendationResponseV2.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26CAE8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *v1;
  uint64_t v8 = v1[1];
  uint64_t v21 = v1[2];
  uint64_t v22 = v8;
  uint64_t v10 = v1[3];
  uint64_t v19 = v1[4];
  uint64_t v20 = v10;
  uint64_t v11 = v1[5];
  uint64_t v17 = v1[6];
  uint64_t v18 = v11;
  uint64_t v16 = v1[7];
  sub_5D64(a1, a1[3]);
  sub_2FF64();
  uint64_t v12 = v4;
  sub_1FC870();
  uint64_t v24 = v9;
  char v23 = 0;
  sub_12124(&qword_26CAF8);
  sub_302AC(&qword_26CB00, &qword_26CAF8, (void (*)(void))sub_2FFB8);
  sub_1FC530();
  if (!v2)
  {
    uint64_t v13 = v20;
    uint64_t v14 = v21;
    uint64_t v24 = v22;
    char v23 = 1;
    sub_12124(&qword_26CB10);
    sub_302AC(&qword_26CB18, &qword_26CB10, (void (*)(void))sub_3000C);
    sub_1FC4A0();
    uint64_t v24 = v14;
    char v23 = 2;
    sub_12124(&qword_26C738);
    sub_302AC(&qword_26C740, &qword_26C738, (void (*)(void))sub_2EA9C);
    sub_1FC4A0();
    uint64_t v24 = v13;
    char v23 = 3;
    sub_12124(&qword_26C750);
    sub_302AC(&qword_26C758, &qword_26C750, (void (*)(void))sub_2EAF0);
    sub_1FC4A0();
    uint64_t v24 = v19;
    char v23 = 4;
    sub_12124(&qword_26CB28);
    sub_302AC(&qword_26CB30, &qword_26CB28, (void (*)(void))sub_30060);
    sub_1FC4A0();
    uint64_t v24 = v18;
    char v23 = 5;
    sub_12124(&qword_26C768);
    sub_302AC(&qword_26C770, &qword_26C768, (void (*)(void))sub_2EB44);
    sub_1FC4A0();
    uint64_t v24 = v17;
    char v23 = 6;
    sub_12124(&qword_26C780);
    sub_302AC(&qword_26C788, &qword_26C780, (void (*)(void))sub_2EB98);
    sub_1FC4A0();
    uint64_t v24 = v16;
    char v23 = 7;
    sub_12124(&qword_26C798);
    sub_302AC(&qword_26C7A0, &qword_26C798, (void (*)(void))sub_2EBEC);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

Swift::Int Transport.RecommendationResponseV2.hashValue.getter()
{
  uint64_t v1 = v0[7];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  long long v7 = *(_OWORD *)(v0 + 5);
  uint64_t v8 = v1;
  sub_1FC7E0();
  Transport.RecommendationResponseV2.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.RecommendationResponseV2.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CB40);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_2FF64();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    sub_12124(&qword_26CAF8);
    char v26 = 0;
    sub_302AC(&qword_26CB48, &qword_26CAF8, (void (*)(void))sub_300B4);
    sub_1FC3F0();
    uint64_t v25 = a2;
    uint64_t v10 = v27;
    sub_12124(&qword_26CB10);
    char v26 = 1;
    sub_302AC(&qword_26CB58, &qword_26CB10, (void (*)(void))sub_30108);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v24 = v10;
    uint64_t v11 = v27;
    sub_12124(&qword_26C738);
    char v26 = 2;
    sub_302AC(&qword_26C7C8, &qword_26C738, (void (*)(void))sub_2EC94);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v23 = v11;
    uint64_t v12 = v27;
    sub_12124(&qword_26C750);
    char v26 = 3;
    sub_302AC(&qword_26C7D8, &qword_26C750, (void (*)(void))sub_2ECE8);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v22 = v12;
    uint64_t v13 = v27;
    sub_12124(&qword_26CB28);
    char v26 = 4;
    sub_302AC(&qword_26CB68, &qword_26CB28, (void (*)(void))sub_3015C);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v21 = v6;
    uint64_t v14 = v27;
    sub_12124(&qword_26C768);
    char v26 = 5;
    sub_302AC(&qword_26C7E8, &qword_26C768, (void (*)(void))sub_2ED3C);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v15 = v27;
    sub_12124(&qword_26C780);
    char v26 = 6;
    sub_302AC(&qword_26C7F8, &qword_26C780, (void (*)(void))sub_2ED90);
    swift_bridgeObjectRetain();
    sub_1FC360();
    uint64_t v16 = v27;
    sub_12124(&qword_26C798);
    char v26 = 7;
    sub_302AC(&qword_26C808, &qword_26C798, (void (*)(void))sub_2EDE4);
    swift_bridgeObjectRetain();
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v8, v5);
    uint64_t v17 = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v25;
    uint64_t v20 = v22;
    uint64_t v19 = v23;
    void *v25 = v24;
    v18[1] = v19;
    v18[2] = v20;
    v18[3] = v13;
    v18[4] = v14;
    v18[5] = v15;
    v18[6] = v16;
    v18[7] = v17;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_2765C@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.RecommendationResponseV2.init(from:)(a1, a2);
}

uint64_t sub_27674(void *a1)
{
  return Transport.RecommendationResponseV2.encode(to:)(a1);
}

Swift::Int sub_27690()
{
  uint64_t v1 = v0[7];
  uint64_t v4 = *v0;
  long long v5 = *(_OWORD *)(v0 + 1);
  long long v6 = *(_OWORD *)(v0 + 3);
  long long v7 = *(_OWORD *)(v0 + 5);
  uint64_t v8 = v1;
  sub_1FC7E0();
  Transport.RecommendationResponseV2.hash(into:)((uint64_t)v3);
  return sub_1FC830();
}

uint64_t Transport.MetadataResponse.init(bookIdToMetadataEntries:)@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

uint64_t Transport.MetadataRequest.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_253CD8, a3);
}

uint64_t Transport.MetadataRequest.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_253D10, a3);
}

void Transport.MetadataRequest.CodingKeys.init(intValue:)(unsigned char *a1@<X8>)
{
  *a1 = 1;
}

uint64_t Transport.MetadataRequest.CodingKeys.rawValue.getter()
{
  return 0x7364496B6F6F62;
}

Swift::Int sub_2773C()
{
  return sub_27DD0();
}

uint64_t sub_27754()
{
  return sub_1FB8C0();
}

Swift::Int sub_2776C()
{
  return sub_27E58();
}

uint64_t sub_27784@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_27EB0(a1, (Swift::OpaquePointer)&off_253D48, a2);
}

void sub_27790(void *a1@<X8>)
{
  *a1 = 0x7364496B6F6F62;
  a1[1] = 0xE700000000000000;
}

uint64_t sub_277AC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27F2C(a1, a2, (Swift::OpaquePointer)&off_253D80, a3);
}

uint64_t sub_277B8(uint64_t a1)
{
  unint64_t v2 = sub_301B0();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_277F4(uint64_t a1)
{
  unint64_t v2 = sub_301B0();

  return CodingKey.debugDescription.getter(a1, v2);
}

BOOL static Transport.MetadataRequest.== infix(_:_:)(void **a1, void **a2)
{
  return sub_182A8(*a1, *a2);
}

void Transport.MetadataRequest.hash(into:)()
{
  uint64_t v1 = *v0;
  sub_1FC7F0(*(void *)(*v0 + 16));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    unint64_t v3 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v4 = *v3++;
      sub_1FC820(v4);
      --v2;
    }
    while (v2);
  }
}

uint64_t Transport.MetadataRequest.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CB78);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  long long v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_301B0();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_26C5F8);
  sub_2F0D8(&qword_26C600, &qword_26C5F8);
  sub_1FC530();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.MetadataRequest.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v4 = *v3++;
      sub_1FC820(v4);
      --v2;
    }
    while (v2);
  }
  return sub_1FC830();
}

uint64_t Transport.MetadataRequest.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CB88);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_301B0();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_26C5F8);
    sub_2F0D8(&qword_26C610, &qword_26C5F8);
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_27C38@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.MetadataRequest.init(from:)(a1, a2);
}

uint64_t sub_27C50(void *a1)
{
  return Transport.MetadataRequest.encode(to:)(a1);
}

void sub_27C6C()
{
  uint64_t v1 = *v0;
  Swift::UInt v2 = *(void *)(*v0 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    uint64_t v3 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v4 = *v3++;
      sub_1FC820(v4);
      --v2;
    }
    while (v2);
  }
}

Swift::Int sub_27CC0()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    uint64_t v3 = (Swift::UInt64 *)(v1 + 32);
    do
    {
      Swift::UInt64 v4 = *v3++;
      sub_1FC820(v4);
      --v2;
    }
    while (v2);
  }
  return sub_1FC830();
}

uint64_t Transport.MetadataResponse.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_253DB8, a3);
}

uint64_t sub_27D38@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, BOOL *a4@<X8>)
{
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Swift::Int v7 = sub_1FC2D0(a3, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v7 != 0;
  return result;
}

uint64_t Transport.MetadataResponse.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27D38(a1, a2, (Swift::OpaquePointer)&off_253DF0, a3);
}

unint64_t Transport.MetadataResponse.CodingKeys.rawValue.getter()
{
  return 0xD000000000000017;
}

Swift::Int sub_27DB4()
{
  return sub_27DD0();
}

Swift::Int sub_27DD0()
{
  return sub_1FC830();
}

uint64_t sub_27E20()
{
  return sub_1FB8C0();
}

Swift::Int sub_27E3C()
{
  return sub_27E58();
}

Swift::Int sub_27E58()
{
  return sub_1FC830();
}

uint64_t sub_27EA4@<X0>(uint64_t *a1@<X0>, BOOL *a2@<X8>)
{
  return sub_27EB0(a1, (Swift::OpaquePointer)&off_253E28, a2);
}

uint64_t sub_27EB0@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, BOOL *a3@<X8>)
{
  v8._countAndFlagsBits = *a1;
  Swift::UInt64 v4 = (void *)a1[1];
  v8._object = v4;
  Swift::Int v6 = sub_1FC2D0(a2, v8);
  uint64_t result = swift_bridgeObjectRelease();
  *a3 = v6 != 0;
  return result;
}

void sub_27F00(void *a1@<X8>)
{
  *a1 = 0xD000000000000017;
  a1[1] = 0x8000000000216050;
}

uint64_t sub_27F20@<X0>(uint64_t a1@<X0>, void *a2@<X1>, BOOL *a3@<X8>)
{
  return sub_27F2C(a1, a2, (Swift::OpaquePointer)&off_253E60, a3);
}

uint64_t sub_27F2C@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X4>, BOOL *a4@<X8>)
{
  v9._countAndFlagsBits = a1;
  v9._object = a2;
  Swift::Int v7 = sub_1FC2D0(a3, v9);
  uint64_t result = swift_bridgeObjectRelease();
  *a4 = v7 != 0;
  return result;
}

uint64_t sub_27F80(uint64_t a1)
{
  unint64_t v2 = sub_30204();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_27FBC(uint64_t a1)
{
  unint64_t v2 = sub_30204();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t static Transport.MetadataResponse.== infix(_:_:)(void *a1, uint64_t *a2)
{
  return sub_28010(a1, a2, (uint64_t (*)(void))sub_17BE4);
}

uint64_t sub_28010(void *a1, uint64_t *a2, uint64_t (*a3)(void))
{
  uint64_t v3 = *a2;
  if (*a1)
  {
    if (v3 && (a3() & 1) != 0) {
      return 1;
    }
  }
  else if (!v3)
  {
    return 1;
  }
  return 0;
}

void Transport.MetadataResponse.hash(into:)(uint64_t a1)
{
}

void sub_2806C(uint64_t a1, void (*a2)(uint64_t, uint64_t))
{
  uint64_t v4 = *v2;
  if (*v2)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    a2(a1, v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
}

uint64_t Transport.MetadataResponse.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CB90);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::Int v6 = (char *)v9 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  sub_5D64(a1, a1[3]);
  sub_30204();
  sub_1FC870();
  v9[1] = v7;
  sub_12124(&qword_26CBA0);
  sub_302AC(&qword_26CBA8, &qword_26CBA0, (void (*)(void))sub_30258);
  sub_1FC4A0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.MetadataResponse.hashValue.getter()
{
  return sub_28298((void (*)(unsigned char *, uint64_t))sub_2BA78);
}

Swift::Int sub_28298(void (*a1)(unsigned char *, uint64_t))
{
  uint64_t v3 = *v1;
  sub_1FC7E0();
  if (v3)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    a1(v5, v3);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.MetadataResponse.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CBB8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::String v8 = (char *)v10 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_30204();
  sub_1FC850();
  if (!v2)
  {
    sub_12124(&qword_26CBA0);
    sub_302AC(&qword_26CBC0, &qword_26CBA0, (void (*)(void))sub_30318);
    sub_1FC360();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10[1];
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_284C8@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Transport.MetadataResponse.init(from:)(a1, a2);
}

uint64_t sub_284E0(void *a1)
{
  return Transport.MetadataResponse.encode(to:)(a1);
}

uint64_t sub_284F8(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4)
{
  return sub_28510(a1, a2, a3, a4, (uint64_t (*)(void))sub_17BE4);
}

uint64_t sub_28510(void *a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = *a2;
  if (*a1)
  {
    if (v5 && (a5() & 1) != 0) {
      return 1;
    }
  }
  else if (!v5)
  {
    return 1;
  }
  return 0;
}

Swift::Int sub_28554(uint64_t a1, uint64_t a2)
{
  return sub_2856C(a1, a2, (void (*)(unsigned char *, uint64_t))sub_2BA78);
}

Swift::Int sub_2856C(uint64_t a1, uint64_t a2, void (*a3)(unsigned char *, uint64_t))
{
  uint64_t v5 = *v3;
  sub_1FC7E0();
  if (v5)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    a3(v7, v5);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

void sub_285F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
}

void sub_28608(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v6 = *v4;
  if (*v4)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    a4(a1, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
}

Swift::Int sub_28690(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_286A8(a1, a2, a3, (void (*)(unsigned char *, uint64_t))sub_2BA78);
}

Swift::Int sub_286A8(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(unsigned char *, uint64_t))
{
  uint64_t v6 = *v4;
  sub_1FC7E0();
  if (v6)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    a4(v8, v6);
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToMetadataEntry.ulyssesEmbedding.getter()
{
  return *(void *)(v0 + 8);
}

uint64_t Transport.BookIdToMetadataEntry.ulyssesEmbedding.setter(uint64_t result, char a2)
{
  *(void *)(v2 + 8) = result;
  *(unsigned char *)(v2 + 16) = a2 & 1;
  return result;
}

uint64_t Transport.Diagnosis.requestId.getter()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Transport.Diagnosis.requestId.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 32) = a1;
  *(void *)(v2 + 40) = a2;
  return result;
}

uint64_t Transport.BookIdToMetadataEntry.init(bookId:ulyssesEmbedding:bisacCodes:deduplicationId:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  *(void *)a7 = result;
  *(void *)(a7 + 8) = a2;
  *(unsigned char *)(a7 + 16) = a3 & 1;
  *(void *)(a7 + 24) = a4;
  *(void *)(a7 + 32) = a5;
  *(void *)(a7 + 40) = a6;
  return result;
}

uint64_t Transport.BookIdToMetadataEntry.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_2A5A8(a1, a2, (Swift::OpaquePointer)&off_253E98, a3);
}

uint64_t Transport.BookIdToMetadataEntry.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.BookIdToMetadataEntry.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

unint64_t Transport.BookIdToMetadataEntry.CodingKeys.rawValue.getter()
{
  unint64_t result = 0x64496B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x646F436361736962;
      break;
    case 3:
      unint64_t result = 0x63696C7075646564;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t Transport.BookIdToMetadataEntry.CodingKeys.stringValue.getter()
{
  unint64_t result = 0x64496B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x646F436361736962;
      break;
    case 3:
      unint64_t result = 0x63696C7075646564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_28948(unsigned __int8 *a1, char *a2)
{
  return sub_1D881C(*a1, *a2);
}

Swift::Int sub_28954()
{
  return sub_7DCF8();
}

uint64_t sub_2895C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_28A30()
{
  return sub_114894();
}

uint64_t sub_28A38@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.BookIdToMetadataEntry.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_28A44(unint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE600000000000000;
  unint64_t v3 = 0x64496B6F6F62;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0x8000000000216070;
      unint64_t v3 = 0xD000000000000010;
      goto LABEL_3;
    case 2:
      *a1 = 0x646F436361736962;
      a1[1] = 0xEA00000000007365;
      break;
    case 3:
      *a1 = 0x63696C7075646564;
      a1[1] = 0xEF64496E6F697461;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_28AF0()
{
  unint64_t result = 0x64496B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000010;
      break;
    case 2:
      unint64_t result = 0x646F436361736962;
      break;
    case 3:
      unint64_t result = 0x63696C7075646564;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_28B90(uint64_t a1)
{
  unint64_t v2 = sub_3036C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_28BCC(uint64_t a1)
{
  unint64_t v2 = sub_3036C();

  return CodingKey.debugDescription.getter(a1, v2);
}

void Transport.BookIdToMetadataEntry.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 8);
  int v2 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v3 = *(void *)(v0 + 24);
  uint64_t v4 = *(void *)(v0 + 40);
  sub_1FC820(*(void *)v0);
  if (v2 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v5 = v1;
    }
    else {
      Swift::UInt64 v5 = 0;
    }
    sub_1FC820(v5);
  }
  sub_1FC7F0(*(void *)(v3 + 16));
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6)
  {
    swift_bridgeObjectRetain();
    uint64_t v7 = v3 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v7 += 16;
      --v6;
    }
    while (v6);
    swift_bridgeObjectRelease();
  }
  if (v4)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
}

uint64_t Transport.BookIdToMetadataEntry.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26CBD0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 8);
  int v16 = *(unsigned __int8 *)(v1 + 16);
  uint64_t v13 = *(void *)(v1 + 24);
  uint64_t v14 = v8;
  uint64_t v9 = *(void *)(v1 + 32);
  v12[1] = *(void *)(v1 + 40);
  void v12[2] = v9;
  sub_5D64(a1, a1[3]);
  sub_3036C();
  sub_1FC870();
  char v20 = 0;
  sub_1FC550();
  if (!v2)
  {
    uint64_t v10 = v13;
    char v19 = 1;
    sub_1FC470();
    uint64_t v15 = v10;
    char v18 = 2;
    sub_12124(&qword_26C6D8);
    sub_2F0D8(&qword_26C6E0, &qword_26C6D8);
    sub_1FC530();
    char v17 = 3;
    sub_1FC450();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

Swift::Int Transport.BookIdToMetadataEntry.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 40);
  sub_1FC7E0();
  sub_1FC820(v1);
  if (v3 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
  }
  sub_1FC7F0(*(void *)(v4 + 16));
  uint64_t v7 = *(void *)(v4 + 16);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  if (v5)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.BookIdToMetadataEntry.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CBE0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_3036C();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    char v28 = 0;
    uint64_t v9 = sub_1FC410();
    char v27 = 1;
    uint64_t v10 = sub_1FC330();
    int v24 = v11;
    uint64_t v22 = v10;
    sub_12124(&qword_26C6D8);
    char v26 = 2;
    sub_2F0D8(&qword_26C708, &qword_26C6D8);
    sub_1FC3F0();
    uint64_t v13 = v23;
    char v25 = 3;
    swift_bridgeObjectRetain();
    uint64_t v14 = sub_1FC310();
    uint64_t v16 = v15;
    char v17 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v21 = v14;
    v17(v8, v5);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v18 = v22;
    *(void *)a2 = v9;
    *(void *)(a2 + 8) = v18;
    *(unsigned char *)(a2 + 16) = v24 & 1;
    uint64_t v19 = v21;
    *(void *)(a2 + 24) = v13;
    *(void *)(a2 + 32) = v19;
    *(void *)(a2 + 40) = v16;
    sub_1264C((uint64_t)a1);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_29370@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Transport.BookIdToMetadataEntry.init(from:)(a1, a2);
}

uint64_t sub_29388(void *a1)
{
  return Transport.BookIdToMetadataEntry.encode(to:)(a1);
}

Swift::Int sub_293A8()
{
  Swift::UInt64 v1 = *(void *)v0;
  Swift::UInt64 v2 = *(void *)(v0 + 8);
  int v3 = *(unsigned __int8 *)(v0 + 16);
  uint64_t v4 = *(void *)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 40);
  sub_1FC7E0();
  sub_1FC820(v1);
  if (v3 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v6 = v2;
    }
    else {
      Swift::UInt64 v6 = 0;
    }
    sub_1FC820(v6);
  }
  Swift::UInt v7 = *(void *)(v4 + 16);
  sub_1FC7F0(v7);
  if (v7)
  {
    swift_bridgeObjectRetain();
    uint64_t v8 = v4 + 40;
    do
    {
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      v8 += 16;
      --v7;
    }
    while (v7);
    swift_bridgeObjectRelease();
  }
  if (v5)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
  return sub_1FC830();
}

uint64_t Transport.Diagnosis.TypePayload.rawValue.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0x474E494E524157;
  if (a2 != 1) {
    uint64_t v2 = a1;
  }
  if (a2) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x524F525245;
  }
  sub_2F5CC(a1, a2);
  return v3;
}

_UNKNOWN **static Transport.Diagnosis.TypePayload.allCases.getter()
{
  return &off_253F18;
}

uint64_t sub_29548@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s20BooksPersonalization9TransportO9DiagnosisV11TypePayloadOyAGSgSScfC_0(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_29578@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v4 = 0xE500000000000000;
  uint64_t v5 = 0x524F525245;
  unint64_t v6 = 0xE700000000000000;
  uint64_t v7 = 0x474E494E524157;
  if (v3 != 1)
  {
    uint64_t v7 = *v1;
    unint64_t v6 = v1[1];
  }
  if (v3)
  {
    uint64_t v5 = v7;
    unint64_t v4 = v6;
  }
  *a1 = v5;
  a1[1] = v4;
  return sub_2F5CC(v2, v3);
}

uint64_t sub_295C0()
{
  return sub_1FBA60();
}

uint64_t sub_29620()
{
  return sub_1FBA40();
}

uint64_t sub_29670(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  unint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  unint64_t v5 = a2[1];
  unint64_t v6 = 0xE700000000000000;
  uint64_t v7 = 0x474E494E524157;
  if (v3 != 1)
  {
    uint64_t v7 = *a1;
    unint64_t v6 = a1[1];
  }
  if (v3) {
    uint64_t v8 = v7;
  }
  else {
    uint64_t v8 = 0x524F525245;
  }
  if (v3) {
    unint64_t v9 = v6;
  }
  else {
    unint64_t v9 = 0xE500000000000000;
  }
  unint64_t v10 = 0xE700000000000000;
  uint64_t v11 = 0x474E494E524157;
  if (v5 != 1)
  {
    uint64_t v11 = *a2;
    unint64_t v10 = a2[1];
  }
  if (v5) {
    uint64_t v12 = v11;
  }
  else {
    uint64_t v12 = 0x524F525245;
  }
  if (v5) {
    unint64_t v13 = v10;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  if (v8 == v12 && v9 == v13) {
    char v14 = 1;
  }
  else {
    char v14 = sub_1FC5F0();
  }
  sub_2F5CC(v2, v3);
  sub_2F5CC(v4, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v14 & 1;
}

Swift::Int sub_2976C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1FC7E0();
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_29810()
{
  sub_2F5CC(*(void *)v0, *(void *)(v0 + 8));
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_298A0()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1FC7E0();
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_29940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _s20BooksPersonalization9TransportO9DiagnosisV11TypePayloadOyAGSgSScfC_0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_29968(void *a1@<X8>)
{
  *a1 = &off_253F58;
}

uint64_t sub_29978()
{
  unint64_t v1 = v0[1];
  uint64_t v2 = 0x474E494E524157;
  if (v1 != 1) {
    uint64_t v2 = *v0;
  }
  if (v1) {
    uint64_t v3 = v2;
  }
  else {
    uint64_t v3 = 0x524F525245;
  }
  sub_2F5CC(*v0, v1);
  return v3;
}

uint64_t Transport.Diagnosis.CodePayload.rawValue.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0x5F44494C41564E49;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v2 = 0x485455415F544F4ELL;
      break;
    case 2uLL:
      uint64_t v2 = 0x455F524556524553;
      break;
    case 3uLL:
      uint64_t v2 = 0x4E554F465F544F4ELL;
      break;
    default:
      uint64_t v2 = a1;
      break;
  }
  sub_306DC(a1, a2);
  return v2;
}

uint64_t Transport.Diagnosis.CodePayload.description.getter(uint64_t a1, unint64_t a2)
{
  uint64_t v2 = 0x5F44494C41564E49;
  switch(a2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v2 = 0x485455415F544F4ELL;
      break;
    case 2uLL:
      uint64_t v2 = 0x455F524556524553;
      break;
    case 3uLL:
      uint64_t v2 = 0x4E554F465F544F4ELL;
      break;
    default:
      uint64_t v2 = a1;
      break;
  }
  sub_306DC(a1, a2);
  return v2;
}

_UNKNOWN **static Transport.Diagnosis.CodePayload.allCases.getter()
{
  return &off_253F98;
}

uint64_t sub_29BC8@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = _s20BooksPersonalization9TransportO9DiagnosisV11CodePayloadOyAGSgSScfC_0(*a1, a1[1]);
  *a2 = result;
  a2[1] = v4;
  return result;
}

uint64_t sub_29BF8@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *v1;
  unint64_t v3 = v1[1];
  unint64_t v4 = 0xEF54534555514552;
  uint64_t v5 = 0x5F44494C41564E49;
  switch(v3)
  {
    case 0uLL:
      goto LABEL_3;
    case 1uLL:
      unint64_t v4 = 0xEE0044455A49524FLL;
      uint64_t v5 = 0x485455415F544F4ELL;
LABEL_3:
      *(void *)a1 = v5;
      *(void *)(a1 + 8) = v4;
      break;
    case 2uLL:
      strcpy((char *)a1, "SERVER_ERROR");
      *(unsigned char *)(a1 + 13) = 0;
      *(_WORD *)(a1 + 14) = -5120;
      break;
    case 3uLL:
      *(void *)a1 = 0x4E554F465F544F4ELL;
      *(void *)(a1 + 8) = 0xE900000000000044;
      break;
    default:
      *(void *)a1 = v2;
      *(void *)(a1 + 8) = v3;
      break;
  }
  return sub_306DC(v2, v3);
}

uint64_t sub_29CD4()
{
  return sub_1FBA60();
}

uint64_t sub_29D34()
{
  return sub_1FBA40();
}

uint64_t sub_29D84(uint64_t *a1, uint64_t *a2)
{
  unint64_t v2 = 0xEF54534555514552;
  uint64_t v3 = 0x5F44494C41564E49;
  uint64_t v4 = *a1;
  unint64_t v5 = a1[1];
  uint64_t v6 = *a2;
  unint64_t v7 = a2[1];
  uint64_t v8 = 0x5F44494C41564E49;
  unint64_t v9 = 0xEF54534555514552;
  switch(v5)
  {
    case 0uLL:
      goto LABEL_7;
    case 1uLL:
      uint64_t v8 = 0x485455415F544F4ELL;
      unint64_t v9 = 0xEE0044455A49524FLL;
      if (v7 > 3) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v8 = 0x455F524556524553;
      unint64_t v9 = 0xEC000000524F5252;
      goto LABEL_7;
    case 3uLL:
      uint64_t v8 = 0x4E554F465F544F4ELL;
      unint64_t v9 = 0xE900000000000044;
      if (v7 > 3) {
        goto LABEL_11;
      }
      goto LABEL_7;
    default:
      uint64_t v8 = v4;
      unint64_t v9 = v5;
      if (v7 <= 3)
      {
LABEL_7:
        switch(v7)
        {
          case 0uLL:
            break;
          case 1uLL:
            unint64_t v2 = 0xEE0044455A49524FLL;
            if (v8 != 0x485455415F544F4ELL) {
              goto LABEL_18;
            }
            goto LABEL_15;
          case 2uLL:
            uint64_t v3 = 0x455F524556524553;
            unint64_t v2 = 0xEC000000524F5252;
            break;
          case 3uLL:
            unint64_t v2 = 0xE900000000000044;
            if (v8 != 0x4E554F465F544F4ELL) {
              goto LABEL_18;
            }
            goto LABEL_15;
          default:
            goto LABEL_11;
        }
        if (v8 != v3) {
          goto LABEL_18;
        }
      }
      else
      {
LABEL_11:
        unint64_t v2 = a2[1];
        if (v8 != v6) {
          goto LABEL_18;
        }
      }
LABEL_15:
      if (v9 == v2)
      {
        char v10 = 1;
        goto LABEL_19;
      }
LABEL_18:
      char v10 = sub_1FC5F0();
LABEL_19:
      sub_306DC(v4, v5);
      sub_306DC(v6, v7);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

Swift::Int sub_29FC8()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1FC7E0();
  sub_306DC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_2A0F4()
{
  sub_306DC(*(void *)v0, *(void *)(v0 + 8));
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2A20C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  sub_1FC7E0();
  sub_306DC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  return sub_1FC830();
}

uint64_t sub_2A334@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X8>)
{
  uint64_t result = _s20BooksPersonalization9TransportO9DiagnosisV11CodePayloadOyAGSgSScfC_0(a1, a2);
  *a3 = result;
  a3[1] = v5;
  return result;
}

void sub_2A35C(void *a1@<X8>)
{
  *a1 = &off_253FF8;
}

uint64_t sub_2A36C()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = 0x5F44494C41564E49;
  switch(v2)
  {
    case 0uLL:
      break;
    case 1uLL:
      uint64_t v3 = 0x485455415F544F4ELL;
      break;
    case 2uLL:
      uint64_t v3 = 0x455F524556524553;
      break;
    case 3uLL:
      uint64_t v3 = 0x4E554F465F544F4ELL;
      break;
    default:
      uint64_t v3 = v1;
      break;
  }
  sub_306DC(v1, v2);
  return v3;
}

uint64_t Transport.Diagnosis.type.getter()
{
  uint64_t v1 = *(void *)v0;
  sub_2F5CC(*(void *)v0, *(void *)(v0 + 8));
  return v1;
}

uint64_t Transport.Diagnosis.type.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_3781C(*(void *)v2, *(void *)(v2 + 8));
  *(void *)uint64_t v2 = a1;
  *(void *)(v2 + 8) = a2;
  return result;
}

uint64_t Transport.Diagnosis.code.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_306DC(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t Transport.Diagnosis.code.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_306F0(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t Transport.Diagnosis.message.getter()
{
  uint64_t v1 = *(void *)(v0 + 48);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t Transport.Diagnosis.message.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v2 + 48) = a1;
  *(void *)(v2 + 56) = a2;
  return result;
}

uint64_t Transport.Diagnosis.CodingKeys.init(rawValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, char *a3@<X8>)
{
  return sub_2A5A8(a1, a2, (Swift::OpaquePointer)&off_254058, a3);
}

uint64_t sub_2A5A8@<X0>(uint64_t a1@<X0>, void *a2@<X1>, Swift::OpaquePointer a3@<X2>, char *a4@<X8>)
{
  v10._countAndFlagsBits = a1;
  v10._object = a2;
  unint64_t v7 = sub_1FC2D0(a3, v10);
  uint64_t result = swift_bridgeObjectRelease();
  char v9 = 4;
  if (v7 < 4) {
    char v9 = v7;
  }
  *a4 = v9;
  return result;
}

uint64_t Transport.Diagnosis.CodingKeys.init(stringValue:)@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = Transport.Diagnosis.CodingKeys.init(rawValue:)(a1, a2, &v5);
  *a3 = v5;
  return result;
}

uint64_t Transport.Diagnosis.CodingKeys.rawValue.getter()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701080931;
      break;
    case 2:
      uint64_t result = 0x4974736575716572;
      break;
    case 3:
      uint64_t result = 0x6567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t Transport.Diagnosis.CodingKeys.stringValue.getter()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701080931;
      break;
    case 2:
      uint64_t result = 0x4974736575716572;
      break;
    case 3:
      uint64_t result = 0x6567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2A738(unsigned __int8 *a1, char *a2)
{
  return sub_1D7784(*a1, *a2);
}

Swift::Int sub_2A744()
{
  return sub_1FC830();
}

uint64_t sub_2A810()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_2A8C4()
{
  return sub_1FC830();
}

uint64_t sub_2A98C@<X0>(uint64_t a1@<X0>, char *a2@<X8>)
{
  return Transport.Diagnosis.CodingKeys.init(rawValue:)(*(void *)a1, *(void **)(a1 + 8), a2);
}

void sub_2A998(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701869940;
  switch(*v1)
  {
    case 1:
      uint64_t v2 = 1701080931;
      goto LABEL_3;
    case 2:
      *a1 = 0x4974736575716572;
      a1[1] = 0xE900000000000064;
      break;
    case 3:
      *a1 = 0x6567617373656DLL;
      a1[1] = 0xE700000000000000;
      break;
    default:
LABEL_3:
      *a1 = v2;
      a1[1] = 0xE400000000000000;
      break;
  }
}

uint64_t sub_2AA24()
{
  uint64_t result = 1701869940;
  switch(*v0)
  {
    case 1:
      uint64_t result = 1701080931;
      break;
    case 2:
      uint64_t result = 0x4974736575716572;
      break;
    case 3:
      uint64_t result = 0x6567617373656DLL;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_2AAA4(uint64_t a1)
{
  unint64_t v2 = sub_30704();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_2AAE0(uint64_t a1)
{
  unint64_t v2 = sub_30704();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Transport.Diagnosis.hash(into:)()
{
  uint64_t v1 = *v0;
  unint64_t v2 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  uint64_t v5 = v0[5];
  sub_2F5CC(*v0, v2);
  sub_2F5CC(v1, v2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  sub_3781C(v1, v2);
  sub_306DC(v3, v4);
  sub_306DC(v3, v4);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  sub_306F0(v3, v4);
  if (v5)
  {
    sub_1FC800(1u);
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
  }
  else
  {
    sub_1FC800(0);
  }
  swift_bridgeObjectRetain();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

uint64_t Transport.Diagnosis.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26CBE8);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v14 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v7 = v1[1];
  uint64_t v9 = v1[2];
  uint64_t v15 = v1[3];
  uint64_t v16 = v9;
  uint64_t v10 = v1[4];
  v14[3] = v1[5];
  v14[4] = v10;
  uint64_t v11 = v1[6];
  v14[1] = v1[7];
  v14[2] = v11;
  sub_5D64(a1, a1[3]);
  sub_30704();
  sub_1FC870();
  uint64_t v18 = v8;
  uint64_t v19 = v7;
  char v20 = 0;
  sub_30758();
  uint64_t v12 = v17;
  sub_1FC530();
  if (!v12)
  {
    uint64_t v18 = v16;
    uint64_t v19 = v15;
    char v20 = 1;
    sub_307AC();
    sub_1FC530();
    LOBYTE(v18) = 2;
    sub_1FC450();
    LOBYTE(v18) = 3;
    sub_1FC4E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

Swift::Int Transport.Diagnosis.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t Transport.Diagnosis.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26CC08);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v27 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_30704();
  sub_1FC850();
  if (v2)
  {
    sub_1264C((uint64_t)a1);
  }
  else
  {
    char v37 = 0;
    sub_30800();
    sub_1FC3F0();
    uint64_t v11 = v35;
    unint64_t v10 = v36;
    char v37 = 1;
    sub_2F5CC(v35, v36);
    sub_30854();
    sub_1FC3F0();
    uint64_t v31 = a2;
    uint64_t v33 = v11;
    unint64_t v34 = v10;
    uint64_t v12 = v35;
    LOBYTE(v35) = 2;
    uint64_t v13 = v12;
    unint64_t v14 = v36;
    sub_306DC(v12, v36);
    uint64_t v32 = 0;
    uint64_t v15 = sub_1FC310();
    uint64_t v17 = v16;
    uint64_t v28 = v15;
    uint64_t v29 = v13;
    unint64_t v30 = v14;
    LOBYTE(v35) = 3;
    swift_bridgeObjectRetain();
    uint64_t v18 = sub_1FC3A0();
    uint64_t v20 = v19;
    uint64_t v21 = *(void (**)(char *, uint64_t))(v6 + 8);
    uint64_t v32 = v18;
    v21(v8, v5);
    uint64_t v23 = v33;
    unint64_t v22 = v34;
    sub_2F5CC(v33, v34);
    uint64_t v25 = v29;
    unint64_t v24 = v30;
    sub_306DC(v29, v30);
    swift_bridgeObjectRetain();
    sub_306F0(v25, v24);
    sub_3781C(v23, v22);
    char v26 = v31;
    *uint64_t v31 = v23;
    v26[1] = v22;
    _OWORD v26[2] = v25;
    v26[3] = v24;
    v26[4] = v28;
    v26[5] = v17;
    v26[6] = v32;
    v26[7] = v20;
    sub_1264C((uint64_t)a1);
    sub_3781C(v23, v22);
    sub_306F0(v25, v24);
    swift_bridgeObjectRelease();
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_2B39C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return Transport.Diagnosis.init(from:)(a1, a2);
}

uint64_t sub_2B3B4(void *a1)
{
  return Transport.Diagnosis.encode(to:)(a1);
}

Swift::Int sub_2B3D0()
{
  return sub_1FC830();
}

void sub_2B428(uint64_t a1)
{
  sub_2FB20(v1, (uint64_t)v11);
  uint64_t v3 = v11[2];
  unint64_t v4 = v11[3];
  uint64_t v5 = v11[4];
  int v6 = v12;
  sub_2FB20(v1, (uint64_t)v13);
  if (v13[0] == 1)
  {
    sub_1FC800(0);
    return;
  }
  sub_1FC800(1u);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2F818(v3, v4);
  swift_bridgeObjectRetain();
  Transport.StoreAssetRequestDetails.hash(into:)(a1);
  if (v5)
  {
    sub_1FC800(1u);
    Swift::UInt v7 = *(void *)(v5 + 16);
    sub_1FC7F0(v7);
    if (v7)
    {
      uint64_t v8 = (Swift::UInt64 *)(v5 + 32);
      do
      {
        Swift::UInt64 v9 = *v8++;
        sub_1FC820(v9);
        --v7;
      }
      while (v7);
    }
    if (v6 == 2) {
      goto LABEL_8;
    }
LABEL_10:
    sub_1FC800(1u);
    Swift::UInt8 v10 = v6 & 1;
    goto LABEL_11;
  }
  sub_1FC800(0);
  if (v6 != 2) {
    goto LABEL_10;
  }
LABEL_8:
  Swift::UInt8 v10 = 0;
LABEL_11:
  sub_1FC800(v10);
  sub_2FB88(v1, (void (*)(void, void, void, void, void, void))sub_2FAB4);
}

void sub_2B590(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4 = *(void *)(a2 + 16);
  sub_1FC7F0(v4);
  if (v4)
  {
    uint64_t v5 = (uint64_t *)(a2 + 88);
    do
    {
      Swift::UInt64 v7 = *(v5 - 5);
      int v8 = *((unsigned __int8 *)v5 - 24);
      Swift::UInt32 v9 = *((_DWORD *)v5 - 5);
      int v10 = *((unsigned __int8 *)v5 - 16);
      Swift::UInt32 v11 = *((_DWORD *)v5 - 3);
      int v12 = *((unsigned __int8 *)v5 - 8);
      uint64_t v13 = *v5;
      Swift::UInt64 v22 = *(v5 - 4);
      if (*((unsigned char *)v5 - 48) == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        uint64_t v21 = *v5;
        int v14 = *((unsigned __int8 *)v5 - 16);
        Swift::UInt32 v15 = *((_DWORD *)v5 - 5);
        int v16 = *((unsigned __int8 *)v5 - 8);
        Swift::UInt32 v17 = *((_DWORD *)v5 - 3);
        Swift::UInt64 v18 = *(v5 - 7);
        sub_1FC800(1u);
        Swift::UInt64 v19 = v18;
        Swift::UInt32 v11 = v17;
        int v12 = v16;
        Swift::UInt32 v9 = v15;
        int v10 = v14;
        uint64_t v13 = v21;
        sub_1FC820(v19);
      }
      sub_1FC820(v7);
      if (v8)
      {
        sub_1FC800(0);
        if (v10) {
          goto LABEL_19;
        }
      }
      else
      {
        sub_1FC800(1u);
        sub_1FC820(v22);
        if (v10)
        {
LABEL_19:
          sub_1FC800(0);
          if (!v12) {
            goto LABEL_3;
          }
          goto LABEL_20;
        }
      }
      sub_1FC800(1u);
      if ((v9 & 0x7FFFFFFF) != 0) {
        Swift::UInt32 v20 = v9;
      }
      else {
        Swift::UInt32 v20 = 0;
      }
      sub_1FC810(v20);
      if (!v12)
      {
LABEL_3:
        sub_1FC800(1u);
        if ((v11 & 0x7FFFFFFF) != 0) {
          Swift::UInt32 v6 = v11;
        }
        else {
          Swift::UInt32 v6 = 0;
        }
        sub_1FC810(v6);
        goto LABEL_7;
      }
LABEL_20:
      sub_1FC800(0);
LABEL_7:
      swift_bridgeObjectRetain();
      sub_2B704(a1, v13);
      swift_bridgeObjectRelease();
      v5 += 8;
      --v4;
    }
    while (v4);
  }
}

void sub_2B704(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    Swift::UInt v13 = v3;
    do
    {
      uint64_t v6 = v5 + 24 * v4;
      uint64_t v7 = *(void *)(v6 + 16);
      if (*(unsigned char *)(v6 + 8) == 1)
      {
        sub_1FC800(0);
        if (v7) {
          goto LABEL_9;
        }
      }
      else
      {
        Swift::UInt64 v8 = *(void *)v6;
        sub_1FC800(1u);
        sub_1FC820(v8);
        if (v7)
        {
LABEL_9:
          sub_1FC800(1u);
          sub_1FC7F0(*(void *)(v7 + 16));
          uint64_t v9 = *(void *)(v7 + 16);
          if (v9)
          {
            swift_bridgeObjectRetain_n();
            int v10 = (unint64_t *)(v7 + 40);
            do
            {
              uint64_t v11 = *(v10 - 1);
              unint64_t v12 = *v10;
              v10 += 2;
              sub_2F5CC(v11, v12);
              sub_2F5CC(v11, v12);
              sub_1FB8C0();
              swift_bridgeObjectRelease();
              sub_3781C(v11, v12);
              --v9;
            }
            while (v9);
            swift_bridgeObjectRelease_n();
            uint64_t v5 = a2 + 32;
            Swift::UInt v3 = v13;
          }
          goto LABEL_4;
        }
      }
      sub_1FC800(0);
LABEL_4:
      ++v4;
    }
    while (v4 != v3);
  }
}

void sub_2B8A4(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      v4 += 2;
      sub_2F5CC(v5, v6);
      sub_2F5CC(v5, v6);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_3781C(v5, v6);
      --v3;
    }
    while (v3);
  }
}

void sub_2B990(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    do
    {
      uint64_t v6 = v5 + 24 * v4;
      Swift::UInt32 v7 = *(_DWORD *)(v6 + 8);
      uint64_t v8 = *(void *)(v6 + 16);
      int v9 = *(unsigned __int8 *)(v6 + 12);
      sub_1FC820(*(void *)v6);
      if (v9 == 1)
      {
        sub_1FC800(0);
        if (v8) {
          goto LABEL_12;
        }
      }
      else
      {
        sub_1FC800(1u);
        if ((v7 & 0x7FFFFFFF) != 0) {
          Swift::UInt32 v10 = v7;
        }
        else {
          Swift::UInt32 v10 = 0;
        }
        sub_1FC810(v10);
        if (v8)
        {
LABEL_12:
          sub_1FC800(1u);
          sub_1FC7F0(*(void *)(v8 + 16));
          uint64_t v11 = *(void *)(v8 + 16);
          if (v11)
          {
            unint64_t v12 = (Swift::UInt64 *)(v8 + 32);
            do
            {
              Swift::UInt64 v13 = *v12++;
              sub_1FC820(v13);
              --v11;
            }
            while (v11);
          }
          goto LABEL_4;
        }
      }
      sub_1FC800(0);
LABEL_4:
      ++v4;
    }
    while (v4 != v3);
  }
}

void sub_2BA78(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v13 = a2 + 32;
    do
    {
      uint64_t v5 = v13 + 48 * v4;
      uint64_t v6 = *(void *)(v5 + 24);
      uint64_t v7 = *(void *)(v5 + 40);
      int v8 = *(unsigned __int8 *)(v5 + 16);
      Swift::UInt64 v9 = *(void *)(v5 + 8);
      sub_1FC820(*(void *)v5);
      if (v8 == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        if ((v9 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v10 = v9;
        }
        else {
          Swift::UInt64 v10 = 0;
        }
        sub_1FC820(v10);
      }
      sub_1FC7F0(*(void *)(v6 + 16));
      uint64_t v11 = *(void *)(v6 + 16);
      if (v11)
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain_n();
        uint64_t v12 = v6 + 40;
        do
        {
          swift_bridgeObjectRetain();
          sub_1FB8C0();
          swift_bridgeObjectRelease();
          v12 += 16;
          --v11;
        }
        while (v11);
        swift_bridgeObjectRelease();
        if (!v7)
        {
LABEL_16:
          sub_1FC800(0);
          swift_bridgeObjectRelease();
          goto LABEL_5;
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v7) {
          goto LABEL_16;
        }
      }
      sub_1FC800(1u);
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
LABEL_5:
      ++v4;
      swift_bridgeObjectRelease();
    }
    while (v4 != v3);
  }
}

void sub_2BC00(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (Swift::UInt64 *)(a2 + 32);
    do
    {
      Swift::UInt64 v6 = *v4++;
      Swift::UInt64 v5 = v6;
      if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v7 = v5;
      }
      else {
        Swift::UInt64 v7 = 0;
      }
      sub_1FC820(v7);
      --v3;
    }
    while (v3);
  }
}

void sub_2BC58(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (unsigned __int8 *)(a2 + 56);
    do
    {
      Swift::UInt32 v5 = *((_DWORD *)v4 - 4);
      Swift::UInt64 v6 = *((void *)v4 - 1);
      int v7 = *v4;
      sub_1FC820(*((void *)v4 - 3));
      if ((v5 & 0x7FFFFFFF) != 0) {
        Swift::UInt32 v8 = v5;
      }
      else {
        Swift::UInt32 v8 = 0;
      }
      sub_1FC810(v8);
      if (v7 == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        sub_1FC820(v6);
      }
      v4 += 32;
      --v3;
    }
    while (v3);
  }
}

void sub_2BCF4(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(a2 + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      v4 += 2;
      sub_2F5CC(v5, v6);
      sub_2F5CC(v5, v6);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_3781C(v5, v6);
      --v3;
    }
    while (v3);
  }
}

void sub_2BDD8(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    do
    {
      uint64_t v6 = v5 + 24 * v4;
      uint64_t v7 = *(void *)(v6 + 16);
      if (*(unsigned char *)(v6 + 8) == 1)
      {
        sub_1FC800(0);
        if (v7) {
          goto LABEL_9;
        }
      }
      else
      {
        Swift::UInt64 v8 = *(void *)v6;
        sub_1FC800(1u);
        sub_1FC820(v8);
        if (v7)
        {
LABEL_9:
          sub_1FC800(1u);
          sub_1FC7F0(*(void *)(v7 + 16));
          uint64_t v9 = *(void *)(v7 + 16);
          if (v9)
          {
            Swift::UInt64 v10 = (Swift::UInt64 *)(v7 + 32);
            do
            {
              Swift::UInt64 v12 = *v10++;
              Swift::UInt64 v11 = v12;
              if ((v12 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
                Swift::UInt64 v13 = v11;
              }
              else {
                Swift::UInt64 v13 = 0;
              }
              sub_1FC820(v13);
              --v9;
            }
            while (v9);
          }
          goto LABEL_4;
        }
      }
      sub_1FC800(0);
LABEL_4:
      ++v4;
    }
    while (v4 != v3);
  }
}

void sub_2BEBC(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(a2 + 56);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      if (*((unsigned char *)v4 - 16) == 1)
      {
        sub_1FC800(0);
        if (v6 != 2) {
          goto LABEL_9;
        }
      }
      else
      {
        Swift::UInt64 v7 = *(v4 - 3);
        sub_1FC800(1u);
        sub_1FC820(v7);
        if (v6 != 2)
        {
LABEL_9:
          sub_1FC800(1u);
          sub_2E638(v5, v6);
          sub_2F5CC(v5, v6);
          sub_2F5CC(v5, v6);
          sub_1FB8C0();
          swift_bridgeObjectRelease();
          sub_2E648(v5, v6);
          sub_2E648(v5, v6);
          goto LABEL_4;
        }
      }
      sub_1FC800(0);
LABEL_4:
      v4 += 4;
      --v3;
    }
    while (v3);
  }
}

void sub_2C00C(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (unsigned __int8 *)(a2 + 72);
    do
    {
      Swift::UInt64 v5 = *((void *)v4 - 3);
      int v6 = *(v4 - 16);
      int v7 = *(v4 - 15);
      Swift::UInt64 v8 = *((void *)v4 - 1);
      int v9 = *v4;
      if (*(v4 - 32) == 1)
      {
        sub_1FC800(0);
        if (!v6) {
          goto LABEL_7;
        }
      }
      else
      {
        Swift::UInt64 v11 = *((void *)v4 - 5);
        sub_1FC800(1u);
        sub_1FC820(v11);
        if (!v6)
        {
LABEL_7:
          sub_1FC800(1u);
          sub_1FC820(v5);
          if (v7 == 2) {
            goto LABEL_11;
          }
          goto LABEL_8;
        }
      }
      sub_1FC800(0);
      if (v7 == 2)
      {
LABEL_11:
        Swift::UInt8 v10 = 0;
        goto LABEL_12;
      }
LABEL_8:
      Swift::UInt8 v10 = v7 & 1;
      sub_1FC800(1u);
LABEL_12:
      sub_1FC800(v10);
      if (v9)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v12 = v8;
        }
        else {
          Swift::UInt64 v12 = 0;
        }
        sub_1FC820(v12);
      }
      v4 += 48;
      --v3;
    }
    while (v3);
  }
}

void sub_2C120(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (void *)(a2 + 56);
    do
    {
      uint64_t v5 = *v4;
      if (*((unsigned char *)v4 - 16) == 1)
      {
        sub_1FC800(0);
        if (v5) {
          goto LABEL_9;
        }
      }
      else
      {
        Swift::UInt64 v6 = *(v4 - 3);
        sub_1FC800(1u);
        sub_1FC820(v6);
        if (v5)
        {
LABEL_9:
          sub_1FC800(1u);
          swift_bridgeObjectRetain();
          sub_1FB8C0();
          swift_bridgeObjectRelease();
          goto LABEL_4;
        }
      }
      sub_1FC800(0);
LABEL_4:
      v4 += 4;
      --v3;
    }
    while (v3);
  }
}

void sub_2C1E4(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    do
    {
      uint64_t v6 = v5 + 24 * v4;
      uint64_t v7 = *(void *)(v6 + 16);
      if (*(unsigned char *)(v6 + 8) == 1)
      {
        sub_1FC800(0);
        if (v7) {
          goto LABEL_9;
        }
      }
      else
      {
        Swift::UInt64 v8 = *(void *)v6;
        sub_1FC800(1u);
        sub_1FC820(v8);
        if (v7)
        {
LABEL_9:
          sub_1FC800(1u);
          sub_1FC7F0(*(void *)(v7 + 16));
          uint64_t v9 = *(void *)(v7 + 16);
          if (v9)
          {
            swift_bridgeObjectRetain();
            uint64_t v10 = v7 + 40;
            do
            {
              swift_bridgeObjectRetain();
              sub_1FB8C0();
              swift_bridgeObjectRelease();
              v10 += 16;
              --v9;
            }
            while (v9);
            swift_bridgeObjectRelease();
          }
          goto LABEL_4;
        }
      }
      sub_1FC800(0);
LABEL_4:
      ++v4;
    }
    while (v4 != v3);
  }
}

void sub_2C2F8(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  Swift::UInt v31 = v3;
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v30 = a2 + 32;
    do
    {
      uint64_t v5 = *(void *)(v30 + 8 * v4);
      uint64_t v32 = v4;
      if (v5)
      {
        sub_1FC800(1u);
        Swift::UInt v6 = *(void *)(v5 + 16);
        sub_1FC7F0(v6);
        Swift::UInt v34 = v6;
        if (v6)
        {
          uint64_t v33 = v5 + 32;
          swift_bridgeObjectRetain();
          uint64_t v7 = 0;
          while (1)
          {
            uint64_t v8 = v33 + (v7 << 6);
            Swift::UInt64 v10 = *(void *)(v8 + 16);
            Swift::UInt64 v9 = *(void *)(v8 + 24);
            int v11 = *(unsigned __int8 *)(v8 + 32);
            Swift::UInt32 v12 = *(_DWORD *)(v8 + 36);
            int v13 = *(unsigned __int8 *)(v8 + 40);
            Swift::UInt32 v14 = *(_DWORD *)(v8 + 44);
            int v15 = *(unsigned __int8 *)(v8 + 48);
            uint64_t v16 = *(void *)(v8 + 56);
            uint64_t v35 = v7;
            if (*(unsigned char *)(v8 + 8) == 1)
            {
              sub_1FC800(0);
            }
            else
            {
              Swift::UInt64 v17 = *(void *)v8;
              sub_1FC800(1u);
              sub_1FC820(v17);
            }
            sub_1FC820(v10);
            if (v11)
            {
              sub_1FC800(0);
              if (v13) {
                goto LABEL_24;
              }
            }
            else
            {
              sub_1FC800(1u);
              sub_1FC820(v9);
              if (v13)
              {
LABEL_24:
                sub_1FC800(0);
                if (v15) {
                  goto LABEL_25;
                }
                goto LABEL_19;
              }
            }
            sub_1FC800(1u);
            if ((v12 & 0x7FFFFFFF) != 0) {
              Swift::UInt32 v18 = v12;
            }
            else {
              Swift::UInt32 v18 = 0;
            }
            sub_1FC810(v18);
            if (v15)
            {
LABEL_25:
              sub_1FC800(0);
              goto LABEL_26;
            }
LABEL_19:
            sub_1FC800(1u);
            if ((v14 & 0x7FFFFFFF) != 0) {
              Swift::UInt32 v19 = v14;
            }
            else {
              Swift::UInt32 v19 = 0;
            }
            sub_1FC810(v19);
LABEL_26:
            Swift::UInt v20 = *(void *)(v16 + 16);
            sub_1FC7F0(v20);
            if (v20)
            {
              uint64_t v21 = v16 + 32;
              swift_bridgeObjectRetain();
              uint64_t v22 = 0;
              uint64_t v36 = v21;
              Swift::UInt v37 = v20;
              while (1)
              {
                uint64_t v23 = v21 + 24 * v22;
                uint64_t v24 = *(void *)(v23 + 16);
                if (*(unsigned char *)(v23 + 8) == 1)
                {
                  sub_1FC800(0);
                  if (v24) {
                    goto LABEL_34;
                  }
                }
                else
                {
                  Swift::UInt64 v25 = *(void *)v23;
                  sub_1FC800(1u);
                  sub_1FC820(v25);
                  if (v24)
                  {
LABEL_34:
                    sub_1FC800(1u);
                    sub_1FC7F0(*(void *)(v24 + 16));
                    uint64_t v26 = *(void *)(v24 + 16);
                    if (v26)
                    {
                      swift_bridgeObjectRetain_n();
                      uint64_t v27 = (unint64_t *)(v24 + 40);
                      do
                      {
                        uint64_t v28 = *(v27 - 1);
                        unint64_t v29 = *v27;
                        v27 += 2;
                        sub_2F5CC(v28, v29);
                        sub_2F5CC(v28, v29);
                        sub_1FB8C0();
                        swift_bridgeObjectRelease();
                        sub_3781C(v28, v29);
                        --v26;
                      }
                      while (v26);
                      swift_bridgeObjectRelease_n();
                      uint64_t v21 = v36;
                      Swift::UInt v20 = v37;
                    }
                    goto LABEL_29;
                  }
                }
                sub_1FC800(0);
LABEL_29:
                if (++v22 == v20)
                {
                  swift_bridgeObjectRelease();
                  break;
                }
              }
            }
            uint64_t v7 = v35 + 1;
            if (v35 + 1 == v34) {
              goto LABEL_3;
            }
          }
        }
      }
      else
      {
        sub_1FC800(0);
LABEL_3:
        swift_bridgeObjectRelease();
      }
      uint64_t v4 = v32 + 1;
    }
    while (v32 + 1 != v31);
  }
}

void sub_2C638(uint64_t a1, uint64_t a2)
{
  Swift::UInt v4 = *(void *)(a2 + 16);
  sub_1FC7F0(v4);
  if (v4)
  {
    uint64_t v5 = 0;
    do
    {
      uint64_t v6 = a2 + 32 + 80 * v5;
      uint64_t v7 = *(void *)(v6 + 8);
      uint64_t v31 = *(void *)(v6 + 16);
      uint64_t v28 = *(void *)(v6 + 32);
      uint64_t v29 = *(void *)(v6 + 24);
      uint64_t v26 = *(void *)(v6 + 48);
      unint64_t v27 = *(void *)(v6 + 40);
      int v30 = *(unsigned __int8 *)(v6 + 56);
      uint64_t v24 = v5;
      uint64_t v25 = *(void *)(v6 + 64);
      Swift::UInt32 v23 = *(_DWORD *)(v6 + 72);
      sub_1FC800(*(unsigned char *)v6);
      sub_1FC7F0(*(void *)(v7 + 16));
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        Swift::UInt64 v9 = (unsigned __int8 *)(v7 + 56);
        do
        {
          Swift::UInt32 v10 = *((_DWORD *)v9 - 4);
          Swift::UInt64 v11 = *((void *)v9 - 1);
          int v12 = *v9;
          sub_1FC820(*((void *)v9 - 3));
          if ((v10 & 0x7FFFFFFF) != 0) {
            Swift::UInt32 v13 = v10;
          }
          else {
            Swift::UInt32 v13 = 0;
          }
          sub_1FC810(v13);
          if (v12 == 1)
          {
            sub_1FC800(0);
          }
          else
          {
            sub_1FC800(1u);
            sub_1FC820(v11);
          }
          v9 += 32;
          --v8;
        }
        while (v8);
      }
      if (v31 == 1)
      {
        sub_1FC800(0);
        swift_bridgeObjectRetain();
        sub_2FA44(1, v29, v28, v27);
        uint64_t v14 = v25;
        swift_bridgeObjectRetain();
        uint64_t v15 = v24;
      }
      else
      {
        sub_1FC800(1u);
        swift_bridgeObjectRetain();
        sub_2FA44(v31, v29, v28, v27);
        uint64_t v14 = v25;
        swift_bridgeObjectRetain();
        sub_2FA44(v31, v29, v28, v27);
        Transport.StoreAssetRequestDetails.hash(into:)(a1);
        if (v26)
        {
          sub_1FC800(1u);
          sub_1FC7F0(*(void *)(v26 + 16));
          uint64_t v16 = *(void *)(v26 + 16);
          uint64_t v15 = v24;
          if (v16)
          {
            Swift::UInt64 v17 = (Swift::UInt64 *)(v26 + 32);
            do
            {
              Swift::UInt64 v18 = *v17++;
              sub_1FC820(v18);
              --v16;
            }
            while (v16);
          }
        }
        else
        {
          sub_1FC800(0);
          uint64_t v15 = v24;
        }
        if (v30 == 2)
        {
          sub_1FC800(0);
        }
        else
        {
          sub_1FC800(1u);
          sub_1FC800(v30 & 1);
        }
        sub_2FAB4(v31, v29, v28, v27);
      }
      sub_1FC7F0(*(void *)(v14 + 16));
      uint64_t v19 = *(void *)(v14 + 16);
      if (v19)
      {
        swift_bridgeObjectRetain();
        Swift::UInt v20 = (unint64_t *)(v14 + 40);
        do
        {
          uint64_t v21 = *(v20 - 1);
          unint64_t v22 = *v20;
          v20 += 2;
          sub_2F5CC(v21, v22);
          sub_2F5CC(v21, v22);
          sub_1FB8C0();
          swift_bridgeObjectRelease();
          sub_3781C(v21, v22);
          --v19;
        }
        while (v19);
        swift_bridgeObjectRelease();
        uint64_t v15 = v24;
      }
      uint64_t v5 = v15 + 1;
      sub_1FC810(v23);
      swift_bridgeObjectRelease();
      sub_2FAB4(v31, v29, v28, v27);
      swift_bridgeObjectRelease();
    }
    while (v5 != v4);
  }
}

void sub_2CA14(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v17 = a2 + 32;
    do
    {
      uint64_t v5 = *(void *)(v17 + 8 * v4);
      if (v5)
      {
        sub_1FC800(1u);
        Swift::UInt v6 = *(void *)(v5 + 16);
        sub_1FC7F0(v6);
        if (v6)
        {
          uint64_t v7 = 0;
          uint64_t v8 = v5 + 32;
          do
          {
            uint64_t v9 = v8 + 24 * v7;
            Swift::UInt32 v10 = *(_DWORD *)(v9 + 8);
            uint64_t v11 = *(void *)(v9 + 16);
            int v12 = *(unsigned __int8 *)(v9 + 12);
            sub_1FC820(*(void *)v9);
            if (v12 == 1)
            {
              sub_1FC800(0);
              if (v11) {
                goto LABEL_17;
              }
            }
            else
            {
              sub_1FC800(1u);
              if ((v10 & 0x7FFFFFFF) != 0) {
                Swift::UInt32 v13 = v10;
              }
              else {
                Swift::UInt32 v13 = 0;
              }
              sub_1FC810(v13);
              if (v11)
              {
LABEL_17:
                sub_1FC800(1u);
                sub_1FC7F0(*(void *)(v11 + 16));
                uint64_t v14 = *(void *)(v11 + 16);
                if (v14)
                {
                  uint64_t v15 = (Swift::UInt64 *)(v11 + 32);
                  do
                  {
                    Swift::UInt64 v16 = *v15++;
                    sub_1FC820(v16);
                    --v14;
                  }
                  while (v14);
                }
                goto LABEL_9;
              }
            }
            sub_1FC800(0);
LABEL_9:
            ++v7;
          }
          while (v7 != v6);
        }
      }
      else
      {
        sub_1FC800(0);
      }
      ++v4;
    }
    while (v4 != v3);
  }
}

void sub_2CB54(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = (unsigned __int8 *)(a2 + 80);
    do
    {
      Swift::UInt64 v5 = *((void *)v4 - 4);
      Swift::UInt64 v6 = *((void *)v4 - 3);
      Swift::UInt64 v8 = *((void *)v4 - 2);
      Swift::UInt64 v7 = *((void *)v4 - 1);
      int v9 = *v4;
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      if ((v5 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v10 = v5;
      }
      else {
        Swift::UInt64 v10 = 0;
      }
      sub_1FC820(v10);
      if ((v6 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
        Swift::UInt64 v11 = v6;
      }
      else {
        Swift::UInt64 v11 = 0;
      }
      sub_1FC820(v11);
      if (v9 == 1)
      {
        sub_1FC800(0);
      }
      else
      {
        sub_1FC800(1u);
        if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v12 = v8;
        }
        else {
          Swift::UInt64 v12 = 0;
        }
        sub_1FC820(v12);
        if ((v7 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
          Swift::UInt64 v13 = v7;
        }
        else {
          Swift::UInt64 v13 = 0;
        }
        sub_1FC820(v13);
      }
      swift_bridgeObjectRelease();
      v4 += 56;
      --v3;
    }
    while (v3);
  }
}

void sub_2CC3C(uint64_t a1, uint64_t a2)
{
  Swift::UInt v3 = *(void *)(a2 + 16);
  sub_1FC7F0(v3);
  if (v3)
  {
    uint64_t v4 = 0;
    uint64_t v5 = a2 + 32;
    do
    {
      Swift::UInt64 v6 = (Swift::UInt64 *)(v5 + 16 * v4);
      Swift::UInt64 v7 = v6[1];
      sub_1FC820(*v6);
      sub_1FC7F0(*(void *)(v7 + 16));
      uint64_t v8 = *(void *)(v7 + 16);
      if (v8)
      {
        int v9 = (Swift::UInt64 *)(v7 + 32);
        do
        {
          Swift::UInt64 v10 = *v9++;
          sub_1FC820(v10);
          --v8;
        }
        while (v8);
      }
      ++v4;
    }
    while (v4 != v3);
  }
}

uint64_t _s20BooksPersonalization9TransportO014BookIdToSeriesE5EntryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 25);
  double v3 = *(double *)(a1 + 32);
  char v4 = *(unsigned char *)(a1 + 40);
  char v5 = *(unsigned char *)(a2 + 8);
  int v6 = *(unsigned __int8 *)(a2 + 25);
  char v7 = *(unsigned char *)(a2 + 40);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v5 = 1;
    }
    if (v5) {
      return 0;
    }
  }
  if (*(unsigned char *)(a1 + 24))
  {
    if (!*(unsigned char *)(a2 + 24)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) == *(void *)(a2 + 16)) {
      char v8 = *(unsigned char *)(a2 + 24);
    }
    else {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  if (v2 == 2)
  {
    if (v6 != 2) {
      return 0;
    }
  }
  else
  {
    uint64_t result = 0;
    BOOL v10 = (v2 & 1) == 0;
    if (v6 == 2 || ((v10 ^ v6) & 1) == 0) {
      return result;
    }
  }
  if (v4)
  {
    if ((*(unsigned char *)(a2 + 40) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (v3 != *(double *)(a2 + 32)) {
      char v7 = 1;
    }
    if (v7) {
      return 0;
    }
  }
  return 1;
}

BOOL _s20BooksPersonalization9TransportO021BookIdToDeduplicationE5EntryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  uint64_t v7 = *(void *)(a2 + 24);
  if (v4)
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v8 = *(unsigned char *)(a2 + 8);
    }
    else {
      char v8 = 1;
    }
    if (v8) {
      return 0;
    }
  }
  if (v6) {
    return v7 && (v5 == *(void *)(a2 + 16) && v6 == v7 || (sub_1FC5F0() & 1) != 0);
  }
  return !v7;
}

BOOL _s20BooksPersonalization9TransportO24StoreAssetRequestDetailsV2eeoiySbAE_AEtFZ_0(void *a1, uint64_t *a2)
{
  int v2 = (void *)a1[1];
  uint64_t v4 = a1[2];
  unint64_t v3 = a1[3];
  uint64_t v6 = *a2;
  uint64_t v5 = (void *)a2[1];
  uint64_t v8 = a2[2];
  unint64_t v7 = a2[3];
  if (*a1)
  {
    if (!v6) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v9 = swift_bridgeObjectRetain();
    char v10 = sub_180EC(v9, v6);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v10 & 1) == 0) {
      return 0;
    }
  }
  else if (v6)
  {
    return 0;
  }
  if (v2)
  {
    if (!v5 || !sub_182A8(v2, v5)) {
      return 0;
    }
  }
  else if (v5)
  {
    return 0;
  }
  if (v3 == 3) {
    return v7 == 3;
  }
  if (v7 != 3)
  {
    uint64_t v11 = 1162170950;
    unint64_t v12 = 0xE400000000000000;
    uint64_t v13 = 1145651536;
    unint64_t v14 = 0xE300000000000000;
    uint64_t v15 = 5852737;
    if (v3 != 2)
    {
      uint64_t v15 = v4;
      unint64_t v14 = v3;
    }
    if (v3 != 1)
    {
      uint64_t v13 = v15;
      unint64_t v12 = v14;
    }
    if (v3) {
      uint64_t v16 = v13;
    }
    else {
      uint64_t v16 = 1162170950;
    }
    if (v3) {
      unint64_t v17 = v12;
    }
    else {
      unint64_t v17 = 0xE400000000000000;
    }
    if (v7)
    {
      if (v7 == 1)
      {
        unint64_t v18 = 0xE400000000000000;
        uint64_t v11 = 1145651536;
      }
      else if (v7 == 2)
      {
        unint64_t v18 = 0xE300000000000000;
        uint64_t v11 = 5852737;
      }
      else
      {
        uint64_t v11 = v8;
        unint64_t v18 = v7;
      }
    }
    else
    {
      unint64_t v18 = 0xE400000000000000;
    }
    if (v16 == v11 && v17 == v18)
    {
      sub_2F818(v4, v3);
      sub_2F818(v4, v3);
      sub_2F818(v8, v7);
      sub_2F818(v4, v3);
      sub_2F818(v8, v7);
      swift_bridgeObjectRelease_n();
      sub_2F828(v8, v7);
      sub_2F828(v4, v3);
      sub_2F828(v4, v3);
      return 1;
    }
    char v19 = sub_1FC5F0();
    sub_2F818(v4, v3);
    sub_2F818(v4, v3);
    sub_2F818(v8, v7);
    sub_2F818(v4, v3);
    sub_2F818(v8, v7);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2F828(v8, v7);
    sub_2F828(v4, v3);
    sub_2F828(v4, v3);
    if (v19) {
      return 1;
    }
  }
  return 0;
}

uint64_t _s20BooksPersonalization9TransportO0A21RecommendationRequestV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(void **)(a1 + 32);
  int v3 = *(unsigned __int8 *)(a1 + 40);
  uint64_t v4 = *(void **)(a2 + 32);
  int v5 = *(unsigned __int8 *)(a2 + 40);
  long long v6 = *(_OWORD *)(a1 + 16);
  v10[0] = *(_OWORD *)a1;
  v10[1] = v6;
  long long v7 = *(_OWORD *)(a2 + 16);
  v9[0] = *(_OWORD *)a2;
  v9[1] = v7;
  if (!_s20BooksPersonalization9TransportO24StoreAssetRequestDetailsV2eeoiySbAE_AEtFZ_0(v10, (uint64_t *)v9)) {
    return 0;
  }
  if (v2)
  {
    if (!v4 || !sub_182A8(v2, v4)) {
      return 0;
    }
LABEL_7:
    if (v3 == 2)
    {
      if (v5 != 2) {
        return 0;
      }
    }
    else if (v5 == 2 || ((((v3 & 1) == 0) ^ v5) & 1) == 0)
    {
      return 0;
    }
    return 1;
  }
  if (!v4) {
    goto LABEL_7;
  }
  return 0;
}

BOOL _s20BooksPersonalization9TransportO12BookAffinityV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  uint64_t v4 = *(void **)(a1 + 16);
  int v5 = *(unsigned __int8 *)(a2 + 12);
  long long v6 = *(void **)(a2 + 16);
  if (*(unsigned char *)(a1 + 12))
  {
    if (!v5) {
      return 0;
    }
  }
  else
  {
    if (*(float *)(a1 + 8) == *(float *)(a2 + 8)) {
      char v7 = v5;
    }
    else {
      char v7 = 1;
    }
    if (v7) {
      return 0;
    }
  }
  if (v4) {
    return v6 && sub_182A8(v4, v6);
  }
  return !v6;
}

unint64_t sub_2D1AC()
{
  unint64_t result = qword_26C5F0;
  if (!qword_26C5F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C5F0);
  }
  return result;
}

unint64_t sub_2D200()
{
  unint64_t result = qword_26C620;
  if (!qword_26C620)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C620);
  }
  return result;
}

unint64_t sub_2D254()
{
  unint64_t result = qword_26C638;
  if (!qword_26C638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C638);
  }
  return result;
}

unint64_t sub_2D2A8()
{
  unint64_t result = qword_26C650;
  if (!qword_26C650)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C650);
  }
  return result;
}

uint64_t _s20BooksPersonalization9TransportO15RecommendedItemV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v4 = *(unsigned char *)(a1 + 8);
  uint64_t v5 = *(void *)(a1 + 16);
  uint64_t v6 = *(void *)(a1 + 24);
  char v7 = *(unsigned char *)(a1 + 32);
  float v8 = *(float *)(a1 + 36);
  char v9 = *(unsigned char *)(a1 + 40);
  float v10 = *(float *)(a1 + 44);
  char v11 = *(unsigned char *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  char v13 = *(unsigned char *)(a2 + 8);
  uint64_t v14 = *(void *)(a2 + 16);
  uint64_t v15 = *(void *)(a2 + 24);
  int v16 = *(unsigned __int8 *)(a2 + 32);
  float v17 = *(float *)(a2 + 36);
  int v18 = *(unsigned __int8 *)(a2 + 40);
  float v19 = *(float *)(a2 + 44);
  int v20 = *(unsigned __int8 *)(a2 + 48);
  uint64_t v21 = *(void *)(a2 + 56);
  if (v4)
  {
    if (v5 == v14) {
      char v22 = v13;
    }
    else {
      char v22 = 0;
    }
    if ((v22 & 1) == 0) {
      return 0;
    }
  }
  else if ((v13 & 1) != 0 || *(void *)a1 != *(void *)a2 || v5 != v14)
  {
    return 0;
  }
  if (v7)
  {
    if (!v16) {
      return 0;
    }
  }
  else
  {
    if (v6 == v15) {
      char v23 = v16;
    }
    else {
      char v23 = 1;
    }
    if (v23) {
      return 0;
    }
  }
  if (v9)
  {
    if (!v18) {
      return 0;
    }
  }
  else
  {
    if (v8 == v17) {
      char v24 = v18;
    }
    else {
      char v24 = 1;
    }
    if (v24) {
      return 0;
    }
  }
  if (v11)
  {
    if (!v20) {
      return 0;
    }
  }
  else
  {
    if (v10 == v19) {
      char v26 = v20;
    }
    else {
      char v26 = 1;
    }
    if (v26) {
      return 0;
    }
  }
  return sub_17DC0(v12, v21);
}

BOOL _s20BooksPersonalization9TransportO16InferredFromInfoV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  char v2 = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 16);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v2 = 1;
    }
    if (v2) {
      return 0;
    }
  }
  if (*(void *)(a1 + 16))
  {
    if (!v3) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v4 = swift_bridgeObjectRetain();
    char v5 = sub_162C4(v4, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return (v5 & 1) != 0;
  }
  return !v3;
}

BOOL _s20BooksPersonalization9TransportO21BookIdToMetadataEntryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  uint64_t v4 = *(void **)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  int v7 = *(unsigned __int8 *)(a2 + 16);
  float v8 = *(void **)(a2 + 24);
  uint64_t v10 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!v7) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) == *(double *)(a2 + 8)) {
      char v11 = v7;
    }
    else {
      char v11 = 1;
    }
    if (v11) {
      return 0;
    }
  }
  if (sub_178D0(v4, v8))
  {
    if (v6) {
      return v9 && (v5 == v10 && v6 == v9 || (sub_1FC5F0() & 1) != 0);
    }
    if (!v9) {
      return 1;
    }
  }
  return 0;
}

BOOL _s20BooksPersonalization9TransportO26RecommendationBlockRequestV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a1 + 8);
  char v2 = *(void **)(a1 + 16);
  uint64_t v5 = *(void *)(a1 + 24);
  unint64_t v4 = *(void *)(a1 + 32);
  int v6 = *(_DWORD *)(a1 + 40);
  int v7 = *(void **)(a1 + 48);
  unint64_t v8 = *(void *)(a2 + 8);
  uint64_t v9 = *(void **)(a2 + 16);
  uint64_t v10 = *(void *)(a2 + 24);
  unint64_t v11 = *(void *)(a2 + 32);
  uint64_t v12 = *(void **)(a2 + 48);
  if (v3 == 2)
  {
    int v41 = *(_DWORD *)(a2 + 40);
    int v42 = *(unsigned __int8 *)(a2 + 44);
    char v43 = *(unsigned char *)(a1 + 44);
    if (v8 != 2) {
      return 0;
    }
  }
  else
  {
    if (v8 == 2) {
      return 0;
    }
    uint64_t v37 = *(void *)(a1 + 24);
    int v41 = *(_DWORD *)(a2 + 40);
    int v42 = *(unsigned __int8 *)(a2 + 44);
    char v43 = *(unsigned char *)(a1 + 44);
    int v38 = *(_DWORD *)(a1 + 40);
    unsigned __int8 v39 = *(void **)(a2 + 48);
    int v40 = *(void **)(a1 + 48);
    uint64_t v13 = *(void *)a1;
    uint64_t v14 = *(void *)a2;
    uint64_t v15 = 0x4B4F4F4245;
    uint64_t v16 = 0x4F4F424F49445541;
    unint64_t v17 = 0xE90000000000004BLL;
    if (v3 != 1)
    {
      uint64_t v16 = *(void *)a1;
      unint64_t v17 = *(void *)(a1 + 8);
    }
    if (v3) {
      uint64_t v18 = v16;
    }
    else {
      uint64_t v18 = 0x4B4F4F4245;
    }
    if (v3) {
      unint64_t v19 = v17;
    }
    else {
      unint64_t v19 = 0xE500000000000000;
    }
    unint64_t v36 = v4;
    if (v8)
    {
      if (v8 == 1)
      {
        uint64_t v15 = 0x4F4F424F49445541;
        unint64_t v20 = 0xE90000000000004BLL;
      }
      else
      {
        uint64_t v15 = *(void *)a2;
        unint64_t v20 = *(void *)(a2 + 8);
      }
    }
    else
    {
      unint64_t v20 = 0xE500000000000000;
    }
    uint64_t v21 = *(void *)(a2 + 24);
    if (v18 == v15 && v19 == v20)
    {
      sub_2E638(v13, v3);
      sub_2E638(v13, v3);
      sub_2E638(v14, v8);
      sub_2E638(v13, v3);
      sub_2E638(v14, v8);
      swift_bridgeObjectRelease_n();
      sub_2E648(v14, v8);
      sub_2E648(v13, v3);
      sub_2E648(v13, v3);
      uint64_t v12 = v39;
      int v7 = v40;
      int v6 = v38;
      uint64_t v10 = v21;
      unint64_t v4 = v36;
      uint64_t v5 = v37;
    }
    else
    {
      char v35 = sub_1FC5F0();
      sub_2E638(v13, v3);
      sub_2E638(v13, v3);
      sub_2E638(v14, v8);
      sub_2E638(v13, v3);
      sub_2E638(v14, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2E648(v14, v8);
      sub_2E648(v13, v3);
      sub_2E648(v13, v3);
      BOOL result = 0;
      uint64_t v12 = v39;
      int v7 = v40;
      int v6 = v38;
      uint64_t v10 = v21;
      unint64_t v4 = v36;
      uint64_t v5 = v37;
      if ((v35 & 1) == 0) {
        return result;
      }
    }
  }
  if (v2)
  {
    if (!v9) {
      return 0;
    }
    uint64_t v23 = v10;
    BOOL v24 = sub_182A8(v2, v9);
    uint64_t v10 = v23;
    if (!v24) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v4 == 3)
  {
    if (v11 != 3) {
      return 0;
    }
  }
  else
  {
    if (v11 == 3) {
      return 0;
    }
    uint64_t v25 = 1162170950;
    if (v4)
    {
      if (v4 == 1)
      {
        unint64_t v26 = 0xE400000000000000;
        uint64_t v27 = 1145651536;
      }
      else if (v4 == 2)
      {
        unint64_t v26 = 0xE300000000000000;
        uint64_t v27 = 5852737;
      }
      else
      {
        uint64_t v27 = v5;
        unint64_t v26 = v4;
      }
    }
    else
    {
      unint64_t v26 = 0xE400000000000000;
      uint64_t v27 = 1162170950;
    }
    int v28 = v6;
    if (v11)
    {
      if (v11 == 1)
      {
        unint64_t v29 = 0xE400000000000000;
        uint64_t v25 = 1145651536;
      }
      else if (v11 == 2)
      {
        unint64_t v29 = 0xE300000000000000;
        uint64_t v25 = 5852737;
      }
      else
      {
        uint64_t v25 = v10;
        unint64_t v29 = v11;
      }
    }
    else
    {
      unint64_t v29 = 0xE400000000000000;
    }
    if (v27 == v25 && v26 == v29)
    {
      uint64_t v30 = v10;
      sub_2F818(v5, v4);
      sub_2F818(v5, v4);
      sub_2F818(v30, v11);
      sub_2F818(v5, v4);
      sub_2F818(v30, v11);
      swift_bridgeObjectRelease_n();
      sub_2F828(v30, v11);
      sub_2F828(v5, v4);
      sub_2F828(v5, v4);
      int v6 = v28;
    }
    else
    {
      uint64_t v31 = v10;
      uint64_t v32 = v5;
      char v33 = sub_1FC5F0();
      sub_2F818(v32, v4);
      sub_2F818(v32, v4);
      sub_2F818(v31, v11);
      sub_2F818(v32, v4);
      sub_2F818(v31, v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_2F828(v31, v11);
      sub_2F828(v32, v4);
      sub_2F828(v32, v4);
      BOOL result = 0;
      int v6 = v28;
      if ((v33 & 1) == 0) {
        return result;
      }
    }
  }
  if (v43)
  {
    if (!v42) {
      return 0;
    }
  }
  else
  {
    char v34 = v42;
    if (v6 != v41) {
      char v34 = 1;
    }
    if (v34) {
      return 0;
    }
  }
  if (v7) {
    return v12 && sub_182A8(v7, v12);
  }
  return !v12;
}

BOOL _s20BooksPersonalization9TransportO21RecommendationRequestV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  int v2 = *(unsigned __int8 *)(a1 + 16);
  uint64_t v4 = *(void *)(a1 + 24);
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v5 = *(void **)(a1 + 40);
  int v6 = *(unsigned __int8 *)(a2 + 16);
  uint64_t v8 = *(void *)(a2 + 24);
  uint64_t v7 = *(void *)(a2 + 32);
  uint64_t v9 = *(void **)(a2 + 40);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v2 != v6) {
      return 0;
    }
LABEL_7:
    if (v4)
    {
      if (!v8 || (sub_1651C(v4, v8) & 1) == 0) {
        return 0;
      }
    }
    else if (v8)
    {
      return 0;
    }
    if (sub_17B00(v3, v7))
    {
      if (v5) {
        return v9 && (sub_178D0(v5, v9) & 1) != 0;
      }
      if (!v9) {
        return 1;
      }
    }
    return 0;
  }
  char v10 = sub_1FC5F0();
  BOOL result = 0;
  if ((v10 & 1) != 0 && ((v2 ^ v6) & 1) == 0) {
    goto LABEL_7;
  }
  return result;
}

uint64_t _s20BooksPersonalization9TransportO22BookIdToMediaTypeEntryV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 16);
  unint64_t v2 = *(void *)(a1 + 24);
  char v4 = *(unsigned char *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (*(unsigned char *)(a1 + 8))
  {
    if (!*(unsigned char *)(a2 + 8)) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 != *(void *)a2) {
      char v4 = 1;
    }
    if (v4) {
      return 0;
    }
  }
  if (v2 == 2) {
    return v5 == 2;
  }
  if (v5 != 2)
  {
    uint64_t v7 = 0x4F4F424F49445541;
    unint64_t v8 = 0xE90000000000004BLL;
    if (v2 != 1)
    {
      uint64_t v7 = *(void *)(a1 + 16);
      unint64_t v8 = *(void *)(a1 + 24);
    }
    if (v2) {
      uint64_t v9 = v7;
    }
    else {
      uint64_t v9 = 0x4B4F4F4245;
    }
    if (v2) {
      unint64_t v10 = v8;
    }
    else {
      unint64_t v10 = 0xE500000000000000;
    }
    if (v5)
    {
      if (v5 == 1)
      {
        unint64_t v11 = 0xE90000000000004BLL;
        if (v9 != 0x4F4F424F49445541) {
          goto LABEL_28;
        }
      }
      else
      {
        unint64_t v11 = *(void *)(a2 + 24);
        if (v9 != v6) {
          goto LABEL_28;
        }
      }
    }
    else
    {
      unint64_t v11 = 0xE500000000000000;
      if (v9 != 0x4B4F4F4245)
      {
LABEL_28:
        char v12 = sub_1FC5F0();
        sub_2E638(v3, v2);
        sub_2E638(v3, v2);
        sub_2E638(v6, v5);
        sub_2E638(v3, v2);
        sub_2E638(v6, v5);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_2E648(v6, v5);
        sub_2E648(v3, v2);
        sub_2E648(v3, v2);
        return (v12 & 1) != 0;
      }
    }
    if (v10 == v11)
    {
      sub_2E638(v3, v2);
      sub_2E638(v3, v2);
      sub_2E638(v6, v5);
      sub_2E638(v3, v2);
      sub_2E638(v6, v5);
      swift_bridgeObjectRelease_n();
      sub_2E648(v6, v5);
      sub_2E648(v3, v2);
      sub_2E648(v3, v2);
      return 1;
    }
    goto LABEL_28;
  }
  return 0;
}

uint64_t _s20BooksPersonalization9TransportO22RecommendationResponseV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v7 = a2[1];
  uint64_t v9 = a2[2];
  uint64_t v8 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  if ((sub_17998(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (!v7 || (sub_16C4C(v2, v7) & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v4)
  {
    if (!v9 || (sub_16D0C(v4, v9) & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v3)
  {
    if (!v8 || (sub_193EC(v3, v8) & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v6)
  {
    if (!v11 || (sub_17068(v6, v11) & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  if (v5)
  {
    if (v10 && (sub_193EC(v5, v10) & 1) != 0) {
      return 1;
    }
  }
  else if (!v10)
  {
    return 1;
  }
  return 0;
}

BOOL sub_2DDE4(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  char v5 = *(unsigned char *)(a1 + 8);
  uint64_t v6 = *(void *)(a1 + 16);
  int v7 = *(unsigned __int8 *)(a2 + 8);
  uint64_t v8 = *(void *)(a2 + 16);
  if (v5)
  {
    if (!v7) {
      return 0;
    }
  }
  else
  {
    if (*(void *)a1 == *(void *)a2) {
      char v9 = v7;
    }
    else {
      char v9 = 1;
    }
    if (v9) {
      return 0;
    }
  }
  if (v6) {
    return v8 && (a3() & 1) != 0;
  }
  return !v8;
}

uint64_t _s20BooksPersonalization9TransportO23RecommendationRequestV2V2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = (void *)a1[3];
  uint64_t v5 = a2[2];
  uint64_t v4 = (void *)a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1FC5F0(), result = 0, (v7 & 1) != 0))
  {
    if (sub_17150(v2, v5))
    {
      if (v3)
      {
        if (v4 && (sub_178D0(v3, v4) & 1) != 0) {
          return 1;
        }
      }
      else if (!v4)
      {
        return 1;
      }
    }
    return 0;
  }
  return result;
}

uint64_t _s20BooksPersonalization9TransportO24RecommendationResponseV2V2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = a1[1];
  uint64_t v3 = a1[2];
  uint64_t v4 = a1[3];
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  uint64_t v16 = a1[7];
  uint64_t v7 = a2[1];
  uint64_t v8 = a2[2];
  uint64_t v9 = a2[3];
  uint64_t v11 = a2[4];
  uint64_t v10 = a2[5];
  uint64_t v17 = a2[6];
  uint64_t v18 = a1[6];
  uint64_t v15 = a2[7];
  if ((sub_1661C(*a1, *a2) & 1) == 0) {
    return 0;
  }
  if (v2)
  {
    if (!v7 || (sub_16B00(v2, v7) & 1) == 0) {
      return 0;
    }
  }
  else if (v7)
  {
    return 0;
  }
  if (v3)
  {
    if (!v8 || (sub_16C4C(v3, v8) & 1) == 0) {
      return 0;
    }
  }
  else if (v8)
  {
    return 0;
  }
  if (v4)
  {
    if (!v9 || (sub_16D0C(v4, v9) & 1) == 0) {
      return 0;
    }
  }
  else if (v9)
  {
    return 0;
  }
  if (v6)
  {
    if (!v11) {
      return 0;
    }
    swift_bridgeObjectRetain();
    uint64_t v12 = swift_bridgeObjectRetain();
    char v13 = sub_16E04(v12, v11);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0) {
      return 0;
    }
  }
  else if (v11)
  {
    return 0;
  }
  if (v5)
  {
    if (!v10 || (sub_193EC(v5, v10) & 1) == 0) {
      return 0;
    }
  }
  else if (v10)
  {
    return 0;
  }
  if (v18)
  {
    if (!v17 || (sub_17068(v18, v17) & 1) == 0) {
      return 0;
    }
  }
  else if (v17)
  {
    return 0;
  }
  if (v16)
  {
    if (v15 && (sub_193EC(v16, v15) & 1) != 0) {
      return 1;
    }
  }
  else if (!v15)
  {
    return 1;
  }
  return 0;
}

uint64_t _s20BooksPersonalization9TransportO28RecommendationBlockRequestV2V2eeoiySbAE_AEtFZ_0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v20 = *((void *)a1 + 3);
  unint64_t v21 = *((void *)a1 + 5);
  uint64_t v23 = *((void *)a1 + 4);
  uint64_t v24 = *((void *)a1 + 6);
  unsigned __int8 v22 = a1[56];
  uint64_t v19 = *((void *)a1 + 8);
  int v2 = *((_DWORD *)a1 + 18);
  uint64_t v3 = *((void *)a2 + 3);
  uint64_t v4 = *((void *)a2 + 4);
  unint64_t v6 = *((void *)a2 + 5);
  uint64_t v5 = *((void *)a2 + 6);
  unsigned __int8 v7 = a2[56];
  uint64_t v8 = *((void *)a2 + 8);
  int v9 = *((_DWORD *)a2 + 18);
  uint64_t v10 = *((void *)a2 + 2);
  uint64_t v11 = *((void *)a1 + 2);
  if ((sub_16494(*((void *)a1 + 1), *((void *)a2 + 1)) & 1) == 0) {
    return 0;
  }
  int v16 = v9;
  unint64_t v17 = v6;
  if (v11 == 1)
  {
    uint64_t v12 = v10;
    if (v10 == 1) {
      return sub_162C4(v19, v8) & (v2 == v16);
    }
    goto LABEL_8;
  }
  v27[0] = v11;
  v27[1] = v20;
  uint64_t v28 = v23;
  unint64_t v29 = v21;
  uint64_t v30 = v24;
  unsigned __int8 v31 = v22;
  uint64_t v12 = v10;
  if (v10 == 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2F818(v23, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2F818(v23, v21);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2F828(v23, v21);
    swift_bridgeObjectRelease();
LABEL_8:
    sub_2FA44(v12, v3, v4, v17);
    sub_2FAB4(v11, v20, v23, v21);
    sub_2FAB4(v12, v3, v4, v17);
    return 0;
  }
  v25[0] = v10;
  v25[1] = v3;
  v25[2] = v4;
  v25[3] = v17;
  v25[4] = v5;
  unsigned __int8 v26 = v7;
  sub_2FA44(v11, v20, v23, v21);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_2F818(v23, v21);
  swift_bridgeObjectRetain();
  char v18 = _s20BooksPersonalization9TransportO0A21RecommendationRequestV2eeoiySbAE_AEtFZ_0((uint64_t)v27, (uint64_t)v25);
  uint64_t v14 = v28;
  unint64_t v15 = v29;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_2F828(v14, v15);
  swift_bridgeObjectRelease();
  sub_2FAB4(v11, v20, v23, v21);
  if ((v18 & 1) == 0) {
    return 0;
  }
  return sub_162C4(v19, v8) & (v2 == v16);
}

uint64_t _s20BooksPersonalization9TransportO8SeedBookV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)a1 != *(void *)a2 || *(float *)(a1 + 8) != *(float *)(a2 + 8)) {
    return 0;
  }
  char v3 = *(unsigned char *)(a2 + 24);
  if (*(unsigned char *)(a1 + 24))
  {
    if ((*(unsigned char *)(a2 + 24) & 1) == 0) {
      return 0;
    }
  }
  else
  {
    if (*(void *)(a1 + 16) != *(void *)(a2 + 16)) {
      char v3 = 1;
    }
    if (v3) {
      return 0;
    }
  }
  return 1;
}

uint64_t _s20BooksPersonalization9TransportO9DiagnosisV2eeoiySbAE_AEtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  unint64_t v2 = a1[1];
  uint64_t v4 = a1[2];
  unint64_t v5 = a1[3];
  uint64_t v6 = a1[6];
  uint64_t v7 = a1[7];
  uint64_t v8 = *a2;
  unint64_t v9 = a2[1];
  uint64_t v11 = a2[2];
  unint64_t v10 = a2[3];
  uint64_t v28 = a2[4];
  uint64_t v29 = a1[4];
  uint64_t v30 = a2[5];
  uint64_t v31 = a1[5];
  unint64_t v12 = 0xE700000000000000;
  uint64_t v13 = 0x474E494E524157;
  if (v2 != 1)
  {
    uint64_t v13 = *a1;
    unint64_t v12 = a1[1];
  }
  if (v2) {
    uint64_t v14 = v13;
  }
  else {
    uint64_t v14 = 0x524F525245;
  }
  if (v2) {
    unint64_t v15 = v12;
  }
  else {
    unint64_t v15 = 0xE500000000000000;
  }
  unint64_t v16 = 0xE700000000000000;
  uint64_t v17 = 0x474E494E524157;
  if (v9 != 1)
  {
    uint64_t v17 = *a2;
    unint64_t v16 = a2[1];
  }
  if (v9) {
    uint64_t v18 = v17;
  }
  else {
    uint64_t v18 = 0x524F525245;
  }
  if (v9) {
    unint64_t v19 = v16;
  }
  else {
    unint64_t v19 = 0xE500000000000000;
  }
  uint64_t v26 = v7;
  uint64_t v27 = v6;
  uint64_t v24 = a2[7];
  uint64_t v25 = a2[6];
  if (v14 == v18 && v15 == v19)
  {
    sub_2F5CC(v8, v9);
    sub_2F5CC(v3, v2);
    sub_2F5CC(v3, v2);
    sub_2F5CC(v8, v9);
    swift_bridgeObjectRelease_n();
    sub_3781C(v8, v9);
    sub_3781C(v3, v2);
  }
  else
  {
    char v23 = sub_1FC5F0();
    sub_2F5CC(v8, v9);
    sub_2F5CC(v3, v2);
    sub_2F5CC(v3, v2);
    sub_2F5CC(v8, v9);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_3781C(v8, v9);
    sub_3781C(v3, v2);
    uint64_t result = 0;
    if ((v23 & 1) == 0) {
      return result;
    }
  }
  sub_306DC(v4, v5);
  sub_306DC(v11, v10);
  char v21 = sub_1D7538(v4, v5, v11, v10);
  sub_306F0(v11, v10);
  sub_306F0(v4, v5);
  if ((v21 & 1) == 0) {
    return 0;
  }
  if (!v31)
  {
    if (!v30)
    {
LABEL_31:
      if (v27 == v25 && v26 == v24) {
        return 1;
      }
      return sub_1FC5F0();
    }
    return 0;
  }
  if (!v30) {
    return 0;
  }
  if (v29 == v28 && v31 == v30) {
    goto LABEL_31;
  }
  char v22 = sub_1FC5F0();
  uint64_t result = 0;
  if (v22) {
    goto LABEL_31;
  }
  return result;
}

uint64_t sub_2E638(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_2F5CC(a1, a2);
  }
  return a1;
}

uint64_t sub_2E648(uint64_t a1, unint64_t a2)
{
  if (a2 != 2) {
    return sub_3781C(a1, a2);
  }
  return a1;
}

unint64_t sub_2E658()
{
  unint64_t result = qword_26C660;
  if (!qword_26C660)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C660);
  }
  return result;
}

unint64_t sub_2E6AC()
{
  unint64_t result = qword_26C668;
  if (!qword_26C668)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C668);
  }
  return result;
}

unint64_t sub_2E700()
{
  unint64_t result = qword_26C670;
  if (!qword_26C670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C670);
  }
  return result;
}

unint64_t sub_2E754()
{
  unint64_t result = qword_26C680;
  if (!qword_26C680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C680);
  }
  return result;
}

unint64_t sub_2E7A8()
{
  unint64_t result = qword_26C688;
  if (!qword_26C688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C688);
  }
  return result;
}

unint64_t sub_2E7FC()
{
  unint64_t result = qword_26C698;
  if (!qword_26C698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C698);
  }
  return result;
}

unint64_t sub_2E850()
{
  unint64_t result = qword_26C6B0;
  if (!qword_26C6B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C6B0);
  }
  return result;
}

unint64_t sub_2E8A4()
{
  unint64_t result = qword_26C6B8;
  if (!qword_26C6B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C6B8);
  }
  return result;
}

unint64_t sub_2E8F8()
{
  unint64_t result = qword_26C6D0;
  if (!qword_26C6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C6D0);
  }
  return result;
}

unint64_t sub_2E94C()
{
  unint64_t result = qword_26C6F0;
  if (!qword_26C6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C6F0);
  }
  return result;
}

unint64_t sub_2E9A0()
{
  unint64_t result = qword_26C700;
  if (!qword_26C700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C700);
  }
  return result;
}

unint64_t sub_2E9F4()
{
  unint64_t result = qword_26C718;
  if (!qword_26C718)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C718);
  }
  return result;
}

unint64_t sub_2EA48()
{
  unint64_t result = qword_26C730;
  if (!qword_26C730)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C730);
  }
  return result;
}

unint64_t sub_2EA9C()
{
  unint64_t result = qword_26C748;
  if (!qword_26C748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C748);
  }
  return result;
}

unint64_t sub_2EAF0()
{
  unint64_t result = qword_26C760;
  if (!qword_26C760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C760);
  }
  return result;
}

unint64_t sub_2EB44()
{
  unint64_t result = qword_26C778;
  if (!qword_26C778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C778);
  }
  return result;
}

unint64_t sub_2EB98()
{
  unint64_t result = qword_26C790;
  if (!qword_26C790)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C790);
  }
  return result;
}

unint64_t sub_2EBEC()
{
  unint64_t result = qword_26C7A8;
  if (!qword_26C7A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C7A8);
  }
  return result;
}

unint64_t sub_2EC40()
{
  unint64_t result = qword_26C7C0;
  if (!qword_26C7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C7C0);
  }
  return result;
}

unint64_t sub_2EC94()
{
  unint64_t result = qword_26C7D0;
  if (!qword_26C7D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C7D0);
  }
  return result;
}

unint64_t sub_2ECE8()
{
  unint64_t result = qword_26C7E0;
  if (!qword_26C7E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C7E0);
  }
  return result;
}

unint64_t sub_2ED3C()
{
  unint64_t result = qword_26C7F0;
  if (!qword_26C7F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C7F0);
  }
  return result;
}

unint64_t sub_2ED90()
{
  unint64_t result = qword_26C800;
  if (!qword_26C800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C800);
  }
  return result;
}

unint64_t sub_2EDE4()
{
  unint64_t result = qword_26C810;
  if (!qword_26C810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C810);
  }
  return result;
}

unint64_t sub_2EE38()
{
  unint64_t result = qword_26C820;
  if (!qword_26C820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C820);
  }
  return result;
}

unint64_t sub_2EE8C()
{
  unint64_t result = qword_26C838;
  if (!qword_26C838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C838);
  }
  return result;
}

unint64_t sub_2EEE0()
{
  unint64_t result = qword_26C850;
  if (!qword_26C850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C850);
  }
  return result;
}

unint64_t sub_2EF34()
{
  unint64_t result = qword_26C868;
  if (!qword_26C868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C868);
  }
  return result;
}

unint64_t sub_2EF88()
{
  unint64_t result = qword_26C878;
  if (!qword_26C878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C878);
  }
  return result;
}

unint64_t sub_2EFDC()
{
  unint64_t result = qword_26C890;
  if (!qword_26C890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C890);
  }
  return result;
}

unint64_t sub_2F030()
{
  unint64_t result = qword_26C8A8;
  if (!qword_26C8A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C8A8);
  }
  return result;
}

unint64_t sub_2F084()
{
  unint64_t result = qword_26C8B8;
  if (!qword_26C8B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C8B8);
  }
  return result;
}

uint64_t sub_2F0D8(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_2F138()
{
  unint64_t result = qword_26C8E8;
  if (!qword_26C8E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C8E8);
  }
  return result;
}

unint64_t sub_2F18C()
{
  unint64_t result = qword_26C900;
  if (!qword_26C900)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C900);
  }
  return result;
}

unint64_t sub_2F1E0()
{
  unint64_t result = qword_26C918;
  if (!qword_26C918)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C918);
  }
  return result;
}

unint64_t sub_2F234()
{
  unint64_t result = qword_26C928;
  if (!qword_26C928)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C928);
  }
  return result;
}

unint64_t sub_2F288()
{
  unint64_t result = qword_26C940;
  if (!qword_26C940)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C940);
  }
  return result;
}

unint64_t sub_2F2DC()
{
  unint64_t result = qword_26C958;
  if (!qword_26C958)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C958);
  }
  return result;
}

unint64_t sub_2F330()
{
  unint64_t result = qword_26C970;
  if (!qword_26C970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C970);
  }
  return result;
}

unint64_t sub_2F384()
{
  unint64_t result = qword_26C988;
  if (!qword_26C988)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C988);
  }
  return result;
}

unint64_t sub_2F3D8()
{
  unint64_t result = qword_26C9A0;
  if (!qword_26C9A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C9A0);
  }
  return result;
}

unint64_t sub_2F42C()
{
  unint64_t result = qword_26C9A8;
  if (!qword_26C9A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C9A8);
  }
  return result;
}

unint64_t sub_2F480()
{
  unint64_t result = qword_26C9B8;
  if (!qword_26C9B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C9B8);
  }
  return result;
}

uint64_t _s20BooksPersonalization9TransportO11MethodologyOyAESgSScfC_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4148435255504F43 && a2 == 0xEA00000000004553;
  if (v2
    || (uint64_t v4 = a1, (sub_1FC5F0() & 1) != 0)
    || v4 == 0xD000000000000012 && a2 == 0x8000000000216D80
    || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_2F5CC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2F5E0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x4B4F4F4245 && a2 == 0xE500000000000000;
  if (v2
    || (uint64_t v4 = a1, (sub_1FC5F0() & 1) != 0)
    || v4 == 0x4F4F424F49445541 && a2 == 0xE90000000000004BLL
    || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_2F6D8(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1162170950 && a2 == 0xE400000000000000;
  if (v2
    || (uint64_t v4 = a1, (sub_1FC5F0() & 1) != 0)
    || v4 == 1145651536 && a2 == 0xE400000000000000
    || (sub_1FC5F0() & 1) != 0
    || v4 == 5852737 && a2 == 0xE300000000000000
    || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_2F804(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2F818(uint64_t a1, unint64_t a2)
{
  if (a2 != 3) {
    return sub_2F804(a1, a2);
  }
  return a1;
}

uint64_t sub_2F828(uint64_t a1, unint64_t a2)
{
  if (a2 != 3) {
    return sub_2F838(a1, a2);
  }
  return a1;
}

uint64_t sub_2F838(uint64_t a1, unint64_t a2)
{
  if (a2 >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_2F84C()
{
  unint64_t result = qword_26C9C8;
  if (!qword_26C9C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C9C8);
  }
  return result;
}

unint64_t sub_2F8A0()
{
  unint64_t result = qword_26C9E0;
  if (!qword_26C9E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C9E0);
  }
  return result;
}

unint64_t sub_2F8F4()
{
  unint64_t result = qword_26C9F8;
  if (!qword_26C9F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26C9F8);
  }
  return result;
}

unint64_t sub_2F948()
{
  unint64_t result = qword_26CA08;
  if (!qword_26CA08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA08);
  }
  return result;
}

unint64_t sub_2F99C()
{
  unint64_t result = qword_26CA10;
  if (!qword_26CA10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA10);
  }
  return result;
}

unint64_t sub_2F9F0()
{
  unint64_t result = qword_26CA20;
  if (!qword_26CA20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA20);
  }
  return result;
}

uint64_t sub_2FA44(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result != 1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_2F818(a3, a4);
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_2FAB4(uint64_t result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  if (result != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_2F828(a3, a4);
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_2FB20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26CA28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_2FB88(uint64_t a1, void (*a2)(void, void, void, void, void, void))
{
  return a1;
}

unint64_t sub_2FBC8()
{
  unint64_t result = qword_26CA38;
  if (!qword_26CA38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA38);
  }
  return result;
}

unint64_t sub_2FC1C()
{
  unint64_t result = qword_26CA40;
  if (!qword_26CA40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA40);
  }
  return result;
}

unint64_t sub_2FC70()
{
  unint64_t result = qword_26CA48;
  if (!qword_26CA48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA48);
  }
  return result;
}

unint64_t sub_2FCC4()
{
  unint64_t result = qword_26CA58;
  if (!qword_26CA58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA58);
  }
  return result;
}

unint64_t sub_2FD18()
{
  unint64_t result = qword_26CA60;
  if (!qword_26CA60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA60);
  }
  return result;
}

unint64_t sub_2FD6C()
{
  unint64_t result = qword_26CA70;
  if (!qword_26CA70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA70);
  }
  return result;
}

unint64_t sub_2FDC0()
{
  unint64_t result = qword_26CA88;
  if (!qword_26CA88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CA88);
  }
  return result;
}

unint64_t sub_2FE14()
{
  unint64_t result = qword_26CAA0;
  if (!qword_26CAA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CAA0);
  }
  return result;
}

unint64_t sub_2FE68()
{
  unint64_t result = qword_26CAB0;
  if (!qword_26CAB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CAB0);
  }
  return result;
}

unint64_t sub_2FEBC()
{
  unint64_t result = qword_26CAC8;
  if (!qword_26CAC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CAC8);
  }
  return result;
}

unint64_t sub_2FF10()
{
  unint64_t result = qword_26CAE0;
  if (!qword_26CAE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CAE0);
  }
  return result;
}

unint64_t sub_2FF64()
{
  unint64_t result = qword_26CAF0;
  if (!qword_26CAF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CAF0);
  }
  return result;
}

unint64_t sub_2FFB8()
{
  unint64_t result = qword_26CB08;
  if (!qword_26CB08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB08);
  }
  return result;
}

unint64_t sub_3000C()
{
  unint64_t result = qword_26CB20;
  if (!qword_26CB20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB20);
  }
  return result;
}

unint64_t sub_30060()
{
  unint64_t result = qword_26CB38;
  if (!qword_26CB38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB38);
  }
  return result;
}

unint64_t sub_300B4()
{
  unint64_t result = qword_26CB50;
  if (!qword_26CB50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB50);
  }
  return result;
}

unint64_t sub_30108()
{
  unint64_t result = qword_26CB60;
  if (!qword_26CB60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB60);
  }
  return result;
}

unint64_t sub_3015C()
{
  unint64_t result = qword_26CB70;
  if (!qword_26CB70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB70);
  }
  return result;
}

unint64_t sub_301B0()
{
  unint64_t result = qword_26CB80;
  if (!qword_26CB80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB80);
  }
  return result;
}

unint64_t sub_30204()
{
  unint64_t result = qword_26CB98;
  if (!qword_26CB98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CB98);
  }
  return result;
}

unint64_t sub_30258()
{
  unint64_t result = qword_26CBB0;
  if (!qword_26CBB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CBB0);
  }
  return result;
}

uint64_t sub_302AC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_30318()
{
  unint64_t result = qword_26CBC8;
  if (!qword_26CBC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CBC8);
  }
  return result;
}

unint64_t sub_3036C()
{
  unint64_t result = qword_26CBD8;
  if (!qword_26CBD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CBD8);
  }
  return result;
}

uint64_t _s20BooksPersonalization9TransportO9DiagnosisV11TypePayloadOyAGSgSScfC_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x524F525245 && a2 == 0xE500000000000000;
  if (v2
    || (uint64_t v4 = a1, (sub_1FC5F0() & 1) != 0)
    || v4 == 0x474E494E524157 && a2 == 0xE700000000000000
    || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t _s20BooksPersonalization9TransportO9DiagnosisV11CodePayloadOyAGSgSScfC_0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x5F44494C41564E49 && a2 == 0xEF54534555514552;
  if (v2
    || (uint64_t v4 = a1, (sub_1FC5F0() & 1) != 0)
    || v4 == 0x485455415F544F4ELL && a2 == 0xEE0044455A49524FLL
    || (sub_1FC5F0() & 1) != 0
    || v4 == 0x455F524556524553 && a2 == 0xEC000000524F5252
    || (sub_1FC5F0() & 1) != 0
    || v4 == 0x4E554F465F544F4ELL && a2 == 0xE900000000000044
    || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v4;
}

uint64_t sub_306DC(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_306F0(uint64_t a1, unint64_t a2)
{
  if (a2 >= 4) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_30704()
{
  unint64_t result = qword_26CBF0;
  if (!qword_26CBF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CBF0);
  }
  return result;
}

unint64_t sub_30758()
{
  unint64_t result = qword_26CBF8;
  if (!qword_26CBF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CBF8);
  }
  return result;
}

unint64_t sub_307AC()
{
  unint64_t result = qword_26CC00;
  if (!qword_26CC00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC00);
  }
  return result;
}

unint64_t sub_30800()
{
  unint64_t result = qword_26CC10;
  if (!qword_26CC10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC10);
  }
  return result;
}

unint64_t sub_30854()
{
  unint64_t result = qword_26CC18;
  if (!qword_26CC18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC18);
  }
  return result;
}

unint64_t sub_308AC()
{
  unint64_t result = qword_26CC20;
  if (!qword_26CC20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC20);
  }
  return result;
}

unint64_t sub_30904()
{
  unint64_t result = qword_26CC28;
  if (!qword_26CC28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC28);
  }
  return result;
}

unint64_t sub_3095C()
{
  unint64_t result = qword_26CC30;
  if (!qword_26CC30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC30);
  }
  return result;
}

unint64_t sub_309B4()
{
  unint64_t result = qword_26CC38;
  if (!qword_26CC38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC38);
  }
  return result;
}

unint64_t sub_30A0C()
{
  unint64_t result = qword_26CC40;
  if (!qword_26CC40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC40);
  }
  return result;
}

unint64_t sub_30A64()
{
  unint64_t result = qword_26CC48;
  if (!qword_26CC48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC48);
  }
  return result;
}

unint64_t sub_30ABC()
{
  unint64_t result = qword_26CC50;
  if (!qword_26CC50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC50);
  }
  return result;
}

unint64_t sub_30B14()
{
  unint64_t result = qword_26CC58;
  if (!qword_26CC58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC58);
  }
  return result;
}

unint64_t sub_30B6C()
{
  unint64_t result = qword_26CC60;
  if (!qword_26CC60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC60);
  }
  return result;
}

unint64_t sub_30BC4()
{
  unint64_t result = qword_26CC68;
  if (!qword_26CC68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC68);
  }
  return result;
}

uint64_t sub_30C18()
{
  return sub_33250(&qword_26CC70, &qword_26CC78);
}

unint64_t sub_30C44()
{
  unint64_t result = qword_26CC80;
  if (!qword_26CC80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC80);
  }
  return result;
}

unint64_t sub_30C9C()
{
  unint64_t result = qword_26CC88;
  if (!qword_26CC88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CC88);
  }
  return result;
}

uint64_t sub_30CF0()
{
  return sub_33250(&qword_26CC90, &qword_26CC98);
}

unint64_t sub_30D1C()
{
  unint64_t result = qword_26CCA0;
  if (!qword_26CCA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCA0);
  }
  return result;
}

unint64_t sub_30D74()
{
  unint64_t result = qword_26CCA8;
  if (!qword_26CCA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCA8);
  }
  return result;
}

unint64_t sub_30DCC()
{
  unint64_t result = qword_26CCB0;
  if (!qword_26CCB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCB0);
  }
  return result;
}

unint64_t sub_30E24()
{
  unint64_t result = qword_26CCB8;
  if (!qword_26CCB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCB8);
  }
  return result;
}

unint64_t sub_30E7C()
{
  unint64_t result = qword_26CCC0;
  if (!qword_26CCC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCC0);
  }
  return result;
}

unint64_t sub_30ED4()
{
  unint64_t result = qword_26CCC8;
  if (!qword_26CCC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCC8);
  }
  return result;
}

unint64_t sub_30F2C()
{
  unint64_t result = qword_26CCD0;
  if (!qword_26CCD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCD0);
  }
  return result;
}

unint64_t sub_30F84()
{
  unint64_t result = qword_26CCD8;
  if (!qword_26CCD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCD8);
  }
  return result;
}

unint64_t sub_30FDC()
{
  unint64_t result = qword_26CCE0;
  if (!qword_26CCE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCE0);
  }
  return result;
}

unint64_t sub_31034()
{
  unint64_t result = qword_26CCE8;
  if (!qword_26CCE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCE8);
  }
  return result;
}

unint64_t sub_3108C()
{
  unint64_t result = qword_26CCF0;
  if (!qword_26CCF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCF0);
  }
  return result;
}

unint64_t sub_310E4()
{
  unint64_t result = qword_26CCF8;
  if (!qword_26CCF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CCF8);
  }
  return result;
}

unint64_t sub_3113C()
{
  unint64_t result = qword_26CD00;
  if (!qword_26CD00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD00);
  }
  return result;
}

unint64_t sub_31194()
{
  unint64_t result = qword_26CD08;
  if (!qword_26CD08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD08);
  }
  return result;
}

unint64_t sub_311EC()
{
  unint64_t result = qword_26CD10;
  if (!qword_26CD10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD10);
  }
  return result;
}

unint64_t sub_31244()
{
  unint64_t result = qword_26CD18;
  if (!qword_26CD18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD18);
  }
  return result;
}

unint64_t sub_3129C()
{
  unint64_t result = qword_26CD20;
  if (!qword_26CD20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD20);
  }
  return result;
}

unint64_t sub_312F4()
{
  unint64_t result = qword_26CD28;
  if (!qword_26CD28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD28);
  }
  return result;
}

unint64_t sub_3134C()
{
  unint64_t result = qword_26CD30;
  if (!qword_26CD30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD30);
  }
  return result;
}

unint64_t sub_313A4()
{
  unint64_t result = qword_26CD38;
  if (!qword_26CD38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD38);
  }
  return result;
}

unint64_t sub_313FC()
{
  unint64_t result = qword_26CD40;
  if (!qword_26CD40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD40);
  }
  return result;
}

unint64_t sub_31454()
{
  unint64_t result = qword_26CD48;
  if (!qword_26CD48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD48);
  }
  return result;
}

unint64_t sub_314AC()
{
  unint64_t result = qword_26CD50;
  if (!qword_26CD50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD50);
  }
  return result;
}

unint64_t sub_31504()
{
  unint64_t result = qword_26CD58;
  if (!qword_26CD58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD58);
  }
  return result;
}

unint64_t sub_3155C()
{
  unint64_t result = qword_26CD60;
  if (!qword_26CD60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD60);
  }
  return result;
}

unint64_t sub_315B4()
{
  unint64_t result = qword_26CD68;
  if (!qword_26CD68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD68);
  }
  return result;
}

unint64_t sub_3160C()
{
  unint64_t result = qword_26CD70;
  if (!qword_26CD70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD70);
  }
  return result;
}

unint64_t sub_31664()
{
  unint64_t result = qword_26CD78;
  if (!qword_26CD78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD78);
  }
  return result;
}

unint64_t sub_316BC()
{
  unint64_t result = qword_26CD80;
  if (!qword_26CD80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD80);
  }
  return result;
}

unint64_t sub_31714()
{
  unint64_t result = qword_26CD88;
  if (!qword_26CD88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD88);
  }
  return result;
}

unint64_t sub_3176C()
{
  unint64_t result = qword_26CD90;
  if (!qword_26CD90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD90);
  }
  return result;
}

unint64_t sub_317C4()
{
  unint64_t result = qword_26CD98;
  if (!qword_26CD98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CD98);
  }
  return result;
}

unint64_t sub_3181C()
{
  unint64_t result = qword_26CDA0;
  if (!qword_26CDA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDA0);
  }
  return result;
}

unint64_t sub_31874()
{
  unint64_t result = qword_26CDA8;
  if (!qword_26CDA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDA8);
  }
  return result;
}

unint64_t sub_318CC()
{
  unint64_t result = qword_26CDB0;
  if (!qword_26CDB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDB0);
  }
  return result;
}

unint64_t sub_31924()
{
  unint64_t result = qword_26CDB8;
  if (!qword_26CDB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDB8);
  }
  return result;
}

unint64_t sub_3197C()
{
  unint64_t result = qword_26CDC0;
  if (!qword_26CDC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDC0);
  }
  return result;
}

unint64_t sub_319D4()
{
  unint64_t result = qword_26CDC8;
  if (!qword_26CDC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDC8);
  }
  return result;
}

unint64_t sub_31A2C()
{
  unint64_t result = qword_26CDD0;
  if (!qword_26CDD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDD0);
  }
  return result;
}

unint64_t sub_31A84()
{
  unint64_t result = qword_26CDD8;
  if (!qword_26CDD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDD8);
  }
  return result;
}

unint64_t sub_31ADC()
{
  unint64_t result = qword_26CDE0;
  if (!qword_26CDE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDE0);
  }
  return result;
}

unint64_t sub_31B34()
{
  unint64_t result = qword_26CDE8;
  if (!qword_26CDE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDE8);
  }
  return result;
}

unint64_t sub_31B8C()
{
  unint64_t result = qword_26CDF0;
  if (!qword_26CDF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDF0);
  }
  return result;
}

unint64_t sub_31BE4()
{
  unint64_t result = qword_26CDF8;
  if (!qword_26CDF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CDF8);
  }
  return result;
}

unint64_t sub_31C3C()
{
  unint64_t result = qword_26CE00;
  if (!qword_26CE00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE00);
  }
  return result;
}

unint64_t sub_31C94()
{
  unint64_t result = qword_26CE08;
  if (!qword_26CE08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE08);
  }
  return result;
}

unint64_t sub_31CEC()
{
  unint64_t result = qword_26CE10;
  if (!qword_26CE10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE10);
  }
  return result;
}

unint64_t sub_31D44()
{
  unint64_t result = qword_26CE18;
  if (!qword_26CE18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE18);
  }
  return result;
}

unint64_t sub_31D9C()
{
  unint64_t result = qword_26CE20;
  if (!qword_26CE20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE20);
  }
  return result;
}

unint64_t sub_31DF4()
{
  unint64_t result = qword_26CE28;
  if (!qword_26CE28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE28);
  }
  return result;
}

unint64_t sub_31E4C()
{
  unint64_t result = qword_26CE30;
  if (!qword_26CE30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE30);
  }
  return result;
}

unint64_t sub_31EA4()
{
  unint64_t result = qword_26CE38;
  if (!qword_26CE38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE38);
  }
  return result;
}

unint64_t sub_31EFC()
{
  unint64_t result = qword_26CE40;
  if (!qword_26CE40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE40);
  }
  return result;
}

unint64_t sub_31F54()
{
  unint64_t result = qword_26CE48;
  if (!qword_26CE48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE48);
  }
  return result;
}

unint64_t sub_31FAC()
{
  unint64_t result = qword_26CE50;
  if (!qword_26CE50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE50);
  }
  return result;
}

unint64_t sub_32004()
{
  unint64_t result = qword_26CE58;
  if (!qword_26CE58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE58);
  }
  return result;
}

unint64_t sub_3205C()
{
  unint64_t result = qword_26CE60;
  if (!qword_26CE60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE60);
  }
  return result;
}

unint64_t sub_320B4()
{
  unint64_t result = qword_26CE68;
  if (!qword_26CE68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE68);
  }
  return result;
}

unint64_t sub_3210C()
{
  unint64_t result = qword_26CE70;
  if (!qword_26CE70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE70);
  }
  return result;
}

unint64_t sub_32164()
{
  unint64_t result = qword_26CE78;
  if (!qword_26CE78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE78);
  }
  return result;
}

unint64_t sub_321BC()
{
  unint64_t result = qword_26CE80;
  if (!qword_26CE80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE80);
  }
  return result;
}

unint64_t sub_32214()
{
  unint64_t result = qword_26CE88;
  if (!qword_26CE88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE88);
  }
  return result;
}

uint64_t sub_32268()
{
  return sub_33250(&qword_26CE90, &qword_26C8F0);
}

unint64_t sub_32294()
{
  unint64_t result = qword_26CE98;
  if (!qword_26CE98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CE98);
  }
  return result;
}

unint64_t sub_322EC()
{
  unint64_t result = qword_26CEA0;
  if (!qword_26CEA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEA0);
  }
  return result;
}

uint64_t sub_32340()
{
  return sub_33250(&qword_26CEA8, &qword_26C9D0);
}

unint64_t sub_3236C()
{
  unint64_t result = qword_26CEB0;
  if (!qword_26CEB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEB0);
  }
  return result;
}

unint64_t sub_323C4()
{
  unint64_t result = qword_26CEB8;
  if (!qword_26CEB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEB8);
  }
  return result;
}

uint64_t sub_32418()
{
  return sub_33250(&qword_26CEC0, &qword_26CEC8);
}

unint64_t sub_32444()
{
  unint64_t result = qword_26CED0;
  if (!qword_26CED0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CED0);
  }
  return result;
}

unint64_t sub_3249C()
{
  unint64_t result = qword_26CED8;
  if (!qword_26CED8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CED8);
  }
  return result;
}

unint64_t sub_324F4()
{
  unint64_t result = qword_26CEE0;
  if (!qword_26CEE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEE0);
  }
  return result;
}

unint64_t sub_3254C()
{
  unint64_t result = qword_26CEE8;
  if (!qword_26CEE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEE8);
  }
  return result;
}

unint64_t sub_325A4()
{
  unint64_t result = qword_26CEF0;
  if (!qword_26CEF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEF0);
  }
  return result;
}

unint64_t sub_325FC()
{
  unint64_t result = qword_26CEF8;
  if (!qword_26CEF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CEF8);
  }
  return result;
}

unint64_t sub_32654()
{
  unint64_t result = qword_26CF00;
  if (!qword_26CF00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF00);
  }
  return result;
}

unint64_t sub_326AC()
{
  unint64_t result = qword_26CF08;
  if (!qword_26CF08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF08);
  }
  return result;
}

unint64_t sub_32704()
{
  unint64_t result = qword_26CF10;
  if (!qword_26CF10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF10);
  }
  return result;
}

unint64_t sub_3275C()
{
  unint64_t result = qword_26CF18;
  if (!qword_26CF18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF18);
  }
  return result;
}

unint64_t sub_327B4()
{
  unint64_t result = qword_26CF20;
  if (!qword_26CF20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF20);
  }
  return result;
}

unint64_t sub_3280C()
{
  unint64_t result = qword_26CF28;
  if (!qword_26CF28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF28);
  }
  return result;
}

unint64_t sub_32864()
{
  unint64_t result = qword_26CF30;
  if (!qword_26CF30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF30);
  }
  return result;
}

unint64_t sub_328BC()
{
  unint64_t result = qword_26CF38;
  if (!qword_26CF38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF38);
  }
  return result;
}

unint64_t sub_32914()
{
  unint64_t result = qword_26CF40;
  if (!qword_26CF40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF40);
  }
  return result;
}

unint64_t sub_3296C()
{
  unint64_t result = qword_26CF48;
  if (!qword_26CF48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF48);
  }
  return result;
}

unint64_t sub_329C4()
{
  unint64_t result = qword_26CF50;
  if (!qword_26CF50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF50);
  }
  return result;
}

unint64_t sub_32A1C()
{
  unint64_t result = qword_26CF58;
  if (!qword_26CF58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF58);
  }
  return result;
}

unint64_t sub_32A74()
{
  unint64_t result = qword_26CF60;
  if (!qword_26CF60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF60);
  }
  return result;
}

unint64_t sub_32ACC()
{
  unint64_t result = qword_26CF68;
  if (!qword_26CF68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF68);
  }
  return result;
}

unint64_t sub_32B24()
{
  unint64_t result = qword_26CF70;
  if (!qword_26CF70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF70);
  }
  return result;
}

unint64_t sub_32B7C()
{
  unint64_t result = qword_26CF78;
  if (!qword_26CF78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF78);
  }
  return result;
}

unint64_t sub_32BD4()
{
  unint64_t result = qword_26CF80;
  if (!qword_26CF80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF80);
  }
  return result;
}

unint64_t sub_32C2C()
{
  unint64_t result = qword_26CF88;
  if (!qword_26CF88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF88);
  }
  return result;
}

unint64_t sub_32C84()
{
  unint64_t result = qword_26CF90;
  if (!qword_26CF90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF90);
  }
  return result;
}

unint64_t sub_32CDC()
{
  unint64_t result = qword_26CF98;
  if (!qword_26CF98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CF98);
  }
  return result;
}

unint64_t sub_32D34()
{
  unint64_t result = qword_26CFA0;
  if (!qword_26CFA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFA0);
  }
  return result;
}

unint64_t sub_32D8C()
{
  unint64_t result = qword_26CFA8;
  if (!qword_26CFA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFA8);
  }
  return result;
}

unint64_t sub_32DE4()
{
  unint64_t result = qword_26CFB0;
  if (!qword_26CFB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFB0);
  }
  return result;
}

unint64_t sub_32E3C()
{
  unint64_t result = qword_26CFB8;
  if (!qword_26CFB8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFB8);
  }
  return result;
}

unint64_t sub_32E94()
{
  unint64_t result = qword_26CFC0;
  if (!qword_26CFC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFC0);
  }
  return result;
}

unint64_t sub_32EEC()
{
  unint64_t result = qword_26CFC8;
  if (!qword_26CFC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFC8);
  }
  return result;
}

unint64_t sub_32F44()
{
  unint64_t result = qword_26CFD0;
  if (!qword_26CFD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFD0);
  }
  return result;
}

unint64_t sub_32F9C()
{
  unint64_t result = qword_26CFD8;
  if (!qword_26CFD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFD8);
  }
  return result;
}

unint64_t sub_32FF4()
{
  unint64_t result = qword_26CFE0;
  if (!qword_26CFE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFE0);
  }
  return result;
}

unint64_t sub_3304C()
{
  unint64_t result = qword_26CFE8;
  if (!qword_26CFE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFE8);
  }
  return result;
}

unint64_t sub_330A4()
{
  unint64_t result = qword_26CFF0;
  if (!qword_26CFF0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFF0);
  }
  return result;
}

unint64_t sub_330FC()
{
  unint64_t result = qword_26CFF8;
  if (!qword_26CFF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26CFF8);
  }
  return result;
}

uint64_t sub_33150()
{
  return sub_33250(&qword_26D000, &qword_26D008);
}

unint64_t sub_3317C()
{
  unint64_t result = qword_26D010;
  if (!qword_26D010)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D010);
  }
  return result;
}

unint64_t sub_331D4()
{
  unint64_t result = qword_26D018;
  if (!qword_26D018)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D018);
  }
  return result;
}

uint64_t sub_33228()
{
  return sub_33250(&qword_26D020, &qword_26D028);
}

uint64_t sub_33250(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_332A4()
{
  unint64_t result = qword_26D030;
  if (!qword_26D030)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D030);
  }
  return result;
}

unint64_t sub_332FC()
{
  unint64_t result = qword_26D038;
  if (!qword_26D038)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D038);
  }
  return result;
}

unint64_t sub_33354()
{
  unint64_t result = qword_26D040;
  if (!qword_26D040)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D040);
  }
  return result;
}

unint64_t sub_333AC()
{
  unint64_t result = qword_26D048;
  if (!qword_26D048)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D048);
  }
  return result;
}

uint64_t _s12BookAffinityVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s12BookAffinityVwCP_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s12BookAffinityVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  int v3 = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(_DWORD *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s12BookAffinityVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t _s12BookAffinityVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(_DWORD *)(a1 + 8) = *(_DWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 12) = *(unsigned char *)(a2 + 12);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Transport.BookAffinity()
{
  return &type metadata for Transport.BookAffinity;
}

unsigned char *_s12BookAffinityV10CodingKeysOwCP(unsigned char *result, unsigned char *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookAffinity.CodingKeys()
{
  return &type metadata for Transport.BookAffinity.CodingKeys;
}

uint64_t _s11UserProfileVwCP(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s11UserProfileVwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s11UserProfileVwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

uint64_t _s11UserProfileVwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11UserProfileVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s11UserProfileVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.UserProfile()
{
  return &type metadata for Transport.UserProfile;
}

ValueMetadata *type metadata accessor for Transport.UserProfile.CodingKeys()
{
  return &type metadata for Transport.UserProfile.CodingKeys;
}

uint64_t _s26RecommendationBlockRequestVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 3uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 32) >= 4uLL) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s26RecommendationBlockRequestVwcp(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 <= 2)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  unint64_t v5 = (_OWORD *)(a2 + 24);
  unint64_t v6 = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  if (v6 < 4)
  {
    *(_OWORD *)(a1 + 24) = *v5;
  }
  else
  {
    *(void *)(a1 + 24) = *(void *)v5;
    *(void *)(a1 + 32) = v6;
    swift_bridgeObjectRetain();
  }
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26RecommendationBlockRequestVwca(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a2 + 8);
  if (v4 == 2)
  {
    if (v5 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 2)
  {
    sub_354A4(a1);
LABEL_11:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_12;
  }
  if (v4 < 2)
  {
    if (v5 >= 2)
    {
LABEL_8:
      *(void *)a1 = *(void *)a2;
      *(void *)(a1 + 8) = *(void *)(a2 + 8);
      swift_bridgeObjectRetain();
      goto LABEL_12;
    }
    goto LABEL_11;
  }
  if (v5 < 2)
  {
    sub_3399C(a1);
    goto LABEL_11;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_12:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v6 = *(void *)(a1 + 32);
  unint64_t v7 = *(void *)(a2 + 32);
  if (v6 == 3)
  {
    if (v7 >= 4) {
      goto LABEL_19;
    }
    goto LABEL_22;
  }
  if (v7 == 3)
  {
    sub_354A4(a1 + 24);
    goto LABEL_22;
  }
  if (v6 >= 3)
  {
    if (v7 >= 3)
    {
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_23;
    }
    sub_3399C(a1 + 24);
    goto LABEL_22;
  }
  if (v7 < 3)
  {
LABEL_22:
    *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
    goto LABEL_23;
  }
LABEL_19:
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
LABEL_23:
  int v8 = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(_DWORD *)(a1 + 40) = v8;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_3399C(uint64_t a1)
{
  return a1;
}

__n128 _s26RecommendationBlockRequestVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(_OWORD *)(a1 + 16) = v3;
  *(_OWORD *)(a1 + 32) = v4;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s26RecommendationBlockRequestVwta(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 8);
  unint64_t v5 = *(void *)(a2 + 8);
  if (v4 == 2) {
    goto LABEL_7;
  }
  if (v5 == 2)
  {
    sub_354A4(a1);
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  if (v4 < 2) {
    goto LABEL_7;
  }
  if (v5 < 2)
  {
    sub_3399C(a1);
    goto LABEL_7;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  swift_bridgeObjectRelease();
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  unint64_t v6 = (void *)(a2 + 24);
  unint64_t v7 = *(void *)(a1 + 32);
  unint64_t v8 = *(void *)(a2 + 32);
  if (v7 != 3)
  {
    if (v8 == 3)
    {
      sub_354A4(a1 + 24);
    }
    else if (v7 >= 3)
    {
      if (v8 >= 3)
      {
        *(void *)(a1 + 24) = *v6;
        *(void *)(a1 + 32) = v8;
        swift_bridgeObjectRelease();
        goto LABEL_15;
      }
      sub_3399C(a1 + 24);
    }
  }
  *(_OWORD *)(a1 + 24) = *(_OWORD *)v6;
LABEL_15:
  *(_DWORD *)(a1 + 40) = *(_DWORD *)(a2 + 40);
  *(unsigned char *)(a1 + 44) = *(unsigned char *)(a2 + 44);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s26RecommendationBlockRequestVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 56)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s26RecommendationBlockRequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 56) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockRequest()
{
  return &type metadata for Transport.RecommendationBlockRequest;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockRequest.MediaTypePayload()
{
  return &type metadata for Transport.RecommendationBlockRequest.MediaTypePayload;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockRequest.SaleTypePayload()
{
  return &type metadata for Transport.RecommendationBlockRequest.SaleTypePayload;
}

uint64_t _s26RecommendationBlockRequestV10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFC) {
    goto LABEL_17;
  }
  if (a2 + 4 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 4) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 4;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 4;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 5;
  int v8 = v6 - 5;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s26RecommendationBlockRequestV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x33D90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockRequest.CodingKeys()
{
  return &type metadata for Transport.RecommendationBlockRequest.CodingKeys;
}

void *_s27RecommendationBlockResponseVwtk(void *result, void *a2)
{
  *__n128 result = *a2;
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockResponse()
{
  return &type metadata for Transport.RecommendationBlockResponse;
}

uint64_t sub_33DF8()
{
  return 0;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockResponse.CodingKeys()
{
  return &type metadata for Transport.RecommendationBlockResponse.CodingKeys;
}

uint64_t _s21RecommendationRequestVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s21RecommendationRequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21RecommendationRequestVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s21RecommendationRequestVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v3;
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s21RecommendationRequestVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21RecommendationRequestVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21RecommendationRequestVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationRequest()
{
  return &type metadata for Transport.RecommendationRequest;
}

ValueMetadata *type metadata accessor for Transport.RecommendationRequest.CodingKeys()
{
  return &type metadata for Transport.RecommendationRequest.CodingKeys;
}

uint64_t _s22RecommendationResponseVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s22RecommendationResponseVwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s22RecommendationResponseVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s22RecommendationResponseVwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s22RecommendationResponseVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s22RecommendationResponseVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationResponse()
{
  return &type metadata for Transport.RecommendationResponse;
}

ValueMetadata *type metadata accessor for Transport.RecommendationResponse.CodingKeys()
{
  return &type metadata for Transport.RecommendationResponse.CodingKeys;
}

__n128 _s8SeedBookVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
  *(__n128 *)a1 = result;
  return result;
}

uint64_t _s8SeedBookVwet(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 25)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t _s8SeedBookVwst(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(unsigned char *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 25) = v3;
  return result;
}

ValueMetadata *type metadata accessor for Transport.SeedBook()
{
  return &type metadata for Transport.SeedBook;
}

ValueMetadata *type metadata accessor for Transport.SeedBook.CodingKeys()
{
  return &type metadata for Transport.SeedBook.CodingKeys;
}

uint64_t _s15RecommendedItemVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s15RecommendedItemVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s15RecommendedItemVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  uint64_t v4 = a2[3];
  *(unsigned char *)(a1 + 32) = *((unsigned char *)a2 + 32);
  *(void *)(a1 + 24) = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 9);
  *(unsigned char *)(a1 + 40) = *((unsigned char *)a2 + 40);
  *(_DWORD *)(a1 + 36) = v4;
  LODWORD(v4) = *((_DWORD *)a2 + 11);
  *(unsigned char *)(a1 + 48) = *((unsigned char *)a2 + 48);
  *(_DWORD *)(a1 + 44) = v4;
  *(void *)(a1 + 56) = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s15RecommendedItemVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s15RecommendedItemVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(_DWORD *)(a1 + 36) = *(_DWORD *)(a2 + 36);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_DWORD *)(a1 + 44) = *(_DWORD *)(a2 + 44);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Transport.RecommendedItem()
{
  return &type metadata for Transport.RecommendedItem;
}

uint64_t getEnumTagSinglePayload for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.DeclinedConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFB) {
    goto LABEL_17;
  }
  if (a2 + 5 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 5) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 5;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 5;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 6;
  int v8 = v6 - 6;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s22RecommendationResponseV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x346D8);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendedItem.CodingKeys()
{
  return &type metadata for Transport.RecommendedItem.CodingKeys;
}

uint64_t _s13UserProfileV2Vwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s13UserProfileV2Vwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Transport.UserProfileV2()
{
  return &type metadata for Transport.UserProfileV2;
}

ValueMetadata *type metadata accessor for Transport.UserProfileV2.CodingKeys()
{
  return &type metadata for Transport.UserProfileV2.CodingKeys;
}

uint64_t _s14BookEmbeddingsVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s14BookEmbeddingsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Transport.BookEmbeddings()
{
  return &type metadata for Transport.BookEmbeddings;
}

ValueMetadata *type metadata accessor for Transport.BookEmbeddings.CodingKeys()
{
  return &type metadata for Transport.BookEmbeddings.CodingKeys;
}

ValueMetadata *type metadata accessor for Transport.InferredFromInfo()
{
  return &type metadata for Transport.InferredFromInfo;
}

ValueMetadata *type metadata accessor for Transport.InferredFromInfo.CodingKeys()
{
  return &type metadata for Transport.InferredFromInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for Transport.BookAuthors()
{
  return &type metadata for Transport.BookAuthors;
}

ValueMetadata *type metadata accessor for Transport.BookAuthors.CodingKeys()
{
  return &type metadata for Transport.BookAuthors.CodingKeys;
}

void *_s10BookGenresVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s10BookGenresVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s8MetadataV13GenreTreeNodeVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s10BookGenresVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s8MetadataV13GenreTreeNodeVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s8MetadataV13GenreTreeNodeVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookGenres()
{
  return &type metadata for Transport.BookGenres;
}

ValueMetadata *type metadata accessor for Transport.BookGenres.CodingKeys()
{
  return &type metadata for Transport.BookGenres.CodingKeys;
}

uint64_t _s28BookIdToDeduplicationIdEntryVwxx()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s28BookIdToDeduplicationIdEntryVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s28BookIdToDeduplicationIdEntryVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 _s28BookIdToDeduplicationIdEntryVwtk(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

uint64_t _s28BookIdToDeduplicationIdEntryVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s28BookIdToDeduplicationIdEntryVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s28BookIdToDeduplicationIdEntryVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToDeduplicationIdEntry()
{
  return &type metadata for Transport.BookIdToDeduplicationIdEntry;
}

uint64_t sub_34BA4(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_34BAC(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToDeduplicationIdEntry.CodingKeys()
{
  return &type metadata for Transport.BookIdToDeduplicationIdEntry.CodingKeys;
}

uint64_t _s21BookIdToSeriesIdEntryVwCP(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

__n128 _s21BookIdToSeriesIdEntryVwcp(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s21BookIdToSeriesIdEntryVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFE && *(unsigned char *)(a1 + 41)) {
    return (*(_DWORD *)a1 + 254);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 25);
  if (v3 >= 2) {
    int v4 = ((v3 + 2147483646) & 0x7FFFFFFF) - 1;
  }
  else {
    int v4 = -2;
  }
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s21BookIdToSeriesIdEntryVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFD)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)__n128 result = a2 - 254;
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFE) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 25) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToSeriesIdEntry()
{
  return &type metadata for Transport.BookIdToSeriesIdEntry;
}

unsigned char *sub_34CD0(unsigned char *result, char a2)
{
  *__n128 result = a2;
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToSeriesIdEntry.CodingKeys()
{
  return &type metadata for Transport.BookIdToSeriesIdEntry.CodingKeys;
}

uint64_t _s14BookEmbeddingsVwca_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 16) = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s12BookAffinityVwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 16);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s12BookAffinityVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 24) = 0;
    }
    if (a2) {
      *(void *)(result + 16) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToBisacCodesEntry()
{
  return &type metadata for Transport.BookIdToBisacCodesEntry;
}

ValueMetadata *type metadata accessor for Transport.BookIdToBisacCodesEntry.CodingKeys()
{
  return &type metadata for Transport.BookIdToBisacCodesEntry.CodingKeys;
}

unint64_t _s22BookIdToMediaTypeEntryVwxx(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 24);
  if (result >= 3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s22BookIdToMediaTypeEntryVwcp(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  unint64_t v3 = (_OWORD *)(a1 + 16);
  int v4 = (_OWORD *)(a2 + 16);
  unint64_t v5 = *(void *)(a2 + 24);
  if (v5 <= 2)
  {
    *unint64_t v3 = *v4;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v4;
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t _s22BookIdToMediaTypeEntryVwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  *(unsigned char *)(a1 + 8) = *((unsigned char *)a2 + 8);
  *(void *)a1 = v3;
  int v4 = (_OWORD *)(a1 + 16);
  unint64_t v5 = a2 + 2;
  unint64_t v6 = *(void *)(a1 + 24);
  unint64_t v7 = a2[3];
  if (v6 == 2)
  {
    if (v7 > 2) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v7 == 2)
  {
    sub_354A4(a1 + 16);
    goto LABEL_11;
  }
  if (v6 >= 2)
  {
    if (v7 >= 2)
    {
      *(void *)(a1 + 16) = a2[2];
      *(void *)(a1 + 24) = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_3399C(a1 + 16);
    goto LABEL_11;
  }
  if (v7 < 2)
  {
LABEL_11:
    _OWORD *v4 = *v5;
    return a1;
  }
LABEL_8:
  *(void *)(a1 + 16) = a2[2];
  *(void *)(a1 + 24) = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s22BookIdToMediaTypeEntryVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v3 = (_OWORD *)(a1 + 16);
  int v4 = (void *)(a2 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a2 + 24);
  if (v5 != 2)
  {
    if (v6 == 2)
    {
      sub_354A4((uint64_t)v3);
    }
    else if (v5 >= 2)
    {
      if (v6 >= 2)
      {
        *(void *)(a1 + 16) = *v4;
        *(void *)(a1 + 24) = v6;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_3399C((uint64_t)v3);
    }
  }
  *uint64_t v3 = *(_OWORD *)v4;
  return a1;
}

uint64_t _s22BookIdToMediaTypeEntryVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 2;
  if (v4 < 0) {
    int v4 = -1;
  }
  BOOL v5 = __OFSUB__(v4, 1);
  int v6 = v4 - 1;
  if (v6 < 0 != v5) {
    int v6 = -1;
  }
  return (v6 + 1);
}

uint64_t _s22BookIdToMediaTypeEntryVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFC)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 2147483645;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToMediaTypeEntry()
{
  return &type metadata for Transport.BookIdToMediaTypeEntry;
}

uint64_t getEnumTagSinglePayload for Methodology(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 1 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 1;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 1;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 2;
  int v8 = v6 - 2;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s11UserProfileV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x35224);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToMediaTypeEntry.CodingKeys()
{
  return &type metadata for Transport.BookIdToMediaTypeEntry.CodingKeys;
}

unint64_t _s11MethodologyOwxx(uint64_t a1)
{
  unint64_t result = *(void *)(a1 + 8);
  if (result >= 0xFFFFFFFF) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_35274(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 8);
  if (v1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_3528C(void *result, int a2)
{
  if (a2 < 0)
  {
    *unint64_t result = a2 ^ 0x80000000;
    result[1] = 0;
  }
  else if (a2)
  {
    result[1] = (a2 - 1);
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Methodology()
{
  return &type metadata for Transport.Methodology;
}

ValueMetadata *type metadata accessor for Transport.MediaType()
{
  return &type metadata for Transport.MediaType;
}

unint64_t _s24StoreAssetRequestDetailsVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  unint64_t result = *(void *)(a1 + 24);
  if (result >= 4)
  {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t _s24StoreAssetRequestDetailsVwcp(uint64_t a1, void *a2)
{
  uint64_t v3 = a2[1];
  *(void *)a1 = *a2;
  *(void *)(a1 + 8) = v3;
  unsigned int v4 = a2 + 2;
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v5 < 4)
  {
    *(_OWORD *)(a1 + 16) = *v4;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v4;
    *(void *)(a1 + 24) = v5;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *_s24StoreAssetRequestDetailsVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = a1[3];
  unint64_t v5 = a2[3];
  if (v4 == 3)
  {
    if (v5 >= 4) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 3)
  {
    sub_354A4((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v4 >= 3)
  {
    if (v5 >= 3)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      return a1;
    }
    sub_3399C((uint64_t)(a1 + 2));
    goto LABEL_11;
  }
  if (v5 < 3)
  {
LABEL_11:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
LABEL_8:
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_354A4(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 0xFFFFFFFFuLL) {
    swift_bridgeObjectRelease();
  }
  return a1;
}

void *_s24StoreAssetRequestDetailsVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  unint64_t v4 = a2 + 2;
  unint64_t v5 = a1[3];
  unint64_t v6 = a2[3];
  if (v5 != 3)
  {
    if (v6 == 3)
    {
      sub_354A4((uint64_t)(a1 + 2));
    }
    else if (v5 >= 3)
    {
      if (v6 >= 3)
      {
        a1[2] = *v4;
        a1[3] = v6;
        swift_bridgeObjectRelease();
        return a1;
      }
      sub_3399C((uint64_t)(a1 + 2));
    }
  }
  *((_OWORD *)a1 + 1) = *(_OWORD *)v4;
  return a1;
}

uint64_t _s24StoreAssetRequestDetailsVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 32)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s24StoreAssetRequestDetailsVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    *(void *)(result + 8) = 0;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 32) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.StoreAssetRequestDetails()
{
  return &type metadata for Transport.StoreAssetRequestDetails;
}

uint64_t _s26RecommendationBlockRequestV15SaleTypePayloadOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFD && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483645);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 2;
  if (v4 >= 4) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s26RecommendationBlockRequestV15SaleTypePayloadOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 >= 0x7FFFFFFD)
  {
    *(void *)unint64_t result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)unint64_t result = a2 - 2147483645;
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFD) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.StoreAssetRequestDetails.SaleTypePayload()
{
  return &type metadata for Transport.StoreAssetRequestDetails.SaleTypePayload;
}

ValueMetadata *type metadata accessor for Transport.StoreAssetRequestDetails.CodingKeys()
{
  return &type metadata for Transport.StoreAssetRequestDetails.CodingKeys;
}

uint64_t _s26BooksRecommendationRequestVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 24) >= 4uLL) {
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s26BooksRecommendationRequestVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  unsigned int v5 = (_OWORD *)(a2 + 16);
  unint64_t v6 = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6 < 4)
  {
    *(_OWORD *)(a1 + 16) = *v5;
  }
  else
  {
    *(void *)(a1 + 16) = *(void *)v5;
    *(void *)(a1 + 24) = v6;
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26BooksRecommendationRequestVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  unint64_t v4 = *(void *)(a1 + 24);
  unint64_t v5 = *(void *)(a2 + 24);
  if (v4 == 3)
  {
    if (v5 >= 4) {
      goto LABEL_8;
    }
    goto LABEL_11;
  }
  if (v5 == 3)
  {
    sub_354A4(a1 + 16);
    goto LABEL_11;
  }
  if (v4 >= 3)
  {
    if (v5 >= 3)
    {
      *(void *)(a1 + 16) = *(void *)(a2 + 16);
      *(void *)(a1 + 24) = *(void *)(a2 + 24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_12;
    }
    sub_3399C(a1 + 16);
    goto LABEL_11;
  }
  if (v5 < 3)
  {
LABEL_11:
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
    goto LABEL_12;
  }
LABEL_8:
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
LABEL_12:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s26BooksRecommendationRequestVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  unint64_t v4 = (void *)(a2 + 16);
  unint64_t v5 = *(void *)(a1 + 24);
  unint64_t v6 = *(void *)(a2 + 24);
  if (v5 != 3)
  {
    if (v6 == 3)
    {
      sub_354A4(a1 + 16);
    }
    else if (v5 >= 3)
    {
      if (v6 >= 3)
      {
        *(void *)(a1 + 16) = *v4;
        *(void *)(a1 + 24) = v6;
        swift_bridgeObjectRelease();
        goto LABEL_8;
      }
      sub_3399C(a1 + 16);
    }
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v4;
LABEL_8:
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s26BooksRecommendationRequestVwet(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 41)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s26BooksRecommendationRequestVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 40) = 0;
    *(void *)unint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 41) = 0;
    }
    if (a2) {
      *(void *)unint64_t result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BooksRecommendationRequest()
{
  return &type metadata for Transport.BooksRecommendationRequest;
}

ValueMetadata *type metadata accessor for Transport.BooksRecommendationRequest.CodingKeys()
{
  return &type metadata for Transport.BooksRecommendationRequest.CodingKeys;
}

uint64_t _s28RecommendationBlockRequestV2Vwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 16) != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(void *)(a1 + 40) >= 4uLL) {
      swift_bridgeObjectRelease();
    }
    swift_bridgeObjectRelease();
  }

  return swift_bridgeObjectRelease();
}

uint64_t _s28RecommendationBlockRequestV2Vwcp(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  int v4 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  if (v5 == 1)
  {
    long long v6 = v4[1];
    *(_OWORD *)(a1 + 16) = *v4;
    *(_OWORD *)(a1 + 32) = v6;
    *(_OWORD *)(a1 + 41) = *(_OWORD *)((char *)v4 + 25);
  }
  else
  {
    uint64_t v7 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v7;
    int v8 = (_OWORD *)(a2 + 32);
    unint64_t v9 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v9 < 4)
    {
      *(_OWORD *)(a1 + 32) = *v8;
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)v8;
      *(void *)(a1 + 40) = v9;
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s28RecommendationBlockRequestV2Vwca(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  int v4 = (_OWORD *)(a1 + 16);
  long long v6 = (_OWORD *)(a2 + 16);
  uint64_t v5 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) != 1)
  {
    if (v5 == 1)
    {
      sub_35E48(a1 + 16);
      long long v9 = *(_OWORD *)(a2 + 41);
      long long v10 = *(_OWORD *)(a2 + 32);
      _OWORD *v4 = *v6;
      *(_OWORD *)(a1 + 32) = v10;
      *(_OWORD *)(a1 + 41) = v9;
      goto LABEL_22;
    }
    *(void *)(a1 + 16) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v12 = *(void *)(a1 + 40);
    unint64_t v13 = *(void *)(a2 + 40);
    if (v12 == 3)
    {
      if (v13 >= 4) {
        goto LABEL_17;
      }
    }
    else if (v13 == 3)
    {
      sub_354A4(a1 + 32);
    }
    else if (v12 >= 3)
    {
      if (v13 >= 3)
      {
        *(void *)(a1 + 32) = *(void *)(a2 + 32);
        *(void *)(a1 + 40) = *(void *)(a2 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        goto LABEL_21;
      }
      sub_3399C(a1 + 32);
    }
    else if (v13 >= 3)
    {
LABEL_17:
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
LABEL_21:
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
      goto LABEL_22;
    }
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    goto LABEL_21;
  }
  if (v5 == 1)
  {
    long long v7 = *v6;
    long long v8 = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
    _OWORD *v4 = v7;
    *(_OWORD *)(a1 + 32) = v8;
  }
  else
  {
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    unint64_t v11 = *(void *)(a2 + 40);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v11 < 4)
    {
      *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    }
    else
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 40) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
    }
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    swift_bridgeObjectRetain();
  }
LABEL_22:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t sub_35E48(uint64_t a1)
{
  return a1;
}

__n128 _s28RecommendationBlockRequestV2Vwtk(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 60) = *(_OWORD *)(a2 + 60);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t _s28RecommendationBlockRequestV2Vwta(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 16);
  if (*(void *)(a1 + 16) == 1) {
    goto LABEL_4;
  }
  if (v4 != 1)
  {
    *(void *)(a1 + 16) = v4;
    swift_bridgeObjectRelease();
    *(void *)(a1 + 24) = *(void *)(a2 + 24);
    swift_bridgeObjectRelease();
    long long v6 = (void *)(a2 + 32);
    unint64_t v7 = *(void *)(a1 + 40);
    unint64_t v8 = *(void *)(a2 + 40);
    if (v7 != 3)
    {
      if (v8 == 3)
      {
        sub_354A4(a1 + 32);
      }
      else if (v7 >= 3)
      {
        if (v8 >= 3)
        {
          *(void *)(a1 + 32) = *v6;
          *(void *)(a1 + 40) = v8;
          swift_bridgeObjectRelease();
          goto LABEL_12;
        }
        sub_3399C(a1 + 32);
      }
    }
    *(_OWORD *)(a1 + 32) = *(_OWORD *)v6;
LABEL_12:
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    swift_bridgeObjectRelease();
    *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
    goto LABEL_13;
  }
  sub_35E48(a1 + 16);
LABEL_4:
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(_OWORD *)(a1 + 41) = *(_OWORD *)(a2 + 41);
LABEL_13:
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(_DWORD *)(a1 + 72) = *(_DWORD *)(a2 + 72);
  return a1;
}

uint64_t _s28RecommendationBlockRequestV2Vwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 76)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s28RecommendationBlockRequestV2Vwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_DWORD *)(result + 72) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 76) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 76) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockRequestV2()
{
  return &type metadata for Transport.RecommendationBlockRequestV2;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockRequestV2.CodingKeys()
{
  return &type metadata for Transport.RecommendationBlockRequestV2.CodingKeys;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockResponseV2()
{
  return &type metadata for Transport.RecommendationBlockResponseV2;
}

ValueMetadata *type metadata accessor for Transport.RecommendationBlockResponseV2.CodingKeys()
{
  return &type metadata for Transport.RecommendationBlockResponseV2.CodingKeys;
}

uint64_t _s23RecommendationRequestV2Vwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s23RecommendationRequestV2Vwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s23RecommendationRequestV2Vwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23RecommendationRequestV2Vwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s23RecommendationRequestV2Vwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s23RecommendationRequestV2Vwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationRequestV2()
{
  return &type metadata for Transport.RecommendationRequestV2;
}

uint64_t getEnumTagSinglePayload for PositiveAffinitySource.PositiveStarRating(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFE) {
    goto LABEL_17;
  }
  if (a2 + 2 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 2) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 2;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 2;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 3;
  int v8 = v6 - 3;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s12BookAffinityV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x36408);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationRequestV2.CodingKeys()
{
  return &type metadata for Transport.RecommendationRequestV2.CodingKeys;
}

uint64_t _s24RecommendationResponseV2Vwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s24RecommendationResponseV2Vwcp(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s24RecommendationResponseV2Vwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

_OWORD *_s24RecommendationResponseV2Vwta(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s24RecommendationResponseV2Vwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s24RecommendationResponseV2Vwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationResponseV2()
{
  return &type metadata for Transport.RecommendationResponseV2;
}

uint64_t _s24RecommendationResponseV2V10CodingKeysOwet(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF9) {
    goto LABEL_17;
  }
  if (a2 + 7 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 7) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 7;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 7;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 8;
  int v8 = v6 - 8;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s24RecommendationResponseV2V10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *__n128 result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x368C0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.RecommendationResponseV2.CodingKeys()
{
  return &type metadata for Transport.RecommendationResponseV2.CodingKeys;
}

ValueMetadata *type metadata accessor for Transport.MetadataRequest()
{
  return &type metadata for Transport.MetadataRequest;
}

ValueMetadata *type metadata accessor for Transport.MetadataRequest.CodingKeys()
{
  return &type metadata for Transport.MetadataRequest.CodingKeys;
}

void *_s16MetadataResponseVwCP(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s16MetadataResponseVwxx()
{
  return swift_bridgeObjectRelease();
}

void *_s16MetadataResponseVwca(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s16MetadataResponseVwta(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s27RecommendationBlockResponseVwet_0(uint64_t *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *((unsigned char *)a1 + 8)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  uint64_t v3 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s27RecommendationBlockResponseVwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 8) = 0;
    }
    if (a2) {
      *(void *)__n128 result = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.MetadataResponse()
{
  return &type metadata for Transport.MetadataResponse;
}

uint64_t getEnumTagSinglePayload for RecommendationSource(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s27RecommendationBlockResponseV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *__n128 result = a2;
        return result;
      case 2:
        *(_WORD *)__n128 result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)__n128 result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *__n128 result = 0;
      break;
    case 2:
      *(_WORD *)__n128 result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x36B68);
    case 4:
      *(_DWORD *)__n128 result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.MetadataResponse.CodingKeys()
{
  return &type metadata for Transport.MetadataResponse.CodingKeys;
}

uint64_t _s21BookIdToMetadataEntryVwxx()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s21BookIdToMetadataEntryVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s21BookIdToMetadataEntryVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21BookIdToMetadataEntryVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s21BookIdToMetadataEntryVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 48)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s21BookIdToMetadataEntryVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 48) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 48) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.BookIdToMetadataEntry()
{
  return &type metadata for Transport.BookIdToMetadataEntry;
}

ValueMetadata *type metadata accessor for Transport.BookIdToMetadataEntry.CodingKeys()
{
  return &type metadata for Transport.BookIdToMetadataEntry.CodingKeys;
}

uint64_t _s9DiagnosisVwxx(uint64_t a1)
{
  if (*(void *)(a1 + 8) >= 2uLL) {
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 24) >= 4uLL) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *_s9DiagnosisVwcp(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (v4 >= 2)
  {
    *a1 = *a2;
    a1[1] = v4;
    swift_bridgeObjectRetain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2 + 2;
  unint64_t v6 = a2[3];
  if (v6 >= 4)
  {
    a1[2] = *v5;
    a1[3] = v6;
    swift_bridgeObjectRetain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *(_OWORD *)v5;
  }
  uint64_t v7 = a2[5];
  a1[4] = a2[4];
  a1[5] = v7;
  uint64_t v8 = a2[6];
  uint64_t v9 = a2[7];
  a1[6] = v8;
  a1[7] = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s9DiagnosisVwca(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 2uLL)
  {
    if (v4 >= 2)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      goto LABEL_8;
    }
    goto LABEL_6;
  }
  if (v4 < 2)
  {
    sub_3399C((uint64_t)a1);
LABEL_6:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_8;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
LABEL_8:
  unint64_t v5 = a2[3];
  if (a1[3] >= 4uLL)
  {
    if (v5 >= 4)
    {
      a1[2] = a2[2];
      a1[3] = a2[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_15;
    }
    sub_3399C((uint64_t)(a1 + 2));
    goto LABEL_13;
  }
  if (v5 < 4)
  {
LABEL_13:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
LABEL_15:
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9DiagnosisVwta(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 2uLL) {
    goto LABEL_4;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 2)
  {
    sub_3399C(a1);
LABEL_4:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    goto LABEL_6;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
LABEL_6:
  unint64_t v5 = (void *)(a2 + 16);
  if (*(void *)(a1 + 24) >= 4uLL)
  {
    unint64_t v6 = *(void *)(a2 + 24);
    if (v6 >= 4)
    {
      *(void *)(a1 + 16) = *v5;
      *(void *)(a1 + 24) = v6;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_3399C(a1 + 16);
  }
  *(_OWORD *)(a1 + 16) = *(_OWORD *)v5;
LABEL_11:
  uint64_t v7 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v7;
  swift_bridgeObjectRelease();
  uint64_t v8 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v8;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s15RecommendedItemVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_37108(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Diagnosis()
{
  return &type metadata for Transport.Diagnosis;
}

uint64_t _s26RecommendationBlockRequestV16MediaTypePayloadOwet_0(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFE && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483646);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 1;
  if (v4 >= 3) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s26RecommendationBlockRequestV16MediaTypePayloadOwst_0(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFD)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483646;
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFE) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 1;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Diagnosis.TypePayload()
{
  return &type metadata for Transport.Diagnosis.TypePayload;
}

uint64_t _s26RecommendationBlockRequestV16MediaTypePayloadOwCP_0(uint64_t a1, uint64_t a2)
{
  unint64_t v3 = *(void *)(a2 + 8);
  if (v3 < 0xFFFFFFFF)
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  else
  {
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v3;
    swift_bridgeObjectRetain();
  }
  return a1;
}

void *_s26RecommendationBlockRequestV16MediaTypePayloadOwca_0(void *a1, void *a2)
{
  unint64_t v4 = a2[1];
  if (a1[1] < 0xFFFFFFFFuLL)
  {
    if (v4 >= 0xFFFFFFFF)
    {
      *a1 = *a2;
      a1[1] = a2[1];
      swift_bridgeObjectRetain();
      return a1;
    }
LABEL_7:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
    goto LABEL_7;
  }
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s26RecommendationBlockRequestV16MediaTypePayloadOwta_0(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 8) < 0xFFFFFFFFuLL) {
    goto LABEL_5;
  }
  unint64_t v4 = *(void *)(a2 + 8);
  if (v4 < 0xFFFFFFFF)
  {
    swift_bridgeObjectRelease();
LABEL_5:
    *(_OWORD *)a1 = *(_OWORD *)a2;
    return a1;
  }
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s9DiagnosisV11CodePayloadOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFC && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 2147483644);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  unsigned int v4 = v3 + 1;
  unsigned int v5 = v3 - 3;
  if (v4 >= 5) {
    return v5;
  }
  else {
    return 0;
  }
}

uint64_t _s9DiagnosisV11CodePayloadOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFB)
  {
    *(void *)__n128 result = 0;
    *(void *)(result + 8) = 0;
    *(_DWORD *)__n128 result = a2 - 2147483644;
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFC) {
      *(unsigned char *)(result + 16) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2 + 3;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Diagnosis.CodePayload()
{
  return &type metadata for Transport.Diagnosis.CodePayload;
}

uint64_t getEnumTagSinglePayload for AccessRequirementUnsatisfiedReason(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFD) {
    goto LABEL_17;
  }
  if (a2 + 3 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 3) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 3;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 3;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 4;
  int v8 = v6 - 4;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *_s21RecommendationRequestV10CodingKeysOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *__n128 result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x37598);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Transport.Diagnosis.CodingKeys()
{
  return &type metadata for Transport.Diagnosis.CodingKeys;
}

unint64_t sub_375D0()
{
  unint64_t result = qword_26D050;
  if (!qword_26D050)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D050);
  }
  return result;
}

unint64_t sub_37624()
{
  unint64_t result = qword_26D058;
  if (!qword_26D058)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D058);
  }
  return result;
}

unint64_t sub_37678()
{
  unint64_t result = qword_26D060;
  if (!qword_26D060)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D060);
  }
  return result;
}

unint64_t sub_376CC()
{
  unint64_t result = qword_26D068;
  if (!qword_26D068)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D068);
  }
  return result;
}

unint64_t sub_37720()
{
  unint64_t result = qword_26D070;
  if (!qword_26D070)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D070);
  }
  return result;
}

unint64_t sub_37774()
{
  unint64_t result = qword_26D078;
  if (!qword_26D078)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D078);
  }
  return result;
}

unint64_t sub_377C8()
{
  unint64_t result = qword_26D080;
  if (!qword_26D080)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D080);
  }
  return result;
}

uint64_t sub_3781C(uint64_t a1, unint64_t a2)
{
  if (a2 >= 2) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_37830(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_37898(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_379B4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D138);
  uint64_t result = sub_1FB260();
  if (v10)
  {
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_26D140);
    uint64_t result = sub_1FB260();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for SeedBookAuthorRecommendationService();
      uint64_t v6 = swift_allocObject();
      sub_37C30(&v9, v6 + 16);
      uint64_t result = sub_37C30(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_262060;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t StringOperationFlattener.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AuthorRecommendationServiceAssembly()
{
  return self;
}

uint64_t sub_37AE4()
{
  uint64_t v0 = sub_1FB350();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v5 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB280();
  sub_12124(&qword_26D130);
  sub_1FB310();
  swift_release();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Scope.singleton(_:), v0);
  sub_1FB230();
  swift_release();
  swift_release();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

uint64_t sub_37C30(long long *a1, uint64_t a2)
{
  long long v2 = *a1;
  long long v3 = a1[1];
  *(void *)(a2 + 32) = *((void *)a1 + 4);
  *(_OWORD *)a2 = v2;
  *(_OWORD *)(a2 + 16) = v3;
  return a2;
}

uint64_t dispatch thunk of ExperimentIDsHeaderValueProviderType.provideExperimentIDs()(uint64_t a1, uint64_t a2)
{
  long long v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_37D38;
  return v7(a1, a2);
}

uint64_t sub_37D38(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *v2;
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v7 + 8);
  return v5(a1, a2);
}

uint64_t CommonCurrency.Header.hash(into:)()
{
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int CommonCurrency.Header.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t sub_37F34()
{
  sub_1FB8C0();

  return sub_1FB8C0();
}

Swift::Int sub_37F84()
{
  return sub_1FC830();
}

uint64_t static CommonCurrency.Headers.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  return sub_194C0(*a1, *a2);
}

void CommonCurrency.Headers.hash(into:)()
{
  uint64_t v1 = *v0;
  sub_1FC7F0(*(void *)(*v0 + 16));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    uint64_t v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
    swift_bridgeObjectRelease();
  }
}

Swift::Int CommonCurrency.Headers.hashValue.getter()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  return sub_1FC830();
}

void sub_3818C()
{
  uint64_t v1 = *v0;
  Swift::UInt v2 = *(void *)(*v0 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    uint64_t v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
  }
}

Swift::Int sub_38234()
{
  uint64_t v1 = *v0;
  sub_1FC7E0();
  Swift::UInt v2 = *(void *)(v1 + 16);
  sub_1FC7F0(v2);
  if (v2)
  {
    uint64_t v3 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v3 += 32;
      --v2;
    }
    while (v2);
  }
  return sub_1FC830();
}

void *sub_382EC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46588(0, v1, 0);
    uint64_t v3 = (void **)(a1 + 56);
    do
    {
      uint64_t v4 = (uint64_t)*(v3 - 3);
      uint64_t v5 = (uint64_t)*(v3 - 2);
      uint64_t v6 = *v3;
      uint64_t v19 = (uint64_t)*(v3 - 1);
      uint64_t v7 = qword_26C2E8;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v7 != -1) {
        swift_once();
      }
      uint64_t v8 = qword_26D150;
      uint64_t v9 = sub_1FB890();
      uint64_t v11 = v10;
      swift_bridgeObjectRetain();
      char v12 = sub_396C8(v9, v11, v8);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v12)
      {
        unint64_t v13 = (void *)0xEA00000000003E64;
        uint64_t v14 = 0x657463616465723CLL;
      }
      else
      {
        swift_bridgeObjectRetain();
        unint64_t v13 = v6;
        uint64_t v14 = v19;
      }
      swift_bridgeObjectRetain();
      v20._countAndFlagsBits = 8250;
      v20._object = (void *)0xE200000000000000;
      sub_1FB8F0(v20);
      v21._countAndFlagsBits = v14;
      v21._object = v13;
      sub_1FB8F0(v21);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_46588(v15 > 1, v16 + 1, 1);
      }
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = v4;
      v17[5] = v5;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_384CC(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  Swift::UInt v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    sub_465F8(0, v1, 0);
    Swift::UInt v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = a1 + 32;
    do
    {
      sub_5606C(v4, (uint64_t)v8, &qword_26D168);
      uint64_t v9 = v2;
      unint64_t v6 = v2[2];
      unint64_t v5 = v2[3];
      if (v6 >= v5 >> 1)
      {
        sub_465F8(v5 > 1, v6 + 1, 1);
        Swift::UInt v2 = v9;
      }
      v2[2] = v6 + 1;
      sub_55844((uint64_t)v8, (uint64_t)&v2[5 * v6 + 4], &qword_26D168);
      v4 += 40;
      --v1;
    }
    while (v1);
  }
  return v2;
}

uint64_t sub_385C0(void (*a1)(_OWORD *__return_ptr, void *, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (!v5) {
    return (uint64_t)v6;
  }
  uint64_t v7 = a3;
  uint64_t v31 = _swiftEmptyArrayStorage;
  sub_46658(0, v5, 0);
  unint64_t v6 = _swiftEmptyArrayStorage;
  uint64_t result = sub_14D538(v7);
  uint64_t v9 = result;
  uint64_t v11 = v10;
  char v13 = v12 & 1;
  uint64_t v25 = v7 + 56;
  while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(v7 + 32))
  {
    if (((*(void *)(v25 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
      goto LABEL_15;
    }
    if (*(_DWORD *)(v7 + 36) != v11) {
      goto LABEL_16;
    }
    uint64_t v14 = (void *)(*(void *)(v7 + 48) + 16 * v9);
    uint64_t v15 = v14[1];
    v28[0] = *v14;
    v28[1] = v15;
    swift_bridgeObjectRetain();
    a1(v29, v28, &v27);
    if (v4)
    {
      swift_release();
      swift_bridgeObjectRelease();
      return (uint64_t)v6;
    }
    uint64_t v16 = v7;
    swift_bridgeObjectRelease();
    uint64_t v31 = v6;
    unint64_t v18 = v6[2];
    unint64_t v17 = v6[3];
    if (v18 >= v17 >> 1)
    {
      sub_46658(v17 > 1, v18 + 1, 1);
      unint64_t v6 = v31;
    }
    v6[2] = v18 + 1;
    uint64_t v19 = &v6[7 * v18];
    long long v20 = v29[0];
    long long v21 = v29[1];
    long long v22 = v29[2];
    v19[10] = v30;
    *((_OWORD *)v19 + 3) = v21;
    *((_OWORD *)v19 + 4) = v22;
    *((_OWORD *)v19 + 2) = v20;
    uint64_t v7 = v16;
    uint64_t result = sub_14D5DC(v9, v11, v13 & 1, v16);
    uint64_t v9 = result;
    uint64_t v11 = v23;
    char v13 = v24 & 1;
    --v5;
    uint64_t v4 = 0;
    if (!v5)
    {
      sub_55F94(result, v23, v24 & 1);
      return (uint64_t)v6;
    }
  }
  __break(1u);
LABEL_15:
  __break(1u);
LABEL_16:
  __break(1u);
  return result;
}

void *sub_387A8(void (*a1)(uint64_t *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    char v34 = _swiftEmptyArrayStorage;
    sub_46728(0, v5, 0);
    unint64_t v6 = _swiftEmptyArrayStorage;
    for (uint64_t i = (void *)(a3 + 104); ; i += 10)
    {
      char v9 = *((unsigned char *)i - 64);
      uint64_t v10 = *(i - 7);
      char v11 = *((unsigned char *)i - 48);
      uint64_t v12 = *(i - 5);
      char v13 = *((unsigned char *)i - 32);
      uint64_t v15 = *(i - 3);
      uint64_t v14 = *(i - 2);
      uint64_t v16 = *(i - 1);
      uint64_t v17 = *i;
      uint64_t v23 = *(i - 9);
      char v24 = v9;
      uint64_t v25 = v10;
      char v26 = v11;
      uint64_t v27 = v12;
      char v28 = v13;
      uint64_t v29 = v15;
      uint64_t v30 = v14;
      uint64_t v31 = v16;
      uint64_t v32 = v17;
      sub_5480C(v12, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(&v33, &v23);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      sub_54820(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v18 = v33;
      char v34 = v6;
      unint64_t v20 = v6[2];
      unint64_t v19 = v6[3];
      if (v20 >= v19 >> 1)
      {
        sub_46728(v19 > 1, v20 + 1, 1);
        unint64_t v6 = v34;
      }
      v6[2] = v20 + 1;
      v6[v20 + 4] = v18;
      if (!--v5) {
        return v6;
      }
    }
    sub_54820(v12, v13);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void *sub_38954(void (*a1)(void *__return_ptr, uint64_t *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    unsigned __int8 v39 = _swiftEmptyArrayStorage;
    sub_466D8(0, v5, 0);
    unint64_t v6 = _swiftEmptyArrayStorage;
    uint64_t v8 = (uint64_t *)(a3 + 48);
    while (1)
    {
      char v9 = *((unsigned char *)v8 - 8);
      uint64_t v10 = *v8;
      char v11 = *((unsigned char *)v8 + 8);
      uint64_t v12 = v8[2];
      char v13 = *((unsigned char *)v8 + 24);
      uint64_t v15 = v8[4];
      uint64_t v14 = v8[5];
      uint64_t v16 = v8[6];
      uint64_t v27 = *(v8 - 2);
      char v28 = v9;
      uint64_t v29 = v10;
      char v30 = v11;
      uint64_t v31 = v12;
      char v32 = v13;
      uint64_t v33 = v15;
      uint64_t v34 = v14;
      uint64_t v35 = v16;
      sub_5480C(v12, v13);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      a1(v36, &v27);
      if (v4) {
        break;
      }
      sub_54820(v12, v13);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v17 = v36[0];
      uint64_t v18 = v36[1];
      int v19 = v37;
      long long v20 = v38;
      unsigned __int8 v39 = v6;
      unint64_t v22 = v6[2];
      unint64_t v21 = v6[3];
      if (v22 >= v21 >> 1)
      {
        long long v25 = v38;
        sub_466D8(v21 > 1, v22 + 1, 1);
        long long v20 = v25;
        unint64_t v6 = v39;
      }
      v6[2] = v22 + 1;
      uint64_t v23 = &v6[5 * v22];
      v23[4] = v17;
      v23[5] = v18;
      *((_DWORD *)v23 + 12) = v19;
      *(_OWORD *)(v23 + 7) = v20;
      v8 += 9;
      --v5;
      uint64_t v4 = 0;
      if (!v5) {
        return v6;
      }
    }
    sub_54820(v12, v13);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v6;
}

void *sub_38B10(void (*a1)(long long *__return_ptr, char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  int64_t v5 = *(void *)(a3 + 16);
  unint64_t v6 = _swiftEmptyArrayStorage;
  if (v5)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_46BA8(0, v5, 0);
    unint64_t v6 = _swiftEmptyArrayStorage;
    char v9 = (char *)(a3 + 32);
    while (1)
    {
      char v10 = *v9++;
      char v14 = v10;
      a1(v15, &v14);
      if (v4) {
        break;
      }
      uint64_t v4 = 0;
      uint64_t v16 = v6;
      unint64_t v12 = v6[2];
      unint64_t v11 = v6[3];
      if (v12 >= v11 >> 1)
      {
        sub_46BA8(v11 > 1, v12 + 1, 1);
        unint64_t v6 = v16;
      }
      v6[2] = v12 + 1;
      sub_37C30(v15, (uint64_t)&v6[5 * v12 + 4]);
      if (!--v5) {
        return v6;
      }
    }
    swift_release();
  }
  return v6;
}

uint64_t sub_38C28(uint64_t a1)
{
  uint64_t result = sub_1FBCD0();
  int64_t v3 = 0;
  uint64_t v18 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (Swift::Int *)(*(void *)(a1 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_7094(&v17, v12, v13);
    uint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_38DC4(uint64_t a1)
{
  sub_55738();
  uint64_t result = sub_1FBCD0();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_769C(&v14, *(unsigned char *)(*(void *)(a1 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_38F3C(uint64_t a1)
{
  uint64_t result = sub_1FBCD0();
  int64_t v3 = 0;
  uint64_t v15 = result;
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    uint64_t result = sub_73A4(&v14, *(void *)(*(void *)(a1 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_390B0(uint64_t a1)
{
  sub_556E4();
  uint64_t result = sub_1FBCD0();
  int64_t v3 = 0;
  uint64_t v5 = a1 + 64;
  uint64_t v4 = *(void *)(a1 + 64);
  uint64_t v17 = result;
  uint64_t v6 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & v4;
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v12 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v12 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v3;
    if (!v13)
    {
      int64_t v3 = v12 + 1;
      if (v12 + 1 >= v9) {
        goto LABEL_23;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v3);
      if (!v13)
      {
        int64_t v3 = v12 + 2;
        if (v12 + 2 >= v9) {
          goto LABEL_23;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v3);
        if (!v13)
        {
          int64_t v3 = v12 + 3;
          if (v12 + 3 >= v9) {
            goto LABEL_23;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v3);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v3 << 6);
LABEL_5:
    memcpy(__dst, (const void *)(*(void *)(a1 + 56) + 560 * v11), 0x229uLL);
    sub_12384(__dst);
    sub_74A0(__src, __dst);
    memcpy(v16, __src, 0x229uLL);
    uint64_t result = (uint64_t)sub_124B4(v16);
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9)
  {
LABEL_23:
    swift_release();
    return v17;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v3 = v14;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v3 >= v9) {
      goto LABEL_23;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v3);
    ++v14;
    if (v13) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t static CommonCurrency.redactedHeaderNames.getter()
{
  if (qword_26C2E8 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t (*static CommonCurrency.redactedHeaderNames.modify(void *a1))(uint64_t *a1, char a2)
{
  if (qword_26C2E8 != -1) {
    swift_once();
  }
  *a1 = qword_26D150;
  swift_bridgeObjectRetain();
  return sub_39340;
}

uint64_t sub_39340(uint64_t *a1, char a2)
{
  if (a2)
  {
    uint64_t v2 = swift_bridgeObjectRetain();
    _s20BooksPersonalization14CommonCurrencyO19redactedHeaderNamesShySSGvsZ_0(v2);
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v4 = *a1;
    return _s20BooksPersonalization14CommonCurrencyO19redactedHeaderNamesShySSGvsZ_0(v4);
  }
}

uint64_t sub_393A4()
{
  Swift::Int v0 = sub_BD7F0((uint64_t)&off_2540D8);
  uint64_t result = swift_arrayDestroy();
  qword_26D150 = v0;
  return result;
}

uint64_t CommonCurrency.Header.description.getter()
{
  uint64_t v1 = *v0;
  uint64_t v3 = v0[2];
  uint64_t v2 = (void *)v0[3];
  if (qword_26C2E8 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_26D150;
  uint64_t v5 = sub_1FB890();
  uint64_t v7 = v6;
  swift_bridgeObjectRetain();
  LOBYTE(v5) = sub_396C8(v5, v7, v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v5)
  {
    uint64_t v2 = (void *)0xEA00000000003E64;
    uint64_t v3 = 0x657463616465723CLL;
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = 8250;
  v9._object = (void *)0xE200000000000000;
  sub_1FB8F0(v9);
  v10._countAndFlagsBits = v3;
  v10._object = v2;
  sub_1FB8F0(v10);
  swift_bridgeObjectRelease();
  return v1;
}

BOOL sub_3950C(unsigned __int8 a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  Swift::UInt v3 = a1;
  sub_1FC7E0();
  sub_1FC7F0(v3);
  Swift::Int v4 = sub_1FC830();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(unsigned __int8 *)(v8 + v6) == v3) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    int v12 = *(unsigned __int8 *)(v8 + v11);
    BOOL result = v12 == v3;
    if (v12 == v3) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

BOOL sub_395FC(uint64_t a1, uint64_t a2)
{
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  uint64_t v4 = sub_1FC7D0();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  uint64_t v8 = *(void *)(a2 + 48);
  if (*(void *)(v8 + 8 * v6) == a1) {
    return 1;
  }
  uint64_t v10 = ~v5;
  unint64_t v11 = (v6 + 1) & v10;
  if (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) == 0) {
    return 0;
  }
  do
  {
    uint64_t v12 = *(void *)(v8 + 8 * v11);
    BOOL result = v12 == a1;
    if (v12 == a1) {
      break;
    }
    unint64_t v11 = (v11 + 1) & v10;
  }
  while (((*(void *)(v7 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  return result;
}

uint64_t sub_396C8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (*(void *)(a3 + 16))
  {
    sub_1FC7E0();
    sub_1FB8C0();
    Swift::Int v6 = sub_1FC830();
    uint64_t v7 = -1 << *(unsigned char *)(a3 + 32);
    unint64_t v8 = v6 & ~v7;
    uint64_t v9 = a3 + 56;
    if ((*(void *)(a3 + 56 + ((v8 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v8))
    {
      uint64_t v10 = *(void *)(a3 + 48);
      unint64_t v11 = (void *)(v10 + 16 * v8);
      BOOL v12 = *v11 == a1 && v11[1] == a2;
      if (v12 || (sub_1FC5F0() & 1) != 0) {
        return 1;
      }
      uint64_t v14 = ~v7;
      unint64_t v15 = (v8 + 1) & v14;
      if ((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15))
      {
        while (1)
        {
          int64_t v16 = (void *)(v10 + 16 * v15);
          BOOL v17 = *v16 == a1 && v16[1] == a2;
          if (v17 || (sub_1FC5F0() & 1) != 0) {
            break;
          }
          uint64_t result = 0;
          unint64_t v15 = (v15 + 1) & v14;
          if (((*(void *)(v9 + ((v15 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v15) & 1) == 0) {
            return result;
          }
        }
        return 1;
      }
    }
  }
  return 0;
}

uint64_t sub_39800(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1FC7E0();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_1FC830();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      while (1)
      {
        if (*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          if (*(unsigned char *)(*(void *)(a2 + 48) + v6) == 1)
          {
            uint64_t v8 = 0x6F6F626F69647561;
            unint64_t v9 = 0xE90000000000006BLL;
            int v10 = a1;
            if (!a1) {
              goto LABEL_18;
            }
          }
          else
          {
            unint64_t v9 = 0xE500000000000000;
            uint64_t v8 = 0x646578696DLL;
            int v10 = a1;
            if (!a1)
            {
LABEL_18:
              unint64_t v12 = 0xE500000000000000;
              if (v8 != 0x6B6F6F6265) {
                goto LABEL_20;
              }
              goto LABEL_19;
            }
          }
        }
        else
        {
          unint64_t v9 = 0xE500000000000000;
          uint64_t v8 = 0x6B6F6F6265;
          int v10 = a1;
          if (!a1) {
            goto LABEL_18;
          }
        }
        if (v10 == 1) {
          uint64_t v11 = 0x6F6F626F69647561;
        }
        else {
          uint64_t v11 = 0x646578696DLL;
        }
        if (v10 == 1) {
          unint64_t v12 = 0xE90000000000006BLL;
        }
        else {
          unint64_t v12 = 0xE500000000000000;
        }
        if (v8 != v11) {
          goto LABEL_20;
        }
LABEL_19:
        if (v9 == v12)
        {
          swift_bridgeObjectRelease_n();
          char v13 = 1;
          return v13 & 1;
        }
LABEL_20:
        char v13 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v13 & 1) == 0)
        {
          unint64_t v6 = (v6 + 1) & v7;
          if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6)) {
            continue;
          }
        }
        return v13 & 1;
      }
    }
  }
  char v13 = 0;
  return v13 & 1;
}

uint64_t sub_39A28(char a1, uint64_t a2)
{
  if (*(void *)(a2 + 16)
    && ((sub_1FC7E0(), (a1 & 1) != 0) ? (uint64_t v4 = 1684627824) : (uint64_t v4 = 1701147238),
        sub_1FB8C0(),
        swift_bridgeObjectRelease(),
        Swift::Int v5 = sub_1FC830(),
        uint64_t v6 = -1 << *(unsigned char *)(a2 + 32),
        unint64_t v7 = v5 & ~v6,
        ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7) & 1) != 0))
  {
    uint64_t v8 = ~v6;
    while (1)
    {
      uint64_t v9 = *(unsigned char *)(*(void *)(a2 + 48) + v7) ? 1684627824 : 1701147238;
      if (v9 == v4) {
        break;
      }
      char v10 = sub_1FC5F0();
      swift_bridgeObjectRelease_n();
      if ((v10 & 1) == 0)
      {
        unint64_t v7 = (v7 + 1) & v8;
        if ((*(void *)(a2 + 56 + ((v7 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v7)) {
          continue;
        }
      }
      return v10 & 1;
    }
    swift_bridgeObjectRelease_n();
    char v10 = 1;
  }
  else
  {
    char v10 = 0;
  }
  return v10 & 1;
}

uint64_t sub_39B60(unsigned __int8 a1, uint64_t a2)
{
  if (*(void *)(a2 + 16))
  {
    sub_1FC7E0();
    CollectionRecommendationType.rawValue.getter();
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    Swift::Int v4 = sub_1FC830();
    uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v6 = v4 & ~v5;
    if ((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
    {
      uint64_t v7 = ~v5;
      uint64_t v8 = a1;
      while (1)
      {
        unint64_t v9 = 0xE400000000000000;
        uint64_t v10 = 1802465122;
        switch(*(unsigned char *)(*(void *)(a2 + 48) + v6))
        {
          case 1:
            unint64_t v9 = 0xE500000000000000;
            uint64_t v10 = 0x736B6F6F62;
            break;
          case 2:
            uint64_t v10 = 0xD000000000000010;
            unint64_t v9 = 0x8000000000216AA0;
            break;
          case 3:
            uint64_t v10 = 0x417942736B6F6F62;
            unint64_t v9 = 0xED0000726F687475;
            break;
          case 4:
            uint64_t v10 = 0xD000000000000017;
            unint64_t v9 = 0x8000000000216200;
            break;
          case 5:
            uint64_t v10 = 0x476E49736B6F6F62;
            uint64_t v11 = 1701998181;
            goto LABEL_18;
          case 6:
            unint64_t v12 = "booksBySuggestedAuthors";
            goto LABEL_12;
          case 7:
            unint64_t v12 = "booksYouMightLike";
LABEL_12:
            unint64_t v9 = (unint64_t)v12 | 0x8000000000000000;
            uint64_t v10 = 0xD000000000000011;
            break;
          case 8:
            uint64_t v10 = 0xD000000000000013;
            unint64_t v9 = 0x8000000000216260;
            break;
          case 9:
            unint64_t v9 = 0xE600000000000000;
            uint64_t v10 = 0x736569726573;
            break;
          case 0xA:
            unsigned int v13 = 1954047342;
            goto LABEL_17;
          case 0xB:
            unsigned int v13 = 1701998445;
LABEL_17:
            uint64_t v10 = v13 | 0x65536E4900000000;
            uint64_t v11 = 1936025970;
LABEL_18:
            unint64_t v9 = v11 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            break;
          default:
            break;
        }
        unint64_t v14 = 0xE400000000000000;
        uint64_t v15 = 1802465122;
        switch(v8)
        {
          case 1:
            unint64_t v14 = 0xE500000000000000;
            if (v10 == 0x736B6F6F62) {
              goto LABEL_37;
            }
            goto LABEL_38;
          case 2:
            unint64_t v16 = 0xD000000000000010;
            BOOL v17 = "http://localhost:18060";
            goto LABEL_26;
          case 3:
            unint64_t v14 = 0xED0000726F687475;
            if (v10 != 0x417942736B6F6F62) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 4:
            unint64_t v16 = 0xD000000000000017;
            BOOL v17 = "ry";
LABEL_26:
            unint64_t v14 = (unint64_t)v17 | 0x8000000000000000;
            if (v10 != v16) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 5:
            uint64_t v18 = 0x476E49736B6F6F62;
            uint64_t v19 = 1701998181;
            goto LABEL_44;
          case 6:
            long long v20 = "booksBySuggestedAuthors";
            goto LABEL_31;
          case 7:
            long long v20 = "booksYouMightLike";
LABEL_31:
            unint64_t v14 = (unint64_t)v20 | 0x8000000000000000;
            if (v10 != 0xD000000000000011) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 8:
            unint64_t v14 = 0x8000000000216260;
            if (v10 != 0xD000000000000013) {
              goto LABEL_38;
            }
            goto LABEL_37;
          case 9:
            unint64_t v14 = 0xE600000000000000;
            uint64_t v15 = 0x736569726573;
            goto LABEL_36;
          case 10:
            unsigned int v22 = 1954047342;
            goto LABEL_43;
          case 11:
            unsigned int v22 = 1701998445;
LABEL_43:
            uint64_t v18 = v22 | 0x65536E4900000000;
            uint64_t v19 = 1936025970;
LABEL_44:
            unint64_t v14 = v19 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
            if (v10 != v18) {
              goto LABEL_38;
            }
            goto LABEL_37;
          default:
LABEL_36:
            if (v10 != v15) {
              goto LABEL_38;
            }
LABEL_37:
            if (v9 == v14)
            {
              swift_bridgeObjectRelease_n();
              char v21 = 1;
              return v21 & 1;
            }
LABEL_38:
            char v21 = sub_1FC5F0();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            if (v21) {
              return v21 & 1;
            }
            unint64_t v6 = (v6 + 1) & v7;
            if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
              return v21 & 1;
            }
            break;
        }
      }
    }
  }
  char v21 = 0;
  return v21 & 1;
}

BOOL sub_39F84(void *__src, uint64_t a2)
{
  memcpy(__dst, __src, 0x229uLL);
  if (!*(void *)(a2 + 16)) {
    return 0;
  }
  memcpy(v12, __src, 0x229uLL);
  sub_1FC7E0();
  SeedBook.hash(into:)((uint64_t)v11);
  Swift::Int v4 = sub_1FC830();
  uint64_t v5 = -1 << *(unsigned char *)(a2 + 32);
  unint64_t v6 = v4 & ~v5;
  uint64_t v7 = a2 + 56;
  if (((*(void *)(a2 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
    return 0;
  }
  memcpy(v12, (const void *)(*(void *)(a2 + 48) + 560 * v6), 0x229uLL);
  if (_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(v12, __dst)) {
    return 1;
  }
  uint64_t v10 = ~v5;
  do
  {
    unint64_t v6 = (v6 + 1) & v10;
    BOOL v8 = (*(void *)(v7 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) & (1 << v6)) != 0;
    if ((*(void *)(v7 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) & (1 << v6)) == 0) {
      break;
    }
    memcpy(v12, (const void *)(*(void *)(a2 + 48) + 560 * v6), 0x229uLL);
  }
  while (!_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(v12, __dst));
  return v8;
}

uint64_t CommonCurrency.Headers.description.getter()
{
  uint64_t v0 = swift_bridgeObjectRetain();
  sub_382EC(v0);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v1 = sub_1FB7B0();
  swift_bridgeObjectRelease();
  return v1;
}

Swift::String_optional __swiftcall CommonCurrency.Headers.firstValue(name:)(Swift::String name)
{
  uint64_t v2 = *v1;
  uint64_t v3 = *(void *)(*v1 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain_n();
    sub_51438();
    Swift::Int v4 = (void **)(v2 + 56);
    while (1)
    {
      uint64_t v6 = (uint64_t)*(v4 - 1);
      uint64_t v5 = *v4;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!sub_1FBF00()) {
        break;
      }
      v4 += 4;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v3)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_6;
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
  }
  else
  {
LABEL_6:
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = v6;
  BOOL v8 = v5;
  result.value._object = v8;
  result.value._countAndFlagsBits = v7;
  return result;
}

void *CommonCurrency.Headers.values(name:)()
{
  swift_bridgeObjectRetain();
  uint64_t v0 = swift_bridgeObjectRetain();
  uint64_t v1 = sub_518A0(v0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    sub_46588(0, v2, 0);
    uint64_t v3 = (uint64_t *)(v1 + 56);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v6 = _swiftEmptyArrayStorage[2];
      unint64_t v7 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v6 >= v7 >> 1) {
        sub_46588(v7 > 1, v6 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v6 + 1;
      BOOL v8 = &_swiftEmptyArrayStorage[2 * v6];
      v8[4] = v5;
      v8[5] = v4;
      v3 += 4;
      --v2;
    }
    while (v2);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t CommonCurrency.Headers.getPrimitiveOptional<A>(_:as:)@<X0>(uint64_t a1@<X3>, uint64_t a2@<X8>)
{
  uint64_t v3 = a2;
  uint64_t v4 = *v2;
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(v3, 1, 1);
  }
  uint64_t v9 = a1;
  swift_bridgeObjectRetain_n();
  sub_51438();
  uint64_t v6 = v4 + 56;
  while (1)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (!sub_1FBF00()) {
      break;
    }
    v6 += 32;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (!--v5)
    {
      swift_bridgeObjectRelease_n();
      a1 = v9;
      uint64_t v3 = a2;
      return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a1 - 8) + 56))(v3, 1, 1);
    }
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  return sub_1FC5C0();
}

Swift::Void __swiftcall CommonCurrency.Headers.add(name:value:)(Swift::String name, Swift::String_optional value)
{
  if (value.value._object)
  {
    object = value.value._object;
    uint64_t countAndFlagsBits = value.value._countAndFlagsBits;
    uint64_t v5 = name._object;
    uint64_t v6 = name._countAndFlagsBits;
    unint64_t v7 = *v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v7 = sub_41A9C(0, v7[2] + 1, 1, v7);
    }
    unint64_t v9 = v7[2];
    unint64_t v8 = v7[3];
    if (v9 >= v8 >> 1) {
      unint64_t v7 = sub_41A9C((void *)(v8 > 1), v9 + 1, 1, v7);
    }
    v7[2] = v9 + 1;
    uint64_t v10 = &v7[4 * v9];
    void v10[4] = v6;
    v10[5] = v5;
    v10[6] = countAndFlagsBits;
    v10[7] = object;
    *int64_t v2 = v7;
  }
}

uint64_t CommonCurrency.Headers.addPrimitive<A>(name:value:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v23 = a1;
  uint64_t v9 = sub_1FBEB0();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  unint64_t v12 = (char *)&v22 - v11;
  (*(void (**)(char *, uint64_t, uint64_t))(v10 + 16))((char *)&v22 - v11, a3, v9);
  uint64_t v13 = *(void *)(a4 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v12, 1, a4) == 1) {
    return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  uint64_t v15 = sub_1FC580();
  uint64_t v17 = v16;
  (*(void (**)(char *, uint64_t))(v13 + 8))(v12, a4);
  uint64_t v18 = *v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v18 = sub_41A9C(0, v18[2] + 1, 1, v18);
  }
  unint64_t v20 = v18[2];
  unint64_t v19 = v18[3];
  if (v20 >= v19 >> 1) {
    uint64_t v18 = sub_41A9C((void *)(v19 > 1), v20 + 1, 1, v18);
  }
  v18[2] = v20 + 1;
  char v21 = &v18[4 * v20];
  v21[4] = v23;
  v21[5] = a2;
  v21[6] = v15;
  v21[7] = v17;
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = v18;
  return result;
}

uint64_t AnyCodableContainer.value.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_5606C(v1, a1, &qword_26D168);
}

uint64_t AnyCodableContainer.value.setter(uint64_t a1)
{
  return sub_51A64(a1, v1);
}

uint64_t AnyCodableContainer.init(_:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  *(void *)(a2 + 32) = 0;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  return sub_51A64(a1, a2);
}

uint64_t AnyCodableContainer.init(untypedValue:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_3A8EC(a1, (uint64_t)v10);
  if (!v2)
  {
    uint64_t v9 = 0;
    long long v7 = 0u;
    long long v8 = 0u;
    sub_51A64((uint64_t)v10, (uint64_t)&v7);
    long long v5 = v8;
    *(_OWORD *)a2 = v7;
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v9;
  }
  return sub_55F38(a1, &qword_26D170);
}

uint64_t sub_3A8EC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  sub_5606C(a1, (uint64_t)&v20, &qword_26D170);
  if (!v21)
  {
    uint64_t result = sub_55F38((uint64_t)&v20, &qword_26D170);
    *(void *)(a2 + 32) = 0;
    *(_OWORD *)a2 = 0u;
    *(_OWORD *)(a2 + 16) = 0u;
    return result;
  }
  sub_560D0(&v20, &v22);
  sub_560E0((uint64_t)&v22, (uint64_t)&v20);
  sub_12124(&qword_26D680);
  if (!swift_dynamicCast())
  {
    sub_560E0((uint64_t)&v22, (uint64_t)&v20);
    sub_12124(&qword_26D688);
    if (!swift_dynamicCast())
    {
      sub_560E0((uint64_t)&v22, (uint64_t)&v19);
      sub_12124(&qword_26D1C0);
      if (swift_dynamicCast())
      {
        sub_1264C((uint64_t)&v22);
        sub_37C30(v17, (uint64_t)&v20);
        return sub_37C30(&v20, a2);
      }
      uint64_t v18 = 0;
      memset(v17, 0, sizeof(v17));
      sub_55F38((uint64_t)v17, &qword_26D168);
      uint64_t v13 = sub_1FC120();
      swift_allocError();
      uint64_t v15 = v14;
      sub_12124(&qword_26D1C8);
      sub_560E0((uint64_t)&v22, v15);
      *(void *)&long long v20 = 0;
      *((void *)&v20 + 1) = 0xE000000000000000;
      sub_1FC050(47);
      swift_bridgeObjectRelease();
      *(void *)&long long v20 = 0x272065707954;
      *((void *)&v20 + 1) = 0xE600000000000000;
      sub_5D64(&v22, v23);
      swift_getDynamicType();
      v25._uint64_t countAndFlagsBits = sub_1FC8A0();
      sub_1FB8F0(v25);
      swift_bridgeObjectRelease();
      v26._object = (void *)0x8000000000217200;
      v26._uint64_t countAndFlagsBits = 0xD000000000000027;
      sub_1FB8F0(v26);
      sub_1FC100();
      (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, enum case for EncodingError.invalidValue(_:), v13);
      swift_willThrow();
      return sub_1264C((uint64_t)&v22);
    }
    uint64_t v10 = sub_43EEC(*(uint64_t *)&v17[0]);
    if (v2)
    {
      sub_1264C((uint64_t)&v22);
      return swift_bridgeObjectRelease();
    }
    uint64_t v6 = (void *)v10;
    swift_bridgeObjectRelease();
    uint64_t v11 = &qword_26D1A0;
    *(void *)(a2 + 24) = sub_12124(&qword_26D1A0);
    unint64_t v12 = (unint64_t *)&unk_26D1A8;
LABEL_23:
    *(void *)(a2 + 32) = sub_52CC0(v12, v11);
    *(void *)a2 = v6;
    return sub_1264C((uint64_t)&v22);
  }
  int64_t v4 = *(void *)(*(void *)&v17[0] + 16);
  if (!v4)
  {
    swift_bridgeObjectRelease();
    uint64_t v6 = _swiftEmptyArrayStorage;
LABEL_20:
    uint64_t v11 = &qword_26D1B0;
    *(void *)(a2 + 24) = sub_12124(&qword_26D1B0);
    unint64_t v12 = (unint64_t *)&unk_26D1B8;
    goto LABEL_23;
  }
  uint64_t v16 = a2;
  unint64_t v19 = _swiftEmptyArrayStorage;
  sub_465F8(0, v4, 0);
  uint64_t v24 = *(void *)&v17[0];
  uint64_t v5 = *(void *)&v17[0] + 32;
  while (1)
  {
    sub_5606C(v5, (uint64_t)v17, &qword_26D170);
    sub_3A8EC(&v20, v17);
    sub_55F38((uint64_t)v17, &qword_26D170);
    if (v2) {
      break;
    }
    uint64_t v6 = v19;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_465F8(0, v6[2] + 1, 1);
      uint64_t v6 = v19;
    }
    unint64_t v8 = v6[2];
    unint64_t v7 = v6[3];
    if (v8 >= v7 >> 1)
    {
      sub_465F8(v7 > 1, v8 + 1, 1);
      uint64_t v6 = v19;
    }
    v6[2] = v8 + 1;
    sub_55844((uint64_t)&v20, (uint64_t)&v6[5 * v8 + 4], &qword_26D168);
    v5 += 32;
    if (!--v4)
    {
      swift_bridgeObjectRelease();
      a2 = v16;
      goto LABEL_20;
    }
  }
  swift_release();
  sub_1264C((uint64_t)&v22);
  return swift_bridgeObjectRelease();
}

uint64_t AnyCodableContainer.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_1FC840();
  if (!v2)
  {
    sub_5D64(v14, v15);
    if (sub_1FC680())
    {
      uint64_t v13 = 0;
      long long v5 = 0uLL;
      long long v11 = 0u;
      long long v12 = 0u;
      uint64_t v10 = 0;
    }
    else
    {
      sub_5D64(v14, v15);
      *((void *)&v12 + 1) = &type metadata for Bool;
      uint64_t v13 = &protocol witness table for Bool;
      LOBYTE(v11) = sub_1FC610() & 1;
      uint64_t v10 = 0;
      long long v5 = 0uLL;
    }
    long long v8 = v5;
    long long v9 = v5;
    sub_51A64((uint64_t)&v11, (uint64_t)&v8);
    long long v16 = v8;
    long long v17 = v9;
    uint64_t v18 = v10;
    sub_1264C((uint64_t)v14);
    long long v6 = v17;
    *(_OWORD *)a2 = v16;
    *(_OWORD *)(a2 + 16) = v6;
    *(void *)(a2 + 32) = v18;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t AnyCodableContainer.encode(to:)(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_1FC860();
  sub_5606C(v1, (uint64_t)&v31, &qword_26D168);
  if (v32)
  {
    sub_37C30(&v31, (uint64_t)v33);
    sub_51B70((uint64_t)v33, (uint64_t)&v31);
    sub_12124(&qword_26D1C0);
    if (swift_dynamicCast())
    {
      sub_51B20((uint64_t)v35, v36);
      sub_1FC6B0();
    }
    else if (swift_dynamicCast())
    {
      sub_51B20((uint64_t)v35, v36);
      sub_1FC6E0();
    }
    else if (swift_dynamicCast())
    {
      sub_51B20((uint64_t)v35, v36);
      sub_1FC710();
    }
    else if (swift_dynamicCast())
    {
      sub_51B20((uint64_t)v35, v36);
      sub_1FC700();
    }
    else if (swift_dynamicCast())
    {
      sub_51B20((uint64_t)v35, v36);
      sub_1FC6D0();
    }
    else if (swift_dynamicCast())
    {
      sub_51B20((uint64_t)v35, v36);
      sub_1FC6C0();
    }
    else
    {
      if (swift_dynamicCast())
      {
        sub_51B20((uint64_t)v35, v36);
        sub_1FC6A0();
      }
      else
      {
        sub_12124(&qword_26D1B0);
        if (!swift_dynamicCast())
        {
          sub_12124(&qword_26D1A0);
          if (swift_dynamicCast())
          {
            uint64_t v12 = sub_4438C(v26);
            swift_bridgeObjectRelease();
            v25[0] = v12;
            sub_51B20((uint64_t)v35, v36);
            sub_12124(&qword_26D190);
            sub_51C38(&qword_26D1D0, (void (*)(void))sub_51CB4);
            sub_1FC6F0();
            swift_release();
          }
          else
          {
            uint64_t v13 = sub_1FC120();
            swift_allocError();
            uint64_t v15 = v14;
            sub_12124(&qword_26D1C8);
            uint64_t v16 = v34;
            long long v17 = sub_5D64(v33, v34);
            v15[3] = v16;
            uint64_t v18 = sub_51BD4(v15);
            (*(void (**)(uint64_t *, void *, uint64_t))(*(void *)(v16 - 8) + 16))(v18, v17, v16);
            sub_5D64(v35, v36);
            sub_1FC690();
            sub_1FC100();
            (*(void (**)(uint64_t *, void, uint64_t))(*(void *)(v13 - 8) + 104))(v15, enum case for EncodingError.invalidValue(_:), v13);
            swift_willThrow();
          }
          goto LABEL_32;
        }
        int64_t v2 = *(void *)(v30 + 16);
        if (v2)
        {
          uint64_t v29 = _swiftEmptyArrayStorage;
          sub_46618(0, v2, 0);
          uint64_t v3 = v30 + 32;
          int64_t v4 = _swiftEmptyArrayStorage;
          do
          {
            sub_5606C(v3, (uint64_t)v25, &qword_26D168);
            sub_5606C((uint64_t)v25, (uint64_t)v24, &qword_26D168);
            uint64_t v23 = 0;
            long long v21 = 0u;
            long long v22 = 0u;
            sub_51A64((uint64_t)v24, (uint64_t)&v21);
            long long v26 = v21;
            long long v27 = v22;
            uint64_t v28 = v23;
            sub_55F38((uint64_t)v25, &qword_26D168);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
            {
              sub_46618(0, v4[2] + 1, 1);
              int64_t v4 = v29;
            }
            unint64_t v5 = v4[2];
            unint64_t v6 = v4[3];
            unint64_t v7 = v5 + 1;
            if (v5 >= v6 >> 1)
            {
              unint64_t v11 = v5 + 1;
              unint64_t v20 = v5;
              sub_46618(v6 > 1, v5 + 1, 1);
              unint64_t v5 = v20;
              unint64_t v7 = v11;
              int64_t v4 = v29;
            }
            v4[2] = v7;
            long long v8 = &v4[5 * v5];
            long long v9 = v26;
            long long v10 = v27;
            v8[8] = v28;
            *((_OWORD *)v8 + 2) = v9;
            *((_OWORD *)v8 + 3) = v10;
            v3 += 40;
            --v2;
          }
          while (v2);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          int64_t v4 = _swiftEmptyArrayStorage;
        }
        *(void *)&long long v26 = v4;
        sub_51B20((uint64_t)v35, v36);
        sub_12124(&qword_26D178);
        sub_51D08(&qword_26D1E0, (void (*)(void))sub_51CB4);
        sub_1FC6F0();
      }
      swift_bridgeObjectRelease();
    }
LABEL_32:
    sub_1264C((uint64_t)&v31);
    sub_1264C((uint64_t)v33);
    return sub_1264C((uint64_t)v35);
  }
  sub_55F38((uint64_t)&v31, &qword_26D168);
  sub_51B20((uint64_t)v35, v36);
  sub_1FC720();
  return sub_1264C((uint64_t)v35);
}

unint64_t static AnyCodableContainer.== infix(_:_:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = &qword_26D168;
  sub_5606C(a1, (uint64_t)v45, &qword_26D168);
  sub_5606C(a2, (uint64_t)v47, &qword_26D168);
  if (!(v46 | v48)
    || (uint64_t v3 = &qword_26D1E8, sub_12124(&qword_26D1E8), sub_12124(&qword_26D1F0), (swift_dynamicCast() & 1) != 0))
  {
    char v4 = 1;
LABEL_4:
    sub_55F38((uint64_t)v45, v3);
    return v4 & 1;
  }
  if (!v46)
  {
LABEL_16:
    char v4 = 0;
    goto LABEL_4;
  }
  sub_5606C((uint64_t)v45, (uint64_t)v44, &qword_26D168);
  if (!v48)
  {
    sub_1264C((uint64_t)v44);
    goto LABEL_16;
  }
  sub_5606C((uint64_t)v47, (uint64_t)v43, &qword_26D168);
  sub_12124(&qword_26D1C0);
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    char v4 = LOBYTE(v39[0]) ^ LOBYTE(v37[0]) ^ 1;
LABEL_29:
    sub_1264C((uint64_t)v43);
    sub_1264C((uint64_t)v44);
    uint64_t v3 = &qword_26D168;
    sub_55F38((uint64_t)v47, &qword_26D168);
    goto LABEL_4;
  }
  if (swift_dynamicCast() && (uint64_t v6 = *(void *)&v39[0], swift_dynamicCast())
    || swift_dynamicCast() && (uint64_t v6 = *(void *)&v39[0], swift_dynamicCast()))
  {
    BOOL v7 = v6 == *(void *)&v37[0];
    goto LABEL_26;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    BOOL v7 = LODWORD(v39[0]) == LODWORD(v37[0]);
    goto LABEL_26;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    BOOL v7 = *(float *)v39 == *(float *)v37;
    goto LABEL_26;
  }
  if (swift_dynamicCast() && swift_dynamicCast())
  {
    BOOL v7 = *(double *)v39 == *(double *)v37;
LABEL_26:
    char v4 = v7;
    goto LABEL_29;
  }
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      if (v39[0] == v37[0]) {
        char v4 = 1;
      }
      else {
        char v4 = sub_1FC5F0();
      }
      goto LABEL_79;
    }
    swift_bridgeObjectRelease();
  }
  sub_12124(&qword_26D1B0);
  if (swift_dynamicCast())
  {
    if (swift_dynamicCast())
    {
      if (*(void *)(*(void *)&v39[0] + 16) == *(void *)(*(void *)&v37[0] + 16))
      {
        char v4 = sub_3C240(*(void *)&v39[0], *(void *)&v37[0]);
LABEL_79:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        goto LABEL_29;
      }
      goto LABEL_80;
    }
    swift_bridgeObjectRelease();
  }
  sub_12124(&qword_26D1A0);
  if (!swift_dynamicCast())
  {
LABEL_77:
    sub_1264C((uint64_t)v43);
    sub_1264C((uint64_t)v44);
    char v4 = 0;
    uint64_t v3 = &qword_26D1E8;
    goto LABEL_4;
  }
  long long v8 = (void *)v42;
  if (!swift_dynamicCast())
  {
    swift_bridgeObjectRelease();
    goto LABEL_77;
  }
  uint64_t v9 = v41;
  if (*(void *)(v42 + 16) != *(void *)(v41 + 16)
    || (uint64_t v10 = swift_bridgeObjectRetain(),
        uint64_t v11 = sub_38C28(v10),
        uint64_t v12 = swift_bridgeObjectRetain(),
        uint64_t v13 = sub_38C28(v12),
        char v14 = sub_3C42C(v11, v13),
        swift_bridgeObjectRelease(),
        swift_bridgeObjectRelease(),
        (v14 & 1) == 0))
  {
LABEL_80:
    swift_bridgeObjectRelease();
LABEL_81:
    swift_bridgeObjectRelease();
    sub_1264C((uint64_t)v43);
    sub_1264C((uint64_t)v44);
    uint64_t v3 = &qword_26D168;
    sub_55F38((uint64_t)v47, &qword_26D168);
    goto LABEL_16;
  }
  uint64_t v15 = v42 + 64;
  uint64_t v16 = 1 << *(unsigned char *)(v42 + 32);
  uint64_t v17 = -1;
  if (v16 < 64) {
    uint64_t v17 = ~(-1 << v16);
  }
  unint64_t v18 = v17 & *(void *)(v42 + 64);
  int64_t v32 = (unint64_t)(v16 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v19 = 0;
  while (1)
  {
    if (v18)
    {
      unint64_t v20 = __clz(__rbit64(v18));
      v18 &= v18 - 1;
      unint64_t v21 = v20 | (v19 << 6);
    }
    else
    {
      int64_t v22 = v19 + 1;
      if (__OFADD__(v19, 1)) {
        goto LABEL_85;
      }
      if (v22 >= v32)
      {
LABEL_82:
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1264C((uint64_t)v43);
        sub_1264C((uint64_t)v44);
        uint64_t v3 = &qword_26D168;
        sub_55F38((uint64_t)v47, &qword_26D168);
        char v4 = 1;
        goto LABEL_4;
      }
      unint64_t v23 = *(void *)(v15 + 8 * v22);
      ++v19;
      if (!v23)
      {
        int64_t v19 = v22 + 1;
        if (v22 + 1 >= v32) {
          goto LABEL_82;
        }
        unint64_t v23 = *(void *)(v15 + 8 * v19);
        if (!v23)
        {
          int64_t v19 = v22 + 2;
          if (v22 + 2 >= v32) {
            goto LABEL_82;
          }
          unint64_t v23 = *(void *)(v15 + 8 * v19);
          if (!v23)
          {
            int64_t v19 = v22 + 3;
            if (v22 + 3 >= v32) {
              goto LABEL_82;
            }
            unint64_t v23 = *(void *)(v15 + 8 * v19);
            if (!v23)
            {
              int64_t v19 = v22 + 4;
              if (v22 + 4 >= v32) {
                goto LABEL_82;
              }
              unint64_t v23 = *(void *)(v15 + 8 * v19);
              if (!v23)
              {
                int64_t v24 = v22 + 5;
                if (v24 >= v32) {
                  goto LABEL_82;
                }
                unint64_t v23 = *(void *)(v15 + 8 * v24);
                if (!v23)
                {
                  while (1)
                  {
                    int64_t v19 = v24 + 1;
                    if (__OFADD__(v24, 1)) {
                      goto LABEL_86;
                    }
                    if (v19 >= v32) {
                      goto LABEL_82;
                    }
                    unint64_t v23 = *(void *)(v15 + 8 * v19);
                    ++v24;
                    if (v23) {
                      goto LABEL_66;
                    }
                  }
                }
                int64_t v19 = v24;
              }
            }
          }
        }
      }
LABEL_66:
      unint64_t v18 = (v23 - 1) & v23;
      unint64_t v21 = __clz(__rbit64(v23)) + (v19 << 6);
    }
    if (!v8[2]) {
      break;
    }
    Swift::String v25 = (uint64_t *)(v8[6] + 16 * v21);
    uint64_t v27 = *v25;
    uint64_t v26 = v25[1];
    swift_bridgeObjectRetain();
    unint64_t result = sub_4C328(v27, v26);
    if ((v28 & 1) == 0) {
      goto LABEL_84;
    }
    sub_5606C(v8[7] + 40 * result, (uint64_t)v37, &qword_26D168);
    memset(v36, 0, 40);
    sub_51A64((uint64_t)v37, (uint64_t)v36);
    v39[0] = v36[0];
    v39[1] = v36[1];
    uint64_t v40 = *(void *)&v36[2];
    if (*(void *)(v9 + 16) && (unint64_t v29 = sub_4C328(v27, v26), (v30 & 1) != 0))
    {
      sub_5606C(*(void *)(v9 + 56) + 40 * v29, (uint64_t)v36, &qword_26D168);
    }
    else
    {
      memset(v36, 0, 24);
      *(_OWORD *)((char *)&v36[1] + 8) = xmmword_201AB0;
    }
    unint64_t result = swift_bridgeObjectRelease();
    if (*((void *)&v36[1] + 1) == 1) {
      goto LABEL_87;
    }
    uint64_t v35 = 0;
    long long v33 = 0u;
    long long v34 = 0u;
    sub_51A64((uint64_t)v36, (uint64_t)&v33);
    v37[0] = v33;
    v37[1] = v34;
    uint64_t v38 = v35;
    char v31 = static AnyCodableContainer.== infix(_:_:)(v39, v37);
    sub_51D78((uint64_t)v37);
    unint64_t result = sub_51D78((uint64_t)v39);
    if ((v31 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_release();
      goto LABEL_81;
    }
  }
  __break(1u);
LABEL_84:
  __break(1u);
LABEL_85:
  __break(1u);
LABEL_86:
  __break(1u);
LABEL_87:
  __break(1u);
  return result;
}

uint64_t sub_3C240(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v4)
  {
    unint64_t v5 = 0;
    uint64_t v6 = 32;
    while (1)
    {
      uint64_t result = sub_5606C(a1 + v6, (uint64_t)v20, &qword_26D168);
      unint64_t v8 = *(void *)(a2 + 16);
      if (v5 == v8)
      {
        sub_55F38((uint64_t)v20, &qword_26D168);
        goto LABEL_9;
      }
      if (v5 >= v8) {
        break;
      }
      sub_55844((uint64_t)v20, (uint64_t)v22, &qword_26D168);
      sub_5606C(a2 + v6, (uint64_t)v23 + 8, &qword_26D168);
      v21[0] = v23[0];
      v21[1] = v23[1];
      _OWORD v21[2] = v23[2];
      v20[0] = v22[0];
      v20[1] = v22[1];
      sub_5606C((uint64_t)v20, (uint64_t)v16, &qword_26D168);
      uint64_t v15 = 0;
      long long v13 = 0u;
      long long v14 = 0u;
      sub_51A64((uint64_t)v16, (uint64_t)&v13);
      v18[0] = v13;
      v18[1] = v14;
      uint64_t v19 = v15;
      sub_5606C((uint64_t)v21 + 8, (uint64_t)&v13, &qword_26D168);
      uint64_t v12 = 0;
      long long v10 = 0u;
      long long v11 = 0u;
      sub_51A64((uint64_t)&v13, (uint64_t)&v10);
      v16[0] = v10;
      v16[1] = v11;
      uint64_t v17 = v12;
      char v9 = static AnyCodableContainer.== infix(_:_:)((uint64_t)v18, (uint64_t)v16);
      sub_51D78((uint64_t)v16);
      sub_51D78((uint64_t)v18);
      sub_55F38((uint64_t)v20, &qword_26D1E8);
      if ((v9 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return 0;
      }
      ++v5;
      v6 += 40;
      if (v4 == v5) {
        goto LABEL_9;
      }
    }
    __break(1u);
  }
  else
  {
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return 1;
  }
  return result;
}

uint64_t sub_3C42C(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v3 = 0;
  uint64_t v29 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  else {
    uint64_t v5 = -1;
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v30 = (unint64_t)(v4 + 63) >> 6;
  uint64_t v7 = a2 + 56;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      int64_t v31 = v3;
      unint64_t v9 = v8 | (v3 << 6);
      goto LABEL_24;
    }
    int64_t v10 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v10 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v10);
    int64_t v12 = v3 + 1;
    if (!v11)
    {
      int64_t v12 = v3 + 2;
      if (v3 + 2 >= v30) {
        return 1;
      }
      unint64_t v11 = *(void *)(v29 + 8 * v12);
      if (!v11)
      {
        int64_t v12 = v3 + 3;
        if (v3 + 3 >= v30) {
          return 1;
        }
        unint64_t v11 = *(void *)(v29 + 8 * v12);
        if (!v11) {
          break;
        }
      }
    }
LABEL_23:
    unint64_t v6 = (v11 - 1) & v11;
    int64_t v31 = v12;
    unint64_t v9 = __clz(__rbit64(v11)) + (v12 << 6);
LABEL_24:
    uint64_t v14 = result;
    uint64_t v15 = (uint64_t *)(*(void *)(result + 48) + 16 * v9);
    uint64_t v17 = *v15;
    uint64_t v16 = v15[1];
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    Swift::Int v18 = sub_1FC830();
    uint64_t v19 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v20 = v18 & ~v19;
    if (((*(void *)(v7 + ((v20 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v20) & 1) == 0) {
      goto LABEL_39;
    }
    uint64_t v21 = *(void *)(a2 + 48);
    int64_t v22 = (void *)(v21 + 16 * v20);
    BOOL v23 = *v22 == v17 && v22[1] == v16;
    if (!v23 && (sub_1FC5F0() & 1) == 0)
    {
      uint64_t v24 = ~v19;
      for (unint64_t i = v20 + 1; ; unint64_t i = v26 + 1)
      {
        uint64_t v26 = i & v24;
        if (((*(void *)(v7 + (((i & v24) >> 3) & 0xFFFFFFFFFFFFFF8)) >> (i & v24)) & 1) == 0) {
          break;
        }
        uint64_t v27 = (void *)(v21 + 16 * v26);
        BOOL v28 = *v27 == v17 && v27[1] == v16;
        if (v28 || (sub_1FC5F0() & 1) != 0) {
          goto LABEL_7;
        }
      }
LABEL_39:
      swift_bridgeObjectRelease();
      return 0;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t result = v14;
    int64_t v3 = v31;
  }
  uint64_t v13 = v3 + 4;
  if (v3 + 4 >= v30) {
    return 1;
  }
  unint64_t v11 = *(void *)(v29 + 8 * v13);
  if (v11)
  {
    int64_t v12 = v3 + 4;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v12 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v12 >= v30) {
      return 1;
    }
    unint64_t v11 = *(void *)(v29 + 8 * v12);
    ++v13;
    if (v11) {
      goto LABEL_23;
    }
  }
LABEL_43:
  __break(1u);
  return result;
}

uint64_t sub_3C6B4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 56;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(result + 56);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  uint64_t v10 = a2 + 56;
  do
  {
LABEL_7:
    if (v8)
    {
      unint64_t v11 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v12 = v11 | (v4 << 6);
      goto LABEL_25;
    }
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
LABEL_34:
      __break(1u);
      return result;
    }
    if (v13 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v13);
    ++v4;
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 1;
    if (v13 + 1 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 2;
    if (v13 + 2 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v4 = v13 + 3;
    if (v13 + 3 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v4);
    if (v14) {
      goto LABEL_24;
    }
    int64_t v15 = v13 + 4;
    if (v15 >= v9) {
      return 1;
    }
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v4 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_34;
        }
        if (v4 >= v9) {
          return 1;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v4);
        ++v15;
        if (v14) {
          goto LABEL_24;
        }
      }
    }
    int64_t v4 = v15;
LABEL_24:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v4 << 6);
LABEL_25:
    uint64_t v16 = *(void *)(*(void *)(v3 + 48) + 8 * v12);
    uint64_t result = sub_1FC7D0();
    uint64_t v17 = -1 << *(unsigned char *)(a2 + 32);
    unint64_t v18 = result & ~v17;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    uint64_t v19 = *(void *)(a2 + 48);
  }
  while (*(void *)(v19 + 8 * v18) == v16);
  uint64_t v20 = ~v17;
  while (1)
  {
    unint64_t v18 = (v18 + 1) & v20;
    if (((*(void *)(v10 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
      return 0;
    }
    if (*(void *)(v19 + 8 * v18) == v16) {
      goto LABEL_7;
    }
  }
}

uint64_t AnyCodableContainer.hash(into:)(uint64_t a1)
{
  sub_5606C(v1, (uint64_t)v39, &qword_26D168);
  if (!v40) {
    return sub_55F38((uint64_t)v39, &qword_26D168);
  }
  sub_5606C((uint64_t)v39, (uint64_t)v38, &qword_26D168);
  sub_12124(&qword_26D1C0);
  if (swift_dynamicCast())
  {
    sub_1FC800(v34);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    sub_1FC7F0(v34);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    Swift::UInt64 v3 = v34;
LABEL_8:
    sub_1FC820(v3);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    Swift::UInt32 v4 = v34;
LABEL_15:
    sub_1FC810(v4);
    goto LABEL_16;
  }
  if (swift_dynamicCast())
  {
    if ((v34 & 0x7FFFFFFF) != 0) {
      Swift::UInt32 v4 = v34;
    }
    else {
      Swift::UInt32 v4 = 0;
    }
    goto LABEL_15;
  }
  if (swift_dynamicCast())
  {
    if ((v34 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v3 = v34;
    }
    else {
      Swift::UInt64 v3 = 0;
    }
    goto LABEL_8;
  }
  if (swift_dynamicCast())
  {
    sub_1FB8C0();
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_12124(&qword_26D1F8);
  if (swift_dynamicCast())
  {
    uint64_t v6 = *(void *)(v27[0] + 16);
    if (v6)
    {
      uint64_t v7 = v27[0] + 32;
      do
      {
        sub_51B70(v7, (uint64_t)&v31);
        uint64_t v30 = 0;
        long long v28 = 0u;
        long long v29 = 0u;
        sub_51A64((uint64_t)&v31, (uint64_t)&v28);
        long long v34 = v28;
        long long v35 = v29;
        uint64_t v36 = v30;
        AnyCodableContainer.hash(into:)(a1);
        sub_51D78((uint64_t)&v34);
        v7 += 40;
        --v6;
      }
      while (v6);
    }
    swift_bridgeObjectRelease();
    goto LABEL_16;
  }
  sub_12124(&qword_26D200);
  uint64_t result = swift_dynamicCast();
  if (!result)
  {
LABEL_16:
    sub_1264C((uint64_t)v38);
    return sub_55F38((uint64_t)v39, &qword_26D168);
  }
  int64_t v8 = 0;
  uint64_t v9 = v37;
  uint64_t v10 = *(void *)(v37 + 64);
  uint64_t v23 = v37 + 64;
  uint64_t v11 = 1 << *(unsigned char *)(v37 + 32);
  uint64_t v12 = -1;
  if (v11 < 64) {
    uint64_t v12 = ~(-1 << v11);
  }
  unint64_t v13 = v12 & v10;
  int64_t v14 = (unint64_t)(v11 + 63) >> 6;
  if ((v12 & v10) == 0) {
    goto LABEL_37;
  }
LABEL_35:
  unint64_t v15 = __clz(__rbit64(v13));
  v13 &= v13 - 1;
  unint64_t v16 = v15 | (v8 << 6);
  while (2)
  {
    uint64_t v17 = *(void *)(v9 + 56);
    unint64_t v18 = (void *)(*(void *)(v9 + 48) + 16 * v16);
    uint64_t v19 = v18[1];
    *(void *)&long long v31 = *v18;
    *((void *)&v31 + 1) = v19;
    sub_51B70(v17 + 40 * v16, (uint64_t)v32);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_55844((uint64_t)&v31, (uint64_t)&v34, &qword_26D208);
      if (!*((void *)&v34 + 1))
      {
        swift_release();
        goto LABEL_16;
      }
      sub_37C30(&v35, (uint64_t)&v31);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_51B70((uint64_t)&v31, (uint64_t)v27);
      uint64_t v26 = 0;
      long long v24 = 0u;
      long long v25 = 0u;
      sub_51A64((uint64_t)v27, (uint64_t)&v24);
      long long v28 = v24;
      long long v29 = v25;
      uint64_t v30 = v26;
      AnyCodableContainer.hash(into:)(a1);
      sub_51D78((uint64_t)&v28);
      uint64_t result = sub_1264C((uint64_t)&v31);
      if (v13) {
        goto LABEL_35;
      }
LABEL_37:
      int64_t v20 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_58;
      }
      if (v20 < v14)
      {
        unint64_t v21 = *(void *)(v23 + 8 * v20);
        if (v21) {
          goto LABEL_40;
        }
        int64_t v22 = v8 + 2;
        ++v8;
        if (v20 + 1 < v14)
        {
          unint64_t v21 = *(void *)(v23 + 8 * v22);
          if (v21) {
            goto LABEL_43;
          }
          int64_t v8 = v20 + 1;
          if (v20 + 2 < v14)
          {
            unint64_t v21 = *(void *)(v23 + 8 * (v20 + 2));
            if (v21)
            {
              v20 += 2;
              goto LABEL_40;
            }
            int64_t v22 = v20 + 3;
            int64_t v8 = v20 + 2;
            if (v20 + 3 < v14) {
              break;
            }
          }
        }
      }
LABEL_54:
      unint64_t v13 = 0;
      uint64_t v33 = 0;
      memset(v32, 0, sizeof(v32));
      long long v31 = 0u;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v22);
    if (v21)
    {
LABEL_43:
      int64_t v20 = v22;
LABEL_40:
      unint64_t v13 = (v21 - 1) & v21;
      unint64_t v16 = __clz(__rbit64(v21)) + (v20 << 6);
      int64_t v8 = v20;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v14)
    {
      int64_t v8 = v14 - 1;
      goto LABEL_54;
    }
    unint64_t v21 = *(void *)(v23 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_40;
    }
  }
LABEL_58:
  __break(1u);
  return result;
}

Swift::Int AnyCodableContainer.hashValue.getter()
{
  sub_1FC7E0();
  AnyCodableContainer.hash(into:)((uint64_t)v1);
  return sub_1FC830();
}

uint64_t sub_3CDAC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return AnyCodableContainer.init(from:)(a1, a2);
}

uint64_t sub_3CDC4(void *a1)
{
  return AnyCodableContainer.encode(to:)(a1);
}

Swift::Int sub_3CDE4()
{
  sub_1FC7E0();
  AnyCodableContainer.hash(into:)((uint64_t)v1);
  return sub_1FC830();
}

uint64_t AnyCodableContainer.init(stringLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  v4[3] = &type metadata for String;
  v4[4] = &protocol witness table for String;
  v4[0] = a1;
  v4[1] = a2;
  *(_OWORD *)a3 = 0u;
  *(_OWORD *)(a3 + 16) = 0u;
  *(void *)(a3 + 32) = 0;
  return sub_51A64((uint64_t)v4, a3);
}

uint64_t sub_3CE70@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  v6[3] = &type metadata for String;
  v6[4] = &protocol witness table for String;
  v6[0] = v3;
  v6[1] = v4;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return sub_51A64((uint64_t)v6, a2);
}

uint64_t AnyCodableContainer.init(nilLiteral:)@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = 0;
  memset(v2, 0, sizeof(v2));
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  return sub_51A64((uint64_t)v2, a1);
}

uint64_t AnyCodableContainer.init(integerLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v3[3] = &type metadata for Int;
  v3[4] = &protocol witness table for Int;
  v3[0] = a1;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return sub_51A64((uint64_t)v3, a2);
}

uint64_t sub_3CF48@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *a1;
  v5[3] = &type metadata for Int;
  v5[4] = &protocol witness table for Int;
  v5[0] = v3;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return sub_51A64((uint64_t)v5, a2);
}

uint64_t AnyCodableContainer.init(floatLiteral:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  v3[3] = &type metadata for Double;
  v3[4] = &protocol witness table for Double;
  *(double *)uint64_t v3 = a2;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)(a1 + 32) = 0;
  return sub_51A64((uint64_t)v3, a1);
}

uint64_t sub_3CFE4@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *a1;
  v4[3] = &type metadata for Double;
  v4[4] = &protocol witness table for Double;
  v4[0] = v2;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return sub_51A64((uint64_t)v4, a2);
}

uint64_t AnyCodableContainer.init(arrayLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v5[3] = sub_12124(&qword_26D1B0);
  v5[4] = sub_52CC0(&qword_26D1B8, &qword_26D1B0);
  v5[0] = a1;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return sub_51A64((uint64_t)v5, a2);
}

uint64_t AnyCodableContainer.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_12124(&qword_26D210);
    uint64_t v3 = (void *)sub_1FC2A0();
  }
  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }
  v7[0] = v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_4D064(v4, 1, v7);
  swift_bridgeObjectRelease();
  uint64_t v5 = v7[0];
  v7[3] = sub_12124(&qword_26D1A0);
  v7[4] = sub_52CC0(&qword_26D1A8, &qword_26D1A0);
  v7[0] = v5;
  *(_OWORD *)a2 = 0u;
  *(_OWORD *)(a2 + 16) = 0u;
  *(void *)(a2 + 32) = 0;
  return sub_51A64((uint64_t)v7, a2);
}

BooksPersonalization::AnyCodableObjectContainer __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyCodableObjectContainer.init(untypedValue:)(Swift::OpaquePointer untypedValue)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_43EEC((uint64_t)untypedValue._rawValue);
  result.value._rawValue = (void *)swift_bridgeObjectRelease();
  if (!v2) {
    *uint64_t v3 = v4;
  }
  return result;
}

uint64_t AnyCodableObjectContainer.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_1FC840();
  if (!v2)
  {
    sub_5D64(v7, v7[3]);
    sub_12124(&qword_26D190);
    sub_51C38(&qword_26D198, (void (*)(void))sub_51ACC);
    sub_1FC650();
    uint64_t v5 = sub_44154(v7[6]);
    swift_bridgeObjectRelease();
    sub_1264C((uint64_t)v7);
    *a2 = v5;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t AnyCodableObjectContainer.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  sub_5D64(a1, a1[3]);
  sub_1FC860();
  sub_4438C(v2);
  sub_51B20((uint64_t)v4, v5);
  sub_12124(&qword_26D190);
  sub_51C38(&qword_26D1D0, (void (*)(void))sub_51CB4);
  sub_1FC6F0();
  swift_release();
  return sub_1264C((uint64_t)v4);
}

uint64_t AnyCodableObjectContainer.hash(into:)(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v17 = *v1 + 64;
  uint64_t v4 = 1 << *(unsigned char *)(*v1 + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(*v1 + 64);
  int64_t v18 = (unint64_t)(v4 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v6) {
    goto LABEL_8;
  }
LABEL_6:
  unint64_t v9 = __clz(__rbit64(v6));
  v6 &= v6 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (2)
  {
    uint64_t v11 = *(void *)(v3 + 56);
    uint64_t v12 = (void *)(*(void *)(v3 + 48) + 16 * v10);
    uint64_t v13 = v12[1];
    *(void *)&long long v25 = *v12;
    *((void *)&v25 + 1) = v13;
    sub_5606C(v11 + 40 * v10, (uint64_t)v26, &qword_26D168);
    swift_bridgeObjectRetain();
    while (1)
    {
      sub_55844((uint64_t)&v25, (uint64_t)v28, &qword_26D218);
      if (!v28[1]) {
        return swift_release();
      }
      sub_55844((uint64_t)&v29, (uint64_t)&v25, &qword_26D168);
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      sub_5606C((uint64_t)&v25, (uint64_t)v22, &qword_26D168);
      uint64_t v21 = 0;
      long long v19 = 0u;
      long long v20 = 0u;
      sub_51A64((uint64_t)v22, (uint64_t)&v19);
      v23[0] = v19;
      v23[1] = v20;
      uint64_t v24 = v21;
      AnyCodableContainer.hash(into:)(a1);
      sub_51D78((uint64_t)v23);
      uint64_t result = sub_55F38((uint64_t)&v25, &qword_26D168);
      if (v6) {
        goto LABEL_6;
      }
LABEL_8:
      int64_t v14 = v8 + 1;
      if (__OFADD__(v8, 1))
      {
        __break(1u);
        goto LABEL_29;
      }
      if (v14 < v18)
      {
        unint64_t v15 = *(void *)(v17 + 8 * v14);
        if (v15) {
          goto LABEL_11;
        }
        int64_t v16 = v8 + 2;
        ++v8;
        if (v14 + 1 < v18)
        {
          unint64_t v15 = *(void *)(v17 + 8 * v16);
          if (v15) {
            goto LABEL_14;
          }
          int64_t v8 = v14 + 1;
          if (v14 + 2 < v18)
          {
            unint64_t v15 = *(void *)(v17 + 8 * (v14 + 2));
            if (v15)
            {
              v14 += 2;
              goto LABEL_11;
            }
            int64_t v16 = v14 + 3;
            int64_t v8 = v14 + 2;
            if (v14 + 3 < v18) {
              break;
            }
          }
        }
      }
LABEL_25:
      unint64_t v6 = 0;
      uint64_t v27 = 0;
      memset(v26, 0, sizeof(v26));
      long long v25 = 0u;
    }
    unint64_t v15 = *(void *)(v17 + 8 * v16);
    if (v15)
    {
LABEL_14:
      int64_t v14 = v16;
LABEL_11:
      unint64_t v6 = (v15 - 1) & v15;
      unint64_t v10 = __clz(__rbit64(v15)) + (v14 << 6);
      int64_t v8 = v14;
      continue;
    }
    break;
  }
  while (1)
  {
    int64_t v14 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v14 >= v18)
    {
      int64_t v8 = v18 - 1;
      goto LABEL_25;
    }
    unint64_t v15 = *(void *)(v17 + 8 * v14);
    ++v16;
    if (v15) {
      goto LABEL_11;
    }
  }
LABEL_29:
  __break(1u);
  return result;
}

Swift::Int AnyCodableObjectContainer.hashValue.getter()
{
  return sub_3DD34((void (*)(void *))AnyCodableObjectContainer.hash(into:));
}

uint64_t sub_3D71C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return AnyCodableObjectContainer.init(from:)(a1, a2);
}

uint64_t sub_3D734(void *a1)
{
  return AnyCodableObjectContainer.encode(to:)(a1);
}

Swift::Int sub_3D74C(uint64_t a1, uint64_t a2)
{
  return sub_3DDD0(a1, a2, (void (*)(void *))AnyCodableObjectContainer.hash(into:));
}

Swift::Int sub_3D768(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3DE40(a1, a2, a3, (void (*)(void *))AnyCodableObjectContainer.hash(into:));
}

uint64_t AnyCodableObjectContainer.init(dictionaryLiteral:)@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  if (*(void *)(a1 + 16))
  {
    sub_12124(&qword_26D210);
    uint64_t v3 = (void *)sub_1FC2A0();
  }
  else
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
  }
  unint64_t v6 = v3;
  uint64_t v4 = swift_bridgeObjectRetain();
  sub_4D064(v4, 1, &v6);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v6;
  return result;
}

BooksPersonalization::AnyCodableArrayContainer __swiftcall __spoils<CF,ZF,NF,VF,X0,X1,X2,X3,X4,X5,X6,X7,X8,X9,X10,X11,X12,X13,X14,X15,X16,X17,X21,Q0,Q1,Q2,Q3,Q4,Q5,Q6,Q7,Q16,Q17,Q18,Q19,Q20,Q21,Q22,Q23,Q24,Q25,Q26,Q27,Q28,Q29,Q30,Q31> AnyCodableArrayContainer.init(untypedValue:)(Swift::OpaquePointer untypedValue)
{
  uint64_t v3 = v1;
  uint64_t v4 = sub_51F3C((uint64_t)untypedValue._rawValue);
  result.value._rawValue = (void *)swift_bridgeObjectRelease();
  if (!v2) {
    *uint64_t v3 = v4;
  }
  return result;
}

uint64_t AnyCodableArrayContainer.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_1FC840();
  if (!v2)
  {
    sub_5D64(v7, v7[3]);
    sub_12124(&qword_26D178);
    sub_51D08(&qword_26D180, (void (*)(void))sub_51ACC);
    sub_1FC650();
    uint64_t v5 = sub_384CC(v7[6]);
    swift_bridgeObjectRelease();
    sub_1264C((uint64_t)v7);
    *a2 = v5;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t AnyCodableArrayContainer.encode(to:)(void *a1)
{
  uint64_t v2 = *v1;
  sub_5D64(a1, a1[3]);
  sub_1FC860();
  int64_t v3 = *(void *)(v2 + 16);
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v3)
  {
    int64_t v22 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_46618(0, v3, 0);
    uint64_t v5 = v2 + 32;
    uint64_t v4 = _swiftEmptyArrayStorage;
    do
    {
      sub_5606C(v5, (uint64_t)v16, &qword_26D168);
      sub_5606C((uint64_t)v16, (uint64_t)v15, &qword_26D168);
      uint64_t v14 = 0;
      long long v12 = 0u;
      long long v13 = 0u;
      sub_51A64((uint64_t)v15, (uint64_t)&v12);
      long long v17 = v12;
      long long v18 = v13;
      uint64_t v19 = v14;
      sub_55F38((uint64_t)v16, &qword_26D168);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46618(0, v4[2] + 1, 1);
        uint64_t v4 = v22;
      }
      unint64_t v7 = v4[2];
      unint64_t v6 = v4[3];
      if (v7 >= v6 >> 1)
      {
        sub_46618(v6 > 1, v7 + 1, 1);
        uint64_t v4 = v22;
      }
      v4[2] = v7 + 1;
      int64_t v8 = &v4[5 * v7];
      long long v9 = v17;
      long long v10 = v18;
      v8[8] = v19;
      *((_OWORD *)v8 + 2) = v9;
      *((_OWORD *)v8 + 3) = v10;
      v5 += 40;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  *(void *)&long long v17 = v4;
  sub_51B20((uint64_t)v20, v21);
  sub_12124(&qword_26D178);
  sub_51D08(&qword_26D1E0, (void (*)(void))sub_51CB4);
  sub_1FC6F0();
  swift_bridgeObjectRelease();
  return sub_1264C((uint64_t)v20);
}

uint64_t static AnyCodableArrayContainer.== infix(_:_:)(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*(void *)(*a1 + 16) == *(void *)(*a2 + 16))
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char v4 = sub_3C240(v2, v3);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v4 = 0;
  }
  return v4 & 1;
}

uint64_t AnyCodableArrayContainer.hash(into:)(uint64_t result)
{
  uint64_t v2 = *(void *)(*(void *)v1 + 16);
  if (v2)
  {
    uint64_t v3 = result;
    uint64_t v4 = *(void *)v1 + 32;
    swift_bridgeObjectRetain();
    do
    {
      sub_5606C(v4, (uint64_t)v8, &qword_26D168);
      uint64_t v7 = 0;
      long long v5 = 0u;
      long long v6 = 0u;
      sub_51A64((uint64_t)v8, (uint64_t)&v5);
      v9[0] = v5;
      v9[1] = v6;
      uint64_t v10 = v7;
      AnyCodableContainer.hash(into:)(v3);
      sub_51D78((uint64_t)v9);
      v4 += 40;
      --v2;
    }
    while (v2);
    return swift_bridgeObjectRelease();
  }
  return result;
}

Swift::Int AnyCodableArrayContainer.hashValue.getter()
{
  return sub_3DD34((void (*)(void *))AnyCodableArrayContainer.hash(into:));
}

Swift::Int sub_3DD34(void (*a1)(void *))
{
  v4[9] = *v1;
  sub_1FC7E0();
  a1(v4);
  return sub_1FC830();
}

uint64_t sub_3DD88@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return AnyCodableArrayContainer.init(from:)(a1, a2);
}

uint64_t sub_3DDA0(void *a1)
{
  return AnyCodableArrayContainer.encode(to:)(a1);
}

Swift::Int sub_3DDB8(uint64_t a1, uint64_t a2)
{
  return sub_3DDD0(a1, a2, (void (*)(void *))AnyCodableArrayContainer.hash(into:));
}

Swift::Int sub_3DDD0(uint64_t a1, uint64_t a2, void (*a3)(void *))
{
  v6[9] = *v3;
  sub_1FC7E0();
  a3(v6);
  return sub_1FC830();
}

Swift::Int sub_3DE28(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_3DE40(a1, a2, a3, (void (*)(void *))AnyCodableArrayContainer.hash(into:));
}

Swift::Int sub_3DE40(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void *))
{
  v7[9] = *v4;
  sub_1FC7E0();
  a4(v7);
  return sub_1FC830();
}

unint64_t CommonErrorPayload.description.getter()
{
  uint64_t v2 = *(void *)v0;
  uint64_t v1 = *(void **)(v0 + 8);
  switch(*(unsigned char *)(v0 + 16))
  {
    case 1:
      unint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      sub_52090(v2, (unint64_t)v1);
      sub_1FC050(56);
      v12._uint64_t countAndFlagsBits = 0xD000000000000036;
      v12._object = (void *)0x8000000000216F20;
      sub_1FB8F0(v12);
      sub_52090(v2, (unint64_t)v1);
      sub_3E20C(128, v2, (unint64_t)v1, v7);
      uint64_t v3 = v7[0];
      unint64_t v4 = v7[1];
      v13._uint64_t countAndFlagsBits = sub_1FAFA0();
      sub_1FB8F0(v13);
      swift_bridgeObjectRelease();
      sub_520E8(v3, v4);
      sub_52140(v2, (unint64_t)v1, 1);
      return v8;
    case 2:
      sub_1FC050(42);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD00000000000001BLL;
      unint64_t v9 = 0x8000000000216F00;
      v14._uint64_t countAndFlagsBits = v2;
      v14._object = v1;
      sub_1FB8F0(v14);
      v5._uint64_t countAndFlagsBits = 0x73696D2073692027;
      v5._object = (void *)0xED00002E676E6973;
      goto LABEL_8;
    case 3:
      unint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      sub_1FC050(52);
      v15._object = (void *)0x8000000000216ED0;
      v15._uint64_t countAndFlagsBits = 0xD000000000000024;
      sub_1FB8F0(v15);
      v16._uint64_t countAndFlagsBits = v2;
      v16._object = v1;
      sub_1FB8F0(v16);
      v5._uint64_t countAndFlagsBits = 0x73206D6F72662027;
      v5._object = (void *)0xEE002E676E697274;
      goto LABEL_8;
    case 4:
      unint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      sub_1FC050(54);
      v17._object = (void *)0x8000000000216E80;
      v17._uint64_t countAndFlagsBits = 0xD000000000000024;
      sub_1FB8F0(v17);
      v18._uint64_t countAndFlagsBits = v2;
      v18._object = v1;
      sub_1FB8F0(v18);
      v5._uint64_t countAndFlagsBits = 0xD000000000000010;
      v5._object = (void *)0x8000000000216EB0;
      goto LABEL_8;
    case 5:
      sub_1FC050(27);
      swift_bridgeObjectRelease();
      unint64_t v8 = 0xD000000000000019;
      unint64_t v9 = 0x8000000000216E60;
      v5._uint64_t countAndFlagsBits = v2;
      v5._object = v1;
LABEL_8:
      sub_1FB8F0(v5);
      break;
    default:
      unint64_t v8 = 0;
      unint64_t v9 = 0xE000000000000000;
      swift_bridgeObjectRetain();
      sub_1FC050(59);
      v10._uint64_t countAndFlagsBits = 0xD000000000000039;
      v10._object = (void *)0x8000000000216F60;
      sub_1FB8F0(v10);
      sub_51EA0(128);
      sub_52140(v2, (unint64_t)v1, 0);
      v11._uint64_t countAndFlagsBits = sub_1FB8A0();
      sub_1FB8F0(v11);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return v8;
}

uint64_t sub_3E20C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  if (a1 < 0)
  {
    __break(1u);
    goto LABEL_18;
  }
  unint64_t v5 = a3 >> 62;
  uint64_t v9 = 0;
  uint64_t v10 = 0;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v10 = (int)a2;
      uint64_t v9 = a2 >> 32;
      break;
    case 2uLL:
      uint64_t v10 = *(void *)(a2 + 16);
      uint64_t v9 = *(void *)(a2 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v10 = 0;
      uint64_t v9 = BYTE6(a3);
      break;
  }
  uint64_t v11 = sub_506D8(v10, v9, a2, a3);
  if (a1 && (v11 & 0x8000000000000000) == 0 && v11 < a1)
  {
    switch((int)v5)
    {
      case 1:
        uint64_t v12 = a2 >> 32;
        goto LABEL_12;
      case 2:
        uint64_t v12 = *(void *)(a2 + 24);
        goto LABEL_14;
      default:
        goto LABEL_16;
    }
  }
  uint64_t v12 = sub_5065C(v10, a1, a2, a3);
  uint64_t v13 = 0;
  switch((int)v5)
  {
    case 1:
LABEL_12:
      uint64_t v13 = (int)a2;
      break;
    case 2:
LABEL_14:
      uint64_t v13 = *(void *)(a2 + 16);
      break;
    default:
      break;
  }
  if (v12 < v13)
  {
LABEL_18:
    __break(1u);
    JUMPOUT(0x3E378);
  }
LABEL_16:
  uint64_t v14 = sub_1FAFC0();
  uint64_t v16 = v15;
  uint64_t result = sub_520E8(a2, a3);
  *a4 = v14;
  a4[1] = v16;
  return result;
}

uint64_t sub_3E3AC(uint64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v3 = *(void *)(a2 + 16);
    if ((uint64_t)v3 >= result) {
      unint64_t v4 = result;
    }
    else {
      unint64_t v4 = *(void *)(a2 + 16);
    }
    if (result) {
      unint64_t v5 = v4;
    }
    else {
      unint64_t v5 = 0;
    }
    if (v3 >= v5)
    {
      type metadata accessor for CollectionRecommendation(0);
      return a2;
    }
  }
  __break(1u);
  return result;
}

int64_t sub_3E440(int64_t result, uint64_t a2)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    unint64_t v2 = *(void *)(a2 + 16);
    if ((uint64_t)v2 >= result) {
      unint64_t v3 = result;
    }
    else {
      unint64_t v3 = *(void *)(a2 + 16);
    }
    if (!result) {
      unint64_t v3 = 0;
    }
    if (v2 >= v3) {
      return a2;
    }
  }
  __break(1u);
  return result;
}

unint64_t CommonErrorPayload.errorDescription.getter()
{
  return CommonErrorPayload.description.getter();
}

uint64_t static APICommonHelpers.utf8Data(for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB870();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB850();
  uint64_t v8 = sub_1FB820();
  unint64_t v10 = v9;
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  if (v10 >> 60 == 15)
  {
    sub_52198();
    swift_allocError();
    *(void *)uint64_t v11 = a1;
    *(void *)(v11 + 8) = a2;
    *(unsigned char *)(v11 + 16) = 0;
    swift_bridgeObjectRetain();
    swift_willThrow();
  }
  return v8;
}

uint64_t static APICommonHelpers.string(from:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1FB870();
  __chkstk_darwin(v4 - 8);
  sub_1FB850();
  uint64_t result = sub_1FB830();
  if (!v6)
  {
    sub_52198();
    swift_allocError();
    *(void *)uint64_t v7 = a1;
    *(void *)(v7 + 8) = a2;
    *(unsigned char *)(v7 + 16) = 1;
    sub_52090(a1, a2);
    return swift_willThrow();
  }
  return result;
}

uint64_t static APICommonHelpers.ensureNoAdditionalProperties(in:knownKeys:)(void *a1, uint64_t a2)
{
  uint64_t v5 = sub_12124(&qword_26D228);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_3E9E0((uint64_t)v8, a1, a2);
  if (!v2)
  {
    uint64_t v10 = result;
    if (*(void *)(result + 16))
    {
      uint64_t v11 = swift_bridgeObjectRetain();
      uint64_t v12 = sub_4C050(v11, &qword_26D650, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_4E9C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_56154);
      swift_bridgeObjectRelease();
      v17[0] = (uint64_t)v12;
      sub_41430(v17);
      if (*(void *)(v17[0] + 16))
      {
        uint64_t v13 = *(void *)(v17[0] + 32);
        uint64_t v14 = *(void *)(v17[0] + 40);
        swift_bridgeObjectRetain();
        swift_release();
        v17[0] = v13;
        v17[1] = v14;
        _OWORD v16[2] = 0;
        v16[3] = 0xE000000000000000;
        sub_1FC050(77);
        v18._uint64_t countAndFlagsBits = 0xD00000000000002ELL;
        v18._object = (void *)0x8000000000216FA0;
        sub_1FB8F0(v18);
        uint64_t v15 = *(void *)(v10 + 16);
        swift_bridgeObjectRelease();
        v16[1] = v15;
        v19._uint64_t countAndFlagsBits = sub_1FC580();
        sub_1FB8F0(v19);
        swift_bridgeObjectRelease();
        v20._object = (void *)0x8000000000216FD0;
        v20._uint64_t countAndFlagsBits = 0xD00000000000001DLL;
        sub_1FB8F0(v20);
        sub_1FC0F0();
        swift_allocError();
        sub_52CC0(&qword_26D230, &qword_26D228);
        sub_1FC0B0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_willThrow();
        return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      }
      else
      {
        swift_release();
        __break(1u);
        uint64_t result = swift_release();
        __break(1u);
      }
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      return swift_bridgeObjectRelease();
    }
  }
  return result;
}

uint64_t sub_3E9E0(uint64_t a1, void *a2, uint64_t a3)
{
  sub_5D64(a2, a2[3]);
  sub_5222C();
  uint64_t result = sub_1FC850();
  if (!v3)
  {
    sub_12124(&qword_26D228);
    uint64_t v6 = sub_1FC430();
    uint64_t v7 = sub_514C0(v6);
    swift_bridgeObjectRelease();
    int64_t v8 = *(void *)(a3 + 16);
    if (v8)
    {
      sub_46638(0, v8, 0);
      uint64_t result = sub_14D538(a3);
      uint64_t v9 = result;
      uint64_t v11 = v10;
      char v13 = v12 & 1;
      while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(a3 + 32))
      {
        if (((*(void *)(a3 + 56 + (((unint64_t)v9 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v9) & 1) == 0) {
          goto LABEL_15;
        }
        if (*(_DWORD *)(a3 + 36) != v11) {
          goto LABEL_16;
        }
        char v23 = v13;
        uint64_t v14 = (uint64_t *)(*(void *)(a3 + 48) + 16 * v9);
        uint64_t v15 = *v14;
        uint64_t v16 = v14[1];
        unint64_t v18 = _swiftEmptyArrayStorage[2];
        unint64_t v17 = _swiftEmptyArrayStorage[3];
        swift_bridgeObjectRetain();
        if (v18 >= v17 >> 1) {
          sub_46638(v17 > 1, v18 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v18 + 1;
        Swift::String v19 = &_swiftEmptyArrayStorage[2 * v18];
        void v19[4] = v15;
        v19[5] = v16;
        uint64_t result = sub_14D5DC(v9, v11, v23 & 1, a3);
        uint64_t v9 = result;
        uint64_t v11 = v20;
        char v13 = v21 & 1;
        if (!--v8)
        {
          sub_55F94(result, v20, v13);
          goto LABEL_12;
        }
      }
      __break(1u);
LABEL_15:
      __break(1u);
LABEL_16:
      __break(1u);
    }
    else
    {
LABEL_12:
      int64_t v22 = sub_1049D8((uint64_t)_swiftEmptyArrayStorage, v7);
      swift_bridgeObjectRelease();
      return (uint64_t)v22;
    }
  }
  return result;
}

uint64_t static APICommonHelpers.decodeAdditionalProperties(in:knownKeys:)@<X0>(void *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  uint64_t v7 = sub_12124(&qword_26D228);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = sub_3E9E0((uint64_t)v10, a1, a2);
  if (!v3)
  {
    uint64_t v12 = result;
    if (*(void *)(result + 16))
    {
      __chkstk_darwin(result);
      *(&v16 - 2) = (uint64_t)v10;
      uint64_t v13 = sub_385C0((void (*)(_OWORD *__return_ptr, void *, uint64_t *))sub_521EC, (uint64_t)(&v16 - 4), v12);
      swift_bridgeObjectRelease();
      if (*(void *)(v13 + 16))
      {
        sub_12124(&qword_26D210);
        uint64_t v14 = (void *)sub_1FC2A0();
      }
      else
      {
        uint64_t v14 = &_swiftEmptyDictionarySingleton;
      }
      unint64_t v17 = v14;
      uint64_t v15 = swift_bridgeObjectRetain();
      sub_4D064(v15, 1, &v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      unint64_t v17 = &_swiftEmptyDictionarySingleton;
      sub_4D064((uint64_t)_swiftEmptyArrayStorage, 1, &v17);
    }
    *a3 = v17;
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  return result;
}

uint64_t sub_3EE38@<X0>(void *a1@<X0>, void *a2@<X2>, void *a3@<X8>)
{
  uint64_t v6 = a1[1];
  *a3 = *a1;
  a3[1] = v6;
  swift_bridgeObjectRetain();
  sub_12124(&qword_26D228);
  sub_51ACC();
  sub_1FC3F0();
  if (!v3) {
    return sub_55844((uint64_t)v8, (uint64_t)(a3 + 2), &qword_26D168);
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

uint64_t static APICommonHelpers.decodeAdditionalProperties<A>(in:knownKeys:)(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v9 = sub_12124(&qword_26D228);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)v17 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_3E9E0((uint64_t)v12, a1, a2);
  if (!v4)
  {
    if (*(void *)(v13 + 16))
    {
      v17[1] = v17;
      uint64_t v18 = v13;
      __chkstk_darwin(v13);
      v17[-4] = a3;
      v17[-3] = a4;
      v17[-2] = v12;
      v17[0] = sub_12124(&qword_26D238);
      swift_getTupleTypeMetadata2();
      sub_52CC0(&qword_26D240, &qword_26D238);
      uint64_t v14 = sub_1FB9C0();
      swift_bridgeObjectRelease();
      uint64_t v18 = v14;
      sub_1FBBA0();
      swift_getWitnessTable();
      uint64_t v15 = sub_1FB730();
    }
    else
    {
      swift_bridgeObjectRelease();
      swift_getTupleTypeMetadata2();
      sub_1FBB30();
      uint64_t v15 = sub_1FB720();
    }
    a4 = v15;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v9);
  }
  return a4;
}

uint64_t sub_3F1C4@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = *a1;
  uint64_t v4 = a1[1];
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  *a2 = v5;
  a2[1] = v4;
  swift_bridgeObjectRetain();
  sub_12124(&qword_26D228);
  sub_1FC3F0();
  if (v2) {
    return swift_bridgeObjectRelease();
  }
  else {
    return (*(uint64_t (**)(void *, void, uint64_t, uint64_t))(*(void *)(TupleTypeMetadata2 - 8) + 56))(a2, 0, 1, TupleTypeMetadata2);
  }
}

uint64_t static APICommonHelpers.encodeAdditionalProperties(_:into:)(uint64_t *a1, void *a2)
{
  uint64_t v5 = sub_12124(&qword_26D248);
  uint64_t result = __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = *a1;
  if (!*(void *)(v10 + 16)) {
    return result;
  }
  uint64_t v27 = v7;
  sub_5D64(a2, a2[3]);
  sub_5222C();
  sub_1FC870();
  uint64_t v11 = *(void *)(v10 + 64);
  uint64_t v28 = v10 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(v10 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  uint64_t v41 = &v35;
  int64_t v29 = (unint64_t)(v12 + 63) >> 6;
  int64_t v26 = v29 - 1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  while (1)
  {
    if (v14)
    {
      unint64_t v16 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v17 = v16 | (v15 << 6);
      goto LABEL_7;
    }
    int64_t v21 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
      goto LABEL_35;
    }
    if (v21 < v29)
    {
      unint64_t v22 = *(void *)(v28 + 8 * v21);
      if (v22) {
        goto LABEL_11;
      }
      v15 += 2;
      if (v21 + 1 >= v29)
      {
        int64_t v15 = v21;
        goto LABEL_16;
      }
      unint64_t v22 = *(void *)(v28 + 8 * v15);
      if (v22)
      {
        ++v21;
        goto LABEL_11;
      }
      if (v21 + 2 < v29) {
        break;
      }
    }
LABEL_16:
    unint64_t v14 = 0;
    uint64_t v37 = 0;
    long long v35 = 0u;
    long long v36 = 0u;
    long long v34 = 0u;
LABEL_17:
    sub_55844((uint64_t)&v34, (uint64_t)&v38, &qword_26D218);
    uint64_t v23 = v39;
    if (v39)
    {
      uint64_t v24 = v38;
      sub_55844((uint64_t)&v40, (uint64_t)v33, &qword_26D168);
      uint64_t v32 = 0;
      long long v31 = 0u;
      long long v30 = 0u;
      sub_51A64((uint64_t)v33, (uint64_t)&v30);
      long long v34 = v30;
      long long v35 = v31;
      *(void *)&long long v36 = v32;
      v33[0] = v24;
      v33[1] = v23;
      sub_51CB4();
      sub_1FC530();
      swift_bridgeObjectRelease();
      uint64_t result = sub_51D78((uint64_t)&v34);
      if (!v2) {
        continue;
      }
    }
    swift_release();
    return (*(uint64_t (**)(char *, uint64_t))(v27 + 8))(v9, v5);
  }
  unint64_t v22 = *(void *)(v28 + 8 * (v21 + 2));
  if (v22)
  {
    v21 += 2;
    goto LABEL_11;
  }
  int64_t v25 = v21 + 3;
  if (v21 + 3 >= v29)
  {
    int64_t v15 = v21 + 2;
    goto LABEL_16;
  }
  unint64_t v22 = *(void *)(v28 + 8 * v25);
  if (v22)
  {
    v21 += 3;
LABEL_11:
    unint64_t v14 = (v22 - 1) & v22;
    unint64_t v17 = __clz(__rbit64(v22)) + (v21 << 6);
    int64_t v15 = v21;
LABEL_7:
    uint64_t v18 = *(void *)(v10 + 56);
    Swift::String v19 = (void *)(*(void *)(v10 + 48) + 16 * v17);
    uint64_t v20 = v19[1];
    *(void *)&long long v34 = *v19;
    *((void *)&v34 + 1) = v20;
    sub_5606C(v18 + 40 * v17, (uint64_t)v41, &qword_26D168);
    swift_bridgeObjectRetain();
    goto LABEL_17;
  }
  while (1)
  {
    int64_t v21 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v21 >= v29)
    {
      int64_t v15 = v26;
      goto LABEL_16;
    }
    unint64_t v22 = *(void *)(v28 + 8 * v21);
    ++v25;
    if (v22) {
      goto LABEL_11;
    }
  }
LABEL_35:
  __break(1u);
  return result;
}

uint64_t static APICommonHelpers.encodeAdditionalProperties<A>(_:into:)(uint64_t a1, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v53 = a4;
  uint64_t v8 = *(void *)(a3 - 8);
  __chkstk_darwin(a1);
  uint64_t v52 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  TupleTypeMetadata2 = swift_getTupleTypeMetadata2();
  uint64_t v54 = sub_1FBEB0();
  int64_t v59 = *(void *)(v54 - 8);
  uint64_t v11 = __chkstk_darwin(v54);
  uint64_t v13 = (char *)&v39 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  int64_t v15 = (char *)&v39 - v14;
  uint64_t v55 = sub_12124(&qword_26D248);
  uint64_t v41 = *(void *)(v55 - 8);
  __chkstk_darwin(v55);
  unint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v56 = a3;
  uint64_t result = sub_1FB750();
  if (result) {
    return result;
  }
  uint64_t v50 = v8;
  sub_5D64(a2, a2[3]);
  sub_5222C();
  unint64_t v51 = v17;
  uint64_t v19 = v50;
  sub_1FC870();
  uint64_t v20 = *(void *)(a1 + 64);
  uint64_t v42 = a1 + 64;
  uint64_t v21 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v22 = -1;
  if (v21 < 64) {
    uint64_t v22 = ~(-1 << v21);
  }
  unint64_t v23 = v22 & v20;
  int64_t v43 = (unint64_t)(v21 + 63) >> 6;
  uint64_t v44 = v19 + 16;
  uint64_t v48 = (void (**)(char *, char *, uint64_t))(v59 + 32);
  uint64_t v49 = TupleTypeMetadata2 - 8;
  uint64_t v46 = (uint64_t (**)(char *, uint64_t))(v19 + 8);
  uint64_t v47 = (void (**)(char *, char *, uint64_t))(v19 + 32);
  int64_t v40 = v43 - 1;
  uint64_t v45 = a1;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v24 = 0;
  int64_t v25 = v52;
  uint64_t v26 = v56;
  if (!v23) {
    goto LABEL_7;
  }
LABEL_5:
  unint64_t v27 = __clz(__rbit64(v23));
  v23 &= v23 - 1;
  int64_t v59 = v24;
  unint64_t v28 = v27 | (v24 << 6);
  while (2)
  {
    uint64_t v29 = *(void *)(v45 + 56);
    long long v30 = (void *)(*(void *)(v45 + 48) + 16 * v28);
    uint64_t v31 = v30[1];
    *(void *)uint64_t v13 = *v30;
    *((void *)v13 + 1) = v31;
    (*(void (**)(char *, unint64_t, uint64_t))(v19 + 16))(&v13[*(int *)(TupleTypeMetadata2 + 48)], v29 + *(void *)(v19 + 72) * v28, v56);
    uint64_t v32 = *(void *)(TupleTypeMetadata2 - 8);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v32 + 56))(v13, 0, 1, TupleTypeMetadata2);
    swift_bridgeObjectRetain();
    while (1)
    {
      (*v48)(v15, v13, v54);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v32 + 48))(v15, 1, TupleTypeMetadata2) == 1) {
        goto LABEL_30;
      }
      uint64_t v35 = *(void *)v15;
      uint64_t v36 = *((void *)v15 + 1);
      (*v47)(v25, &v15[*(int *)(TupleTypeMetadata2 + 48)], v26);
      uint64_t v57 = v35;
      uint64_t v58 = v36;
      sub_1FC530();
      swift_bridgeObjectRelease();
      uint64_t result = (*v46)(v25, v26);
      if (v4)
      {
LABEL_30:
        swift_release();
        return (*(uint64_t (**)(char *, uint64_t))(v41 + 8))(v51, v55);
      }
      uint64_t v19 = v50;
      int64_t v24 = v59;
      if (v23) {
        goto LABEL_5;
      }
LABEL_7:
      int64_t v33 = v24 + 1;
      if (__OFADD__(v24, 1))
      {
        __break(1u);
        goto LABEL_33;
      }
      if (v33 >= v43)
      {
        int64_t v59 = v24;
        goto LABEL_12;
      }
      unint64_t v34 = *(void *)(v42 + 8 * v33);
      if (v34) {
        goto LABEL_10;
      }
      int64_t v37 = v24 + 2;
      if (v24 + 2 < v43) {
        break;
      }
LABEL_29:
      int64_t v59 = v33;
LABEL_12:
      uint64_t v32 = *(void *)(TupleTypeMetadata2 - 8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v32 + 56))(v13, 1, 1, TupleTypeMetadata2);
      unint64_t v23 = 0;
    }
    unint64_t v34 = *(void *)(v42 + 8 * v37);
    if (v34)
    {
      int64_t v33 = v24 + 2;
LABEL_10:
      unint64_t v23 = (v34 - 1) & v34;
      unint64_t v28 = __clz(__rbit64(v34)) + (v33 << 6);
      int64_t v59 = v33;
      continue;
    }
    break;
  }
  int64_t v38 = v24 + 3;
  if (v38 >= v43)
  {
    int64_t v59 = v37;
    goto LABEL_12;
  }
  unint64_t v34 = *(void *)(v42 + 8 * v38);
  if (v34)
  {
    int64_t v33 = v38;
    goto LABEL_10;
  }
  while (1)
  {
    int64_t v33 = v38 + 1;
    if (__OFADD__(v38, 1)) {
      break;
    }
    if (v33 >= v43)
    {
      int64_t v33 = v40;
      goto LABEL_29;
    }
    unint64_t v34 = *(void *)(v42 + 8 * v33);
    ++v38;
    if (v34) {
      goto LABEL_10;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

uint64_t static APICommonHelpers.validateContentTypeIfPresent(_:in:)(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  return sub_52780(a1, a2, a3);
}

uint64_t sub_3FC8C(uint64_t result, unint64_t a2)
{
  uint64_t v3 = HIBYTE(a2) & 0xF;
  uint64_t v4 = result & 0xFFFFFFFFFFFFLL;
  if ((a2 & 0x2000000000000000) != 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = result & 0xFFFFFFFFFFFFLL;
  }
  if (!v5) {
    return 0;
  }
  uint64_t v6 = result;
  if ((a2 & 0x1000000000000000) == 0)
  {
    if ((a2 & 0x2000000000000000) == 0)
    {
      if ((result & 0x1000000000000000) != 0) {
        uint64_t v7 = (unsigned __int8 *)((a2 & 0xFFFFFFFFFFFFFFFLL) + 32);
      }
      else {
        uint64_t v7 = (unsigned __int8 *)sub_1FC130();
      }
      uint64_t v8 = (uint64_t)sub_4E260(v7, v4, 10);
      char v10 = v9 & 1;
      goto LABEL_44;
    }
    v24[0] = result;
    v24[1] = a2 & 0xFFFFFFFFFFFFFFLL;
    if (result == 43)
    {
      if (!v3) {
        goto LABEL_57;
      }
      if (v3 == 1 || (BYTE1(result) - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v8 = (BYTE1(result) - 48);
      if (v3 != 2)
      {
        if ((BYTE2(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v8 = 10 * (BYTE1(result) - 48) + (BYTE2(result) - 48);
        uint64_t v11 = v3 - 3;
        if (v11)
        {
          uint64_t v12 = (unsigned __int8 *)v24 + 3;
          while (1)
          {
            unsigned int v13 = *v12 - 48;
            if (v13 > 9) {
              goto LABEL_31;
            }
            uint64_t v14 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_31;
            }
            uint64_t v8 = v14 + v13;
            if (__OFADD__(v14, v13)) {
              goto LABEL_31;
            }
            char v10 = 0;
            ++v12;
            if (!--v11) {
              goto LABEL_44;
            }
          }
        }
      }
    }
    else
    {
      if (result == 45)
      {
        if (v3)
        {
          if (v3 != 1 && (BYTE1(result) - 48) <= 9u)
          {
            if (v3 == 2)
            {
              char v10 = 0;
              uint64_t v8 = -(uint64_t)(BYTE1(result) - 48);
              goto LABEL_44;
            }
            if ((BYTE2(result) - 48) <= 9u)
            {
              uint64_t v8 = -10 * (BYTE1(result) - 48) - (BYTE2(result) - 48);
              uint64_t v19 = v3 - 3;
              if (!v19) {
                goto LABEL_43;
              }
              uint64_t v20 = (unsigned __int8 *)v24 + 3;
              while (1)
              {
                unsigned int v21 = *v20 - 48;
                if (v21 > 9) {
                  break;
                }
                uint64_t v22 = 10 * v8;
                if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
                  break;
                }
                uint64_t v8 = v22 - v21;
                if (__OFSUB__(v22, v21)) {
                  break;
                }
                char v10 = 0;
                ++v20;
                if (!--v19) {
                  goto LABEL_44;
                }
              }
            }
          }
LABEL_31:
          uint64_t v8 = 0;
          char v10 = 1;
          goto LABEL_44;
        }
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      if (!v3 || (result - 48) > 9u) {
        goto LABEL_31;
      }
      uint64_t v8 = (result - 48);
      if (v3 != 1)
      {
        if ((BYTE1(result) - 48) > 9u) {
          goto LABEL_31;
        }
        uint64_t v8 = 10 * (result - 48) + (BYTE1(result) - 48);
        uint64_t v15 = v3 - 2;
        if (v15)
        {
          uint64_t v16 = (unsigned __int8 *)v24 + 2;
          while (1)
          {
            unsigned int v17 = *v16 - 48;
            if (v17 > 9) {
              goto LABEL_31;
            }
            uint64_t v18 = 10 * v8;
            if ((unsigned __int128)(v8 * (__int128)10) >> 64 != (10 * v8) >> 63) {
              goto LABEL_31;
            }
            uint64_t v8 = v18 + v17;
            if (__OFADD__(v18, v17)) {
              goto LABEL_31;
            }
            char v10 = 0;
            ++v16;
            if (!--v15) {
              goto LABEL_44;
            }
          }
        }
      }
    }
LABEL_43:
    char v10 = 0;
    goto LABEL_44;
  }
  swift_bridgeObjectRetain();
  uint64_t v8 = sub_4DEEC(v6, a2, 10, (uint64_t (*)(void *, uint64_t, uint64_t))sub_4E260);
  char v10 = v23;
  swift_bridgeObjectRelease();
LABEL_44:
  if (v10) {
    return 0;
  }
  else {
    return v8;
  }
}

uint64_t sub_3FF7C()
{
  return sub_3FC8C(*(void *)v0, *(void *)(v0 + 8));
}

uint64_t sub_3FF9C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1FC580();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t static Transport.Server.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 1;
  }
  else {
    return sub_1FC5F0();
  }
}

Swift::Int Transport.Server.hashValue.getter()
{
  return sub_1FC830();
}

uint64_t sub_40060()
{
  return sub_1FB8C0();
}

Swift::Int sub_40068()
{
  return sub_1FC830();
}

uint64_t sub_400B0(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return 0;
  }
  else {
    return sub_1FC5F0();
  }
}

uint64_t sub_400E0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0() ^ 1;
  }
  return v7 & 1;
}

uint64_t sub_40120(void *a1, void *a2)
{
  if (*a1 == *a2 && a1[1] == a2[1]) {
    char v3 = 1;
  }
  else {
    char v3 = sub_1FC5F0() ^ 1;
  }
  return v3 & 1;
}

uint64_t sub_4016C(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = a1[1];
  uint64_t v4 = *a2;
  uint64_t v5 = a2[1];
  if (v4 == v2 && v5 == v3) {
    return 0;
  }
  else {
    return sub_1FC5F0();
  }
}

uint64_t sub_40190(uint64_t a1)
{
  unint64_t v2 = sub_5222C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_401CC(uint64_t a1)
{
  unint64_t v2 = sub_5222C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DateConfiguration.EncoderInput.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1FB0E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t DateConfiguration.EncoderInput.date.setter(uint64_t a1)
{
  uint64_t v3 = sub_1FB0E0();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t DateConfiguration.EncoderInput.init(date:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1FB0E0();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32);

  return v5(a2, a1, v4);
}

uint64_t sub_40344@<X0>(uint64_t *a1@<X0>, uint64_t (**a2)@<X0>(uint64_t *a1@<X8>)@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_55D1C;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  *a2 = v6;
  a2[1] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v5;

  return sub_52948(v3);
}

uint64_t sub_403C4(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  if (*a1)
  {
    uint64_t v5 = swift_allocObject();
    *(void *)(v5 + 16) = v3;
    *(void *)(v5 + 24) = v4;
    uint64_t v6 = sub_55CDC;
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v5 = 0;
  }
  uint64_t v7 = *a2;
  sub_52948(v3);
  uint64_t result = sub_52958(v7);
  *a2 = (uint64_t)v6;
  a2[1] = v5;
  return result;
}

uint64_t DateConfiguration.encoder.getter()
{
  uint64_t v1 = *v0;
  sub_52948(*v0);
  return v1;
}

uint64_t DateConfiguration.encoder.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_52958(*v2);
  *unint64_t v2 = a1;
  v2[1] = a2;
  return result;
}

uint64_t DateConfiguration.decoder.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_52948(v1);
  return v1;
}

uint64_t DateConfiguration.decoder.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_52958(*(void *)(v2 + 16));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t CommonConfiguration.date.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  *a1 = v2;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  sub_52948(v2);

  return sub_52948(v4);
}

__n128 CommonConfiguration.date.setter(__n128 *a1)
{
  __n128 v6 = *a1;
  uint64_t v2 = a1[1].n128_i64[0];
  uint64_t v3 = a1[1].n128_i64[1];
  uint64_t v4 = v1[2];
  sub_52958(*v1);
  sub_52958(v4);
  __n128 result = v6;
  *(__n128 *)uint64_t v1 = v6;
  v1[2] = v2;
  v1[3] = v3;
  return result;
}

__n128 CommonConfiguration.init(date:)@<Q0>(uint64_t a1@<X0>, _OWORD *a2@<X8>)
{
  __n128 result = *(__n128 *)a1;
  long long v3 = *(_OWORD *)(a1 + 16);
  *a2 = *(_OWORD *)a1;
  a2[1] = v3;
  return result;
}

uint64_t DateConverter.init(configuration:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  if (*a1)
  {
    sub_52948(*a1);
    sub_52948(v5);
    uint64_t v7 = (uint64_t (*)(uint64_t))v3;
    uint64_t v8 = v4;
  }
  else
  {
    id v9 = objc_allocWithZone((Class)NSISO8601DateFormatter);
    sub_52948(0);
    sub_52948(v5);
    id v10 = [v9 init];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v10;
    uint64_t v7 = sub_529A0;
  }
  sub_52948(v3);
  if (v5)
  {
    sub_52948(v5);
    sub_52958(v3);
    sub_52958(v5);
    uint64_t v11 = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
    uint64_t result = v6;
  }
  else
  {
    sub_52958(v3);
    sub_52958(0);
    id v13 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v13;
    uint64_t v11 = sub_529BC;
  }
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = (uint64_t)v7;
  a2[5] = v8;
  a2[6] = (uint64_t)v11;
  a2[7] = result;
  return result;
}

uint64_t sub_40774(uint64_t a1, void *a2)
{
  Class isa = sub_1FB060().super.isa;
  id v4 = [a2 stringFromDate:isa];

  uint64_t v5 = sub_1FB810();
  return v5;
}

uint64_t sub_407F0@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1FB0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26D638);
  __chkstk_darwin(v8 - 8);
  id v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  NSString v11 = sub_1FB7E0();
  id v12 = [a1 dateFromString:v11];

  if (v12)
  {
    sub_1FB0B0();

    id v13 = *(void (**)(char *, char *, uint64_t))(v5 + 32);
    v13(v10, v7, v4);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v5 + 56))(v10, 0, 1, v4);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) != 1) {
      return ((uint64_t (*)(uint64_t, char *, uint64_t))v13)(a2, v10, v4);
    }
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v5 + 56))(v10, 1, 1, v4);
  }
  sub_55F38((uint64_t)v10, &qword_26D638);
  uint64_t v15 = sub_1FC0F0();
  swift_allocError();
  uint64_t v17 = v16;
  sub_1FC0C0();
  (*(void (**)(uint64_t, void, uint64_t))(*(void *)(v15 - 8) + 104))(v17, enum case for DecodingError.dataCorrupted(_:), v15);
  return swift_willThrow();
}

uint64_t DateConverter.string(for:)(uint64_t a1)
{
  uint64_t v3 = type metadata accessor for DateConfiguration.EncoderInput();
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v10 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *(uint64_t (**)(char *))(v1 + 32);
  uint64_t v7 = sub_1FB0E0();
  (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16))(v5, a1, v7);
  uint64_t v8 = v6(v5);
  sub_52A24((uint64_t)v5);
  return v8;
}

uint64_t DateConverter.date(from:)(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void (**)(void *))(v2 + 48);
  v5[0] = a1;
  v5[1] = a2;
  swift_bridgeObjectRetain();
  v3(v5);
  return swift_bridgeObjectRelease();
}

uint64_t CommonConverter.date.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  uint64_t v3 = *(void *)(v1 + 40);
  uint64_t v4 = *(void *)(v1 + 48);
  uint64_t v5 = *(void *)(v1 + 56);
  uint64_t v6 = *(void *)(v1 + 64);
  uint64_t v7 = *(void *)(v1 + 88);
  *(void *)a1 = v2;
  *(void *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(void *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(v1 + 72);
  *(void *)(a1 + 56) = v7;
  sub_52948(v2);
  sub_52948(v4);
  swift_retain();

  return swift_retain();
}

__n128 CommonConverter.date.setter(long long *a1)
{
  long long v8 = *a1;
  uint64_t v3 = *((void *)a1 + 2);
  uint64_t v4 = *((void *)a1 + 3);
  uint64_t v5 = *(void *)(v1 + 48);
  sub_52958(*(void *)(v1 + 32));
  sub_52958(v5);
  swift_release();
  swift_release();
  *(_OWORD *)(v1 + 32) = v8;
  *(void *)(v1 + 48) = v3;
  *(void *)(v1 + 56) = v4;
  __n128 result = (__n128)a1[2];
  long long v7 = a1[3];
  *(__n128 *)(v1 + 64) = result;
  *(_OWORD *)(v1 + 80) = v7;
  return result;
}

uint64_t CommonConverter.init(configuration:)@<X0>(uint64_t *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = *a1;
  uint64_t v4 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v6 = a1[3];
  if (*a1)
  {
    sub_52948(*a1);
    sub_52948(v5);
    sub_52948(v3);
    sub_52948(v5);
    long long v7 = (uint64_t (*)(uint64_t))v3;
    uint64_t v8 = v4;
  }
  else
  {
    id v9 = objc_allocWithZone((Class)NSISO8601DateFormatter);
    sub_52948(0);
    sub_52948(v5);
    sub_52948(0);
    sub_52948(v5);
    id v10 = [v9 init];
    uint64_t v8 = swift_allocObject();
    *(void *)(v8 + 16) = v10;
    long long v7 = sub_5613C;
  }
  sub_52948(v3);
  if (v5)
  {
    sub_52948(v5);
    sub_52958(v3);
    sub_52958(v5);
    NSString v11 = (uint64_t (*)@<X0>(uint64_t@<X8>))v5;
    uint64_t result = v6;
  }
  else
  {
    sub_52958(v3);
    sub_52958(0);
    id v13 = [objc_allocWithZone((Class)NSISO8601DateFormatter) init];
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v13;
    NSString v11 = sub_5616C;
  }
  *a2 = v3;
  a2[1] = v4;
  a2[2] = v5;
  a2[3] = v6;
  a2[4] = v3;
  a2[5] = v4;
  a2[6] = v5;
  a2[7] = v6;
  a2[8] = (uint64_t)v7;
  a2[9] = v8;
  a2[10] = (uint64_t)v11;
  a2[11] = result;
  return result;
}

uint64_t JSONDecoder.init(converter:)(_OWORD *a1)
{
  uint64_t v2 = sub_1FABE0();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (uint64_t *)((char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_1FAC10();
  long long v7 = (_OWORD *)swift_allocObject();
  long long v8 = a1[1];
  v7[1] = *a1;
  uint64_t v7[2] = v8;
  long long v9 = a1[3];
  v7[3] = a1[2];
  v7[4] = v9;
  *uint64_t v5 = sub_52A84;
  v5[1] = v7;
  (*(void (**)(void *, void, uint64_t))(v3 + 104))(v5, enum case for JSONDecoder.DateDecodingStrategy.custom(_:), v2);
  swift_retain();
  sub_1FABF0();
  swift_release();
  return v6;
}

uint64_t sub_40FDC(void *a1, uint64_t a2)
{
  sub_5D64(a1, a1[3]);
  uint64_t result = sub_1FC840();
  if (!v2)
  {
    sub_5D64(v9, v9[3]);
    uint64_t v5 = sub_1FC600();
    uint64_t v6 = *(void (**)(void *))(a2 + 48);
    v8[0] = v5;
    v8[1] = v7;
    swift_bridgeObjectRetain();
    v6(v8);
    swift_bridgeObjectRelease_n();
    return sub_1264C((uint64_t)v9);
  }
  return result;
}

uint64_t JSONEncoder.init(converter:outputFormatting:)(long long *a1, uint64_t a2)
{
  uint64_t v4 = sub_1FAC90();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (void *)((char *)&v19 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v8 = sub_1FAC70();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v19 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v12 = a1[1];
  long long v19 = *a1;
  long long v20 = v12;
  long long v13 = a1[3];
  long long v21 = a1[2];
  long long v22 = v13;
  uint64_t v14 = sub_1FACC0();
  (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
  swift_retain();
  sub_1FAC80();
  uint64_t v15 = (_OWORD *)swift_allocObject();
  long long v16 = v20;
  v15[1] = v19;
  long long v15[2] = v16;
  long long v17 = v22;
  v15[3] = v21;
  v15[4] = v17;
  *uint64_t v7 = sub_52B04;
  v7[1] = v15;
  (*(void (**)(void *, void, uint64_t))(v5 + 104))(v7, enum case for JSONEncoder.DateEncodingStrategy.custom(_:), v4);
  sub_1FACA0();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(a2, v8);
  return v14;
}

uint64_t sub_412C4(uint64_t a1, void *a2, uint64_t a3)
{
  uint64_t v7 = type metadata accessor for DateConfiguration.EncoderInput();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = &v14[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  uint64_t v10 = *(void (**)(unsigned char *))(a3 + 32);
  uint64_t v11 = sub_1FB0E0();
  (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v11 - 8) + 16))(v9, a1, v11);
  v10(v9);
  if (v3) {
    return sub_52A24((uint64_t)v9);
  }
  sub_52A24((uint64_t)v9);
  sub_5D64(a2, a2[3]);
  sub_1FC860();
  sub_51B20((uint64_t)v14, v15);
  sub_1FC6A0();
  swift_bridgeObjectRelease();
  return sub_1264C((uint64_t)v14);
}

Swift::Int sub_41430(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_124728(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_4D464(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_4149C(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = *(void *)(a4 + 16);
  if (!a2)
  {
    uint64_t v11 = *(void *)(a4 + 16);
    uint64_t v5 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    uint64_t v11 = *(void *)(a4 + 16);
    uint64_t v5 = 0;
    goto LABEL_14;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_16;
  }
  if (!v5)
  {
LABEL_16:
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  uint64_t v7 = a2;
  long long v17 = a1;
  uint64_t v8 = 0;
  uint64_t v9 = (void *)(a4 + 40 * v5 + 24);
  uint64_t v10 = a3 - 1;
  while (1)
  {
    uint64_t v11 = v5 + v8 - 1;
    char v12 = *((unsigned char *)v9 - 24);
    uint64_t v13 = *(v9 - 2);
    uint64_t v14 = *(v9 - 1);
    uint64_t v15 = *v9;
    *(void *)uint64_t v7 = *(v9 - 4);
    *(unsigned char *)(v7 + 8) = v12;
    *(void *)(v7 + 16) = v13;
    *(void *)(v7 + 24) = v14;
    *(void *)(v7 + 32) = v15;
    if (!(v10 + v8)) {
      break;
    }
    if (v5 + v8 == 1) {
      goto LABEL_11;
    }
    uint64_t v11 = *(void *)(a4 + 16);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    --v8;
    v9 -= 5;
    v7 += 40;
    if (v5 + v8 > v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t v5 = a3;
LABEL_11:
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  a1 = v17;
LABEL_14:
  *a1 = a4;
  a1[1] = v11;
  return v5;
}

uint64_t sub_415C0(void *a1, char *__dst, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  int64_t v11 = a7 >> 1;
  if (!__dst)
  {
    uint64_t v12 = 0;
    goto LABEL_17;
  }
  uint64_t v12 = a3;
  if (a3)
  {
    if (a3 < 0)
    {
      __break(1u);
    }
    else if (v11 != a6)
    {
      uint64_t v24 = v11 - a6;
      uint64_t v25 = a4;
      if (a6 >= v11) {
        unint64_t v13 = a7 >> 1;
      }
      else {
        unint64_t v13 = a6;
      }
      if (v11 == v13)
      {
LABEL_13:
        __break(1u);
      }
      else
      {
        uint64_t v14 = __dst;
        uint64_t v15 = a5 + 152 * v11--;
        long long v16 = (char *)(v15 - 152);
        uint64_t v17 = -(uint64_t)v13;
        uint64_t v18 = 1;
        while (1)
        {
          long long v19 = *((_OWORD *)v16 + 7);
          v26[6] = *((_OWORD *)v16 + 6);
          v26[7] = v19;
          v26[8] = *((_OWORD *)v16 + 8);
          char v27 = v16[144];
          long long v20 = *((_OWORD *)v16 + 3);
          _OWORD v26[2] = *((_OWORD *)v16 + 2);
          v26[3] = v20;
          long long v21 = *((_OWORD *)v16 + 5);
          v26[4] = *((_OWORD *)v16 + 4);
          v26[5] = v21;
          long long v22 = *((_OWORD *)v16 + 1);
          v26[0] = *(_OWORD *)v16;
          v26[1] = v22;
          memmove(v14, v16, 0x91uLL);
          if (v12 == v18) {
            break;
          }
          if (a6 == v11)
          {
            sub_54834((uint64_t)v26);
            int64_t v11 = a6;
            uint64_t v12 = v24;
            goto LABEL_15;
          }
          ++v18;
          v14 += 152;
          sub_54834((uint64_t)v26);
          --v11;
          v16 -= 152;
          if (v17 + v11 == -1) {
            goto LABEL_13;
          }
        }
      }
      sub_54834((uint64_t)v26);
LABEL_15:
      a4 = v25;
      goto LABEL_17;
    }
    uint64_t v12 = 0;
    int64_t v11 = a6;
  }
LABEL_17:
  *a1 = a4;
  a1[1] = a5;
  a1[2] = a6;
  a1[3] = a7;
  a1[4] = v11;
  return v12;
}

uint64_t sub_41720(void *a1, char *__dst, uint64_t a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(a4 + 16);
  if (!__dst)
  {
    uint64_t v11 = *(void *)(a4 + 16);
    uint64_t v6 = 0;
    goto LABEL_14;
  }
  if (!a3)
  {
    uint64_t v11 = *(void *)(a4 + 16);
LABEL_13:
    uint64_t v6 = a3;
    goto LABEL_14;
  }
  if (a3 < 0)
  {
    __break(1u);
    goto LABEL_17;
  }
  if (!v6)
  {
LABEL_17:
    uint64_t v11 = 0;
    goto LABEL_14;
  }
  uint64_t v8 = __dst;
  uint64_t v9 = 0;
  uint64_t v10 = (char *)(a4 + 152 * v6 - 120);
  while (1)
  {
    uint64_t v11 = v6 + v9 - 1;
    long long v12 = *((_OWORD *)v10 + 7);
    v17[6] = *((_OWORD *)v10 + 6);
    v17[7] = v12;
    v17[8] = *((_OWORD *)v10 + 8);
    char v18 = v10[144];
    long long v13 = *((_OWORD *)v10 + 3);
    void v17[2] = *((_OWORD *)v10 + 2);
    v17[3] = v13;
    long long v14 = *((_OWORD *)v10 + 5);
    v17[4] = *((_OWORD *)v10 + 4);
    v17[5] = v14;
    long long v15 = *((_OWORD *)v10 + 1);
    v17[0] = *(_OWORD *)v10;
    v17[1] = v15;
    memmove(v8, v10, 0x91uLL);
    if (a3 + v9 == 1) {
      goto LABEL_10;
    }
    if (v6 + v9 == 1) {
      break;
    }
    v8 += 152;
    sub_54834((uint64_t)v17);
    --v9;
    v10 -= 152;
    if (v6 + v9 > *(void *)(a4 + 16))
    {
      __break(1u);
LABEL_10:
      sub_54834((uint64_t)v17);
      goto LABEL_13;
    }
  }
  sub_54834((uint64_t)v17);
LABEL_14:
  *a1 = a4;
  a1[1] = v11;
  return v6;
}

void *sub_41858(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_42044(a1, a2, a3, a4, &qword_26D3C0);
}

void *sub_41864(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D370);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_508C4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_41974(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D3C8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 560);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[70 * v8 + 4]) {
          memmove(v12, a4 + 4, 560 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_510B0(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_41A9C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D690);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_51DAC(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_41BAC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D358);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      long long v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      long long v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_50EB8(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_41CBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D3B8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_52374(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_41DE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D3A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 152);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[19 * v8 + 4]) {
          memmove(v12, a4 + 4, 152 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_52280(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_41F08(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4298C(a1, a2, a3, a4, &qword_26D3B0, type metadata accessor for CollectionRecommendation, type metadata accessor for CollectionRecommendation);
}

void *sub_41F3C(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D348);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_54DD8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_42038(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_42044(a1, a2, a3, a4, &qword_26D560);
}

void *sub_42044(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_12124(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 25;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 3);
      long long v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      long long v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[v9 + 4]) {
          memmove(v14, a4 + 4, 8 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_50EB8(0, v9, (char *)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_42150(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D528);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_55310(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_42260(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D518);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 80);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[10 * v8 + 4]) {
          memmove(v12, a4 + 4, 80 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_553FC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_42380(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D510);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 + 31;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 6);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[8 * v8 + 4]) {
          memmove(v13, a4 + 4, v8 << 6);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_54910(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_42490(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D4B0);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_554F4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_425B8(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_43A54(a1, a2, a3, a4, &qword_26D508);
}

void *sub_425CC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D5A8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_54A04(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_426F8(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D418);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 72);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[9 * v8 + 4]) {
          memmove(v12, a4 + 4, 72 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_555EC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_42824(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D3F8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_5246C(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_42944(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_434C4(a1, a2, a3, a4, &qword_26D618);
}

uint64_t sub_42958(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4298C(a1, a2, a3, a4, &qword_26D610, type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord, type metadata accessor for MetadataCache.MetadataRequest.ContinuationRecord);
}

uint64_t sub_4298C(char a1, int64_t a2, char a3, unint64_t a4, uint64_t *a5, uint64_t (*a6)(void), uint64_t (*a7)(void))
{
  if (a3)
  {
    unint64_t v11 = *(void *)(a4 + 24);
    uint64_t v12 = v11 >> 1;
    if ((uint64_t)(v11 >> 1) < a2)
    {
      if (v12 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v12 = v11 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v11 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v12 = a2;
      }
    }
  }
  else
  {
    uint64_t v12 = a2;
  }
  uint64_t v13 = *(void *)(a4 + 16);
  if (v12 <= v13) {
    uint64_t v14 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v14 = v12;
  }
  if (!v14)
  {
    char v18 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_12124(a5);
  uint64_t v15 = *(void *)(a6(0) - 8);
  uint64_t v16 = *(void *)(v15 + 72);
  unint64_t v17 = (*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80);
  char v18 = (void *)swift_allocObject();
  size_t v19 = j__malloc_size(v18);
  if (!v16 || (v19 - v17 == 0x8000000000000000 ? (BOOL v20 = v16 == -1) : (BOOL v20 = 0), v20))
  {
LABEL_29:
    uint64_t result = sub_1FC210();
    __break(1u);
    return result;
  }
  _OWORD v18[2] = v13;
  v18[3] = 2 * ((uint64_t)(v19 - v17) / v16);
LABEL_19:
  uint64_t v21 = *(void *)(a6(0) - 8);
  unint64_t v22 = (*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  unint64_t v23 = (unint64_t)v18 + v22;
  if (a1)
  {
    if ((unint64_t)v18 < a4 || v23 >= a4 + v22 + *(void *)(v21 + 72) * v13)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v18 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_558FC(0, v13, v23, a4, a7);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v18;
}

uint64_t sub_42C0C(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4298C(a1, a2, a3, a4, &qword_26D608, type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord, type metadata accessor for MetadataCache.GenreMetadataRequest.ContinuationRecord);
}

uint64_t sub_42C40(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4298C(a1, a2, a3, a4, &qword_26D578, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
}

uint64_t sub_42C74(char a1, int64_t a2, char a3, unint64_t a4)
{
  if (a3)
  {
    unint64_t v6 = *(void *)(a4 + 24);
    uint64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_29;
      }
      uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        uint64_t v7 = a2;
      }
    }
  }
  else
  {
    uint64_t v7 = a2;
  }
  uint64_t v8 = *(void *)(a4 + 16);
  if (v7 <= v8) {
    uint64_t v9 = *(void *)(a4 + 16);
  }
  else {
    uint64_t v9 = v7;
  }
  if (!v9)
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_12124(&qword_26D580);
  uint64_t v10 = *(void *)(sub_12124(&qword_26D588) - 8);
  uint64_t v11 = *(void *)(v10 + 72);
  unint64_t v12 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
  uint64_t v13 = (void *)swift_allocObject();
  size_t v14 = j__malloc_size(v13);
  if (!v11 || (v14 - v12 == 0x8000000000000000 ? (BOOL v15 = v11 == -1) : (BOOL v15 = 0), v15))
  {
LABEL_29:
    uint64_t result = sub_1FC210();
    __break(1u);
    return result;
  }
  _DWORD v13[2] = v8;
  v13[3] = 2 * ((uint64_t)(v14 - v12) / v11);
LABEL_19:
  uint64_t v16 = *(void *)(sub_12124(&qword_26D588) - 8);
  unint64_t v17 = (*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80);
  unint64_t v18 = (unint64_t)v13 + v17;
  if (a1)
  {
    if ((unint64_t)v13 < a4 || v18 >= a4 + v17 + *(void *)(v16 + 72) * v8)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v13 != (void *)a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    *(void *)(a4 + 16) = 0;
  }
  else
  {
    sub_54FB4(0, v8, v18, a4);
  }
  swift_bridgeObjectRelease();
  return (uint64_t)v13;
}

void *sub_42EE4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D550);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
      unint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[7 * v8 + 4]) {
          memmove(v12, a4 + 4, 56 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      unint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_55110(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_4300C(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_43020(a1, a2, a3, a4, &qword_26D590);
}

void *sub_43020(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_12124(a5);
      size_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 56);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[7 * v9 + 4]) {
          memmove(v13, a4 + 4, 56 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_55B44(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_43154(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D5A0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_55A58(0, v8, (char *)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43264(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D5E0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 17;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 4);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[2 * v8 + 4]) {
          memmove(v13, a4 + 4, 16 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_50FA4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43374(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_43020(a1, a2, a3, a4, &qword_26D5D8);
}

void *sub_43388(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D4D8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_54AFC(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_434B0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_434C4(a1, a2, a3, a4, &qword_26D4B8);
}

void *sub_434C4(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_12124(a5);
      size_t v11 = (void *)swift_allocObject();
      int64_t v12 = j__malloc_size(v11);
      uint64_t v13 = v12 - 32;
      if (v12 < 32) {
        uint64_t v13 = v12 - 17;
      }
      v11[2] = v9;
      v11[3] = 2 * (v13 >> 4);
      size_t v14 = v11 + 4;
      if (v6) {
        goto LABEL_15;
      }
    }
    else
    {
      size_t v11 = _swiftEmptyArrayStorage;
      size_t v14 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v11 != a4 || v14 >= &a4[2 * v9 + 4]) {
          memmove(v14, a4 + 4, 16 * v9);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_55220(0, v9, (unint64_t)v14, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

void *sub_435E0(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_434C4(a1, a2, a3, a4, &qword_26D4C0);
}

void *sub_435F4(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D4C8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 48);
      int64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[6 * v8 + 4]) {
          memmove(v12, a4 + 4, 48 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      int64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_54BF4(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43718(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D4D0);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 1;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 5);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[4 * v8 + 4]) {
          memmove(v13, a4 + 4, 32 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_54CE4(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43828(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_42044(a1, a2, a3, a4, &qword_26D470);
}

void *sub_43834(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    int64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  int64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      int64_t v7 = a2;
    }
LABEL_8:
    int64_t v8 = a4[2];
    if (v7 <= v8) {
      int64_t v9 = a4[2];
    }
    else {
      int64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D438);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * v11 - 64;
      uint64_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= (void *)((char *)a4 + v8 + 32)) {
          memmove(v12, a4 + 4, v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_54DD8(0, v8, (char *)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43930(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D448);
      uint64_t v10 = (void *)swift_allocObject();
      int64_t v11 = j__malloc_size(v10);
      uint64_t v12 = v11 - 32;
      if (v11 < 32) {
        uint64_t v12 = v11 - 25;
      }
      _OWORD v10[2] = v8;
      v10[3] = 2 * (v12 >> 3);
      uint64_t v13 = v10 + 4;
      if (v5) {
        goto LABEL_15;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result)
      {
LABEL_15:
        if (v10 != a4 || v13 >= &a4[v8 + 4]) {
          memmove(v13, a4 + 4, 8 * v8);
        }
        a4[2] = 0;
        goto LABEL_24;
      }
    }
    sub_52564(0, v8, (unint64_t)v13, (uint64_t)a4);
LABEL_24:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43A40(void *a1, int64_t a2, char a3, void *a4)
{
  return sub_43A54(a1, a2, a3, a4, &qword_26D468);
}

void *sub_43A54(void *result, int64_t a2, char a3, void *a4, uint64_t *a5)
{
  char v6 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v8 = a2;
    goto LABEL_8;
  }
  unint64_t v7 = a4[3];
  uint64_t v8 = v7 >> 1;
  if ((uint64_t)(v7 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v8 + 0x4000000000000000 >= 0)
  {
    uint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v8 = a2;
    }
LABEL_8:
    uint64_t v9 = a4[2];
    if (v8 <= v9) {
      uint64_t v10 = a4[2];
    }
    else {
      uint64_t v10 = v8;
    }
    if (v10)
    {
      sub_12124(a5);
      int64_t v11 = (void *)swift_allocObject();
      size_t v12 = j__malloc_size(v11);
      v11[2] = v9;
      v11[3] = 2 * ((uint64_t)(v12 - 32) / 48);
      uint64_t v13 = v11 + 4;
      if (v6)
      {
LABEL_13:
        if (v11 != a4 || v13 >= &a4[6 * v9 + 4]) {
          memmove(v13, a4 + 4, 48 * v9);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      int64_t v11 = _swiftEmptyArrayStorage;
      uint64_t v13 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_54EC0(0, v9, (unint64_t)v13, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v11;
  }
  __break(1u);
  return result;
}

uint64_t sub_43B88(char a1, int64_t a2, char a3, unint64_t a4)
{
  return sub_4298C(a1, a2, a3, a4, &qword_26D5F0, (uint64_t (*)(void))&type metadata accessor for URLQueryItem, (uint64_t (*)(void))&type metadata accessor for URLQueryItem);
}

void *sub_43BBC(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D5C8);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[5 * v8 + 4]) {
          memmove(v12, a4 + 4, 40 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      size_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_55DA4(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43CE0(void *result, int64_t a2, char a3, void *a4)
{
  char v5 = (char)result;
  if ((a3 & 1) == 0)
  {
    uint64_t v7 = a2;
    goto LABEL_8;
  }
  unint64_t v6 = a4[3];
  uint64_t v7 = v6 >> 1;
  if ((uint64_t)(v6 >> 1) >= a2) {
    goto LABEL_8;
  }
  if (v7 + 0x4000000000000000 >= 0)
  {
    uint64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
    if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
      uint64_t v7 = a2;
    }
LABEL_8:
    uint64_t v8 = a4[2];
    if (v7 <= v8) {
      uint64_t v9 = a4[2];
    }
    else {
      uint64_t v9 = v7;
    }
    if (v9)
    {
      sub_12124(&qword_26D398);
      uint64_t v10 = (void *)swift_allocObject();
      size_t v11 = j__malloc_size(v10);
      _OWORD v10[2] = v8;
      v10[3] = 2 * ((uint64_t)(v11 - 32) / 24);
      size_t v12 = v10 + 4;
      if (v5)
      {
LABEL_13:
        if (v10 != a4 || v12 >= &a4[3 * v8 + 4]) {
          memmove(v12, a4 + 4, 24 * v8);
        }
        a4[2] = 0;
        goto LABEL_22;
      }
    }
    else
    {
      uint64_t v10 = _swiftEmptyArrayStorage;
      size_t v12 = &_swiftEmptyArrayStorage[4];
      if (result) {
        goto LABEL_13;
      }
    }
    sub_52670(0, v8, (unint64_t)v12, (uint64_t)a4);
LABEL_22:
    swift_bridgeObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

void *sub_43E08(uint64_t a1, uint64_t a2)
{
  if (a2 <= a1) {
    uint64_t v2 = a1;
  }
  else {
    uint64_t v2 = a2;
  }
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D348);
  uint64_t v4 = (void *)swift_allocObject();
  size_t v5 = j__malloc_size(v4);
  v4[2] = a1;
  v4[3] = 2 * v5 - 64;
  return v4;
}

uint64_t sub_43E70(unsigned __int16 a1, uint64_t a2, uint64_t a3)
{
  char v3 = a1;
  uint64_t v4 = a1 >> 14;
  if ((a3 & 0x1000000000000000) == 0 || (a2 & 0x800000000000000) != 0)
  {
    uint64_t v10 = sub_1FB950();
    uint64_t v11 = v10 + (v4 << 16);
    unint64_t v12 = v10 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v13 = v11 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v13 = v12;
    }
    return v13 | 4;
  }
  else
  {
    uint64_t v5 = sub_1FB920();
    uint64_t v6 = v5 + (v4 << 16);
    unint64_t v7 = v5 & 0xFFFFFFFFFFFFFFFCLL | v3 & 3;
    unint64_t v8 = v6 & 0xFFFFFFFFFFFF0000;
    if (!v4) {
      unint64_t v8 = v7;
    }
    return v8 | 8;
  }
}

uint64_t sub_43EEC(uint64_t a1)
{
  sub_12124(&qword_26D210);
  uint64_t result = sub_1FC280();
  uint64_t v4 = (void *)result;
  int64_t v5 = 0;
  uint64_t v27 = a1;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v7 = a1 + 64;
  uint64_t v6 = v8;
  uint64_t v9 = 1 << *(unsigned char *)(v7 - 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & v6;
  int64_t v23 = (unint64_t)(v9 + 63) >> 6;
  uint64_t v24 = result + 64;
  if ((v10 & v6) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v11));
  v11 &= v11 - 1;
  for (unint64_t i = v12 | (v5 << 6); ; unint64_t i = __clz(__rbit64(v15)) + (v5 << 6))
  {
    unint64_t v17 = (uint64_t *)(*(void *)(v27 + 48) + 16 * i);
    uint64_t v18 = *v17;
    uint64_t v19 = v17[1];
    sub_5606C(*(void *)(v27 + 56) + 32 * i, (uint64_t)v26, &qword_26D170);
    swift_bridgeObjectRetain();
    sub_3A8EC(v25, v26);
    if (v1)
    {
      swift_bridgeObjectRelease();
      swift_release();
      sub_55F38((uint64_t)v26, &qword_26D170);
      return (uint64_t)v4;
    }
    sub_55F38((uint64_t)v26, &qword_26D170);
    *(void *)(v24 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    BOOL v20 = (void *)(v4[6] + 16 * i);
    *BOOL v20 = v18;
    v20[1] = v19;
    uint64_t result = sub_55844((uint64_t)v25, v4[7] + 40 * i, &qword_26D168);
    uint64_t v21 = v4[2];
    BOOL v14 = __OFADD__(v21, 1);
    uint64_t v22 = v21 + 1;
    if (v14)
    {
      __break(1u);
LABEL_27:
      __break(1u);
      goto LABEL_28;
    }
    v4[2] = v22;
    if (v11) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v14 = __OFADD__(v5++, 1);
    if (v14) {
      goto LABEL_27;
    }
    if (v5 >= v23) {
      return (uint64_t)v4;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v5);
    if (!v15) {
      break;
    }
LABEL_15:
    unint64_t v11 = (v15 - 1) & v15;
  }
  int64_t v16 = v5 + 1;
  if (v5 + 1 >= v23) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v5 + 2;
  if (v5 + 2 >= v23) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15) {
    goto LABEL_14;
  }
  int64_t v16 = v5 + 3;
  if (v5 + 3 >= v23) {
    return (uint64_t)v4;
  }
  unint64_t v15 = *(void *)(v7 + 8 * v16);
  if (v15)
  {
LABEL_14:
    int64_t v5 = v16;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v23) {
      return (uint64_t)v4;
    }
    unint64_t v15 = *(void *)(v7 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_15;
    }
  }
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_44154(uint64_t a1)
{
  sub_12124(&qword_26D210);
  uint64_t result = sub_1FC280();
  char v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v27 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v23 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v24 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(v27 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_55FF4((long long *)(*(void *)(v27 + 56) + 40 * i), (uint64_t)v26);
    sub_5606C((uint64_t)v26, (uint64_t)v25, &qword_26D168);
    swift_bridgeObjectRetain();
    sub_51D78((uint64_t)v26);
    *(void *)(v24 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v17;
    v19[1] = v18;
    uint64_t result = sub_55844((uint64_t)v25, v3[7] + 40 * i, &qword_26D168);
    uint64_t v20 = v3[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v22;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v23) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v23) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v23) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v23) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_4438C(uint64_t a1)
{
  sub_12124(&qword_26D668);
  uint64_t result = sub_1FC280();
  char v3 = (void *)result;
  int64_t v4 = 0;
  uint64_t v33 = a1;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v6 = a1 + 64;
  uint64_t v5 = v7;
  uint64_t v8 = 1 << *(unsigned char *)(v6 - 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v5;
  int64_t v26 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v27 = result + 64;
  if ((v9 & v5) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v11 = __clz(__rbit64(v10));
  v10 &= v10 - 1;
  for (unint64_t i = v11 | (v4 << 6); ; unint64_t i = __clz(__rbit64(v14)) + (v4 << 6))
  {
    int64_t v16 = (uint64_t *)(*(void *)(v33 + 48) + 16 * i);
    uint64_t v17 = *v16;
    uint64_t v18 = v16[1];
    sub_5606C(*(void *)(v33 + 56) + 40 * i, (uint64_t)v32, &qword_26D168);
    sub_5606C((uint64_t)v32, (uint64_t)v28, &qword_26D168);
    long long v29 = 0u;
    long long v30 = 0u;
    uint64_t v31 = 0;
    swift_bridgeObjectRetain();
    sub_51A64((uint64_t)v28, (uint64_t)&v29);
    uint64_t result = sub_55F38((uint64_t)v32, &qword_26D168);
    *(void *)(v27 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v19 = (void *)(v3[6] + 16 * i);
    *uint64_t v19 = v17;
    v19[1] = v18;
    uint64_t v20 = v3[7] + 40 * i;
    uint64_t v21 = v31;
    long long v22 = v30;
    *(_OWORD *)uint64_t v20 = v29;
    *(_OWORD *)(v20 + 16) = v22;
    *(void *)(v20 + 32) = v21;
    uint64_t v23 = v3[2];
    BOOL v24 = __OFADD__(v23, 1);
    uint64_t v25 = v23 + 1;
    if (v24)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    v3[2] = v25;
    if (v10) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v13 = v4 + 1;
    if (__OFADD__(v4, 1)) {
      goto LABEL_24;
    }
    if (v13 >= v26) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v13);
    ++v4;
    if (!v14)
    {
      int64_t v4 = v13 + 1;
      if (v13 + 1 >= v26) {
        return (uint64_t)v3;
      }
      unint64_t v14 = *(void *)(v6 + 8 * v4);
      if (!v14)
      {
        int64_t v4 = v13 + 2;
        if (v13 + 2 >= v26) {
          return (uint64_t)v3;
        }
        unint64_t v14 = *(void *)(v6 + 8 * v4);
        if (!v14) {
          break;
        }
      }
    }
LABEL_18:
    unint64_t v10 = (v14 - 1) & v14;
  }
  int64_t v15 = v13 + 3;
  if (v15 >= v26) {
    return (uint64_t)v3;
  }
  unint64_t v14 = *(void *)(v6 + 8 * v15);
  if (v14)
  {
    int64_t v4 = v15;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v4 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v4 >= v26) {
      return (uint64_t)v3;
    }
    unint64_t v14 = *(void *)(v6 + 8 * v4);
    ++v15;
    if (v14) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

unint64_t sub_445E8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v6 = a3 & ~v5;
  if ((*(void *)(v3 + 64 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6))
  {
    uint64_t v9 = *(void *)(v3 + 48);
    unint64_t v10 = (void *)(v9 + 16 * v6);
    BOOL v11 = *v10 == a1 && v10[1] == a2;
    if (!v11 && (sub_1FC5F0() & 1) == 0)
    {
      uint64_t v12 = ~v5;
      do
      {
        unint64_t v6 = (v6 + 1) & v12;
        if (((*(void *)(v4 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
          break;
        }
        int64_t v13 = (void *)(v9 + 16 * v6);
        BOOL v14 = *v13 == a1 && v13[1] == a2;
      }
      while (!v14 && (sub_1FC5F0() & 1) == 0);
    }
  }
  return v6;
}

unint64_t sub_446CC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xD000000000000019;
      unint64_t v8 = 0x8000000000216B00;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xD00000000000001FLL;
          unint64_t v8 = 0x8000000000216B20;
          break;
        case 2:
          unint64_t v7 = 0xD000000000000015;
          unint64_t v8 = 0x8000000000216B40;
          break;
        case 3:
          unint64_t v7 = 0x6863727550736177;
          unint64_t v8 = 0xEC00000064657361;
          break;
        case 4:
          unint64_t v7 = 0xD00000000000001DLL;
          unint64_t v8 = 0x8000000000216B70;
          break;
        case 5:
          unint64_t v7 = 0x6C706D6153736177;
          unint64_t v8 = 0xEA00000000006465;
          break;
        case 6:
          uint64_t v9 = "FamilySharing";
          goto LABEL_11;
        case 7:
          uint64_t v9 = "wasAddedToWantToRead";
LABEL_11:
          unint64_t v8 = (unint64_t)v9 | 0x8000000000000000;
          unint64_t v7 = 0xD000000000000014;
          break;
        default:
          break;
      }
      unint64_t v10 = 0xD000000000000019;
      unint64_t v11 = 0x8000000000216B00;
      switch(v6)
      {
        case 1:
          unint64_t v12 = 0xD00000000000001FLL;
          int64_t v13 = "readFractionHighWaterMark";
          goto LABEL_18;
        case 2:
          unint64_t v12 = 0xD000000000000015;
          int64_t v13 = "sampleReadFractionHighWaterMark";
          goto LABEL_18;
        case 3:
          unint64_t v11 = 0xEC00000064657361;
          if (v7 != 0x6863727550736177) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 4:
          unint64_t v12 = 0xD00000000000001DLL;
          int64_t v13 = "nally";
LABEL_18:
          unint64_t v11 = (unint64_t)v13 | 0x8000000000000000;
          if (v7 != v12) {
            goto LABEL_27;
          }
          goto LABEL_26;
        case 5:
          unint64_t v10 = 0x6C706D6153736177;
          unint64_t v11 = 0xEA00000000006465;
          goto LABEL_21;
        case 6:
          BOOL v14 = "FamilySharing";
          goto LABEL_25;
        case 7:
          BOOL v14 = "wasAddedToWantToRead";
LABEL_25:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          if (v7 == 0xD000000000000014) {
            goto LABEL_26;
          }
          goto LABEL_27;
        default:
LABEL_21:
          if (v7 != v10) {
            goto LABEL_27;
          }
LABEL_26:
          if (v8 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_27:
          char v15 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v15) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_449C8(uint64_t a1, uint64_t a2, uint64_t (*a3)(void), unint64_t *a4, void (*a5)(uint64_t), uint64_t a6)
{
  BOOL v24 = a5;
  uint64_t v25 = a6;
  uint64_t v23 = a4;
  v21[1] = a1;
  uint64_t v8 = a3(0);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)v21 - v10;
  uint64_t v22 = v6;
  uint64_t v12 = -1 << *(unsigned char *)(v6 + 32);
  unint64_t v13 = a2 & ~v12;
  v21[0] = v6 + 64;
  if ((*(void *)(v6 + 64 + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13))
  {
    uint64_t v14 = ~v12;
    uint64_t v17 = *(void (**)(char *, unint64_t, uint64_t))(v9 + 16);
    uint64_t v16 = v9 + 16;
    char v15 = v17;
    uint64_t v18 = *(void *)(v16 + 56);
    do
    {
      v15(v11, *(void *)(v22 + 48) + v18 * v13, v8);
      sub_55E9C(v23, v24);
      char v19 = sub_1FB7D0();
      (*(void (**)(char *, uint64_t))(v16 - 8))(v11, v8);
      if (v19) {
        break;
      }
      unint64_t v13 = (v13 + 1) & v14;
    }
    while (((*(void *)(v21[0] + ((v13 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v13) & 1) != 0);
  }
  return v13;
}

unint64_t sub_44B68(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xEB00000000746E69;
      uint64_t v8 = 0x6F4A656C676E6973;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          uint64_t v8 = 0x746E696F4A6C6C61;
          break;
        case 2:
          uint64_t v8 = 0x6F6A7369446C6C61;
          break;
        case 3:
          uint64_t v8 = 0x7473657265746E69;
          unint64_t v7 = 0xED00006465736142;
          break;
        default:
          break;
      }
      uint64_t v9 = 0x6F4A656C676E6973;
      unint64_t v10 = 0xEB00000000746E69;
      switch(v6)
      {
        case 1:
          unint64_t v10 = 0xE800000000000000;
          if (v8 == 0x746E696F4A6C6C61) {
            goto LABEL_14;
          }
          goto LABEL_15;
        case 2:
          uint64_t v9 = 0x6F6A7369446C6C61;
          goto LABEL_11;
        case 3:
          unint64_t v10 = 0xED00006465736142;
          if (v8 == 0x7473657265746E69) {
            goto LABEL_14;
          }
          goto LABEL_15;
        default:
LABEL_11:
          if (v8 != v9) {
            goto LABEL_15;
          }
LABEL_14:
          if (v7 == v10)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_15:
          char v11 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_44D90(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      uint64_t v6 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v6 = 0x6B6F6F6265;
    }
    if (a1) {
      unint64_t v7 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v7 = 0xE500000000000000;
    }
    while (1)
    {
      uint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x6F6F626F69647561 : 0x6B6F6F6265;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xE90000000000006BLL : 0xE500000000000000;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_44ED0(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    if (a1) {
      unint64_t v6 = 0xD000000000000011;
    }
    else {
      unint64_t v6 = 0x6168637275706F63;
    }
    if (a1) {
      unint64_t v7 = 0x8000000000216470;
    }
    else {
      unint64_t v7 = 0xEA00000000006573;
    }
    while (1)
    {
      unint64_t v8 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0xD000000000000011 : 0x6168637275706F63;
      unint64_t v9 = *(unsigned char *)(*(void *)(v2 + 48) + v4) ? 0x8000000000216470 : 0xEA00000000006573;
      if (v8 == v6 && v9 == v7) {
        break;
      }
      char v11 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v11 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v5;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
    swift_bridgeObjectRelease_n();
  }
  return v4;
}

unint64_t sub_45010(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE400000000000000;
      uint64_t v8 = 1802465122;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE500000000000000;
          uint64_t v8 = 0x736B6F6F62;
          break;
        case 2:
          uint64_t v8 = 0xD000000000000010;
          unint64_t v7 = 0x8000000000216AA0;
          break;
        case 3:
          uint64_t v8 = 0x417942736B6F6F62;
          unint64_t v7 = 0xED0000726F687475;
          break;
        case 4:
          uint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x8000000000216200;
          break;
        case 5:
          uint64_t v8 = 0x476E49736B6F6F62;
          uint64_t v9 = 1701998181;
          goto LABEL_17;
        case 6:
          unint64_t v7 = 0x8000000000216220;
          goto LABEL_11;
        case 7:
          unint64_t v7 = 0x8000000000216240;
LABEL_11:
          uint64_t v8 = 0xD000000000000011;
          break;
        case 8:
          uint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x8000000000216260;
          break;
        case 9:
          unint64_t v7 = 0xE600000000000000;
          uint64_t v8 = 0x736569726573;
          break;
        case 0xA:
          unsigned int v10 = 1954047342;
          goto LABEL_16;
        case 0xB:
          unsigned int v10 = 1701998445;
LABEL_16:
          uint64_t v8 = v10 | 0x65536E4900000000;
          uint64_t v9 = 1936025970;
LABEL_17:
          unint64_t v7 = v9 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          break;
        default:
          break;
      }
      unint64_t v11 = 0xE400000000000000;
      switch(v6)
      {
        case 1:
          unint64_t v11 = 0xE500000000000000;
          if (v8 == 0x736B6F6F62) {
            goto LABEL_20;
          }
          goto LABEL_21;
        case 2:
          uint64_t v14 = "http://localhost:18060";
          unint64_t v13 = 0xD000000000000010;
          goto LABEL_30;
        case 3:
          unint64_t v11 = 0xED0000726F687475;
          if (v8 != 0x417942736B6F6F62) {
            goto LABEL_21;
          }
          goto LABEL_20;
        case 4:
          unint64_t v13 = 0xD000000000000017;
          uint64_t v14 = "ry";
LABEL_30:
          unint64_t v11 = (unint64_t)v14 | 0x8000000000000000;
          if (v8 != v13) {
            goto LABEL_21;
          }
          goto LABEL_20;
        case 5:
          uint64_t v15 = 0x476E49736B6F6F62;
          uint64_t v16 = 1701998181;
          goto LABEL_44;
        case 6:
          unint64_t v11 = 0x8000000000216220;
          goto LABEL_35;
        case 7:
          unint64_t v11 = 0x8000000000216240;
LABEL_35:
          if (v8 != 0xD000000000000011) {
            goto LABEL_21;
          }
          goto LABEL_20;
        case 8:
          unint64_t v11 = 0x8000000000216260;
          if (v8 != 0xD000000000000013) {
            goto LABEL_21;
          }
          goto LABEL_20;
        case 9:
          unint64_t v11 = 0xE600000000000000;
          if (v8 != 0x736569726573) {
            goto LABEL_21;
          }
          goto LABEL_20;
        case 10:
          unsigned int v17 = 1954047342;
          goto LABEL_43;
        case 11:
          unsigned int v17 = 1701998445;
LABEL_43:
          uint64_t v15 = v17 | 0x65536E4900000000;
          uint64_t v16 = 1936025970;
LABEL_44:
          unint64_t v11 = v16 & 0xFFFFFFFFFFFFLL | 0xEC00000000000000;
          if (v8 != v15) {
            goto LABEL_21;
          }
          goto LABEL_20;
        default:
          if (v8 != 1802465122) {
            goto LABEL_21;
          }
LABEL_20:
          if (v7 == v11)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_21:
          char v12 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v12) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_45410(void *__src, uint64_t a2)
{
  memcpy(__dst, __src, 0x229uLL);
  uint64_t v4 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v5 = a2 & ~v4;
  if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    memcpy(v7, (const void *)(*(void *)(v2 + 48) + 560 * v5), 0x229uLL);
    while (!_s20BooksPersonalization8SeedBookV2eeoiySbAC_ACtFZ_0(v7, __dst))
    {
      unint64_t v5 = (v5 + 1) & ~v4;
      if ((*(void *)(v2 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) & (1 << v5)) == 0) {
        break;
      }
      memcpy(v7, (const void *)(*(void *)(v2 + 48) + 560 * v5), 0x229uLL);
    }
  }
  return v5;
}

unint64_t sub_4551C(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        unint64_t v7 = 0xE800000000000000;
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v8 = 0x656E4F6C6576656CLL;
          int v9 = a1;
          if (!a1) {
            goto LABEL_14;
          }
        }
        else
        {
          uint64_t v8 = 0x6F77546C6576656CLL;
          int v9 = a1;
          if (!a1)
          {
LABEL_14:
            unint64_t v11 = 0xE600000000000000;
            if (v8 != 0x73657661656CLL) {
              goto LABEL_16;
            }
            goto LABEL_15;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE600000000000000;
        uint64_t v8 = 0x73657661656CLL;
        int v9 = a1;
        if (!a1) {
          goto LABEL_14;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x656E4F6C6576656CLL;
      }
      else {
        uint64_t v10 = 0x6F77546C6576656CLL;
      }
      unint64_t v11 = 0xE800000000000000;
      if (v8 != v10) {
        goto LABEL_16;
      }
LABEL_15:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_16:
      char v12 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_456B0(char a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      int v7 = *(unsigned __int8 *)(*(void *)(v2 + 48) + v4);
      uint64_t v8 = 0x797469746E656469;
      if (v7 != 1) {
        uint64_t v8 = 1768055156;
      }
      unint64_t v9 = 0xE800000000000000;
      if (v7 != 1) {
        unint64_t v9 = 0xE400000000000000;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v10 = v8;
      }
      else {
        unint64_t v10 = 0xD000000000000013;
      }
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4)) {
        unint64_t v11 = v9;
      }
      else {
        unint64_t v11 = 0x80000000002160A0;
      }
      if (a1)
      {
        if (a1 == 1) {
          uint64_t v12 = 0x797469746E656469;
        }
        else {
          uint64_t v12 = 1768055156;
        }
        if (a1 == 1) {
          unint64_t v13 = 0xE800000000000000;
        }
        else {
          unint64_t v13 = 0xE400000000000000;
        }
        if (v10 != v12) {
          goto LABEL_24;
        }
      }
      else
      {
        unint64_t v13 = 0x80000000002160A0;
        if (v10 != 0xD000000000000013) {
          goto LABEL_24;
        }
      }
      if (v11 == v13)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_24:
      char v14 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v14 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_45844(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000000002160A0;
      unint64_t v8 = 0xD000000000000013;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0x747369486B6F6F62;
          unint64_t v7 = 0xEB0000000079726FLL;
          break;
        case 2:
          unint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x80000000002160F0;
          break;
        case 3:
          unint64_t v8 = 0xD000000000000021;
          unint64_t v7 = 0x80000000002160C0;
          break;
        case 4:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1768055156;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x80000000002160A0;
      unint64_t v10 = 0xD000000000000013;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xEB0000000079726FLL;
          if (v8 == 0x747369486B6F6F62) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0x80000000002160F0;
          if (v8 != 0xD000000000000017) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          unint64_t v10 = 0xD000000000000021;
          unint64_t v9 = 0x80000000002160C0;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1768055156) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_45AAC(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          uint64_t v7 = 0x6F6F626F69647561;
          unint64_t v8 = 0xE90000000000006BLL;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v8 = 0xE500000000000000;
          uint64_t v7 = 0x646578696DLL;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE500000000000000;
            if (v7 != 0x6B6F6F6265) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v8 = 0xE500000000000000;
        uint64_t v7 = 0x6B6F6F6265;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v10 = 0x646578696DLL;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v11 = 0xE500000000000000;
      }
      if (v7 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v8 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_45C48(uint64_t a1, unint64_t a2, uint64_t a3)
{
  uint64_t v4 = -1 << *(unsigned char *)(v3 + 32);
  unint64_t v5 = a3 & ~v4;
  if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5))
  {
    uint64_t v21 = ~v4;
    while (1)
    {
      unint64_t v8 = (uint64_t *)(*(void *)(v3 + 48) + 16 * v5);
      uint64_t v9 = *v8;
      unint64_t v10 = v8[1];
      unint64_t v11 = v10 == 1 ? 0xD000000000000012 : *v8;
      unint64_t v12 = v10 == 1 ? 0x8000000000216D80 : v10;
      unint64_t v13 = v10 ? v11 : 0x4148435255504F43;
      unint64_t v14 = v10 ? v12 : 0xEA00000000004553;
      unint64_t v15 = a2 == 1 ? 0xD000000000000012 : a1;
      unint64_t v16 = a2 == 1 ? 0x8000000000216D80 : a2;
      unint64_t v17 = a2 ? v15 : 0x4148435255504F43;
      unint64_t v18 = a2 ? v16 : 0xEA00000000004553;
      if (v13 == v17 && v14 == v18) {
        break;
      }
      char v19 = sub_1FC5F0();
      sub_2F5CC(v9, v10);
      sub_2F5CC(v9, v10);
      sub_2F5CC(a1, a2);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_3781C(v9, v10);
      if ((v19 & 1) == 0)
      {
        unint64_t v5 = (v5 + 1) & v21;
        if ((*(void *)(v3 + 64 + ((v5 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v5)) {
          continue;
        }
      }
      return v5;
    }
    sub_2F5CC(v9, v10);
    sub_2F5CC(v9, v10);
    sub_2F5CC(a1, a2);
    swift_bridgeObjectRelease_n();
    sub_3781C(v9, v10);
  }
  return v5;
}

unint64_t sub_45E14(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v2 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t result = a2 & ~v5;
  if ((*(void *)(v2 + 64 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result))
  {
    uint64_t v7 = *(void *)(v2 + 48);
    if (*(void *)(v7 + 8 * result) != a1)
    {
      uint64_t v8 = ~v5;
      for (unint64_t result = (result + 1) & v8;
            ((*(void *)(v4 + ((result >> 3) & 0xFFFFFFFFFFFFFF8)) >> result) & 1) != 0;
            unint64_t result = (result + 1) & v8)
      {
        if (*(void *)(v7 + 8 * result) == a1) {
          break;
        }
      }
    }
  }
  return result;
}

unint64_t sub_45EB0(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v6 = ~v3;
    while (1)
    {
      if (*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        if (*(unsigned char *)(*(void *)(v2 + 48) + v4) == 1)
        {
          unint64_t v7 = 0xE200000000000000;
          uint64_t v8 = 12918;
          int v9 = a1;
          if (!a1) {
            goto LABEL_17;
          }
        }
        else
        {
          unint64_t v7 = 0xE400000000000000;
          uint64_t v8 = 1768055156;
          int v9 = a1;
          if (!a1)
          {
LABEL_17:
            unint64_t v11 = 0xE200000000000000;
            if (v8 != 12662) {
              goto LABEL_19;
            }
            goto LABEL_18;
          }
        }
      }
      else
      {
        unint64_t v7 = 0xE200000000000000;
        uint64_t v8 = 12662;
        int v9 = a1;
        if (!a1) {
          goto LABEL_17;
        }
      }
      if (v9 == 1) {
        uint64_t v10 = 12918;
      }
      else {
        uint64_t v10 = 1768055156;
      }
      if (v9 == 1) {
        unint64_t v11 = 0xE200000000000000;
      }
      else {
        unint64_t v11 = 0xE400000000000000;
      }
      if (v8 != v10) {
        goto LABEL_19;
      }
LABEL_18:
      if (v7 == v11)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
LABEL_19:
      char v12 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v12 & 1) == 0)
      {
        unint64_t v4 = (v4 + 1) & v6;
        if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4)) {
          continue;
        }
      }
      return v4;
    }
  }
  return v4;
}

unint64_t sub_46014(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0xE500000000000000;
      unint64_t v8 = 0x736B6F6F62;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v8 = 0xD000000000000017;
          unint64_t v7 = 0x8000000000216200;
          break;
        case 2:
          unint64_t v7 = 0x8000000000216220;
          goto LABEL_8;
        case 3:
          unint64_t v7 = 0xE600000000000000;
          unint64_t v8 = 0x756F59726F66;
          break;
        case 4:
          unint64_t v7 = 0x8000000000216240;
LABEL_8:
          unint64_t v8 = 0xD000000000000011;
          break;
        case 5:
          unint64_t v8 = 0xD000000000000013;
          unint64_t v7 = 0x8000000000216260;
          break;
        case 6:
          unint64_t v8 = 0x6974736567677573;
          unint64_t v7 = 0xEB00000000736E6FLL;
          break;
        default:
          break;
      }
      unint64_t v9 = 0xE500000000000000;
      unint64_t v10 = 0x736B6F6F62;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0x8000000000216200;
          if (v8 == 0xD000000000000017) {
            goto LABEL_22;
          }
          goto LABEL_23;
        case 2:
          unint64_t v9 = 0x8000000000216220;
          goto LABEL_18;
        case 3:
          unint64_t v9 = 0xE600000000000000;
          if (v8 != 0x756F59726F66) {
            goto LABEL_23;
          }
          goto LABEL_22;
        case 4:
          unint64_t v9 = 0x8000000000216240;
LABEL_18:
          if (v8 != 0xD000000000000011) {
            goto LABEL_23;
          }
          goto LABEL_22;
        case 5:
          unint64_t v10 = 0xD000000000000013;
          unint64_t v9 = 0x8000000000216260;
          goto LABEL_21;
        case 6:
          unint64_t v9 = 0xEB00000000736E6FLL;
          if (v8 != 0x6974736567677573) {
            goto LABEL_23;
          }
          goto LABEL_22;
        default:
LABEL_21:
          if (v8 != v10) {
            goto LABEL_23;
          }
LABEL_22:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_23:
          char v11 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

unint64_t sub_462E8(unsigned __int8 a1, uint64_t a2)
{
  uint64_t v3 = -1 << *(unsigned char *)(v2 + 32);
  unint64_t v4 = a2 & ~v3;
  if ((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4))
  {
    uint64_t v5 = ~v3;
    uint64_t v6 = a1;
    while (1)
    {
      unint64_t v7 = 0x80000000002160A0;
      unint64_t v8 = 0xD000000000000013;
      switch(*(unsigned char *)(*(void *)(v2 + 48) + v4))
      {
        case 1:
          unint64_t v7 = 0xE800000000000000;
          unint64_t v8 = 0x495041616964656DLL;
          break;
        case 2:
          unint64_t v8 = 0x747369486B6F6F62;
          unint64_t v7 = 0xEB0000000079726FLL;
          break;
        case 3:
          unint64_t v8 = 0xD000000000000022;
          unint64_t v7 = 0x80000000002161C0;
          break;
        case 4:
          unint64_t v7 = 0xE400000000000000;
          unint64_t v8 = 1768055156;
          break;
        default:
          break;
      }
      unint64_t v9 = 0x80000000002160A0;
      unint64_t v10 = 0xD000000000000013;
      switch(v6)
      {
        case 1:
          unint64_t v9 = 0xE800000000000000;
          if (v8 == 0x495041616964656DLL) {
            goto LABEL_15;
          }
          goto LABEL_16;
        case 2:
          unint64_t v9 = 0xEB0000000079726FLL;
          if (v8 != 0x747369486B6F6F62) {
            goto LABEL_16;
          }
          goto LABEL_15;
        case 3:
          unint64_t v10 = 0xD000000000000022;
          unint64_t v9 = 0x80000000002161C0;
          goto LABEL_14;
        case 4:
          unint64_t v9 = 0xE400000000000000;
          if (v8 != 1768055156) {
            goto LABEL_16;
          }
          goto LABEL_15;
        default:
LABEL_14:
          if (v8 != v10) {
            goto LABEL_16;
          }
LABEL_15:
          if (v7 == v9)
          {
            swift_bridgeObjectRelease_n();
            return v4;
          }
LABEL_16:
          char v11 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if (v11) {
            return v4;
          }
          unint64_t v4 = (v4 + 1) & v5;
          if (((*(void *)(v2 + 64 + ((v4 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
            return v4;
          }
          break;
      }
    }
  }
  return v4;
}

uint64_t sub_46538(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49254(a1, a2, a3, *v3, &qword_26D3C0);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46560(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49818(a1, a2, a3, *v3, &qword_26D350);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46588(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_46BE0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_465A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_490D0(a1, a2, a3, *v3, &qword_26D3C8);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_465D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_46D74(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_465F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_46EE0(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46618(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47084(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46638(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47208(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46658(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47374(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46678(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47520(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46698(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4768C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_466B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_477EC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_466D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4794C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_466F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49DF0(a1, a2, a3, (void *)*v3, &qword_26D4E8, &qword_26D4F0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46728(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47AD0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46748(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47DB4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46768(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49DF0(a1, a2, a3, (void *)*v3, &qword_26D6A8, &qword_26D6B0);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46798(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47F40(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_467B8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_47C30(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_467D8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_480BC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_467F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4823C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46818(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4A400(a1, a2, a3, (void *)*v3, &qword_26D3B0, type metadata accessor for CollectionRecommendation);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46854(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_483D4(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46874(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4857C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46894(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49254(a1, a2, a3, *v3, &qword_26D470);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_468BC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4A400(a1, a2, a3, (void *)*v3, &qword_26D450, type metadata accessor for SeedBasedRecommendationRequest);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_468F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_486DC(a1, a2, a3, (void *)*v3, &qword_26D488, &qword_26D490);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46928(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4891C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46948(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_48A88(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46968(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_48C34(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46988(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_48DC0(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_469A8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_48F4C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_469C8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_490D0(a1, a2, a3, *v3, &qword_26D620);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_469F8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49254(a1, a2, a3, *v3, &qword_26D560);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46A20(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4A400(a1, a2, a3, (void *)*v3, &qword_26D578, (uint64_t (*)(void))type metadata accessor for ScoredCollectionRecommendation);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46A5C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4951C(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46A7C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4966C(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46A9C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49974(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46ABC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49AFC(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46ADC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49C68(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46AFC(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49DF0(a1, a2, a3, (void *)*v3, &qword_26D478, &qword_26D480);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46B2C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_49F80(a1, a2, a3, *v3);
  *uint64_t v3 = (char *)result;
  return result;
}

uint64_t sub_46B4C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4A274(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46B6C(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4A400(a1, a2, a3, (void *)*v3, &qword_26D5D0, (uint64_t (*)(void))&type metadata accessor for URL);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46BA8(char a1, int64_t a2, char a3)
{
  uint64_t result = sub_4A648(a1, a2, a3, (void *)*v3);
  *uint64_t v3 = result;
  return result;
}

uint64_t sub_46BC8(char a1, int64_t a2, char a3, char *a4)
{
  return sub_49254(a1, a2, a3, a4, &qword_26D3C0);
}

uint64_t sub_46BD4(char a1, int64_t a2, char a3, char *a4)
{
  return sub_49818(a1, a2, a3, a4, &qword_26D350);
}

uint64_t sub_46BE0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D370);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)&_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_46D4C(char a1, int64_t a2, char a3, void *a4)
{
  return sub_486DC(a1, a2, a3, a4, &qword_26D538, &qword_26D530);
}

uint64_t sub_46D60(char a1, int64_t a2, char a3, char *a4)
{
  return sub_490D0(a1, a2, a3, a4, &qword_26D3C8);
}

uint64_t sub_46D74(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D690);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_46EE0(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D660);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_12124(&qword_26D168);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47084(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D678);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47208(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D650);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47374(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D640);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    sub_12124(&qword_26D648);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47520(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D630);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4768C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D378);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_477EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D5B0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 29;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 2);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[4 * v8]) {
      memmove(v13, v14, 4 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[4 * v8] || v13 >= &v14[4 * v8])
  {
    memcpy(v13, v14, 4 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4794C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D380);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47AD0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D358);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  unint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    memcpy(v13, v14, 8 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47C30(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D3B8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 80);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[80 * v8]) {
      memmove(v12, v13, 80 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[80 * v8] || v12 >= &v13[80 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47DB4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D698);
    unint64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 3);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 8 * v8) {
      memmove(v10 + 4, a4 + 4, 8 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 8 * v8 || v13 >= v14 + 8 * v8)
  {
    sub_12124(&qword_26D6A0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_47F40(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D6B8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    memcpy(v12, v13, 24 * v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_480BC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D3A8);
    unint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 152);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  size_t v14 = 152 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4823C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D3E8);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 160);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 4;
  unint64_t v13 = a4 + 4;
  size_t v14 = 20 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_12124(&qword_26D3F0);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_483D4(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D3D0);
    unint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 568);
  }
  else
  {
    unint64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 568 * v8) {
      memmove(v10 + 4, a4 + 4, 568 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 568 * v8 || v12 >= v13 + 568 * v8)
  {
    sub_12124(&qword_26D3D8);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4857C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D3E0);
    unint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    memcpy(v13, v14, 16 * v8);
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_486DC(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_12124(a5);
  uint64_t v13 = *(void *)(sub_12124(a6) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(sub_12124(a6) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  BOOL v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4891C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D520);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  uint64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[16 * v8] || v13 >= &v14[16 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_48A88(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D4F8);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 56);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 56 * v8) {
      memmove(v10 + 4, a4 + 4, 56 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 56 * v8 || v12 >= v13 + 56 * v8)
  {
    sub_12124(&qword_26D500);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_48C34(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D5A8);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_48DC0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D418);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 72);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[72 * v8]) {
      memmove(v12, v13, 72 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[72 * v8] || v12 >= &v13[72 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_48F4C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D360);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[40 * v8]) {
      memmove(v12, v13, 40 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[40 * v8] || v12 >= &v13[40 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_490D0(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_12124(a5);
    size_t v11 = (char *)swift_allocObject();
    size_t v12 = j__malloc_size(v11);
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * ((uint64_t)(v12 - 32) / 560);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v13 = v11 + 32;
  uint64_t v14 = a4 + 32;
  size_t v15 = 560 * v9;
  if (a1)
  {
    if (v11 != a4 || v13 >= &v14[v15]) {
      memmove(v13, v14, v15);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v14 >= &v13[v15] || v13 >= &v14[v15])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_49254(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_12124(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 25;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 3);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[8 * v9]) {
      memmove(v14, v15, 8 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[8 * v9] || v14 >= &v15[8 * v9])
  {
    memcpy(v14, v15, 8 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_493B0(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D568);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  size_t v14 = 40 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v12, v13, v14);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    memcpy(v12, v13, v14);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4951C(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D548);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4966C(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D428);
    uint64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 568);
  }
  else
  {
    uint64_t v10 = _swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 4;
  uint64_t v13 = a4 + 4;
  size_t v14 = 71 * v8;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v14]) {
      memmove(v10 + 4, a4 + 4, v14 * 8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v14] || v12 >= &v13[v14])
  {
    sub_12124(&qword_26D430);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4980C(char a1, int64_t a2, char a3, char *a4)
{
  return sub_49818(a1, a2, a3, a4, &qword_26D420);
}

uint64_t sub_49818(char a1, int64_t a2, char a3, char *a4, uint64_t *a5)
{
  if (a3)
  {
    unint64_t v7 = *((void *)a4 + 3);
    int64_t v8 = v7 >> 1;
    if ((uint64_t)(v7 >> 1) < a2)
    {
      if (v8 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v7 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v8 = a2;
      }
    }
  }
  else
  {
    int64_t v8 = a2;
  }
  uint64_t v9 = *((void *)a4 + 2);
  if (v8 <= v9) {
    uint64_t v10 = *((void *)a4 + 2);
  }
  else {
    uint64_t v10 = v8;
  }
  if (v10)
  {
    sub_12124(a5);
    size_t v11 = (char *)swift_allocObject();
    int64_t v12 = j__malloc_size(v11);
    uint64_t v13 = v12 - 32;
    if (v12 < 32) {
      uint64_t v13 = v12 - 17;
    }
    *((void *)v11 + 2) = v9;
    *((void *)v11 + 3) = 2 * (v13 >> 4);
  }
  else
  {
    size_t v11 = (char *)_swiftEmptyArrayStorage;
  }
  size_t v14 = v11 + 32;
  size_t v15 = a4 + 32;
  if (a1)
  {
    if (v11 != a4 || v14 >= &v15[16 * v9]) {
      memmove(v14, v15, 16 * v9);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v15 >= &v14[16 * v9] || v14 >= &v15[16 * v9])
  {
    memcpy(v14, v15, 16 * v9);
LABEL_30:
    swift_release();
    return (uint64_t)v11;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_49974(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D4D8);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  int64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_49AFC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D4E0);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 25;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 3);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  size_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[8 * v8]) {
      memmove(v13, v14, 8 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[8 * v8] || v13 >= &v14[8 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_49C68(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D460);
    uint64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_49DF0(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t *a6)
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (v12)
  {
    sub_12124(a5);
    uint64_t v13 = (void *)swift_allocObject();
    int64_t v14 = j__malloc_size(v13);
    uint64_t v15 = v14 - 32;
    if (v14 < 32) {
      uint64_t v15 = v14 - 1;
    }
    _DWORD v13[2] = v11;
    v13[3] = 2 * (v15 >> 5);
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
  }
  unint64_t v16 = (unint64_t)(v13 + 4);
  unint64_t v17 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v13 != a4 || v16 >= v17 + 32 * v11) {
      memmove(v13 + 4, a4 + 4, 32 * v11);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v17 >= v16 + 32 * v11 || v16 >= v17 + 32 * v11)
  {
    sub_12124(a6);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_49F80(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D368);
    int64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 1;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 5);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  int64_t v14 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v13 >= &v14[32 * v8]) {
      memmove(v13, v14, 32 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_30;
  }
  if (v14 >= &v13[32 * v8] || v13 >= &v14[32 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4A0EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D4B0);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * ((uint64_t)(v11 - 32) / 24);
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v12 = v10 + 32;
  uint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[24 * v8]) {
      memmove(v12, v13, 24 * v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[24 * v8] || v12 >= &v13[24 * v8])
  {
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4A274(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_32;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D498);
    int64_t v10 = (void *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    _OWORD v10[2] = v8;
    v10[3] = 2 * (v12 >> 4);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v13 = (unint64_t)(v10 + 4);
  unint64_t v14 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v13 >= v14 + 16 * v8) {
      memmove(v10 + 4, a4 + 4, 16 * v8);
    }
    a4[2] = 0;
    goto LABEL_30;
  }
  if (v14 >= v13 + 16 * v8 || v13 >= v14 + 16 * v8)
  {
    sub_12124(&qword_26D4A0);
    swift_arrayInitWithCopy();
LABEL_30:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_32:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4A400(char a1, int64_t a2, char a3, void *a4, uint64_t *a5, uint64_t (*a6)(void))
{
  if (a3)
  {
    unint64_t v9 = a4[3];
    int64_t v10 = v9 >> 1;
    if ((uint64_t)(v9 >> 1) < a2)
    {
      if (v10 + 0x4000000000000000 < 0)
      {
LABEL_35:
        __break(1u);
        goto LABEL_36;
      }
      int64_t v10 = v9 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v9 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v10 = a2;
      }
    }
  }
  else
  {
    int64_t v10 = a2;
  }
  uint64_t v11 = a4[2];
  if (v10 <= v11) {
    uint64_t v12 = a4[2];
  }
  else {
    uint64_t v12 = v10;
  }
  if (!v12)
  {
    unint64_t v16 = _swiftEmptyArrayStorage;
    goto LABEL_19;
  }
  sub_12124(a5);
  uint64_t v13 = *(void *)(a6(0) - 8);
  uint64_t v14 = *(void *)(v13 + 72);
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  unint64_t v16 = (void *)swift_allocObject();
  size_t v17 = j__malloc_size(v16);
  if (!v14)
  {
    __break(1u);
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  if (v17 - v15 == 0x8000000000000000 && v14 == -1) {
    goto LABEL_34;
  }
  _OWORD v16[2] = v11;
  v16[3] = 2 * ((uint64_t)(v17 - v15) / v14);
LABEL_19:
  uint64_t v19 = *(void *)(a6(0) - 8);
  unint64_t v20 = (*(unsigned __int8 *)(v19 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v19 + 80);
  uint64_t v21 = (char *)v16 + v20;
  uint64_t v22 = (char *)a4 + v20;
  if (a1)
  {
    if (v16 < a4 || v21 >= &v22[*(void *)(v19 + 72) * v11])
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (v16 != a4)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    a4[2] = 0;
    goto LABEL_32;
  }
  uint64_t v23 = *(void *)(v19 + 72) * v11;
  BOOL v24 = &v21[v23];
  unint64_t v25 = (unint64_t)&v22[v23];
  if (v22 >= v24 || (unint64_t)v21 >= v25)
  {
    swift_arrayInitWithCopy();
LABEL_32:
    swift_release();
    return (uint64_t)v16;
  }
LABEL_36:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4A648(char a1, int64_t a2, char a3, void *a4)
{
  if (a3)
  {
    unint64_t v6 = a4[3];
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = a4[2];
  if (v7 <= v8) {
    uint64_t v9 = a4[2];
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D388);
    int64_t v10 = (void *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    _OWORD v10[2] = v8;
    v10[3] = 2 * ((uint64_t)(v11 - 32) / 40);
  }
  else
  {
    int64_t v10 = _swiftEmptyArrayStorage;
  }
  unint64_t v12 = (unint64_t)(v10 + 4);
  unint64_t v13 = (unint64_t)(a4 + 4);
  if (a1)
  {
    if (v10 != a4 || v12 >= v13 + 40 * v8) {
      memmove(v10 + 4, a4 + 4, 40 * v8);
    }
    a4[2] = 0;
    goto LABEL_28;
  }
  if (v13 >= v12 + 40 * v8 || v12 >= v13 + 40 * v8)
  {
    sub_12124(&qword_26D390);
    swift_arrayInitWithCopy();
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_4A7EC(char a1, int64_t a2, char a3, char *a4)
{
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        goto LABEL_30;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  int64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    int64_t v9 = *((void *)a4 + 2);
  }
  else {
    int64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26C510);
    int64_t v10 = (char *)swift_allocObject();
    size_t v11 = j__malloc_size(v10);
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * v11 - 64;
  }
  else
  {
    int64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  unint64_t v12 = v10 + 32;
  unint64_t v13 = a4 + 32;
  if (a1)
  {
    if (v10 != a4 || v12 >= &v13[v8]) {
      memmove(v12, v13, v8);
    }
    *((void *)a4 + 2) = 0;
    goto LABEL_28;
  }
  if (v13 >= &v12[v8] || v12 >= &v13[v8])
  {
    memcpy(v12, v13, v8);
LABEL_28:
    swift_release();
    return (uint64_t)v10;
  }
LABEL_30:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_4A93C(uint64_t a1)
{
  return sub_4C050(a1, &qword_26D370, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_4E9C8, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_56154);
}

void *sub_4A970(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D538);
  uint64_t v3 = *(void *)(sub_12124(&qword_26D530) - 8);
  uint64_t v4 = *(void *)(v3 + 72);
  unint64_t v5 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  unint64_t v6 = (void *)swift_allocObject();
  uint64_t result = (void *)j__malloc_size(v6);
  if (v4)
  {
    if ((void *)((char *)result - v5) != (void *)0x8000000000000000 || v4 != -1)
    {
      v6[2] = v1;
      v6[3] = 2 * ((uint64_t)((uint64_t)result - v5) / v4);
      uint64_t v9 = *(void *)(sub_12124(&qword_26D530) - 8);
      uint64_t v10 = sub_4EBC8(&v11, (uint64_t)v6 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80)), v1, a1);
      swift_bridgeObjectRetain();
      sub_1226C();
      if (v10 == v1) {
        return v6;
      }
      __break(1u);
      return _swiftEmptyArrayStorage;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

void *sub_4AB04(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3C0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  unint64_t v6 = sub_4F124(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4ABF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 560 * a3;
        if (v10 < (unint64_t)&v8[70 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 560 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_12124(&qword_26D3C8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      void v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 560);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_4AD80(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3C8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 560);
  uint64_t v5 = sub_4EEFC(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_4AE7C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    uint64_t v8 = 2 * v5;
    if (v5 <= 0)
    {
      size_t v9 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = a2 + 16 * a3;
        if (v12 < (unint64_t)&v9[v8 + 4] && (unint64_t)(v9 + 4) < v12 + v8 * 8) {
          goto LABEL_19;
        }
        swift_arrayInitWithCopy();
        return v9;
      }
    }
    else
    {
      sub_12124(&qword_26D370);
      size_t v9 = (void *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 17;
      }
      _OWORD v9[2] = v5;
      v9[3] = 2 * (v11 >> 4);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (void *)sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_4AFF0(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 80 * a3;
        if (v10 < (unint64_t)&v8[10 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 80 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_12124(&qword_26D3B8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      void v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 80);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_1FC2B0();
  __break(1u);
  return result;
}

char *sub_4B17C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v8 = 8 * v5;
    if (v5 <= 0)
    {
      size_t v9 = (char *)_swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_7:
        if (v5 < 0) {
          goto LABEL_19;
        }
        unint64_t v12 = v9 + 32;
        unint64_t v13 = (char *)(a2 + 8 * a3);
        if (v13 < &v9[v8 + 32] && v12 < &v13[v8]) {
          goto LABEL_19;
        }
        memcpy(v12, v13, 8 * v5);
        return v9;
      }
    }
    else
    {
      sub_12124(&qword_26D3C0);
      size_t v9 = (char *)swift_allocObject();
      int64_t v10 = j__malloc_size(v9);
      uint64_t v11 = v10 - 32;
      if (v10 < 32) {
        uint64_t v11 = v10 - 25;
      }
      *((void *)v9 + 2) = v5;
      *((void *)v9 + 3) = 2 * (v11 >> 3);
      if (v4 != a3) {
        goto LABEL_7;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_19:
  uint64_t result = (char *)sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_4B2E8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3C0);
  uint64_t v3 = (void *)swift_allocObject();
  int64_t v4 = j__malloc_size(v3);
  uint64_t v5 = v4 - 32;
  if (v4 < 32) {
    uint64_t v5 = v4 - 25;
  }
  v3[2] = v1;
  v3[3] = 2 * (v5 >> 3);
  unint64_t v6 = sub_504C8(&v8, v3 + 4, v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v6 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4B3D0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3A8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 152);
  uint64_t v5 = sub_4F2B8(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_4B4CC(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3)) {
    goto LABEL_21;
  }
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  if (v5 <= 0)
  {
    uint64_t v11 = _swiftEmptyArrayStorage;
    if (v4 != a3)
    {
LABEL_10:
      if (v5 < 0) {
        goto LABEL_24;
      }
      uint64_t v14 = *(void *)(type metadata accessor for CollectionRecommendation(0) - 8);
      unint64_t v15 = (char *)v11 + ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80));
      uint64_t v16 = *(void *)(v14 + 72);
      unint64_t v17 = a2 + v16 * a3;
      uint64_t v18 = v16 * v5;
      uint64_t v19 = &v15[v18];
      unint64_t v20 = v17 + v18;
      if (v17 < (unint64_t)v19 && (unint64_t)v15 < v20) {
        goto LABEL_24;
      }
      swift_arrayInitWithCopy();
      return v11;
    }
LABEL_20:
    __break(1u);
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  sub_12124(&qword_26D3B0);
  uint64_t v8 = *(void *)(type metadata accessor for CollectionRecommendation(0) - 8);
  uint64_t v9 = *(void *)(v8 + 72);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = (void *)swift_allocObject();
  size_t v12 = j__malloc_size(v11);
  if (v9)
  {
    if (v12 - v10 == 0x8000000000000000 && v9 == -1) {
      goto LABEL_23;
    }
    v11[2] = v5;
    v11[3] = 2 * ((uint64_t)(v12 - v10) / v9);
    if (v4 != a3) {
      goto LABEL_10;
    }
    goto LABEL_20;
  }
LABEL_22:
  __break(1u);
LABEL_23:
  __break(1u);
LABEL_24:
  uint64_t result = (void *)sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_4B70C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3B8);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 80);
  uint64_t v5 = sub_4F4FC(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4B800(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D5B8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 384);
  uint64_t v5 = sub_4F764(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_4B8F8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3C8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 560);
  uint64_t v5 = sub_4F960(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_4B9F4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D360);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_4FB88(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4BAE8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D360);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_4149C(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

char *sub_4BBB4(char *result, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
  }
  else
  {
    if (!v4) {
      return (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v8 = (uint64_t)result;
    if (v4 <= 0)
    {
      uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    }
    else
    {
      sub_12124(&qword_26D3A8);
      uint64_t v9 = (char *)swift_allocObject();
      size_t v10 = j__malloc_size(v9);
      *((void *)v9 + 2) = v4;
      *((void *)v9 + 3) = 2 * ((uint64_t)(v10 - 32) / 152);
    }
    uint64_t v11 = sub_415C0(v12, v9 + 32, v4, v8, a2, a3, a4);
    swift_unknownObjectRetain();
    uint64_t result = (char *)swift_unknownObjectRelease();
    if (v11 == v4) {
      return v9;
    }
  }
  __break(1u);
  return result;
}

void *sub_4BCC4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3A8);
  uint64_t v3 = swift_allocObject();
  size_t v4 = j__malloc_size((const void *)v3);
  *(void *)(v3 + 16) = v1;
  *(void *)(v3 + 24) = 2 * ((uint64_t)(v4 - 32) / 152);
  uint64_t v5 = sub_41720(&v7, (char *)(v3 + 32), v1, a1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v3;
}

void *sub_4BD98(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D568);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 40);
  uint64_t v5 = sub_4FDB8(&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != (void *)v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4BE8C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v4 = a4 >> 1;
  uint64_t v5 = (a4 >> 1) - a3;
  if (!__OFSUB__(a4 >> 1, a3))
  {
    if (!v5) {
      return _swiftEmptyArrayStorage;
    }
    if (v5 <= 0)
    {
      uint64_t v8 = _swiftEmptyArrayStorage;
      if (v4 != a3)
      {
LABEL_5:
        if (v5 < 0) {
          goto LABEL_17;
        }
        unint64_t v10 = a2 + 152 * a3;
        if (v10 < (unint64_t)&v8[19 * v5 + 4] && (unint64_t)(v8 + 4) < v10 + 152 * v5) {
          goto LABEL_17;
        }
        swift_arrayInitWithCopy();
        return v8;
      }
    }
    else
    {
      sub_12124(&qword_26D3A8);
      uint64_t v8 = (void *)swift_allocObject();
      size_t v9 = j__malloc_size(v8);
      void v8[2] = v5;
      v8[3] = 2 * ((uint64_t)(v9 - 32) / 152);
      if (v4 != a3) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  __break(1u);
LABEL_17:
  uint64_t result = (void *)sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_4C01C(uint64_t a1)
{
  return sub_4C050(a1, &qword_26D420, (uint64_t (*)(void *, void *, uint64_t, uint64_t))sub_4FF70, (void (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))sub_1226C);
}

void *sub_4C050(uint64_t a1, uint64_t *a2, uint64_t (*a3)(void *, void *, uint64_t, uint64_t), void (*a4)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(a2);
  uint64_t v8 = (void *)swift_allocObject();
  int64_t v9 = j__malloc_size(v8);
  uint64_t v10 = v9 - 32;
  if (v9 < 32) {
    uint64_t v10 = v9 - 17;
  }
  void v8[2] = v4;
  v8[3] = 2 * (v10 >> 4);
  uint64_t v11 = a3(v18, v8 + 4, v4, a1);
  uint64_t v12 = v18[0];
  uint64_t v13 = v18[1];
  uint64_t v14 = v18[2];
  uint64_t v15 = v18[3];
  uint64_t v16 = v18[4];
  swift_bridgeObjectRetain();
  a4(v12, v13, v14, v15, v16);
  if (v11 != v4)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v8;
}

void *sub_4C144(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D4D8);
  uint64_t v3 = (void *)swift_allocObject();
  size_t v4 = j__malloc_size(v3);
  v3[2] = v1;
  v3[3] = 2 * ((uint64_t)(v4 - 32) / 24);
  uint64_t v5 = sub_50114((uint64_t)&v7, (uint64_t)(v3 + 4), v1, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v5 != v1)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return v3;
}

void *sub_4C23C(uint64_t a1)
{
  return sub_4C254(a1, &qword_26D548);
}

void *sub_4C248(uint64_t a1)
{
  return sub_4C254(a1, &qword_26D540);
}

void *sub_4C254(uint64_t a1, uint64_t *a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(a2);
  uint64_t v4 = swift_allocObject();
  size_t v5 = j__malloc_size((const void *)v4);
  *(void *)(v4 + 16) = v2;
  *(void *)(v4 + 24) = 2 * v5 - 64;
  unint64_t v6 = sub_50334(&v8, (unsigned char *)(v4 + 32), v2, a1);
  swift_bridgeObjectRetain();
  sub_1226C();
  if (v6 != (void *)v2)
  {
    __break(1u);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v4;
}

unint64_t sub_4C328(uint64_t a1, uint64_t a2)
{
  sub_1FC7E0();
  sub_1FB8C0();
  Swift::Int v4 = sub_1FC830();

  return sub_445E8(a1, a2, v4);
}

unint64_t sub_4C3A0(unsigned __int8 a1)
{
  Swift::Int v2 = sub_114E24();

  return sub_446CC(a1, v2);
}

unint64_t sub_4C3E4(uint64_t a1)
{
  sub_1FB220();
  sub_55E9C(&qword_26D5F8, (void (*)(uint64_t))&type metadata accessor for TimeZone);
  uint64_t v2 = sub_1FB790();
  return sub_449C8(a1, v2, (uint64_t (*)(void))&type metadata accessor for TimeZone, &qword_26D600, (void (*)(uint64_t))&type metadata accessor for TimeZone, (uint64_t)&protocol conformance descriptor for TimeZone);
}

unint64_t sub_4C4B8(uint64_t a1)
{
  sub_1FB0E0();
  sub_55E9C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
  uint64_t v2 = sub_1FB790();
  return sub_449C8(a1, v2, (uint64_t (*)(void))&type metadata accessor for Date, &qword_26D408, (void (*)(uint64_t))&type metadata accessor for Date, (uint64_t)&protocol conformance descriptor for Date);
}

unint64_t sub_4C58C(unsigned __int8 a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_44B68(a1, v2);
}

unint64_t sub_4C69C(char a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_44D90(a1 & 1, v2);
}

unint64_t sub_4C744(char a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_44ED0(a1 & 1, v2);
}

unint64_t sub_4C7F4(unsigned __int8 a1)
{
  sub_1FC7E0();
  CollectionRecommendationType.rawValue.getter();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_45010(a1, v2);
}

unint64_t sub_4C880(void *__src)
{
  memcpy(__dst, __src, sizeof(__dst));
  sub_1FC7E0();
  SeedBook.hash(into:)((uint64_t)v4);
  Swift::Int v2 = sub_1FC830();

  return sub_45410(__src, v2);
}

unint64_t sub_4C900(unsigned __int8 a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_4551C(a1, v2);
}

unint64_t sub_4C9C4(uint64_t a1)
{
  sub_1FB110();
  sub_55E9C(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
  uint64_t v2 = sub_1FB790();
  return sub_449C8(a1, v2, (uint64_t (*)(void))&type metadata accessor for UUID, &qword_26C570, (void (*)(uint64_t))&type metadata accessor for UUID, (uint64_t)&protocol conformance descriptor for UUID);
}

unint64_t sub_4CA98(char a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_456B0(a1, v2);
}

unint64_t sub_4CB5C(unsigned __int8 a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_45844(a1, v2);
}

unint64_t sub_4CC78(unsigned __int8 a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_45AAC(a1, v2);
}

unint64_t sub_4CD3C(uint64_t a1, unint64_t a2)
{
  sub_1FC7E0();
  sub_2F5CC(a1, a2);
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v4 = sub_1FC830();

  return sub_45C48(a1, a2, v4);
}

unint64_t sub_4CE18(uint64_t a1)
{
  uint64_t v2 = sub_1FC7D0();
  return sub_45E14(a1, v2);
}

unint64_t sub_4CE54(unsigned __int8 a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_45EB0(a1, v2);
}

unint64_t sub_4CEFC(unsigned __int8 a1)
{
  Swift::Int v2 = sub_114F70();

  return sub_46014(a1, v2);
}

unint64_t sub_4CF40(unsigned __int8 a1)
{
  sub_1FC7E0();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  Swift::Int v2 = sub_1FC830();

  return sub_462E8(a1, v2);
}

uint64_t sub_4D064(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4) {
    return swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  sub_5606C(a1 + 32, (uint64_t)&v44, &qword_26D648);
  uint64_t v7 = v44;
  uint64_t v8 = v45;
  uint64_t v42 = v44;
  uint64_t v43 = v45;
  sub_55844((uint64_t)v46, (uint64_t)v41, &qword_26D168);
  int64_t v9 = (void *)*a3;
  unint64_t v11 = sub_4C328(v7, v8);
  uint64_t v12 = v9[2];
  BOOL v13 = (v10 & 1) == 0;
  uint64_t v14 = v12 + v13;
  if (__OFADD__(v12, v13)) {
    goto LABEL_23;
  }
  char v15 = v10;
  if (v9[3] >= v14)
  {
    if (a2)
    {
      if (v10) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_120758();
      if (v15) {
        goto LABEL_10;
      }
    }
LABEL_13:
    unint64_t v20 = (void *)*a3;
    *(void *)(*a3 + 8 * (v11 >> 6) + 64) |= 1 << v11;
    uint64_t v21 = (uint64_t *)(v20[6] + 16 * v11);
    *uint64_t v21 = v7;
    v21[1] = v8;
    sub_55844((uint64_t)v41, v20[7] + 40 * v11, &qword_26D168);
    uint64_t v22 = v20[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23)
    {
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    _OWORD v20[2] = v24;
    uint64_t v25 = v4 - 1;
    if (!v25) {
      return swift_bridgeObjectRelease_n();
    }
    for (uint64_t i = a1 + 88; ; i += 56)
    {
      sub_5606C(i, (uint64_t)&v44, &qword_26D648);
      uint64_t v28 = v44;
      uint64_t v27 = v45;
      uint64_t v42 = v44;
      uint64_t v43 = v45;
      sub_55844((uint64_t)v46, (uint64_t)v41, &qword_26D168);
      long long v29 = (void *)*a3;
      unint64_t v30 = sub_4C328(v28, v27);
      uint64_t v32 = v29[2];
      BOOL v33 = (v31 & 1) == 0;
      BOOL v23 = __OFADD__(v32, v33);
      uint64_t v34 = v32 + v33;
      if (v23) {
        break;
      }
      char v35 = v31;
      if (v29[3] < v34)
      {
        sub_117338(v34, 1);
        unint64_t v30 = sub_4C328(v28, v27);
        if ((v35 & 1) != (v36 & 1)) {
          goto LABEL_25;
        }
      }
      if (v35) {
        goto LABEL_10;
      }
      int64_t v37 = (void *)*a3;
      *(void *)(*a3 + 8 * (v30 >> 6) + 64) |= 1 << v30;
      int64_t v38 = (uint64_t *)(v37[6] + 16 * v30);
      uint64_t *v38 = v28;
      v38[1] = v27;
      sub_55844((uint64_t)v41, v37[7] + 40 * v30, &qword_26D168);
      uint64_t v39 = v37[2];
      BOOL v23 = __OFADD__(v39, 1);
      uint64_t v40 = v39 + 1;
      if (v23) {
        goto LABEL_24;
      }
      _OWORD v37[2] = v40;
      if (!--v25) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_23:
    __break(1u);
    goto LABEL_24;
  }
  sub_117338(v14, a2 & 1);
  unint64_t v16 = sub_4C328(v7, v8);
  if ((v15 & 1) == (v17 & 1))
  {
    unint64_t v11 = v16;
    if ((v15 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v19 = swift_allocError();
    swift_willThrow();
    v46[7] = v19;
    swift_errorRetain();
    sub_12124(&qword_26D670);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      sub_55F38((uint64_t)v41, &qword_26D168);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_26;
  }
LABEL_25:
  sub_1FC770();
  __break(1u);
LABEL_26:
  sub_1FC050(30);
  v47._object = (void *)0x80000000002171E0;
  v47._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
  sub_1FB8F0(v47);
  sub_1FC1D0();
  v48._uint64_t countAndFlagsBits = 39;
  v48._object = (void *)0xE100000000000000;
  sub_1FB8F0(v48);
  uint64_t result = sub_1FC220();
  __break(1u);
  return result;
}

Swift::Int sub_4D464(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_152;
    }
    if (v3) {
      return sub_4DB50(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_160;
  }
  Swift::Int v105 = result;
  v102 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = (char *)_swiftEmptyArrayStorage;
LABEL_118:
      v94 = v11;
      v104 = v8;
      if (v12 >= 2)
      {
        uint64_t v95 = *v102;
        do
        {
          unint64_t v96 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_147;
          }
          if (!v95) {
            goto LABEL_159;
          }
          v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v12 + 24];
          sub_4DC20((char *)(v95 + 16 * v98), (char *)(v95 + 16 * *(void *)&v94[16 * v12 + 16]), v95 + 16 * v99, __dst);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_148;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            v97 = sub_70B24((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_149;
          }
          v100 = &v97[16 * v96 + 32];
          *(void *)v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v12 > v101) {
            goto LABEL_150;
          }
          memmove(&v97[16 * v12 + 16], &v97[16 * v12 + 32], 16 * (v101 - v12));
          v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v12 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v104[2] = 0;
      return swift_bridgeObjectRelease();
    }
    v104 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    v104 = (void *)v7;
    __dst = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v103 = v10 + 8;
  unint64_t v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v106 = v3;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3) {
      goto LABEL_46;
    }
    uint64_t v14 = (uint64_t *)(v10 + 16 * v9);
    uint64_t v15 = *v14;
    uint64_t v16 = v14[1];
    char v17 = (void *)(v10 + 16 * v13);
    if (v15 == *v17 && v16 == v17[1])
    {
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_45;
      }
      int v19 = 0;
    }
    else
    {
      int v19 = sub_1FC5F0();
      Swift::Int v20 = v13 + 2;
      if (v13 + 2 >= v3) {
        goto LABEL_36;
      }
    }
    uint64_t v21 = (void *)(v103 + 16 * v20);
    do
    {
      BOOL v23 = (void *)(v10 + 16 * v9);
      if (*(v21 - 1) == *v23 && *v21 == v23[1])
      {
        if (v19) {
          goto LABEL_37;
        }
      }
      else if ((v19 ^ sub_1FC5F0()))
      {
        goto LABEL_36;
      }
      v21 += 2;
      Swift::Int v22 = v20 + 1;
      Swift::Int v9 = v20;
      Swift::Int v20 = v22;
    }
    while (v22 < v3);
    Swift::Int v20 = v22;
LABEL_36:
    Swift::Int v9 = v20;
    if (v19)
    {
LABEL_37:
      if (v20 < v13) {
        goto LABEL_155;
      }
      if (v13 < v20)
      {
        uint64_t v25 = 16 * v20;
        uint64_t v26 = 16 * v13;
        Swift::Int v27 = v20;
        Swift::Int v28 = v13;
        do
        {
          if (v28 != --v27)
          {
            if (!v10) {
              goto LABEL_158;
            }
            uint64_t v29 = v10 + v25;
            uint64_t v30 = *(void *)(v10 + v26);
            uint64_t v31 = *(void *)(v10 + v26 + 8);
            *(_OWORD *)(v10 + v26) = *(_OWORD *)(v10 + v25 - 16);
            *(void *)(v29 - 16) = v30;
            *(void *)(v29 - 8) = v31;
          }
          ++v28;
          v25 -= 16;
          v26 += 16;
        }
        while (v28 < v27);
      }
LABEL_45:
      Swift::Int v9 = v20;
    }
LABEL_46:
    if (v9 < v3)
    {
      if (__OFSUB__(v9, v13)) {
        goto LABEL_151;
      }
      if (v9 - v13 < v105) {
        break;
      }
    }
LABEL_67:
    if (v9 < v13) {
      goto LABEL_146;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v11 = sub_7004C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v41 = *((void *)v11 + 2);
    unint64_t v40 = *((void *)v11 + 3);
    unint64_t v12 = v41 + 1;
    if (v41 >= v40 >> 1) {
      unint64_t v11 = sub_7004C((char *)(v40 > 1), v41 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    uint64_t v42 = v11 + 32;
    uint64_t v43 = &v11[16 * v41 + 32];
    *(void *)uint64_t v43 = v13;
    *((void *)v43 + 1) = v9;
    if (v41)
    {
      Swift::Int v107 = v9;
      while (1)
      {
        unint64_t v44 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v49 = &v42[16 * v12];
          uint64_t v50 = *((void *)v49 - 8);
          uint64_t v51 = *((void *)v49 - 7);
          BOOL v55 = __OFSUB__(v51, v50);
          uint64_t v52 = v51 - v50;
          if (v55) {
            goto LABEL_135;
          }
          uint64_t v54 = *((void *)v49 - 6);
          uint64_t v53 = *((void *)v49 - 5);
          BOOL v55 = __OFSUB__(v53, v54);
          uint64_t v47 = v53 - v54;
          char v48 = v55;
          if (v55) {
            goto LABEL_136;
          }
          unint64_t v56 = v12 - 2;
          uint64_t v57 = &v42[16 * v12 - 32];
          uint64_t v59 = *(void *)v57;
          uint64_t v58 = *((void *)v57 + 1);
          BOOL v55 = __OFSUB__(v58, v59);
          uint64_t v60 = v58 - v59;
          if (v55) {
            goto LABEL_138;
          }
          BOOL v55 = __OFADD__(v47, v60);
          uint64_t v61 = v47 + v60;
          if (v55) {
            goto LABEL_141;
          }
          if (v61 >= v52)
          {
            v79 = &v42[16 * v44];
            uint64_t v81 = *(void *)v79;
            uint64_t v80 = *((void *)v79 + 1);
            BOOL v55 = __OFSUB__(v80, v81);
            uint64_t v82 = v80 - v81;
            if (v55) {
              goto LABEL_145;
            }
            BOOL v72 = v47 < v82;
            goto LABEL_105;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v73 = *((void *)v11 + 4);
            uint64_t v74 = *((void *)v11 + 5);
            BOOL v55 = __OFSUB__(v74, v73);
            uint64_t v66 = v74 - v73;
            char v67 = v55;
            goto LABEL_99;
          }
          uint64_t v46 = *((void *)v11 + 4);
          uint64_t v45 = *((void *)v11 + 5);
          BOOL v55 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          char v48 = v55;
        }
        if (v48) {
          goto LABEL_137;
        }
        unint64_t v56 = v12 - 2;
        uint64_t v62 = &v42[16 * v12 - 32];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v65 = __OFSUB__(v63, v64);
        uint64_t v66 = v63 - v64;
        char v67 = v65;
        if (v65) {
          goto LABEL_140;
        }
        uint64_t v68 = &v42[16 * v44];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v55 = __OFSUB__(v69, v70);
        uint64_t v71 = v69 - v70;
        if (v55) {
          goto LABEL_143;
        }
        if (__OFADD__(v66, v71)) {
          goto LABEL_144;
        }
        if (v66 + v71 >= v47)
        {
          BOOL v72 = v47 < v71;
LABEL_105:
          if (v72) {
            unint64_t v44 = v56;
          }
          goto LABEL_107;
        }
LABEL_99:
        if (v67) {
          goto LABEL_139;
        }
        double v75 = &v42[16 * v44];
        uint64_t v77 = *(void *)v75;
        uint64_t v76 = *((void *)v75 + 1);
        BOOL v55 = __OFSUB__(v76, v77);
        uint64_t v78 = v76 - v77;
        if (v55) {
          goto LABEL_142;
        }
        if (v78 < v66) {
          goto LABEL_15;
        }
LABEL_107:
        unint64_t v83 = v44 - 1;
        if (v44 - 1 >= v12)
        {
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        uint64_t v84 = v10;
        if (!v10) {
          goto LABEL_157;
        }
        uint64_t v85 = v11;
        uint64_t v86 = &v42[16 * v83];
        uint64_t v87 = *(void *)v86;
        uint64_t v88 = v42;
        unint64_t v89 = v44;
        uint64_t v90 = &v42[16 * v44];
        uint64_t v91 = *((void *)v90 + 1);
        uint64_t v92 = v84;
        sub_4DC20((char *)(v84 + 16 * *(void *)v86), (char *)(v84 + 16 * *(void *)v90), v84 + 16 * v91, __dst);
        if (v1) {
          goto LABEL_115;
        }
        if (v91 < v87) {
          goto LABEL_132;
        }
        if (v89 > *((void *)v85 + 2)) {
          goto LABEL_133;
        }
        *(void *)uint64_t v86 = v87;
        *(void *)&v88[16 * v83 + 8] = v91;
        unint64_t v93 = *((void *)v85 + 2);
        if (v89 >= v93) {
          goto LABEL_134;
        }
        unint64_t v11 = v85;
        unint64_t v12 = v93 - 1;
        memmove(v90, v90 + 16, 16 * (v93 - 1 - v89));
        uint64_t v42 = v88;
        *((void *)v85 + 2) = v93 - 1;
        uint64_t v10 = v92;
        Swift::Int v9 = v107;
        if (v93 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
LABEL_15:
    Swift::Int v3 = v106;
    if (v9 >= v106)
    {
      uint64_t v8 = v104;
      goto LABEL_118;
    }
  }
  if (__OFADD__(v13, v105)) {
    goto LABEL_153;
  }
  if (v13 + v105 >= v3) {
    Swift::Int v32 = v3;
  }
  else {
    Swift::Int v32 = v13 + v105;
  }
  if (v32 >= v13)
  {
    if (v9 != v32)
    {
      BOOL v33 = (void *)(v10 + 16 * v9);
      do
      {
        uint64_t v34 = (uint64_t *)(v10 + 16 * v9);
        uint64_t v35 = *v34;
        uint64_t v36 = v34[1];
        Swift::Int v37 = v13;
        int64_t v38 = v33;
        do
        {
          BOOL v39 = v35 == *(v38 - 2) && v36 == *(v38 - 1);
          if (v39 || (sub_1FC5F0() & 1) == 0) {
            break;
          }
          if (!v10) {
            goto LABEL_156;
          }
          uint64_t v35 = *v38;
          uint64_t v36 = v38[1];
          *(_OWORD *)int64_t v38 = *((_OWORD *)v38 - 1);
          *(v38 - 1) = v36;
          *(v38 - 2) = v35;
          v38 -= 2;
          ++v37;
        }
        while (v9 != v37);
        ++v9;
        v33 += 2;
      }
      while (v9 != v32);
      Swift::Int v9 = v32;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  __break(1u);
LABEL_160:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_4DB50(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v6 = result;
    uint64_t v7 = *a4;
    uint64_t v8 = *a4 + 16 * a3;
LABEL_5:
    Swift::Int v9 = (uint64_t *)(v7 + 16 * v4);
    Swift::Int result = *v9;
    uint64_t v10 = v9[1];
    uint64_t v11 = v6;
    unint64_t v12 = (uint64_t *)v8;
    while (1)
    {
      BOOL v13 = result == *(v12 - 2) && v10 == *(v12 - 1);
      if (v13 || (Swift::Int result = sub_1FC5F0(), (result & 1) == 0))
      {
LABEL_4:
        ++v4;
        v8 += 16;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v7) {
        break;
      }
      Swift::Int result = *v12;
      uint64_t v10 = v12[1];
      *(_OWORD *)unint64_t v12 = *((_OWORD *)v12 - 1);
      *(v12 - 1) = v10;
      *(v12 - 2) = result;
      v12 -= 2;
      if (v4 == ++v11) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_4DC20(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  Swift::Int v27 = __src;
  uint64_t v26 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      char v17 = &v4[16 * v13];
      uint64_t v25 = v17;
      Swift::Int v27 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        uint64_t v18 = (char *)(a3 - 16);
        int v19 = v6;
        while (1)
        {
          Swift::Int v20 = v18 + 16;
          uint64_t v21 = *((void *)v19 - 2);
          uint64_t v22 = *((void *)v19 - 1);
          v19 -= 16;
          BOOL v23 = *((void *)v17 - 2) == v21 && *((void *)v17 - 1) == v22;
          if (v23 || (sub_1FC5F0() & 1) == 0)
          {
            uint64_t v25 = v17 - 16;
            if (v20 < v17 || v18 >= v17 || v20 != v17) {
              *(_OWORD *)uint64_t v18 = *((_OWORD *)v17 - 1);
            }
            int v19 = v6;
            v17 -= 16;
            if (v6 <= v7) {
              goto LABEL_50;
            }
          }
          else
          {
            if (v20 != v6 || v18 >= v6) {
              *(_OWORD *)uint64_t v18 = *(_OWORD *)v19;
            }
            Swift::Int v27 = v19;
            if (v19 <= v7) {
              goto LABEL_50;
            }
          }
          v18 -= 16;
          uint64_t v6 = v19;
          if (v17 <= v4) {
            goto LABEL_50;
          }
        }
      }
      goto LABEL_50;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    uint64_t v14 = &v4[16 * v10];
    uint64_t v25 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      do
      {
        BOOL v15 = *(void *)v6 == *(void *)v4 && *((void *)v6 + 1) == *((void *)v4 + 1);
        if (v15 || (sub_1FC5F0() & 1) == 0)
        {
          if (v7 != v4) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v4;
          }
          v4 += 16;
          uint64_t v26 = v4;
          uint64_t v16 = v6;
        }
        else
        {
          uint64_t v16 = v6 + 16;
          if (v7 < v6 || v7 >= v16 || v7 != v6) {
            *(_OWORD *)uint64_t v7 = *(_OWORD *)v6;
          }
        }
        v7 += 16;
        if (v4 >= v14) {
          break;
        }
        uint64_t v6 = v16;
      }
      while ((unint64_t)v16 < a3);
      Swift::Int v27 = v7;
    }
LABEL_50:
    sub_7014C((void **)&v27, (const void **)&v26, &v25);
    return 1;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

unsigned __int8 *sub_4DEBC(unsigned __int8 *a1, uint64_t a2, int64_t a3)
{
  return sub_4DFE4(a1, a2, a3);
}

uint64_t sub_4DED4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_4DEEC(a1, a2, a3, (uint64_t (*)(void *, uint64_t, uint64_t))sub_4DFE4);
}

uint64_t sub_4DEEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t (*a4)(void *, uint64_t, uint64_t))
{
  uint64_t v15 = a1;
  uint64_t v16 = a2;
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1FB960();
  unint64_t v8 = v6;
  if ((v6 & 0x1000000000000000) == 0)
  {
    if ((v6 & 0x2000000000000000) == 0) {
      goto LABEL_3;
    }
LABEL_6:
    uint64_t v10 = HIBYTE(v8) & 0xF;
    uint64_t v15 = v7;
    uint64_t v16 = v8 & 0xFFFFFFFFFFFFFFLL;
    int64_t v9 = &v15;
    goto LABEL_7;
  }
  uint64_t v7 = sub_4E4DC();
  unint64_t v12 = v11;
  swift_bridgeObjectRelease();
  unint64_t v8 = v12;
  if ((v12 & 0x2000000000000000) != 0) {
    goto LABEL_6;
  }
LABEL_3:
  if ((v7 & 0x1000000000000000) != 0)
  {
    int64_t v9 = (void *)((v8 & 0xFFFFFFFFFFFFFFFLL) + 32);
    uint64_t v10 = v7 & 0xFFFFFFFFFFFFLL;
  }
  else
  {
    int64_t v9 = (void *)sub_1FC130();
  }
LABEL_7:
  uint64_t v13 = a4(v9, v10, a3);
  swift_bridgeObjectRelease();
  return v13;
}

unsigned __int8 *sub_4DFE4(unsigned __int8 *result, uint64_t a2, int64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            unint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              if (!is_mul_ok(v9, a3)) {
                return 0;
              }
              unint64_t v13 = v9 * a3;
              unsigned __int8 v14 = v11 + v12;
              BOOL v15 = v13 >= v14;
              unint64_t v9 = v13 - v14;
              if (!v15) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_66;
    }
    if (a2)
    {
      unsigned __int8 v25 = a3 + 48;
      unsigned __int8 v26 = a3 + 55;
      unsigned __int8 v27 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v25 = 58;
      }
      else
      {
        unsigned __int8 v27 = 97;
        unsigned __int8 v26 = 65;
      }
      if (result)
      {
        unint64_t v28 = 0;
        do
        {
          unsigned int v29 = *result;
          if (v29 < 0x30 || v29 >= v25)
          {
            if (v29 < 0x41 || v29 >= v26)
            {
              if (v29 < 0x61 || v29 >= v27) {
                return 0;
              }
              char v30 = -87;
            }
            else
            {
              char v30 = -55;
            }
          }
          else
          {
            char v30 = -48;
          }
          if (!is_mul_ok(v28, a3)) {
            return 0;
          }
          unint64_t v31 = v28 * a3;
          unsigned __int8 v32 = v29 + v30;
          BOOL v15 = __CFADD__(v31, v32);
          unint64_t v28 = v31 + v32;
          if (v15) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)v28;
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_66:
    __break(1u);
    return result;
  }
  uint64_t v16 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v17 = a3 + 48;
  unsigned __int8 v18 = a3 + 55;
  unsigned __int8 v19 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v17 = 58;
  }
  else
  {
    unsigned __int8 v19 = 97;
    unsigned __int8 v18 = 65;
  }
  if (!result) {
    return 0;
  }
  unint64_t v9 = 0;
  Swift::Int v20 = result + 1;
  do
  {
    unsigned int v21 = *v20;
    if (v21 < 0x30 || v21 >= v17)
    {
      if (v21 < 0x41 || v21 >= v18)
      {
        if (v21 < 0x61 || v21 >= v19) {
          return 0;
        }
        char v22 = -87;
      }
      else
      {
        char v22 = -55;
      }
    }
    else
    {
      char v22 = -48;
    }
    if (!is_mul_ok(v9, a3)) {
      return 0;
    }
    unint64_t v23 = v9 * a3;
    unsigned __int8 v24 = v21 + v22;
    BOOL v15 = __CFADD__(v23, v24);
    unint64_t v9 = v23 + v24;
    if (v15) {
      return 0;
    }
    ++v20;
    --v16;
  }
  while (v16);
  return (unsigned __int8 *)v9;
}

unsigned __int8 *sub_4E260(unsigned __int8 *result, uint64_t a2, uint64_t a3)
{
  uint64_t v3 = a2;
  int v4 = *result;
  if (v4 != 43)
  {
    if (v4 == 45)
    {
      if (a2 >= 1)
      {
        uint64_t v5 = a2 - 1;
        if (a2 != 1)
        {
          unsigned __int8 v6 = a3 + 48;
          unsigned __int8 v7 = a3 + 55;
          unsigned __int8 v8 = a3 + 87;
          if (a3 > 10)
          {
            unsigned __int8 v6 = 58;
          }
          else
          {
            unsigned __int8 v8 = 97;
            unsigned __int8 v7 = 65;
          }
          if (result)
          {
            uint64_t v9 = 0;
            for (uint64_t i = result + 1; ; ++i)
            {
              unsigned int v11 = *i;
              if (v11 < 0x30 || v11 >= v6)
              {
                if (v11 < 0x41 || v11 >= v7)
                {
                  if (v11 < 0x61 || v11 >= v8) {
                    return 0;
                  }
                  char v12 = -87;
                }
                else
                {
                  char v12 = -55;
                }
              }
              else
              {
                char v12 = -48;
              }
              uint64_t v13 = v9 * a3;
              if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
                return 0;
              }
              uint64_t v9 = v13 - (v11 + v12);
              if (__OFSUB__(v13, (v11 + v12))) {
                return 0;
              }
              if (!--v5) {
                return (unsigned __int8 *)v9;
              }
            }
          }
          return 0;
        }
        return 0;
      }
      __break(1u);
      goto LABEL_65;
    }
    if (a2)
    {
      unsigned __int8 v22 = a3 + 48;
      unsigned __int8 v23 = a3 + 55;
      unsigned __int8 v24 = a3 + 87;
      if (a3 > 10)
      {
        unsigned __int8 v22 = 58;
      }
      else
      {
        unsigned __int8 v24 = 97;
        unsigned __int8 v23 = 65;
      }
      if (result)
      {
        uint64_t v25 = 0;
        do
        {
          unsigned int v26 = *result;
          if (v26 < 0x30 || v26 >= v22)
          {
            if (v26 < 0x41 || v26 >= v23)
            {
              if (v26 < 0x61 || v26 >= v24) {
                return 0;
              }
              char v27 = -87;
            }
            else
            {
              char v27 = -55;
            }
          }
          else
          {
            char v27 = -48;
          }
          uint64_t v28 = v25 * a3;
          if ((unsigned __int128)(v25 * (__int128)a3) >> 64 != (v25 * a3) >> 63) {
            return 0;
          }
          uint64_t v25 = v28 + (v26 + v27);
          if (__OFADD__(v28, (v26 + v27))) {
            return 0;
          }
          ++result;
          --v3;
        }
        while (v3);
        return (unsigned __int8 *)(v28 + (v26 + v27));
      }
      return 0;
    }
    return 0;
  }
  if (a2 < 1)
  {
LABEL_65:
    __break(1u);
    return result;
  }
  uint64_t v14 = a2 - 1;
  if (a2 == 1) {
    return 0;
  }
  unsigned __int8 v15 = a3 + 48;
  unsigned __int8 v16 = a3 + 55;
  unsigned __int8 v17 = a3 + 87;
  if (a3 > 10)
  {
    unsigned __int8 v15 = 58;
  }
  else
  {
    unsigned __int8 v17 = 97;
    unsigned __int8 v16 = 65;
  }
  if (!result) {
    return 0;
  }
  uint64_t v9 = 0;
  unsigned __int8 v18 = result + 1;
  do
  {
    unsigned int v19 = *v18;
    if (v19 < 0x30 || v19 >= v15)
    {
      if (v19 < 0x41 || v19 >= v16)
      {
        if (v19 < 0x61 || v19 >= v17) {
          return 0;
        }
        char v20 = -87;
      }
      else
      {
        char v20 = -55;
      }
    }
    else
    {
      char v20 = -48;
    }
    uint64_t v21 = v9 * a3;
    if ((unsigned __int128)(v9 * (__int128)a3) >> 64 != (v9 * a3) >> 63) {
      return 0;
    }
    uint64_t v9 = v21 + (v19 + v20);
    if (__OFADD__(v21, (v19 + v20))) {
      return 0;
    }
    ++v18;
    --v14;
  }
  while (v14);
  return (unsigned __int8 *)v9;
}

uint64_t sub_4E4DC()
{
  unint64_t v0 = sub_1FB970();
  uint64_t v4 = sub_4E55C(v0, v1, v2, v3);
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_4E55C(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  if ((a4 & 0x1000000000000000) != 0)
  {
    uint64_t v9 = sub_4E6B4(a1, a2, a3, a4);
    if (!v9
      || (uint64_t v10 = v9,
          unsigned int v11 = sub_43E08(v9, 0),
          unint64_t v12 = sub_4E7B4((unint64_t)v14, (uint64_t)(v11 + 4), v10, a1, a2, a3, a4),
          swift_bridgeObjectRetain(),
          swift_bridgeObjectRelease(),
          v12 == v10))
    {
      uint64_t v13 = sub_1FB8B0();
      swift_release();
      return v13;
    }
    __break(1u);
  }
  else
  {
    if ((a4 & 0x2000000000000000) != 0)
    {
      v14[0] = a3;
      v14[1] = a4 & 0xFFFFFFFFFFFFFFLL;
      return sub_1FB8B0();
    }
    if ((a3 & 0x1000000000000000) != 0) {
      goto LABEL_4;
    }
  }
  sub_1FC130();
LABEL_4:

  return sub_1FB8B0();
}

uint64_t sub_4E6B4(uint64_t a1, unint64_t a2, unint64_t a3, uint64_t a4)
{
  unint64_t v4 = a4;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  unint64_t v7 = a1;
  uint64_t v8 = (a3 >> 59) & 1;
  if ((a4 & 0x1000000000000000) == 0) {
    LOBYTE(v8) = 1;
  }
  uint64_t v9 = 4 << v8;
  if ((a1 & 0xC) == 4 << v8)
  {
    a1 = sub_43E70(a1, a3, a4);
    unint64_t v7 = a1;
  }
  if ((v6 & 0xC) == v9)
  {
    a1 = sub_43E70(v6, v5, v4);
    unint64_t v6 = a1;
    if ((v4 & 0x1000000000000000) == 0) {
      return (v6 >> 16) - (v7 >> 16);
    }
  }
  else if ((v4 & 0x1000000000000000) == 0)
  {
    return (v6 >> 16) - (v7 >> 16);
  }
  unint64_t v11 = HIBYTE(v4) & 0xF;
  if ((v4 & 0x2000000000000000) == 0) {
    unint64_t v11 = v5 & 0xFFFFFFFFFFFFLL;
  }
  if (v11 < v7 >> 16)
  {
    __break(1u);
  }
  else if (v11 >= v6 >> 16)
  {
    a1 = v7;
    a2 = v6;
    a3 = v5;
    a4 = v4;
    return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
  }
  __break(1u);
  return String.UTF8View._foreignDistance(from:to:)(a1, a2, a3, a4);
}

unint64_t sub_4E7B4(unint64_t result, uint64_t a2, uint64_t a3, unint64_t a4, unint64_t a5, unint64_t a6, unint64_t a7)
{
  uint64_t v9 = (void *)result;
  if (!a2) {
    goto LABEL_5;
  }
  if (!a3)
  {
    unint64_t v12 = a4;
    uint64_t v11 = 0;
    goto LABEL_33;
  }
  if (a3 < 0) {
    goto LABEL_36;
  }
  unint64_t v10 = a5 >> 14;
  unint64_t v27 = a4 >> 14;
  if (a4 >> 14 == a5 >> 14)
  {
LABEL_5:
    uint64_t v11 = 0;
    unint64_t v12 = a4;
LABEL_33:
    *uint64_t v9 = a4;
    v9[1] = a5;
    _OWORD v9[2] = a6;
    v9[3] = a7;
    void v9[4] = v12;
    return v11;
  }
  uint64_t v11 = 0;
  uint64_t v14 = (a6 >> 59) & 1;
  if ((a7 & 0x1000000000000000) == 0) {
    LOBYTE(v14) = 1;
  }
  uint64_t v15 = 4 << v14;
  uint64_t v21 = (a7 & 0xFFFFFFFFFFFFFFFLL) + 32;
  uint64_t v22 = a7 & 0xFFFFFFFFFFFFFFLL;
  uint64_t v16 = HIBYTE(a7) & 0xF;
  if ((a7 & 0x2000000000000000) == 0) {
    uint64_t v16 = a6 & 0xFFFFFFFFFFFFLL;
  }
  unint64_t v23 = v16;
  uint64_t v26 = a3 - 1;
  unint64_t v12 = a4;
  while (1)
  {
    unint64_t v17 = v12 & 0xC;
    uint64_t result = v12;
    if (v17 == v15) {
      uint64_t result = sub_43E70(v12, a6, a7);
    }
    if (result >> 14 < v27 || result >> 14 >= v10) {
      break;
    }
    if ((a7 & 0x1000000000000000) != 0)
    {
      uint64_t result = sub_1FB940();
      char v19 = result;
      if (v17 != v15) {
        goto LABEL_23;
      }
    }
    else
    {
      unint64_t v18 = result >> 16;
      if ((a7 & 0x2000000000000000) != 0)
      {
        v28[0] = a6;
        v28[1] = v22;
        char v19 = *((unsigned char *)v28 + v18);
        if (v17 != v15) {
          goto LABEL_23;
        }
      }
      else
      {
        uint64_t result = v21;
        if ((a6 & 0x1000000000000000) == 0) {
          uint64_t result = sub_1FC130();
        }
        char v19 = *(unsigned char *)(result + v18);
        if (v17 != v15)
        {
LABEL_23:
          if ((a7 & 0x1000000000000000) == 0) {
            goto LABEL_24;
          }
          goto LABEL_27;
        }
      }
    }
    uint64_t result = sub_43E70(v12, a6, a7);
    unint64_t v12 = result;
    if ((a7 & 0x1000000000000000) == 0)
    {
LABEL_24:
      unint64_t v12 = (v12 & 0xFFFFFFFFFFFF0000) + 65540;
      goto LABEL_29;
    }
LABEL_27:
    if (v23 <= v12 >> 16) {
      goto LABEL_35;
    }
    unint64_t v12 = sub_1FB910();
LABEL_29:
    *(unsigned char *)(a2 + v11) = v19;
    if (v26 == v11)
    {
      uint64_t v11 = a3;
      goto LABEL_33;
    }
    ++v11;
    if (v10 == v12 >> 14) {
      goto LABEL_33;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  __break(1u);
  return result;
}

uint64_t sub_4E9C8(uint64_t result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 56;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_38:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    char v20 = (void *)(*(void *)(a4 + 48) + 16 * v16);
    uint64_t v21 = v20[1];
    *uint64_t v11 = *v20;
    v11[1] = v21;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 2;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_14;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_33;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_17;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_14:
    int64_t v17 = v12;
    goto LABEL_18;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_33:
    unint64_t v9 = 0;
LABEL_37:
    uint64_t v10 = v13;
    goto LABEL_38;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_17:
    int64_t v17 = v19;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_4EBC8(void *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_12124(&qword_26D530);
  uint64_t v36 = *(void *)(v8 - 8);
  uint64_t v37 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  int64_t v14 = (char *)&v30 - v13;
  uint64_t v15 = *(void *)(a4 + 64);
  uint64_t v34 = a4 + 64;
  uint64_t v16 = -1 << *(unsigned char *)(a4 + 32);
  if (-v16 < 64) {
    uint64_t v17 = ~(-1 << -(char)v16);
  }
  else {
    uint64_t v17 = -1;
  }
  unint64_t v18 = v17 & v15;
  if (!a2)
  {
    int64_t v19 = 0;
    a3 = 0;
LABEL_38:
    uint64_t v29 = v34;
    *a1 = a4;
    a1[1] = v29;
    a1[2] = ~v16;
    a1[3] = v19;
    a1[4] = v18;
    return a3;
  }
  if (!a3)
  {
    int64_t v19 = 0;
    goto LABEL_38;
  }
  if (a3 < 0)
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  uint64_t v31 = -1 << *(unsigned char *)(a4 + 32);
  unsigned __int8 v32 = a1;
  int64_t v19 = 0;
  uint64_t v20 = 0;
  int64_t v33 = (unint64_t)(63 - v16) >> 6;
  int64_t v30 = v33 - 1;
  uint64_t v35 = a3;
  if (!v18) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v21 = __clz(__rbit64(v18));
  v18 &= v18 - 1;
  unint64_t v22 = v21 | (v19 << 6);
  while (1)
  {
    ++v20;
    uint64_t v26 = *(void *)(a4 + 56);
    char v27 = *(unsigned char *)(*(void *)(a4 + 48) + v22);
    uint64_t v28 = type metadata accessor for AttributeAffinityResult();
    sub_557E0(v26 + *(void *)(*(void *)(v28 - 8) + 72) * v22, (uint64_t)&v11[*(int *)(v37 + 48)]);
    *uint64_t v11 = v27;
    sub_55844((uint64_t)v11, (uint64_t)v14, &qword_26D530);
    uint64_t result = sub_55844((uint64_t)v14, a2, &qword_26D530);
    a3 = v35;
    if (v20 == v35) {
      goto LABEL_37;
    }
    a2 += *(void *)(v36 + 72);
    if (v18) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v23 = v19 + 1;
    if (__OFADD__(v19, 1))
    {
      __break(1u);
      goto LABEL_40;
    }
    if (v23 >= v33) {
      goto LABEL_32;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    if (!v24) {
      break;
    }
LABEL_18:
    unint64_t v18 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v23 << 6);
    int64_t v19 = v23;
  }
  v19 += 2;
  if (v23 + 1 >= v33)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23;
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v19);
  if (v24) {
    goto LABEL_14;
  }
  int64_t v25 = v23 + 2;
  if (v23 + 2 >= v33) {
    goto LABEL_32;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v25);
  if (v24) {
    goto LABEL_17;
  }
  int64_t v19 = v23 + 3;
  if (v23 + 3 >= v33)
  {
    unint64_t v18 = 0;
    int64_t v19 = v23 + 2;
    goto LABEL_36;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v19);
  if (v24)
  {
LABEL_14:
    int64_t v23 = v19;
    goto LABEL_18;
  }
  int64_t v25 = v23 + 4;
  if (v23 + 4 >= v33)
  {
LABEL_32:
    unint64_t v18 = 0;
LABEL_36:
    a3 = v20;
LABEL_37:
    uint64_t v16 = v31;
    a1 = v32;
    goto LABEL_38;
  }
  unint64_t v24 = *(void *)(v34 + 8 * v25);
  if (v24)
  {
LABEL_17:
    int64_t v23 = v25;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v23 = v25 + 1;
    if (__OFADD__(v25, 1)) {
      break;
    }
    if (v23 >= v33)
    {
      unint64_t v18 = 0;
      int64_t v19 = v30;
      goto LABEL_36;
    }
    unint64_t v24 = *(void *)(v34 + 8 * v23);
    ++v25;
    if (v24) {
      goto LABEL_18;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_4EEFC(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 56;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v21 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = (const void *)(*(void *)(a4 + 48) + 560 * v15);
    memcpy(__dst, v19, 0x229uLL);
    memmove(v10, v19, 0x229uLL);
    if (v12 == v9)
    {
      sub_12384(__dst);
      goto LABEL_38;
    }
    v10 += 560;
    uint64_t result = sub_12384(__dst);
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v20;
      uint64_t result = v21;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_4F124(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_4F2B8(void *result, char *__dst, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!__dst)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  unint64_t v11 = __dst;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v28 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = (_OWORD *)(*(void *)(a4 + 56) + 152 * v16);
    long long v21 = v20[1];
    v29[0] = *v20;
    v29[1] = v21;
    long long v22 = v20[5];
    long long v24 = v20[2];
    long long v23 = v20[3];
    v29[4] = v20[4];
    v29[5] = v22;
    v29[2] = v24;
    _OWORD v29[3] = v23;
    long long v26 = v20[7];
    long long v25 = v20[8];
    long long v27 = v20[6];
    char v30 = *((unsigned char *)v20 + 144);
    v29[7] = v26;
    v29[8] = v25;
    v29[6] = v27;
    memmove(v11, v20, 0x91uLL);
    if (v13 == v10)
    {
      sub_54834((uint64_t)v29);
      goto LABEL_38;
    }
    v11 += 152;
    uint64_t result = (void *)sub_54834((uint64_t)v29);
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v28;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_4F4FC(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v29 = -1 << *(unsigned char *)(a4 + 32);
  char v30 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    uint64_t v19 = *(void *)(a4 + 56) + 80 * v15;
    ++v12;
    char v20 = *(unsigned char *)(v19 + 8);
    uint64_t v21 = *(void *)(v19 + 16);
    char v22 = *(unsigned char *)(v19 + 24);
    uint64_t v23 = *(void *)(v19 + 32);
    char v24 = *(unsigned char *)(v19 + 40);
    uint64_t v26 = *(void *)(v19 + 48);
    uint64_t v25 = *(void *)(v19 + 56);
    uint64_t v27 = *(void *)(v19 + 64);
    uint64_t v28 = *(void *)(v19 + 72);
    *(void *)uint64_t v10 = *(void *)v19;
    *(unsigned char *)(v10 + 8) = v20;
    *(void *)(v10 + 16) = v21;
    *(unsigned char *)(v10 + 24) = v22;
    *(void *)(v10 + 32) = v23;
    *(unsigned char *)(v10 + 40) = v24;
    *(void *)(v10 + 48) = v26;
    *(void *)(v10 + 56) = v25;
    *(void *)(v10 + 64) = v27;
    *(void *)(v10 + 72) = v28;
    if (v12 == v9)
    {
      sub_5480C(v23, v24);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 80;
    sub_5480C(v23, v24);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v29;
      uint64_t result = v30;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_4F764(void *result, char *__dst, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!__dst)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_37:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return (void *)v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_37;
  }
  if (a3 < 0)
  {
LABEL_39:
    __break(1u);
    goto LABEL_40;
  }
  int64_t v11 = __dst;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  while (v9)
  {
    unint64_t v15 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v16 = v15 | (v12 << 6);
LABEL_9:
    ++v13;
    uint64_t result = memmove(v11, (const void *)(*(void *)(a4 + 56) + 384 * v16), 0x179uLL);
    v11 += 384;
    if (v13 == v10) {
      goto LABEL_36;
    }
  }
  int64_t v17 = v12 + 1;
  if (__OFADD__(v12, 1))
  {
    __break(1u);
    goto LABEL_39;
  }
  if (v17 >= v14) {
    goto LABEL_31;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v17);
  if (v18) {
    goto LABEL_20;
  }
  v12 += 2;
  if (v17 + 1 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18)
  {
LABEL_16:
    int64_t v17 = v12;
LABEL_20:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
    goto LABEL_9;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v14) {
    goto LABEL_31;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18)
  {
LABEL_19:
    int64_t v17 = v19;
    goto LABEL_20;
  }
  int64_t v12 = v17 + 3;
  if (v17 + 3 >= v14)
  {
    unint64_t v9 = 0;
    int64_t v12 = v17 + 2;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v12);
  if (v18) {
    goto LABEL_16;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v14)
  {
LABEL_31:
    unint64_t v9 = 0;
LABEL_35:
    uint64_t v10 = v13;
LABEL_36:
    uint64_t v7 = v20;
    goto LABEL_37;
  }
  unint64_t v18 = *(void *)(v6 + 8 * v19);
  if (v18) {
    goto LABEL_19;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v14)
    {
      unint64_t v9 = 0;
      int64_t v12 = v14 - 1;
      goto LABEL_35;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_20;
    }
  }
LABEL_40:
  __break(1u);
  return result;
}

void *sub_4F960(void *result, char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v20 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v21 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    int64_t v19 = (const void *)(*(void *)(a4 + 56) + 560 * v15);
    memcpy(__dst, v19, 0x229uLL);
    memmove(v10, v19, 0x229uLL);
    if (v12 == v9)
    {
      sub_12384(__dst);
      goto LABEL_38;
    }
    v10 += 560;
    uint64_t result = sub_12384(__dst);
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v20;
      uint64_t result = v21;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_4FB88(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a4 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v11 = 0;
    uint64_t v9 = 0;
LABEL_39:
    *uint64_t result = a4;
    result[1] = v5;
    result[2] = ~v6;
    result[3] = v11;
    result[4] = v8;
    return (void *)v9;
  }
  uint64_t v9 = a3;
  if (!a3)
  {
    int64_t v11 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v10 = a2;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  uint64_t v25 = result;
  int64_t v11 = 0;
  uint64_t v12 = 0;
  int64_t v13 = (unint64_t)(63 - v6) >> 6;
  if (!v8) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v14 = __clz(__rbit64(v8));
  v8 &= v8 - 1;
  unint64_t v15 = v14 | (v11 << 6);
  while (1)
  {
    ++v12;
    uint64_t v19 = *(void *)(a4 + 56) + 40 * v15;
    char v20 = *(unsigned char *)(v19 + 8);
    uint64_t v22 = *(void *)(v19 + 16);
    uint64_t v21 = *(void *)(v19 + 24);
    uint64_t v23 = *(void *)(v19 + 32);
    *(void *)uint64_t v10 = *(void *)v19;
    *(unsigned char *)(v10 + 8) = v20;
    *(void *)(v10 + 16) = v22;
    *(void *)(v10 + 24) = v21;
    *(void *)(v10 + 32) = v23;
    if (v12 == v9)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v10 += 40;
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    if (v8) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v16 = v11 + 1;
    if (__OFADD__(v11, 1)) {
      break;
    }
    if (v16 >= v13) {
      goto LABEL_33;
    }
    unint64_t v17 = *(void *)(v5 + 8 * v16);
    if (!v17)
    {
      v11 += 2;
      if (v16 + 1 >= v13)
      {
        unint64_t v8 = 0;
        int64_t v11 = v16;
      }
      else
      {
        unint64_t v17 = *(void *)(v5 + 8 * v11);
        if (v17) {
          goto LABEL_14;
        }
        int64_t v18 = v16 + 2;
        if (v16 + 2 >= v13) {
          goto LABEL_33;
        }
        unint64_t v17 = *(void *)(v5 + 8 * v18);
        if (v17)
        {
LABEL_17:
          int64_t v16 = v18;
          goto LABEL_18;
        }
        int64_t v11 = v16 + 3;
        if (v16 + 3 < v13)
        {
          unint64_t v17 = *(void *)(v5 + 8 * v11);
          if (v17)
          {
LABEL_14:
            int64_t v16 = v11;
            goto LABEL_18;
          }
          int64_t v18 = v16 + 4;
          if (v16 + 4 >= v13)
          {
LABEL_33:
            unint64_t v8 = 0;
            goto LABEL_37;
          }
          unint64_t v17 = *(void *)(v5 + 8 * v18);
          if (!v17)
          {
            while (1)
            {
              int64_t v16 = v18 + 1;
              if (__OFADD__(v18, 1)) {
                goto LABEL_42;
              }
              if (v16 >= v13)
              {
                unint64_t v8 = 0;
                int64_t v11 = v13 - 1;
                goto LABEL_37;
              }
              unint64_t v17 = *(void *)(v5 + 8 * v16);
              ++v18;
              if (v17) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v8 = 0;
        int64_t v11 = v16 + 2;
      }
LABEL_37:
      uint64_t v9 = v12;
LABEL_38:
      uint64_t v6 = v24;
      uint64_t result = v25;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v8 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v16 << 6);
    int64_t v11 = v16;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_4FDB8(void *result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(a4 + 48) + 40 * v12;
    char v14 = *(unsigned char *)(v13 + 16);
    uint64_t v15 = *(void *)(v13 + 24);
    char v16 = *(unsigned char *)(v13 + 32);
    *(_OWORD *)a2 = *(_OWORD *)v13;
    *(unsigned char *)(a2 + 16) = v14;
    *(void *)(a2 + 24) = v15;
    *(unsigned char *)(a2 + 32) = v16;
    a2 += 40;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v17 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v17 >= v10) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v17);
  if (v18) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v17 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v17;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v8);
  if (v18)
  {
LABEL_15:
    int64_t v17 = v8;
LABEL_19:
    unint64_t v20 = __clz(__rbit64(v18));
    unint64_t v7 = (v18 - 1) & v18;
    unint64_t v12 = v20 + (v17 << 6);
    int64_t v8 = v17;
    goto LABEL_8;
  }
  int64_t v19 = v17 + 2;
  if (v17 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18)
  {
LABEL_18:
    int64_t v17 = v19;
    goto LABEL_19;
  }
  int64_t v8 = v17 + 3;
  if (v17 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v17 + 2;
    goto LABEL_34;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v8);
  if (v18) {
    goto LABEL_15;
  }
  int64_t v19 = v17 + 4;
  if (v17 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v18 = *(void *)(v4 + 8 * v19);
  if (v18) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v17 = v19 + 1;
    if (__OFADD__(v19, 1)) {
      break;
    }
    if (v17 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v18 = *(void *)(v4 + 8 * v17);
    ++v19;
    if (v18) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_4FF70(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    uint64_t v13 = *(void *)(*(void *)(a4 + 56) + 8 * v12);
    *a2 = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    a2[1] = v13;
    a2 += 2;
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v14 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v14 >= v10) {
    goto LABEL_30;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v14);
  if (v15) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v14 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v14;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v8);
  if (v15)
  {
LABEL_15:
    int64_t v14 = v8;
LABEL_19:
    unint64_t v17 = __clz(__rbit64(v15));
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = v17 + (v14 << 6);
    int64_t v8 = v14;
    goto LABEL_8;
  }
  int64_t v16 = v14 + 2;
  if (v14 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
LABEL_18:
    int64_t v14 = v16;
    goto LABEL_19;
  }
  int64_t v8 = v14 + 3;
  if (v14 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v14 + 2;
    goto LABEL_34;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v8);
  if (v15) {
    goto LABEL_15;
  }
  int64_t v16 = v14 + 4;
  if (v14 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v14 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v14 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v16;
    if (v15) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_50114(uint64_t result, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = (void *)result;
  uint64_t v6 = a4 + 64;
  uint64_t v7 = -1 << *(unsigned char *)(a4 + 32);
  if (-v7 < 64) {
    uint64_t v8 = ~(-1 << -(char)v7);
  }
  else {
    uint64_t v8 = -1;
  }
  unint64_t v9 = v8 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v12 = 0;
    uint64_t v10 = 0;
LABEL_39:
    *uint64_t v5 = a4;
    v5[1] = v6;
    uint64_t v5[2] = ~v7;
    v5[3] = v12;
    v5[4] = v9;
    return v10;
  }
  uint64_t v10 = a3;
  if (!a3)
  {
    int64_t v12 = 0;
    goto LABEL_39;
  }
  if (a3 < 0) {
    goto LABEL_41;
  }
  uint64_t v11 = a2;
  int64_t v12 = 0;
  uint64_t v13 = 0;
  int64_t v14 = (unint64_t)(63 - v7) >> 6;
  uint64_t v24 = -1 << *(unsigned char *)(a4 + 32);
  if (!v9) {
    goto LABEL_9;
  }
LABEL_8:
  unint64_t v15 = __clz(__rbit64(v9));
  v9 &= v9 - 1;
  unint64_t v16 = v15 | (v12 << 6);
  while (1)
  {
    ++v13;
    uint64_t v20 = *(void *)(a4 + 56) + 24 * v16;
    int v21 = *(_DWORD *)(v20 + 8);
    char v22 = *(unsigned char *)(v20 + 12);
    uint64_t v23 = *(void *)(v20 + 16);
    *(void *)uint64_t v11 = *(void *)v20;
    *(_DWORD *)(v11 + 8) = v21;
    *(unsigned char *)(v11 + 12) = v22;
    *(void *)(v11 + 16) = v23;
    if (v13 == v10)
    {
      swift_bridgeObjectRetain();
      goto LABEL_38;
    }
    v11 += 24;
    uint64_t result = swift_bridgeObjectRetain();
    if (v9) {
      goto LABEL_8;
    }
LABEL_9:
    int64_t v17 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v17 >= v14) {
      goto LABEL_33;
    }
    unint64_t v18 = *(void *)(v6 + 8 * v17);
    if (!v18)
    {
      v12 += 2;
      if (v17 + 1 >= v14)
      {
        unint64_t v9 = 0;
        int64_t v12 = v17;
      }
      else
      {
        unint64_t v18 = *(void *)(v6 + 8 * v12);
        if (v18) {
          goto LABEL_14;
        }
        int64_t v19 = v17 + 2;
        if (v17 + 2 >= v14) {
          goto LABEL_33;
        }
        unint64_t v18 = *(void *)(v6 + 8 * v19);
        if (v18)
        {
LABEL_17:
          int64_t v17 = v19;
          goto LABEL_18;
        }
        int64_t v12 = v17 + 3;
        if (v17 + 3 < v14)
        {
          unint64_t v18 = *(void *)(v6 + 8 * v12);
          if (v18)
          {
LABEL_14:
            int64_t v17 = v12;
            goto LABEL_18;
          }
          int64_t v19 = v17 + 4;
          if (v17 + 4 >= v14)
          {
LABEL_33:
            unint64_t v9 = 0;
            goto LABEL_37;
          }
          unint64_t v18 = *(void *)(v6 + 8 * v19);
          if (!v18)
          {
            while (1)
            {
              int64_t v17 = v19 + 1;
              if (__OFADD__(v19, 1)) {
                goto LABEL_42;
              }
              if (v17 >= v14)
              {
                unint64_t v9 = 0;
                int64_t v12 = v14 - 1;
                goto LABEL_37;
              }
              unint64_t v18 = *(void *)(v6 + 8 * v17);
              ++v19;
              if (v18) {
                goto LABEL_18;
              }
            }
          }
          goto LABEL_17;
        }
        unint64_t v9 = 0;
        int64_t v12 = v17 + 2;
      }
LABEL_37:
      uint64_t v10 = v13;
LABEL_38:
      uint64_t v7 = v24;
      goto LABEL_39;
    }
LABEL_18:
    unint64_t v9 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v17 << 6);
    int64_t v12 = v17;
  }
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
  return result;
}

void *sub_50334(void *result, unsigned char *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 56;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 56);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(unsigned char *)(*(void *)(a4 + 48) + v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

void *sub_504C8(void *result, void *a2, uint64_t a3, uint64_t a4)
{
  uint64_t v4 = a4 + 64;
  uint64_t v5 = -1;
  uint64_t v6 = -1 << *(unsigned char *)(a4 + 32);
  if (-v6 < 64) {
    uint64_t v5 = ~(-1 << -(char)v6);
  }
  unint64_t v7 = v5 & *(void *)(a4 + 64);
  if (!a2)
  {
    int64_t v8 = 0;
    a3 = 0;
LABEL_35:
    *uint64_t result = a4;
    result[1] = v4;
    result[2] = ~v6;
    result[3] = v8;
    result[4] = v7;
    return (void *)a3;
  }
  if (!a3)
  {
    int64_t v8 = 0;
    goto LABEL_35;
  }
  if (a3 < 0)
  {
LABEL_37:
    __break(1u);
    goto LABEL_38;
  }
  int64_t v8 = 0;
  uint64_t v9 = 0;
  int64_t v10 = (unint64_t)(63 - v6) >> 6;
  while (v7)
  {
    unint64_t v11 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v12 = v11 | (v8 << 6);
LABEL_8:
    ++v9;
    *a2++ = *(void *)(*(void *)(a4 + 48) + 8 * v12);
    if (v9 == a3) {
      goto LABEL_35;
    }
  }
  int64_t v13 = v8 + 1;
  if (__OFADD__(v8, 1))
  {
    __break(1u);
    goto LABEL_37;
  }
  if (v13 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v13);
  if (v14) {
    goto LABEL_19;
  }
  v8 += 2;
  if (v13 + 1 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14)
  {
LABEL_15:
    int64_t v13 = v8;
LABEL_19:
    unint64_t v16 = __clz(__rbit64(v14));
    unint64_t v7 = (v14 - 1) & v14;
    unint64_t v12 = v16 + (v13 << 6);
    int64_t v8 = v13;
    goto LABEL_8;
  }
  int64_t v15 = v13 + 2;
  if (v13 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14)
  {
LABEL_18:
    int64_t v13 = v15;
    goto LABEL_19;
  }
  int64_t v8 = v13 + 3;
  if (v13 + 3 >= v10)
  {
    unint64_t v7 = 0;
    int64_t v8 = v13 + 2;
    goto LABEL_34;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v8);
  if (v14) {
    goto LABEL_15;
  }
  int64_t v15 = v13 + 4;
  if (v13 + 4 >= v10)
  {
LABEL_30:
    unint64_t v7 = 0;
LABEL_34:
    a3 = v9;
    goto LABEL_35;
  }
  unint64_t v14 = *(void *)(v4 + 8 * v15);
  if (v14) {
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v13 = v15 + 1;
    if (__OFADD__(v15, 1)) {
      break;
    }
    if (v13 >= v10)
    {
      unint64_t v7 = 0;
      int64_t v8 = v10 - 1;
      goto LABEL_34;
    }
    unint64_t v14 = *(void *)(v4 + 8 * v13);
    ++v15;
    if (v14) {
      goto LABEL_19;
    }
  }
LABEL_38:
  __break(1u);
  return result;
}

uint64_t sub_5065C(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  BOOL v4 = __OFADD__(a1, a2);
  uint64_t result = a1 + a2;
  if (v4)
  {
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < result || result < v7)
  {
LABEL_10:
    __break(1u);
    JUMPOUT(0x506C8);
  }
  return result;
}

uint64_t sub_506D8(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v4 = 0;
  uint64_t v5 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v5 = (int)a3;
      uint64_t v4 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v5 = *(void *)(a3 + 16);
      uint64_t v4 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v5 = 0;
      uint64_t v4 = BYTE6(a4);
      break;
  }
  if (v4 < a1 || v5 > a1)
  {
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  uint64_t v6 = 0;
  uint64_t v7 = 0;
  switch(a4 >> 62)
  {
    case 1uLL:
      uint64_t v7 = (int)a3;
      uint64_t v6 = a3 >> 32;
      break;
    case 2uLL:
      uint64_t v7 = *(void *)(a3 + 16);
      uint64_t v6 = *(void *)(a3 + 24);
      break;
    case 3uLL:
      break;
    default:
      uint64_t v7 = 0;
      uint64_t v6 = BYTE6(a4);
      break;
  }
  if (v6 < a2 || v7 > a2) {
    goto LABEL_16;
  }
  BOOL v8 = __OFSUB__(a2, a1);
  uint64_t result = a2 - a1;
  if (v8)
  {
LABEL_17:
    __break(1u);
    JUMPOUT(0x507A4);
  }
  return result;
}

uint64_t sub_507C4(uint64_t a1)
{
  return sub_51640(a1, (void (*)(void))sub_55D50, (uint64_t)&type metadata for BookHistory.Feature, (void (*)(char *, void))sub_7244);
}

uint64_t sub_507F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1FBCD0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_7094(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_50890(uint64_t a1)
{
  return sub_51640(a1, (void (*)(void))sub_548BC, (uint64_t)&type metadata for EventType, (void (*)(char *, void))sub_7258);
}

uint64_t sub_508C4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_509B8(uint64_t a1, uint64_t a2, unint64_t a3)
{
  int64_t v4 = a3 >> 1;
  uint64_t result = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1FBCD0();
  uint64_t v12 = result;
  uint64_t v7 = v4 - a2;
  if (v4 == a2) {
    return result;
  }
  if (v4 <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  uint64_t v8 = (Swift::Int *)(a1 + 16 * a2 + 8);
  do
  {
    Swift::Int v9 = *(v8 - 1);
    Swift::Int v10 = *v8;
    swift_bridgeObjectRetain();
    sub_7094(&v11, v9, v10);
    swift_bridgeObjectRelease();
    v8 += 2;
    --v7;
  }
  while (v7);
  return v12;
}

uint64_t sub_50A6C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  uint64_t result = sub_1FBCD0();
  uint64_t v7 = result;
  if (v2)
  {
    int64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v5 = *v4++;
      sub_73A4(&v6, v5);
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t _s20BooksPersonalization14CommonCurrencyO6HeaderV2eeoiySbAE_AEtFZ_0(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1FC5F0(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1FC5F0();
    }
  }
  return result;
}

unint64_t _s20BooksPersonalization25AnyCodableObjectContainerV2eeoiySbAC_ACtFZ_0(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *a2;
  if (*(void *)(*a1 + 16) != *(void *)(*a2 + 16)) {
    return 0;
  }
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_38C28(v4);
  uint64_t v6 = swift_bridgeObjectRetain();
  uint64_t v7 = sub_38C28(v6);
  char v8 = sub_3C42C(v5, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0) {
    return 0;
  }
  uint64_t v9 = v2 + 64;
  uint64_t v10 = 1 << *(unsigned char *)(v2 + 32);
  uint64_t v11 = -1;
  if (v10 < 64) {
    uint64_t v11 = ~(-1 << v10);
  }
  unint64_t v12 = v11 & *(void *)(v2 + 64);
  int64_t v28 = (unint64_t)(v10 + 63) >> 6;
  unint64_t result = swift_bridgeObjectRetain();
  int64_t v14 = 0;
  while (1)
  {
    if (v12)
    {
      unint64_t v15 = __clz(__rbit64(v12));
      v12 &= v12 - 1;
      unint64_t v16 = v15 | (v14 << 6);
      if (!*(void *)(v2 + 16)) {
        break;
      }
      goto LABEL_27;
    }
    int64_t v17 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      goto LABEL_41;
    }
    if (v17 >= v28)
    {
LABEL_36:
      uint64_t v27 = 1;
      goto LABEL_37;
    }
    unint64_t v18 = *(void *)(v9 + 8 * v17);
    ++v14;
    if (!v18)
    {
      int64_t v14 = v17 + 1;
      if (v17 + 1 >= v28) {
        goto LABEL_36;
      }
      unint64_t v18 = *(void *)(v9 + 8 * v14);
      if (!v18)
      {
        int64_t v14 = v17 + 2;
        if (v17 + 2 >= v28) {
          goto LABEL_36;
        }
        unint64_t v18 = *(void *)(v9 + 8 * v14);
        if (!v18)
        {
          int64_t v14 = v17 + 3;
          if (v17 + 3 >= v28) {
            goto LABEL_36;
          }
          unint64_t v18 = *(void *)(v9 + 8 * v14);
          if (!v18)
          {
            int64_t v14 = v17 + 4;
            if (v17 + 4 >= v28) {
              goto LABEL_36;
            }
            unint64_t v18 = *(void *)(v9 + 8 * v14);
            if (!v18)
            {
              int64_t v19 = v17 + 5;
              if (v19 >= v28) {
                goto LABEL_36;
              }
              unint64_t v18 = *(void *)(v9 + 8 * v19);
              if (!v18)
              {
                while (1)
                {
                  int64_t v14 = v19 + 1;
                  if (__OFADD__(v19, 1)) {
                    goto LABEL_42;
                  }
                  if (v14 >= v28) {
                    goto LABEL_36;
                  }
                  unint64_t v18 = *(void *)(v9 + 8 * v14);
                  ++v19;
                  if (v18) {
                    goto LABEL_26;
                  }
                }
              }
              int64_t v14 = v19;
            }
          }
        }
      }
    }
LABEL_26:
    unint64_t v12 = (v18 - 1) & v18;
    unint64_t v16 = __clz(__rbit64(v18)) + (v14 << 6);
    if (!*(void *)(v2 + 16)) {
      break;
    }
LABEL_27:
    uint64_t v20 = (uint64_t *)(*(void *)(v2 + 48) + 16 * v16);
    uint64_t v22 = *v20;
    uint64_t v21 = v20[1];
    swift_bridgeObjectRetain();
    unint64_t result = sub_4C328(v22, v21);
    if ((v23 & 1) == 0) {
      goto LABEL_40;
    }
    sub_5606C(*(void *)(v2 + 56) + 40 * result, (uint64_t)v33, &qword_26D168);
    memset(v32, 0, 40);
    sub_51A64((uint64_t)v33, (uint64_t)v32);
    v35[0] = v32[0];
    v35[1] = v32[1];
    uint64_t v36 = *(void *)&v32[2];
    if (*(void *)(v3 + 16) && (unint64_t v24 = sub_4C328(v22, v21), (v25 & 1) != 0))
    {
      sub_5606C(*(void *)(v3 + 56) + 40 * v24, (uint64_t)v32, &qword_26D168);
    }
    else
    {
      memset(v32, 0, 24);
      *(_OWORD *)((char *)&v32[1] + 8) = xmmword_201AB0;
    }
    unint64_t result = swift_bridgeObjectRelease();
    if (*((void *)&v32[1] + 1) == 1) {
      goto LABEL_43;
    }
    uint64_t v31 = 0;
    long long v29 = 0u;
    long long v30 = 0u;
    sub_51A64((uint64_t)v32, (uint64_t)&v29);
    v33[0] = v29;
    v33[1] = v30;
    uint64_t v34 = v31;
    char v26 = static AnyCodableContainer.== infix(_:_:)((uint64_t)v35, (uint64_t)v33);
    sub_51D78((uint64_t)v33);
    unint64_t result = sub_51D78((uint64_t)v35);
    if ((v26 & 1) == 0)
    {
      uint64_t v27 = 0;
LABEL_37:
      swift_release();
      return v27;
    }
  }
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
LABEL_42:
  __break(1u);
LABEL_43:
  __break(1u);
  return result;
}

char *sub_50EB8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 8 * a1 + 32);
    size_t v6 = 8 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  unint64_t result = (char *)sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_50FA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      sub_12124(&qword_26D5E8);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_510B0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 560 * a1 + 32;
    unint64_t v6 = a3 + 560 * v4;
    if (v5 >= v6 || v5 + 560 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_511A4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_556E4();
  uint64_t result = sub_1FBCD0();
  uint64_t v7 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 32);
    do
    {
      memcpy(__dst, v4, 0x229uLL);
      sub_12384(__dst);
      sub_74A0(__src, __dst);
      memcpy(v6, __src, 0x229uLL);
      sub_124B4(v6);
      v4 += 560;
      --v2;
    }
    while (v2);
    return v7;
  }
  return result;
}

uint64_t _s20BooksPersonalization14CommonCurrencyO19redactedHeaderNamesShySSGvsZ_0(uint64_t a1)
{
  if (qword_26C2E8 != -1) {
    goto LABEL_15;
  }
  for (int64_t i = *(void *)(a1 + 16); i; int64_t i = *(void *)(a1 + 16))
  {
    sub_46588(0, i, 0);
    uint64_t v3 = sub_14D538(a1);
    uint64_t v5 = v4;
    char v7 = v6 & 1;
    while ((v3 & 0x8000000000000000) == 0 && v3 < 1 << *(unsigned char *)(a1 + 32))
    {
      if (((*(void *)(a1 + 56 + (((unint64_t)v3 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v3) & 1) == 0) {
        goto LABEL_13;
      }
      if (*(_DWORD *)(a1 + 36) != v5) {
        goto LABEL_14;
      }
      uint64_t v8 = sub_1FB890();
      uint64_t v10 = v9;
      unint64_t v12 = *((void *)&_swiftEmptyArrayStorage + 2);
      unint64_t v11 = *((void *)&_swiftEmptyArrayStorage + 3);
      if (v12 >= v11 >> 1) {
        sub_46588(v11 > 1, v12 + 1, 1);
      }
      *((void *)&_swiftEmptyArrayStorage + 2) = v12 + 1;
      int64_t v13 = (char *)&_swiftEmptyArrayStorage + 16 * v12;
      *((void *)v13 + 4) = v8;
      *((void *)v13 + 5) = v10;
      uint64_t v14 = sub_14D5DC(v3, v5, v7 & 1, a1);
      uint64_t v3 = v14;
      uint64_t v5 = v15;
      char v7 = v16 & 1;
      if (!--i)
      {
        sub_55F94(v14, v15, v16 & 1);
        swift_bridgeObjectRelease();
        goto LABEL_17;
      }
    }
    __break(1u);
LABEL_13:
    __break(1u);
LABEL_14:
    __break(1u);
LABEL_15:
    swift_once();
  }
  swift_bridgeObjectRelease();
LABEL_17:
  uint64_t v17 = sub_507F8((uint64_t)&_swiftEmptyArrayStorage);
  swift_bridgeObjectRelease();
  qword_26D150 = v17;

  return swift_bridgeObjectRelease();
}

unint64_t sub_51438()
{
  unint64_t result = qword_26D160;
  if (!qword_26D160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D160);
  }
  return result;
}

uint64_t sub_5148C(uint64_t a1)
{
  return sub_5158C(a1, (void (*)(void))sub_5578C, (uint64_t)&type metadata for Methodology, (void (*)(char *, void))sub_7A44);
}

uint64_t sub_514C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_55FA0();
  uint64_t result = sub_1FBCD0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (Swift::Int *)(a1 + 40);
    do
    {
      Swift::Int v5 = *(v4 - 1);
      Swift::Int v6 = *v4;
      swift_bridgeObjectRetain();
      sub_7894(&v7, v5, v6);
      swift_bridgeObjectRelease();
      v4 += 2;
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_51558(uint64_t a1)
{
  return sub_5158C(a1, (void (*)(void))sub_55EE4, (uint64_t)&type metadata for Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.RecommendationMethodology, (void (*)(char *, void))sub_7A58);
}

uint64_t sub_5158C(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_1FBCD0();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_5160C(uint64_t a1)
{
  return sub_51640(a1, (void (*)(void))sub_558A8, (uint64_t)&type metadata for ClusteringOptions.MediaType, (void (*)(char *, void))sub_8054);
}

uint64_t sub_51640(uint64_t a1, void (*a2)(void), uint64_t a3, void (*a4)(char *, void))
{
  uint64_t v6 = *(void *)(a1 + 16);
  a2();
  uint64_t result = sub_1FBCD0();
  uint64_t v11 = result;
  if (v6)
  {
    uint64_t v8 = (unsigned __int8 *)(a1 + 32);
    do
    {
      unsigned int v9 = *v8++;
      a4(&v10, v9);
      --v6;
    }
    while (v6);
    return v11;
  }
  return result;
}

uint64_t sub_516C0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  sub_12124(&qword_26C590);
  sub_55C38();
  uint64_t result = sub_1FBCD0();
  uint64_t v8 = result;
  if (v2)
  {
    uint64_t v4 = (char *)(a1 + 40);
    do
    {
      Swift::UInt64 v5 = *((void *)v4 - 1);
      char v6 = *v4;
      v4 += 16;
      sub_82F0((uint64_t)v7, v5, v6);
      --v2;
    }
    while (v2);
    return v8;
  }
  return result;
}

uint64_t sub_51744(uint64_t a1, uint64_t a2, unint64_t a3)
{
  unint64_t v4 = a3 >> 1;
  uint64_t result = (a3 >> 1) - a2;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t result = sub_1FBCD0();
  uint64_t v12 = result;
  BOOL v7 = __OFSUB__(v4, a2);
  uint64_t v8 = v4 - a2;
  if (!v8) {
    return result;
  }
  if ((v8 < 0) ^ v7 | (v8 == 0))
  {
LABEL_9:
    __break(1u);
    return result;
  }
  unsigned int v9 = (uint64_t *)(a1 + 8 * a2);
  do
  {
    uint64_t v10 = *v9++;
    sub_73A4(&v11, v10);
    --v8;
  }
  while (v8);
  return v12;
}

uint64_t sub_517D0(uint64_t result, uint64_t a2, unint64_t a3)
{
  int64_t v3 = a3 >> 1;
  if (__OFSUB__(a3 >> 1, a2))
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v5 = result;
  sub_556E4();
  uint64_t result = sub_1FBCD0();
  uint64_t v10 = result;
  uint64_t v6 = v3 - a2;
  if (v3 == a2) {
    return result;
  }
  if (v3 <= a2)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  BOOL v7 = (char *)(v5 + 560 * a2);
  do
  {
    memcpy(__dst, v7, 0x229uLL);
    sub_12384(__dst);
    sub_74A0(__src, __dst);
    memcpy(v9, __src, 0x229uLL);
    sub_124B4(v9);
    v7 += 560;
    --v6;
  }
  while (v6);
  return v10;
}

uint64_t sub_518A0(uint64_t result)
{
  unint64_t v1 = *(void *)(result + 16);
  if (v1)
  {
    unint64_t v2 = 0;
    uint64_t v3 = result + 56;
    uint64_t v17 = -(uint64_t)v1;
    uint64_t v15 = result + 56;
    unint64_t v16 = *(void *)(result + 16);
    do
    {
      if (v2 <= v1) {
        unint64_t v4 = v1;
      }
      else {
        unint64_t v4 = v2;
      }
      uint64_t v5 = -(uint64_t)v4;
      for (int64_t i = (uint64_t *)(v3 + 32 * v2++); ; i += 4)
      {
        if (v5 + v2 == 1)
        {
          __break(1u);
          return result;
        }
        uint64_t v7 = *(i - 3);
        uint64_t v8 = *(i - 2);
        uint64_t v9 = *(i - 1);
        uint64_t v10 = *i;
        sub_51438();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!sub_1FBF00()) {
          break;
        }
        swift_bridgeObjectRelease();
        uint64_t result = swift_bridgeObjectRelease();
        ++v2;
        if (v17 + v2 == 1) {
          return (uint64_t)_swiftEmptyArrayStorage;
        }
      }
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        uint64_t result = sub_465D8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      uint64_t v3 = v15;
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      unint64_t v13 = v12 + 1;
      if (v12 >= v11 >> 1)
      {
        uint64_t result = sub_465D8(v11 > 1, v12 + 1, 1);
        unint64_t v13 = v12 + 1;
      }
      _swiftEmptyArrayStorage[2] = v13;
      uint64_t v14 = &_swiftEmptyArrayStorage[4 * v12];
      v14[4] = v7;
      void v14[5] = v8;
      v14[6] = v9;
      v14[7] = v10;
      unint64_t v1 = v16;
    }
    while (v17 + v2);
  }
  return (uint64_t)_swiftEmptyArrayStorage;
}

uint64_t sub_51A64(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D168);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unint64_t sub_51ACC()
{
  unint64_t result = qword_26D188;
  if (!qword_26D188)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D188);
  }
  return result;
}

uint64_t sub_51B20(uint64_t a1, uint64_t a2)
{
  if ((*(_DWORD *)(*(void *)(a2 - 8) + 80) & 0x20000) != 0)
  {
    swift_makeBoxUnique();
    return v2;
  }
  return result;
}

uint64_t sub_51B70(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(void *)(a2 + 32) = *(void *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t *sub_51BD4(uint64_t *a1)
{
  unint64_t v1 = a1;
  if ((*(unsigned char *)(*(void *)(a1[3] - 8) + 82) & 2) != 0)
  {
    *a1 = swift_allocBox();
    return (uint64_t *)v2;
  }
  return v1;
}

uint64_t sub_51C38(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26D190);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_51CB4()
{
  unint64_t result = qword_26D1D8;
  if (!qword_26D1D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D1D8);
  }
  return result;
}

uint64_t sub_51D08(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_26D178);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_51D78(uint64_t a1)
{
  if (*(void *)(a1 + 24)) {
    sub_1264C(a1);
  }
  return a1;
}

uint64_t sub_51DAC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_51EA0(uint64_t result)
{
  if (result < 0)
  {
    __break(1u);
  }
  else
  {
    sub_1FB8E0();
    return sub_1FB970();
  }
  return result;
}

void *sub_51F3C(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    unint64_t v11 = _swiftEmptyArrayStorage;
    uint64_t v3 = &v11;
    sub_465F8(0, v2, 0);
    for (uint64_t i = a1 + 32; ; i += 32)
    {
      sub_5606C(i, (uint64_t)v9, &qword_26D170);
      sub_3A8EC((uint64_t)v9, (uint64_t)v10);
      sub_55F38((uint64_t)v9, &qword_26D170);
      if (v1) {
        break;
      }
      uint64_t v3 = v11;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_465F8(0, v3[2] + 1, 1);
        uint64_t v3 = v11;
      }
      unint64_t v7 = v3[2];
      unint64_t v6 = v3[3];
      if (v7 >= v6 >> 1)
      {
        sub_465F8(v6 > 1, v7 + 1, 1);
        uint64_t v3 = v11;
      }
      v3[2] = v7 + 1;
      sub_55844((uint64_t)v10, (uint64_t)&v3[5 * v7 + 4], &qword_26D168);
      if (!--v2) {
        return v3;
      }
    }
    swift_release();
  }
  return v3;
}

uint64_t sub_52090(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_retain();
  }

  return swift_retain();
}

uint64_t sub_520E8(uint64_t a1, unint64_t a2)
{
  if (a2 >> 62 != 1)
  {
    if (a2 >> 62 != 2) {
      return result;
    }
    swift_release();
  }

  return swift_release();
}

uint64_t sub_52140(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
      uint64_t result = sub_520E8(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_52198()
{
  unint64_t result = qword_26D220;
  if (!qword_26D220)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D220);
  }
  return result;
}

uint64_t sub_521EC@<X0>(void *a1@<X0>, void *a2@<X1>, void *a3@<X8>)
{
  return sub_3EE38(a1, a2, a3);
}

uint64_t sub_5220C@<X0>(uint64_t *a1@<X0>, void *a2@<X8>)
{
  return sub_3F1C4(a1, a2);
}

unint64_t sub_5222C()
{
  unint64_t result = qword_26D250;
  if (!qword_26D250)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D250);
  }
  return result;
}

uint64_t sub_52280(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 152 * a1 + 32;
    unint64_t v6 = a3 + 152 * v4;
    if (v5 >= v6 || v5 + 152 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_52374(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_5246C(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_52564(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 8 * a1 + 32;
    unint64_t v6 = a3 + 8 * v4;
    if (v5 >= v6 || v5 + 8 * v4 <= a3)
    {
      sub_12124(&qword_26C500);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_52670(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      sub_12124(&qword_26D3A0);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_52780(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v3 = *a3;
  uint64_t v4 = *(void *)(*a3 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain_n();
    sub_51438();
    uint64_t v5 = v3 + 56;
    while (1)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!sub_1FBF00()) {
        break;
      }
      v5 += 32;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (!--v4) {
        return swift_bridgeObjectRelease_n();
      }
    }
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    uint64_t result = sub_1FC5C0();
    if (v9)
    {
      if (sub_1FBF10())
      {
        return swift_bridgeObjectRelease();
      }
      else
      {
        sub_52198();
        swift_allocError();
        *(void *)uint64_t v7 = v8;
        *(void *)(v7 + 8) = v9;
        *(unsigned char *)(v7 + 16) = 5;
        return swift_willThrow();
      }
    }
  }
  return result;
}

uint64_t sub_52948(uint64_t result)
{
  if (result) {
    return swift_retain();
  }
  return result;
}

uint64_t sub_52958(uint64_t result)
{
  if (result) {
    return swift_release();
  }
  return result;
}

uint64_t sub_52968()
{
  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_529A0(uint64_t a1)
{
  return sub_40774(a1, *(void **)(v1 + 16));
}

uint64_t sub_529BC@<X0>(uint64_t a1@<X8>)
{
  return sub_407F0(*(void **)(v1 + 16), a1);
}

uint64_t type metadata accessor for DateConfiguration.EncoderInput()
{
  uint64_t result = qword_26D2F8;
  if (!qword_26D2F8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_52A24(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for DateConfiguration.EncoderInput();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_52A84(void *a1)
{
  return sub_40FDC(a1, v1 + 16);
}

uint64_t sub_52AA4()
{
  if (*(void *)(v0 + 16)) {
    swift_release();
  }
  if (*(void *)(v0 + 32)) {
    swift_release();
  }
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 80, 7);
}

uint64_t sub_52B04(uint64_t a1, void *a2)
{
  return sub_412C4(a1, a2, v2 + 16);
}

unint64_t sub_52B24()
{
  unint64_t result = qword_26D258;
  if (!qword_26D258)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D258);
  }
  return result;
}

unint64_t sub_52B7C()
{
  unint64_t result = qword_26D260;
  if (!qword_26D260)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D260);
  }
  return result;
}

unint64_t sub_52BD4()
{
  unint64_t result = qword_26D268;
  if (!qword_26D268)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D268);
  }
  return result;
}

uint64_t sub_52C28(uint64_t a1)
{
  uint64_t result = sub_52CC0(&qword_26D270, &qword_26D1B0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_52C74(uint64_t a1)
{
  uint64_t result = sub_52CC0(&qword_26D278, &qword_26D1A0);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_52CC0(unint64_t *a1, uint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_52D08()
{
  unint64_t result = qword_26D280;
  if (!qword_26D280)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D280);
  }
  return result;
}

void *sub_52D5C()
{
  return &protocol witness table for String;
}

unint64_t sub_52D6C()
{
  unint64_t result = qword_26D288;
  if (!qword_26D288)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D288);
  }
  return result;
}

void *sub_52DC0()
{
  return &protocol witness table for String;
}

void *sub_52DCC()
{
  return &protocol witness table for String;
}

void *sub_52DD8()
{
  return &protocol witness table for Int;
}

void *sub_52DE4()
{
  return &protocol witness table for Double;
}

unint64_t sub_52DF4()
{
  unint64_t result = qword_26D290;
  if (!qword_26D290)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D290);
  }
  return result;
}

unint64_t sub_52E4C()
{
  unint64_t result = qword_26D298;
  if (!qword_26D298)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D298);
  }
  return result;
}

uint64_t sub_52EAC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (v2) {
    uint64_t v3 = *(void *)(a1 + 24);
  }
  else {
    uint64_t v3 = 0;
  }
  *a2 = v2;
  a2[1] = v3;
  return sub_52948(v2);
}

uint64_t sub_52EC4(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  if (*a1) {
    uint64_t v4 = a1[1];
  }
  else {
    uint64_t v4 = 0;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  sub_52948(*a1);
  uint64_t result = sub_52958(v5);
  *(void *)(a2 + 16) = v3;
  *(void *)(a2 + 24) = v4;
  return result;
}

uint64_t dispatch thunk of static APIOperation.id.getter(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 24))();
}

ValueMetadata *type metadata accessor for CommonCurrency()
{
  return &type metadata for CommonCurrency;
}

uint64_t destroy for CommonCurrency.Header()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for CommonCurrency.Header(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for CommonCurrency.Header(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for CommonCurrency.Header(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for CommonCurrency.Header()
{
  return &type metadata for CommonCurrency.Header;
}

ValueMetadata *type metadata accessor for CommonCurrency.Headers()
{
  return &type metadata for CommonCurrency.Headers;
}

uint64_t destroy for AnyCodableContainer(uint64_t result)
{
  if (*(void *)(result + 24)) {
    return sub_1264C(result);
  }
  return result;
}

uint64_t initializeWithCopy for AnyCodableContainer(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  if (v3)
  {
    uint64_t v4 = *(void *)(a2 + 32);
    *(void *)(a1 + 24) = v3;
    *(void *)(a1 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a1);
  }
  else
  {
    long long v5 = *(_OWORD *)(a2 + 16);
    *(_OWORD *)a1 = *(_OWORD *)a2;
    *(_OWORD *)(a1 + 16) = v5;
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
  }
  return a1;
}

uint64_t assignWithCopy for AnyCodableContainer(uint64_t a1, long long *a2)
{
  uint64_t v4 = *((void *)a2 + 3);
  if (!*(void *)(a1 + 24))
  {
    if (v4)
    {
      *(void *)(a1 + 24) = v4;
      *(void *)(a1 + 32) = *((void *)a2 + 4);
      (**(void (***)(uint64_t, long long *))(v4 - 8))(a1, a2);
      return a1;
    }
LABEL_7:
    long long v5 = *a2;
    long long v6 = a2[1];
    *(void *)(a1 + 32) = *((void *)a2 + 4);
    *(_OWORD *)a1 = v5;
    *(_OWORD *)(a1 + 16) = v6;
    return a1;
  }
  if (!v4)
  {
    sub_1264C(a1);
    goto LABEL_7;
  }
  sub_531C8((uint64_t *)a1, (uint64_t *)a2);
  return a1;
}

uint64_t *sub_531C8(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        *uint64_t v3 = v12;
      }
      else
      {
        unint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

__n128 initializeWithTake for AnyCodableContainer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t assignWithTake for AnyCodableContainer(uint64_t a1, uint64_t a2)
{
  if (*(void *)(a1 + 24)) {
    sub_1264C(a1);
  }
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  return a1;
}

uint64_t getEnumTagSinglePayload for AnyCodableContainer(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 40)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 24);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for AnyCodableContainer(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 40) = 0;
    }
    if (a2) {
      *(void *)(result + 24) = a2;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AnyCodableContainer()
{
  return &type metadata for AnyCodableContainer;
}

ValueMetadata *type metadata accessor for AnyCodableObjectContainer()
{
  return &type metadata for AnyCodableObjectContainer;
}

ValueMetadata *type metadata accessor for AnyCodableArrayContainer()
{
  return &type metadata for AnyCodableArrayContainer;
}

uint64_t sub_53540(uint64_t result, unint64_t a2, char a3)
{
  switch(a3)
  {
    case 0:
    case 2:
    case 3:
    case 4:
    case 5:
      __n128 result = swift_bridgeObjectRetain();
      break;
    case 1:
      __n128 result = sub_52090(result, a2);
      break;
    default:
      return result;
  }
  return result;
}

uint64_t destroy for CommonErrorPayload(uint64_t a1)
{
  return sub_52140(*(void *)a1, *(void *)(a1 + 8), *(unsigned char *)(a1 + 16));
}

uint64_t _s20BooksPersonalization18CommonErrorPayloadOwCP_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_53540(*(void *)a2, v4, v5);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t assignWithCopy for CommonErrorPayload(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)a2;
  unint64_t v4 = *(void *)(a2 + 8);
  char v5 = *(unsigned char *)(a2 + 16);
  sub_53540(*(void *)a2, v4, v5);
  uint64_t v6 = *(void *)a1;
  unint64_t v7 = *(void *)(a1 + 8);
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  char v8 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v5;
  sub_52140(v6, v7, v8);
  return a1;
}

__n128 initializeWithTake for CommonErrorPayload(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for CommonErrorPayload(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)a1;
  unint64_t v5 = *(void *)(a1 + 8);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  char v6 = *(unsigned char *)(a1 + 16);
  *(unsigned char *)(a1 + 16) = v3;
  sub_52140(v4, v5, v6);
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonErrorPayload(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFB && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 251);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 5) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonErrorPayload(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFA)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 251;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFB) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_53734(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_5373C(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2;
  return result;
}

ValueMetadata *type metadata accessor for CommonErrorPayload()
{
  return &type metadata for CommonErrorPayload;
}

ValueMetadata *type metadata accessor for APICommonHelpers()
{
  return &type metadata for APICommonHelpers;
}

ValueMetadata *type metadata accessor for DateConfiguration()
{
  return &type metadata for DateConfiguration;
}

ValueMetadata *type metadata accessor for DateConfiguration.DecoderInput()
{
  return &type metadata for DateConfiguration.DecoderInput;
}

uint64_t initializeBufferWithCopyOfBuffer for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  unint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t destroy for DateConfiguration.EncoderInput(uint64_t a1)
{
  uint64_t v2 = sub_1FB0E0();
  unsigned int v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t initializeWithCopy for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t assignWithCopy for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t initializeWithTake for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t assignWithTake for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t getEnumTagSinglePayload for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_53A10);
}

uint64_t sub_53A10(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t storeEnumTagSinglePayload for DateConfiguration.EncoderInput(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_53A90);
}

uint64_t sub_53A90(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  unint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t sub_53B00()
{
  uint64_t result = sub_1FB0E0();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *destroy for ClientConfiguration(void *result)
{
  unint64_t v1 = result;
  if (*result) {
    uint64_t result = (void *)swift_release();
  }
  if (v1[2])
  {
    return (void *)swift_release();
  }
  return result;
}

void *initializeWithCopy for ClientConfiguration(void *a1, void *a2)
{
  if (*a2)
  {
    uint64_t v4 = a2[1];
    *a1 = *a2;
    a1[1] = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = a2[2];
  if (v5)
  {
    uint64_t v6 = a2[3];
    a1[2] = v5;
    a1[3] = v6;
    swift_retain();
  }
  else
  {
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
  }
  return a1;
}

void *assignWithCopy for ClientConfiguration(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
  return a1;
}

void *assignWithTake for ClientConfiguration(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      return a1;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    return a1;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_release();
  return a1;
}

ValueMetadata *type metadata accessor for CommonConfiguration()
{
  return &type metadata for CommonConfiguration;
}

uint64_t destroy for DateConverter(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for DateConverter(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(a2 + 56);
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  *(void *)(a1 + 56) = v7;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DateConverter(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!a1[2])
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      a1[2] = v7;
      a1[3] = v9;
      swift_retain();
      goto LABEL_15;
    }
LABEL_14:
    *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  a1[2] = v7;
  a1[3] = v8;
  swift_retain();
  swift_release();
LABEL_15:
  uint64_t v10 = a2[5];
  a1[4] = a2[4];
  a1[5] = v10;
  swift_retain();
  swift_release();
  uint64_t v11 = a2[7];
  a1[6] = a2[6];
  a1[7] = v11;
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for DateConverter(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (!*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v9 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v9;
      goto LABEL_15;
    }
LABEL_14:
    *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
    goto LABEL_15;
  }
  if (!v7)
  {
    swift_release();
    goto LABEL_14;
  }
  uint64_t v8 = a2[3];
  *(void *)(a1 + 16) = v7;
  *(void *)(a1 + 24) = v8;
  swift_release();
LABEL_15:
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
  swift_release();
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DateConverter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 64)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DateConverter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 56) = 0;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 64) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 64) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DateConverter()
{
  return &type metadata for DateConverter;
}

uint64_t destroy for CommonConverter(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }
  if (a1[6]) {
    swift_release();
  }
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for CommonConverter(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  uint64_t v11 = *(void *)(a2 + 88);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 88) = v11;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for CommonConverter(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (!a1[6])
  {
    if (v13)
    {
      uint64_t v15 = a2[7];
      a1[6] = v13;
      a1[7] = v15;
      swift_retain();
      goto LABEL_29;
    }
LABEL_28:
    *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
    goto LABEL_29;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v14 = a2[7];
  a1[6] = v13;
  a1[7] = v14;
  swift_retain();
  swift_release();
LABEL_29:
  uint64_t v16 = a2[9];
  a1[8] = a2[8];
  a1[9] = v16;
  swift_retain();
  swift_release();
  uint64_t v17 = a2[11];
  a1[10] = a2[10];
  a1[11] = v17;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for CommonConverter(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for CommonConverter(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (!*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v15 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v15;
      goto LABEL_29;
    }
LABEL_28:
    *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
    goto LABEL_29;
  }
  if (!v13)
  {
    swift_release();
    goto LABEL_28;
  }
  uint64_t v14 = a2[7];
  *(void *)(a1 + 48) = v13;
  *(void *)(a1 + 56) = v14;
  swift_release();
LABEL_29:
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
  swift_release();
  *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for CommonConverter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 64);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for CommonConverter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 64) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CommonConverter()
{
  return &type metadata for CommonConverter;
}

ValueMetadata *type metadata accessor for APICommonHelpers.StringKey()
{
  return &type metadata for APICommonHelpers.StringKey;
}

unint64_t sub_54704()
{
  unint64_t result = qword_26D330;
  if (!qword_26D330)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D330);
  }
  return result;
}

unint64_t sub_5475C()
{
  unint64_t result = qword_26D338;
  if (!qword_26D338)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D338);
  }
  return result;
}

unint64_t sub_547B4()
{
  unint64_t result = qword_26D340;
  if (!qword_26D340)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D340);
  }
  return result;
}

uint64_t sub_5480C(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_54820(uint64_t a1, char a2)
{
  if (a2 != -1) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_54834(uint64_t a1)
{
  return a1;
}

unint64_t sub_548BC()
{
  unint64_t result = qword_26D410;
  if (!qword_26D410)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D410);
  }
  return result;
}

uint64_t sub_54910(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + (a1 << 6) + 32;
    unint64_t v6 = a3 + (v4 << 6);
    if (v5 >= v6 || v5 + (v4 << 6) <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_54A04(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_54AFC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

char *sub_54BF4(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 48 * a1 + 32);
    size_t v6 = 48 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_54CE4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 32 * a1 + 32;
    unint64_t v6 = a3 + 32 * v4;
    if (v5 >= v6 || v5 + 32 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

char *sub_54DD8(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  size_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + a1 + 32);
    unint64_t v6 = &__dst[v4];
    if (v5 >= &__dst[v4] || &v5[v4] <= __dst)
    {
      memcpy(__dst, v5, v4);
      return v6;
    }
  }
  uint64_t result = (char *)sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_54EC0(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 48 * a1 + 32;
    unint64_t v6 = a3 + 48 * v4;
    if (v5 >= v6 || v5 + 48 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_54FB4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v8 = *(void *)(sub_12124(&qword_26D588) - 8);
    uint64_t v9 = a4 + ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
    uint64_t v10 = *(void *)(v8 + 72);
    unint64_t v11 = v9 + v10 * a1;
    unint64_t v12 = a3 + v10 * v4;
    if (v11 >= v12 || v11 + v10 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v12;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_55110(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      sub_12124(&qword_26D558);
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_55220(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 16 * a1 + 32;
    unint64_t v6 = a3 + 16 * v4;
    if (v5 >= v6 || v5 + 16 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

char *sub_55310(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = (char *)(a4 + 32 * a1 + 32);
    size_t v6 = 32 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_553FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 80 * a1 + 32;
    unint64_t v6 = a3 + 80 * v4;
    if (v5 >= v6 || v5 + 80 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_554F4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 24 * a1 + 32;
    unint64_t v6 = a3 + 24 * v4;
    if (v5 >= v6 || v5 + 24 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_555EC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 72 * a1 + 32;
    unint64_t v6 = a3 + 72 * v4;
    if (v5 >= v6 || v5 + 72 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

unint64_t sub_556E4()
{
  unint64_t result = qword_26D440;
  if (!qword_26D440)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D440);
  }
  return result;
}

unint64_t sub_55738()
{
  unint64_t result = qword_26D458;
  if (!qword_26D458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D458);
  }
  return result;
}

unint64_t sub_5578C()
{
  unint64_t result = qword_26D4A8;
  if (!qword_26D4A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D4A8);
  }
  return result;
}

uint64_t sub_557E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for AttributeAffinityResult();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_55844(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_12124(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 32))(a2, a1, v5);
  return a2;
}

unint64_t sub_558A8()
{
  unint64_t result = qword_26D570;
  if (!qword_26D570)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D570);
  }
  return result;
}

uint64_t sub_558FC(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4, uint64_t (*a5)(void))
{
  uint64_t v5 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v5 & 0x8000000000000000) == 0)
  {
    uint64_t v9 = *(void *)(a5(0) - 8);
    uint64_t v10 = a4 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v11 = *(void *)(v9 + 72);
    unint64_t v12 = v10 + v11 * a1;
    unint64_t v13 = a3 + v11 * v5;
    if (v12 >= v13 || v12 + v11 * v5 <= a3)
    {
      swift_arrayInitWithCopy();
      return v13;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

char *sub_55A58(uint64_t a1, uint64_t a2, char *__dst, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    uint64_t v5 = (char *)(a4 + 16 * a1 + 32);
    size_t v6 = 16 * v4;
    uint64_t v7 = &__dst[v6];
    if (v5 >= &__dst[v6] || &v5[v6] <= __dst)
    {
      memcpy(__dst, v5, v6);
      return v7;
    }
  }
  uint64_t result = (char *)sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_55B44(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 56 * a1 + 32;
    unint64_t v6 = a3 + 56 * v4;
    if (v5 >= v6 || v5 + 56 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

unint64_t sub_55C38()
{
  unint64_t result = qword_26D598;
  if (!qword_26D598)
  {
    sub_121C4(&qword_26C590);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D598);
  }
  return result;
}

uint64_t sub_55CA4()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

void *sub_55CDC()
{
  unint64_t result = (*(void *(**)(uint64_t *__return_ptr))(v0 + 16))(&v3);
  if (!v1) {
    return (void *)v3;
  }
  return result;
}

uint64_t sub_55D1C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = (*(uint64_t (**)(void))(v1 + 16))();
  if (!v2)
  {
    *a1 = result;
    a1[1] = v5;
  }
  return result;
}

unint64_t sub_55D50()
{
  unint64_t result = qword_26D5C0;
  if (!qword_26D5C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D5C0);
  }
  return result;
}

uint64_t sub_55DA4(uint64_t a1, uint64_t a2, unint64_t a3, uint64_t a4)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
  }
  else if ((v4 & 0x8000000000000000) == 0)
  {
    unint64_t v5 = a4 + 40 * a1 + 32;
    unint64_t v6 = a3 + 40 * v4;
    if (v5 >= v6 || v5 + 40 * v4 <= a3)
    {
      swift_arrayInitWithCopy();
      return v6;
    }
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_55E9C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_55EE4()
{
  unint64_t result = qword_26D628;
  if (!qword_26D628)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D628);
  }
  return result;
}

uint64_t sub_55F38(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = sub_12124(a2);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t sub_55F94(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

unint64_t sub_55FA0()
{
  unint64_t result = qword_26D658;
  if (!qword_26D658)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D658);
  }
  return result;
}

uint64_t sub_55FF4(long long *a1, uint64_t a2)
{
  uint64_t v3 = *((void *)a1 + 3);
  if (v3)
  {
    uint64_t v4 = *((void *)a1 + 4);
    *(void *)(a2 + 24) = v3;
    *(void *)(a2 + 32) = v4;
    (**(void (***)(uint64_t))(v3 - 8))(a2);
  }
  else
  {
    long long v5 = *a1;
    long long v6 = a1[1];
    *(void *)(a2 + 32) = *((void *)a1 + 4);
    *(_OWORD *)a2 = v5;
    *(_OWORD *)(a2 + 16) = v6;
  }
  return a2;
}

uint64_t sub_5606C(uint64_t a1, uint64_t a2, uint64_t *a3)
{
  uint64_t v5 = sub_12124(a3);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

_OWORD *sub_560D0(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[1];
  *a2 = *a1;
  a2[1] = v2;
  return a2;
}

uint64_t sub_560E0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_5613C(uint64_t a1)
{
  return sub_529A0(a1);
}

uint64_t sub_5616C@<X0>(uint64_t a1@<X8>)
{
  return sub_529BC(a1);
}

uint64_t sub_56184(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v22 = a3;
  uint64_t v23 = a4;
  uint64_t v25 = a5;
  uint64_t v26 = a6;
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v12 = *(void *)(*(void *)(a6 + 8) + 8);
  uint64_t v13 = sub_13874C((void (*)(char *, char *))sub_565E0, (uint64_t)v24, a5, (uint64_t)&type metadata for Double, (uint64_t)&type metadata for Never, v12, (uint64_t)&protocol witness table for Never, a8);
  uint64_t v14 = sub_19B7E4(v13);
  char v16 = v15;
  uint64_t v17 = swift_bridgeObjectRelease();
  if ((v16 & 1) != 0 || (v14 & 0x7FFFFFFFFFFFFFFFLL) == 0)
  {
    swift_getAssociatedTypeWitness();
    return sub_1FBB30();
  }
  else
  {
    __chkstk_darwin(v17);
    void v21[2] = a5;
    _OWORD v21[3] = a6;
    v21[4] = a1;
    v21[5] = a2;
    v21[6] = v14;
    v21[7] = v22;
    v21[8] = v23;
    uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
    return sub_13874C((void (*)(char *, char *))sub_56624, (uint64_t)v21, a5, AssociatedTypeWitness, (uint64_t)&type metadata for Never, v12, (uint64_t)&protocol witness table for Never, v19);
  }
}

uint64_t RandomAccessCollection<>.normalized()(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  return sub_56184((uint64_t)sub_56354, 0, (uint64_t)sub_5635C, 0, a1, a2, a7, a8);
}

{
  return sub_56184((uint64_t)sub_5644C, 0, (uint64_t)sub_56454, 0, a1, a2, a7, a8);
}

double sub_56354(uint64_t a1)
{
  return *(double *)(a1 + 72);
}

uint64_t sub_5635C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  char v3 = *(unsigned char *)(a1 + 8);
  uint64_t v4 = *(void *)(a1 + 16);
  char v5 = *(unsigned char *)(a1 + 24);
  uint64_t v6 = *(void *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v9 = *(void *)(a1 + 64);
  *(void *)a2 = *(void *)a1;
  *(unsigned char *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  char v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v8;
  *(void *)(a2 + 56) = v7;
  *(void *)(a2 + 64) = v9;
  *(double *)(a2 + 72) = a3;
  sub_5480C(v6, v10);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t RandomAccessCollection<>.filter(allowNegativeScores:)(uint64_t a1, uint64_t a2)
{
  return sub_564C4(a1, a2);
}

{
  return sub_564C4(a1, a2);
}

BOOL sub_56400(uint64_t a1)
{
  return *(double *)(a1 + 72) >= 0.0;
}

double sub_5644C(uint64_t a1)
{
  return *(double *)(a1 + 32);
}

uint64_t sub_56454@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  uint64_t v3 = *a1;
  char v4 = *((unsigned char *)a1 + 8);
  uint64_t v6 = a1[2];
  uint64_t v5 = a1[3];
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v4;
  *(void *)(a2 + 16) = v6;
  *(void *)(a2 + 24) = v5;
  *(double *)(a2 + 32) = a3;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_564C4(uint64_t a1, uint64_t a2)
{
  char v3 = a1;
  __chkstk_darwin(a1);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))((char *)&v8 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), v6, a2);
  if (v3) {
    return sub_1FBBB0();
  }
  else {
    return sub_1FB9E0();
  }
}

BOOL sub_565D0(uint64_t a1)
{
  return *(double *)(a1 + 32) >= 0.0;
}

double sub_565E0@<D0>(double *a1@<X8>)
{
  double result = fabs((*(double (**)(void))(v1 + 32))());
  *a1 = result;
  return result;
}

uint64_t sub_56624(uint64_t a1)
{
  double v3 = *(double *)(v1 + 48);
  uint64_t v4 = *(uint64_t (**)(uint64_t, double))(v1 + 56);
  double v5 = (*(double (**)(void))(v1 + 32))();
  return v4(a1, v5 / v3);
}

uint64_t ScoredBook.copyWith(score:)@<X0>(uint64_t a1@<X8>, double a2@<D0>)
{
  char v3 = *(unsigned char *)(v2 + 8);
  uint64_t v4 = *(void *)(v2 + 16);
  char v5 = *(unsigned char *)(v2 + 24);
  uint64_t v6 = *(void *)(v2 + 32);
  uint64_t v8 = *(void *)(v2 + 48);
  uint64_t v7 = *(void *)(v2 + 56);
  uint64_t v9 = *(void *)(v2 + 64);
  *(void *)a1 = *(void *)v2;
  *(unsigned char *)(a1 + 8) = v3;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  char v10 = *(unsigned char *)(v2 + 40);
  *(unsigned char *)(a1 + 40) = v10;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v7;
  *(void *)(a1 + 64) = v9;
  *(double *)(a1 + 72) = a2;
  sub_5480C(v6, v10);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t ScoredBook.book.getter@<X0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 8);
  uint64_t v3 = *(void *)(v1 + 16);
  char v4 = *(unsigned char *)(v1 + 24);
  uint64_t v5 = *(void *)(v1 + 32);
  uint64_t v7 = *(void *)(v1 + 48);
  uint64_t v6 = *(void *)(v1 + 56);
  uint64_t v8 = *(void *)(v1 + 64);
  *(void *)a1 = *(void *)v1;
  *(unsigned char *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v3;
  *(unsigned char *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = v5;
  char v9 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v7;
  *(void *)(a1 + 56) = v6;
  *(void *)(a1 + 64) = v8;
  sub_5480C(v5, v9);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

double ScoredBook.score.getter()
{
  return *(double *)(v0 + 72);
}

uint64_t ScoredBook.init(book:score:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  char v3 = *(unsigned char *)(result + 8);
  uint64_t v4 = *(void *)(result + 16);
  char v5 = *(unsigned char *)(result + 24);
  uint64_t v6 = *(void *)(result + 32);
  char v7 = *(unsigned char *)(result + 40);
  uint64_t v8 = *(void *)(result + 48);
  *(void *)a2 = *(void *)result;
  *(unsigned char *)(a2 + 8) = v3;
  *(void *)(a2 + 16) = v4;
  *(unsigned char *)(a2 + 24) = v5;
  *(void *)(a2 + 32) = v6;
  *(unsigned char *)(a2 + 40) = v7;
  *(void *)(a2 + 48) = v8;
  *(_OWORD *)(a2 + 56) = *(_OWORD *)(result + 56);
  *(double *)(a2 + 72) = a3;
  return result;
}

BOOL static Series.Metadata.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int EventType.hashValue.getter()
{
  Swift::UInt v1 = *v0;
  sub_1FC7E0();
  sub_1FC7F0(v1);
  return sub_1FC830();
}

void EventType.hash(into:)()
{
  sub_1FC7F0(*v0);
}

Swift::Int sub_56880()
{
  Swift::UInt v1 = *v0;
  sub_1FC7E0();
  sub_1FC7F0(v1);
  return sub_1FC830();
}

uint64_t sub_568C4()
{
  if (*v0) {
    return 0x65726F6373;
  }
  else {
    return 1802465122;
  }
}

uint64_t sub_568F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_57798(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_5691C(uint64_t a1)
{
  unint64_t v2 = sub_56B80();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_56958(uint64_t a1)
{
  unint64_t v2 = sub_56B80();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ScoredBook.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_26D6C0);
  uint64_t v18 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  char v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  char v7 = *((unsigned char *)v1 + 8);
  uint64_t v8 = v1[2];
  int v16 = *((unsigned __int8 *)v1 + 24);
  uint64_t v15 = v1[4];
  int v14 = *((unsigned __int8 *)v1 + 40);
  long long v13 = *((_OWORD *)v1 + 3);
  uint64_t v12 = v1[8];
  sub_5D64(a1, a1[3]);
  sub_56B80();
  sub_1FC870();
  uint64_t v20 = v6;
  char v21 = v7;
  uint64_t v22 = v8;
  char v23 = v16;
  uint64_t v24 = v15;
  char v25 = v14;
  long long v26 = v13;
  uint64_t v27 = v12;
  char v19 = 0;
  sub_56BD4();
  uint64_t v9 = v17;
  sub_1FC530();
  if (!v9)
  {
    LOBYTE(v20) = 1;
    sub_1FC500();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v18 + 8))(v5, v3);
}

unint64_t sub_56B80()
{
  unint64_t result = qword_26D6C8;
  if (!qword_26D6C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D6C8);
  }
  return result;
}

unint64_t sub_56BD4()
{
  unint64_t result = qword_26D6D0;
  if (!qword_26D6D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D6D0);
  }
  return result;
}

uint64_t ScoredBook.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26D6D8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v18 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_56B80();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v26 = 0;
  sub_56EF8();
  sub_1FC3F0();
  uint64_t v22 = v27;
  int v21 = v28;
  uint64_t v20 = v29;
  int v19 = v30;
  uint64_t v9 = v31;
  uint64_t v10 = v33;
  uint64_t v18 = v34;
  uint64_t v11 = v35;
  LOBYTE(v27) = 1;
  int v23 = v32;
  sub_5480C(v31, v32);
  uint64_t v24 = v11;
  swift_bridgeObjectRetain();
  uint64_t v25 = v10;
  swift_bridgeObjectRetain();
  sub_1FC3C0();
  uint64_t v13 = v12;
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *(void *)a2 = v22;
  *(unsigned char *)(a2 + 8) = v21;
  *(void *)(a2 + 16) = v20;
  *(unsigned char *)(a2 + 24) = v19;
  *(void *)(a2 + 32) = v9;
  char v14 = v23;
  *(unsigned char *)(a2 + 40) = v23;
  uint64_t v15 = v24;
  uint64_t v16 = v18;
  *(void *)(a2 + 48) = v25;
  *(void *)(a2 + 56) = v16;
  *(void *)(a2 + 64) = v15;
  *(void *)(a2 + 72) = v13;
  sub_1264C((uint64_t)a1);
  sub_54820(v9, v14);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_56EF8()
{
  unint64_t result = qword_26D6E0;
  if (!qword_26D6E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D6E0);
  }
  return result;
}

uint64_t sub_56F4C@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ScoredBook.init(from:)(a1, a2);
}

uint64_t sub_56F64(void *a1)
{
  return ScoredBook.encode(to:)(a1);
}

uint64_t destroy for Book(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) != 255) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ScoredBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (v4 == 255)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    *(unsigned char *)(a1 + 40) = v4 & 1;
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ScoredBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = (uint64_t *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      uint64_t v9 = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)uint64_t v5 = v9;
    }
    else
    {
      *(void *)(a1 + 32) = *v6;
      *(unsigned char *)(a1 + 40) = v7 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 255)
  {
    sub_57194(a1 + 32);
    char v8 = *((unsigned char *)v6 + 8);
    *(void *)uint64_t v5 = *v6;
    *(unsigned char *)(v5 + 8) = v8;
  }
  else
  {
    *(void *)(a1 + 32) = *v6;
    *(unsigned char *)(a1 + 40) = v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t sub_57194(uint64_t a1)
{
  return a1;
}

__n128 initializeWithTake for ScoredBook(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v4;
  *(__n128 *)(a1 + 16) = result;
  *(_OWORD *)(a1 + 32) = v3;
  return result;
}

uint64_t assignWithTake for ScoredBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      *(void *)(a1 + 32) = *(void *)v5;
      *(unsigned char *)(a1 + 40) = v6 & 1;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_57194(a1 + 32);
  }
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  return a1;
}

uint64_t getEnumTagSinglePayload for ScoredBook(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 80)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ScoredBook(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 72) = 0;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 80) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 80) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredBook()
{
  return &type metadata for ScoredBook;
}

uint64_t dispatch thunk of BookScorerType.score(_:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_57490(uint64_t a1)
{
  uint64_t v5 = *v1;
  swift_task_dealloc();
  long long v3 = *(uint64_t (**)(uint64_t))(v5 + 8);
  return v3(a1);
}

unsigned char *storeEnumTagSinglePayload for ScoredBook.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x57658);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ScoredBook.CodingKeys()
{
  return &type metadata for ScoredBook.CodingKeys;
}

unint64_t sub_57694()
{
  unint64_t result = qword_26D6F0;
  if (!qword_26D6F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D6F0);
  }
  return result;
}

unint64_t sub_576EC()
{
  unint64_t result = qword_26D6F8;
  if (!qword_26D6F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D6F8);
  }
  return result;
}

unint64_t sub_57744()
{
  unint64_t result = qword_26D700;
  if (!qword_26D700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D700);
  }
  return result;
}

uint64_t sub_57798(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 1802465122 && a2 == 0xE400000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x65726F6373 && a2 == 0xE500000000000000)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t *sub_57874(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v21 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v21 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FB110();
    char v8 = *(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16);
    v8(a1, a2, v7);
    uint64_t v9 = *(int *)(a3 + 20);
    uint64_t v10 = (char *)a1 + v9;
    uint64_t v11 = (char *)a2 + v9;
    v8((uint64_t *)((char *)a1 + v9), (uint64_t *)((char *)a2 + v9), v7);
    uint64_t v12 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
    *(void *)&v10[v12[5]] = *(void *)&v11[v12[5]];
    uint64_t v13 = v12[6];
    char v14 = &v10[v13];
    uint64_t v15 = &v11[v13];
    uint64_t v16 = *((void *)v15 + 1);
    *(void *)char v14 = *(void *)v15;
    *((void *)v14 + 1) = v16;
    uint64_t v17 = v12[7];
    uint64_t v18 = &v10[v17];
    int v19 = &v11[v17];
    uint64_t v20 = *((void *)v19 + 1);
    *(void *)uint64_t v18 = *(void *)v19;
    *((void *)v18 + 1) = v20;
    v10[v12[8]] = v11[v12[8]];
    v10[v12[9]] = v11[v12[9]];
    *(void *)&v10[v12[10]] = *(void *)&v11[v12[10]];
    v10[v12[11]] = v11[v12[11]];
    *(void *)&v10[v12[12]] = *(void *)&v11[v12[12]];
    *(void *)&v10[v12[13]] = *(void *)&v11[v12[13]];
    *(void *)&v10[v12[14]] = *(void *)&v11[v12[14]];
    *(uint64_t *)((char *)a1 + *(int *)(a3 + 24)) = *(uint64_t *)((char *)a2 + *(int *)(a3 + 24));
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_57A28(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  int v5 = *(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8);
  v5(a1, v4);
  v5(a1 + *(int *)(a2 + 20), v4);
  type metadata accessor for SeedBasedRecommendationRequest(0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_57B04(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v9 + v11[5]) = *(void *)(v10 + v11[5]);
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  char v14 = (void *)(v10 + v12);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  uint64_t v16 = v11[7];
  uint64_t v17 = (void *)(v9 + v16);
  uint64_t v18 = (void *)(v10 + v16);
  uint64_t v19 = v18[1];
  *uint64_t v17 = *v18;
  v17[1] = v19;
  *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
  *(unsigned char *)(v9 + v11[9]) = *(unsigned char *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  *(unsigned char *)(v9 + v11[11]) = *(unsigned char *)(v10 + v11[11]);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(void *)(v9 + v11[13]) = *(void *)(v10 + v11[13]);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_57C68(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v9 + v11[5]) = *(void *)(v10 + v11[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  char v14 = (void *)(v10 + v12);
  *uint64_t v13 = *v14;
  v13[1] = v14[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v15 = v11[7];
  uint64_t v16 = (void *)(v9 + v15);
  uint64_t v17 = (void *)(v10 + v15);
  *uint64_t v16 = *v17;
  v16[1] = v17[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
  *(unsigned char *)(v9 + v11[9]) = *(unsigned char *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  *(unsigned char *)(v9 + v11[11]) = *(unsigned char *)(v10 + v11[11]);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v9 + v11[13]) = *(void *)(v10 + v11[13]);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_57E00(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v9 + v11[5]) = *(void *)(v10 + v11[5]);
  *(_OWORD *)(v9 + v11[6]) = *(_OWORD *)(v10 + v11[6]);
  *(_OWORD *)(v9 + v11[7]) = *(_OWORD *)(v10 + v11[7]);
  *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
  *(unsigned char *)(v9 + v11[9]) = *(unsigned char *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  *(unsigned char *)(v9 + v11[11]) = *(unsigned char *)(v10 + v11[11]);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  *(void *)(v9 + v11[13]) = *(void *)(v10 + v11[13]);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_57F34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40);
  v7(a1, a2, v6);
  uint64_t v8 = *(int *)(a3 + 20);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  v7(a1 + v8, a2 + v8, v6);
  uint64_t v11 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v9 + v11[5]) = *(void *)(v10 + v11[5]);
  swift_bridgeObjectRelease();
  uint64_t v12 = v11[6];
  uint64_t v13 = (void *)(v9 + v12);
  char v14 = (uint64_t *)(v10 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = v11[7];
  uint64_t v18 = (void *)(v9 + v17);
  uint64_t v19 = (uint64_t *)(v10 + v17);
  uint64_t v21 = *v19;
  uint64_t v20 = v19[1];
  *uint64_t v18 = v21;
  v18[1] = v20;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v9 + v11[8]) = *(unsigned char *)(v10 + v11[8]);
  *(unsigned char *)(v9 + v11[9]) = *(unsigned char *)(v10 + v11[9]);
  *(void *)(v9 + v11[10]) = *(void *)(v10 + v11[10]);
  *(unsigned char *)(v9 + v11[11]) = *(unsigned char *)(v10 + v11[11]);
  *(void *)(v9 + v11[12]) = *(void *)(v10 + v11[12]);
  swift_bridgeObjectRelease();
  *(void *)(v9 + v11[13]) = *(void *)(v10 + v11[13]);
  *(void *)(v9 + v11[14]) = *(void *)(v10 + v11[14]);
  *(void *)(a1 + *(int *)(a3 + 24)) = *(void *)(a2 + *(int *)(a3 + 24));
  return a1;
}

uint64_t sub_5809C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_580B0);
}

uint64_t sub_580B0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    uint64_t v10 = type metadata accessor for SeedBasedRecommendationRequest(0);
    uint64_t v11 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 48);
    uint64_t v12 = v10;
    uint64_t v13 = a1 + *(int *)(a3 + 20);
    return v11(v13, a2, v12);
  }
}

uint64_t sub_581A8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_581BC);
}

uint64_t sub_581BC(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v8 = sub_1FB110();
  uint64_t v9 = *(void *)(v8 - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    uint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, v8);
  }
  else
  {
    uint64_t v12 = type metadata accessor for SeedBasedRecommendationRequest(0);
    uint64_t v13 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 56);
    uint64_t v14 = v12;
    uint64_t v15 = a1 + *(int *)(a4 + 20);
    return v13(v15, a2, a2, v14);
  }
}

uint64_t type metadata accessor for SeedBookRecommendationWork()
{
  uint64_t result = qword_26D760;
  if (!qword_26D760) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_5830C()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    uint64_t result = type metadata accessor for SeedBasedRecommendationRequest(319);
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t sub_583E0()
{
  return sub_5BC14(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
}

void *sub_58428(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_46538(0, v1, 0);
  uint64_t result = (void *)sub_14D538(a1);
  uint64_t v4 = (uint64_t)result;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_14;
    }
    uint64_t v9 = *(void *)(*(void *)(a1 + 48) + 560 * v4);
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    unint64_t v10 = _swiftEmptyArrayStorage[3];
    if (v11 >= v10 >> 1) {
      sub_46538(v10 > 1, v11 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v11 + 1;
    _swiftEmptyArrayStorage[v11 + 4] = v9;
    uint64_t result = (void *)sub_14D5DC(v4, v6, v8 & 1, a1);
    uint64_t v4 = (uint64_t)result;
    uint64_t v6 = v12;
    char v8 = v13 & 1;
    if (!--v1)
    {
      sub_55F94((uint64_t)result, v12, v13 & 1);
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

uint64_t sub_58598()
{
  return swift_retain();
}

uint64_t sub_585A0@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v6 = sub_1FB5C0();
  uint64_t v261 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  v260 = (char *)&v248 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  v259 = (char *)&v248 - v9;
  uint64_t v10 = sub_1FB5F0();
  uint64_t v11 = __chkstk_darwin(v10);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v16 = a1[48];
  if (!v16)
  {
    sub_5FD2C();
    swift_allocError();
    char v42 = 0;
LABEL_145:
    *unint64_t v41 = v42;
    return swift_willThrow();
  }
  unint64_t v286 = v3;
  v256 = (char *)&v248 - v13;
  uint64_t v257 = v15;
  uint64_t v258 = v12;
  uint64_t v251 = v6;
  v252 = a2;
  uint64_t v17 = a1[45];
  uint64_t v279 = a1[46];
  uint64_t v280 = v17;
  uint64_t v18 = a1[47];
  uint64_t v271 = v14;
  uint64_t v272 = v18;
  uint64_t v19 = a1[52];
  uint64_t v250 = a1[53];
  int64_t v21 = a1[50];
  uint64_t v20 = a1[51];
  uint64_t v266 = a1[49];
  uint64_t v267 = v20;
  uint64_t v22 = qword_26C388;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v269 = v19;
  swift_bridgeObjectRetain();
  if (v22 != -1) {
    goto LABEL_222;
  }
  while (1)
  {
    id v23 = (id)qword_272B68;
    LODWORD(v285) = sub_1FBD90();
    sub_12124(&qword_26D7F0);
    uint64_t v24 = swift_allocObject();
    *(_OWORD *)(v24 + 16) = xmmword_202680;
    sub_1FB110();
    sub_5BC14((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v25 = sub_1FC580();
    uint64_t v27 = v26;
    *(void *)(v24 + 56) = &type metadata for String;
    unint64_t v28 = sub_5FD80();
    *(void *)(v24 + 32) = v25;
    *(void *)(v24 + 40) = v27;
    *(void *)(v24 + 96) = &type metadata for String;
    *(void *)(v24 + 104) = v28;
    uint64_t v29 = v272;
    *(void *)(v24 + 64) = v28;
    *(void *)(v24 + 72) = v29;
    *(void *)(v24 + 80) = v16;
    *(void *)(v24 + 136) = &type metadata for String;
    *(void *)(v24 + 144) = v28;
    *(void *)(v24 + 112) = v266;
    *(void *)(v24 + 120) = v21;
    *(void *)(v24 + 176) = &type metadata for String;
    *(void *)(v24 + 184) = v28;
    uint64_t v30 = v269;
    *(void *)(v24 + 152) = v267;
    *(void *)(v24 + 160) = v30;
    int64_t v268 = v21;
    swift_bridgeObjectRetain();
    uint64_t v263 = v16;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1FB400();

    swift_bridgeObjectRelease();
    uint64_t v31 = type metadata accessor for SeedBookRecommendationWork();
    uint64_t v32 = v2 + *(int *)(v31 + 20);
    uint64_t v262 = type metadata accessor for SeedBasedRecommendationRequest(0);
    uint64_t v270 = v32;
    uint64_t v33 = swift_bridgeObjectRetain();
    unint64_t v34 = v286;
    sub_5EC0C(v33);
    int64_t v21 = v34;
    uint64_t v35 = swift_bridgeObjectRetain();
    uint64_t v36 = sub_4AD80(v35);
    swift_release();
    v290[0] = (uint64_t)v36;
    sub_5BCB4(v290, sub_12473C, sub_5BD38);
    unint64_t v265 = v34;
    if (v34) {
      goto LABEL_234;
    }
    swift_release();
    uint64_t v37 = *(int *)(v31 + 24);
    uint64_t v38 = *(void *)(v2 + v37);
    if (v38)
    {
      unint64_t v39 = v265;
      unint64_t v40 = sub_19AC88(0, *(void *)(v290[0] + 16), v38, *(void *)(v2 + v37), v290[0]);
      unint64_t v265 = v39;
    }
    else
    {
      sub_12124(&qword_26D4E8);
      unint64_t v40 = (void *)swift_allocObject();
      *((_OWORD *)v40 + 1) = xmmword_1FD2A0;
      v40[4] = _swiftEmptyArrayStorage;
      v40[5] = &_swiftEmptyArrayStorage[4];
      *((_OWORD *)v40 + 3) = xmmword_202690;
    }
    swift_release();
    if (!v40[2])
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_5FD2C();
      swift_allocError();
      char v42 = 1;
      goto LABEL_145;
    }
    uint64_t v43 = v40[4];
    uint64_t v283 = v40[5];
    uint64_t v44 = v40[6];
    unint64_t v45 = v40[7];
    uint64_t v249 = v43;
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v248 = v45;
    uint64_t v253 = v44;
    uint64_t v282 = v45 >> 1;
    BOOL v46 = __OFSUB__(v45 >> 1, v44);
    uint64_t v16 = (v45 >> 1) - v44;
    if (v46)
    {
      __break(1u);
LABEL_224:
      __break(1u);
      goto LABEL_225;
    }
    uint64_t v278 = v16;
    if (!v16)
    {
      v277 = _swiftEmptyArrayStorage;
      goto LABEL_148;
    }
    v289[0] = _swiftEmptyArrayStorage;
    unint64_t v40 = v289;
    sub_466D8(0, v16 & ~(v16 >> 63), 0);
    if (v16 < 0) {
      goto LABEL_224;
    }
    uint64_t v47 = 0;
    char v48 = (void *)v289[0];
    uint64_t v255 = -v280;
    uint64_t v254 = -v279;
    long long v285 = xmmword_1FD2A0;
    uint64_t v49 = 1;
    uint64_t v2 = v253;
    long long v264 = xmmword_2026A0;
    while (1)
    {
      uint64_t v50 = v49;
      if (v2 >= v282 || v47 >= v16) {
        goto LABEL_217;
      }
      v277 = v48;
      memcpy(v290, (const void *)(v283 + 560 * v2), 0x229uLL);
      uint64_t v52 = v290[2];
      uint64_t v51 = v290[3];
      uint64_t v275 = v2;
      uint64_t v273 = v50;
      if (LOBYTE(v290[1]) == 1)
      {
        sub_12384(v290);
        swift_bridgeObjectRelease();
        int v53 = 1;
      }
      else
      {
        char v54 = sub_1FC5F0();
        sub_12384(v290);
        swift_bridgeObjectRelease();
        int v53 = v54 & 1;
      }
      LODWORD(v274) = v53;
      uint64_t v276 = v51;
      uint64_t v55 = *(void *)(v52 + 16);
      if (v55) {
        break;
      }
      int64_t v21 = (int64_t)_swiftEmptyArrayStorage;
LABEL_52:
      uint64_t v74 = *(void *)(v21 + 16);
      uint64_t v75 = sub_1FBCD0();
      uint64_t v76 = (void *)v75;
      if (v74)
      {
        uint64_t v77 = 0;
        uint64_t v78 = v75 + 56;
        while (1)
        {
          uint64_t v79 = *(void *)(v21 + 32 + 8 * v77++);
          uint64_t v80 = sub_1FC7D0();
          uint64_t v81 = -1 << *((unsigned char *)v76 + 32);
          unint64_t v82 = v80 & ~v81;
          if (((*(void *)(v78 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82) & 1) == 0) {
            goto LABEL_61;
          }
          uint64_t v83 = v76[6];
          if (*(void *)(v83 + 8 * v82) == v79)
          {
LABEL_54:
            if (v77 == v74) {
              break;
            }
          }
          else
          {
            uint64_t v84 = ~v81;
            while (1)
            {
              unint64_t v82 = (v82 + 1) & v84;
              if (((*(void *)(v78 + ((v82 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v82) & 1) == 0) {
                break;
              }
              if (*(void *)(v83 + 8 * v82) == v79) {
                goto LABEL_54;
              }
            }
LABEL_61:
            char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            v288 = v76;
            sub_C020(v79, v82, isUniquelyReferenced_nonNull_native);
            uint64_t v76 = v288;
            swift_bridgeObjectRelease();
            if (v77 == v74) {
              break;
            }
            uint64_t v78 = (uint64_t)(v76 + 7);
          }
        }
      }
      swift_bridgeObjectRelease();
      int64_t v21 = v76[2];
      if (v21)
      {
        v288 = _swiftEmptyArrayStorage;
        sub_46588(0, v21, 0);
        uint64_t v2 = (uint64_t)v288;
        uint64_t v16 = sub_14D538(v76);
        uint64_t v87 = v86;
        int v89 = v88 & 1;
        v284 = (char *)(v76 + 7);
        do
        {
          if (v16 < 0 || v16 >= 1 << *((unsigned char *)v76 + 32)) {
            goto LABEL_203;
          }
          if (((*(void *)&v284[((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v16) & 1) == 0) {
            goto LABEL_204;
          }
          if (*((_DWORD *)v76 + 9) != v87) {
            goto LABEL_205;
          }
          LODWORD(v286) = v89;
          uint64_t v287 = *(void *)(v76[6] + 8 * v16);
          uint64_t v90 = sub_1FC580();
          uint64_t v92 = v91;
          v288 = (void *)v2;
          unint64_t v93 = *(void *)(v2 + 16);
          unint64_t v94 = *(void *)(v2 + 24);
          if (v93 >= v94 >> 1)
          {
            uint64_t v281 = v90;
            sub_46588(v94 > 1, v93 + 1, 1);
            uint64_t v90 = v281;
            uint64_t v2 = (uint64_t)v288;
          }
          *(void *)(v2 + 16) = v93 + 1;
          uint64_t v95 = v2 + 16 * v93;
          *(void *)(v95 + 32) = v90;
          *(void *)(v95 + 40) = v92;
          uint64_t v96 = sub_14D5DC(v16, v87, v286 & 1, v76);
          uint64_t v16 = v96;
          uint64_t v87 = v97;
          int v89 = v98 & 1;
          --v21;
        }
        while (v21);
        sub_55F94(v96, v97, v89);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
      }
      uint64_t v281 = v2;
      uint64_t v99 = v276;
      int64_t v100 = *(void *)(v276 + 16);
      if (v100)
      {
        v288 = _swiftEmptyArrayStorage;
        swift_bridgeObjectRetain();
        sub_46588(0, v100, 0);
        uint64_t v2 = (uint64_t)v288;
        uint64_t v16 = sub_14D538(v99);
        uint64_t v102 = v101;
        int v104 = v103 & 1;
        v284 = (char *)(v99 + 56);
        do
        {
          if (v16 < 0 || v16 >= 1 << *(unsigned char *)(v99 + 32)) {
            goto LABEL_206;
          }
          if (((*(void *)&v284[((unint64_t)v16 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v16) & 1) == 0) {
            goto LABEL_207;
          }
          if (*(_DWORD *)(v99 + 36) != v102) {
            goto LABEL_208;
          }
          LODWORD(v286) = v104;
          uint64_t v287 = *(void *)(*(void *)(v99 + 48) + 8 * v16);
          uint64_t v105 = sub_1FC580();
          uint64_t v107 = v106;
          v288 = (void *)v2;
          unint64_t v108 = *(void *)(v2 + 16);
          unint64_t v109 = *(void *)(v2 + 24);
          int64_t v21 = v108 + 1;
          if (v108 >= v109 >> 1)
          {
            uint64_t v276 = v105;
            sub_46588(v109 > 1, v108 + 1, 1);
            uint64_t v105 = v276;
            uint64_t v2 = (uint64_t)v288;
          }
          *(void *)(v2 + 16) = v21;
          uint64_t v110 = v2 + 16 * v108;
          *(void *)(v110 + 32) = v105;
          *(void *)(v110 + 40) = v107;
          uint64_t v111 = sub_14D5DC(v16, v102, v286 & 1, v99);
          uint64_t v16 = v111;
          uint64_t v102 = v112;
          int v104 = v113 & 1;
          --v100;
        }
        while (v100);
        unint64_t v286 = v2;
        sub_55F94(v111, v112, v104);
        swift_bridgeObjectRelease();
      }
      else
      {
        unint64_t v286 = (unint64_t)_swiftEmptyArrayStorage;
      }
      v288 = (void *)v290[0];
      uint64_t v114 = sub_1FC580();
      int64_t v21 = v115;
      uint64_t v16 = v280;
      if (v280 >= *(void *)(v281 + 16))
      {
        v118 = (void *)swift_bridgeObjectRetain();
      }
      else
      {
        v288 = (void *)v281;
        swift_bridgeObjectRetain();
        uint64_t v2 = (uint64_t)&v288;
        sub_124560();
        if (v16 < 0) {
          goto LABEL_220;
        }
        uint64_t v116 = (uint64_t)v288;
        if (v16)
        {
          if (v288[2] >= (unint64_t)v16) {
            uint64_t v117 = v16;
          }
          else {
            uint64_t v117 = v288[2];
          }
        }
        else
        {
          uint64_t v117 = 0;
        }
        int64_t v119 = v21;
        sub_1FC730();
        swift_unknownObjectRetain_n();
        v120 = (void *)swift_dynamicCastClass();
        if (!v120)
        {
          swift_release();
          v120 = _swiftEmptyArrayStorage;
        }
        uint64_t v121 = v120[2];
        swift_release();
        if (v121 == v117)
        {
          v118 = (void *)swift_dynamicCastClass();
          swift_release();
          int64_t v21 = v119;
          if (!v118)
          {
            swift_release();
            v118 = _swiftEmptyArrayStorage;
          }
        }
        else
        {
          swift_release();
          v118 = sub_4AE7C(v116, v116 + 32, 0, (2 * v117) | 1);
          swift_release();
          int64_t v21 = v119;
        }
      }
      uint64_t v122 = v118[2];
      unint64_t v123 = v280 - v122;
      if (v280 == v122)
      {
        swift_bridgeObjectRelease();
        goto LABEL_110;
      }
      if (v280 - v122 < 0) {
        goto LABEL_233;
      }
      uint64_t v124 = sub_1FBB40();
      *(void *)(v124 + 16) = v123;
      v125 = (void *)(v124 + 32);
      if (v123 >= 4)
      {
        unint64_t v126 = v123 & 0xFFFFFFFFFFFFFFFCLL;
        v125 += 2 * (v123 & 0xFFFFFFFFFFFFFFFCLL);
        v127 = (long long *)(v124 + 64);
        unint64_t v128 = v123 & 0xFFFFFFFFFFFFFFFCLL;
        long long v129 = v264;
        do
        {
          *(v127 - 2) = v129;
          *(v127 - 1) = v129;
          long long *v127 = v129;
          v127[1] = v129;
          v127 += 4;
          v128 -= 4;
        }
        while (v128);
        if (v123 == v126) {
          goto LABEL_109;
        }
      }
      else
      {
        unint64_t v126 = 0;
      }
      uint64_t v130 = v255 + v126 + v122;
      do
      {
        void *v125 = 0;
        v125[1] = 0xE000000000000000;
        v125 += 2;
        BOOL v67 = __CFADD__(v130++, 1);
      }
      while (!v67);
LABEL_109:
      v288 = v118;
      sub_A990C(v124);
      swift_bridgeObjectRelease();
      v118 = v288;
LABEL_110:
      uint64_t v16 = v279;
      if (v279 >= *(void *)(v286 + 16))
      {
        v133 = (void *)swift_bridgeObjectRetain();
      }
      else
      {
        v288 = (void *)v286;
        swift_bridgeObjectRetain();
        uint64_t v2 = (uint64_t)&v288;
        sub_124560();
        if (v16 < 0) {
          goto LABEL_221;
        }
        uint64_t v131 = (uint64_t)v288;
        if (v16)
        {
          if (v288[2] >= (unint64_t)v16) {
            uint64_t v132 = v16;
          }
          else {
            uint64_t v132 = v288[2];
          }
        }
        else
        {
          uint64_t v132 = 0;
        }
        int64_t v134 = v21;
        sub_1FC730();
        swift_unknownObjectRetain_n();
        v135 = (void *)swift_dynamicCastClass();
        if (!v135)
        {
          swift_release();
          v135 = _swiftEmptyArrayStorage;
        }
        uint64_t v136 = v135[2];
        swift_release();
        if (v136 == v132)
        {
          v133 = (void *)swift_dynamicCastClass();
          swift_release();
          int64_t v21 = v134;
          if (!v133)
          {
            swift_release();
            v133 = _swiftEmptyArrayStorage;
          }
        }
        else
        {
          swift_release();
          v133 = sub_4AE7C(v131, v131 + 32, 0, (2 * v132) | 1);
          swift_release();
          int64_t v21 = v134;
        }
      }
      uint64_t v137 = v133[2];
      unint64_t v138 = v279 - v137;
      if (v279 == v137)
      {
        swift_bridgeObjectRelease();
        sub_124B4(v290);
        goto LABEL_135;
      }
      if (v279 - v137 < 0) {
        goto LABEL_233;
      }
      uint64_t v139 = sub_1FBB40();
      *(void *)(v139 + 16) = v138;
      v140 = (void *)(v139 + 32);
      if (v138 >= 4)
      {
        unint64_t v141 = v138 & 0xFFFFFFFFFFFFFFFCLL;
        v140 += 2 * (v138 & 0xFFFFFFFFFFFFFFFCLL);
        v142 = (long long *)(v139 + 64);
        unint64_t v143 = v138 & 0xFFFFFFFFFFFFFFFCLL;
        long long v144 = v264;
        do
        {
          *(v142 - 2) = v144;
          *(v142 - 1) = v144;
          long long *v142 = v144;
          v142[1] = v144;
          v142 += 4;
          v143 -= 4;
        }
        while (v143);
        if (v138 == v141) {
          goto LABEL_134;
        }
      }
      else
      {
        unint64_t v141 = 0;
      }
      uint64_t v145 = v254 + v141 + v137;
      do
      {
        void *v140 = 0;
        v140[1] = 0xE000000000000000;
        v140 += 2;
        BOOL v67 = __CFADD__(v145++, 1);
      }
      while (!v67);
LABEL_134:
      v288 = v133;
      sub_A990C(v139);
      swift_bridgeObjectRelease();
      sub_124B4(v290);
      v133 = v288;
LABEL_135:
      char v48 = v277;
      v289[0] = v277;
      unint64_t v147 = v277[2];
      unint64_t v146 = v277[3];
      uint64_t v16 = v147 + 1;
      if (v147 >= v146 >> 1)
      {
        sub_466D8(v146 > 1, v147 + 1, 1);
        char v48 = (void *)v289[0];
      }
      v48[2] = v16;
      v148 = &v48[5 * v147];
      v148[4] = v114;
      v148[5] = v21;
      *((_DWORD *)v148 + 12) = v274;
      v148[7] = v118;
      v148[8] = v133;
      uint64_t v2 = v275 + 1;
      if (__OFADD__(v275, 1)) {
        goto LABEL_218;
      }
      uint64_t v16 = v278;
      if (v273 == v278)
      {
        v277 = v48;
LABEL_148:
        sub_12124(&qword_26D800);
        uint64_t v150 = sub_12124(&qword_26D808);
        uint64_t v151 = *(void *)(*(void *)(v150 - 8) + 72);
        unint64_t v152 = (*(unsigned __int8 *)(*(void *)(v150 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v150 - 8) + 80);
        uint64_t v153 = swift_allocObject();
        *(_OWORD *)(v153 + 16) = xmmword_2026B0;
        uint64_t v254 = v153;
        v154 = (void *)(v153 + v152);
        uint64_t v155 = v153 + v152 + *(int *)(v150 + 48);
        void *v154 = 0xD000000000000020;
        v154[1] = 0x8000000000217390;
        uint64_t v156 = v262;
        uint64_t v157 = v270;
        sub_125B0C(v155);
        v158 = (void *)((char *)v154 + v151);
        void *v158 = 0xD000000000000020;
        v158[1] = 0x80000000002173C0;
        uint64_t v159 = *(int *)(v150 + 48);
        uint64_t v255 = v150;
        sub_125B0C((uint64_t)v154 + v151 + v159);
        swift_bridgeObjectRelease();
        uint64_t v280 = 2 * v151;
        v160 = (void *)((char *)v154 + 2 * v151);
        void *v160 = 0xD000000000000027;
        v160[1] = 0x80000000002173F0;
        uint64_t v279 = sub_12124(&qword_26D378);
        uint64_t v161 = swift_allocObject();
        long long v264 = xmmword_1FD2A0;
        *(_OWORD *)(v161 + 16) = xmmword_1FD2A0;
        *(_DWORD *)(v161 + 32) = *(unsigned __int8 *)(v157 + *(int *)(v156 + 36));
        v162 = v256;
        sub_1FB5E0();
        swift_bridgeObjectRetain();
        sub_1FB5D0();
        sub_1FB540();
        uint64_t v163 = v271;
        v164 = *(void (**)(uint64_t, char *, uint64_t))(v271 + 16);
        uint64_t v165 = v258;
        unint64_t v286 = v271 + 16;
        *(void *)&long long v285 = v164;
        v164(v257, v162, v258);
        sub_1FB520();
        v166 = *(char **)(v163 + 8);
        uint64_t v271 = v163 + 8;
        v284 = v166;
        ((void (*)(char *, uint64_t))v166)(v162, v165);
        swift_bridgeObjectRelease();
        uint64_t v167 = v280 + v151;
        uint64_t v280 = (uint64_t)v154;
        uint64_t v281 = v151;
        unint64_t v40 = (void *)((char *)v154 + v167);
        uint64_t v25 = v279;
        *unint64_t v40 = 0xD000000000000023;
        v40[1] = 0x8000000000217420;
        uint64_t v168 = swift_allocObject();
        *(_OWORD *)(v168 + 16) = v264;
        uint64_t v169 = *(void *)(v270 + *(int *)(v262 + 40));
        if (v169 >= (uint64_t)0xFFFFFFFF80000000)
        {
          if (v169 <= 0x7FFFFFFF)
          {
            *(_DWORD *)(v168 + 32) = v169;
            v170 = v256;
            sub_1FB5E0();
            swift_bridgeObjectRetain();
            sub_1FB5D0();
            sub_1FB540();
            uint64_t v171 = v257;
            uint64_t v172 = v258;
            ((void (*)(uint64_t, char *, uint64_t))v285)(v257, v170, v258);
            sub_1FB520();
            ((void (*)(char *, uint64_t))v284)(v170, v172);
            swift_bridgeObjectRelease();
            uint64_t v276 = 4 * v281;
            v173 = (void *)(v280 + 4 * v281);
            void *v173 = 0xD000000000000026;
            v173[1] = 0x8000000000217450;
            uint64_t v174 = swift_allocObject();
            *(_OWORD *)(v174 + 16) = v264;
            uint64_t v25 = v262;
            int64_t v21 = v270;
            *(_DWORD *)(v174 + 32) = *(unsigned __int8 *)(v270 + *(int *)(v262 + 44));
            sub_1FB5E0();
            swift_bridgeObjectRetain();
            sub_1FB5D0();
            sub_1FB540();
            ((void (*)(uint64_t, char *, uint64_t))v285)(v171, v170, v172);
            sub_1FB520();
            ((void (*)(char *, uint64_t))v284)(v170, v172);
            swift_bridgeObjectRelease();
            v175 = (void *)(v280 + v276 + v281);
            void *v175 = 0xD000000000000027;
            v175[1] = 0x8000000000217480;
            uint64_t v16 = *(void *)(v21 + *(int *)(v25 + 48));
            int64_t v176 = *(void *)(v16 + 16);
            uint64_t v2 = (uint64_t)_swiftEmptyArrayStorage;
            if (v176)
            {
              uint64_t v279 = (uint64_t)v175;
              v290[0] = (uint64_t)_swiftEmptyArrayStorage;
              swift_bridgeObjectRetain();
              sub_46588(0, v176, 0);
              uint64_t v2 = v290[0];
              uint64_t v177 = sub_14D538(v16);
              uint64_t v25 = v178;
              int v180 = v179 & 1;
              v284 = (char *)(v16 + 56);
              do
              {
                if (v177 < 0 || v177 >= 1 << *(unsigned char *)(v16 + 32)) {
                  goto LABEL_211;
                }
                if (((*(void *)&v284[((unint64_t)v177 >> 3) & 0x1FFFFFFFFFFFFFF8] >> v177) & 1) == 0) {
                  goto LABEL_212;
                }
                if (*(_DWORD *)(v16 + 36) != v25) {
                  goto LABEL_213;
                }
                LODWORD(v285) = v180;
                unint64_t v286 = v176;
                v289[0] = *(void *)(*(void *)(v16 + 48) + 8 * v177);
                uint64_t v181 = sub_1FC580();
                int64_t v21 = v182;
                v290[0] = v2;
                unint64_t v184 = *(void *)(v2 + 16);
                unint64_t v183 = *(void *)(v2 + 24);
                if (v184 >= v183 >> 1)
                {
                  sub_46588(v183 > 1, v184 + 1, 1);
                  uint64_t v2 = v290[0];
                }
                *(void *)(v2 + 16) = v184 + 1;
                uint64_t v185 = v2 + 16 * v184;
                *(void *)(v185 + 32) = v181;
                *(void *)(v185 + 40) = v21;
                uint64_t v186 = sub_14D5DC(v177, v25, v285 & 1, v16);
                uint64_t v177 = v186;
                uint64_t v25 = v187;
                int v180 = v188 & 1;
                int64_t v176 = v286 - 1;
              }
              while (v286 != 1);
              sub_55F94(v186, v187, v180);
              swift_bridgeObjectRelease();
              v175 = (void *)v279;
            }
            static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)(v2, (uint64_t)v175 + *(int *)(v255 + 48));
            swift_bridgeObjectRelease();
            v189 = (void *)(v280 + 6 * v281);
            void *v189 = 0xD000000000000021;
            v189[1] = 0x80000000002174B0;
            uint64_t v190 = v272;
            int64_t v21 = v278;
            if (v278)
            {
              uint64_t v262 = (uint64_t)v189;
              v289[0] = _swiftEmptyArrayStorage;
              unint64_t v40 = v289;
              sub_466B8(0, v278 & ~(v278 >> 63), 0);
              if ((v21 & 0x8000000000000000) == 0)
              {
                int64_t v191 = 0;
                uint64_t v2 = v289[0];
                uint64_t v192 = 1;
                uint64_t v193 = v253;
                while (1)
                {
                  if (v193 >= v282 || v191 >= v21) {
                    goto LABEL_214;
                  }
                  memcpy(v290, (const void *)(v283 + 560 * v193), 0x229uLL);
                  double v194 = 0.0;
                  unint64_t v286 = v290[17];
                  if ((unint64_t)v290[17] >> 1 != 0xFFFFFFFF) {
                    break;
                  }
LABEL_185:
                  v289[0] = v2;
                  unint64_t v227 = *(void *)(v2 + 16);
                  unint64_t v226 = *(void *)(v2 + 24);
                  uint64_t v16 = v227 + 1;
                  if (v227 >= v226 >> 1)
                  {
                    sub_466B8(v226 > 1, v227 + 1, 1);
                    uint64_t v2 = v289[0];
                  }
                  float v228 = v194;
                  *(void *)(v2 + 16) = v16;
                  *(float *)(v2 + 4 * v227 + 32) = v228;
                  BOOL v46 = __OFADD__(v193++, 1);
                  if (v46) {
                    goto LABEL_215;
                  }
                  if (v192 == v21) {
                    goto LABEL_192;
                  }
                  int64_t v191 = v192;
                  BOOL v46 = __OFADD__(v192++, 1);
                  if (v46) {
                    goto LABEL_216;
                  }
                }
                uint64_t v273 = v192;
                uint64_t v196 = v290[11];
                uint64_t v195 = v290[12];
                uint64_t v198 = v290[13];
                uint64_t v197 = v290[14];
                uint64_t v200 = v290[15];
                uint64_t v199 = v290[16];
                v284 = (char *)v290[18];
                *(void *)&long long v285 = v290[19];
                uint64_t v280 = v290[14];
                uint64_t v281 = v290[13];
                uint64_t v279 = v290[15];
                uint64_t v275 = v2;
                uint64_t v276 = v290[11];
                uint64_t v274 = v290[12];
                if (v286 >> 62 != 3)
                {
                  uint64_t v271 = v193;
                  uint64_t v204 = v290[12];
                  sub_12124(&qword_26D5D8);
                  uint64_t v205 = swift_allocObject();
                  uint64_t v195 = v204;
                  uint64_t v200 = v279;
                  uint64_t v197 = v280;
                  uint64_t v198 = v281;
                  uint64_t v202 = v205;
                  *(_OWORD *)(v205 + 16) = v264;
                  *(void *)(v205 + 32) = v196;
                  *(void *)(v205 + 40) = v204;
                  *(void *)(v205 + 48) = v198;
                  *(void *)(v205 + 56) = v197;
                  *(void *)(v205 + 64) = v200;
                  *(void *)(v205 + 72) = v199;
                  uint64_t v203 = v199;
                  uint64_t v201 = 1;
                  *(unsigned char *)(v205 + 80) = v286 & 1;
                  goto LABEL_170;
                }
                uint64_t v201 = *(void *)(v290[11] + 16);
                if (v201)
                {
                  uint64_t v271 = v193;
                  uint64_t v202 = v290[11];
                  uint64_t v203 = v290[16];
LABEL_170:
                  uint64_t v206 = v195;
                  uint64_t v270 = v203;
                  sub_12430(v196, v195, v198, v197, v200, v203, v286);
                  uint64_t v207 = v206;
                  uint64_t v208 = v270;
                  sub_12430(v196, v207, v198, v197, v200, v270, v286);
                  sub_12384(v290);
                  swift_bridgeObjectRetain();
                  v209 = (double *)(v202 + 80);
                  v210 = _swiftEmptyArrayStorage;
                  uint64_t v211 = v208;
                  do
                  {
                    if ((*(unsigned char *)v209 & 1) == 0)
                    {
                      double v212 = *(v209 - 2);
                      double v213 = exp2(-*(v209 - 1) / *(v209 - 3));
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        v210 = sub_41BAC(0, v210[2] + 1, 1, v210);
                      }
                      unint64_t v215 = v210[2];
                      unint64_t v214 = v210[3];
                      if (v215 >= v214 >> 1) {
                        v210 = sub_41BAC((void *)(v214 > 1), v215 + 1, 1, v210);
                      }
                      v210[2] = v215 + 1;
                      *(double *)&v210[v215 + 4] = v212 * v213;
                    }
                    v209 += 7;
                    --v201;
                  }
                  while (v201);
                  swift_bridgeObjectRelease();
                  uint64_t v2 = v275;
                  uint64_t v216 = v276;
                  uint64_t v193 = v271;
                  uint64_t v217 = v210[2];
                  if (v217)
                  {
LABEL_179:
                    v218 = (double *)(v210 + 4);
                    double v194 = 0.0;
                    do
                    {
                      double v219 = *v218++;
                      double v194 = v194 + v219;
                      --v217;
                    }
                    while (v217);
                    swift_bridgeObjectRelease();
                    goto LABEL_184;
                  }
                }
                else
                {
                  uint64_t v220 = v290[12];
                  uint64_t v221 = v290[14];
                  uint64_t v222 = v290[15];
                  uint64_t v211 = v290[16];
                  unint64_t v223 = v286;
                  sub_12430(v290[11], v290[12], v290[13], v290[14], v290[15], v290[16], v286);
                  uint64_t v224 = v198;
                  uint64_t v216 = v276;
                  unint64_t v225 = v223;
                  uint64_t v2 = v275;
                  sub_12430(v276, v220, v224, v221, v222, v211, v225);
                  sub_12384(v290);
                  v210 = _swiftEmptyArrayStorage;
                  uint64_t v217 = _swiftEmptyArrayStorage[2];
                  if (v217) {
                    goto LABEL_179;
                  }
                }
                swift_bridgeObjectRelease();
                double v194 = 0.0;
LABEL_184:
                swift_bridgeObjectRelease();
                sub_1255C(v216, v274, v281, v280, v279, v211, v286);
                sub_124B4(v290);
                uint64_t v190 = v272;
                uint64_t v192 = v273;
                int64_t v21 = v278;
                goto LABEL_185;
              }
LABEL_227:
              __break(1u);
LABEL_228:
              uint64_t v238 = v249;
              swift_unknownObjectRelease();
              unint64_t v237 = v248;
LABEL_194:
              v239 = sub_4ABF0(v238, v283, v253, v237);
              swift_release();
              uint64_t v241 = v266;
              uint64_t v240 = v267;
            }
            else
            {
LABEL_192:
              v229 = v259;
              sub_1FB5B0();
              swift_bridgeObjectRetain();
              sub_1FB5A0();
              sub_1FB540();
              uint64_t v230 = v261;
              uint64_t v231 = v251;
              (*(void (**)(char *, char *, uint64_t))(v261 + 16))(v260, v229, v251);
              sub_1FB510();
              (*(void (**)(char *, uint64_t))(v230 + 8))(v229, v231);
              swift_bridgeObjectRelease();
              sub_160CB0(v254);
              sub_19BD14((uint64_t)v277, (char *)0xD000000000000016, 0x80000000002174E0);
              swift_bridgeObjectRelease();
              sub_1FB550();
              uint64_t v232 = sub_1FB2F0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_1E52C4(v232);
              sub_1FB690();
              swift_allocObject();
              sub_1FB670();
              swift_bridgeObjectRelease();
              sub_12124(&qword_26D370);
              uint64_t v233 = swift_allocObject();
              *(_OWORD *)(v233 + 16) = xmmword_2026C0;
              uint64_t v234 = v263;
              *(void *)(v233 + 32) = v190;
              *(void *)(v233 + 40) = v234;
              int64_t v235 = v268;
              uint64_t v236 = v269;
              *(void *)(v233 + 48) = v266;
              *(void *)(v233 + 56) = v235;
              *(void *)(v233 + 64) = v267;
              *(void *)(v233 + 72) = v236;
              sub_1FB660();
              swift_allocObject();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              swift_retain();
              unint64_t v40 = (void *)sub_1FB650();
              unint64_t v237 = v248;
              if ((v248 & 1) == 0)
              {
                uint64_t v238 = v249;
                swift_unknownObjectRetain();
                uint64_t v25 = v250;
                goto LABEL_194;
              }
              sub_1FC730();
              swift_unknownObjectRetain_n();
              v242 = (void *)swift_dynamicCastClass();
              uint64_t v25 = v250;
              if (!v242)
              {
                swift_unknownObjectRelease();
                v242 = _swiftEmptyArrayStorage;
              }
              uint64_t v243 = v242[2];
              swift_release();
              if (v243 != v278) {
                goto LABEL_228;
              }
              v239 = (void *)swift_dynamicCastClass();
              swift_release();
              uint64_t v241 = v266;
              uint64_t v240 = v267;
              if (!v239)
              {
                swift_unknownObjectRelease();
                v239 = _swiftEmptyArrayStorage;
              }
            }
            uint64_t result = swift_unknownObjectRelease_n();
            v244 = v252;
            void *v252 = v40;
            v244[1] = v239;
            uint64_t v245 = v263;
            v244[2] = v272;
            v244[3] = v245;
            int64_t v246 = v268;
            v244[4] = v241;
            v244[5] = v246;
            uint64_t v247 = v269;
            v244[6] = v240;
            v244[7] = v247;
            v244[8] = v25;
            return result;
          }
LABEL_226:
          __break(1u);
          goto LABEL_227;
        }
LABEL_225:
        __break(1u);
        goto LABEL_226;
      }
      uint64_t v47 = v273;
      uint64_t v49 = v273 + 1;
      if (__OFADD__(v273, 1)) {
        goto LABEL_219;
      }
    }
    swift_bridgeObjectRetain_n();
    unint64_t v286 = v52;
    unint64_t v56 = (uint64_t *)(v52 + 40);
    int64_t v21 = (int64_t)_swiftEmptyArrayStorage;
LABEL_22:
    uint64_t v57 = *(v56 - 1);
    uint64_t v58 = *v56;
    sub_12124(&qword_26D3C0);
    uint64_t v59 = swift_allocObject();
    *(_OWORD *)(v59 + 16) = v285;
    uint64_t v60 = (void *)(v59 + 16);
    *(void *)(v59 + 32) = v57;
    uint64_t v61 = *(void *)(v58 + 16);
    swift_bridgeObjectRetain();
    if (!v61) {
      goto LABEL_23;
    }
    uint64_t v70 = sub_41858((int *)((char *)&dword_0 + 1), v61 + 1, 1, (void *)v59);
    if (!*(void *)(v58 + 16)) {
      break;
    }
    uint64_t v59 = (uint64_t)v70;
    uint64_t v71 = v70[2];
    if ((v70[3] >> 1) - v71 < v61)
    {
      __break(1u);
LABEL_230:
      __break(1u);
    }
    BOOL v72 = &v70[v71 + 4];
    if (v58 + 32 < (unint64_t)&v72[v61] && (unint64_t)v72 < v58 + 32 + 8 * v61) {
      goto LABEL_232;
    }
    uint64_t v60 = (void *)(v59 + 16);
    memcpy(v72, (const void *)(v58 + 32), 8 * v61);
    if (__OFADD__(*(void *)(v59 + 16), v61)) {
      goto LABEL_230;
    }
    *uint64_t v60 = *(void *)(v59 + 16) + v61;
LABEL_23:
    swift_bridgeObjectRelease();
    uint64_t v16 = *(void *)(v59 + 16);
    int64_t v62 = *(void *)(v21 + 16);
    uint64_t v2 = v62 + v16;
    if (!__OFADD__(v62, v16))
    {
      uint64_t v63 = swift_isUniquelyReferenced_nonNull_native();
      if ((v63 & 1) != 0 && v2 <= *(void *)(v21 + 24) >> 1)
      {
        if (*v60) {
          goto LABEL_32;
        }
      }
      else
      {
        if (v62 <= v2) {
          int64_t v64 = v62 + v16;
        }
        else {
          int64_t v64 = v62;
        }
        int64_t v21 = (int64_t)sub_41858((void *)v63, v64, 1, (void *)v21);
        if (*v60)
        {
LABEL_32:
          uint64_t v65 = *(void *)(v21 + 16);
          if ((*(void *)(v21 + 24) >> 1) - v65 < v16) {
            goto LABEL_209;
          }
          uint64_t v66 = (void *)(v21 + 8 * v65 + 32);
          BOOL v67 = v59 + 32 >= (unint64_t)v66 + 8 * v16 || (unint64_t)v66 >= v59 + 32 + 8 * v16;
          if (!v67) {
            goto LABEL_232;
          }
          memcpy(v66, (const void *)(v59 + 32), 8 * v16);
          if (v16)
          {
            uint64_t v68 = *(void *)(v21 + 16);
            BOOL v46 = __OFADD__(v68, v16);
            uint64_t v69 = v68 + v16;
            if (v46) {
              goto LABEL_210;
            }
            *(void *)(v21 + 16) = v69;
          }
          goto LABEL_21;
        }
      }
      if (v16) {
        goto LABEL_202;
      }
LABEL_21:
      swift_bridgeObjectRelease();
      v56 += 2;
      if (!--v55)
      {
        swift_bridgeObjectRelease_n();
        goto LABEL_52;
      }
      goto LABEL_22;
    }
    __break(1u);
LABEL_202:
    __break(1u);
LABEL_203:
    __break(1u);
LABEL_204:
    __break(1u);
LABEL_205:
    __break(1u);
LABEL_206:
    __break(1u);
LABEL_207:
    __break(1u);
LABEL_208:
    __break(1u);
LABEL_209:
    __break(1u);
LABEL_210:
    __break(1u);
LABEL_211:
    __break(1u);
LABEL_212:
    __break(1u);
LABEL_213:
    __break(1u);
LABEL_214:
    __break(1u);
LABEL_215:
    __break(1u);
LABEL_216:
    __break(1u);
LABEL_217:
    __break(1u);
LABEL_218:
    __break(1u);
LABEL_219:
    __break(1u);
LABEL_220:
    __break(1u);
LABEL_221:
    __break(1u);
LABEL_222:
    swift_once();
  }
  __break(1u);
LABEL_232:
  sub_1FC2B0();
  __break(1u);
LABEL_233:
  sub_1FC210();
  __break(1u);
LABEL_234:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

BOOL sub_5A3B0(void *a1, void *a2)
{
  unint64_t v2 = a2[17];
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v34 = a1[11];
  uint64_t v29 = a1[13];
  uint64_t v30 = a1[12];
  uint64_t v28 = a1[14];
  unint64_t v33 = a1[17];
  uint64_t v27 = a1[15];
  uint64_t v3 = a2[11];
  uint64_t v4 = a2[12];
  uint64_t v5 = a2[13];
  uint64_t v6 = a2[14];
  uint64_t v8 = a2[15];
  uint64_t v7 = a2[16];
  uint64_t v24 = a1[16];
  if (v2 >> 62 == 3)
  {
    uint64_t v9 = a2[11];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    *(void *)(v9 + 48) = v5;
    *(void *)(v9 + 56) = v6;
    *(void *)(v9 + 64) = v8;
    *(void *)(v9 + 72) = v7;
    *(unsigned char *)(v9 + 80) = v2 & 1;
  }
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  uint64_t v13 = v8;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  uint64_t v16 = v12;
  sub_1244C();
  sub_1244C();
  double v26 = COERCE_DOUBLE(Array<A>.affinity.getter(v9));
  char v25 = v17;
  swift_bridgeObjectRelease();
  sub_1255C(v3, v14, v15, v16, v13, v7, v2);
  if (v33 >> 1 == 0xFFFFFFFF)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x5A6E4);
  }
  if (v33 >> 62 == 3)
  {
    uint64_t v18 = v34;
    uint64_t v19 = v24;
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1FD2A0;
    *(void *)(v18 + 32) = v34;
    *(void *)(v18 + 40) = v30;
    *(void *)(v18 + 48) = v29;
    *(void *)(v18 + 56) = v28;
    uint64_t v19 = v24;
    *(void *)(v18 + 64) = v27;
    *(void *)(v18 + 72) = v24;
    *(unsigned char *)(v18 + 80) = v33 & 1;
  }
  if (v25) {
    double v20 = 0.0;
  }
  else {
    double v20 = v26;
  }
  sub_1244C();
  sub_1244C();
  uint64_t v32 = Array<A>.affinity.getter(v18);
  char v31 = v21;
  swift_bridgeObjectRelease();
  sub_1255C(v34, v30, v29, v28, v27, v19, v33);
  double v22 = *(double *)&v32;
  if (v31) {
    double v22 = 0.0;
  }
  return v20 < v22;
}

void *sub_5A704(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = v3;
  uint64_t v5 = v2;
  uint64_t v8 = sub_12124(&qword_26D7C8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v85 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB6A0();
  uint64_t v11 = sub_1FB640();
  uint64_t v12 = *(void *)(v11 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_5EBAC((uint64_t)v10);
    goto LABEL_70;
  }
  uint64_t v13 = sub_1FB630();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v10, v11);
  if (!v13)
  {
LABEL_70:
    if (qword_26C388 != -1) {
      goto LABEL_110;
    }
    goto LABEL_71;
  }
  uint64_t v89 = a2;
  uint64_t v90 = v5;
  uint64_t v14 = *(void *)(v13 + 16);
  uint64_t v15 = _swiftEmptyArrayStorage;
  if (v14)
  {
    uint64_t v16 = v13 + 32;
    uint64_t v86 = (char *)v91 + 2;
    uint64_t v87 = (char *)v91 + 3;
    uint64_t v88 = v13;
    swift_bridgeObjectRetain();
    uint64_t v17 = 0;
    while (1)
    {
      uint64_t v18 = (uint64_t *)(v16 + 16 * v17);
      uint64_t v19 = *v18;
      unint64_t v20 = v18[1];
      uint64_t v21 = HIBYTE(v20) & 0xF;
      uint64_t v22 = v19 & 0xFFFFFFFFFFFFLL;
      if ((v20 & 0x2000000000000000) != 0) {
        uint64_t v23 = HIBYTE(v20) & 0xF;
      }
      else {
        uint64_t v23 = v19 & 0xFFFFFFFFFFFFLL;
      }
      if (v23)
      {
        if ((v20 & 0x1000000000000000) != 0)
        {
          swift_bridgeObjectRetain();
          unint64_t v27 = sub_4DED4(v19, v20, 10);
          char v45 = v44;
          swift_bridgeObjectRelease();
          if ((v45 & 1) == 0) {
            goto LABEL_43;
          }
        }
        else if ((v20 & 0x2000000000000000) != 0)
        {
          v91[0] = v19;
          v91[1] = v20 & 0xFFFFFFFFFFFFFFLL;
          if (v19 == 43)
          {
            if (!v21)
            {
              __break(1u);
LABEL_109:
              __break(1u);
LABEL_110:
              swift_once();
LABEL_71:
              id v46 = (id)qword_272B68;
              sub_1FBDA0();
              uint64_t v47 = _swiftEmptyArrayStorage;
              sub_1FB400();

              return v47;
            }
            if (v21 != 1 && (BYTE1(v19) - 48) <= 9u)
            {
              unint64_t v27 = (BYTE1(v19) - 48);
              if (v21 == 2) {
                goto LABEL_43;
              }
              if ((BYTE2(v19) - 48) <= 9u)
              {
                unint64_t v27 = 10 * (BYTE1(v19) - 48) + (BYTE2(v19) - 48);
                uint64_t v31 = v21 - 3;
                if (v21 != 3)
                {
                  uint64_t v32 = (unsigned __int8 *)v87;
                  while (1)
                  {
                    unsigned int v33 = *v32 - 48;
                    if (v33 > 9) {
                      goto LABEL_7;
                    }
                    if (!is_mul_ok(v27, 0xAuLL)) {
                      goto LABEL_7;
                    }
                    BOOL v29 = __CFADD__(10 * v27, v33);
                    unint64_t v27 = 10 * v27 + v33;
                    if (v29) {
                      goto LABEL_7;
                    }
                    ++v32;
                    if (!--v31) {
                      goto LABEL_43;
                    }
                  }
                }
                goto LABEL_43;
              }
            }
          }
          else if (v19 == 45)
          {
            if (!v21) {
              goto LABEL_109;
            }
            if (v21 != 1)
            {
              unsigned __int8 v28 = BYTE1(v19) - 48;
              if ((BYTE1(v19) - 48) <= 9u)
              {
                BOOL v29 = v28 == 0;
                unint64_t v30 = -(uint64_t)v28;
                if (v29)
                {
                  if (v21 == 2)
                  {
                    unint64_t v27 = v30;
                    goto LABEL_43;
                  }
                  unsigned __int8 v39 = BYTE2(v19) - 48;
                  if ((BYTE2(v19) - 48) <= 9u && is_mul_ok(v30, 0xAuLL))
                  {
                    unint64_t v40 = 10 * v30;
                    unint64_t v27 = v40 - v39;
                    if (v40 >= v39)
                    {
                      uint64_t v41 = v21 - 3;
                      if (v21 != 3)
                      {
                        char v42 = (unsigned __int8 *)v87;
                        while (1)
                        {
                          unsigned int v43 = *v42 - 48;
                          if (v43 > 9) {
                            goto LABEL_7;
                          }
                          if (!is_mul_ok(v27, 0xAuLL)) {
                            goto LABEL_7;
                          }
                          BOOL v29 = 10 * v27 >= v43;
                          unint64_t v27 = 10 * v27 - v43;
                          if (!v29) {
                            goto LABEL_7;
                          }
                          ++v42;
                          if (!--v41) {
                            goto LABEL_43;
                          }
                        }
                      }
                      goto LABEL_43;
                    }
                  }
                }
              }
            }
          }
          else if (v21 && (v19 - 48) <= 9u)
          {
            unint64_t v27 = (v19 - 48);
            if (v21 == 1) {
              goto LABEL_43;
            }
            if ((BYTE1(v19) - 48) <= 9u)
            {
              unint64_t v27 = 10 * (v19 - 48) + (BYTE1(v19) - 48);
              uint64_t v36 = v21 - 2;
              if (v21 != 2)
              {
                uint64_t v37 = (unsigned __int8 *)v86;
                while (1)
                {
                  unsigned int v38 = *v37 - 48;
                  if (v38 > 9) {
                    goto LABEL_7;
                  }
                  if (!is_mul_ok(v27, 0xAuLL)) {
                    goto LABEL_7;
                  }
                  BOOL v29 = __CFADD__(10 * v27, v38);
                  unint64_t v27 = 10 * v27 + v38;
                  if (v29) {
                    goto LABEL_7;
                  }
                  ++v37;
                  if (!--v36) {
                    goto LABEL_43;
                  }
                }
              }
              goto LABEL_43;
            }
          }
        }
        else
        {
          if ((v19 & 0x1000000000000000) != 0) {
            uint64_t v24 = (unsigned __int8 *)((v20 & 0xFFFFFFFFFFFFFFFLL) + 32);
          }
          else {
            uint64_t v24 = (unsigned __int8 *)sub_1FC130();
          }
          char v25 = sub_4DEBC(v24, v22, 10);
          if ((v26 & 1) == 0)
          {
            unint64_t v27 = (unint64_t)v25;
LABEL_43:
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v15 = sub_41858(0, v15[2] + 1, 1, v15);
            }
            unint64_t v35 = v15[2];
            unint64_t v34 = v15[3];
            if (v35 >= v34 >> 1) {
              uint64_t v15 = sub_41858((void *)(v34 > 1), v35 + 1, 1, v15);
            }
            long long v15[2] = v35 + 1;
            v15[v35 + 4] = v27;
          }
        }
      }
LABEL_7:
      if (++v17 == v14)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  swift_bridgeObjectRelease();
  uint64_t v49 = sub_1E4B04();
  uint64_t v50 = v90;
  if (!v49)
  {
    swift_bridgeObjectRelease();
    if (qword_26C388 != -1) {
      goto LABEL_110;
    }
    goto LABEL_71;
  }
  uint64_t v51 = (uint64_t)v49;
  uint64_t v52 = sub_1E4B04();
  if (!v52)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26C388 != -1) {
      goto LABEL_110;
    }
    goto LABEL_71;
  }
  uint64_t v53 = v52[2];
  if (v53 != v15[2])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26C388 != -1) {
      goto LABEL_110;
    }
    goto LABEL_71;
  }
  if (*(void *)(v51 + 16) != v53)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26C388 != -1) {
      goto LABEL_110;
    }
    goto LABEL_71;
  }
  uint64_t v54 = v4;
  uint64_t v55 = sub_5B270((uint64_t)v15, (uint64_t)v52, v51);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = v50 + *(int *)(type metadata accessor for SeedBookRecommendationWork() + 20);
  uint64_t v57 = type metadata accessor for SeedBasedRecommendationRequest(0);
  char v58 = *(unsigned char *)(v56 + *(int *)(v57 + 32));
  uint64_t v59 = *(void *)(v56 + *(int *)(v57 + 48));
  uint64_t v88 = v57;
  uint64_t v89 = v56;
  swift_bridgeObjectRetain();
  uint64_t v60 = swift_bridgeObjectRetain();
  uint64_t v61 = sub_58428(v60);
  swift_bridgeObjectRelease();
  v91[0] = v59;
  uint64_t v62 = v61[2];
  if (v62)
  {
    for (uint64_t i = 0; i != v62; ++i)
    {
      uint64_t v64 = v61[i + 4];
      sub_73A4(&v92, v64);
    }
    swift_bridgeObjectRelease();
    uint64_t v59 = v91[0];
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v65 = *(void *)(a1 + 64);
  uint64_t v66 = v90;
  if (v65)
  {
    uint64_t v67 = (uint64_t)sub_5F490(0, v55[2], v65, *(void *)(a1 + 64), (uint64_t)v55);
  }
  else
  {
    sub_12124(&qword_26D6A8);
    uint64_t v67 = swift_allocObject();
    *(_OWORD *)(v67 + 16) = xmmword_1FD2A0;
    *(void *)(v67 + 32) = _swiftEmptyArrayStorage;
    *(void *)(v67 + 40) = &_swiftEmptyArrayStorage[4];
    *(_OWORD *)(v67 + 48) = xmmword_202690;
  }
  uint64_t v68 = swift_bridgeObjectRelease();
  uint64_t v69 = *(void *)(a1 + 8);
  __chkstk_darwin(v68);
  *((unsigned char *)&v85 - 32) = v58;
  *(&v85 - 3) = v66;
  *(&v85 - 2) = v59;
  swift_bridgeObjectRetain();
  uint64_t v70 = sub_5F71C(v67, v69, (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))sub_5F710);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v91[0] = (uint64_t)_swiftEmptyArrayStorage;
  uint64_t v71 = *(void *)(v70 + 16);
  if (v71)
  {
    swift_bridgeObjectRetain();
    for (uint64_t j = 0; j != v71; ++j)
    {
      uint64_t v73 = swift_bridgeObjectRetain();
      sub_A9A60(v73);
    }
    swift_bridgeObjectRelease_n();
    uint64_t v74 = (void *)v91[0];
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v74 = _swiftEmptyArrayStorage;
  }
  v91[0] = (uint64_t)v74;
  swift_bridgeObjectRetain();
  sub_5BCB4(v91, sub_124750, sub_5D0B8);
  if (!v54)
  {
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D6A0);
    sub_5FB94();
    uint64_t v75 = sub_1FB990();
    swift_bridgeObjectRelease();
    int64_t v76 = sub_3E3A8(*(void *)(v89 + *(int *)(v88 + 56)), v75);
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    unint64_t v82 = v81;
    if (v81)
    {
      sub_1FC730();
      swift_unknownObjectRetain_n();
      uint64_t v83 = (void *)swift_dynamicCastClass();
      if (!v83)
      {
        swift_unknownObjectRelease();
        uint64_t v83 = _swiftEmptyArrayStorage;
      }
      uint64_t v84 = v83[2];
      swift_release();
      if (__OFSUB__(v82 >> 1, v80))
      {
        __break(1u);
      }
      else if (v84 == (v82 >> 1) - v80)
      {
        uint64_t v47 = (void *)swift_dynamicCastClass();
        swift_unknownObjectRelease();
        if (!v47)
        {
          swift_unknownObjectRelease();
          return _swiftEmptyArrayStorage;
        }
        return v47;
      }
      swift_unknownObjectRelease();
    }
    uint64_t v47 = sub_4AFF0(v76, v78, v80, v82);
    swift_unknownObjectRelease();
    return v47;
  }
  uint64_t result = (void *)swift_release();
  __break(1u);
  return result;
}

void *sub_5B270(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a2 + 16);
  uint64_t v38 = v5;
  unint64_t v37 = *(void *)(a3 + 16);
  if (v37 < v5) {
    uint64_t v5 = *(void *)(a3 + 16);
  }
  if (v5 >= *(void *)(a1 + 16)) {
    uint64_t v6 = *(void *)(a1 + 16);
  }
  else {
    uint64_t v6 = v5;
  }
  uint64_t result = (void *)sub_46798(0, v6 & ~(v6 >> 63), 0);
  if ((v6 & 0x8000000000000000) == 0)
  {
    uint64_t v40 = a2;
    if (v6)
    {
      uint64_t v8 = a1;
      uint64_t v9 = (uint64_t *)(a1 + 32);
      uint64_t v10 = (uint64_t *)(a2 + 32);
      uint64_t v11 = (uint64_t *)(a3 + 32);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_bridgeObjectRetain();
      uint64_t v13 = v37;
      uint64_t v12 = v38;
      uint64_t v14 = v38;
      unint64_t v15 = v37;
      uint64_t v16 = v6;
      uint64_t v17 = v6;
      while (v14)
      {
        if (!v15) {
          goto LABEL_34;
        }
        uint64_t v18 = *v9;
        uint64_t v19 = *v10;
        uint64_t v20 = *v11;
        unint64_t v22 = _swiftEmptyArrayStorage[2];
        unint64_t v21 = _swiftEmptyArrayStorage[3];
        if (v22 >= v21 >> 1)
        {
          uint64_t v34 = *v9;
          uint64_t v35 = v17;
          uint64_t result = (void *)sub_46798(v21 > 1, v22 + 1, 1);
          uint64_t v18 = v34;
          uint64_t v17 = v35;
          uint64_t v13 = v37;
          uint64_t v12 = v38;
          uint64_t v8 = a1;
        }
        _swiftEmptyArrayStorage[2] = v22 + 1;
        uint64_t v23 = &_swiftEmptyArrayStorage[3 * v22];
        v23[4] = v18;
        ++v11;
        ++v10;
        v23[5] = v19;
        v23[6] = v20;
        --v15;
        ++v9;
        --v14;
        if (!--v16) {
          goto LABEL_16;
        }
      }
      __break(1u);
LABEL_34:
      __break(1u);
    }
    else
    {
      uint64_t v8 = a1;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_bridgeObjectRetain();
      uint64_t v13 = v37;
      uint64_t v12 = v38;
      uint64_t v17 = 0;
LABEL_16:
      unint64_t v24 = *(void *)(v8 + 16);
      if (v17 == v24)
      {
LABEL_17:
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
      uint64_t v25 = v8 + 32;
      if (v17 <= v12) {
        uint64_t v26 = v12;
      }
      else {
        uint64_t v26 = v17;
      }
      if (v17 <= v13) {
        uint64_t v27 = v13;
      }
      else {
        uint64_t v27 = v17;
      }
      while (v17 < v24)
      {
        if (v12 == v17) {
          goto LABEL_17;
        }
        if (v26 == v17) {
          goto LABEL_36;
        }
        if (v13 == v17) {
          goto LABEL_17;
        }
        if (v27 == v17) {
          goto LABEL_37;
        }
        uint64_t v28 = *(void *)(v25 + 8 * v17);
        uint64_t v29 = *(void *)(v40 + 32 + 8 * v17);
        uint64_t v30 = *(void *)(a3 + 32 + 8 * v17);
        unint64_t v32 = _swiftEmptyArrayStorage[2];
        unint64_t v31 = _swiftEmptyArrayStorage[3];
        if (v32 >= v31 >> 1)
        {
          uint64_t v36 = v17;
          uint64_t result = (void *)sub_46798(v31 > 1, v32 + 1, 1);
          uint64_t v17 = v36;
          uint64_t v13 = v37;
          uint64_t v12 = v38;
          uint64_t v8 = a1;
        }
        ++v17;
        _swiftEmptyArrayStorage[2] = v32 + 1;
        unsigned int v33 = &_swiftEmptyArrayStorage[3 * v32];
        v33[4] = v28;
        void v33[5] = v29;
        v33[6] = v30;
        unint64_t v24 = *(void *)(v8 + 16);
        if (v17 == v24) {
          goto LABEL_17;
        }
      }
    }
    __break(1u);
LABEL_36:
    __break(1u);
LABEL_37:
    __break(1u);
  }
  __break(1u);
  return result;
}

unint64_t sub_5B528(int a1, uint64_t a2, uint64_t a3, unint64_t a4, void *__src, char a6, uint64_t a7, uint64_t a8)
{
  unint64_t result = (unint64_t)memcpy(__dst, __src, 0x229uLL);
  if (LOBYTE(__dst[69]) == 12) {
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  uint64_t v56 = a7;
  uint64_t v15 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (!v15)
  {
LABEL_18:
    uint64_t v35 = v56 + *(int *)(type metadata accessor for SeedBookRecommendationWork() + 20);
    uint64_t v36 = type metadata accessor for SeedBasedRecommendationRequest(0);
    sub_3E3A8(*(void *)(v35 + *(int *)(v36 + 52)), (uint64_t)_swiftEmptyArrayStorage);
    uint64_t v38 = v37;
    uint64_t v40 = v39;
    unint64_t v42 = v41;
    swift_bridgeObjectRetain();
    unsigned int v43 = sub_5F23C(v38, v40, v42, a8);
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v44 = v43[2];
    if (v44)
    {
      char v45 = (double *)(v43 + 13);
      do
      {
        uint64_t v49 = *((void *)v45 - 1);
        double v50 = *v45;
        if (*v45 > 0.0 && v49 != 0)
        {
          double v52 = *(v45 - 2);
          if (v52 > 0.0)
          {
            uint64_t v63 = *((void *)v45 - 9);
            char v62 = *((unsigned char *)v45 - 64);
            uint64_t v60 = *((void *)v45 - 7);
            char v59 = *((unsigned char *)v45 - 48);
            char v53 = *((unsigned char *)v45 - 32);
            uint64_t v54 = *((void *)v45 - 3);
            uint64_t v57 = *((void *)v45 - 5);
            sub_5480C(v57, v53);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              sub_467B8(0, _swiftEmptyArrayStorage[2] + 1, 1);
            }
            unint64_t v47 = _swiftEmptyArrayStorage[2];
            unint64_t v46 = _swiftEmptyArrayStorage[3];
            if (v47 >= v46 >> 1) {
              sub_467B8(v46 > 1, v47 + 1, 1);
            }
            _swiftEmptyArrayStorage[2] = v47 + 1;
            char v48 = &_swiftEmptyArrayStorage[10 * v47];
            v48[4] = v63;
            *((unsigned char *)v48 + 40) = v62;
            v48[6] = v60;
            *((unsigned char *)v48 + 56) = v59;
            v48[8] = v57;
            *((unsigned char *)v48 + 72) = v53;
            v48[10] = v54;
            *((double *)v48 + 11) = v52;
            v48[12] = v49;
            *((double *)v48 + 13) = v50;
          }
        }
        v45 += 10;
        --v44;
      }
      while (v44);
    }
    swift_bridgeObjectRelease();
    return (unint64_t)_swiftEmptyArrayStorage;
  }
  unint64_t result = sub_467B8(0, v15 & ~(v15 >> 63), 0);
  if ((v15 & 0x8000000000000000) == 0)
  {
    uint64_t v55 = a8;
    char v58 = a6 & 1;
    unint64_t result = sub_12124(&qword_26D7E0);
    if (a3 <= (uint64_t)(a4 >> 1)) {
      unint64_t v17 = a4 >> 1;
    }
    else {
      unint64_t v17 = a3;
    }
    unint64_t v18 = v17 - a3;
    uint64_t v19 = (uint64_t *)(a2 + 24 * a3 + 16);
    while (v18)
    {
      uint64_t v20 = v16;
      uint64_t v21 = *(v19 - 2);
      uint64_t v22 = *(v19 - 1);
      uint64_t v61 = *v19;
      sub_12124(&qword_26D498);
      uint64_t inited = swift_initStackObject();
      *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
      *(unsigned char *)(inited + 32) = 0;
      sub_12124(&qword_26D3C8);
      uint64_t v24 = swift_allocObject();
      *(_OWORD *)(v24 + 16) = xmmword_1FD2A0;
      memcpy((void *)(v24 + 32), __dst, 0x229uLL);
      *(void *)(inited + 40) = v24;
      uint64_t v25 = (void *)sub_1FC2A0();
      sub_12384(__dst);
      char v26 = *(unsigned char *)(inited + 32);
      uint64_t v27 = *(void *)(inited + 40);
      swift_retain();
      swift_bridgeObjectRetain();
      unint64_t result = sub_4C744(v26);
      if (v28) {
        goto LABEL_34;
      }
      v25[(result >> 6) + 8] |= 1 << result;
      *(unsigned char *)(v25[6] + result) = v26;
      *(void *)(v25[7] + 8 * result) = v27;
      uint64_t v29 = v25[2];
      BOOL v30 = __OFADD__(v29, 1);
      uint64_t v31 = v29 + 1;
      if (v30) {
        goto LABEL_35;
      }
      v25[2] = v31;
      swift_release();
      swift_bridgeObjectRelease();
      unint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0) {
        unint64_t result = sub_467B8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v33 = _swiftEmptyArrayStorage[2];
      unint64_t v32 = _swiftEmptyArrayStorage[3];
      if (v33 >= v32 >> 1) {
        unint64_t result = sub_467B8(v32 > 1, v33 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v33 + 1;
      uint64_t v34 = &_swiftEmptyArrayStorage[10 * v33];
      v34[4] = v21;
      *((unsigned char *)v34 + 40) = v58;
      v34[6] = 0;
      *((unsigned char *)v34 + 56) = 1;
      v34[8] = 0;
      *((unsigned char *)v34 + 72) = -1;
      uint64_t v16 = v20;
      v34[10] = v20;
      v34[11] = v61;
      v34[12] = v25;
      v34[13] = v22;
      --v18;
      v19 += 3;
      if (!--v15)
      {
        a8 = v55;
        goto LABEL_18;
      }
    }
    __break(1u);
LABEL_34:
    __break(1u);
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
LABEL_37:
  __break(1u);
  return result;
}

void *sub_5B9C4@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

unint64_t sub_5B9D0()
{
  return 0xD000000000000018;
}

__n128 sub_5B9EC@<Q0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_585A0(a1, v6);
  if (!v2)
  {
    long long v5 = v6[3];
    *(_OWORD *)(a2 + 32) = v6[2];
    *(_OWORD *)(a2 + 48) = v5;
    *(void *)(a2 + 64) = v7;
    __n128 result = (__n128)v6[1];
    *(_OWORD *)a2 = v6[0];
    *(__n128 *)(a2 + 16) = result;
  }
  return result;
}

void *sub_5BA40@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  __n128 result = sub_5A704(a1, a2);
  if (!v3) {
    *a3 = result;
  }
  return result;
}

uint64_t SeedBasedRecommendationRequest.uuid.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1FB110();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t sub_5BAD4(uint64_t a1)
{
  uint64_t result = sub_5BC14((unint64_t *)&qword_26D7A0, (void (*)(uint64_t))type metadata accessor for SeedBookRecommendationWork);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_5BB2C()
{
  return sub_5BC14(&qword_26D7A8, (void (*)(uint64_t))type metadata accessor for SeedBookRecommendationWork);
}

unint64_t sub_5BB78()
{
  unint64_t result = qword_26D7B0;
  if (!qword_26D7B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7B0);
  }
  return result;
}

uint64_t sub_5BBCC()
{
  return sub_5BC14((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_5BC14(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_5BC60()
{
  unint64_t result = qword_26D7C0;
  if (!qword_26D7C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7C0);
  }
  return result;
}

uint64_t sub_5BCB4(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

Swift::Int sub_5BD38(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_210;
    }
    if (v3) {
      return sub_5D8DC(0, v3, 1, a1);
    }
    return result;
  }
  Swift::Int v196 = result;
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_222;
  }
  Swift::Int v200 = v3;
  double v194 = a1;
  if (v3 < 2)
  {
    uint64_t v201 = (char *)&_swiftEmptyArrayStorage[4];
    uint64_t v195 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      unint64_t v135 = _swiftEmptyArrayStorage[2];
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_175:
      if (v135 >= 2)
      {
        uint64_t v186 = *v194;
        do
        {
          unint64_t v187 = v135 - 2;
          if (v135 < 2) {
            goto LABEL_204;
          }
          if (!v186) {
            goto LABEL_221;
          }
          char v188 = v10;
          uint64_t v189 = *(void *)&v10[16 * v187 + 32];
          uint64_t v190 = *(void *)&v10[16 * v135 + 24];
          sub_5DFAC((char *)(v186 + 560 * v189), (char *)(v186 + 560 * *(void *)&v10[16 * v135 + 16]), v186 + 560 * v190, v201);
          if (v1) {
            break;
          }
          if (v190 < v189) {
            goto LABEL_206;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v188 = sub_70B24((uint64_t)v188);
          }
          if (v187 >= *((void *)v188 + 2)) {
            goto LABEL_207;
          }
          int64_t v191 = &v188[16 * v187 + 32];
          *(void *)int64_t v191 = v189;
          *((void *)v191 + 1) = v190;
          unint64_t v192 = *((void *)v188 + 2);
          if (v135 > v192) {
            goto LABEL_208;
          }
          memmove(&v188[16 * v135 + 16], &v188[16 * v135 + 32], 16 * (v192 - v135));
          uint64_t v10 = v188;
          *((void *)v188 + 2) = v192 - 1;
          unint64_t v135 = v192 - 1;
        }
        while (v192 > 2);
      }
LABEL_186:
      swift_bridgeObjectRelease();
      v195[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    uint64_t v195 = (void *)v7;
    uint64_t v201 = (char *)(v7 + 32);
  }
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  Swift::Int v198 = v3 - 1;
  uint64_t v193 = *a1 - 560;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v11 = v3;
  uint64_t v206 = *a1;
  while (1)
  {
    uint64_t v197 = v10;
    Swift::Int v12 = v8 + 1;
    Swift::Int v205 = v8;
    if (v8 + 1 >= v11)
    {
      Swift::Int v14 = v8 + 1;
      goto LABEL_69;
    }
    Swift::Int v13 = v8;
    memcpy(__dst, (const void *)(v9 + 560 * v12), 0x229uLL);
    memcpy(__src, (const void *)(v9 + 560 * v12), 0x229uLL);
    memcpy(v237, (const void *)(v9 + 560 * v13), 0x229uLL);
    memcpy(v234, (const void *)(v9 + 560 * v13), 0x229uLL);
    sub_12384(__dst);
    sub_12384(v237);
    BOOL v207 = sub_5A3B0(__src, v234);
    if (v1)
    {
      sub_124B4(v237);
      sub_124B4(__dst);
      goto LABEL_186;
    }
    sub_124B4(v237);
    sub_124B4(__dst);
    Swift::Int v14 = v13 + 2;
    Swift::Int v11 = v200;
    if (v13 + 2 < v200) {
      break;
    }
LABEL_59:
    if (v207) {
      goto LABEL_60;
    }
LABEL_69:
    if (v14 < v11)
    {
      if (__OFSUB__(v14, v205)) {
        goto LABEL_209;
      }
      if (v14 - v205 < v196)
      {
        Swift::Int v73 = v205 + v196;
        if (__OFADD__(v205, v196)) {
          goto LABEL_211;
        }
        if (v73 >= v11) {
          Swift::Int v73 = v11;
        }
        if (v73 < v205)
        {
LABEL_212:
          __break(1u);
          goto LABEL_213;
        }
        Swift::Int v199 = v73;
        if (v14 != v73)
        {
LABEL_79:
          Swift::Int v203 = v14;
          Swift::Int v74 = v14;
          while (1)
          {
            uint64_t v75 = (char *)(v9 + 560 * v74);
            memcpy(__dst, v75, 0x229uLL);
            memcpy(v237, v75 - 560, 0x229uLL);
            unint64_t v76 = v237[17];
            if ((unint64_t)v237[17] >> 1 == 0xFFFFFFFF) {
              goto LABEL_214;
            }
            uint64_t v77 = v237[11];
            uint64_t v78 = v237[13];
            uint64_t v79 = v237[14];
            uint64_t v80 = v237[15];
            uint64_t v81 = v237[16];
            uint64_t v219 = v237[15];
            uint64_t v221 = v237[14];
            Swift::Int v215 = v74;
            uint64_t v217 = v237[16];
            v210 = v75 - 560;
            double v212 = v75;
            if ((unint64_t)v237[17] >> 62 == 3)
            {
              uint64_t v82 = *(void *)(v237[11] + 16);
              if (!v82)
              {
                uint64_t v92 = v237[11];
                uint64_t v99 = v237[12];
                uint64_t v94 = v237[13];
                uint64_t v100 = v237[16];
                sub_12430(v237[11], v237[12], v237[13], v237[14], v237[15], v237[16], v237[17]);
                uint64_t v101 = v100;
                uint64_t v93 = v99;
                sub_12430(v92, v99, v94, v221, v80, v101, v76);
                sub_12384(__dst);
                sub_12384(v237);
                uint64_t v87 = _swiftEmptyArrayStorage;
                uint64_t v95 = _swiftEmptyArrayStorage[2];
                if (!v95) {
                  goto LABEL_98;
                }
                goto LABEL_94;
              }
              uint64_t v83 = v237[11];
              uint64_t v84 = v237[13];
              uint64_t v85 = v237[12];
            }
            else
            {
              uint64_t v85 = v237[12];
              sub_12124(&qword_26D5D8);
              uint64_t v81 = v217;
              uint64_t v80 = v219;
              uint64_t v79 = v221;
              uint64_t v83 = swift_allocObject();
              *(_OWORD *)(v83 + 16) = xmmword_1FD2A0;
              *(void *)(v83 + 32) = v77;
              *(void *)(v83 + 40) = v85;
              *(void *)(v83 + 48) = v78;
              *(void *)(v83 + 56) = v221;
              *(void *)(v83 + 64) = v219;
              *(void *)(v83 + 72) = v217;
              uint64_t v84 = v78;
              uint64_t v82 = 1;
              *(unsigned char *)(v83 + 80) = v76 & 1;
            }
            sub_12430(v77, v85, v84, v79, v80, v81, v76);
            uint64_t v230 = v77;
            uint64_t v226 = v84;
            sub_12430(v77, v85, v84, v79, v80, v81, v76);
            sub_12384(__dst);
            sub_12384(v237);
            swift_bridgeObjectRetain();
            uint64_t v86 = (double *)(v83 + 80);
            uint64_t v87 = _swiftEmptyArrayStorage;
            do
            {
              if ((*(unsigned char *)v86 & 1) == 0)
              {
                double v88 = *(v86 - 2);
                double v89 = exp2(-*(v86 - 1) / *(v86 - 3));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v87 = sub_41BAC(0, v87[2] + 1, 1, v87);
                }
                unint64_t v91 = v87[2];
                unint64_t v90 = v87[3];
                if (v91 >= v90 >> 1) {
                  uint64_t v87 = sub_41BAC((void *)(v90 > 1), v91 + 1, 1, v87);
                }
                v87[2] = v91 + 1;
                *(double *)&v87[v91 + 4] = v88 * v89;
              }
              v86 += 7;
              --v82;
            }
            while (v82);
            swift_bridgeObjectRelease();
            uint64_t v93 = v85;
            uint64_t v92 = v230;
            uint64_t v94 = v226;
            uint64_t v95 = v87[2];
            if (!v95)
            {
LABEL_98:
              swift_bridgeObjectRelease();
              double v97 = 0.0;
              goto LABEL_99;
            }
LABEL_94:
            uint64_t v96 = (double *)(v87 + 4);
            double v97 = 0.0;
            do
            {
              double v98 = *v96++;
              double v97 = v97 + v98;
              --v95;
            }
            while (v95);
            swift_bridgeObjectRelease();
LABEL_99:
            swift_bridgeObjectRelease();
            uint64_t v102 = __dst[11];
            uint64_t v103 = __dst[12];
            uint64_t v224 = __dst[13];
            uint64_t v227 = __dst[14];
            uint64_t v104 = __dst[16];
            unint64_t v105 = __dst[17];
            uint64_t v231 = __dst[15];
            sub_1255C(v92, v93, v94, v221, v219, v217, v76);
            if (v105 >> 1 == 0xFFFFFFFF) {
              goto LABEL_215;
            }
            uint64_t v214 = v103;
            if (v105 >> 62 == 3)
            {
              uint64_t v106 = *(void *)(v102 + 16);
              if (!v106)
              {
                uint64_t v127 = v227;
                uint64_t v126 = v224;
                uint64_t v128 = v231;
                sub_12430(v102, v103, v224, v227, v231, v104, v105);
                sub_12430(v102, v103, v224, v227, v231, v104, v105);
                uint64_t v121 = _swiftEmptyArrayStorage;
                uint64_t v129 = _swiftEmptyArrayStorage[2];
                if (v129) {
                  goto LABEL_113;
                }
                goto LABEL_117;
              }
              uint64_t v107 = v102;
              uint64_t v109 = v224;
              uint64_t v108 = v227;
              uint64_t v110 = v103;
              uint64_t v111 = v102;
              unint64_t v112 = v105;
              uint64_t v113 = v104;
              uint64_t v114 = v231;
            }
            else
            {
              sub_12124(&qword_26D5D8);
              uint64_t v107 = swift_allocObject();
              *(_OWORD *)(v107 + 16) = xmmword_1FD2A0;
              *(void *)(v107 + 32) = v102;
              *(void *)(v107 + 40) = v103;
              uint64_t v109 = v224;
              uint64_t v108 = v227;
              *(void *)(v107 + 48) = v224;
              *(void *)(v107 + 56) = v227;
              uint64_t v110 = v103;
              uint64_t v111 = v102;
              unint64_t v112 = v105;
              uint64_t v113 = v104;
              uint64_t v114 = v231;
              *(void *)(v107 + 64) = v231;
              *(void *)(v107 + 72) = v104;
              uint64_t v106 = 1;
              *(unsigned char *)(v107 + 80) = v105 & 1;
            }
            uint64_t v115 = v111;
            uint64_t v116 = v110;
            uint64_t v117 = v114;
            uint64_t v208 = v113;
            unint64_t v118 = v112;
            sub_12430(v111, v110, v109, v108, v117, v113, v112);
            uint64_t v119 = v116;
            uint64_t v104 = v208;
            unint64_t v222 = v118;
            sub_12430(v115, v119, v109, v108, v231, v208, v118);
            swift_bridgeObjectRetain();
            v120 = (double *)(v107 + 80);
            uint64_t v121 = _swiftEmptyArrayStorage;
            do
            {
              if ((*(unsigned char *)v120 & 1) == 0)
              {
                double v122 = *(v120 - 2);
                double v123 = exp2(-*(v120 - 1) / *(v120 - 3));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v121 = sub_41BAC(0, v121[2] + 1, 1, v121);
                }
                unint64_t v125 = v121[2];
                unint64_t v124 = v121[3];
                if (v125 >= v124 >> 1) {
                  uint64_t v121 = sub_41BAC((void *)(v124 > 1), v125 + 1, 1, v121);
                }
                v121[2] = v125 + 1;
                *(double *)&v121[v125 + 4] = v122 * v123;
              }
              v120 += 7;
              --v106;
            }
            while (v106);
            swift_bridgeObjectRelease();
            uint64_t v102 = v115;
            uint64_t v126 = v224;
            uint64_t v127 = v227;
            uint64_t v128 = v231;
            unint64_t v105 = v222;
            uint64_t v129 = v121[2];
            if (v129)
            {
LABEL_113:
              uint64_t v130 = (double *)(v121 + 4);
              double v131 = 0.0;
              do
              {
                double v132 = *v130++;
                double v131 = v131 + v132;
                --v129;
              }
              while (v129);
              swift_bridgeObjectRelease();
              goto LABEL_118;
            }
LABEL_117:
            swift_bridgeObjectRelease();
            double v131 = 0.0;
LABEL_118:
            swift_bridgeObjectRelease();
            sub_1255C(v102, v214, v126, v127, v128, v104, v105);
            sub_124B4(v237);
            sub_124B4(__dst);
            uint64_t v9 = v206;
            if (v97 >= v131) {
              goto LABEL_78;
            }
            if (!v206) {
              goto LABEL_216;
            }
            Swift::Int v74 = v215 - 1;
            memcpy(__src, v212, 0x229uLL);
            memcpy(v212, v210, 0x230uLL);
            memcpy(v210, __src, 0x229uLL);
            if (v215 - 1 == v205)
            {
LABEL_78:
              Swift::Int v14 = v203 + 1;
              if (v203 + 1 == v199)
              {
                Swift::Int v14 = v199;
                break;
              }
              goto LABEL_79;
            }
          }
        }
      }
    }
    if (v14 < v205) {
      goto LABEL_205;
    }
    Swift::Int v204 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v10 = v197;
    }
    else {
      uint64_t v10 = sub_7004C(0, *((void *)v197 + 2) + 1, 1, v197);
    }
    unint64_t v134 = *((void *)v10 + 2);
    unint64_t v133 = *((void *)v10 + 3);
    unint64_t v135 = v134 + 1;
    Swift::Int v136 = v205;
    if (v134 >= v133 >> 1)
    {
      uint64_t v185 = sub_7004C((char *)(v133 > 1), v134 + 1, 1, v10);
      Swift::Int v136 = v205;
      uint64_t v10 = v185;
    }
    *((void *)v10 + 2) = v135;
    uint64_t v137 = v10 + 32;
    unint64_t v138 = &v10[16 * v134 + 32];
    *(void *)unint64_t v138 = v136;
    *((void *)v138 + 1) = v204;
    if (v134)
    {
      while (1)
      {
        unint64_t v139 = v135 - 1;
        if (v135 >= 4)
        {
          long long v144 = &v137[16 * v135];
          uint64_t v145 = *((void *)v144 - 8);
          uint64_t v146 = *((void *)v144 - 7);
          BOOL v150 = __OFSUB__(v146, v145);
          uint64_t v147 = v146 - v145;
          if (v150) {
            goto LABEL_193;
          }
          uint64_t v149 = *((void *)v144 - 6);
          uint64_t v148 = *((void *)v144 - 5);
          BOOL v150 = __OFSUB__(v148, v149);
          uint64_t v142 = v148 - v149;
          char v143 = v150;
          if (v150) {
            goto LABEL_194;
          }
          unint64_t v151 = v135 - 2;
          unint64_t v152 = &v137[16 * v135 - 32];
          uint64_t v154 = *(void *)v152;
          uint64_t v153 = *((void *)v152 + 1);
          BOOL v150 = __OFSUB__(v153, v154);
          uint64_t v155 = v153 - v154;
          if (v150) {
            goto LABEL_196;
          }
          BOOL v150 = __OFADD__(v142, v155);
          uint64_t v156 = v142 + v155;
          if (v150) {
            goto LABEL_199;
          }
          if (v156 >= v147)
          {
            uint64_t v174 = &v137[16 * v139];
            uint64_t v176 = *(void *)v174;
            uint64_t v175 = *((void *)v174 + 1);
            BOOL v150 = __OFSUB__(v175, v176);
            uint64_t v177 = v175 - v176;
            if (v150) {
              goto LABEL_203;
            }
            BOOL v167 = v142 < v177;
            goto LABEL_160;
          }
        }
        else
        {
          if (v135 != 3)
          {
            uint64_t v168 = *((void *)v10 + 4);
            uint64_t v169 = *((void *)v10 + 5);
            BOOL v150 = __OFSUB__(v169, v168);
            uint64_t v161 = v169 - v168;
            char v162 = v150;
            goto LABEL_154;
          }
          uint64_t v141 = *((void *)v10 + 4);
          uint64_t v140 = *((void *)v10 + 5);
          BOOL v150 = __OFSUB__(v140, v141);
          uint64_t v142 = v140 - v141;
          char v143 = v150;
        }
        if (v143) {
          goto LABEL_195;
        }
        unint64_t v151 = v135 - 2;
        uint64_t v157 = &v137[16 * v135 - 32];
        uint64_t v159 = *(void *)v157;
        uint64_t v158 = *((void *)v157 + 1);
        BOOL v160 = __OFSUB__(v158, v159);
        uint64_t v161 = v158 - v159;
        char v162 = v160;
        if (v160) {
          goto LABEL_198;
        }
        uint64_t v163 = &v137[16 * v139];
        uint64_t v165 = *(void *)v163;
        uint64_t v164 = *((void *)v163 + 1);
        BOOL v150 = __OFSUB__(v164, v165);
        uint64_t v166 = v164 - v165;
        if (v150) {
          goto LABEL_201;
        }
        if (__OFADD__(v161, v166)) {
          goto LABEL_202;
        }
        if (v161 + v166 >= v142)
        {
          BOOL v167 = v142 < v166;
LABEL_160:
          if (v167) {
            unint64_t v139 = v151;
          }
          goto LABEL_162;
        }
LABEL_154:
        if (v162) {
          goto LABEL_197;
        }
        v170 = &v137[16 * v139];
        uint64_t v172 = *(void *)v170;
        uint64_t v171 = *((void *)v170 + 1);
        BOOL v150 = __OFSUB__(v171, v172);
        uint64_t v173 = v171 - v172;
        if (v150) {
          goto LABEL_200;
        }
        if (v173 < v161) {
          goto LABEL_171;
        }
LABEL_162:
        unint64_t v178 = v139 - 1;
        if (v139 - 1 >= v135)
        {
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
          goto LABEL_212;
        }
        if (!v9) {
          goto LABEL_217;
        }
        char v179 = v10;
        int v180 = &v137[16 * v178];
        uint64_t v181 = *(void *)v180;
        int64_t v182 = &v137[16 * v139];
        uint64_t v183 = *((void *)v182 + 1);
        sub_5DFAC((char *)(v9 + 560 * *(void *)v180), (char *)(v9 + 560 * *(void *)v182), v9 + 560 * v183, v201);
        if (v1) {
          goto LABEL_186;
        }
        if (v183 < v181) {
          goto LABEL_190;
        }
        if (v139 > *((void *)v179 + 2)) {
          goto LABEL_191;
        }
        *(void *)int v180 = v181;
        *(void *)&v137[16 * v178 + 8] = v183;
        unint64_t v184 = *((void *)v179 + 2);
        if (v139 >= v184) {
          goto LABEL_192;
        }
        unint64_t v135 = v184 - 1;
        memmove(&v137[16 * v139], v182 + 16, 16 * (v184 - 1 - v139));
        uint64_t v10 = v179;
        *((void *)v179 + 2) = v184 - 1;
        if (v184 <= 2) {
          goto LABEL_171;
        }
      }
    }
    unint64_t v135 = 1;
LABEL_171:
    Swift::Int v11 = v200;
    Swift::Int v8 = v204;
    if (v204 >= v200) {
      goto LABEL_175;
    }
  }
  while (1)
  {
    Swift::Int v202 = v14;
    memcpy(v234, (const void *)(v9 + 560 * v14), 0x229uLL);
    memcpy(__src, (const void *)(v9 + 560 * v12), 0x229uLL);
    unint64_t v15 = __src[17];
    if ((unint64_t)__src[17] >> 1 == 0xFFFFFFFF) {
      goto LABEL_218;
    }
    uint64_t v16 = __src[11];
    uint64_t v17 = __src[12];
    uint64_t v18 = __src[13];
    uint64_t v19 = __src[14];
    uint64_t v20 = __src[15];
    uint64_t v21 = __src[16];
    uint64_t v232 = __src[16];
    uint64_t v218 = __src[13];
    uint64_t v220 = __src[15];
    uint64_t v216 = __src[12];
    if ((unint64_t)__src[17] >> 62 == 3)
    {
      uint64_t v22 = *(void *)(__src[11] + 16);
      if (!v22)
      {
        uint64_t v36 = __src[13];
        uint64_t v31 = __src[14];
        uint64_t v37 = __src[16];
        sub_12430(__src[11], __src[12], __src[13], __src[14], __src[15], __src[16], __src[17]);
        sub_12430(v16, v17, v36, v31, v20, v37, v15);
        sub_12384(v234);
        sub_12384(__src);
        char v26 = _swiftEmptyArrayStorage;
        uint64_t v32 = _swiftEmptyArrayStorage[2];
        if (!v32) {
          goto LABEL_34;
        }
        goto LABEL_30;
      }
      uint64_t v23 = __src[11];
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v24 = swift_allocObject();
      uint64_t v21 = v232;
      uint64_t v20 = v220;
      uint64_t v23 = v24;
      *(_OWORD *)(v24 + 16) = xmmword_1FD2A0;
      *(void *)(v24 + 32) = v16;
      *(void *)(v24 + 40) = v17;
      *(void *)(v24 + 48) = v18;
      *(void *)(v24 + 56) = v19;
      *(void *)(v24 + 64) = v220;
      *(void *)(v24 + 72) = v232;
      uint64_t v22 = 1;
      *(unsigned char *)(v24 + 80) = v15 & 1;
    }
    sub_12430(v16, v17, v18, v19, v20, v21, v15);
    uint64_t v228 = v19;
    sub_12430(v16, v17, v18, v19, v20, v232, v15);
    sub_12384(v234);
    sub_12384(__src);
    swift_bridgeObjectRetain();
    uint64_t v25 = (double *)(v23 + 80);
    char v26 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v25 & 1) == 0)
      {
        double v27 = *(v25 - 2);
        double v28 = exp2(-*(v25 - 1) / *(v25 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v26 = sub_41BAC(0, v26[2] + 1, 1, v26);
        }
        unint64_t v30 = v26[2];
        unint64_t v29 = v26[3];
        if (v30 >= v29 >> 1) {
          char v26 = sub_41BAC((void *)(v29 > 1), v30 + 1, 1, v26);
        }
        _OWORD v26[2] = v30 + 1;
        *(double *)&v26[v30 + 4] = v27 * v28;
      }
      v25 += 7;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v31 = v228;
    uint64_t v32 = v26[2];
    if (!v32)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      double v34 = 0.0;
      goto LABEL_35;
    }
LABEL_30:
    unint64_t v33 = (double *)(v26 + 4);
    double v34 = 0.0;
    do
    {
      double v35 = *v33++;
      double v34 = v34 + v35;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v39 = v234[11];
    uint64_t v38 = v234[12];
    uint64_t v225 = v234[13];
    uint64_t v229 = v234[14];
    uint64_t v40 = v234[16];
    uint64_t v223 = v234[15];
    unint64_t v41 = v234[17];
    sub_1255C(v16, v216, v218, v31, v220, v232, v15);
    if (v41 >> 1 == 0xFFFFFFFF) {
      goto LABEL_219;
    }
    uint64_t v213 = v38;
    if (v41 >> 62 == 3)
    {
      uint64_t v42 = v38;
      uint64_t v43 = *(void *)(v39 + 16);
      uint64_t v44 = v225;
      if (!v43)
      {
        uint64_t v62 = v229;
        uint64_t v63 = v223;
        sub_12430(v39, v42, v225, v229, v223, v40, v41);
        sub_12430(v39, v42, v225, v229, v223, v40, v41);
        uint64_t v57 = _swiftEmptyArrayStorage;
        uint64_t v64 = _swiftEmptyArrayStorage[2];
        if (!v64) {
          goto LABEL_53;
        }
        goto LABEL_49;
      }
      uint64_t v45 = v39;
      uint64_t v46 = v229;
      uint64_t v47 = v40;
      uint64_t v48 = v39;
      unint64_t v49 = v41;
      uint64_t v50 = v223;
      uint64_t v51 = v225;
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_1FD2A0;
      *(void *)(v45 + 32) = v39;
      *(void *)(v45 + 40) = v38;
      uint64_t v51 = v225;
      uint64_t v46 = v229;
      *(void *)(v45 + 48) = v225;
      *(void *)(v45 + 56) = v229;
      uint64_t v47 = v40;
      uint64_t v48 = v39;
      unint64_t v49 = v41;
      uint64_t v50 = v223;
      *(void *)(v45 + 64) = v223;
      *(void *)(v45 + 72) = v40;
      uint64_t v43 = 1;
      *(unsigned char *)(v45 + 80) = v41 & 1;
      uint64_t v42 = v38;
    }
    uint64_t v52 = v48;
    uint64_t v53 = v46;
    v209 = (void *)v49;
    uint64_t v211 = (void *)v47;
    sub_12430(v48, v42, v51, v46, v50, v47, v49);
    uint64_t v233 = v52;
    uint64_t v54 = v52;
    uint64_t v55 = v53;
    unint64_t v41 = (unint64_t)v209;
    uint64_t v40 = (uint64_t)v211;
    sub_12430(v54, v42, v51, v55, v50, (uint64_t)v211, (unint64_t)v209);
    swift_bridgeObjectRetain();
    uint64_t v56 = (double *)(v45 + 80);
    uint64_t v57 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v56 & 1) == 0)
      {
        double v58 = *(v56 - 2);
        double v59 = exp2(-*(v56 - 1) / *(v56 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v57 = sub_41BAC(0, v57[2] + 1, 1, v57);
        }
        unint64_t v61 = v57[2];
        unint64_t v60 = v57[3];
        if (v61 >= v60 >> 1) {
          uint64_t v57 = sub_41BAC((void *)(v60 > 1), v61 + 1, 1, v57);
        }
        v57[2] = v61 + 1;
        *(double *)&v57[v61 + 4] = v58 * v59;
      }
      v56 += 7;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    uint64_t v44 = v225;
    uint64_t v62 = v229;
    uint64_t v63 = v223;
    uint64_t v39 = v233;
    uint64_t v64 = v57[2];
    if (!v64)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      double v66 = 0.0;
      goto LABEL_54;
    }
LABEL_49:
    uint64_t v65 = (double *)(v57 + 4);
    double v66 = 0.0;
    do
    {
      double v67 = *v65++;
      double v66 = v66 + v67;
      --v64;
    }
    while (v64);
    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
    sub_1255C(v39, v213, v44, v62, v63, v40, v41);
    sub_124B4(__src);
    sub_124B4(v234);
    if (((v207 ^ (v34 >= v66)) & 1) == 0)
    {
      Swift::Int v11 = v200;
      uint64_t v9 = v206;
      Swift::Int v14 = v202;
      goto LABEL_59;
    }
    Swift::Int v11 = v200;
    uint64_t v9 = v206;
    if (v202 == v198) {
      break;
    }
    Swift::Int v12 = v202;
    Swift::Int v14 = v202 + 1;
  }
  Swift::Int v14 = v200;
  if (!v207) {
    goto LABEL_69;
  }
LABEL_60:
  if (v14 >= v205)
  {
    if (v205 < v14)
    {
      uint64_t v68 = (char *)(v193 + 560 * v14);
      Swift::Int v69 = v14;
      Swift::Int v70 = v205;
      uint64_t v71 = (char *)(v9 + 560 * v205);
      while (1)
      {
        if (v70 != --v69)
        {
          if (!v9) {
            goto LABEL_220;
          }
          Swift::Int v72 = v14;
          memcpy(__src, v71, 0x229uLL);
          memmove(v71, v68, 0x230uLL);
          memcpy(v68, __src, 0x229uLL);
          Swift::Int v11 = v200;
          Swift::Int v14 = v72;
        }
        ++v70;
        v68 -= 560;
        v71 += 560;
        if (v70 >= v69) {
          goto LABEL_69;
        }
      }
    }
    goto LABEL_69;
  }
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_5D0B8(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v92 = *v2;
      uint64_t v93 = *v2 + 72;
      uint64_t v94 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        double v96 = *(double *)(v92 + 80 * i + 72);
        uint64_t v97 = v94;
        uint64_t v98 = v93;
        do
        {
          if (*(double *)v98 >= v96) {
            break;
          }
          if (!v92) {
            goto LABEL_143;
          }
          uint64_t v99 = (_OWORD *)(v98 + 8);
          uint64_t v100 = *(void *)(v98 + 8);
          char v101 = *(unsigned char *)(v98 + 16);
          Swift::Int result = *(void *)(v98 + 24);
          char v102 = *(unsigned char *)(v98 + 32);
          uint64_t v103 = *(void *)(v98 + 40);
          char v104 = *(unsigned char *)(v98 + 48);
          uint64_t v105 = *(void *)(v98 + 56);
          long long v106 = *(_OWORD *)(v98 + 64);
          long long v107 = *(_OWORD *)(v98 - 24);
          *(_OWORD *)(v98 + 40) = *(_OWORD *)(v98 - 40);
          *(_OWORD *)(v98 + 56) = v107;
          *(_OWORD *)(v98 + 72) = *(_OWORD *)(v98 - 8);
          *(_OWORD *)(v98 - 16) = v106;
          long long v109 = *(_OWORD *)(v98 - 72);
          long long v108 = *(_OWORD *)(v98 - 56);
          *(void *)(v98 - 72) = v100;
          *(unsigned char *)(v98 - 64) = v101;
          *(void *)(v98 - 56) = result;
          *(unsigned char *)(v98 - 48) = v102;
          *(void *)(v98 - 40) = v103;
          *(unsigned char *)(v98 - 32) = v104;
          *(void *)(v98 - 24) = v105;
          *(double *)uint64_t v98 = v96;
          v98 -= 80;
          *uint64_t v99 = v109;
          v99[1] = v108;
        }
        while (!__CFADD__(v97++, 1));
        v93 += 80;
        --v94;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  Swift::Int v122 = result;
  uint64_t v132 = v1;
  if (v3 < 2)
  {
    Swift::Int v8 = _swiftEmptyArrayStorage;
    uint64_t v130 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v111 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      uint64_t v121 = v8;
      if (v11 >= 2)
      {
        uint64_t v112 = *v2;
        do
        {
          unint64_t v113 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v112) {
            goto LABEL_147;
          }
          uint64_t v114 = v111;
          uint64_t v115 = *(void *)&v111[16 * v113 + 32];
          uint64_t v116 = *(void *)&v111[16 * v11 + 24];
          sub_5E8F4((double *)(v112 + 80 * v115), (double *)(v112 + 80 * *(void *)&v111[16 * v11 + 16]), v112 + 80 * v116, v130);
          if (v132) {
            break;
          }
          if (v116 < v115) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v114 = sub_70B24((uint64_t)v114);
          }
          if (v113 >= *((void *)v114 + 2)) {
            goto LABEL_136;
          }
          uint64_t v117 = &v114[16 * v113 + 32];
          *(void *)uint64_t v117 = v115;
          *((void *)v117 + 1) = v116;
          unint64_t v118 = *((void *)v114 + 2);
          if (v11 > v118) {
            goto LABEL_137;
          }
          memmove(&v114[16 * v11 + 16], &v114[16 * v11 + 32], 16 * (v118 - v11));
          uint64_t v111 = v114;
          *((void *)v114 + 2) = v118 - 1;
          unint64_t v11 = v118 - 1;
        }
        while (v118 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      v121[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v121 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    uint64_t v121 = (void *)v7;
    uint64_t v130 = (double *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  v120 = v2;
  uint64_t v10 = *v2;
  double v131 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v123 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    if (v9 < v3)
    {
      double v13 = *(double *)(v10 + 80 * v9 + 72);
      double v14 = *(double *)(v10 + 80 * v12 + 72);
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        unint64_t v15 = (double *)(v10 + 232 + 80 * v12);
        double v16 = v13;
        while (1)
        {
          double v17 = v16;
          double v16 = *v15;
          if (v14 < v13 == v17 >= *v15) {
            break;
          }
          ++v9;
          v15 += 10;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          uint64_t v18 = 80 * v9;
          uint64_t v19 = 80 * v12;
          Swift::Int v20 = v9;
          Swift::Int v119 = v12;
          do
          {
            if (v12 != --v20)
            {
              if (!v10) {
                goto LABEL_146;
              }
              uint64_t v21 = *(void *)(v10 + v19);
              uint64_t v22 = v10 + v18;
              char v23 = *(unsigned char *)(v10 + v19 + 8);
              uint64_t v129 = *(void *)(v10 + v19 + 16);
              char v128 = *(unsigned char *)(v10 + v19 + 24);
              uint64_t v127 = *(void *)(v10 + v19 + 32);
              char v126 = *(unsigned char *)(v10 + v19 + 40);
              uint64_t v125 = *(void *)(v10 + v19 + 48);
              uint64_t v24 = *(void *)(v10 + v19 + 72);
              long long v124 = *(_OWORD *)(v10 + v19 + 56);
              memmove((void *)(v10 + v19), (const void *)(v10 + v18 - 80), 0x50uLL);
              *(void *)(v22 - 80) = v21;
              *(unsigned char *)(v22 - 72) = v23;
              *(void *)(v22 - 64) = v129;
              *(unsigned char *)(v22 - 56) = v128;
              *(void *)(v22 - 48) = v127;
              *(unsigned char *)(v22 - 40) = v126;
              *(void *)(v22 - 32) = v125;
              *(_OWORD *)(v22 - 24) = v124;
              *(void *)(v22 - 8) = v24;
            }
            ++v12;
            v18 -= 80;
            v19 += 80;
          }
          while (v12 < v20);
          Swift::Int v3 = v123;
          Swift::Int v12 = v119;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v122) {
      goto LABEL_39;
    }
    Swift::Int v25 = v12 + v122;
    if (__OFADD__(v12, v122)) {
      goto LABEL_141;
    }
    if (v25 >= v3) {
      Swift::Int v25 = v3;
    }
    if (v25 < v12) {
      break;
    }
    if (v9 != v25)
    {
      uint64_t v76 = v10 - 8 + 80 * v9;
      char v26 = v131;
      do
      {
        double v77 = *(double *)(v10 + 80 * v9 + 72);
        Swift::Int v78 = v12;
        uint64_t v79 = v76;
        do
        {
          if (*(double *)v79 >= v77) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          uint64_t v80 = (_OWORD *)(v79 + 8);
          uint64_t v81 = *(void *)(v79 + 8);
          char v82 = *(unsigned char *)(v79 + 16);
          uint64_t v83 = *(void *)(v79 + 24);
          char v84 = *(unsigned char *)(v79 + 32);
          uint64_t v85 = *(void *)(v79 + 40);
          char v86 = *(unsigned char *)(v79 + 48);
          uint64_t v87 = *(void *)(v79 + 56);
          long long v88 = *(_OWORD *)(v79 + 64);
          long long v89 = *(_OWORD *)(v79 - 24);
          *(_OWORD *)(v79 + 40) = *(_OWORD *)(v79 - 40);
          *(_OWORD *)(v79 + 56) = v89;
          *(_OWORD *)(v79 + 72) = *(_OWORD *)(v79 - 8);
          *(_OWORD *)(v79 - 16) = v88;
          long long v91 = *(_OWORD *)(v79 - 72);
          long long v90 = *(_OWORD *)(v79 - 56);
          *(void *)(v79 - 72) = v81;
          *(unsigned char *)(v79 - 64) = v82;
          *(void *)(v79 - 56) = v83;
          *(unsigned char *)(v79 - 48) = v84;
          *(void *)(v79 - 40) = v85;
          *(unsigned char *)(v79 - 32) = v86;
          *(void *)(v79 - 24) = v87;
          *(double *)uint64_t v79 = v77;
          v79 -= 80;
          ++v78;
          _OWORD *v80 = v91;
          v80[1] = v90;
        }
        while (v9 != v78);
        ++v9;
        v76 += 80;
      }
      while (v9 != v25);
      Swift::Int v9 = v25;
      if (v25 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    char v26 = v131;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v26 = sub_7004C(0, *((void *)v26 + 2) + 1, 1, v26);
    }
    unint64_t v28 = *((void *)v26 + 2);
    unint64_t v27 = *((void *)v26 + 3);
    unint64_t v11 = v28 + 1;
    if (v28 >= v27 >> 1) {
      char v26 = sub_7004C((char *)(v27 > 1), v28 + 1, 1, v26);
    }
    *((void *)v26 + 2) = v11;
    unint64_t v29 = v26 + 32;
    unint64_t v30 = &v26[16 * v28 + 32];
    *(void *)unint64_t v30 = v12;
    *((void *)v30 + 1) = v9;
    double v131 = v26;
    if (v28)
    {
      while (1)
      {
        unint64_t v31 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v36 = &v29[16 * v11];
          uint64_t v37 = *((void *)v36 - 8);
          uint64_t v38 = *((void *)v36 - 7);
          BOOL v42 = __OFSUB__(v38, v37);
          uint64_t v39 = v38 - v37;
          if (v42) {
            goto LABEL_122;
          }
          uint64_t v41 = *((void *)v36 - 6);
          uint64_t v40 = *((void *)v36 - 5);
          BOOL v42 = __OFSUB__(v40, v41);
          uint64_t v34 = v40 - v41;
          char v35 = v42;
          if (v42) {
            goto LABEL_123;
          }
          unint64_t v43 = v11 - 2;
          uint64_t v44 = &v29[16 * v11 - 32];
          uint64_t v46 = *(void *)v44;
          uint64_t v45 = *((void *)v44 + 1);
          BOOL v42 = __OFSUB__(v45, v46);
          uint64_t v47 = v45 - v46;
          if (v42) {
            goto LABEL_125;
          }
          BOOL v42 = __OFADD__(v34, v47);
          uint64_t v48 = v34 + v47;
          if (v42) {
            goto LABEL_128;
          }
          if (v48 >= v39)
          {
            double v66 = &v29[16 * v31];
            uint64_t v68 = *(void *)v66;
            uint64_t v67 = *((void *)v66 + 1);
            BOOL v42 = __OFSUB__(v67, v68);
            uint64_t v69 = v67 - v68;
            if (v42) {
              goto LABEL_132;
            }
            BOOL v59 = v34 < v69;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v60 = *((void *)v26 + 4);
            uint64_t v61 = *((void *)v26 + 5);
            BOOL v42 = __OFSUB__(v61, v60);
            uint64_t v53 = v61 - v60;
            char v54 = v42;
            goto LABEL_70;
          }
          uint64_t v33 = *((void *)v26 + 4);
          uint64_t v32 = *((void *)v26 + 5);
          BOOL v42 = __OFSUB__(v32, v33);
          uint64_t v34 = v32 - v33;
          char v35 = v42;
        }
        if (v35) {
          goto LABEL_124;
        }
        unint64_t v43 = v11 - 2;
        unint64_t v49 = &v29[16 * v11 - 32];
        uint64_t v51 = *(void *)v49;
        uint64_t v50 = *((void *)v49 + 1);
        BOOL v52 = __OFSUB__(v50, v51);
        uint64_t v53 = v50 - v51;
        char v54 = v52;
        if (v52) {
          goto LABEL_127;
        }
        uint64_t v55 = &v29[16 * v31];
        uint64_t v57 = *(void *)v55;
        uint64_t v56 = *((void *)v55 + 1);
        BOOL v42 = __OFSUB__(v56, v57);
        uint64_t v58 = v56 - v57;
        if (v42) {
          goto LABEL_130;
        }
        if (__OFADD__(v53, v58)) {
          goto LABEL_131;
        }
        if (v53 + v58 >= v34)
        {
          BOOL v59 = v34 < v58;
LABEL_76:
          if (v59) {
            unint64_t v31 = v43;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v54) {
          goto LABEL_126;
        }
        uint64_t v62 = &v29[16 * v31];
        uint64_t v64 = *(void *)v62;
        uint64_t v63 = *((void *)v62 + 1);
        BOOL v42 = __OFSUB__(v63, v64);
        uint64_t v65 = v63 - v64;
        if (v42) {
          goto LABEL_129;
        }
        if (v65 < v53) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v70 = v31 - 1;
        if (v31 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        uint64_t v71 = &v29[16 * v70];
        uint64_t v72 = *(void *)v71;
        Swift::Int v73 = &v29[16 * v31];
        uint64_t v74 = *((void *)v73 + 1);
        sub_5E8F4((double *)(v10 + 80 * *(void *)v71), (double *)(v10 + 80 * *(void *)v73), v10 + 80 * v74, v130);
        if (v132) {
          goto LABEL_95;
        }
        if (v74 < v72) {
          goto LABEL_119;
        }
        if (v31 > *((void *)v131 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v71 = v72;
        *(void *)&v29[16 * v70 + 8] = v74;
        unint64_t v75 = *((void *)v131 + 2);
        if (v31 >= v75) {
          goto LABEL_121;
        }
        char v26 = v131;
        unint64_t v11 = v75 - 1;
        memmove(&v29[16 * v31], v73 + 16, 16 * (v75 - 1 - v31));
        *((void *)v131 + 2) = v75 - 1;
        if (v75 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v123;
    if (v9 >= v123)
    {
      Swift::Int v8 = v121;
      uint64_t v111 = v131;
      uint64_t v2 = v120;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_5D8DC(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v58 = result;
  if (a3 == a2) {
    return result;
  }
  uint64_t v63 = *a4;
LABEL_5:
  uint64_t v57 = a3;
  uint64_t v4 = a3;
  while (1)
  {
    uint64_t v5 = (char *)(v63 + 560 * v4);
    memcpy(__dst, v5, 0x229uLL);
    Swift::Int result = (uint64_t)memcpy(v77, v5 - 560, 0x229uLL);
    unint64_t v6 = v77[17];
    if ((unint64_t)v77[17] >> 1 == 0xFFFFFFFF) {
      break;
    }
    __src = (void *)(v63 + 560 * v4);
    uint64_t v62 = v5 - 560;
    uint64_t v7 = v77[11];
    uint64_t v8 = v77[12];
    uint64_t v9 = v77[13];
    uint64_t v10 = v77[14];
    uint64_t v11 = v77[15];
    uint64_t v12 = v77[16];
    uint64_t v73 = v77[15];
    uint64_t v66 = v77[12];
    uint64_t v67 = v77[16];
    uint64_t v64 = v4;
    uint64_t v65 = v77[13];
    if ((unint64_t)v77[17] >> 62 == 3)
    {
      uint64_t v13 = *(void *)(v77[11] + 16);
      if (!v13)
      {
        uint64_t v27 = v77[13];
        uint64_t v22 = v77[14];
        sub_12430(v77[11], v77[12], v77[13], v77[14], v77[15], v77[16], v77[17]);
        sub_12430(v7, v8, v27, v10, v73, v12, v6);
        sub_12384(__dst);
        sub_12384(v77);
        double v17 = _swiftEmptyArrayStorage;
        uint64_t v23 = _swiftEmptyArrayStorage[2];
        if (!v23) {
          goto LABEL_24;
        }
        goto LABEL_20;
      }
      uint64_t v14 = v77[11];
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v15 = swift_allocObject();
      uint64_t v12 = v67;
      uint64_t v11 = v73;
      uint64_t v14 = v15;
      *(_OWORD *)(v15 + 16) = xmmword_1FD2A0;
      *(void *)(v15 + 32) = v7;
      *(void *)(v15 + 40) = v8;
      *(void *)(v15 + 48) = v9;
      *(void *)(v15 + 56) = v10;
      *(void *)(v15 + 64) = v73;
      *(void *)(v15 + 72) = v67;
      uint64_t v13 = 1;
      *(unsigned char *)(v15 + 80) = v6 & 1;
    }
    sub_12430(v7, v8, v9, v10, v11, v12, v6);
    uint64_t v71 = v10;
    sub_12430(v7, v8, v9, v10, v73, v12, v6);
    sub_12384(__dst);
    sub_12384(v77);
    swift_bridgeObjectRetain();
    double v16 = (double *)(v14 + 80);
    double v17 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v16 & 1) == 0)
      {
        double v18 = *(v16 - 2);
        double v19 = exp2(-*(v16 - 1) / *(v16 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v17 = sub_41BAC(0, v17[2] + 1, 1, v17);
        }
        unint64_t v21 = v17[2];
        unint64_t v20 = v17[3];
        if (v21 >= v20 >> 1) {
          double v17 = sub_41BAC((void *)(v20 > 1), v21 + 1, 1, v17);
        }
        void v17[2] = v21 + 1;
        *(double *)&v17[v21 + 4] = v18 * v19;
      }
      v16 += 7;
      --v13;
    }
    while (v13);
    swift_bridgeObjectRelease();
    uint64_t v22 = v71;
    uint64_t v23 = v17[2];
    if (!v23)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      double v25 = 0.0;
      goto LABEL_25;
    }
LABEL_20:
    uint64_t v24 = (double *)(v17 + 4);
    double v25 = 0.0;
    do
    {
      double v26 = *v24++;
      double v25 = v25 + v26;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
LABEL_25:
    swift_bridgeObjectRelease();
    uint64_t v28 = __dst[11];
    uint64_t v70 = __dst[14];
    uint64_t v72 = __dst[12];
    uint64_t v68 = __dst[15];
    uint64_t v69 = __dst[13];
    uint64_t v29 = __dst[16];
    unint64_t v30 = __dst[17];
    Swift::Int result = sub_1255C(v7, v66, v65, v22, v73, v67, v6);
    if (v30 >> 1 == 0xFFFFFFFF) {
      goto LABEL_49;
    }
    if (v30 >> 62 == 3)
    {
      uint64_t v31 = *(void *)(v28 + 16);
      uint64_t v32 = v72;
      uint64_t v33 = v69;
      if (!v31)
      {
        uint64_t v50 = v70;
        uint64_t v51 = v68;
        sub_12430(v28, v72, v69, v70, v68, v29, v30);
        sub_12430(v28, v72, v69, v70, v68, v29, v30);
        uint64_t v45 = _swiftEmptyArrayStorage;
        uint64_t v52 = _swiftEmptyArrayStorage[2];
        if (!v52) {
          goto LABEL_43;
        }
        goto LABEL_39;
      }
      uint64_t v34 = v28;
      uint64_t v35 = v70;
      uint64_t v36 = v29;
      uint64_t v37 = v28;
      unint64_t v38 = v30;
      uint64_t v39 = v68;
      uint64_t v40 = v69;
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v34 = swift_allocObject();
      *(_OWORD *)(v34 + 16) = xmmword_1FD2A0;
      uint64_t v35 = v70;
      uint64_t v32 = v72;
      *(void *)(v34 + 32) = v28;
      *(void *)(v34 + 40) = v72;
      uint64_t v40 = v69;
      *(void *)(v34 + 48) = v69;
      *(void *)(v34 + 56) = v70;
      uint64_t v36 = v29;
      uint64_t v37 = v28;
      unint64_t v38 = v30;
      uint64_t v39 = v68;
      *(void *)(v34 + 64) = v68;
      *(void *)(v34 + 72) = v29;
      uint64_t v31 = 1;
      *(unsigned char *)(v34 + 80) = v30 & 1;
    }
    uint64_t v41 = v37;
    uint64_t v42 = v35;
    unint64_t v59 = v38;
    uint64_t v60 = v36;
    sub_12430(v37, v32, v40, v35, v39, v36, v38);
    uint64_t v74 = v41;
    uint64_t v43 = v42;
    unint64_t v30 = v59;
    uint64_t v29 = v60;
    sub_12430(v41, v32, v40, v43, v39, v60, v59);
    swift_bridgeObjectRetain();
    uint64_t v44 = (double *)(v34 + 80);
    uint64_t v45 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v44 & 1) == 0)
      {
        double v46 = *(v44 - 2);
        double v47 = exp2(-*(v44 - 1) / *(v44 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v45 = sub_41BAC(0, v45[2] + 1, 1, v45);
        }
        unint64_t v49 = v45[2];
        unint64_t v48 = v45[3];
        if (v49 >= v48 >> 1) {
          uint64_t v45 = sub_41BAC((void *)(v48 > 1), v49 + 1, 1, v45);
        }
        v45[2] = v49 + 1;
        *(double *)&v45[v49 + 4] = v46 * v47;
      }
      v44 += 7;
      --v31;
    }
    while (v31);
    swift_bridgeObjectRelease();
    uint64_t v50 = v70;
    uint64_t v32 = v72;
    uint64_t v51 = v68;
    uint64_t v33 = v69;
    uint64_t v28 = v74;
    uint64_t v52 = v45[2];
    if (!v52)
    {
LABEL_43:
      swift_bridgeObjectRelease();
      double v54 = 0.0;
      goto LABEL_44;
    }
LABEL_39:
    uint64_t v53 = (double *)(v45 + 4);
    double v54 = 0.0;
    do
    {
      double v55 = *v53++;
      double v54 = v54 + v55;
      --v52;
    }
    while (v52);
    swift_bridgeObjectRelease();
LABEL_44:
    swift_bridgeObjectRelease();
    sub_1255C(v28, v32, v33, v50, v51, v29, v30);
    sub_124B4(v77);
    Swift::Int result = (uint64_t)sub_124B4(__dst);
    if (v25 < v54)
    {
      if (!v63) {
        goto LABEL_50;
      }
      uint64_t v4 = v64 - 1;
      memcpy(v75, __src, sizeof(v75));
      memcpy(__src, v62, 0x230uLL);
      Swift::Int result = (uint64_t)memcpy(v62, v75, 0x229uLL);
      if (v64 - 1 != v58) {
        continue;
      }
    }
    a3 = v57 + 1;
    if (v57 + 1 == a2) {
      return result;
    }
    goto LABEL_5;
  }
  __break(1u);
LABEL_49:
  __break(1u);
LABEL_50:
  __break(1u);
  return result;
}

uint64_t sub_5DFAC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  unint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 560;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 560;
  uint64_t v97 = __src;
  double v96 = __dst;
  if (v8 >= v10)
  {
    if (v9 < -559) {
      goto LABEL_74;
    }
    uint64_t v38 = 560 * v10;
    if (__dst != a2 || &a2[v38] <= __dst) {
      memmove(__dst, a2, 560 * v10);
    }
    uint64_t v39 = &v4[v38];
    uint64_t v95 = &v4[v38];
    uint64_t v97 = v5;
    if (v6 >= v5 || v9 < 560) {
      goto LABEL_69;
    }
    long long v88 = v4;
    uint64_t v40 = (char *)(a3 - 560);
    long long v90 = v6;
    while (1)
    {
      memcpy(__dsta, v39 - 560, 0x229uLL);
      uint64_t v73 = v5 - 560;
      memcpy(v94, v5 - 560, 0x229uLL);
      unint64_t v41 = v94[17];
      if (v94[17] >> 1 == 0xFFFFFFFFLL) {
        goto LABEL_72;
      }
      unint64_t v75 = v40 + 560;
      double v77 = v40;
      uint64_t v42 = v94[11];
      uint64_t v43 = v94[12];
      uint64_t v44 = v94[13];
      uint64_t v45 = (void *)v94[14];
      uint64_t v46 = v94[15];
      uint64_t v47 = v94[16];
      uint64_t v72 = v39 - 560;
      uint64_t v92 = v5;
      unint64_t v78 = (unint64_t)v39;
      if (v94[17] >> 62 == 3)
      {
        uint64_t v51 = v94[11];
      }
      else
      {
        uint64_t v48 = v94[15];
        unint64_t v49 = v94[17];
        sub_12124(&qword_26D5D8);
        uint64_t v50 = swift_allocObject();
        unint64_t v41 = v49;
        uint64_t v46 = v48;
        uint64_t v51 = v50;
        *(_OWORD *)(v50 + 16) = xmmword_1FD2A0;
        *(void *)(v50 + 32) = v42;
        *(void *)(v50 + 40) = v43;
        *(void *)(v50 + 48) = v44;
        *(void *)(v50 + 56) = v45;
        *(void *)(v50 + 64) = v46;
        *(void *)(v50 + 72) = v47;
        *(unsigned char *)(v50 + 80) = v49 & 1;
      }
      uint64_t v52 = v43;
      uint64_t v53 = v43;
      uint64_t v54 = (uint64_t)v45;
      __srcb = v45;
      uint64_t v55 = v46;
      unint64_t v56 = v41;
      sub_12430(v42, v53, v44, v54, v46, v47, v41);
      sub_12430(v42, v52, v44, (uint64_t)__srcb, v55, v47, v56);
      sub_12384(__dsta);
      sub_12384(v94);
      double v84 = COERCE_DOUBLE(Array<A>.affinity.getter(v51));
      char v81 = v57;
      swift_bridgeObjectRelease();
      sub_1255C(v42, v52, v44, (uint64_t)__srcb, v55, v47, v56);
      if (v81) {
        double v58 = 0.0;
      }
      else {
        double v58 = v84;
      }
      unint64_t v59 = __dsta[17];
      if (__dsta[17] >> 1 == 0xFFFFFFFFLL)
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      uint64_t v61 = __dsta[11];
      uint64_t v60 = __dsta[12];
      uint64_t v62 = __dsta[13];
      uint64_t v63 = __dsta[14];
      uint64_t v64 = __dsta[15];
      uint64_t v65 = __dsta[16];
      if (__dsta[17] >> 62 == 3)
      {
        uint64_t v66 = __dsta[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_1FD2A0;
        *(void *)(v66 + 32) = v61;
        *(void *)(v66 + 40) = v60;
        *(void *)(v66 + 48) = v62;
        *(void *)(v66 + 56) = v63;
        *(void *)(v66 + 64) = v64;
        *(void *)(v66 + 72) = v65;
        *(unsigned char *)(v66 + 80) = v59 & 1;
      }
      sub_1244C();
      sub_1244C();
      double v85 = COERCE_DOUBLE(Array<A>.affinity.getter(v66));
      char v68 = v67;
      swift_bridgeObjectRelease();
      sub_1255C(v61, v60, v62, v63, v64, v65, v59);
      sub_124B4(v94);
      sub_124B4(__dsta);
      if (v68) {
        BOOL v69 = v58 < 0.0;
      }
      else {
        BOOL v69 = v58 < v85;
      }
      uint64_t v39 = (char *)v78;
      if (v69)
      {
        if (v75 != v92)
        {
          uint64_t v70 = v73;
          uint64_t v5 = v73;
LABEL_63:
          memmove(v77, v70, 0x230uLL);
          goto LABEL_64;
        }
        uint64_t v70 = v73;
        uint64_t v5 = v73;
        if (v77 >= v92) {
          goto LABEL_63;
        }
      }
      else
      {
        uint64_t v5 = v92;
        if (v75 != (char *)v78)
        {
          uint64_t v39 = v72;
          uint64_t v70 = v72;
          goto LABEL_63;
        }
        uint64_t v70 = v72;
        uint64_t v39 = v72;
        if ((unint64_t)v77 >= v78) {
          goto LABEL_63;
        }
      }
LABEL_64:
      if (v39 <= v88 || v5 <= v90)
      {
        uint64_t v95 = v39;
        uint64_t v97 = v5;
        goto LABEL_69;
      }
      uint64_t v40 = v77 - 560;
    }
  }
  if (v7 < -559)
  {
LABEL_74:
    sub_1FC2B0();
    __break(1u);
    JUMPOUT(0x5E8B4);
  }
  size_t v11 = 560 * v8;
  if (__dst != __src || &__src[v11] <= __dst) {
    memmove(__dst, __src, v11);
  }
  uint64_t v74 = &v4[v11];
  uint64_t v95 = &v4[v11];
  if ((unint64_t)v5 < a3 && v7 >= 560)
  {
    uint64_t v12 = v4;
    while (1)
    {
      long long v89 = v6;
      long long v91 = v5;
      memcpy(__dsta, v5, 0x229uLL);
      memcpy(v94, v12, 0x229uLL);
      unint64_t v13 = v94[17];
      if (v94[17] >> 1 == 0xFFFFFFFFLL)
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      uint64_t v14 = v94[11];
      uint64_t v15 = v94[12];
      uint64_t v16 = v94[13];
      uint64_t v17 = v94[14];
      uint64_t v18 = v94[15];
      uint64_t v19 = v94[16];
      uint64_t v87 = v4;
      __srca = v12;
      if (v94[17] >> 62 == 3)
      {
        uint64_t v20 = v94[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1FD2A0;
        *(void *)(v20 + 32) = v14;
        *(void *)(v20 + 40) = v15;
        *(void *)(v20 + 48) = v16;
        *(void *)(v20 + 56) = v17;
        *(void *)(v20 + 64) = v18;
        *(void *)(v20 + 72) = v19;
        *(unsigned char *)(v20 + 80) = v13 & 1;
      }
      uint64_t v86 = v14;
      sub_12430(v14, v15, v16, v17, v18, v19, v13);
      sub_12430(v14, v15, v16, v17, v18, v19, v13);
      sub_12384(__dsta);
      sub_12384(v94);
      double v82 = COERCE_DOUBLE(Array<A>.affinity.getter(v20));
      char v22 = v21;
      swift_bridgeObjectRelease();
      sub_1255C(v86, v15, v16, v17, v18, v19, v13);
      if (v22) {
        double v23 = 0.0;
      }
      else {
        double v23 = v82;
      }
      unint64_t v24 = __dsta[17];
      if (__dsta[17] >> 1 == 0xFFFFFFFFLL) {
        goto LABEL_71;
      }
      uint64_t v26 = __dsta[11];
      uint64_t v25 = __dsta[12];
      uint64_t v27 = __dsta[13];
      uint64_t v28 = __dsta[14];
      uint64_t v29 = __dsta[15];
      uint64_t v30 = __dsta[16];
      if (__dsta[17] >> 62 == 3)
      {
        uint64_t v31 = __dsta[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1FD2A0;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v25;
        *(void *)(v31 + 48) = v27;
        *(void *)(v31 + 56) = v28;
        *(void *)(v31 + 64) = v29;
        *(void *)(v31 + 72) = v30;
        *(unsigned char *)(v31 + 80) = v24 & 1;
      }
      sub_1244C();
      uint64_t v32 = v26;
      sub_1244C();
      double v83 = COERCE_DOUBLE(Array<A>.affinity.getter(v31));
      uint64_t v33 = v25;
      uint64_t v34 = v32;
      LOBYTE(v32) = v35;
      swift_bridgeObjectRelease();
      sub_1255C(v34, v33, v27, v28, v29, v30, v24);
      sub_124B4(v94);
      sub_124B4(__dsta);
      BOOL v36 = (v32 & 1) != 0 ? v23 < 0.0 : v23 < v83;
      uint64_t v5 = v91;
      uint64_t v12 = __srca;
      if (v36) {
        break;
      }
      uint64_t v4 = __srca + 560;
      uint64_t v37 = __srca;
      uint64_t v12 = __srca + 560;
      if (v89 != __srca) {
        goto LABEL_28;
      }
LABEL_29:
      unint64_t v6 = v89 + 560;
      if (v12 >= v74)
      {
        double v96 = v4;
        uint64_t v97 = v89 + 560;
        goto LABEL_69;
      }
      if ((unint64_t)v5 >= a3)
      {
        double v96 = v4;
        uint64_t v97 = v89 + 560;
        goto LABEL_69;
      }
    }
    uint64_t v37 = v91;
    uint64_t v5 = v91 + 560;
    uint64_t v4 = v87;
    if (v89 == v91) {
      goto LABEL_29;
    }
LABEL_28:
    memmove(v89, v37, 0x230uLL);
    goto LABEL_29;
  }
LABEL_69:
  sub_7034C((void **)&v97, &v96, &v95);
  return 1;
}

uint64_t sub_5E8F4(double *__dst, double *__src, unint64_t a3, double *a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = __src;
  int64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 80;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 80;
  double v23 = __dst;
  char v22 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -79)
    {
      if (a4 != __src || &__src[10 * v11] <= a4) {
        memmove(a4, __src, 80 * v11);
      }
      uint64_t v16 = &v4[10 * v11];
      char v21 = (char *)v16;
      double v23 = v6;
      if (v7 < v6 && v10 >= 80)
      {
        uint64_t v17 = (double *)(a3 - 80);
        do
        {
          uint64_t v18 = v17 + 10;
          if (*(v6 - 1) >= *(v16 - 1))
          {
            char v21 = (char *)(v16 - 10);
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              memmove(v17, v16 - 10, 0x50uLL);
            }
            uint64_t v19 = v6;
            v16 -= 10;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            uint64_t v19 = v6 - 10;
            if (v18 != v6 || v17 >= v6) {
              memmove(v17, v6 - 10, 0x50uLL);
            }
            double v23 = v6 - 10;
            if (v19 <= v7) {
              break;
            }
          }
          v17 -= 10;
          unint64_t v6 = v19;
        }
        while (v16 > v4);
      }
LABEL_40:
      sub_7041C((void **)&v23, (const void **)&v22, &v21);
      return 1;
    }
  }
  else if (v8 >= -79)
  {
    if (a4 != __dst || &__dst[10 * v9] <= a4) {
      memmove(a4, __dst, 80 * v9);
    }
    uint64_t v12 = &v4[10 * v9];
    char v21 = (char *)v12;
    if ((unint64_t)v6 < a3 && v8 >= 80)
    {
      unint64_t v13 = v4;
      while (1)
      {
        if (v13[9] >= v6[9])
        {
          uint64_t v4 = v13 + 10;
          uint64_t v15 = v13;
          uint64_t v14 = v6;
          if (v7 == v13)
          {
            v13 += 10;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 10;
          }
        }
        else
        {
          uint64_t v14 = v6 + 10;
          uint64_t v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        memmove(v7, v15, 0x50uLL);
LABEL_18:
        v7 += 10;
        if (v13 < v12)
        {
          unint64_t v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        char v22 = v4;
        double v23 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_5EBAC(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D7C8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unint64_t *sub_5EC0C(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    unint64_t v6 = sub_5ED70((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    unint64_t v6 = sub_5ED70((unint64_t *)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

unint64_t *sub_5ED70(unint64_t *result, uint64_t a2, uint64_t a3)
{
  uint64_t v42 = result;
  uint64_t v43 = 0;
  int64_t v3 = 0;
  uint64_t v6 = *(void *)(a3 + 56);
  uint64_t v4 = a3 + 56;
  uint64_t v5 = v6;
  uint64_t v7 = 1 << *(unsigned char *)(v4 - 24);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & v5;
  uint64_t v44 = v4;
  int64_t v45 = (unint64_t)(v7 + 63) >> 6;
  if ((v8 & v5) != 0) {
    goto LABEL_8;
  }
LABEL_11:
  int64_t v13 = v3 + 1;
  if (!__OFADD__(v3, 1))
  {
    if (v13 < v45)
    {
      unint64_t v14 = *(void *)(v44 + 8 * v13);
      ++v3;
      if (v14) {
        goto LABEL_24;
      }
      int64_t v3 = v13 + 1;
      if (v13 + 1 >= v45) {
        goto LABEL_44;
      }
      unint64_t v14 = *(void *)(v44 + 8 * v3);
      if (v14) {
        goto LABEL_24;
      }
      int64_t v3 = v13 + 2;
      if (v13 + 2 >= v45) {
        goto LABEL_44;
      }
      unint64_t v14 = *(void *)(v44 + 8 * v3);
      if (v14)
      {
LABEL_24:
        unint64_t v9 = (v14 - 1) & v14;
        for (unint64_t i = __clz(__rbit64(v14)) + (v3 << 6); ; unint64_t i = v11 | (v3 << 6))
        {
          uint64_t result = (unint64_t *)memcpy(__dst, (const void *)(*(void *)(a3 + 48) + 560 * i), 0x229uLL);
          unint64_t v16 = __dst[17];
          if ((unint64_t)__dst[17] >> 1 == 0xFFFFFFFF) {
            goto LABEL_48;
          }
          uint64_t v17 = __dst[11];
          uint64_t v18 = __dst[12];
          uint64_t v20 = __dst[13];
          uint64_t v19 = __dst[14];
          uint64_t v21 = __dst[15];
          uint64_t v22 = __dst[16];
          __dst[74] = __dst[18];
          uint64_t v53 = __dst[15];
          uint64_t v51 = __dst[13];
          uint64_t v52 = __dst[16];
          unint64_t v46 = i;
          if ((unint64_t)__dst[17] >> 62 == 3)
          {
            uint64_t v23 = *(void *)(__dst[11] + 16);
            if (!v23)
            {
              uint64_t v35 = __dst[14];
              uint64_t v39 = __dst[15];
              uint64_t v40 = __dst[16];
              sub_12430(__dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17]);
              sub_12430(v17, v18, v20, v35, v39, v40, v16);
              sub_12384(__dst);
              uint64_t v30 = _swiftEmptyArrayStorage;
              uint64_t v36 = _swiftEmptyArrayStorage[2];
              if (!v36) {
                goto LABEL_5;
              }
              goto LABEL_39;
            }
            unint64_t v48 = v9;
            int64_t v49 = v3;
            uint64_t v24 = __dst[11];
            uint64_t v25 = __dst[14];
          }
          else
          {
            unint64_t v48 = v9;
            int64_t v49 = v3;
            sub_12124(&qword_26D5D8);
            uint64_t v26 = swift_allocObject();
            uint64_t v22 = v52;
            uint64_t v21 = v53;
            uint64_t v24 = v26;
            *(_OWORD *)(v26 + 16) = xmmword_1FD2A0;
            *(void *)(v26 + 32) = v17;
            *(void *)(v26 + 40) = v18;
            *(void *)(v26 + 48) = v20;
            *(void *)(v26 + 56) = v19;
            *(void *)(v26 + 64) = v53;
            *(void *)(v26 + 72) = v52;
            uint64_t v25 = v19;
            uint64_t v23 = 1;
            *(unsigned char *)(v26 + 80) = v16 & 1;
          }
          uint64_t v27 = v21;
          uint64_t v28 = v22;
          sub_12430(v17, v18, v20, v25, v21, v22, v16);
          uint64_t v50 = v25;
          sub_12430(v17, v18, v20, v25, v27, v28, v16);
          sub_12384(__dst);
          swift_bridgeObjectRetain();
          uint64_t v29 = (double *)(v24 + 80);
          uint64_t v30 = _swiftEmptyArrayStorage;
          do
          {
            if ((*(unsigned char *)v29 & 1) == 0)
            {
              double v31 = *(v29 - 2);
              double v32 = exp2(-*(v29 - 1) / *(v29 - 3));
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                uint64_t v30 = sub_41BAC(0, v30[2] + 1, 1, v30);
              }
              unint64_t v34 = v30[2];
              unint64_t v33 = v30[3];
              if (v34 >= v33 >> 1) {
                uint64_t v30 = sub_41BAC((void *)(v33 > 1), v34 + 1, 1, v30);
              }
              v30[2] = v34 + 1;
              *(double *)&v30[v34 + 4] = v31 * v32;
            }
            v29 += 7;
            --v23;
          }
          while (v23);
          swift_bridgeObjectRelease();
          unint64_t v9 = v48;
          int64_t v3 = v49;
          uint64_t v35 = v50;
          uint64_t v36 = v30[2];
          if (!v36)
          {
LABEL_5:
            swift_bridgeObjectRelease();
            double v10 = 0.0;
            goto LABEL_6;
          }
LABEL_39:
          uint64_t v37 = (double *)(v30 + 4);
          double v10 = 0.0;
          do
          {
            double v38 = *v37++;
            double v10 = v10 + v38;
            --v36;
          }
          while (v36);
          swift_bridgeObjectRelease();
LABEL_6:
          swift_bridgeObjectRelease();
          sub_1255C(v17, v18, v51, v35, v53, v52, v16);
          uint64_t result = sub_124B4(__dst);
          if (v10 > 0.0)
          {
            *(unint64_t *)((char *)v42 + ((v46 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v46;
            if (__OFADD__(v43, 1)) {
              goto LABEL_47;
            }
            ++v43;
            if (!v9) {
              goto LABEL_11;
            }
          }
          else if (!v9)
          {
            goto LABEL_11;
          }
LABEL_8:
          unint64_t v11 = __clz(__rbit64(v9));
          v9 &= v9 - 1;
        }
      }
      int64_t v15 = v13 + 3;
      if (v15 < v45)
      {
        unint64_t v14 = *(void *)(v44 + 8 * v15);
        if (v14)
        {
          int64_t v3 = v15;
          goto LABEL_24;
        }
        while (1)
        {
          int64_t v3 = v15 + 1;
          if (__OFADD__(v15, 1)) {
            goto LABEL_46;
          }
          if (v3 >= v45) {
            break;
          }
          unint64_t v14 = *(void *)(v44 + 8 * v3);
          ++v15;
          if (v14) {
            goto LABEL_24;
          }
        }
      }
    }
LABEL_44:
    swift_retain();
    return (unint64_t *)sub_105740(v42, a2, v43, a3);
  }
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
  return result;
}

void *sub_5F23C(void *result, uint64_t a2, unint64_t a3, uint64_t a4)
{
  int64_t v4 = a3 >> 1;
  if (a3 >> 1 == a2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v6 = a4;
  uint64_t v7 = a4 + 56;
  uint64_t v5 = _swiftEmptyArrayStorage;
  uint64_t v8 = a2;
  uint64_t v27 = result;
  uint64_t v28 = a2;
  do
  {
    uint64_t v26 = v5;
    uint64_t v9 = v8;
    while (1)
    {
      if (v9 < a2 || v8 >= v4)
      {
        __break(1u);
        return result;
      }
      double v10 = &result[10 * v8];
      uint64_t v11 = *v10;
      char v32 = *((unsigned char *)v10 + 8);
      uint64_t v31 = v10[2];
      char v30 = *((unsigned char *)v10 + 24);
      uint64_t v12 = v10[4];
      char v13 = *((unsigned char *)v10 + 40);
      uint64_t v14 = v10[6];
      uint64_t v29 = v10[7];
      uint64_t v33 = v10[8];
      uint64_t v15 = v10[9];
      ++v8;
      if (!*(void *)(v6 + 16)) {
        break;
      }
      uint64_t v16 = sub_1FC7D0();
      uint64_t v17 = -1 << *(unsigned char *)(v6 + 32);
      unint64_t v18 = v16 & ~v17;
      if (((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
        break;
      }
      uint64_t v19 = *(void *)(v6 + 48);
      if (*(void *)(v19 + 8 * v18) != v11)
      {
        uint64_t v20 = ~v17;
        do
        {
          unint64_t v18 = (v18 + 1) & v20;
          if (((*(void *)(v7 + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_15;
          }
        }
        while (*(void *)(v19 + 8 * v18) != v11);
      }
      uint64_t result = v27;
      a2 = v28;
      if (v8 == v4) {
        return v26;
      }
    }
LABEL_15:
    sub_5480C(v12, v13);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v5 = v26;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_467B8(0, v26[2] + 1, 1);
      uint64_t v5 = v26;
    }
    unint64_t v22 = v5[2];
    unint64_t v21 = v5[3];
    unint64_t v23 = v22 + 1;
    if (v22 >= v21 >> 1)
    {
      sub_467B8(v21 > 1, v22 + 1, 1);
      unint64_t v23 = v22 + 1;
      uint64_t v5 = v26;
    }
    uint64_t v5[2] = v23;
    uint64_t v24 = &v5[10 * v22];
    v24[4] = v11;
    *((unsigned char *)v24 + 40) = v32;
    v24[6] = v31;
    *((unsigned char *)v24 + 56) = v30;
    v24[8] = v12;
    *((unsigned char *)v24 + 72) = v13;
    a2 = v28;
    v24[10] = v14;
    v24[11] = v29;
    v24[12] = v33;
    v24[13] = v15;
    uint64_t v6 = a4;
    uint64_t result = v27;
  }
  while (v8 != v4);
  return v5;
}

void *sub_5F490(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v6 = a2;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t result = (void *)sub_46768(0, v8, 0);
  int64_t v28 = v6;
  if (v8)
  {
    int64_t v27 = *(void *)(a5 + 16);
    while (1)
    {
      BOOL v14 = v7 <= v6;
      if (a3 > 0) {
        BOOL v14 = v7 >= v6;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, a3)) {
        int64_t v15 = ((v7 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + a3;
      }
      if (__OFADD__(v7, a4)) {
        goto LABEL_49;
      }
      if (v27 >= v7 + a4) {
        int64_t v16 = v7 + a4;
      }
      else {
        int64_t v16 = v27;
      }
      if (v16 < v7) {
        goto LABEL_50;
      }
      if (v7 < 0) {
        goto LABEL_51;
      }
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_unknownObjectRetain();
      if (v18 >= v17 >> 1) {
        uint64_t result = (void *)sub_46768(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[4 * v18];
      void v19[4] = a5;
      v19[5] = a5 + 32;
      v19[6] = v7;
      v19[7] = (2 * v16) | 1;
      int64_t v7 = v15;
      --v8;
      int64_t v6 = v28;
      if (!v8) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
LABEL_29:
    BOOL v20 = v15 <= v6;
    if (a3 > 0) {
      BOOL v20 = v15 >= v6;
    }
    if (v20) {
      return _swiftEmptyArrayStorage;
    }
    while (1)
    {
      int64_t v21 = __OFADD__(v15, a3) ? ((v15 + a3) >> 63) ^ 0x8000000000000000 : v15 + a3;
      if (__OFADD__(v15, a4)) {
        break;
      }
      if (*(void *)(a5 + 16) >= v15 + a4) {
        int64_t v22 = v15 + a4;
      }
      else {
        int64_t v22 = *(void *)(a5 + 16);
      }
      if (v22 < v15) {
        goto LABEL_53;
      }
      if (v15 < 0) {
        goto LABEL_54;
      }
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      unint64_t v23 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_unknownObjectRetain();
      if (v24 >= v23 >> 1) {
        uint64_t result = (void *)sub_46768(v23 > 1, v24 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v24 + 1;
      uint64_t v25 = &_swiftEmptyArrayStorage[4 * v24];
      v25[4] = a5;
      void v25[5] = a5 + 32;
      v25[6] = v15;
      v25[7] = (2 * v22) | 1;
      BOOL v26 = v21 <= v28;
      if (a3 > 0) {
        BOOL v26 = v21 >= v28;
      }
      int64_t v15 = v21;
      if (v26) {
        return _swiftEmptyArrayStorage;
      }
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

unint64_t sub_5F710(int a1, uint64_t a2, uint64_t a3, unint64_t a4, void *a5)
{
  return sub_5B528(a1, a2, a3, a4, a5, *(unsigned char *)(v5 + 16), *(void *)(v5 + 24), *(void *)(v5 + 32));
}

uint64_t sub_5F71C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, uint64_t, uint64_t, _OWORD *))
{
  uint64_t v3 = a2;
  uint64_t v39 = *(void **)(a1 + 16);
  unint64_t v36 = *(void *)(a2 + 16);
  if (v36 >= (unint64_t)v39) {
    int64_t v5 = *(void *)(a1 + 16);
  }
  else {
    int64_t v5 = *(void *)(a2 + 16);
  }
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_46748(0, v5, 0);
  int64_t v6 = _swiftEmptyArrayStorage;
  uint64_t v37 = v3;
  uint64_t v33 = a1;
  if (v5)
  {
    uint64_t v34 = a1 + 32;
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    unint64_t v42 = 0;
    unint64_t v38 = 0;
    char v8 = 0;
    while (1)
    {
      if (v8)
      {
        sub_5FD24(__dst);
        sub_5FBF0((uint64_t)__dst, (uint64_t)v51);
        char v8 = 1;
      }
      else
      {
        unint64_t v9 = (unint64_t)v39;
        if ((void *)v42 == v39) {
          goto LABEL_11;
        }
        if (v42 >= (unint64_t)v39) {
          goto LABEL_40;
        }
        unint64_t v9 = v42 + 1;
        if (v38 == v36)
        {
LABEL_11:
          sub_5FD24(__dst);
          sub_5FBF0((uint64_t)__dst, (uint64_t)v51);
          char v8 = 1;
        }
        else
        {
          if (v38 >= v36) {
            goto LABEL_41;
          }
          BOOL v10 = (long long *)(v34 + 32 * v42);
          long long v43 = *v10;
          long long v35 = v10[1];
          BOOL v11 = (const void *)(v3 + 32 + 560 * v38);
          memcpy(__dst, v11, 0x229uLL);
          ++v38;
          v51[0] = v43;
          v51[1] = v35;
          memcpy(&v51[2], v11, 0x229uLL);
          AuthorRecommendationSource.id.getter(v51);
          swift_unknownObjectRetain();
          sub_12384(__dst);
          char v8 = 0;
        }
        unint64_t v42 = v9;
      }
      sub_5FBF0((uint64_t)v51, (uint64_t)v49);
      sub_5FBF0((uint64_t)v49, (uint64_t)__dst);
      uint64_t result = sub_5FC58(__dst);
      if (result == 1) {
        goto LABEL_42;
      }
      long long v12 = v51[0];
      long long v13 = v51[1];
      uint64_t v14 = a3(*(void *)&v51[0], *((void *)&v51[0] + 1), *(void *)&v51[1], *((void *)&v51[1] + 1), &v51[2]);
      memcpy(v48, &v51[2], sizeof(v48));
      v47[0] = v12;
      v47[1] = v13;
      uint64_t result = (uint64_t)sub_5FC70(v47);
      uint64_t v52 = v6;
      unint64_t v16 = v6[2];
      unint64_t v15 = v6[3];
      if (v16 >= v15 >> 1)
      {
        uint64_t result = sub_46748(v15 > 1, v16 + 1, 1);
        int64_t v6 = v52;
      }
      v6[2] = v16 + 1;
      v6[v16 + 4] = v14;
      if (!--v5)
      {
        if (v8)
        {
          unint64_t v17 = v6;
          goto LABEL_30;
        }
        unint64_t v19 = v38;
        unint64_t v18 = v42;
        goto LABEL_23;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t result = swift_bridgeObjectRetain();
  unint64_t v18 = 0;
  unint64_t v19 = 0;
LABEL_23:
  unint64_t v20 = v36;
  unint64_t v46 = (char *)(v19 - v36);
  if (v19 > v36) {
    unint64_t v20 = v19;
  }
  unint64_t v21 = (unint64_t)v39;
  uint64_t v44 = (char *)(v18 - (void)v39);
  if (v18 > (unint64_t)v39) {
    unint64_t v21 = v18;
  }
  if ((void *)v18 != v39)
  {
    int64_t v22 = 0;
    uint64_t v23 = 560 * v19 + 32;
    unint64_t v24 = (uint64_t *)(v33 + 32 * v18 + 56);
    uint64_t v40 = (char *)(v19 - v20);
    unint64_t v41 = (char *)(v18 - v21);
    while (v41 != v22)
    {
      if (v46 == v22) {
        goto LABEL_29;
      }
      if (v40 == v22) {
        goto LABEL_39;
      }
      uint64_t v25 = *(v24 - 3);
      uint64_t v26 = *(v24 - 2);
      uint64_t v28 = *(v24 - 1);
      uint64_t v27 = *v24;
      uint64_t v29 = (const void *)(v3 + v23);
      memcpy(v49, v29, 0x229uLL);
      __dst[0] = v25;
      __dst[1] = v26;
      __dst[2] = v28;
      __dst[3] = v27;
      memcpy(&__dst[4], v29, 0x229uLL);
      memcpy(v51, __dst, 0x249uLL);
      swift_unknownObjectRetain();
      sub_12384(v49);
      uint64_t v30 = a3(v25, v26, v28, v27, &v51[2]);
      uint64_t result = (uint64_t)sub_5FC70(__dst);
      uint64_t v52 = v6;
      unint64_t v32 = v6[2];
      unint64_t v31 = v6[3];
      if (v32 >= v31 >> 1)
      {
        uint64_t result = sub_46748(v31 > 1, v32 + 1, 1);
        int64_t v6 = v52;
      }
      v6[2] = v32 + 1;
      v6[v32 + 4] = v30;
      v23 += 560;
      --v22;
      v24 += 4;
      uint64_t v3 = v37;
      if (v44 == v22) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    return result;
  }
LABEL_29:
  unint64_t v17 = v6;
LABEL_30:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return (uint64_t)v17;
}

unint64_t sub_5FB94()
{
  unint64_t result = qword_26D7D0;
  if (!qword_26D7D0)
  {
    sub_121C4(&qword_26D6A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7D0);
  }
  return result;
}

uint64_t sub_5FBF0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D7D8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_5FC58(uint64_t *a1)
{
  uint64_t v1 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v1) = -1;
  }
  return (v1 + 1);
}

void *sub_5FC70(void *a1)
{
  uint64_t v2 = a1[16];
  uint64_t v3 = a1[17];
  uint64_t v4 = a1[18];
  uint64_t v5 = a1[19];
  uint64_t v6 = a1[20];
  unint64_t v7 = a1[21];
  uint64_t v9 = a1[15];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_1255C(v9, v2, v3, v4, v5, v6, v7);
  swift_bridgeObjectRelease();
  return a1;
}

void sub_5FD24(void *a1)
{
}

unint64_t sub_5FD2C()
{
  unint64_t result = qword_26D7E8;
  if (!qword_26D7E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7E8);
  }
  return result;
}

unint64_t sub_5FD80()
{
  unint64_t result = qword_26D7F8;
  if (!qword_26D7F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D7F8);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for SeedBookRecommendationWork.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x5FEA0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeedBookRecommendationWork.Errors()
{
  return &type metadata for SeedBookRecommendationWork.Errors;
}

uint64_t getEnumTagSinglePayload for SeedBookRecommendationWork.Recommendation(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 24)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t storeEnumTagSinglePayload for SeedBookRecommendationWork.Recommendation(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = (a2 - 1);
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 24) = v3;
  return result;
}

ValueMetadata *type metadata accessor for SeedBookRecommendationWork.Recommendation()
{
  return &type metadata for SeedBookRecommendationWork.Recommendation;
}

uint64_t destroy for SeedBookRecommendationWork.Context()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for SeedBookRecommendationWork.Context(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  uint64_t v6 = a2[7];
  a1[6] = a2[6];
  a1[7] = v6;
  a1[8] = a2[8];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for SeedBookRecommendationWork.Context(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

__n128 initializeWithTake for InternalAffinitySource(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for SeedBookRecommendationWork.Context(uint64_t a1, uint64_t a2)
{
  swift_release();
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeedBookRecommendationWork.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for SeedBookRecommendationWork.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeedBookRecommendationWork.Context()
{
  return &type metadata for SeedBookRecommendationWork.Context;
}

unint64_t sub_60218()
{
  unint64_t result = qword_26D810;
  if (!qword_26D810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D810);
  }
  return result;
}

void Scorer.id.getter(unsigned char *a1@<X8>)
{
  *a1 = *v1;
}

unsigned char *ForYouOptions.init(mediaType:excludedStoreIDs:hydratedBooksFetchLimit:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  *(unsigned char *)a4 = *result;
  *(void *)(a4 + 8) = a2;
  *(void *)(a4 + 16) = a3;
  return result;
}

uint64_t sub_6028C(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ForYouOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t assignWithTake for ForYouOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  return a1;
}

uint64_t getEnumTagSinglePayload for ForYouOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ForYouOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ForYouOptions()
{
  return &type metadata for ForYouOptions;
}

uint64_t dispatch thunk of ForYouServiceType.fetchBooks(with:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  BOOL v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

BOOL static EventType.== infix(_:_:)(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return *a1 == *a2;
}

uint64_t sub_6051C()
{
  unint64_t v1 = 0x6F6874754178616DLL;
  if (*v0 != 1) {
    unint64_t v1 = 0xD000000000000018;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x65726E654778616DLL;
  }
}

uint64_t sub_6058C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_60D90(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_605B4(uint64_t a1)
{
  unint64_t v2 = sub_607D4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_605F0(uint64_t a1)
{
  unint64_t v2 = sub_607D4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabiConfiguration.BookScoringConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_26D820);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  unint64_t v7 = (char *)v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  _OWORD v10[2] = v1[2];
  v10[3] = v8;
  v10[1] = v1[3];
  sub_5D64(a1, a1[3]);
  sub_607D4();
  sub_1FC870();
  char v13 = 0;
  sub_1FC520();
  if (!v2)
  {
    char v12 = 1;
    sub_1FC520();
    char v11 = 2;
    sub_1FC4E0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_607D4()
{
  unint64_t result = qword_26D828;
  if (!qword_26D828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D828);
  }
  return result;
}

uint64_t TabiConfiguration.BookScoringConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_26D830);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v16 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_607D4();
  sub_1FC850();
  if (!v2)
  {
    char v19 = 0;
    uint64_t v9 = sub_1FC3E0();
    char v18 = 1;
    uint64_t v10 = sub_1FC3E0();
    char v17 = 2;
    uint64_t v12 = sub_1FC3A0();
    char v13 = v8;
    uint64_t v15 = v14;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v13, v5);
    *a2 = v9;
    a2[1] = v10;
    a2[2] = v12;
    a2[3] = v15;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_609F4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TabiConfiguration.BookScoringConfiguration.init(from:)(a1, a2);
}

uint64_t sub_60A0C(void *a1)
{
  return TabiConfiguration.BookScoringConfiguration.encode(to:)(a1);
}

uint64_t _s11descr251E29O24BookScoringConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11descr251E29O24BookScoringConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11descr251E29O24BookScoringConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s11descr251E29O24BookScoringConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11descr251E29O24BookScoringConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiConfiguration.BookScoringConfiguration()
{
  return &type metadata for TabiConfiguration.BookScoringConfiguration;
}

unsigned char *_s11descr251E29O24BookScoringConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x60C50);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11descr251E29O24BookScoringConfigurationV10CodingKeysOMa()
{
  return &_s11descr251E29O24BookScoringConfigurationV10CodingKeysON;
}

unint64_t sub_60C8C()
{
  unint64_t result = qword_26D838;
  if (!qword_26D838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D838);
  }
  return result;
}

unint64_t sub_60CE4()
{
  unint64_t result = qword_26D840;
  if (!qword_26D840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D840);
  }
  return result;
}

unint64_t sub_60D3C()
{
  unint64_t result = qword_26D848;
  if (!qword_26D848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_26D848);
  }
  return result;
}

uint64_t sub_60D90(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726E654778616DLL && a2 == 0xEB00000000734449;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6874754178616DLL && a2 == 0xEC00000073444972 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000018 && a2 == 0x8000000000217520)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 2;
    }
    else {
      return 3;
    }
  }
}

uint64_t sub_60F14(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v79 = sub_12124(&qword_26D978);
  uint64_t v4 = __chkstk_darwin(v79);
  uint64_t v66 = (char *)&v56 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v65 = (char *)&v56 - v7;
  uint64_t v8 = __chkstk_darwin(v6);
  unint64_t v78 = (char *)&v56 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v64 = (char *)&v56 - v11;
  __chkstk_darwin(v10);
  uint64_t v63 = (char *)&v56 - v12;
  uint64_t v13 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v61 = *(void *)(v13 - 8);
  uint64_t v62 = v13;
  __chkstk_darwin(v13);
  uint64_t v80 = (uint64_t)&v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v15 = *(void *)(a1 + 16);
  uint64_t v16 = _swiftEmptyArrayStorage;
  if (!v15) {
    return (uint64_t)v16;
  }
  double v83 = _swiftEmptyArrayStorage;
  sub_46818(0, v15, 0);
  uint64_t result = sub_73C3C(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v19 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v20 = a1 + 64;
      uint64_t v67 = a1 + 80;
      uint64_t v21 = 1;
      uint64_t v59 = a1 + 64;
      uint64_t v60 = a1;
      int64_t v57 = v15;
      uint64_t v58 = v18;
      while ((*(void *)(v20 + 8 * (v19 >> 6)) & (1 << v19)) != 0)
      {
        if (*(_DWORD *)(a1 + 36) != v18) {
          goto LABEL_28;
        }
        uint64_t v70 = 1 << v19;
        unint64_t v71 = v19 >> 6;
        uint64_t v68 = v21;
        uint64_t v22 = v79;
        uint64_t v23 = (uint64_t)v63;
        unint64_t v24 = &v63[*(int *)(v79 + 48)];
        uint64_t v25 = (const void *)(*(void *)(a1 + 48) + 560 * v19);
        memcpy(v81, v25, 0x229uLL);
        memmove(v63, v25, 0x229uLL);
        uint64_t v26 = *(void *)(a1 + 56);
        uint64_t v27 = sub_12124(&qword_26D980);
        uint64_t v28 = *(void *)(*(void *)(v27 - 8) + 72);
        uint64_t v29 = v27 - 8;
        unint64_t v77 = v19;
        sub_5606C(v26 + v28 * v19, (uint64_t)v24, &qword_26D980);
        uint64_t v30 = (uint64_t)v64;
        memcpy(v64, v81, 0x229uLL);
        sub_5606C((uint64_t)v24, v30 + *(int *)(v22 + 48), &qword_26D980);
        unint64_t v31 = v78;
        sub_55844(v30, (uint64_t)v78, &qword_26D978);
        sub_12384(v81);
        sub_12384(v81);
        sub_55F38(v23, &qword_26D978);
        uint64_t v32 = sub_12124(&qword_26D090);
        unint64_t v75 = (void *)(v80 + *(int *)(v32 + 48));
        uint64_t v76 = *(int *)(v32 + 64);
        uint64_t v33 = &v31[*(int *)(v22 + 48)];
        uint64_t v72 = &v33[*(int *)(v29 + 56)];
        uint64_t v73 = v29;
        uint64_t v34 = sub_12124(&qword_26D938);
        sub_1FB370();
        uint64_t v69 = v2;
        long long v35 = &v65[*(int *)(v22 + 48)];
        unint64_t v36 = &v35[*(int *)(v29 + 56)];
        uint64_t v74 = v36;
        memcpy(v82, v31, 0x229uLL);
        memcpy(v65, v31, 0x229uLL);
        uint64_t v37 = *(void *)v33;
        *(void *)long long v35 = *(void *)v33;
        uint64_t v38 = *(void *)(v34 - 8);
        uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v38 + 16);
        uint64_t v40 = v36;
        unint64_t v41 = v72;
        v39(v40, v72, v34);
        memcpy(v75, v82, 0x229uLL);
        unint64_t v42 = &v66[*(int *)(v79 + 48)];
        long long v43 = &v42[*(int *)(v73 + 56)];
        memcpy(v66, v82, 0x229uLL);
        *(void *)unint64_t v42 = v37;
        v39(v43, v41, v34);
        *(void *)(v80 + v76) = v37;
        swift_storeEnumTagMultiPayload();
        sub_12384(v82);
        uint64_t v44 = *(void (**)(char *, uint64_t))(v38 + 8);
        swift_bridgeObjectRetain();
        v44(v43, v34);
        v44(v74, v34);
        sub_55F38((uint64_t)v78, &qword_26D978);
        uint64_t v16 = v83;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_46818(0, v16[2] + 1, 1);
          uint64_t v16 = v83;
        }
        unint64_t v46 = v16[2];
        unint64_t v45 = v16[3];
        a1 = v60;
        uint64_t v47 = v77;
        if (v46 >= v45 >> 1)
        {
          sub_46818(v45 > 1, v46 + 1, 1);
          uint64_t v16 = v83;
        }
        _OWORD v16[2] = v46 + 1;
        uint64_t result = sub_7D530(v80, (uint64_t)v16+ ((*(unsigned __int8 *)(v61 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v61 + 80))+ *(void *)(v61 + 72) * v46, type metadata accessor for CollectionRecommendation);
        char v48 = *(unsigned char *)(a1 + 32);
        unint64_t v19 = 1 << v48;
        if (v47 >= 1 << v48) {
          goto LABEL_29;
        }
        uint64_t v20 = v59;
        unint64_t v49 = v71;
        uint64_t v50 = *(void *)(v59 + 8 * v71);
        if ((v50 & v70) == 0) {
          goto LABEL_30;
        }
        LODWORD(v18) = v58;
        if (*(_DWORD *)(a1 + 36) != v58) {
          goto LABEL_31;
        }
        unint64_t v51 = v50 & (-2 << (v47 & 0x3F));
        if (v51)
        {
          unint64_t v19 = __clz(__rbit64(v51)) | v47 & 0xFFFFFFFFFFFFFFC0;
          uint64_t v2 = v69;
          int64_t v52 = v57;
        }
        else
        {
          unint64_t v53 = v71 + 1;
          unint64_t v54 = (v19 + 63) >> 6;
          uint64_t v2 = v69;
          int64_t v52 = v57;
          if (v71 + 1 < v54)
          {
            unint64_t v55 = *(void *)(v59 + 8 * v53);
            if (v55)
            {
LABEL_21:
              unint64_t v19 = __clz(__rbit64(v55)) + (v53 << 6);
            }
            else
            {
              while (v54 - 2 != v49)
              {
                unint64_t v55 = *(void *)(v67 + 8 * v49++);
                if (v55)
                {
                  unint64_t v53 = v49 + 1;
                  goto LABEL_21;
                }
              }
            }
          }
        }
        if (v68 == v52) {
          return (uint64_t)v16;
        }
        if ((v19 & 0x8000000000000000) == 0)
        {
          uint64_t v21 = v68 + 1;
          if ((uint64_t)v19 < 1 << v48) {
            continue;
          }
        }
        goto LABEL_32;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_61590(uint64_t a1)
{
  uint64_t v68 = sub_12124(&qword_26D980);
  uint64_t v60 = *(void *)(v68 - 8);
  uint64_t v2 = __chkstk_darwin(v68);
  uint64_t v59 = (uint64_t *)((char *)&v50 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v2);
  uint64_t v58 = (uint64_t *)((char *)&v50 - v4);
  uint64_t v57 = sub_12124(&qword_26D978);
  uint64_t v5 = __chkstk_darwin(v57);
  uint64_t v67 = (uint64_t)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v56 = (char *)&v50 - v8;
  __chkstk_darwin(v7);
  unint64_t v55 = (char *)&v50 - v9;
  int64_t v10 = *(void *)(a1 + 16);
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (!v10) {
    return (uint64_t)v11;
  }
  uint64_t v72 = _swiftEmptyArrayStorage;
  sub_46854(0, v10, 0);
  uint64_t result = sub_73C3C(a1);
  if ((result & 0x8000000000000000) == 0)
  {
    unint64_t v14 = result;
    if (result < 1 << *(unsigned char *)(a1 + 32))
    {
      uint64_t v15 = a1 + 64;
      uint64_t v61 = a1 + 80;
      uint64_t v16 = 1;
      uint64_t v53 = a1 + 64;
      uint64_t v54 = a1;
      int64_t v51 = v10;
      uint64_t v52 = v13;
      while ((*(void *)(v15 + 8 * (v14 >> 6)) & (1 << v14)) != 0)
      {
        if (*(_DWORD *)(a1 + 36) != v13) {
          goto LABEL_28;
        }
        uint64_t v63 = 1 << v14;
        unint64_t v64 = v14 >> 6;
        uint64_t v62 = v16;
        uint64_t v17 = v57;
        uint64_t v18 = (uint64_t)v55;
        unint64_t v19 = &v55[*(int *)(v57 + 48)];
        uint64_t v20 = (const void *)(*(void *)(a1 + 48) + 560 * v14);
        memcpy(v69, v20, 0x229uLL);
        memmove(v55, v20, 0x229uLL);
        uint64_t v21 = *(void *)(a1 + 56);
        uint64_t v22 = *(void *)(v60 + 72);
        unint64_t v66 = v14;
        sub_5606C(v21 + v22 * v14, (uint64_t)v19, &qword_26D980);
        uint64_t v23 = (uint64_t)v56;
        memcpy(v56, v69, 0x229uLL);
        sub_5606C((uint64_t)v19, v23 + *(int *)(v17 + 48), &qword_26D980);
        uint64_t v24 = v67;
        sub_55844(v23, v67, &qword_26D978);
        sub_12384(v69);
        sub_12384(v69);
        sub_55F38(v18, &qword_26D978);
        uint64_t v25 = (const void *)v24;
        uint64_t v26 = (uint64_t *)(v24 + *(int *)(v17 + 48));
        uint64_t v27 = *v26;
        uint64_t v28 = *(int *)(v68 + 48);
        uint64_t v65 = (char *)v26 + v28;
        memcpy(v70, v25, 0x229uLL);
        uint64_t v29 = (uint64_t)v58;
        uint64_t v30 = (char *)v58 + v28;
        *uint64_t v58 = v27;
        uint64_t v31 = sub_12124(&qword_26D938);
        uint64_t v32 = *(void *)(v31 - 8);
        uint64_t v33 = *(void (**)(uint64_t, char *, uint64_t))(v32 + 16);
        v33(v29 + v28, v65, v31);
        memcpy(v71, v70, 0x229uLL);
        uint64_t v34 = *(int *)(v68 + 48);
        long long v35 = v59;
        unint64_t v36 = (char *)v59 + v34;
        *uint64_t v59 = v27;
        v33((uint64_t)v35 + v34, v30, v31);
        swift_bridgeObjectRetain();
        sub_12384(v70);
        uint64_t v37 = sub_1FB380();
        sub_55F38(v29, &qword_26D980);
        (*(void (**)(char *, uint64_t))(v32 + 8))(v36, v31);
        sub_55F38(v67, &qword_26D978);
        uint64_t v11 = v72;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_46854(0, v11[2] + 1, 1);
          uint64_t v11 = v72;
        }
        unint64_t v39 = v11[2];
        unint64_t v38 = v11[3];
        uint64_t v40 = v66;
        if (v39 >= v38 >> 1)
        {
          sub_46854(v38 > 1, v39 + 1, 1);
          uint64_t v11 = v72;
        }
        v11[2] = v39 + 1;
        unint64_t v41 = &v11[71 * v39];
        uint64_t result = (uint64_t)memcpy(v41 + 4, v71, 0x230uLL);
        v41[74] = v37;
        a1 = v54;
        char v42 = *(unsigned char *)(v54 + 32);
        unint64_t v14 = 1 << v42;
        if (v40 >= 1 << v42) {
          goto LABEL_29;
        }
        uint64_t v15 = v53;
        unint64_t v43 = v64;
        uint64_t v44 = *(void *)(v53 + 8 * v64);
        if ((v44 & v63) == 0) {
          goto LABEL_30;
        }
        LODWORD(v13) = v52;
        if (*(_DWORD *)(v54 + 36) != v52) {
          goto LABEL_31;
        }
        unint64_t v45 = v44 & (-2 << (v40 & 0x3F));
        if (v45)
        {
          unint64_t v14 = __clz(__rbit64(v45)) | v40 & 0xFFFFFFFFFFFFFFC0;
          int64_t v46 = v51;
        }
        else
        {
          unint64_t v47 = v64 + 1;
          unint64_t v48 = (v14 + 63) >> 6;
          int64_t v46 = v51;
          if (v64 + 1 < v48)
          {
            unint64_t v49 = *(void *)(v53 + 8 * v47);
            if (v49)
            {
LABEL_21:
              unint64_t v14 = __clz(__rbit64(v49)) + (v47 << 6);
            }
            else
            {
              while (v48 - 2 != v43)
              {
                unint64_t v49 = *(void *)(v61 + 8 * v43++);
                if (v49)
                {
                  unint64_t v47 = v43 + 1;
                  goto LABEL_21;
                }
              }
            }
          }
        }
        if (v62 == v46) {
          return (uint64_t)v11;
        }
        if ((v14 & 0x8000000000000000) == 0)
        {
          uint64_t v16 = v62 + 1;
          if ((uint64_t)v14 < 1 << v42) {
            continue;
          }
        }
        goto LABEL_32;
      }
      __break(1u);
LABEL_28:
      __break(1u);
LABEL_29:
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_61B10(uint64_t a1)
{
  uint64_t v47 = sub_12124(&qword_26D990);
  uint64_t v3 = __chkstk_darwin(v47);
  int64_t v46 = (void *)((char *)v39 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v5 = __chkstk_darwin(v3);
  unint64_t v45 = (void *)((char *)v39 - v6);
  __chkstk_darwin(v5);
  uint64_t v44 = (char *)v39 - v7;
  int64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  v39[1] = v1;
  uint64_t v52 = _swiftEmptyArrayStorage;
  sub_46874(0, v8, 0);
  uint64_t result = sub_73C3C(a1);
  unint64_t v12 = result;
  uint64_t v13 = 0;
  uint64_t v14 = a1 + 64;
  uint64_t v48 = a1 + 80;
  uint64_t v42 = a1 + 64;
  uint64_t v43 = a1;
  int64_t v40 = v8;
  uint64_t v41 = v11;
  uint64_t v15 = v47;
  uint64_t v16 = v44;
  while ((v12 & 0x8000000000000000) == 0 && (uint64_t)v12 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v18 = v12 >> 6;
    if ((*(void *)(v14 + 8 * (v12 >> 6)) & (1 << v12)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v11) {
      goto LABEL_26;
    }
    uint64_t v49 = v13;
    uint64_t v50 = 1 << v12;
    unint64_t v19 = (char *)v16 + *(int *)(v15 + 48);
    uint64_t v20 = *(void *)(a1 + 56);
    uint64_t v21 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    uint64_t v22 = sub_12124(&qword_26D938);
    uint64_t v23 = *(void *)(v22 - 8);
    unint64_t v24 = v12;
    uint64_t v25 = *(void (**)(char *, unint64_t, uint64_t))(v23 + 16);
    uint64_t v26 = *(void *)(v23 + 72);
    int64_t v51 = v24;
    v25(v19, v20 + v26 * v24, v22);
    *uint64_t v16 = v21;
    uint64_t v27 = (uint64_t)v45;
    void *v45 = v21;
    v25((char *)(v27 + *(int *)(v15 + 48)), (unint64_t)v19, v22);
    uint64_t v28 = v46;
    sub_55844(v27, (uint64_t)v46, &qword_26D990);
    sub_55F38((uint64_t)v16, &qword_26D990);
    uint64_t v29 = *v28;
    uint64_t v30 = sub_1FB380();
    sub_55F38((uint64_t)v28, &qword_26D990);
    uint64_t v9 = v52;
    uint64_t result = swift_isUniquelyReferenced_nonNull_native();
    if ((result & 1) == 0)
    {
      uint64_t result = sub_46874(0, v9[2] + 1, 1);
      uint64_t v9 = v52;
    }
    unint64_t v32 = v9[2];
    unint64_t v31 = v9[3];
    if (v32 >= v31 >> 1)
    {
      uint64_t result = sub_46874(v31 > 1, v32 + 1, 1);
      uint64_t v9 = v52;
    }
    void v9[2] = v32 + 1;
    uint64_t v33 = &v9[2 * v32];
    v33[4] = v29;
    void v33[5] = v30;
    a1 = v43;
    unint64_t v12 = 1 << *(unsigned char *)(v43 + 32);
    if (v51 >= (uint64_t)v12) {
      goto LABEL_27;
    }
    uint64_t v14 = v42;
    uint64_t v34 = *(void *)(v42 + 8 * v18);
    if ((v34 & v50) == 0) {
      goto LABEL_28;
    }
    LODWORD(v11) = v41;
    if (*(_DWORD *)(v43 + 36) != v41) {
      goto LABEL_29;
    }
    unint64_t v35 = v34 & (-2 << (v51 & 0x3F));
    if (v35)
    {
      unint64_t v12 = __clz(__rbit64(v35)) | v51 & 0xFFFFFFFFFFFFFFC0;
      int64_t v17 = v40;
    }
    else
    {
      unint64_t v36 = v18 + 1;
      unint64_t v37 = (v12 + 63) >> 6;
      int64_t v17 = v40;
      if (v18 + 1 < v37)
      {
        unint64_t v38 = *(void *)(v42 + 8 * v36);
        if (v38)
        {
LABEL_22:
          unint64_t v12 = __clz(__rbit64(v38)) + (v36 << 6);
        }
        else
        {
          while (v37 - 2 != v18)
          {
            unint64_t v38 = *(void *)(v48 + 8 * v18++);
            if (v38)
            {
              unint64_t v36 = v18 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v13 = v49 + 1;
    if (v49 + 1 == v17) {
      return (uint64_t)v9;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_61EB8(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  unint64_t v35 = _swiftEmptyArrayStorage;
  sub_467F8(0, v2, 0);
  uint64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    uint64_t v4 = (long long *)(a1 + 32);
    swift_bridgeObjectRetain();
    for (int64_t i = v2 - 1; ; --i)
    {
      long long v6 = v4[7];
      long long v31 = v4[6];
      long long v32 = v6;
      long long v33 = v4[8];
      char v34 = *((unsigned char *)v4 + 144);
      long long v7 = v4[3];
      long long v27 = v4[2];
      long long v28 = v7;
      long long v8 = v4[5];
      long long v29 = v4[4];
      long long v30 = v8;
      long long v9 = v4[1];
      long long v25 = *v4;
      long long v26 = v9;
      sub_54834((uint64_t)&v25);
      unint64_t v35 = v3;
      unint64_t v11 = v3[2];
      unint64_t v10 = v3[3];
      if (v11 >= v10 >> 1)
      {
        sub_467F8(v10 > 1, v11 + 1, 1);
        uint64_t v3 = v35;
      }
      uint64_t v12 = v25;
      long long v19 = v29;
      long long v20 = v30;
      long long v17 = v27;
      long long v18 = v28;
      char v24 = v34;
      long long v22 = v32;
      long long v23 = v33;
      long long v21 = v31;
      long long v15 = v25;
      long long v16 = v26;
      v3[2] = v11 + 1;
      uint64_t v13 = &v3[20 * v11];
      v13[4] = v12;
      *(_OWORD *)(v13 + 7) = v16;
      *(_OWORD *)(v13 + 5) = v15;
      *(_OWORD *)(v13 + 15) = v20;
      *(_OWORD *)(v13 + 13) = v19;
      *(_OWORD *)(v13 + 11) = v18;
      *(_OWORD *)(v13 + 9) = v17;
      *((unsigned char *)v13 + 184) = v24;
      *(_OWORD *)(v13 + 21) = v23;
      *(_OWORD *)(v13 + 19) = v22;
      *(_OWORD *)(v13 + 17) = v21;
      if (!i) {
        break;
      }
      uint64_t v4 = (long long *)((char *)v4 + 152);
    }
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return v3;
}

uint64_t sub_62058()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_26D850);
  sub_6DBC8(v0, (uint64_t)qword_26D850);
  return sub_1FB420();
}

uint64_t sub_620D8@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v271 = a2;
  uint64_t v4 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v276 = v4;
  uint64_t v277 = v5;
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v278 = (char *)v270 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v284 = (uint64_t)v270 - v9;
  uint64_t v10 = __chkstk_darwin(v8);
  long long v285 = (id *)((char *)v270 - v11);
  __chkstk_darwin(v10);
  uint64_t v283 = (id *)((char *)v270 - v12);
  uint64_t v13 = sub_12124(&qword_26D908);
  __chkstk_darwin(v13 - 8);
  long long v15 = (char *)v270 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)a1;
  long long v17 = *(_OWORD *)(a1 + 1152);
  long long v319 = *(_OWORD *)(a1 + 1136);
  long long v320 = v17;
  long long v321 = *(_OWORD *)(a1 + 1168);
  uint64_t v322 = *(void *)(a1 + 1184);
  v304 = &v319;
  sub_6D988((uint64_t)&v319);
  int64_t v268 = (void *)sub_6D9D8();
  uint64_t v290 = sub_1FB700();
  uint64_t v292 = *((void *)&v319 + 1);
  uint64_t v293 = v319;
  uint64_t v18 = *((void *)&v320 + 1);
  uint64_t v19 = *((void *)&v321 + 1);
  uint64_t v286 = v321;
  uint64_t v287 = v322;
  swift_bridgeObjectRetain();
  uint64_t v289 = v18;
  swift_bridgeObjectRetain();
  uint64_t v288 = v19;
  swift_bridgeObjectRetain();
  sub_6DA2C((uint64_t)&v319);
  long long v20 = (uint64_t *)swift_allocObject();
  uint64_t v21 = (uint64_t)_swiftEmptyDictionarySingleton;
  _OWORD v20[2] = (uint64_t)_swiftEmptyDictionarySingleton;
  uint64_t v274 = v20 + 2;
  swift_retain();
  dispatch_semaphore_t v22 = dispatch_semaphore_create(0);
  uint64_t v23 = sub_1FBC60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v23 - 8) + 56))(v15, 1, 1, v23);
  char v24 = (void *)swift_allocObject();
  v24[2] = 0;
  void v24[3] = 0;
  v24[4] = v2;
  v24[5] = v16;
  v24[6] = sub_6DAB4;
  v24[7] = v20;
  v24[8] = v22;
  swift_retain();
  swift_bridgeObjectRetain();
  v270[1] = v20;
  swift_retain();
  long long v25 = v22;
  sub_64EB8((uint64_t)v15, (uint64_t)&unk_26D920, (uint64_t)v24);
  swift_release();
  v270[0] = v25;
  sub_1FBE00();
  if (qword_26C2F0 != -1) {
    goto LABEL_142;
  }
  while (1)
  {
    uint64_t v26 = sub_1FB430();
    uint64_t v27 = sub_6DBC8(v26, (uint64_t)qword_26D850);
    swift_bridgeObjectRetain_n();
    uint64_t v275 = v27;
    long long v28 = sub_1FB410();
    int v29 = sub_1FBDC0();
    if (os_log_type_enabled(v28, (os_log_type_t)v29))
    {
      os_log_t v302 = v28;
      uint64_t v30 = swift_slowAlloc();
      *(_DWORD *)uint64_t v30 = 134218752;
      *(void *)&v316[0] = *(void *)(v16 + 16);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 12) = 2048;
      uint64_t v31 = *(void *)(v16 + 16);
      LODWORD(v301) = v29;
      *(void *)&long long v303 = v31;
      if (v31)
      {
        v300 = (void *)v316 + 1;
        swift_bridgeObjectRetain();
        uint64_t v32 = v31 - 1;
        long long v33 = _swiftEmptyArrayStorage;
        for (uint64_t i = 32; ; i += 152)
        {
          long long v35 = *(_OWORD *)(v16 + i);
          v316[1] = *(_OWORD *)(v16 + i + 16);
          v316[0] = v35;
          long long v36 = *(_OWORD *)(v16 + i + 32);
          long long v37 = *(_OWORD *)(v16 + i + 48);
          long long v38 = *(_OWORD *)(v16 + i + 64);
          v316[5] = *(_OWORD *)(v16 + i + 80);
          v316[4] = v38;
          v316[3] = v37;
          v316[2] = v36;
          long long v39 = *(_OWORD *)(v16 + i + 96);
          long long v40 = *(_OWORD *)(v16 + i + 112);
          long long v41 = *(_OWORD *)(v16 + i + 128);
          LOBYTE(v316[9]) = *(unsigned char *)(v16 + i + 144);
          v316[8] = v41;
          v316[7] = v40;
          v316[6] = v39;
          if (BYTE8(v316[0]))
          {
            char v42 = sub_1FC5F0();
            sub_54834((uint64_t)v316);
            swift_bridgeObjectRelease();
            if ((v42 & 1) == 0)
            {
              sub_7A018((uint64_t)v316);
              if (!v32) {
                goto LABEL_17;
              }
              goto LABEL_15;
            }
          }
          else
          {
            sub_54834((uint64_t)v316);
            swift_bridgeObjectRelease();
          }
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v315[0] = v33;
          if ((isUniquelyReferenced_nonNull_native & 1) == 0)
          {
            sub_467D8(0, v33[2] + 1, 1);
            long long v33 = *(void **)&v315[0];
          }
          unint64_t v45 = v33[2];
          unint64_t v44 = v33[3];
          if (v45 >= v44 >> 1)
          {
            sub_467D8(v44 > 1, v45 + 1, 1);
            long long v33 = *(void **)&v315[0];
          }
          _OWORD v33[2] = v45 + 1;
          int64_t v46 = &v33[19 * v45];
          long long v47 = v316[1];
          *((_OWORD *)v46 + 2) = v316[0];
          *((_OWORD *)v46 + 3) = v47;
          long long v48 = v316[2];
          long long v49 = v316[3];
          long long v50 = v316[5];
          *((_OWORD *)v46 + 6) = v316[4];
          *((_OWORD *)v46 + 7) = v50;
          *((_OWORD *)v46 + 4) = v48;
          *((_OWORD *)v46 + 5) = v49;
          long long v51 = v316[6];
          long long v52 = v316[7];
          long long v53 = v316[8];
          *((unsigned char *)v46 + 176) = v316[9];
          *((_OWORD *)v46 + 9) = v52;
          *((_OWORD *)v46 + 10) = v53;
          *((_OWORD *)v46 + 8) = v51;
          if (!v32)
          {
LABEL_17:
            swift_bridgeObjectRelease();
            uint64_t v31 = v303;
            goto LABEL_19;
          }
LABEL_15:
          --v32;
        }
      }
      long long v33 = _swiftEmptyArrayStorage;
LABEL_19:
      uint64_t v54 = v33[2];
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)&v316[0] = v54;
      sub_1FBED0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 22) = 2048;
      if (v31)
      {
        swift_bridgeObjectRetain();
        uint64_t v55 = v31 - 1;
        uint64_t v56 = _swiftEmptyArrayStorage;
        for (uint64_t j = 32; ; j += 152)
        {
          long long v58 = *(_OWORD *)(v16 + j);
          v316[1] = *(_OWORD *)(v16 + j + 16);
          v316[0] = v58;
          long long v59 = *(_OWORD *)(v16 + j + 32);
          long long v60 = *(_OWORD *)(v16 + j + 48);
          long long v61 = *(_OWORD *)(v16 + j + 64);
          v316[5] = *(_OWORD *)(v16 + j + 80);
          v316[4] = v61;
          v316[3] = v60;
          v316[2] = v59;
          long long v62 = *(_OWORD *)(v16 + j + 96);
          long long v63 = *(_OWORD *)(v16 + j + 112);
          long long v64 = *(_OWORD *)(v16 + j + 128);
          LOBYTE(v316[9]) = *(unsigned char *)(v16 + j + 144);
          v316[8] = v64;
          v316[7] = v63;
          v316[6] = v62;
          if (BYTE8(v316[0]) == 1)
          {
            sub_54834((uint64_t)v316);
            swift_bridgeObjectRelease();
          }
          else
          {
            char v65 = sub_1FC5F0();
            sub_54834((uint64_t)v316);
            swift_bridgeObjectRelease();
            if ((v65 & 1) == 0)
            {
              sub_7A018((uint64_t)v316);
              if (!v55) {
                goto LABEL_32;
              }
              goto LABEL_31;
            }
          }
          char v66 = swift_isUniquelyReferenced_nonNull_native();
          *(void *)&v315[0] = v56;
          if ((v66 & 1) == 0)
          {
            sub_467D8(0, v56[2] + 1, 1);
            uint64_t v56 = *(void **)&v315[0];
          }
          unint64_t v68 = v56[2];
          unint64_t v67 = v56[3];
          if (v68 >= v67 >> 1)
          {
            sub_467D8(v67 > 1, v68 + 1, 1);
            uint64_t v56 = *(void **)&v315[0];
          }
          v56[2] = v68 + 1;
          uint64_t v69 = &v56[19 * v68];
          long long v70 = v316[1];
          *((_OWORD *)v69 + 2) = v316[0];
          *((_OWORD *)v69 + 3) = v70;
          long long v71 = v316[2];
          long long v72 = v316[3];
          long long v73 = v316[5];
          *((_OWORD *)v69 + 6) = v316[4];
          *((_OWORD *)v69 + 7) = v73;
          *((_OWORD *)v69 + 4) = v71;
          *((_OWORD *)v69 + 5) = v72;
          long long v74 = v316[6];
          long long v75 = v316[7];
          long long v76 = v316[8];
          *((unsigned char *)v69 + 176) = v316[9];
          *((_OWORD *)v69 + 9) = v75;
          *((_OWORD *)v69 + 10) = v76;
          *((_OWORD *)v69 + 8) = v74;
          if (!v55)
          {
LABEL_32:
            swift_bridgeObjectRelease();
            uint64_t v31 = v303;
            goto LABEL_34;
          }
LABEL_31:
          --v55;
        }
      }
      uint64_t v56 = _swiftEmptyArrayStorage;
LABEL_34:
      uint64_t v77 = v56[2];
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)&v316[0] = v77;
      sub_1FBED0();
      swift_bridgeObjectRelease();
      *(_WORD *)(v30 + 32) = 2048;
      if (v31)
      {
        v300 = (void *)v316 + 1;
        swift_bridgeObjectRetain();
        uint64_t v78 = v31 - 1;
        uint64_t v79 = _swiftEmptyArrayStorage;
        for (uint64_t k = 32; ; k += 152)
        {
          long long v81 = *(_OWORD *)(v16 + k);
          v316[1] = *(_OWORD *)(v16 + k + 16);
          v316[0] = v81;
          long long v82 = *(_OWORD *)(v16 + k + 32);
          long long v83 = *(_OWORD *)(v16 + k + 48);
          long long v84 = *(_OWORD *)(v16 + k + 64);
          v316[5] = *(_OWORD *)(v16 + k + 80);
          v316[4] = v84;
          v316[3] = v83;
          v316[2] = v82;
          long long v85 = *(_OWORD *)(v16 + k + 96);
          long long v86 = *(_OWORD *)(v16 + k + 112);
          long long v87 = *(_OWORD *)(v16 + k + 128);
          LOBYTE(v316[9]) = *(unsigned char *)(v16 + k + 144);
          v316[8] = v87;
          v316[7] = v86;
          v316[6] = v85;
          if ((BYTE8(v316[1]) & 1) == 0)
          {
            sub_54834((uint64_t)v316);
            char v88 = swift_isUniquelyReferenced_nonNull_native();
            *(void *)&v315[0] = v79;
            if ((v88 & 1) == 0)
            {
              sub_467D8(0, v79[2] + 1, 1);
              uint64_t v79 = *(void **)&v315[0];
            }
            unint64_t v90 = v79[2];
            unint64_t v89 = v79[3];
            if (v90 >= v89 >> 1)
            {
              sub_467D8(v89 > 1, v90 + 1, 1);
              uint64_t v79 = *(void **)&v315[0];
            }
            v79[2] = v90 + 1;
            long long v91 = &v79[19 * v90];
            long long v92 = v316[1];
            *((_OWORD *)v91 + 2) = v316[0];
            *((_OWORD *)v91 + 3) = v92;
            long long v93 = v316[2];
            long long v94 = v316[3];
            long long v95 = v316[5];
            *((_OWORD *)v91 + 6) = v316[4];
            *((_OWORD *)v91 + 7) = v95;
            *((_OWORD *)v91 + 4) = v93;
            *((_OWORD *)v91 + 5) = v94;
            long long v96 = v316[6];
            long long v97 = v316[7];
            long long v98 = v316[8];
            *((unsigned char *)v91 + 176) = v316[9];
            *((_OWORD *)v91 + 9) = v97;
            *((_OWORD *)v91 + 10) = v98;
            *((_OWORD *)v91 + 8) = v96;
          }
          if (!v78) {
            break;
          }
          --v78;
        }
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v79 = _swiftEmptyArrayStorage;
      }
      uint64_t v99 = v79[2];
      swift_bridgeObjectRelease();
      swift_release();
      *(void *)&v316[0] = v99;
      sub_1FBED0();
      swift_bridgeObjectRelease();
      os_log_t v100 = v302;
      _os_log_impl(&dword_0, v302, (os_log_type_t)v301, "AllCollectionTypesFillingClusteringService clustering %ld books books=%ld audiobooks=%ld seriesBooks=%ld", (uint8_t *)v30, 0x2Au);
      swift_slowDealloc();

      uint64_t v21 = (uint64_t)_swiftEmptyDictionarySingleton;
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    *(void *)&v316[0] = v293;
    *((void *)&v316[0] + 1) = v292;
    *(void *)&v316[1] = v290;
    *((void *)&v316[1] + 1) = v289;
    *(void *)&v316[2] = v286;
    *((void *)&v316[2] + 1) = v288;
    *(void *)&v316[3] = v287;
    char v101 = sub_797A8(v16, (uint64_t *)v316);
    uint64_t v272 = v102;
    uint64_t v273 = v101;
    uint64_t v104 = v103;
    v314[0] = v21;
    uint64_t v105 = *(void *)(v103 + 16);
    if (v105)
    {
      swift_bridgeObjectRetain();
      uint64_t v106 = v105 - 1;
      uint64_t v107 = 32;
      long long v303 = xmmword_1FD2A0;
      while (1)
      {
        long long v108 = *(_OWORD *)(v104 + v107);
        v316[1] = *(_OWORD *)(v104 + v107 + 16);
        v316[0] = v108;
        long long v109 = *(_OWORD *)(v104 + v107 + 32);
        long long v110 = *(_OWORD *)(v104 + v107 + 48);
        long long v111 = *(_OWORD *)(v104 + v107 + 64);
        v316[5] = *(_OWORD *)(v104 + v107 + 80);
        v316[4] = v111;
        v316[3] = v110;
        v316[2] = v109;
        long long v112 = *(_OWORD *)(v104 + v107 + 96);
        long long v113 = *(_OWORD *)(v104 + v107 + 112);
        long long v114 = *(_OWORD *)(v104 + v107 + 128);
        LOBYTE(v316[9]) = *(unsigned char *)(v104 + v107 + 144);
        v316[8] = v114;
        v316[7] = v113;
        v316[6] = v112;
        char v115 = BYTE8(v316[0]);
        v315[6] = v112;
        v315[7] = v113;
        v315[8] = v114;
        LOBYTE(v315[9]) = v316[9];
        v315[2] = v316[2];
        v315[3] = v316[3];
        v315[4] = v316[4];
        v315[5] = v316[5];
        v315[0] = v316[0];
        v315[1] = v316[1];
        sub_12124(&qword_26C510);
        uint64_t v116 = swift_allocObject();
        *(_OWORD *)(v116 + 16) = v303;
        *(unsigned char *)(v116 + 32) = v115;
        sub_54834((uint64_t)v316);
        Swift::Int v117 = sub_BD5F4(v116);
        swift_setDeallocating();
        uint64_t v118 = swift_deallocClassInstance();
        __chkstk_darwin(v118);
        int64_t v268 = v314;
        uint64_t v269 = v315;
        sub_6008(sub_79FBC, (uint64_t)&v270[-4], v117);
        swift_bridgeObjectRelease();
        sub_7A018((uint64_t)v316);
        if (!v106) {
          break;
        }
        --v106;
        v107 += 152;
      }
      swift_bridgeObjectRelease();
      uint64_t v21 = v314[0];
    }
    uint64_t v16 = sub_6C8AC(v21);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v119 = sub_6D5F4(v16);
    swift_bridgeObjectRelease();
    int64_t v120 = 0;
    uint64_t v121 = v119 + 64;
    uint64_t v122 = 1 << *(unsigned char *)(v119 + 32);
    uint64_t v123 = -1;
    if (v122 < 64) {
      uint64_t v123 = ~(-1 << v122);
    }
    unint64_t v124 = v123 & *(void *)(v119 + 64);
    int64_t v294 = (unint64_t)(v122 + 63) >> 6;
    v295 = _swiftEmptyArrayStorage;
    v296 = _swiftEmptyArrayStorage;
    v300 = _swiftEmptyArrayStorage;
    v291 = _swiftEmptyArrayStorage;
    uint64_t v281 = _swiftEmptyArrayStorage;
    uint64_t v282 = _swiftEmptyArrayStorage;
    uint64_t v279 = v119 + 64;
    uint64_t v280 = v119;
    if (v124)
    {
      while (1)
      {
        unint64_t v126 = __clz(__rbit64(v124));
        v124 &= v124 - 1;
        unint64_t v127 = v126 | (v120 << 6);
LABEL_96:
        uint64_t v152 = *(void *)(*(void *)(v119 + 56) + 8 * v127);
        if ((*(unsigned char *)(*(void *)(v119 + 48) + v127) & 1) == 0) {
          break;
        }
        uint64_t v16 = sub_1FC5F0();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        if (v16)
        {
LABEL_57:
          uint64_t v125 = *(void *)(v152 + 16);
          if (v125)
          {
            uint64_t v128 = v125 - 1;
            uint64_t v129 = 32;
            v298 = (void *)v124;
            v299 = (void *)v120;
            *(void *)&long long v297 = v152;
            while (1)
            {
              long long v130 = *(_OWORD *)(v152 + v129);
              v316[1] = *(_OWORD *)(v152 + v129 + 16);
              v316[0] = v130;
              long long v131 = *(_OWORD *)(v152 + v129 + 32);
              long long v132 = *(_OWORD *)(v152 + v129 + 48);
              long long v133 = *(_OWORD *)(v152 + v129 + 64);
              v316[5] = *(_OWORD *)(v152 + v129 + 80);
              v316[4] = v133;
              v316[3] = v132;
              v316[2] = v131;
              long long v134 = *(_OWORD *)(v152 + v129 + 96);
              long long v135 = *(_OWORD *)(v152 + v129 + 112);
              long long v136 = *(_OWORD *)(v152 + v129 + 128);
              LOBYTE(v316[9]) = *(unsigned char *)(v152 + v129 + 144);
              v316[8] = v136;
              v316[7] = v135;
              v316[6] = v134;
              uint64_t v137 = *(void *)&v316[0];
              LODWORD(v301) = BYTE8(v316[0]);
              uint64_t v16 = *(void *)&v316[2];
              uint64_t v21 = BYTE8(v316[2]);
              uint64_t v138 = *(void *)&v316[3];
              os_log_t v302 = *(os_log_t *)&v316[1];
              *(void *)&long long v303 = *((void *)&v316[3] + 1);
              long long v139 = v316[4];
              if (BYTE8(v316[1]))
              {
                unint64_t v140 = v296[2];
                sub_54834((uint64_t)v316);
                sub_5480C(v16, v21);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if (v140 > 2)
                {
                  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                    v295 = sub_41CBC(0, v295[2] + 1, 1, v295);
                  }
                  unint64_t v149 = v295[2];
                  unint64_t v148 = v295[3];
                  if (v149 >= v148 >> 1) {
                    v295 = sub_41CBC((void *)(v148 > 1), v149 + 1, 1, v295);
                  }
                  BOOL v150 = v295;
                  v295[2] = v149 + 1;
                  long long v144 = &v150[10 * v149];
                }
                else
                {
                  if (swift_isUniquelyReferenced_nonNull_native()) {
                    uint64_t v141 = v296;
                  }
                  else {
                    uint64_t v141 = sub_41CBC(0, v140 + 1, 1, v296);
                  }
                  unint64_t v143 = v141[2];
                  unint64_t v142 = v141[3];
                  if (v143 >= v142 >> 1) {
                    uint64_t v141 = sub_41CBC((void *)(v142 > 1), v143 + 1, 1, v141);
                  }
                  v141[2] = v143 + 1;
                  v296 = v141;
                  long long v144 = &v141[10 * v143];
                }
                v144[4] = v137;
                *((unsigned char *)v144 + 40) = v301;
                v144[6] = v302;
                *((unsigned char *)v144 + 56) = 1;
              }
              else
              {
                sub_54834((uint64_t)v316);
                sub_5480C(v16, v21);
                swift_bridgeObjectRetain();
                swift_bridgeObjectRetain();
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  v300 = sub_41CBC(0, v300[2] + 1, 1, v300);
                }
                unint64_t v146 = v300[2];
                unint64_t v145 = v300[3];
                if (v146 >= v145 >> 1) {
                  v300 = sub_41CBC((void *)(v145 > 1), v146 + 1, 1, v300);
                }
                uint64_t v147 = v300;
                v300[2] = v146 + 1;
                long long v144 = &v147[10 * v146];
                v144[4] = v137;
                *((unsigned char *)v144 + 40) = v301;
                v144[6] = v302;
                *((unsigned char *)v144 + 56) = 0;
              }
              v144[8] = v16;
              *((unsigned char *)v144 + 72) = v21;
              uint64_t v151 = v303;
              v144[10] = v138;
              v144[11] = v151;
              *((_OWORD *)v144 + 6) = v139;
              sub_7A018((uint64_t)v316);
              unint64_t v124 = (unint64_t)v298;
              int64_t v120 = (int64_t)v299;
              uint64_t v152 = v297;
              if (!v128) {
                break;
              }
              --v128;
              v129 += 152;
            }
            goto LABEL_121;
          }
LABEL_58:
          swift_bridgeObjectRelease();
          if (!v124) {
            goto LABEL_82;
          }
        }
        else
        {
          uint64_t v156 = *(void *)(v152 + 16);
          if (!v156) {
            goto LABEL_58;
          }
          uint64_t v157 = v156 - 1;
          uint64_t v158 = 32;
          v298 = (void *)v124;
          v299 = (void *)v120;
          *(void *)&long long v297 = v152;
          while (1)
          {
            long long v159 = *(_OWORD *)(v152 + v158);
            v316[1] = *(_OWORD *)(v152 + v158 + 16);
            v316[0] = v159;
            long long v160 = *(_OWORD *)(v152 + v158 + 32);
            long long v161 = *(_OWORD *)(v152 + v158 + 48);
            long long v162 = *(_OWORD *)(v152 + v158 + 64);
            v316[5] = *(_OWORD *)(v152 + v158 + 80);
            v316[4] = v162;
            v316[3] = v161;
            v316[2] = v160;
            long long v163 = *(_OWORD *)(v152 + v158 + 96);
            long long v164 = *(_OWORD *)(v152 + v158 + 112);
            long long v165 = *(_OWORD *)(v152 + v158 + 128);
            LOBYTE(v316[9]) = *(unsigned char *)(v152 + v158 + 144);
            v316[8] = v165;
            v316[7] = v164;
            v316[6] = v163;
            uint64_t v166 = *(void *)&v316[0];
            LODWORD(v301) = BYTE8(v316[0]);
            uint64_t v16 = *(void *)&v316[2];
            uint64_t v21 = BYTE8(v316[2]);
            uint64_t v167 = *(void *)&v316[3];
            os_log_t v302 = *(os_log_t *)&v316[1];
            *(void *)&long long v303 = *((void *)&v316[3] + 1);
            long long v168 = v316[4];
            if (BYTE8(v316[1]))
            {
              unint64_t v169 = v282[2];
              sub_54834((uint64_t)v316);
              sub_5480C(v16, v21);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v169 > 2)
              {
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v281 = sub_41CBC(0, v281[2] + 1, 1, v281);
                }
                unint64_t v178 = v281[2];
                unint64_t v177 = v281[3];
                if (v178 >= v177 >> 1) {
                  uint64_t v281 = sub_41CBC((void *)(v177 > 1), v178 + 1, 1, v281);
                }
                char v179 = v281;
                v281[2] = v178 + 1;
                uint64_t v173 = &v179[10 * v178];
              }
              else
              {
                v170 = (swift_isUniquelyReferenced_nonNull_native() & 1) != 0 ? v282 : sub_41CBC(0, v169 + 1, 1, v282);
                unint64_t v172 = v170[2];
                unint64_t v171 = v170[3];
                if (v172 >= v171 >> 1) {
                  v170 = sub_41CBC((void *)(v171 > 1), v172 + 1, 1, v170);
                }
                v170[2] = v172 + 1;
                uint64_t v282 = v170;
                uint64_t v173 = &v170[10 * v172];
              }
              v173[4] = v166;
              *((unsigned char *)v173 + 40) = v301;
              v173[6] = v302;
              *((unsigned char *)v173 + 56) = 1;
            }
            else
            {
              sub_54834((uint64_t)v316);
              sub_5480C(v16, v21);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                v291 = sub_41CBC(0, v291[2] + 1, 1, v291);
              }
              unint64_t v175 = v291[2];
              unint64_t v174 = v291[3];
              if (v175 >= v174 >> 1) {
                v291 = sub_41CBC((void *)(v174 > 1), v175 + 1, 1, v291);
              }
              uint64_t v176 = v291;
              v291[2] = v175 + 1;
              uint64_t v173 = &v176[10 * v175];
              v173[4] = v166;
              *((unsigned char *)v173 + 40) = v301;
              v173[6] = v302;
              *((unsigned char *)v173 + 56) = 0;
            }
            v173[8] = v16;
            *((unsigned char *)v173 + 72) = v21;
            uint64_t v180 = v303;
            v173[10] = v167;
            v173[11] = v180;
            *((_OWORD *)v173 + 6) = v168;
            sub_7A018((uint64_t)v316);
            unint64_t v124 = (unint64_t)v298;
            int64_t v120 = (int64_t)v299;
            uint64_t v152 = v297;
            if (!v157) {
              break;
            }
            --v157;
            v158 += 152;
          }
LABEL_121:
          swift_bridgeObjectRelease();
          uint64_t v121 = v279;
          uint64_t v119 = v280;
          if (!v124) {
            goto LABEL_82;
          }
        }
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      goto LABEL_57;
    }
LABEL_82:
    int64_t v153 = v120 + 1;
    if (__OFADD__(v120, 1))
    {
      __break(1u);
      goto LABEL_141;
    }
    if (v153 >= v294) {
      break;
    }
    unint64_t v154 = *(void *)(v121 + 8 * v153);
    ++v120;
    if (v154) {
      goto LABEL_95;
    }
    int64_t v120 = v153 + 1;
    if (v153 + 1 >= v294) {
      break;
    }
    unint64_t v154 = *(void *)(v121 + 8 * v120);
    if (v154) {
      goto LABEL_95;
    }
    int64_t v120 = v153 + 2;
    if (v153 + 2 >= v294) {
      break;
    }
    unint64_t v154 = *(void *)(v121 + 8 * v120);
    if (v154) {
      goto LABEL_95;
    }
    int64_t v155 = v153 + 3;
    if (v155 >= v294) {
      break;
    }
    unint64_t v154 = *(void *)(v121 + 8 * v155);
    if (v154)
    {
      int64_t v120 = v155;
LABEL_95:
      unint64_t v124 = (v154 - 1) & v154;
      unint64_t v127 = __clz(__rbit64(v154)) + (v120 << 6);
      goto LABEL_96;
    }
    while (1)
    {
      int64_t v120 = v155 + 1;
      if (__OFADD__(v155, 1)) {
        break;
      }
      if (v120 >= v294) {
        goto LABEL_123;
      }
      unint64_t v154 = *(void *)(v121 + 8 * v120);
      ++v155;
      if (v154) {
        goto LABEL_95;
      }
    }
LABEL_141:
    __break(1u);
LABEL_142:
    swift_once();
  }
LABEL_123:
  swift_release();
  LOBYTE(v316[0]) = 0;
  LOBYTE(v315[0]) = 1;
  uint64_t v181 = v274;
  swift_beginAccess();
  uint64_t v182 = *v181;
  swift_bridgeObjectRetain();
  uint64_t v183 = (void *)sub_7A0A0(v295, v316, v281, v315, v182, 6uLL);
  uint64_t v185 = v184;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 1;
  LOBYTE(v315[0]) = 0;
  uint64_t v186 = *v181;
  swift_bridgeObjectRetain();
  unint64_t v187 = (void *)sub_7A0A0(v185, v316, v183, v315, v186, 6uLL);
  uint64_t v189 = v188;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 0;
  LOBYTE(v315[0]) = 0;
  uint64_t v190 = *v181;
  swift_bridgeObjectRetain();
  int64_t v191 = (void *)sub_7A0A0(v296, v316, v189, v315, v190, 3uLL);
  uint64_t v193 = v192;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 1;
  LOBYTE(v315[0]) = 1;
  uint64_t v194 = *v181;
  swift_bridgeObjectRetain();
  uint64_t v195 = (void *)sub_7A0A0(v282, v316, v187, v315, v194, 3uLL);
  uint64_t v197 = v196;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 0;
  LOBYTE(v315[0]) = 1;
  uint64_t v198 = *v181;
  swift_bridgeObjectRetain();
  Swift::Int v199 = (void *)sub_7A0A0(v191, v316, v197, v315, v198, 3uLL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 1;
  LOBYTE(v315[0]) = 0;
  uint64_t v200 = *v181;
  swift_bridgeObjectRetain();
  uint64_t v201 = (void *)sub_7A0A0(v195, v316, v193, v315, v200, 3uLL);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 0;
  LOBYTE(v315[0]) = 0;
  uint64_t v202 = *v181;
  Swift::Int v203 = v300;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  Swift::Int v204 = (void *)sub_7A0A0(v199, v316, v203, v315, v202, 3uLL);
  uint64_t v206 = v205;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v316[0]) = 1;
  LOBYTE(v315[0]) = 1;
  uint64_t v207 = *v181;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v208 = v291;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v209 = sub_7A0A0(v201, v316, v208, v315, v207, 3uLL);
  uint64_t v211 = v210;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D698);
  double v212 = (void *)swift_allocObject();
  v298 = v204;
  v299 = v212;
  v212[4] = v204;
  os_log_t v302 = v206;
  *(void *)&long long v303 = v212 + 4;
  v212[5] = v209;
  v212[6] = v203;
  v212[7] = v208;
  v212[8] = v211;
  v212[9] = v206;
  v317 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  *(void *)&long long v297 = v209;
  swift_bridgeObjectRetain();
  uint64_t v301 = v211;
  swift_bridgeObjectRetain();
  for (uint64_t m = 0; m != 6; ++m)
  {
    uint64_t v214 = *(void *)(v303 + 8 * m);
    int64_t v215 = *(void *)(v214 + 16);
    if (v215)
    {
      *(void *)&v316[0] = _swiftEmptyArrayStorage;
      swift_bridgeObjectRetain();
      sub_46538(0, v215, 0);
      uint64_t v216 = *(void **)&v316[0];
      unint64_t v217 = *(void *)(*(void *)&v316[0] + 16);
      uint64_t v218 = 32;
      do
      {
        uint64_t v219 = *(void *)(v214 + v218);
        *(void *)&v316[0] = v216;
        unint64_t v220 = v216[3];
        if (v217 >= v220 >> 1)
        {
          sub_46538(v220 > 1, v217 + 1, 1);
          uint64_t v216 = *(void **)&v316[0];
        }
        v216[2] = v217 + 1;
        v216[v217 + 4] = v219;
        v218 += 80;
        ++v217;
        --v215;
      }
      while (v215);
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v216 = _swiftEmptyArrayStorage;
    }
    sub_A98F4((uint64_t)v216);
  }
  swift_setDeallocating();
  sub_12124(&qword_26D6A0);
  swift_arrayDestroy();
  swift_deallocClassInstance();
  uint64_t v221 = sub_50A6C((uint64_t)v317);
  swift_bridgeObjectRelease();
  uint64_t v318 = v221;
  sub_65040(v272);
  *(void *)&v316[0] = v293;
  uint64_t v222 = v293;
  *((void *)&v316[0] + 1) = v292;
  uint64_t v223 = v292;
  *(void *)&v316[1] = v290;
  uint64_t v224 = v290;
  *((void *)&v316[1] + 1) = v289;
  uint64_t v225 = v289;
  *(void *)&v316[2] = v286;
  uint64_t v226 = v286;
  *((void *)&v316[2] + 1) = v288;
  uint64_t v227 = v288;
  *(void *)&v316[3] = v287;
  uint64_t v228 = v287;
  LOBYTE(v315[0]) = 0;
  v299 = sub_7A49C((uint64_t)v298, (uint64_t)v316, (unsigned __int8 *)v315);
  swift_bridgeObjectRelease();
  *(void *)&v316[0] = v222;
  *((void *)&v316[0] + 1) = v223;
  *(void *)&v316[1] = v224;
  *((void *)&v316[1] + 1) = v225;
  *(void *)&v316[2] = v226;
  *((void *)&v316[2] + 1) = v227;
  *(void *)&v316[3] = v228;
  LOBYTE(v315[0]) = 1;
  v298 = sub_7A49C(v297, (uint64_t)v316, (unsigned __int8 *)v315);
  swift_bridgeObjectRelease();
  sub_12124(&qword_26D498);
  uint64_t v229 = swift_allocObject();
  long long v303 = xmmword_1FD2A0;
  *(_OWORD *)(v229 + 16) = xmmword_1FD2A0;
  *(unsigned char *)(v229 + 32) = 0;
  sub_12124(&qword_26D3C8);
  uint64_t v230 = swift_allocObject();
  *(_OWORD *)(v230 + 16) = v303;
  sub_7A8D0((uint64_t)v314);
  unint64_t v231 = sub_160ED0((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v315[0] = 1037193578;
  BYTE8(v315[0]) = 0;
  *(void *)&v315[1] = _swiftEmptyArrayStorage;
  *((void *)&v315[1] + 1) = _swiftEmptySetSingleton;
  *(void *)&v315[2] = 0;
  BYTE8(v315[2]) = 1;
  v315[3] = 0uLL;
  long long v297 = xmmword_202AA0;
  v315[4] = xmmword_202AA0;
  LOBYTE(v315[5]) = 0;
  *(_OWORD *)((char *)&v315[5] + 8) = 0u;
  *(_OWORD *)((char *)&v315[6] + 8) = 0u;
  *(_OWORD *)((char *)&v315[7] + 8) = 0u;
  *((void *)&v315[8] + 1) = 0x1FFFFFFFELL;
  v315[9] = 0uLL;
  sub_55844((uint64_t)v314, (uint64_t)&v315[10], &qword_26C518);
  *(void *)&v315[34] = v231;
  BYTE8(v315[34]) = 7;
  memcpy((void *)(v230 + 32), v315, 0x229uLL);
  *(void *)(v229 + 40) = v230;
  unint64_t v232 = sub_160EB0(v229);
  uint64_t v233 = v283;
  *uint64_t v283 = 1037196655;
  *((unsigned char *)v233 + 8) = 0;
  v233[2] = 0;
  *((unsigned char *)v233 + 24) = 1;
  v233[4] = 0;
  *((unsigned char *)v233 + 40) = -1;
  v233[6] = _swiftEmptyArrayStorage;
  v233[7] = 0x3FF0000000000000;
  v233[8] = v232;
  v233[9] = 0x3FF0000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v234 = swift_allocObject();
  *(_OWORD *)(v234 + 16) = v303;
  *(unsigned char *)(v234 + 32) = 0;
  uint64_t v235 = swift_allocObject();
  *(_OWORD *)(v235 + 16) = v303;
  unint64_t v236 = sub_160ED0((uint64_t)_swiftEmptyArrayStorage);
  *(void *)&v316[0] = 1037193578;
  BYTE8(v316[0]) = 0;
  *(void *)&v316[1] = _swiftEmptyArrayStorage;
  *((void *)&v316[1] + 1) = _swiftEmptySetSingleton;
  *(void *)&v316[2] = 0;
  BYTE8(v316[2]) = 1;
  v316[3] = 0uLL;
  v316[4] = v297;
  LOBYTE(v316[5]) = 0;
  *(_OWORD *)((char *)&v316[5] + 8) = 0u;
  *(_OWORD *)((char *)&v316[6] + 8) = 0u;
  *(_OWORD *)((char *)&v316[7] + 8) = 0u;
  *((void *)&v316[8] + 1) = 0x1FFFFFFFELL;
  v316[9] = 0uLL;
  sub_55844((uint64_t)v314, (uint64_t)&v316[10], &qword_26C518);
  *(void *)&v316[34] = v236;
  BYTE8(v316[34]) = 7;
  memcpy((void *)(v235 + 32), v316, 0x229uLL);
  *(void *)(v234 + 40) = v235;
  unint64_t v237 = sub_160EB0(v234);
  uint64_t v238 = v285;
  *long long v285 = 1485946454;
  *((unsigned char *)v238 + 8) = 0;
  v238[2] = 0;
  *((unsigned char *)v238 + 24) = 1;
  v238[4] = 0;
  *((unsigned char *)v238 + 40) = -1;
  v238[6] = _swiftEmptyArrayStorage;
  v238[7] = 0x3FF0000000000000;
  v238[8] = v237;
  v238[9] = 0x3FF0000000000000;
  swift_storeEnumTagMultiPayload();
  uint64_t v240 = v292;
  uint64_t v239 = v293;
  uint64_t v307 = v293;
  uint64_t v308 = v292;
  uint64_t v242 = v289;
  uint64_t v241 = v290;
  uint64_t v309 = v290;
  uint64_t v310 = v289;
  uint64_t v243 = v286;
  uint64_t v244 = v287;
  uint64_t v245 = v288;
  uint64_t v311 = v286;
  uint64_t v312 = v288;
  uint64_t v313 = v287;
  LOBYTE(v306) = 0;
  *(void *)&long long v303 = sub_7A92C((uint64_t)v300, (uint64_t)&v307, (unsigned __int8 *)&v306);
  swift_bridgeObjectRelease();
  uint64_t v307 = v239;
  uint64_t v308 = v240;
  uint64_t v309 = v241;
  uint64_t v310 = v242;
  uint64_t v311 = v243;
  uint64_t v312 = v245;
  uint64_t v246 = v243;
  uint64_t v313 = v244;
  LOBYTE(v306) = 1;
  uint64_t v247 = sub_7A92C((uint64_t)v291, (uint64_t)&v307, (unsigned __int8 *)&v306);
  swift_bridgeObjectRelease();
  uint64_t v307 = v293;
  uint64_t v308 = v292;
  uint64_t v309 = v241;
  uint64_t v310 = v242;
  uint64_t v311 = v246;
  uint64_t v312 = v245;
  uint64_t v313 = v244;
  unint64_t v248 = sub_7AE54(v301, (uint64_t)v302, (uint64_t)&v307);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_7D4C8((uint64_t)v233, v284, type metadata accessor for CollectionRecommendation);
  unint64_t v249 = sub_41F08(0, 1, 1, (unint64_t)_swiftEmptyArrayStorage);
  unint64_t v251 = *(void *)(v249 + 16);
  unint64_t v250 = *(void *)(v249 + 24);
  if (v251 >= v250 >> 1) {
    unint64_t v249 = sub_41F08(v250 > 1, v251 + 1, 1, v249);
  }
  uint64_t v252 = v277;
  uint64_t v253 = (uint64_t)v278;
  *(void *)(v249 + 16) = v251 + 1;
  unint64_t v254 = (*(unsigned __int8 *)(v252 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v252 + 80);
  uint64_t v255 = *(void *)(v252 + 72);
  sub_7D530(v284, v249 + v254 + v255 * v251, type metadata accessor for CollectionRecommendation);
  sub_7D4C8((uint64_t)v285, v253, type metadata accessor for CollectionRecommendation);
  unint64_t v257 = *(void *)(v249 + 16);
  unint64_t v256 = *(void *)(v249 + 24);
  if (v257 >= v256 >> 1) {
    unint64_t v249 = sub_41F08(v256 > 1, v257 + 1, 1, v249);
  }
  *(void *)(v249 + 16) = v257 + 1;
  sub_7D530(v253, v249 + v254 + v257 * v255, type metadata accessor for CollectionRecommendation);
  unint64_t v306 = v249;
  sub_A9BBC((uint64_t)v299);
  sub_A9BBC((uint64_t)v298);
  sub_A9BBC(v303);
  sub_A9BBC((uint64_t)v247);
  sub_A9BBC((uint64_t)v248);
  sub_A9BBC((uint64_t)v273);
  uint64_t v258 = v306;
  swift_bridgeObjectRetain_n();
  v259 = sub_1FB410();
  os_log_type_t v260 = sub_1FBDC0();
  if (os_log_type_enabled(v259, v260))
  {
    uint64_t v261 = (uint8_t *)swift_slowAlloc();
    uint64_t v307 = swift_slowAlloc();
    *(_DWORD *)uint64_t v261 = 136315138;
    uint64_t v262 = sub_1EF6A4(v258);
    uint64_t v305 = sub_D5890(v262, v263, &v307);
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v259, v260, "Clustered: %s", v261, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
    swift_release();
  }
  else
  {
    swift_release();

    swift_bridgeObjectRelease_n();
  }

  sub_7B918((uint64_t)v285);
  sub_7B918((uint64_t)v283);
  long long v264 = v271;
  swift_beginAccess();
  unint64_t v265 = v306;
  uint64_t result = swift_release();
  uint64_t v267 = v318;
  *long long v264 = v265;
  v264[1] = v267;
  return result;
}

uint64_t sub_63F5C(uint64_t a1, uint64_t a2)
{
  swift_beginAccess();
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v6 = *(void *)(a2 + 16);
  *(void *)(a2 + 16) = 0x8000000000000000;
  sub_6DC00(a1, (uint64_t)sub_74710, 0, isUniquelyReferenced_nonNull_native, &v6);
  *(void *)(a2 + 16) = v6;
  swift_bridgeObjectRelease();
  return swift_endAccess();
}

uint64_t sub_64008(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a7;
  v8[6] = a8;
  v8[3] = a5;
  v8[4] = a6;
  void v8[2] = a4;
  return _swift_task_switch(sub_64030, 0, 0);
}

uint64_t sub_64030()
{
  uint64_t v1 = v0;
  uint64_t v2 = v0[3];
  int64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    uint64_t v16 = v1;
    sub_467B8(0, v3, 0);
    uint64_t v4 = (void *)(v2 + 104);
    do
    {
      uint64_t v21 = *(v4 - 9);
      char v20 = *((unsigned char *)v4 - 64);
      uint64_t v19 = *(v4 - 7);
      char v18 = *((unsigned char *)v4 - 48);
      uint64_t v5 = *(v4 - 5);
      char v6 = *((unsigned char *)v4 - 32);
      uint64_t v7 = *(v4 - 3);
      uint64_t v17 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v9 = *v4;
      sub_5480C(v5, v6);
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1) {
        sub_467B8(v11 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      uint64_t v12 = &_swiftEmptyArrayStorage[10 * v10];
      v12[4] = v21;
      *((unsigned char *)v12 + 40) = v20;
      v12[6] = v19;
      *((unsigned char *)v12 + 56) = v18;
      v12[8] = v5;
      *((unsigned char *)v12 + 72) = v6;
      v12[10] = v7;
      v12[11] = v17;
      v12[12] = v8;
      v12[13] = v9;
      v4 += 19;
      --v3;
    }
    while (v3);
    uint64_t v1 = v16;
  }
  v1[7] = _swiftEmptyArrayStorage;
  uint64_t v13 = (void *)swift_task_alloc();
  v1[8] = v13;
  *uint64_t v13 = v1;
  v13[1] = sub_64224;
  uint64_t v14 = v1[2];
  _DWORD v13[2] = _swiftEmptyArrayStorage;
  v13[3] = v14;
  return _swift_task_switch(sub_64464, 0, 0);
}

uint64_t sub_64224(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 72) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_643E0;
  }
  else
  {
    swift_bridgeObjectRelease();
    *(void *)(v4 + 80) = a1;
    uint64_t v5 = sub_64354;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_64354()
{
  (*(void (**)(void))(v0 + 32))(*(void *)(v0 + 80));
  swift_bridgeObjectRelease();
  sub_1FBE10();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_643E0()
{
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_64444(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_64464, 0, 0);
}

void *sub_64464()
{
  uint64_t v1 = v0[2];
  int64_t v2 = *(void *)(v1 + 16);
  if (!v2)
  {
LABEL_20:
    v0[4] = _swiftEmptyArrayStorage;
    v0[5] = _swiftEmptyDictionarySingleton;
    int v29 = (void *)v0[3];
    uint64_t v30 = v29[5];
    uint64_t v31 = v29[6];
    sub_5D64(v29 + 2, v30);
    long long v41 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v31 + 16) + **(int **)(v31 + 16));
    uint64_t v32 = (void *)swift_task_alloc();
    v0[6] = v32;
    *uint64_t v32 = v0;
    v32[1] = sub_64890;
    return (void *)v41(_swiftEmptyArrayStorage, v30, v31);
  }
  long long v33 = (uint64_t *)(v1 + 32);
  uint64_t v3 = (void *)(swift_bridgeObjectRetain() + 104);
  int64_t v34 = v2;
  while (1)
  {
    int64_t v36 = v2;
    uint64_t v5 = *(v3 - 9);
    char v37 = *((unsigned char *)v3 - 64);
    uint64_t v38 = *(v3 - 7);
    char v39 = *((unsigned char *)v3 - 48);
    uint64_t v6 = *(v3 - 5);
    char v7 = *((unsigned char *)v3 - 32);
    uint64_t v8 = *(v3 - 3);
    uint64_t v40 = *(v3 - 2);
    uint64_t v9 = *(v3 - 1);
    uint64_t v10 = *v3;
    sub_5480C(v6, v7);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v13 = sub_56168(v5);
    uint64_t v14 = _swiftEmptyDictionarySingleton[2];
    BOOL v15 = (v12 & 1) == 0;
    uint64_t result = (void *)(v14 + v15);
    if (__OFADD__(v14, v15))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    char v17 = v12;
    if (_swiftEmptyDictionarySingleton[3] < (uint64_t)result) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v12 & 1) == 0) {
        goto LABEL_12;
      }
    }
    else
    {
      uint64_t result = sub_120B90();
      if ((v17 & 1) == 0)
      {
LABEL_12:
        _swiftEmptyDictionarySingleton[(v13 >> 6) + 8] |= 1 << v13;
        *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v13) = v5;
        uint64_t v19 = _swiftEmptyDictionarySingleton[7] + 80 * v13;
        *(void *)uint64_t v19 = v5;
        *(unsigned char *)(v19 + 8) = v37;
        *(void *)(v19 + 16) = v38;
        *(unsigned char *)(v19 + 24) = v39;
        *(void *)(v19 + 32) = v6;
        *(unsigned char *)(v19 + 40) = v7;
        *(void *)(v19 + 48) = v8;
        *(void *)(v19 + 56) = v40;
        *(void *)(v19 + 64) = v9;
        *(void *)(v19 + 72) = v10;
        uint64_t v20 = _swiftEmptyDictionarySingleton[2];
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_27;
        }
        _swiftEmptyDictionarySingleton[2] = v22;
        goto LABEL_4;
      }
    }
LABEL_3:
    uint64_t v4 = _swiftEmptyDictionarySingleton[7] + 80 * v13;
    sub_54820(*(void *)(v4 + 32), *(unsigned char *)(v4 + 40));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v4 = v5;
    *(unsigned char *)(v4 + 8) = v37;
    *(void *)(v4 + 16) = v38;
    *(unsigned char *)(v4 + 24) = v39;
    *(void *)(v4 + 32) = v6;
    *(unsigned char *)(v4 + 40) = v7;
    *(void *)(v4 + 48) = v8;
    *(void *)(v4 + 56) = v40;
    *(void *)(v4 + 64) = v9;
    *(void *)(v4 + 72) = v10;
LABEL_4:
    swift_bridgeObjectRelease();
    v3 += 10;
    int64_t v2 = v36 - 1;
    if (v36 == 1)
    {
      uint64_t v0 = v35;
      swift_bridgeObjectRelease();
      int64_t v23 = v34;
      sub_46538(0, v34, 0);
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      long long v25 = v33;
      do
      {
        uint64_t v27 = *v25;
        v25 += 10;
        uint64_t v26 = v27;
        unint64_t v28 = _swiftEmptyArrayStorage[3];
        if (v24 >= v28 >> 1) {
          sub_46538(v28 > 1, v24 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v24 + 1;
        _swiftEmptyArrayStorage[v24++ + 4] = v26;
        --v23;
      }
      while (v23);
      goto LABEL_20;
    }
  }
  sub_117EAC((uint64_t)result, isUniquelyReferenced_nonNull_native);
  uint64_t result = (void *)sub_56168(v5);
  if ((v17 & 1) == (v18 & 1))
  {
    unint64_t v13 = (unint64_t)result;
    if ((v17 & 1) == 0) {
      goto LABEL_12;
    }
    goto LABEL_3;
  }
  return (void *)sub_1FC770();
}

uint64_t sub_64890(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 56) = a1;
  *(void *)(v3 + 64) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_64E4C;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_649AC;
  }
  return _swift_task_switch(v4, 0, 0);
}

void sub_649AC()
{
  int64_t v1 = 0;
  uint64_t v2 = *(void *)(v0 + 56);
  uint64_t v46 = *(void *)(v0 + 40);
  uint64_t v3 = v2 + 64;
  uint64_t v4 = -1;
  uint64_t v5 = -1 << *(unsigned char *)(v2 + 32);
  if (-v5 < 64) {
    uint64_t v4 = ~(-1 << -(char)v5);
  }
  unint64_t v6 = v4 & *(void *)(v2 + 64);
  int64_t v7 = (unint64_t)(63 - v5) >> 6;
  uint64_t v43 = &_swiftEmptyDictionarySingleton;
  while (v6)
  {
    unint64_t v8 = __clz(__rbit64(v6));
    v6 &= v6 - 1;
    unint64_t v9 = v8 | (v1 << 6);
LABEL_20:
    unint64_t v13 = (unsigned __int8 *)(*(void *)(v2 + 56) + 80 * v9);
    if ((v13[32] & 1) == 0)
    {
      if (*(void *)(v46 + 16))
      {
        uint64_t v14 = *(void *)(*(void *)(v2 + 48) + 8 * v9);
        int v15 = *v13;
        uint64_t v16 = *((void *)v13 + 3);
        uint64_t v17 = sub_56168(v14);
        if (v18)
        {
          uint64_t v19 = *(void *)(v46 + 56) + 80 * v17;
          uint64_t v20 = *(void *)(v19 + 32);
          char v39 = *(unsigned char *)(v19 + 40);
          uint64_t v38 = *(void *)(v19 + 56);
          uint64_t v41 = *(void *)(v19 + 48);
          uint64_t v42 = *(void *)(v19 + 64);
          uint64_t v21 = *(void *)(v19 + 72);
          if (v15) {
            char v37 = sub_1FC5F0();
          }
          else {
            char v37 = 1;
          }
          sub_5480C(v20, v39);
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRetain_n();
          swift_bridgeObjectRelease();
          sub_54820(v20, v39);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v22 = v43;
          char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
          long long v47 = v43;
          unint64_t v23 = sub_56168(v14);
          uint64_t v25 = v43[2];
          BOOL v26 = (v24 & 1) == 0;
          BOOL v27 = __OFADD__(v25, v26);
          uint64_t v28 = v25 + v26;
          if (v27) {
            goto LABEL_45;
          }
          char v29 = v24;
          if (v43[3] < v28)
          {
            sub_117EAC(v28, isUniquelyReferenced_nonNull_native);
            uint64_t v22 = v43;
            unint64_t v23 = sub_56168(v14);
            if ((v29 & 1) != (v30 & 1)) {
              goto LABEL_41;
            }
LABEL_31:
            uint64_t v43 = v22;
            if (v29) {
              goto LABEL_32;
            }
            goto LABEL_34;
          }
          if (isUniquelyReferenced_nonNull_native) {
            goto LABEL_31;
          }
          char v44 = v24;
          unint64_t v32 = v23;
          sub_120B90();
          unint64_t v23 = v32;
          LOBYTE(v32) = v44;
          uint64_t v22 = v47;
          uint64_t v43 = v47;
          if (v32)
          {
LABEL_32:
            uint64_t v31 = v22[7] + 80 * v23;
            sub_54820(*(void *)(v31 + 32), *(unsigned char *)(v31 + 40));
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            *(void *)uint64_t v31 = v16;
            *(unsigned char *)(v31 + 8) = v37 & 1;
            *(void *)(v31 + 16) = 0;
            *(unsigned char *)(v31 + 24) = 1;
            *(void *)(v31 + 32) = 0;
            *(unsigned char *)(v31 + 40) = -1;
            *(void *)(v31 + 48) = v41;
            *(void *)(v31 + 56) = v38;
            *(void *)(v31 + 64) = v42;
            *(void *)(v31 + 72) = v21;
            goto LABEL_36;
          }
LABEL_34:
          v22[(v23 >> 6) + 8] |= 1 << v23;
          *(void *)(v22[6] + 8 * v23) = v14;
          uint64_t v33 = v22[7] + 80 * v23;
          *(void *)uint64_t v33 = v16;
          *(unsigned char *)(v33 + 8) = v37 & 1;
          *(void *)(v33 + 16) = 0;
          *(unsigned char *)(v33 + 24) = 1;
          *(void *)(v33 + 32) = 0;
          *(unsigned char *)(v33 + 40) = -1;
          *(void *)(v33 + 48) = v41;
          *(void *)(v33 + 56) = v38;
          *(void *)(v33 + 64) = v42;
          *(void *)(v33 + 72) = v21;
          uint64_t v34 = v22[2];
          BOOL v27 = __OFADD__(v34, 1);
          uint64_t v35 = v34 + 1;
          if (v27) {
            goto LABEL_46;
          }
          _OWORD v22[2] = v35;
LABEL_36:
          swift_bridgeObjectRelease();
        }
      }
    }
  }
  int64_t v10 = v1 + 1;
  if (!__OFADD__(v1, 1))
  {
    if (v10 >= v7) {
      goto LABEL_37;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v1;
    if (!v11)
    {
      int64_t v1 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_37;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v1);
      if (!v11)
      {
        int64_t v1 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_37;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v1);
        if (!v11)
        {
          int64_t v12 = v10 + 3;
          if (v12 >= v7)
          {
LABEL_37:
            swift_release();
            swift_bridgeObjectRelease();
            int64_t v36 = *(void (**)(void *))(v45 + 8);
            v36(v43);
            return;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v12);
          if (!v11)
          {
            while (1)
            {
              int64_t v1 = v12 + 1;
              if (__OFADD__(v12, 1)) {
                break;
              }
              if (v1 >= v7) {
                goto LABEL_37;
              }
              unint64_t v11 = *(void *)(v3 + 8 * v1);
              ++v12;
              if (v11) {
                goto LABEL_19;
              }
            }
            __break(1u);
LABEL_45:
            __break(1u);
LABEL_46:
            __break(1u);
            return;
          }
          int64_t v1 = v12;
        }
      }
    }
LABEL_19:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v1 << 6);
    goto LABEL_20;
  }
  __break(1u);
LABEL_41:
  sub_1FC770();
}

uint64_t sub_64E4C()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  int64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_64EB8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = sub_1FBC60();
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v5) != 1)
  {
    sub_1FBC50();
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(a1, v5);
    if (!*(void *)(a3 + 16)) {
      return swift_task_create();
    }
    goto LABEL_3;
  }
  sub_55F38(a1, &qword_26D908);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1FBBD0();
    swift_unknownObjectRelease();
  }
  return swift_task_create();
}

uint64_t sub_65040(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_73A4(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_6519C(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 56;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 56);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        return swift_release();
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          return swift_release();
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            return swift_release();
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    sub_1269C(*(void *)(v1 + 48) + 560 * v9, (uint64_t)v15);
    sub_127D4(v15, sub_126F8);
    sub_7E24((uint64_t)v13, (uint64_t)v15);
    sub_1269C((uint64_t)v13, (uint64_t)v14);
    uint64_t result = sub_127D4(v14, sub_128C0);
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7) {
    return swift_release();
  }
  unint64_t v11 = *(void *)(v3 + 8 * v12);
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      return swift_release();
    }
    unint64_t v11 = *(void *)(v3 + 8 * v2);
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

void *sub_65348(void *result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 7;
  uint64_t v4 = 1 << *((unsigned char *)result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & result[7];
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v10 >= v7) {
      return (void *)swift_release();
    }
    unint64_t v11 = v3[v10];
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        return (void *)swift_release();
      }
      unint64_t v11 = v3[v2];
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          return (void *)swift_release();
        }
        unint64_t v11 = v3[v2];
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            return (void *)swift_release();
          }
          unint64_t v11 = v3[v2];
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    memcpy(__dst, (const void *)(v1[6] + 560 * v9), 0x229uLL);
    sub_12384(__dst);
    sub_74A0(v13, __dst);
    memcpy(v14, v13, 0x229uLL);
    uint64_t result = sub_124B4(v14);
  }
  int64_t v12 = v10 + 4;
  if (v12 >= v7) {
    return (void *)swift_release();
  }
  unint64_t v11 = v3[v12];
  if (v11)
  {
    int64_t v2 = v12;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v2 = v12 + 1;
    if (__OFADD__(v12, 1)) {
      break;
    }
    if (v2 >= v7) {
      return (void *)swift_release();
    }
    unint64_t v11 = v3[v2];
    ++v12;
    if (v11) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_654D4(uint64_t result)
{
  uint64_t v1 = result;
  int64_t v2 = 0;
  uint64_t v3 = result + 64;
  uint64_t v4 = 1 << *(unsigned char *)(result + 32);
  uint64_t v5 = -1;
  if (v4 < 64) {
    uint64_t v5 = ~(-1 << v4);
  }
  unint64_t v6 = v5 & *(void *)(result + 64);
  int64_t v7 = (unint64_t)(v4 + 63) >> 6;
  while (1)
  {
    if (v6)
    {
      unint64_t v8 = __clz(__rbit64(v6));
      v6 &= v6 - 1;
      unint64_t v9 = v8 | (v2 << 6);
      goto LABEL_5;
    }
    int64_t v10 = v2 + 1;
    if (__OFADD__(v2, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      return result;
    }
    if (v10 >= v7) {
      goto LABEL_23;
    }
    unint64_t v11 = *(void *)(v3 + 8 * v10);
    ++v2;
    if (!v11)
    {
      int64_t v2 = v10 + 1;
      if (v10 + 1 >= v7) {
        goto LABEL_23;
      }
      unint64_t v11 = *(void *)(v3 + 8 * v2);
      if (!v11)
      {
        int64_t v2 = v10 + 2;
        if (v10 + 2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        if (!v11)
        {
          int64_t v2 = v10 + 3;
          if (v10 + 3 >= v7) {
            goto LABEL_23;
          }
          unint64_t v11 = *(void *)(v3 + 8 * v2);
          if (!v11) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v6 = (v11 - 1) & v11;
    unint64_t v9 = __clz(__rbit64(v11)) + (v2 << 6);
LABEL_5:
    uint64_t result = sub_73A4(&v13, *(void *)(*(void *)(v1 + 48) + 8 * v9));
  }
  int64_t v12 = v10 + 4;
  if (v12 < v7)
  {
    unint64_t v11 = *(void *)(v3 + 8 * v12);
    if (!v11)
    {
      while (1)
      {
        int64_t v2 = v12 + 1;
        if (__OFADD__(v12, 1)) {
          goto LABEL_27;
        }
        if (v2 >= v7) {
          goto LABEL_23;
        }
        unint64_t v11 = *(void *)(v3 + 8 * v2);
        ++v12;
        if (v11) {
          goto LABEL_22;
        }
      }
    }
    int64_t v2 = v12;
    goto LABEL_22;
  }
LABEL_23:

  return swift_release();
}

uint64_t sub_65630(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v45 = a3;
  uint64_t v44 = a1;
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v29 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  long long v31 = xmmword_1FD2A0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = *(void *)(a2 + 56) + 152 * i;
    long long v16 = *(_OWORD *)(v15 + 16);
    long long v34 = *(_OWORD *)v15;
    long long v35 = v16;
    long long v17 = *(_OWORD *)(v15 + 80);
    long long v19 = *(_OWORD *)(v15 + 32);
    long long v18 = *(_OWORD *)(v15 + 48);
    long long v38 = *(_OWORD *)(v15 + 64);
    long long v39 = v17;
    long long v36 = v19;
    long long v37 = v18;
    long long v21 = *(_OWORD *)(v15 + 112);
    long long v20 = *(_OWORD *)(v15 + 128);
    long long v22 = *(_OWORD *)(v15 + 96);
    char v43 = *(unsigned char *)(v15 + 144);
    long long v41 = v21;
    long long v42 = v20;
    long long v40 = v22;
    uint64_t v23 = v39;
    v32[6] = v22;
    v32[7] = v21;
    v32[8] = v20;
    char v33 = v43;
    _OWORD v32[2] = v19;
    _OWORD v32[3] = v37;
    v32[4] = v38;
    v32[5] = v39;
    v32[0] = v34;
    v32[1] = v35;
    sub_12124(&qword_26D3C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v31;
    uint64_t result = sub_5744(v23);
    if (v25) {
      break;
    }
    *(void *)(inited + 32) = result;
    uint64_t v26 = sub_BDF88(inited);
    uint64_t v27 = swift_setDeallocating();
    __chkstk_darwin(v27);
    void v28[2] = &v44;
    v28[3] = v32;
    sub_54834((uint64_t)&v34);
    sub_6188(v45, (uint64_t)v28, v26);
    swift_bridgeObjectRelease();
    uint64_t result = sub_7A018((uint64_t)&v34);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v9 >= v30) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v9);
    if (!v13)
    {
      int64_t v14 = v9 + 1;
      if (v9 + 1 >= v30) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v29 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v30) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v30) {
            goto LABEL_25;
          }
          unint64_t v13 = *(void *)(v29 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v30)
            {
LABEL_25:
              swift_release();
              return v44;
            }
            unint64_t v13 = *(void *)(v29 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v9 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_27;
                }
                if (v9 >= v30) {
                  goto LABEL_25;
                }
                unint64_t v13 = *(void *)(v29 + 8 * v9);
                ++v14;
                if (v13) {
                  goto LABEL_17;
                }
              }
            }
          }
        }
      }
      int64_t v9 = v14;
    }
LABEL_17:
    unint64_t v7 = (v13 - 1) & v13;
  }
  __break(1u);
  return result;
}

uint64_t sub_65900(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t *))
{
  uint64_t v45 = a3;
  uint64_t v44 = a1;
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v29 = a2 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a2 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & v4;
  int64_t v30 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  long long v31 = xmmword_1FD2A0;
  if (!v7) {
    goto LABEL_5;
  }
LABEL_4:
  unint64_t v10 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v10 | (v9 << 6); ; unint64_t i = __clz(__rbit64(v13)) + (v9 << 6))
  {
    uint64_t v15 = *(void *)(a2 + 56) + 152 * i;
    long long v16 = *(_OWORD *)(v15 + 16);
    long long v34 = *(_OWORD *)v15;
    long long v35 = v16;
    long long v17 = *(_OWORD *)(v15 + 80);
    long long v19 = *(_OWORD *)(v15 + 32);
    long long v18 = *(_OWORD *)(v15 + 48);
    long long v38 = *(_OWORD *)(v15 + 64);
    long long v39 = v17;
    long long v36 = v19;
    long long v37 = v18;
    long long v21 = *(_OWORD *)(v15 + 112);
    long long v20 = *(_OWORD *)(v15 + 128);
    long long v22 = *(_OWORD *)(v15 + 96);
    char v43 = *(unsigned char *)(v15 + 144);
    long long v41 = v21;
    long long v42 = v20;
    long long v40 = v22;
    uint64_t v23 = *((void *)&v39 + 1);
    v32[6] = v22;
    v32[7] = v21;
    v32[8] = v20;
    char v33 = v43;
    _OWORD v32[2] = v19;
    _OWORD v32[3] = v37;
    v32[4] = v38;
    v32[5] = v39;
    v32[0] = v34;
    v32[1] = v35;
    sub_12124(&qword_26D3C0);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = v31;
    uint64_t result = sub_5744(v23);
    if (v25) {
      break;
    }
    *(void *)(inited + 32) = result;
    uint64_t v26 = sub_BDF88(inited);
    uint64_t v27 = swift_setDeallocating();
    __chkstk_darwin(v27);
    void v28[2] = &v44;
    v28[3] = v32;
    sub_54834((uint64_t)&v34);
    sub_6188(v45, (uint64_t)v28, v26);
    swift_bridgeObjectRelease();
    uint64_t result = sub_7A018((uint64_t)&v34);
    if (v7) {
      goto LABEL_4;
    }
LABEL_5:
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    if (v9 >= v30) {
      goto LABEL_25;
    }
    unint64_t v13 = *(void *)(v29 + 8 * v9);
    if (!v13)
    {
      int64_t v14 = v9 + 1;
      if (v9 + 1 >= v30) {
        goto LABEL_25;
      }
      unint64_t v13 = *(void *)(v29 + 8 * v14);
      if (!v13)
      {
        int64_t v14 = v9 + 2;
        if (v9 + 2 >= v30) {
          goto LABEL_25;
        }
        unint64_t v13 = *(void *)(v29 + 8 * v14);
        if (!v13)
        {
          int64_t v14 = v9 + 3;
          if (v9 + 3 >= v30) {
            goto LABEL_25;
          }
          unint64_t v13 = *(void *)(v29 + 8 * v14);
          if (!v13)
          {
            int64_t v14 = v9 + 4;
            if (v9 + 4 >= v30)
            {
LABEL_25:
              swift_release();
              return v44;
            }
            unint64_t v13 = *(void *)(v29 + 8 * v14);
            if (!v13)
            {
              while (1)
              {
                int64_t v9 = v14 + 1;
                if (__OFADD__(v14, 1)) {
                  goto LABEL_27;
                }
                if (v9 >= v30) {
                  goto LABEL_25;
                }
                unint64_t v13 = *(void *)(v29 + 8 * v9);
                ++v14;
                if (v13) {
                  goto LABEL_17;
                }
              }
            }
          }
        }
      }
      int64_t v9 = v14;
    }
LABEL_17:
    unint64_t v7 = (v13 - 1) & v13;
  }
  __break(1u);
  return result;
}

void *sub_65BD0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = sub_12124(&qword_26D938);
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v6 = __chkstk_darwin(v122);
  unint64_t v8 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  Swift::Int v117 = (char *)&v115 - v10;
  __chkstk_darwin(v9);
  uint64_t v116 = (char *)&v115 - v11;
  uint64_t v12 = sub_12124(&qword_26D958);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v119 = (uint64_t)&v115 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  int64_t v120 = (char *)&v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v115 - v23;
  __chkstk_darwin(v22);
  char v25 = (char *)&v115 - v24;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v138 = _swiftEmptyArrayStorage;
  *(void *)&long long v127 = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_12124(&qword_26D960);
  uint64_t v28 = sub_52CC0(&qword_26D968, &qword_26D960);
  uint64_t v123 = v25;
  uint64_t v125 = v27;
  uint64_t v124 = v28;
  sub_1FB3D0();
  if (!*(void *)(a4 + 16)
    || (sub_1FC7E0(),
        sub_1FB8C0(),
        Swift::Int v29 = sub_1FC830(),
        uint64_t v30 = -1 << *(unsigned char *)(a4 + 32),
        unint64_t v31 = v29 & ~v30,
        ((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0))
  {
LABEL_8:
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34)
    {
LABEL_37:
      *(void *)&long long v127 = _swiftEmptyArrayStorage;
      sub_1FB3D0();
LABEL_38:
      *(void *)&long long v127 = v26;
      uint64_t v74 = (uint64_t)v120;
      sub_1FB3D0();
      uint64_t v75 = v122;
      uint64_t v76 = v121;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      sub_1FC7E0();
      sub_1FB8C0();
      Swift::Int v77 = sub_1FC830();
      uint64_t v78 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v79 = v77 & ~v78;
      uint64_t v80 = a4 + 56;
      if ((*(void *)(a4 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79))
      {
        uint64_t v81 = ~v78;
        while (1)
        {
          int v82 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v79);
          if (v82 != 1 && v82 != 2) {
            break;
          }
          char v83 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v83) {
            goto LABEL_48;
          }
          unint64_t v79 = (v79 + 1) & v81;
          if (((*(void *)(v80 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79) & 1) == 0) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        uint64_t v91 = v119;
        sub_5606C(v126, v119, &qword_26D958);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v91, 1, v75) != 1)
        {
          long long v97 = v117;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v117, v91, v75);
          sub_12124(&qword_26D9B0);
          long long v98 = (int *)(sub_12124(&qword_26D9B8) - 8);
          unint64_t v99 = (*(unsigned __int8 *)(*(void *)v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v98 + 80);
          uint64_t v100 = swift_allocObject();
          *(_OWORD *)(v100 + 16) = xmmword_1FD2A0;
          char v101 = (void *)(v100 + v99);
          unint64_t v102 = v100 + v99 + v98[14];
          *char v101 = 0xD00000000000001ALL;
          v101[1] = 0x80000000002175B0;
          (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v102, v97, v75);
          unint64_t v103 = sub_160EF0(v100);
          unint64_t v104 = sub_6BDA4(v103, (uint64_t)sub_6B614, 4);
          swift_bridgeObjectRelease();
          sub_A9BBC(v104);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v97, v75);
          if (!*(void *)(a4 + 16)) {
            goto LABEL_64;
          }
LABEL_51:
          sub_1FC7E0();
          sub_1FB8C0();
          Swift::Int v92 = sub_1FC830();
          uint64_t v93 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v94 = v92 & ~v93;
          if ((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94))
          {
            uint64_t v95 = ~v93;
            while (!*(unsigned char *)(*(void *)(a4 + 48) + v94) || *(unsigned char *)(*(void *)(a4 + 48) + v94) == 2)
            {
              char v96 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              if (v96) {
                goto LABEL_61;
              }
              unint64_t v94 = (v94 + 1) & v95;
              if (((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94) & 1) == 0) {
                goto LABEL_64;
              }
            }
            swift_bridgeObjectRelease();
LABEL_61:
            uint64_t v105 = v118;
            sub_5606C(v74, v118, &qword_26D958);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v105, 1, v75) == 1)
            {
              sub_55F38(v74, &qword_26D958);
              sub_55F38(v126, &qword_26D958);
              sub_55F38((uint64_t)v123, &qword_26D958);
              uint64_t v123 = (char *)v105;
              goto LABEL_65;
            }
            uint64_t v106 = v116;
            (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v116, v105, v75);
            sub_12124(&qword_26D9B0);
            uint64_t v107 = (int *)(sub_12124(&qword_26D9B8) - 8);
            unint64_t v108 = (*(unsigned __int8 *)(*(void *)v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v107 + 80);
            uint64_t v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = xmmword_1FD2A0;
            long long v110 = (void *)(v109 + v108);
            unint64_t v111 = v109 + v108 + v107[14];
            *long long v110 = 0xD00000000000001ALL;
            v110[1] = 0x80000000002175B0;
            (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v111, v106, v75);
            unint64_t v112 = sub_160EF0(v109);
            unint64_t v113 = sub_6BDA4(v112, (uint64_t)sub_6B614, 4);
            swift_bridgeObjectRelease();
            sub_A9BBC(v113);
            (*(void (**)(char *, uint64_t))(v76 + 8))(v106, v75);
          }
LABEL_64:
          sub_55F38(v74, &qword_26D958);
          sub_55F38(v126, &qword_26D958);
          goto LABEL_65;
        }
        sub_55F38(v91, &qword_26D958);
      }
LABEL_50:
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_51;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v35 = v34 - 1;
    long long v36 = _swiftEmptyArrayStorage;
    uint64_t v37 = 32;
    for (uint64_t i = v34 - 1; ; --i)
    {
      long long v39 = *(_OWORD *)(a1 + v37 + 112);
      long long v133 = *(_OWORD *)(a1 + v37 + 96);
      long long v134 = v39;
      long long v135 = *(_OWORD *)(a1 + v37 + 128);
      char v136 = *(unsigned char *)(a1 + v37 + 144);
      long long v40 = *(_OWORD *)(a1 + v37 + 48);
      long long v129 = *(_OWORD *)(a1 + v37 + 32);
      long long v130 = v40;
      long long v41 = *(_OWORD *)(a1 + v37 + 80);
      long long v131 = *(_OWORD *)(a1 + v37 + 64);
      long long v132 = v41;
      long long v42 = *(_OWORD *)(a1 + v37 + 16);
      long long v127 = *(_OWORD *)(a1 + v37);
      long long v128 = v42;
      if ((BYTE8(v127) & 1) == 0) {
        break;
      }
      char v43 = sub_1FC5F0();
      sub_54834((uint64_t)&v127);
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_15;
      }
      sub_7A018((uint64_t)&v127);
      if (!i) {
        goto LABEL_21;
      }
LABEL_20:
      v37 += 152;
    }
    sub_54834((uint64_t)&v127);
    swift_bridgeObjectRelease();
LABEL_15:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_467D8(0, v36[2] + 1, 1);
      long long v36 = v137;
    }
    unint64_t v46 = v36[2];
    unint64_t v45 = v36[3];
    if (v46 >= v45 >> 1)
    {
      sub_467D8(v45 > 1, v46 + 1, 1);
      long long v36 = v137;
    }
    void v36[2] = v46 + 1;
    long long v47 = &v36[19 * v46];
    long long v48 = v128;
    *((_OWORD *)v47 + 2) = v127;
    *((_OWORD *)v47 + 3) = v48;
    long long v49 = v129;
    long long v50 = v130;
    long long v51 = v132;
    *((_OWORD *)v47 + 6) = v131;
    *((_OWORD *)v47 + 7) = v51;
    *((_OWORD *)v47 + 4) = v49;
    *((_OWORD *)v47 + 5) = v50;
    long long v52 = v133;
    long long v53 = v134;
    long long v54 = v135;
    *((unsigned char *)v47 + 176) = v136;
    *((_OWORD *)v47 + 9) = v53;
    *((_OWORD *)v47 + 10) = v54;
    *((_OWORD *)v47 + 8) = v52;
    if (i) {
      goto LABEL_20;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v127 = v36;
    sub_1FB3D0();
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    for (uint64_t j = 32; ; j += 152)
    {
      long long v56 = *(_OWORD *)(a1 + j + 112);
      long long v133 = *(_OWORD *)(a1 + j + 96);
      long long v134 = v56;
      long long v135 = *(_OWORD *)(a1 + j + 128);
      char v136 = *(unsigned char *)(a1 + j + 144);
      long long v57 = *(_OWORD *)(a1 + j + 48);
      long long v129 = *(_OWORD *)(a1 + j + 32);
      long long v130 = v57;
      long long v58 = *(_OWORD *)(a1 + j + 80);
      long long v131 = *(_OWORD *)(a1 + j + 64);
      long long v132 = v58;
      long long v59 = *(_OWORD *)(a1 + j + 16);
      long long v127 = *(_OWORD *)(a1 + j);
      long long v128 = v59;
      if (BYTE8(v127) == 1)
      {
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v60 = sub_1FC5F0();
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
        {
          sub_7A018((uint64_t)&v127);
          if (!v35) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v137 = v26;
      if ((v61 & 1) == 0)
      {
        sub_467D8(0, v26[2] + 1, 1);
        uint64_t v26 = v137;
      }
      unint64_t v63 = v26[2];
      unint64_t v62 = v26[3];
      if (v63 >= v62 >> 1)
      {
        sub_467D8(v62 > 1, v63 + 1, 1);
        uint64_t v26 = v137;
      }
      _OWORD v26[2] = v63 + 1;
      long long v64 = &v26[19 * v63];
      long long v65 = v128;
      *((_OWORD *)v64 + 2) = v127;
      *((_OWORD *)v64 + 3) = v65;
      long long v66 = v129;
      long long v67 = v130;
      long long v68 = v132;
      *((_OWORD *)v64 + 6) = v131;
      *((_OWORD *)v64 + 7) = v68;
      *((_OWORD *)v64 + 4) = v66;
      *((_OWORD *)v64 + 5) = v67;
      long long v69 = v133;
      long long v70 = v134;
      long long v71 = v135;
      *((unsigned char *)v64 + 176) = v136;
      *((_OWORD *)v64 + 9) = v70;
      *((_OWORD *)v64 + 10) = v71;
      *((_OWORD *)v64 + 8) = v69;
      if (!v35)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_32:
      --v35;
    }
  }
  uint64_t v32 = ~v30;
  while (!*(unsigned char *)(*(void *)(a4 + 48) + v31) || *(unsigned char *)(*(void *)(a4 + 48) + v31) == 1)
  {
    char v33 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_35;
    }
    unint64_t v31 = (v31 + 1) & v32;
    if (((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_35:
  sub_5606C((uint64_t)v123, (uint64_t)v15, &qword_26D958);
  uint64_t v72 = v121;
  uint64_t v73 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v15, 1, v122) == 1)
  {
    sub_55F38((uint64_t)v15, &qword_26D958);
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v8, v15, v73);
  sub_12124(&qword_26D9B0);
  long long v84 = (int *)(sub_12124(&qword_26D9B8) - 8);
  unint64_t v85 = (*(unsigned __int8 *)(*(void *)v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v84 + 80);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1FD2A0;
  long long v87 = (void *)(v86 + v85);
  unint64_t v88 = v86 + v85 + v84[14];
  *long long v87 = 0xD00000000000001ALL;
  v87[1] = 0x80000000002175B0;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 16))(v88, v8, v73);
  unint64_t v89 = sub_160EF0(v86);
  unint64_t v90 = sub_6BDA4(v89, (uint64_t)sub_6B614, 4);
  swift_bridgeObjectRelease();
  sub_A9BBC(v90);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v73);
LABEL_65:
  sub_55F38((uint64_t)v123, &qword_26D958);
  return v138;
}

void *sub_66A48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = sub_12124(&qword_26D938);
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v6 = __chkstk_darwin(v122);
  unint64_t v8 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  Swift::Int v117 = (char *)&v115 - v10;
  __chkstk_darwin(v9);
  uint64_t v116 = (char *)&v115 - v11;
  uint64_t v12 = sub_12124(&qword_26D958);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v119 = (uint64_t)&v115 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  int64_t v120 = (char *)&v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v115 - v23;
  __chkstk_darwin(v22);
  char v25 = (char *)&v115 - v24;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v138 = _swiftEmptyArrayStorage;
  *(void *)&long long v127 = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_12124(&qword_26D960);
  uint64_t v28 = sub_52CC0(&qword_26D968, &qword_26D960);
  uint64_t v123 = v25;
  uint64_t v125 = v27;
  uint64_t v124 = v28;
  sub_1FB3D0();
  if (!*(void *)(a4 + 16)
    || (sub_1FC7E0(),
        sub_1FB8C0(),
        Swift::Int v29 = sub_1FC830(),
        uint64_t v30 = -1 << *(unsigned char *)(a4 + 32),
        unint64_t v31 = v29 & ~v30,
        ((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0))
  {
LABEL_8:
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34)
    {
LABEL_37:
      *(void *)&long long v127 = _swiftEmptyArrayStorage;
      sub_1FB3D0();
LABEL_38:
      *(void *)&long long v127 = v26;
      uint64_t v74 = (uint64_t)v120;
      sub_1FB3D0();
      uint64_t v75 = v122;
      uint64_t v76 = v121;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      sub_1FC7E0();
      sub_1FB8C0();
      Swift::Int v77 = sub_1FC830();
      uint64_t v78 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v79 = v77 & ~v78;
      uint64_t v80 = a4 + 56;
      if ((*(void *)(a4 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79))
      {
        uint64_t v81 = ~v78;
        while (1)
        {
          int v82 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v79);
          if (v82 != 1 && v82 != 2) {
            break;
          }
          char v83 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v83) {
            goto LABEL_48;
          }
          unint64_t v79 = (v79 + 1) & v81;
          if (((*(void *)(v80 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79) & 1) == 0) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        uint64_t v91 = v119;
        sub_5606C(v126, v119, &qword_26D958);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v91, 1, v75) != 1)
        {
          long long v97 = v117;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v117, v91, v75);
          sub_12124(&qword_26D9B0);
          long long v98 = (int *)(sub_12124(&qword_26D9B8) - 8);
          unint64_t v99 = (*(unsigned __int8 *)(*(void *)v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v98 + 80);
          uint64_t v100 = swift_allocObject();
          *(_OWORD *)(v100 + 16) = xmmword_1FD2A0;
          char v101 = (void *)(v100 + v99);
          unint64_t v102 = v100 + v99 + v98[14];
          *char v101 = 0xD000000000000014;
          v101[1] = 0x80000000002175D0;
          (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v102, v97, v75);
          unint64_t v103 = sub_160EF0(v100);
          unint64_t v104 = sub_6BDA4(v103, (uint64_t)sub_6B614, 6);
          swift_bridgeObjectRelease();
          sub_A9BBC(v104);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v97, v75);
          if (!*(void *)(a4 + 16)) {
            goto LABEL_64;
          }
LABEL_51:
          sub_1FC7E0();
          sub_1FB8C0();
          Swift::Int v92 = sub_1FC830();
          uint64_t v93 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v94 = v92 & ~v93;
          if ((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94))
          {
            uint64_t v95 = ~v93;
            while (!*(unsigned char *)(*(void *)(a4 + 48) + v94) || *(unsigned char *)(*(void *)(a4 + 48) + v94) == 2)
            {
              char v96 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              if (v96) {
                goto LABEL_61;
              }
              unint64_t v94 = (v94 + 1) & v95;
              if (((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94) & 1) == 0) {
                goto LABEL_64;
              }
            }
            swift_bridgeObjectRelease();
LABEL_61:
            uint64_t v105 = v118;
            sub_5606C(v74, v118, &qword_26D958);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v105, 1, v75) == 1)
            {
              sub_55F38(v74, &qword_26D958);
              sub_55F38(v126, &qword_26D958);
              sub_55F38((uint64_t)v123, &qword_26D958);
              uint64_t v123 = (char *)v105;
              goto LABEL_65;
            }
            uint64_t v106 = v116;
            (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v116, v105, v75);
            sub_12124(&qword_26D9B0);
            uint64_t v107 = (int *)(sub_12124(&qword_26D9B8) - 8);
            unint64_t v108 = (*(unsigned __int8 *)(*(void *)v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v107 + 80);
            uint64_t v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = xmmword_1FD2A0;
            long long v110 = (void *)(v109 + v108);
            unint64_t v111 = v109 + v108 + v107[14];
            *long long v110 = 0xD000000000000014;
            v110[1] = 0x80000000002175D0;
            (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v111, v106, v75);
            unint64_t v112 = sub_160EF0(v109);
            unint64_t v113 = sub_6BDA4(v112, (uint64_t)sub_6B614, 6);
            swift_bridgeObjectRelease();
            sub_A9BBC(v113);
            (*(void (**)(char *, uint64_t))(v76 + 8))(v106, v75);
          }
LABEL_64:
          sub_55F38(v74, &qword_26D958);
          sub_55F38(v126, &qword_26D958);
          goto LABEL_65;
        }
        sub_55F38(v91, &qword_26D958);
      }
LABEL_50:
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_51;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v35 = v34 - 1;
    long long v36 = _swiftEmptyArrayStorage;
    uint64_t v37 = 32;
    for (uint64_t i = v34 - 1; ; --i)
    {
      long long v39 = *(_OWORD *)(a1 + v37 + 112);
      long long v133 = *(_OWORD *)(a1 + v37 + 96);
      long long v134 = v39;
      long long v135 = *(_OWORD *)(a1 + v37 + 128);
      char v136 = *(unsigned char *)(a1 + v37 + 144);
      long long v40 = *(_OWORD *)(a1 + v37 + 48);
      long long v129 = *(_OWORD *)(a1 + v37 + 32);
      long long v130 = v40;
      long long v41 = *(_OWORD *)(a1 + v37 + 80);
      long long v131 = *(_OWORD *)(a1 + v37 + 64);
      long long v132 = v41;
      long long v42 = *(_OWORD *)(a1 + v37 + 16);
      long long v127 = *(_OWORD *)(a1 + v37);
      long long v128 = v42;
      if ((BYTE8(v127) & 1) == 0) {
        break;
      }
      char v43 = sub_1FC5F0();
      sub_54834((uint64_t)&v127);
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_15;
      }
      sub_7A018((uint64_t)&v127);
      if (!i) {
        goto LABEL_21;
      }
LABEL_20:
      v37 += 152;
    }
    sub_54834((uint64_t)&v127);
    swift_bridgeObjectRelease();
LABEL_15:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_467D8(0, v36[2] + 1, 1);
      long long v36 = v137;
    }
    unint64_t v46 = v36[2];
    unint64_t v45 = v36[3];
    if (v46 >= v45 >> 1)
    {
      sub_467D8(v45 > 1, v46 + 1, 1);
      long long v36 = v137;
    }
    void v36[2] = v46 + 1;
    long long v47 = &v36[19 * v46];
    long long v48 = v128;
    *((_OWORD *)v47 + 2) = v127;
    *((_OWORD *)v47 + 3) = v48;
    long long v49 = v129;
    long long v50 = v130;
    long long v51 = v132;
    *((_OWORD *)v47 + 6) = v131;
    *((_OWORD *)v47 + 7) = v51;
    *((_OWORD *)v47 + 4) = v49;
    *((_OWORD *)v47 + 5) = v50;
    long long v52 = v133;
    long long v53 = v134;
    long long v54 = v135;
    *((unsigned char *)v47 + 176) = v136;
    *((_OWORD *)v47 + 9) = v53;
    *((_OWORD *)v47 + 10) = v54;
    *((_OWORD *)v47 + 8) = v52;
    if (i) {
      goto LABEL_20;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v127 = v36;
    sub_1FB3D0();
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    for (uint64_t j = 32; ; j += 152)
    {
      long long v56 = *(_OWORD *)(a1 + j + 112);
      long long v133 = *(_OWORD *)(a1 + j + 96);
      long long v134 = v56;
      long long v135 = *(_OWORD *)(a1 + j + 128);
      char v136 = *(unsigned char *)(a1 + j + 144);
      long long v57 = *(_OWORD *)(a1 + j + 48);
      long long v129 = *(_OWORD *)(a1 + j + 32);
      long long v130 = v57;
      long long v58 = *(_OWORD *)(a1 + j + 80);
      long long v131 = *(_OWORD *)(a1 + j + 64);
      long long v132 = v58;
      long long v59 = *(_OWORD *)(a1 + j + 16);
      long long v127 = *(_OWORD *)(a1 + j);
      long long v128 = v59;
      if (BYTE8(v127) == 1)
      {
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v60 = sub_1FC5F0();
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
        {
          sub_7A018((uint64_t)&v127);
          if (!v35) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v137 = v26;
      if ((v61 & 1) == 0)
      {
        sub_467D8(0, v26[2] + 1, 1);
        uint64_t v26 = v137;
      }
      unint64_t v63 = v26[2];
      unint64_t v62 = v26[3];
      if (v63 >= v62 >> 1)
      {
        sub_467D8(v62 > 1, v63 + 1, 1);
        uint64_t v26 = v137;
      }
      _OWORD v26[2] = v63 + 1;
      long long v64 = &v26[19 * v63];
      long long v65 = v128;
      *((_OWORD *)v64 + 2) = v127;
      *((_OWORD *)v64 + 3) = v65;
      long long v66 = v129;
      long long v67 = v130;
      long long v68 = v132;
      *((_OWORD *)v64 + 6) = v131;
      *((_OWORD *)v64 + 7) = v68;
      *((_OWORD *)v64 + 4) = v66;
      *((_OWORD *)v64 + 5) = v67;
      long long v69 = v133;
      long long v70 = v134;
      long long v71 = v135;
      *((unsigned char *)v64 + 176) = v136;
      *((_OWORD *)v64 + 9) = v70;
      *((_OWORD *)v64 + 10) = v71;
      *((_OWORD *)v64 + 8) = v69;
      if (!v35)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_32:
      --v35;
    }
  }
  uint64_t v32 = ~v30;
  while (!*(unsigned char *)(*(void *)(a4 + 48) + v31) || *(unsigned char *)(*(void *)(a4 + 48) + v31) == 1)
  {
    char v33 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_35;
    }
    unint64_t v31 = (v31 + 1) & v32;
    if (((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_35:
  sub_5606C((uint64_t)v123, (uint64_t)v15, &qword_26D958);
  uint64_t v72 = v121;
  uint64_t v73 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v15, 1, v122) == 1)
  {
    sub_55F38((uint64_t)v15, &qword_26D958);
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v8, v15, v73);
  sub_12124(&qword_26D9B0);
  long long v84 = (int *)(sub_12124(&qword_26D9B8) - 8);
  unint64_t v85 = (*(unsigned __int8 *)(*(void *)v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v84 + 80);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1FD2A0;
  long long v87 = (void *)(v86 + v85);
  unint64_t v88 = v86 + v85 + v84[14];
  *long long v87 = 0xD000000000000014;
  v87[1] = 0x80000000002175D0;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 16))(v88, v8, v73);
  unint64_t v89 = sub_160EF0(v86);
  unint64_t v90 = sub_6BDA4(v89, (uint64_t)sub_6B614, 6);
  swift_bridgeObjectRelease();
  sub_A9BBC(v90);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v73);
LABEL_65:
  sub_55F38((uint64_t)v123, &qword_26D958);
  return v138;
}

void *sub_678C0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = sub_12124(&qword_26D938);
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v6 = __chkstk_darwin(v122);
  unint64_t v8 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  Swift::Int v117 = (char *)&v115 - v10;
  __chkstk_darwin(v9);
  uint64_t v116 = (char *)&v115 - v11;
  uint64_t v12 = sub_12124(&qword_26D958);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v119 = (uint64_t)&v115 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  int64_t v120 = (char *)&v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v115 - v23;
  __chkstk_darwin(v22);
  char v25 = (char *)&v115 - v24;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v138 = _swiftEmptyArrayStorage;
  *(void *)&long long v127 = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_12124(&qword_26D960);
  uint64_t v28 = sub_52CC0(&qword_26D968, &qword_26D960);
  uint64_t v123 = v25;
  uint64_t v125 = v27;
  uint64_t v124 = v28;
  sub_1FB3D0();
  if (!*(void *)(a4 + 16)
    || (sub_1FC7E0(),
        sub_1FB8C0(),
        Swift::Int v29 = sub_1FC830(),
        uint64_t v30 = -1 << *(unsigned char *)(a4 + 32),
        unint64_t v31 = v29 & ~v30,
        ((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0))
  {
LABEL_8:
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34)
    {
LABEL_37:
      *(void *)&long long v127 = _swiftEmptyArrayStorage;
      sub_1FB3D0();
LABEL_38:
      *(void *)&long long v127 = v26;
      uint64_t v74 = (uint64_t)v120;
      sub_1FB3D0();
      uint64_t v75 = v122;
      uint64_t v76 = v121;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      sub_1FC7E0();
      sub_1FB8C0();
      Swift::Int v77 = sub_1FC830();
      uint64_t v78 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v79 = v77 & ~v78;
      uint64_t v80 = a4 + 56;
      if ((*(void *)(a4 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79))
      {
        uint64_t v81 = ~v78;
        while (1)
        {
          int v82 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v79);
          if (v82 != 1 && v82 != 2) {
            break;
          }
          char v83 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v83) {
            goto LABEL_48;
          }
          unint64_t v79 = (v79 + 1) & v81;
          if (((*(void *)(v80 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79) & 1) == 0) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        uint64_t v91 = v119;
        sub_5606C(v126, v119, &qword_26D958);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v91, 1, v75) != 1)
        {
          long long v97 = v117;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v117, v91, v75);
          sub_12124(&qword_26D9B0);
          long long v98 = (int *)(sub_12124(&qword_26D9B8) - 8);
          unint64_t v99 = (*(unsigned __int8 *)(*(void *)v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v98 + 80);
          uint64_t v100 = swift_allocObject();
          *(_OWORD *)(v100 + 16) = xmmword_1FD2A0;
          char v101 = (void *)(v100 + v99);
          unint64_t v102 = v100 + v99 + v98[14];
          *char v101 = 0xD000000000000014;
          v101[1] = 0x80000000002175F0;
          (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v102, v97, v75);
          unint64_t v103 = sub_160EF0(v100);
          unint64_t v104 = sub_6BDA4(v103, (uint64_t)sub_6B614, 7);
          swift_bridgeObjectRelease();
          sub_A9BBC(v104);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v97, v75);
          if (!*(void *)(a4 + 16)) {
            goto LABEL_64;
          }
LABEL_51:
          sub_1FC7E0();
          sub_1FB8C0();
          Swift::Int v92 = sub_1FC830();
          uint64_t v93 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v94 = v92 & ~v93;
          if ((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94))
          {
            uint64_t v95 = ~v93;
            while (!*(unsigned char *)(*(void *)(a4 + 48) + v94) || *(unsigned char *)(*(void *)(a4 + 48) + v94) == 2)
            {
              char v96 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              if (v96) {
                goto LABEL_61;
              }
              unint64_t v94 = (v94 + 1) & v95;
              if (((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94) & 1) == 0) {
                goto LABEL_64;
              }
            }
            swift_bridgeObjectRelease();
LABEL_61:
            uint64_t v105 = v118;
            sub_5606C(v74, v118, &qword_26D958);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v105, 1, v75) == 1)
            {
              sub_55F38(v74, &qword_26D958);
              sub_55F38(v126, &qword_26D958);
              sub_55F38((uint64_t)v123, &qword_26D958);
              uint64_t v123 = (char *)v105;
              goto LABEL_65;
            }
            uint64_t v106 = v116;
            (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v116, v105, v75);
            sub_12124(&qword_26D9B0);
            uint64_t v107 = (int *)(sub_12124(&qword_26D9B8) - 8);
            unint64_t v108 = (*(unsigned __int8 *)(*(void *)v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v107 + 80);
            uint64_t v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = xmmword_1FD2A0;
            long long v110 = (void *)(v109 + v108);
            unint64_t v111 = v109 + v108 + v107[14];
            *long long v110 = 0xD000000000000014;
            v110[1] = 0x80000000002175F0;
            (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v111, v106, v75);
            unint64_t v112 = sub_160EF0(v109);
            unint64_t v113 = sub_6BDA4(v112, (uint64_t)sub_6B614, 7);
            swift_bridgeObjectRelease();
            sub_A9BBC(v113);
            (*(void (**)(char *, uint64_t))(v76 + 8))(v106, v75);
          }
LABEL_64:
          sub_55F38(v74, &qword_26D958);
          sub_55F38(v126, &qword_26D958);
          goto LABEL_65;
        }
        sub_55F38(v91, &qword_26D958);
      }
LABEL_50:
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_51;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v35 = v34 - 1;
    long long v36 = _swiftEmptyArrayStorage;
    uint64_t v37 = 32;
    for (uint64_t i = v34 - 1; ; --i)
    {
      long long v39 = *(_OWORD *)(a1 + v37 + 112);
      long long v133 = *(_OWORD *)(a1 + v37 + 96);
      long long v134 = v39;
      long long v135 = *(_OWORD *)(a1 + v37 + 128);
      char v136 = *(unsigned char *)(a1 + v37 + 144);
      long long v40 = *(_OWORD *)(a1 + v37 + 48);
      long long v129 = *(_OWORD *)(a1 + v37 + 32);
      long long v130 = v40;
      long long v41 = *(_OWORD *)(a1 + v37 + 80);
      long long v131 = *(_OWORD *)(a1 + v37 + 64);
      long long v132 = v41;
      long long v42 = *(_OWORD *)(a1 + v37 + 16);
      long long v127 = *(_OWORD *)(a1 + v37);
      long long v128 = v42;
      if ((BYTE8(v127) & 1) == 0) {
        break;
      }
      char v43 = sub_1FC5F0();
      sub_54834((uint64_t)&v127);
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_15;
      }
      sub_7A018((uint64_t)&v127);
      if (!i) {
        goto LABEL_21;
      }
LABEL_20:
      v37 += 152;
    }
    sub_54834((uint64_t)&v127);
    swift_bridgeObjectRelease();
LABEL_15:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_467D8(0, v36[2] + 1, 1);
      long long v36 = v137;
    }
    unint64_t v46 = v36[2];
    unint64_t v45 = v36[3];
    if (v46 >= v45 >> 1)
    {
      sub_467D8(v45 > 1, v46 + 1, 1);
      long long v36 = v137;
    }
    void v36[2] = v46 + 1;
    long long v47 = &v36[19 * v46];
    long long v48 = v128;
    *((_OWORD *)v47 + 2) = v127;
    *((_OWORD *)v47 + 3) = v48;
    long long v49 = v129;
    long long v50 = v130;
    long long v51 = v132;
    *((_OWORD *)v47 + 6) = v131;
    *((_OWORD *)v47 + 7) = v51;
    *((_OWORD *)v47 + 4) = v49;
    *((_OWORD *)v47 + 5) = v50;
    long long v52 = v133;
    long long v53 = v134;
    long long v54 = v135;
    *((unsigned char *)v47 + 176) = v136;
    *((_OWORD *)v47 + 9) = v53;
    *((_OWORD *)v47 + 10) = v54;
    *((_OWORD *)v47 + 8) = v52;
    if (i) {
      goto LABEL_20;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v127 = v36;
    sub_1FB3D0();
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    for (uint64_t j = 32; ; j += 152)
    {
      long long v56 = *(_OWORD *)(a1 + j + 112);
      long long v133 = *(_OWORD *)(a1 + j + 96);
      long long v134 = v56;
      long long v135 = *(_OWORD *)(a1 + j + 128);
      char v136 = *(unsigned char *)(a1 + j + 144);
      long long v57 = *(_OWORD *)(a1 + j + 48);
      long long v129 = *(_OWORD *)(a1 + j + 32);
      long long v130 = v57;
      long long v58 = *(_OWORD *)(a1 + j + 80);
      long long v131 = *(_OWORD *)(a1 + j + 64);
      long long v132 = v58;
      long long v59 = *(_OWORD *)(a1 + j + 16);
      long long v127 = *(_OWORD *)(a1 + j);
      long long v128 = v59;
      if (BYTE8(v127) == 1)
      {
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v60 = sub_1FC5F0();
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
        {
          sub_7A018((uint64_t)&v127);
          if (!v35) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v137 = v26;
      if ((v61 & 1) == 0)
      {
        sub_467D8(0, v26[2] + 1, 1);
        uint64_t v26 = v137;
      }
      unint64_t v63 = v26[2];
      unint64_t v62 = v26[3];
      if (v63 >= v62 >> 1)
      {
        sub_467D8(v62 > 1, v63 + 1, 1);
        uint64_t v26 = v137;
      }
      _OWORD v26[2] = v63 + 1;
      long long v64 = &v26[19 * v63];
      long long v65 = v128;
      *((_OWORD *)v64 + 2) = v127;
      *((_OWORD *)v64 + 3) = v65;
      long long v66 = v129;
      long long v67 = v130;
      long long v68 = v132;
      *((_OWORD *)v64 + 6) = v131;
      *((_OWORD *)v64 + 7) = v68;
      *((_OWORD *)v64 + 4) = v66;
      *((_OWORD *)v64 + 5) = v67;
      long long v69 = v133;
      long long v70 = v134;
      long long v71 = v135;
      *((unsigned char *)v64 + 176) = v136;
      *((_OWORD *)v64 + 9) = v70;
      *((_OWORD *)v64 + 10) = v71;
      *((_OWORD *)v64 + 8) = v69;
      if (!v35)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_32:
      --v35;
    }
  }
  uint64_t v32 = ~v30;
  while (!*(unsigned char *)(*(void *)(a4 + 48) + v31) || *(unsigned char *)(*(void *)(a4 + 48) + v31) == 1)
  {
    char v33 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_35;
    }
    unint64_t v31 = (v31 + 1) & v32;
    if (((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_35:
  sub_5606C((uint64_t)v123, (uint64_t)v15, &qword_26D958);
  uint64_t v72 = v121;
  uint64_t v73 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v15, 1, v122) == 1)
  {
    sub_55F38((uint64_t)v15, &qword_26D958);
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v8, v15, v73);
  sub_12124(&qword_26D9B0);
  long long v84 = (int *)(sub_12124(&qword_26D9B8) - 8);
  unint64_t v85 = (*(unsigned __int8 *)(*(void *)v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v84 + 80);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1FD2A0;
  long long v87 = (void *)(v86 + v85);
  unint64_t v88 = v86 + v85 + v84[14];
  *long long v87 = 0xD000000000000014;
  v87[1] = 0x80000000002175F0;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 16))(v88, v8, v73);
  unint64_t v89 = sub_160EF0(v86);
  unint64_t v90 = sub_6BDA4(v89, (uint64_t)sub_6B614, 7);
  swift_bridgeObjectRelease();
  sub_A9BBC(v90);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v73);
LABEL_65:
  sub_55F38((uint64_t)v123, &qword_26D958);
  return v138;
}

void *sub_68738(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v122 = sub_12124(&qword_26D938);
  uint64_t v121 = *(void *)(v122 - 8);
  uint64_t v6 = __chkstk_darwin(v122);
  unint64_t v8 = (char *)&v115 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v6);
  Swift::Int v117 = (char *)&v115 - v10;
  __chkstk_darwin(v9);
  uint64_t v116 = (char *)&v115 - v11;
  uint64_t v12 = sub_12124(&qword_26D958);
  uint64_t v13 = __chkstk_darwin(v12 - 8);
  uint64_t v15 = (char *)&v115 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v13);
  uint64_t v119 = (uint64_t)&v115 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v118 = (uint64_t)&v115 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  int64_t v120 = (char *)&v115 - v21;
  uint64_t v22 = __chkstk_darwin(v20);
  uint64_t v126 = (uint64_t)&v115 - v23;
  __chkstk_darwin(v22);
  char v25 = (char *)&v115 - v24;
  uint64_t v26 = _swiftEmptyArrayStorage;
  uint64_t v138 = _swiftEmptyArrayStorage;
  *(void *)&long long v127 = a1;
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_12124(&qword_26D960);
  uint64_t v28 = sub_52CC0(&qword_26D968, &qword_26D960);
  uint64_t v123 = v25;
  uint64_t v125 = v27;
  uint64_t v124 = v28;
  sub_1FB3D0();
  if (!*(void *)(a4 + 16)
    || (sub_1FC7E0(),
        sub_1FB8C0(),
        Swift::Int v29 = sub_1FC830(),
        uint64_t v30 = -1 << *(unsigned char *)(a4 + 32),
        unint64_t v31 = v29 & ~v30,
        ((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0))
  {
LABEL_8:
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34)
    {
LABEL_37:
      *(void *)&long long v127 = _swiftEmptyArrayStorage;
      sub_1FB3D0();
LABEL_38:
      *(void *)&long long v127 = v26;
      uint64_t v74 = (uint64_t)v120;
      sub_1FB3D0();
      uint64_t v75 = v122;
      uint64_t v76 = v121;
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      sub_1FC7E0();
      sub_1FB8C0();
      Swift::Int v77 = sub_1FC830();
      uint64_t v78 = -1 << *(unsigned char *)(a4 + 32);
      unint64_t v79 = v77 & ~v78;
      uint64_t v80 = a4 + 56;
      if ((*(void *)(a4 + 56 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79))
      {
        uint64_t v81 = ~v78;
        while (1)
        {
          int v82 = *(unsigned __int8 *)(*(void *)(a4 + 48) + v79);
          if (v82 != 1 && v82 != 2) {
            break;
          }
          char v83 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v83) {
            goto LABEL_48;
          }
          unint64_t v79 = (v79 + 1) & v81;
          if (((*(void *)(v80 + ((v79 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v79) & 1) == 0) {
            goto LABEL_50;
          }
        }
        swift_bridgeObjectRelease();
LABEL_48:
        uint64_t v91 = v119;
        sub_5606C(v126, v119, &qword_26D958);
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v91, 1, v75) != 1)
        {
          long long v97 = v117;
          (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v117, v91, v75);
          sub_12124(&qword_26D9B0);
          long long v98 = (int *)(sub_12124(&qword_26D9B8) - 8);
          unint64_t v99 = (*(unsigned __int8 *)(*(void *)v98 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v98 + 80);
          uint64_t v100 = swift_allocObject();
          *(_OWORD *)(v100 + 16) = xmmword_1FD2A0;
          char v101 = (void *)(v100 + v99);
          unint64_t v102 = v100 + v99 + v98[14];
          *char v101 = 0xD000000000000016;
          v101[1] = 0x8000000000217610;
          (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v102, v97, v75);
          unint64_t v103 = sub_160EF0(v100);
          unint64_t v104 = sub_6BDA4(v103, (uint64_t)sub_6B614, 8);
          swift_bridgeObjectRelease();
          sub_A9BBC(v104);
          (*(void (**)(char *, uint64_t))(v76 + 8))(v97, v75);
          if (!*(void *)(a4 + 16)) {
            goto LABEL_64;
          }
LABEL_51:
          sub_1FC7E0();
          sub_1FB8C0();
          Swift::Int v92 = sub_1FC830();
          uint64_t v93 = -1 << *(unsigned char *)(a4 + 32);
          unint64_t v94 = v92 & ~v93;
          if ((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94))
          {
            uint64_t v95 = ~v93;
            while (!*(unsigned char *)(*(void *)(a4 + 48) + v94) || *(unsigned char *)(*(void *)(a4 + 48) + v94) == 2)
            {
              char v96 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              if (v96) {
                goto LABEL_61;
              }
              unint64_t v94 = (v94 + 1) & v95;
              if (((*(void *)(v80 + ((v94 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v94) & 1) == 0) {
                goto LABEL_64;
              }
            }
            swift_bridgeObjectRelease();
LABEL_61:
            uint64_t v105 = v118;
            sub_5606C(v74, v118, &qword_26D958);
            if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v105, 1, v75) == 1)
            {
              sub_55F38(v74, &qword_26D958);
              sub_55F38(v126, &qword_26D958);
              sub_55F38((uint64_t)v123, &qword_26D958);
              uint64_t v123 = (char *)v105;
              goto LABEL_65;
            }
            uint64_t v106 = v116;
            (*(void (**)(char *, uint64_t, uint64_t))(v76 + 32))(v116, v105, v75);
            sub_12124(&qword_26D9B0);
            uint64_t v107 = (int *)(sub_12124(&qword_26D9B8) - 8);
            unint64_t v108 = (*(unsigned __int8 *)(*(void *)v107 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v107 + 80);
            uint64_t v109 = swift_allocObject();
            *(_OWORD *)(v109 + 16) = xmmword_1FD2A0;
            long long v110 = (void *)(v109 + v108);
            unint64_t v111 = v109 + v108 + v107[14];
            *long long v110 = 0xD000000000000016;
            v110[1] = 0x8000000000217610;
            (*(void (**)(unint64_t, char *, uint64_t))(v76 + 16))(v111, v106, v75);
            unint64_t v112 = sub_160EF0(v109);
            unint64_t v113 = sub_6BDA4(v112, (uint64_t)sub_6B614, 8);
            swift_bridgeObjectRelease();
            sub_A9BBC(v113);
            (*(void (**)(char *, uint64_t))(v76 + 8))(v106, v75);
          }
LABEL_64:
          sub_55F38(v74, &qword_26D958);
          sub_55F38(v126, &qword_26D958);
          goto LABEL_65;
        }
        sub_55F38(v91, &qword_26D958);
      }
LABEL_50:
      if (!*(void *)(a4 + 16)) {
        goto LABEL_64;
      }
      goto LABEL_51;
    }
LABEL_9:
    swift_bridgeObjectRetain();
    uint64_t v35 = v34 - 1;
    long long v36 = _swiftEmptyArrayStorage;
    uint64_t v37 = 32;
    for (uint64_t i = v34 - 1; ; --i)
    {
      long long v39 = *(_OWORD *)(a1 + v37 + 112);
      long long v133 = *(_OWORD *)(a1 + v37 + 96);
      long long v134 = v39;
      long long v135 = *(_OWORD *)(a1 + v37 + 128);
      char v136 = *(unsigned char *)(a1 + v37 + 144);
      long long v40 = *(_OWORD *)(a1 + v37 + 48);
      long long v129 = *(_OWORD *)(a1 + v37 + 32);
      long long v130 = v40;
      long long v41 = *(_OWORD *)(a1 + v37 + 80);
      long long v131 = *(_OWORD *)(a1 + v37 + 64);
      long long v132 = v41;
      long long v42 = *(_OWORD *)(a1 + v37 + 16);
      long long v127 = *(_OWORD *)(a1 + v37);
      long long v128 = v42;
      if ((BYTE8(v127) & 1) == 0) {
        break;
      }
      char v43 = sub_1FC5F0();
      sub_54834((uint64_t)&v127);
      swift_bridgeObjectRelease();
      if (v43) {
        goto LABEL_15;
      }
      sub_7A018((uint64_t)&v127);
      if (!i) {
        goto LABEL_21;
      }
LABEL_20:
      v37 += 152;
    }
    sub_54834((uint64_t)&v127);
    swift_bridgeObjectRelease();
LABEL_15:
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v137 = v36;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_467D8(0, v36[2] + 1, 1);
      long long v36 = v137;
    }
    unint64_t v46 = v36[2];
    unint64_t v45 = v36[3];
    if (v46 >= v45 >> 1)
    {
      sub_467D8(v45 > 1, v46 + 1, 1);
      long long v36 = v137;
    }
    void v36[2] = v46 + 1;
    long long v47 = &v36[19 * v46];
    long long v48 = v128;
    *((_OWORD *)v47 + 2) = v127;
    *((_OWORD *)v47 + 3) = v48;
    long long v49 = v129;
    long long v50 = v130;
    long long v51 = v132;
    *((_OWORD *)v47 + 6) = v131;
    *((_OWORD *)v47 + 7) = v51;
    *((_OWORD *)v47 + 4) = v49;
    *((_OWORD *)v47 + 5) = v50;
    long long v52 = v133;
    long long v53 = v134;
    long long v54 = v135;
    *((unsigned char *)v47 + 176) = v136;
    *((_OWORD *)v47 + 9) = v53;
    *((_OWORD *)v47 + 10) = v54;
    *((_OWORD *)v47 + 8) = v52;
    if (i) {
      goto LABEL_20;
    }
LABEL_21:
    swift_bridgeObjectRelease();
    *(void *)&long long v127 = v36;
    sub_1FB3D0();
    swift_bridgeObjectRetain();
    uint64_t v26 = _swiftEmptyArrayStorage;
    for (uint64_t j = 32; ; j += 152)
    {
      long long v56 = *(_OWORD *)(a1 + j + 112);
      long long v133 = *(_OWORD *)(a1 + j + 96);
      long long v134 = v56;
      long long v135 = *(_OWORD *)(a1 + j + 128);
      char v136 = *(unsigned char *)(a1 + j + 144);
      long long v57 = *(_OWORD *)(a1 + j + 48);
      long long v129 = *(_OWORD *)(a1 + j + 32);
      long long v130 = v57;
      long long v58 = *(_OWORD *)(a1 + j + 80);
      long long v131 = *(_OWORD *)(a1 + j + 64);
      long long v132 = v58;
      long long v59 = *(_OWORD *)(a1 + j + 16);
      long long v127 = *(_OWORD *)(a1 + j);
      long long v128 = v59;
      if (BYTE8(v127) == 1)
      {
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
      }
      else
      {
        char v60 = sub_1FC5F0();
        sub_54834((uint64_t)&v127);
        swift_bridgeObjectRelease();
        if ((v60 & 1) == 0)
        {
          sub_7A018((uint64_t)&v127);
          if (!v35) {
            goto LABEL_33;
          }
          goto LABEL_32;
        }
      }
      char v61 = swift_isUniquelyReferenced_nonNull_native();
      uint64_t v137 = v26;
      if ((v61 & 1) == 0)
      {
        sub_467D8(0, v26[2] + 1, 1);
        uint64_t v26 = v137;
      }
      unint64_t v63 = v26[2];
      unint64_t v62 = v26[3];
      if (v63 >= v62 >> 1)
      {
        sub_467D8(v62 > 1, v63 + 1, 1);
        uint64_t v26 = v137;
      }
      _OWORD v26[2] = v63 + 1;
      long long v64 = &v26[19 * v63];
      long long v65 = v128;
      *((_OWORD *)v64 + 2) = v127;
      *((_OWORD *)v64 + 3) = v65;
      long long v66 = v129;
      long long v67 = v130;
      long long v68 = v132;
      *((_OWORD *)v64 + 6) = v131;
      *((_OWORD *)v64 + 7) = v68;
      *((_OWORD *)v64 + 4) = v66;
      *((_OWORD *)v64 + 5) = v67;
      long long v69 = v133;
      long long v70 = v134;
      long long v71 = v135;
      *((unsigned char *)v64 + 176) = v136;
      *((_OWORD *)v64 + 9) = v70;
      *((_OWORD *)v64 + 10) = v71;
      *((_OWORD *)v64 + 8) = v69;
      if (!v35)
      {
LABEL_33:
        swift_bridgeObjectRelease();
        goto LABEL_38;
      }
LABEL_32:
      --v35;
    }
  }
  uint64_t v32 = ~v30;
  while (!*(unsigned char *)(*(void *)(a4 + 48) + v31) || *(unsigned char *)(*(void *)(a4 + 48) + v31) == 1)
  {
    char v33 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v33) {
      goto LABEL_35;
    }
    unint64_t v31 = (v31 + 1) & v32;
    if (((*(void *)(a4 + 56 + ((v31 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v31) & 1) == 0) {
      goto LABEL_8;
    }
  }
  swift_bridgeObjectRelease();
LABEL_35:
  sub_5606C((uint64_t)v123, (uint64_t)v15, &qword_26D958);
  uint64_t v72 = v121;
  uint64_t v73 = v122;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v121 + 48))(v15, 1, v122) == 1)
  {
    sub_55F38((uint64_t)v15, &qword_26D958);
    uint64_t v34 = *(void *)(a1 + 16);
    if (!v34) {
      goto LABEL_37;
    }
    goto LABEL_9;
  }
  (*(void (**)(char *, char *, uint64_t))(v72 + 32))(v8, v15, v73);
  sub_12124(&qword_26D9B0);
  long long v84 = (int *)(sub_12124(&qword_26D9B8) - 8);
  unint64_t v85 = (*(unsigned __int8 *)(*(void *)v84 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)v84 + 80);
  uint64_t v86 = swift_allocObject();
  *(_OWORD *)(v86 + 16) = xmmword_1FD2A0;
  long long v87 = (void *)(v86 + v85);
  unint64_t v88 = v86 + v85 + v84[14];
  *long long v87 = 0xD000000000000016;
  v87[1] = 0x8000000000217610;
  (*(void (**)(unint64_t, char *, uint64_t))(v72 + 16))(v88, v8, v73);
  unint64_t v89 = sub_160EF0(v86);
  unint64_t v90 = sub_6BDA4(v89, (uint64_t)sub_6B614, 8);
  swift_bridgeObjectRelease();
  sub_A9BBC(v90);
  (*(void (**)(char *, uint64_t))(v72 + 8))(v8, v73);
LABEL_65:
  sub_55F38((uint64_t)v123, &qword_26D958);
  return v138;
}

void *sub_695B0(uint64_t a1)
{
  return sub_6A0C4(a1, (void (*)(void **, _OWORD *))sub_695C8);
}

uint64_t sub_695C8(void *a1, long long *a2)
{
  uint64_t v4 = sub_12124(&qword_26D980);
  uint64_t v118 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  uint64_t v112 = (uint64_t)&v97 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v107 = (uint64_t *)((char *)&v97 - v7);
  uint64_t v8 = sub_12124(&qword_26D958);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v97 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26D938);
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v13 = __chkstk_darwin(v11);
  unint64_t v111 = (char *)&v97 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v13);
  uint64_t v105 = (char *)&v97 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  unint64_t v104 = (char *)&v97 - v18;
  __chkstk_darwin(v17);
  unint64_t v103 = (char *)&v97 - v19;
  uint64_t v20 = sub_12124(&qword_26D9D0);
  uint64_t v21 = __chkstk_darwin(v20 - 8);
  uint64_t v115 = (uint64_t)&v97 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v114 = (uint64_t)&v97 - v23;
  long long v24 = a2[7];
  long long v131 = a2[6];
  long long v132 = v24;
  long long v133 = a2[8];
  char v134 = *((unsigned char *)a2 + 144);
  long long v25 = a2[3];
  long long v127 = a2[2];
  long long v128 = v25;
  long long v26 = a2[5];
  long long v129 = a2[4];
  long long v130 = v26;
  long long v27 = a2[1];
  long long v125 = *a2;
  long long v126 = v27;
  if ((void)v129) {
    unint64_t v28 = v129;
  }
  else {
    unint64_t v28 = sub_160EB0((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v29 = *(void *)(v28 + 64);
  unint64_t v99 = v28 + 64;
  uint64_t v30 = 1 << *(unsigned char *)(v28 + 32);
  uint64_t v31 = -1;
  if (v30 < 64) {
    uint64_t v31 = ~(-1 << v30);
  }
  unint64_t v32 = v31 & v29;
  int64_t v100 = (unint64_t)(v30 + 63) >> 6;
  uint64_t v121 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v118 + 48);
  uint64_t v122 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v118 + 56);
  uint64_t v109 = (void (**)(char *, char *, uint64_t))(v12 + 32);
  long long v110 = (void (**)(char *, uint64_t, uint64_t))(v12 + 16);
  unint64_t v108 = (void (**)(char *, uint64_t))(v12 + 8);
  unint64_t v113 = (unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48);
  swift_bridgeObjectRetain();
  unint64_t v33 = v32;
  int64_t v34 = 0;
  uint64_t v106 = v10;
  unint64_t v98 = v28;
  do
  {
LABEL_8:
    if (v33)
    {
      unint64_t v35 = __clz(__rbit64(v33));
      v33 &= v33 - 1;
      unint64_t v36 = v35 | (v34 << 6);
    }
    else
    {
      BOOL v37 = __OFADD__(v34++, 1);
      if (v37) {
        goto LABEL_66;
      }
      if (v34 >= v100) {
        return swift_release();
      }
      unint64_t v38 = *(void *)(v99 + 8 * v34);
      if (!v38)
      {
        int64_t v39 = v34 + 1;
        if (v34 + 1 >= v100) {
          return swift_release();
        }
        unint64_t v38 = *(void *)(v99 + 8 * v39);
        if (!v38)
        {
          int64_t v39 = v34 + 2;
          if (v34 + 2 >= v100) {
            return swift_release();
          }
          unint64_t v38 = *(void *)(v99 + 8 * v39);
          if (!v38)
          {
            int64_t v39 = v34 + 3;
            if (v34 + 3 >= v100) {
              return swift_release();
            }
            unint64_t v38 = *(void *)(v99 + 8 * v39);
            if (!v38)
            {
              while (1)
              {
                int64_t v34 = v39 + 1;
                if (__OFADD__(v39, 1)) {
                  goto LABEL_67;
                }
                if (v34 >= v100) {
                  return swift_release();
                }
                unint64_t v38 = *(void *)(v99 + 8 * v34);
                ++v39;
                if (v38) {
                  goto LABEL_20;
                }
              }
            }
          }
        }
        int64_t v34 = v39;
      }
LABEL_20:
      unint64_t v33 = (v38 - 1) & v38;
      unint64_t v36 = __clz(__rbit64(v38)) + (v34 << 6);
    }
    uint64_t v40 = *(void *)(*(void *)(*(void *)(v28 + 56) + 8 * v36) + 16);
  }
  while (!v40);
  unint64_t v101 = v33;
  int64_t v102 = v34;
  int v117 = *(unsigned __int8 *)(*(void *)(v28 + 48) + v36);
  uint64_t v41 = swift_bridgeObjectRetain();
  uint64_t v42 = 32;
  uint64_t v116 = v41;
  while (1)
  {
    memcpy(v124, (const void *)(v41 + v42), 0x229uLL);
    uint64_t v43 = *a1;
    uint64_t v44 = *(void *)(*a1 + 16);
    uint64_t v119 = v42;
    uint64_t v120 = v40;
    if (v44)
    {
      sub_12384(v124);
      sub_12384(v124);
      unint64_t v45 = sub_4C880(v124);
      if (v46)
      {
        uint64_t v47 = *(void *)(v43 + 56);
        uint64_t v48 = v118;
        uint64_t v49 = v114;
        sub_5606C(v47 + *(void *)(v118 + 72) * v45, v114, &qword_26D980);
        long long v50 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v48 + 56);
        uint64_t v51 = v49;
        v50(v49, 0, 1, v4);
      }
      else
      {
        long long v50 = *v122;
        uint64_t v51 = v114;
        (*v122)(v114, 1, 1, v4);
      }
      sub_124B4(v124);
    }
    else
    {
      long long v50 = *v122;
      uint64_t v51 = v114;
      (*v122)(v114, 1, 1, v4);
      sub_12384(v124);
    }
    long long v52 = *v121;
    unsigned int v53 = (*v121)(v51, 1, v4);
    long long v54 = (void **)v51;
    uint64_t v55 = &_swiftEmptySetSingleton;
    if (!v53)
    {
      uint64_t v55 = *v54;
      swift_bridgeObjectRetain();
    }
    sub_55F38((uint64_t)v54, &qword_26D9D0);
    long long v135 = v55;
    sub_7A44(&v123, v117);
    uint64_t v56 = *a1;
    if (*(void *)(*a1 + 16))
    {
      sub_12384(v124);
      unint64_t v57 = sub_4C880(v124);
      if (v58)
      {
        uint64_t v59 = *(void *)(v56 + 56) + *(void *)(v118 + 72) * v57;
        uint64_t v60 = v115;
        sub_5606C(v59, v115, &qword_26D980);
        uint64_t v61 = v60;
        uint64_t v62 = 0;
      }
      else
      {
        uint64_t v60 = v115;
        uint64_t v61 = v115;
        uint64_t v62 = 1;
      }
      v50(v61, v62, 1, v4);
      sub_124B4(v124);
    }
    else
    {
      uint64_t v60 = v115;
      v50(v115, 1, 1, v4);
    }
    if (v52(v60, 1, v4))
    {
      sub_55F38(v60, &qword_26D9D0);
      unint64_t v63 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v64 = v60 + *(int *)(v4 + 48);
      uint64_t v65 = v60;
      long long v66 = *v110;
      long long v67 = v104;
      (*v110)(v104, v64, v11);
      sub_55F38(v65, &qword_26D9D0);
      long long v68 = v103;
      (*v109)(v103, v67, v11);
      v66(v105, (uint64_t)v68, v11);
      sub_52CC0(&qword_26D948, &qword_26D938);
      unint64_t v63 = (void *)sub_1FB9B0();
      (*v108)(v68, v11);
    }
    sub_54834((uint64_t)&v125);
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      unint64_t v63 = sub_41DE0(0, v63[2] + 1, 1, v63);
    }
    unint64_t v70 = v63[2];
    unint64_t v69 = v63[3];
    if (v70 >= v69 >> 1) {
      unint64_t v63 = sub_41DE0((void *)(v69 > 1), v70 + 1, 1, v63);
    }
    v63[2] = v70 + 1;
    long long v71 = &v63[19 * v70];
    long long v72 = v126;
    *((_OWORD *)v71 + 2) = v125;
    *((_OWORD *)v71 + 3) = v72;
    long long v73 = v127;
    long long v74 = v128;
    long long v75 = v130;
    *((_OWORD *)v71 + 6) = v129;
    *((_OWORD *)v71 + 7) = v75;
    *((_OWORD *)v71 + 4) = v73;
    *((_OWORD *)v71 + 5) = v74;
    long long v76 = v131;
    long long v77 = v132;
    long long v78 = v133;
    *((unsigned char *)v71 + 176) = v134;
    *((_OWORD *)v71 + 9) = v77;
    *((_OWORD *)v71 + 10) = v78;
    *((_OWORD *)v71 + 8) = v76;
    uint64_t v123 = v63;
    sub_12124(&qword_26D960);
    sub_52CC0(&qword_26D968, &qword_26D960);
    sub_1FB3D0();
    if ((*v113)(v10, 1, v11) != 1) {
      break;
    }
    swift_bridgeObjectRelease();
    sub_124B4(v124);
    sub_55F38((uint64_t)v10, &qword_26D958);
LABEL_24:
    uint64_t v41 = v116;
    uint64_t v42 = v119 + 560;
    uint64_t v40 = v120 - 1;
    if (v120 == 1)
    {
      swift_bridgeObjectRelease();
      unint64_t v28 = v98;
      unint64_t v33 = v101;
      int64_t v34 = v102;
      goto LABEL_8;
    }
  }
  unint64_t v79 = v111;
  (*v109)(v111, v10, v11);
  uint64_t v80 = (uint64_t)v107;
  uint64_t v81 = (char *)v107 + *(int *)(v4 + 48);
  *uint64_t v107 = v135;
  (*v110)(v81, (uint64_t)v79, v11);
  sub_55844(v80, v112, &qword_26D980);
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v123 = (void *)*a1;
  char v83 = v123;
  long long v84 = a1;
  *a1 = 0x8000000000000000;
  unint64_t v86 = sub_4C880(v124);
  uint64_t v87 = v83[2];
  BOOL v88 = (v85 & 1) == 0;
  uint64_t v89 = v87 + v88;
  if (!__OFADD__(v87, v88))
  {
    char v90 = v85;
    if (v83[3] < v89)
    {
      sub_1181FC(v89, isUniquelyReferenced_nonNull_native);
      unint64_t v91 = sub_4C880(v124);
      if ((v90 & 1) != (v92 & 1)) {
        goto LABEL_68;
      }
      unint64_t v86 = v91;
      uint64_t v93 = v123;
      if ((v90 & 1) == 0) {
        goto LABEL_51;
      }
LABEL_55:
      sub_7D234(v112, v93[7] + *(void *)(v118 + 72) * v86);
LABEL_56:
      a1 = v84;
      void *v84 = v93;
      swift_bridgeObjectRelease();
      sub_124B4(v124);
      (*v108)(v111, v11);
      uint64_t v10 = v106;
      goto LABEL_24;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      uint64_t v93 = v123;
      if (v85) {
        goto LABEL_55;
      }
    }
    else
    {
      sub_120D9C();
      uint64_t v93 = v123;
      if (v90) {
        goto LABEL_55;
      }
    }
LABEL_51:
    v93[(v86 >> 6) + 8] |= 1 << v86;
    memcpy((void *)(v93[6] + 560 * v86), v124, 0x229uLL);
    sub_55844(v112, v93[7] + *(void *)(v118 + 72) * v86, &qword_26D980);
    uint64_t v94 = v93[2];
    BOOL v37 = __OFADD__(v94, 1);
    uint64_t v95 = v94 + 1;
    if (v37) {
      goto LABEL_65;
    }
    v93[2] = v95;
    sub_12384(v124);
    goto LABEL_56;
  }
  __break(1u);
LABEL_65:
  __break(1u);
LABEL_66:
  __break(1u);
LABEL_67:
  __break(1u);
LABEL_68:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

void *sub_6A0AC(uint64_t a1)
{
  return sub_6A0C4(a1, (void (*)(void **, _OWORD *))sub_6A2F8);
}

void *sub_6A0C4(uint64_t a1, void (*a2)(void **, _OWORD *))
{
  uint64_t v4 = sub_12124(&qword_26D938);
  __chkstk_darwin(v4);
  uint64_t v31 = _swiftEmptyDictionarySingleton;
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))((char *)v25 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v4);
  sub_52CC0(&qword_26D948, &qword_26D938);
  sub_1FB980();
  uint64_t v7 = v29;
  unint64_t v8 = v30;
  unint64_t v9 = *(void *)(v29 + 16);
  if (v30 == v9)
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyDictionarySingleton;
  }
  else
  {
    if (v30 >= v9)
    {
LABEL_7:
      __break(1u);
    }
    else
    {
      uint64_t v11 = 152 * v30 + 32;
      while (1)
      {
        long long v12 = *(_OWORD *)(v7 + v11 + 16);
        v27[0] = *(_OWORD *)(v7 + v11);
        v27[1] = v12;
        long long v13 = *(_OWORD *)(v7 + v11 + 32);
        long long v14 = *(_OWORD *)(v7 + v11 + 48);
        long long v15 = *(_OWORD *)(v7 + v11 + 80);
        v27[4] = *(_OWORD *)(v7 + v11 + 64);
        void v27[5] = v15;
        void v27[2] = v13;
        v27[3] = v14;
        long long v16 = *(_OWORD *)(v7 + v11 + 96);
        long long v17 = *(_OWORD *)(v7 + v11 + 112);
        long long v18 = *(_OWORD *)(v7 + v11 + 128);
        char v28 = *(unsigned char *)(v7 + v11 + 144);
        v27[7] = v17;
        v27[8] = v18;
        v27[6] = v16;
        long long v19 = *(_OWORD *)(v7 + v11 + 112);
        v25[6] = *(_OWORD *)(v7 + v11 + 96);
        v25[7] = v19;
        v25[8] = *(_OWORD *)(v7 + v11 + 128);
        char v26 = *(unsigned char *)(v7 + v11 + 144);
        long long v20 = *(_OWORD *)(v7 + v11 + 48);
        v25[2] = *(_OWORD *)(v7 + v11 + 32);
        v25[3] = v20;
        long long v21 = *(_OWORD *)(v7 + v11 + 80);
        v25[4] = *(_OWORD *)(v7 + v11 + 64);
        void v25[5] = v21;
        long long v22 = *(_OWORD *)(v7 + v11 + 16);
        v25[0] = *(_OWORD *)(v7 + v11);
        v25[1] = v22;
        sub_54834((uint64_t)v27);
        a2(&v31, v25);
        ++v8;
        sub_7A018((uint64_t)v27);
        unint64_t v23 = *(void *)(v7 + 16);
        if (v8 == v23) {
          break;
        }
        v11 += 152;
        if (v8 >= v23) {
          goto LABEL_7;
        }
      }
    }
    swift_bridgeObjectRelease();
    return v31;
  }
}

uint64_t sub_6A2F8(void *a1, long long *a2)
{
  uint64_t v4 = sub_12124(&qword_26D958);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26D938);
  uint64_t v8 = __chkstk_darwin(v7);
  char v90 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v89 = (char *)v78 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v81 = (char *)v78 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v80 = (char *)v78 - v15;
  __chkstk_darwin(v14);
  unint64_t v79 = (char *)v78 - v17;
  long long v18 = a2[5];
  long long v100 = a2[4];
  long long v101 = v18;
  long long v19 = a2[3];
  long long v98 = a2[2];
  long long v99 = v19;
  char v105 = *((unsigned char *)a2 + 144);
  long long v104 = a2[8];
  long long v20 = a2[7];
  long long v102 = a2[6];
  long long v103 = v20;
  uint64_t v21 = *(void *)(v101 + 56);
  uint64_t v84 = v101 + 56;
  uint64_t v22 = 1 << *(unsigned char *)(v101 + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  long long v24 = *a2;
  long long v25 = a2[1];
  unint64_t v26 = v23 & v21;
  int64_t v85 = (unint64_t)(v22 + 63) >> 6;
  BOOL v88 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  long long v96 = v24;
  long long v97 = v25;
  uint64_t v93 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  unint64_t v86 = (void (**)(char *, uint64_t))(v16 + 8);
  unint64_t v91 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v87 = v16;
  v78[2] = v16 + 40;
  uint64_t v92 = v101;
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  uint64_t v94 = v7;
  if (v26) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v30 = v27 + 1;
  if (!__OFADD__(v27, 1))
  {
    if (v30 < v85)
    {
      unint64_t v31 = *(void *)(v84 + 8 * v30);
      ++v27;
      if (v31) {
        goto LABEL_20;
      }
      int64_t v27 = v30 + 1;
      if (v30 + 1 >= v85) {
        return swift_release();
      }
      unint64_t v31 = *(void *)(v84 + 8 * v27);
      if (v31) {
        goto LABEL_20;
      }
      int64_t v27 = v30 + 2;
      if (v30 + 2 >= v85) {
        return swift_release();
      }
      unint64_t v31 = *(void *)(v84 + 8 * v27);
      if (v31)
      {
LABEL_20:
        unint64_t v26 = (v31 - 1) & v31;
        for (unint64_t i = __clz(__rbit64(v31)) + (v27 << 6); ; unint64_t i = v28 | (v27 << 6))
        {
          uint64_t v33 = *(void *)(*(void *)(v92 + 48) + 8 * i);
          uint64_t v34 = *a1;
          uint64_t v35 = *(void *)(*a1 + 16);
          uint64_t v106 = v33;
          if (v35)
          {
            uint64_t v36 = sub_56168(v33);
            BOOL v37 = _swiftEmptyArrayStorage;
            if (v38)
            {
              uint64_t v39 = v87;
              uint64_t v40 = *(void *)(v34 + 56) + *(void *)(v87 + 72) * v36;
              uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
              uint64_t v42 = v80;
              unint64_t v82 = v26;
              uint64_t v43 = v94;
              v41(v80, v40, v94);
              uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
              int64_t v83 = v27;
              unint64_t v45 = v79;
              v44(v79, v42, v43);
              v41(v81, (uint64_t)v45, v43);
              sub_52CC0(&qword_26D948, &qword_26D938);
              BOOL v37 = (void *)sub_1FB9B0();
              char v46 = v45;
              int64_t v27 = v83;
              unint64_t v26 = v82;
              (*(void (**)(char *, uint64_t))(v39 + 8))(v46, v43);
            }
          }
          else
          {
            BOOL v37 = _swiftEmptyArrayStorage;
          }
          sub_54834((uint64_t)&v96);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v37 = sub_41DE0(0, v37[2] + 1, 1, v37);
          }
          unint64_t v48 = v37[2];
          unint64_t v47 = v37[3];
          if (v48 >= v47 >> 1) {
            BOOL v37 = sub_41DE0((void *)(v47 > 1), v48 + 1, 1, v37);
          }
          _OWORD v37[2] = v48 + 1;
          uint64_t v49 = &v37[19 * v48];
          long long v50 = v97;
          *((_OWORD *)v49 + 2) = v96;
          *((_OWORD *)v49 + 3) = v50;
          long long v51 = v98;
          long long v52 = v99;
          long long v53 = v101;
          *((_OWORD *)v49 + 6) = v100;
          *((_OWORD *)v49 + 7) = v53;
          *((_OWORD *)v49 + 4) = v51;
          *((_OWORD *)v49 + 5) = v52;
          long long v54 = v102;
          long long v55 = v103;
          long long v56 = v104;
          *((unsigned char *)v49 + 176) = v105;
          *((_OWORD *)v49 + 9) = v55;
          *((_OWORD *)v49 + 10) = v56;
          *((_OWORD *)v49 + 8) = v54;
          uint64_t v95 = v37;
          sub_12124(&qword_26D960);
          sub_52CC0(&qword_26D968, &qword_26D960);
          sub_1FB3D0();
          uint64_t v57 = v94;
          if ((*v91)(v6, 1, v94) == 1)
          {
            sub_55F38((uint64_t)v6, &qword_26D958);
            if (!v26) {
              goto LABEL_7;
            }
          }
          else
          {
            char v58 = *v93;
            uint64_t v59 = v89;
            uint64_t v60 = v6;
            (*v93)(v89, v6, v57);
            (*v88)(v90, v59, v57);
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v95 = (void *)*a1;
            uint64_t v62 = v95;
            unint64_t v63 = a1;
            *a1 = 0x8000000000000000;
            unint64_t v65 = sub_56168(v106);
            uint64_t v66 = v62[2];
            BOOL v67 = (v64 & 1) == 0;
            uint64_t v68 = v66 + v67;
            if (__OFADD__(v66, v67))
            {
              __break(1u);
              goto LABEL_44;
            }
            char v69 = v64;
            if (v62[3] >= v68)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_121038();
              }
            }
            else
            {
              sub_117664(v68, isUniquelyReferenced_nonNull_native);
              uint64_t v70 = sub_56168(v106);
              if ((v69 & 1) != (v71 & 1)) {
                goto LABEL_47;
              }
              unint64_t v65 = v70;
            }
            long long v72 = v95;
            if (v69)
            {
              uint64_t v73 = v94;
              (*(void (**)(unint64_t, char *, uint64_t))(v87 + 40))(v95[7] + *(void *)(v87 + 72) * v65, v90, v94);
            }
            else
            {
              v95[(v65 >> 6) + 8] |= 1 << v65;
              *(void *)(v72[6] + 8 * v65) = v106;
              uint64_t v73 = v94;
              v58((char *)(v72[7] + *(void *)(v87 + 72) * v65), v90, v94);
              uint64_t v74 = v72[2];
              BOOL v75 = __OFADD__(v74, 1);
              uint64_t v76 = v74 + 1;
              if (v75) {
                goto LABEL_45;
              }
              v72[2] = v76;
            }
            a1 = v63;
            *unint64_t v63 = v72;
            swift_bridgeObjectRelease();
            (*v86)(v89, v73);
            uint64_t v6 = v60;
            if (!v26) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v28 = __clz(__rbit64(v26));
          v26 &= v26 - 1;
        }
      }
      int64_t v32 = v30 + 3;
      if (v32 < v85)
      {
        unint64_t v31 = *(void *)(v84 + 8 * v32);
        if (v31)
        {
          int64_t v27 = v32;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v27 = v32 + 1;
          if (__OFADD__(v32, 1)) {
            goto LABEL_46;
          }
          if (v27 >= v85) {
            return swift_release();
          }
          unint64_t v31 = *(void *)(v84 + 8 * v27);
          ++v32;
          if (v31) {
            goto LABEL_20;
          }
        }
      }
    }
    return swift_release();
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

void *sub_6AB3C(uint64_t a1)
{
  return sub_6A0C4(a1, (void (*)(void **, _OWORD *))sub_6AB54);
}

uint64_t sub_6AB54(void *a1, long long *a2)
{
  uint64_t v4 = sub_12124(&qword_26D958);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v78 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26D938);
  uint64_t v8 = __chkstk_darwin(v7);
  char v90 = (char *)v78 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v89 = (char *)v78 - v11;
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v81 = (char *)v78 - v13;
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v80 = (char *)v78 - v15;
  __chkstk_darwin(v14);
  unint64_t v79 = (char *)v78 - v17;
  long long v18 = a2[5];
  long long v100 = a2[4];
  long long v101 = v18;
  long long v19 = a2[3];
  long long v98 = a2[2];
  long long v99 = v19;
  char v105 = *((unsigned char *)a2 + 144);
  long long v104 = a2[8];
  long long v20 = a2[7];
  long long v102 = a2[6];
  long long v103 = v20;
  uint64_t v21 = *(void *)(*((void *)&v101 + 1) + 56);
  uint64_t v84 = *((void *)&v101 + 1) + 56;
  uint64_t v22 = 1 << *(unsigned char *)(*((void *)&v101 + 1) + 32);
  uint64_t v23 = -1;
  if (v22 < 64) {
    uint64_t v23 = ~(-1 << v22);
  }
  long long v24 = *a2;
  long long v25 = a2[1];
  unint64_t v26 = v23 & v21;
  int64_t v85 = (unint64_t)(v22 + 63) >> 6;
  BOOL v88 = (void (**)(char *, char *, uint64_t))(v16 + 16);
  long long v96 = v24;
  long long v97 = v25;
  uint64_t v93 = (void (**)(char *, char *, uint64_t))(v16 + 32);
  unint64_t v86 = (void (**)(char *, uint64_t))(v16 + 8);
  unint64_t v91 = (unsigned int (**)(char *, uint64_t, uint64_t))(v16 + 48);
  uint64_t v87 = v16;
  v78[2] = v16 + 40;
  uint64_t v92 = *((void *)&v101 + 1);
  swift_bridgeObjectRetain();
  int64_t v27 = 0;
  uint64_t v94 = v7;
  if (v26) {
    goto LABEL_6;
  }
LABEL_7:
  int64_t v30 = v27 + 1;
  if (!__OFADD__(v27, 1))
  {
    if (v30 < v85)
    {
      unint64_t v31 = *(void *)(v84 + 8 * v30);
      ++v27;
      if (v31) {
        goto LABEL_20;
      }
      int64_t v27 = v30 + 1;
      if (v30 + 1 >= v85) {
        return swift_release();
      }
      unint64_t v31 = *(void *)(v84 + 8 * v27);
      if (v31) {
        goto LABEL_20;
      }
      int64_t v27 = v30 + 2;
      if (v30 + 2 >= v85) {
        return swift_release();
      }
      unint64_t v31 = *(void *)(v84 + 8 * v27);
      if (v31)
      {
LABEL_20:
        unint64_t v26 = (v31 - 1) & v31;
        for (unint64_t i = __clz(__rbit64(v31)) + (v27 << 6); ; unint64_t i = v28 | (v27 << 6))
        {
          uint64_t v33 = *(void *)(*(void *)(v92 + 48) + 8 * i);
          uint64_t v34 = *a1;
          uint64_t v35 = *(void *)(*a1 + 16);
          uint64_t v106 = v33;
          if (v35)
          {
            uint64_t v36 = sub_56168(v33);
            BOOL v37 = _swiftEmptyArrayStorage;
            if (v38)
            {
              uint64_t v39 = v87;
              uint64_t v40 = *(void *)(v34 + 56) + *(void *)(v87 + 72) * v36;
              uint64_t v41 = *(void (**)(char *, uint64_t, uint64_t))(v87 + 16);
              uint64_t v42 = v80;
              unint64_t v82 = v26;
              uint64_t v43 = v94;
              v41(v80, v40, v94);
              uint64_t v44 = *(void (**)(char *, char *, uint64_t))(v39 + 32);
              int64_t v83 = v27;
              unint64_t v45 = v79;
              v44(v79, v42, v43);
              v41(v81, (uint64_t)v45, v43);
              sub_52CC0(&qword_26D948, &qword_26D938);
              BOOL v37 = (void *)sub_1FB9B0();
              char v46 = v45;
              int64_t v27 = v83;
              unint64_t v26 = v82;
              (*(void (**)(char *, uint64_t))(v39 + 8))(v46, v43);
            }
          }
          else
          {
            BOOL v37 = _swiftEmptyArrayStorage;
          }
          sub_54834((uint64_t)&v96);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v37 = sub_41DE0(0, v37[2] + 1, 1, v37);
          }
          unint64_t v48 = v37[2];
          unint64_t v47 = v37[3];
          if (v48 >= v47 >> 1) {
            BOOL v37 = sub_41DE0((void *)(v47 > 1), v48 + 1, 1, v37);
          }
          _OWORD v37[2] = v48 + 1;
          uint64_t v49 = &v37[19 * v48];
          long long v50 = v97;
          *((_OWORD *)v49 + 2) = v96;
          *((_OWORD *)v49 + 3) = v50;
          long long v51 = v98;
          long long v52 = v99;
          long long v53 = v101;
          *((_OWORD *)v49 + 6) = v100;
          *((_OWORD *)v49 + 7) = v53;
          *((_OWORD *)v49 + 4) = v51;
          *((_OWORD *)v49 + 5) = v52;
          long long v54 = v102;
          long long v55 = v103;
          long long v56 = v104;
          *((unsigned char *)v49 + 176) = v105;
          *((_OWORD *)v49 + 9) = v55;
          *((_OWORD *)v49 + 10) = v56;
          *((_OWORD *)v49 + 8) = v54;
          uint64_t v95 = v37;
          sub_12124(&qword_26D960);
          sub_52CC0(&qword_26D968, &qword_26D960);
          sub_1FB3D0();
          uint64_t v57 = v94;
          if ((*v91)(v6, 1, v94) == 1)
          {
            sub_55F38((uint64_t)v6, &qword_26D958);
            if (!v26) {
              goto LABEL_7;
            }
          }
          else
          {
            char v58 = *v93;
            uint64_t v59 = v89;
            uint64_t v60 = v6;
            (*v93)(v89, v6, v57);
            (*v88)(v90, v59, v57);
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            uint64_t v95 = (void *)*a1;
            uint64_t v62 = v95;
            unint64_t v63 = a1;
            *a1 = 0x8000000000000000;
            unint64_t v65 = sub_56168(v106);
            uint64_t v66 = v62[2];
            BOOL v67 = (v64 & 1) == 0;
            uint64_t v68 = v66 + v67;
            if (__OFADD__(v66, v67))
            {
              __break(1u);
              goto LABEL_44;
            }
            char v69 = v64;
            if (v62[3] >= v68)
            {
              if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                sub_121038();
              }
            }
            else
            {
              sub_117664(v68, isUniquelyReferenced_nonNull_native);
              uint64_t v70 = sub_56168(v106);
              if ((v69 & 1) != (v71 & 1)) {
                goto LABEL_47;
              }
              unint64_t v65 = v70;
            }
            long long v72 = v95;
            if (v69)
            {
              uint64_t v73 = v94;
              (*(void (**)(unint64_t, char *, uint64_t))(v87 + 40))(v95[7] + *(void *)(v87 + 72) * v65, v90, v94);
            }
            else
            {
              v95[(v65 >> 6) + 8] |= 1 << v65;
              *(void *)(v72[6] + 8 * v65) = v106;
              uint64_t v73 = v94;
              v58((char *)(v72[7] + *(void *)(v87 + 72) * v65), v90, v94);
              uint64_t v74 = v72[2];
              BOOL v75 = __OFADD__(v74, 1);
              uint64_t v76 = v74 + 1;
              if (v75) {
                goto LABEL_45;
              }
              v72[2] = v76;
            }
            a1 = v63;
            *unint64_t v63 = v72;
            swift_bridgeObjectRelease();
            (*v86)(v89, v73);
            uint64_t v6 = v60;
            if (!v26) {
              goto LABEL_7;
            }
          }
LABEL_6:
          unint64_t v28 = __clz(__rbit64(v26));
          v26 &= v26 - 1;
        }
      }
      int64_t v32 = v30 + 3;
      if (v32 < v85)
      {
        unint64_t v31 = *(void *)(v84 + 8 * v32);
        if (v31)
        {
          int64_t v27 = v32;
          goto LABEL_20;
        }
        while (1)
        {
          int64_t v27 = v32 + 1;
          if (__OFADD__(v32, 1)) {
            goto LABEL_46;
          }
          if (v27 >= v85) {
            return swift_release();
          }
          unint64_t v31 = *(void *)(v84 + 8 * v27);
          ++v32;
          if (v31) {
            goto LABEL_20;
          }
        }
      }
    }
    return swift_release();
  }
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_6B398(uint64_t a1, int64_t a2, char a3)
{
  if (a3) {
    a2 = 0x7FFFFFFFFFFFFFFFLL;
  }
  uint64_t v5 = sub_6B3FC(a2, a1);
  uint64_t v6 = sub_60F14(v5);
  swift_bridgeObjectRelease();
  return v6;
}

uint64_t sub_6B3FC(int64_t a1, uint64_t a2)
{
  __dst[0] = sub_61590(a2);
  swift_bridgeObjectRetain();
  sub_6C354(__dst, (uint64_t (*)(uint64_t))sub_12478C, sub_6E780);
  swift_bridgeObjectRelease();
  sub_3E3A8(a1, __dst[0]);
  int64_t v6 = v5 >> 1;
  uint64_t v7 = (v5 >> 1) - v4;
  if (__OFSUB__(v5 >> 1, v4))
  {
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v7)
  {
    swift_unknownObjectRelease();
    uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRetain();
    uint64_t v16 = swift_bridgeObjectRetain();
    uint64_t v17 = sub_7D06C(v16, (uint64_t)v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_7BA98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    return v17;
  }
  uint64_t v8 = v3;
  uint64_t v9 = v4;
  long long v20 = _swiftEmptyArrayStorage;
  sub_465A8(0, v7 & ~(v7 >> 63), 0);
  if ((v7 & 0x8000000000000000) == 0)
  {
    if (v9 < v6)
    {
      uint64_t v10 = v20;
      uint64_t v11 = (char *)(v8 + 568 * v9);
      uint64_t v12 = v9 + 1;
      while (1)
      {
        memcpy(__dst, v11, sizeof(__dst));
        sub_12384(__dst);
        long long v20 = v10;
        unint64_t v14 = v10[2];
        unint64_t v13 = v10[3];
        if (v14 >= v13 >> 1)
        {
          sub_465A8(v13 > 1, v14 + 1, 1);
          uint64_t v10 = v20;
        }
        _OWORD v10[2] = v14 + 1;
        memcpy(&v10[70 * v14 + 4], __dst, 0x229uLL);
        if (v6 == v12) {
          break;
        }
        if (v12 >= v9)
        {
          v11 += 568;
          if (v12++ < v6) {
            continue;
          }
        }
        goto LABEL_15;
      }
      swift_unknownObjectRelease();
      goto LABEL_14;
    }
LABEL_15:
    __break(1u);
    goto LABEL_16;
  }
LABEL_17:
  __break(1u);
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_6B614@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_6C248(a1, a2);
}

uint64_t sub_6B62C(int64_t a1, uint64_t a2)
{
  long long v20 = (void *)sub_61B10(a2);
  swift_bridgeObjectRetain();
  sub_6C354((uint64_t *)&v20, sub_1247A0, sub_6EF08);
  swift_bridgeObjectRelease();
  sub_3E3A8(a1, (uint64_t)v20);
  int64_t v6 = v5 >> 1;
  uint64_t v7 = (v5 >> 1) - v4;
  if (__OFSUB__(v5 >> 1, v4)) {
    goto LABEL_16;
  }
  if (v7)
  {
    uint64_t v8 = v3;
    uint64_t v9 = v4;
    long long v20 = _swiftEmptyArrayStorage;
    sub_46538(0, v7 & ~(v7 >> 63), 0);
    if (v7 < 0)
    {
LABEL_17:
      __break(1u);
      uint64_t result = swift_release();
      __break(1u);
      return result;
    }
    uint64_t v10 = v20;
    if (v9 <= v6) {
      uint64_t v11 = v6;
    }
    else {
      uint64_t v11 = v9;
    }
    uint64_t v12 = v11 - v9;
    unint64_t v13 = (uint64_t *)(v8 + 16 * v9);
    while (v12)
    {
      uint64_t v14 = *v13;
      long long v20 = v10;
      unint64_t v16 = v10[2];
      unint64_t v15 = v10[3];
      if (v16 >= v15 >> 1)
      {
        sub_46538(v15 > 1, v16 + 1, 1);
        uint64_t v10 = v20;
      }
      _OWORD v10[2] = v16 + 1;
      v10[v16 + 4] = v14;
      --v12;
      v13 += 2;
      if (!--v7)
      {
        swift_unknownObjectRelease();
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  swift_unknownObjectRelease();
  uint64_t v10 = _swiftEmptyArrayStorage;
LABEL_14:
  swift_bridgeObjectRetain();
  uint64_t v17 = swift_bridgeObjectRetain();
  uint64_t v18 = sub_7D06C(v17, (uint64_t)v10, (uint64_t (*)(char *, unint64_t, uint64_t, uint64_t))sub_7CCD8);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease_n();
  return v18;
}

void *sub_6B808(uint64_t a1, int64_t a2, char a3, uint64_t a4, uint64_t a5, int a6)
{
  int v77 = a6;
  uint64_t v76 = a5;
  uint64_t v75 = sub_12124(&qword_26D990);
  uint64_t v9 = __chkstk_darwin(v75);
  uint64_t v74 = (uint64_t *)((char *)&v63 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v73 = (uint64_t *)((char *)&v63 - v12);
  uint64_t v13 = __chkstk_darwin(v11);
  long long v72 = (char *)&v63 - v14;
  __chkstk_darwin(v13);
  char v71 = (char *)&v63 - v15;
  uint64_t v16 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v69 = *(void *)(v16 - 8);
  uint64_t v70 = v16;
  __chkstk_darwin(v16);
  uint64_t v18 = (char *)&v63 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3) {
    int64_t v19 = 0x7FFFFFFFFFFFFFFFLL;
  }
  else {
    int64_t v19 = a2;
  }
  uint64_t v20 = sub_6B62C(v19, a1);
  int64_t v21 = *(void *)(v20 + 16);
  if (v21)
  {
    unint64_t v86 = _swiftEmptyArrayStorage;
    sub_46818(0, v21, 0);
    uint64_t result = (void *)sub_73C3C(v20);
    unint64_t v24 = (unint64_t)result;
    uint64_t v25 = 0;
    uint64_t v85 = 0;
    uint64_t v26 = v20 + 64;
    char v27 = *(unsigned char *)(v20 + 32);
    uint64_t v78 = v20 + 80;
    uint64_t v68 = v20;
    int64_t v64 = v21;
    uint64_t v65 = v23;
    uint64_t v66 = v20 + 64;
    BOOL v67 = v18;
    while ((v24 & 0x8000000000000000) == 0 && (uint64_t)v24 < 1 << v27)
    {
      unint64_t v29 = v24 >> 6;
      if ((*(void *)(v26 + 8 * (v24 >> 6)) & (1 << v24)) == 0) {
        goto LABEL_30;
      }
      if (*(_DWORD *)(v20 + 36) != v23) {
        goto LABEL_31;
      }
      uint64_t v79 = v25;
      uint64_t v80 = 1 << v24;
      uint64_t v30 = v75;
      unint64_t v31 = v71;
      int64_t v32 = &v71[*(int *)(v75 + 48)];
      uint64_t v33 = *(void *)(v20 + 48);
      uint64_t v34 = *(void *)(v20 + 56);
      uint64_t v35 = *(void *)(v33 + 8 * v24);
      uint64_t v36 = sub_12124(&qword_26D938);
      uint64_t v37 = *(void *)(v36 - 8);
      uint64_t v38 = *(void *)(v37 + 72);
      unint64_t v84 = v24;
      uint64_t v39 = v34 + v38 * v24;
      uint64_t v40 = *(void (**)(char *, uint64_t, uint64_t))(v37 + 16);
      v40(v32, v39, v36);
      uint64_t v41 = (void (*)(char *, char *, uint64_t))v40;
      int64_t v83 = (void (*)(char *, char *, uint64_t))v40;
      *unint64_t v31 = v35;
      uint64_t v42 = v72;
      *(void *)long long v72 = v35;
      v41(&v42[*(int *)(v30 + 48)], v32, v36);
      uint64_t v43 = (uint64_t)v42;
      uint64_t v44 = v73;
      sub_55844(v43, (uint64_t)v73, &qword_26D990);
      uint64_t v45 = (uint64_t)v31;
      uint64_t v46 = (uint64_t)v67;
      sub_55F38(v45, &qword_26D990);
      uint64_t v47 = sub_12124(&qword_26D998);
      uint64_t v48 = *(int *)(v47 + 48);
      uint64_t v81 = *(int *)(v47 + 64);
      uint64_t v82 = v48;
      uint64_t v49 = (char *)v44 + *(int *)(v30 + 48);
      uint64_t v50 = v85;
      sub_1FB370();
      long long v51 = (char *)v74 + *(int *)(v30 + 48);
      uint64_t v52 = *v44;
      *uint64_t v74 = *v44;
      v83(v51, v49, v36);
      uint64_t v53 = v81;
      *(void *)(v46 + v82) = v52;
      *(unsigned char *)(v46 + v53) = 2;
      swift_storeEnumTagMultiPayload();
      (*(void (**)(char *, uint64_t))(v37 + 8))(v51, v36);
      sub_55F38((uint64_t)v44, &qword_26D990);
      long long v54 = v86;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46818(0, v54[2] + 1, 1);
        long long v54 = v86;
      }
      unint64_t v56 = v54[2];
      unint64_t v55 = v54[3];
      uint64_t v57 = v84;
      if (v56 >= v55 >> 1)
      {
        sub_46818(v55 > 1, v56 + 1, 1);
        long long v54 = v86;
      }
      v54[2] = v56 + 1;
      uint64_t result = (void *)sub_7D530(v46, (uint64_t)v54+ ((*(unsigned __int8 *)(v69 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v69 + 80))+ *(void *)(v69 + 72) * v56, type metadata accessor for CollectionRecommendation);
      uint64_t v20 = v68;
      char v27 = *(unsigned char *)(v68 + 32);
      unint64_t v24 = 1 << v27;
      if (v57 >= 1 << v27) {
        goto LABEL_32;
      }
      uint64_t v26 = v66;
      uint64_t v58 = *(void *)(v66 + 8 * v29);
      if ((v58 & v80) == 0) {
        goto LABEL_33;
      }
      LODWORD(v23) = v65;
      if (*(_DWORD *)(v68 + 36) != v65) {
        goto LABEL_34;
      }
      uint64_t v85 = v50;
      unint64_t v59 = v58 & (-2 << (v57 & 0x3F));
      if (v59)
      {
        unint64_t v24 = __clz(__rbit64(v59)) | v57 & 0xFFFFFFFFFFFFFFC0;
        int64_t v28 = v64;
      }
      else
      {
        unint64_t v60 = v29 + 1;
        unint64_t v61 = (v24 + 63) >> 6;
        int64_t v28 = v64;
        if (v29 + 1 < v61)
        {
          unint64_t v62 = *(void *)(v66 + 8 * v60);
          if (v62)
          {
LABEL_25:
            unint64_t v24 = __clz(__rbit64(v62)) + (v60 << 6);
          }
          else
          {
            while (v61 - 2 != v29)
            {
              unint64_t v62 = *(void *)(v78 + 8 * v29++);
              if (v62)
              {
                unint64_t v60 = v29 + 1;
                goto LABEL_25;
              }
            }
          }
        }
      }
      uint64_t v25 = v79 + 1;
      if (v79 + 1 == v28)
      {
        swift_bridgeObjectRelease();
        return v54;
      }
    }
    __break(1u);
LABEL_30:
    __break(1u);
LABEL_31:
    __break(1u);
LABEL_32:
    __break(1u);
LABEL_33:
    __break(1u);
LABEL_34:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

unint64_t sub_6BDA4(uint64_t a1, uint64_t a2, int a3)
{
  int v60 = a3;
  uint64_t v59 = a2;
  uint64_t v66 = sub_12124(&qword_26D9C0);
  uint64_t v4 = __chkstk_darwin(v66);
  uint64_t v58 = (uint64_t)&v48 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v57 = (uint64_t *)((char *)&v48 - v7);
  __chkstk_darwin(v6);
  unint64_t v56 = (char *)&v48 - v8;
  uint64_t v9 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v54 = *(void *)(v9 - 8);
  uint64_t v55 = v9;
  __chkstk_darwin(v9);
  uint64_t v11 = (char *)&v48 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  uint64_t v13 = _swiftEmptyArrayStorage;
  if (!v12) {
    return (unint64_t)v13;
  }
  BOOL v67 = _swiftEmptyArrayStorage;
  sub_46818(0, v12, 0);
  unint64_t result = sub_73C3C(a1);
  uint64_t v16 = 0;
  uint64_t v17 = 0;
  uint64_t v18 = a1 + 64;
  char v19 = *(unsigned char *)(a1 + 32);
  uint64_t v61 = a1 + 80;
  uint64_t v52 = v11;
  uint64_t v53 = a1;
  int64_t v49 = v12;
  uint64_t v50 = v15;
  uint64_t v51 = a1 + 64;
  while ((result & 0x8000000000000000) == 0 && (uint64_t)result < 1 << v19)
  {
    unint64_t v22 = result >> 6;
    if ((*(void *)(v18 + 8 * (result >> 6)) & (1 << result)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v15) {
      goto LABEL_26;
    }
    uint64_t v62 = v16;
    uint64_t v63 = 1 << result;
    uint64_t v23 = v56;
    unint64_t v24 = &v56[*(int *)(v66 + 48)];
    uint64_t v25 = *(void *)(a1 + 48);
    uint64_t v26 = *(void *)(a1 + 56);
    char v27 = (uint64_t *)(v25 + 16 * result);
    uint64_t v28 = *v27;
    uint64_t v29 = v27[1];
    unint64_t v30 = result;
    uint64_t v31 = sub_12124(&qword_26D938);
    uint64_t v32 = *(void *)(v31 - 8);
    uint64_t v64 = v17;
    uint64_t v33 = *(void (**)(char *, unint64_t, uint64_t))(v32 + 16);
    uint64_t v34 = *(void *)(v32 + 72);
    uint64_t v65 = v30;
    v33(v24, v26 + v34 * v30, v31);
    *uint64_t v23 = v28;
    v23[1] = v29;
    uint64_t v35 = (uint64_t)v57;
    *uint64_t v57 = v28;
    *(void *)(v35 + 8) = v29;
    v33((char *)(v35 + *(int *)(v66 + 48)), (unint64_t)v24, v31);
    uint64_t v36 = v58;
    sub_55844(v35, v58, &qword_26D9C0);
    swift_bridgeObjectRetain_n();
    uint64_t v37 = (uint64_t)v23;
    uint64_t v38 = (uint64_t)v52;
    sub_55F38(v37, &qword_26D9C0);
    uint64_t v39 = *(int *)(sub_12124(&qword_26D9C8) + 48);
    uint64_t v40 = v64;
    sub_1FB370();
    uint64_t v17 = v40;
    *(unsigned char *)(v38 + v39) = 2;
    swift_storeEnumTagMultiPayload();
    sub_55F38(v36, &qword_26D9C0);
    uint64_t v13 = v67;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_46818(0, v13[2] + 1, 1);
      uint64_t v13 = v67;
    }
    unint64_t v42 = v13[2];
    unint64_t v41 = v13[3];
    a1 = v53;
    if (v42 >= v41 >> 1)
    {
      sub_46818(v41 > 1, v42 + 1, 1);
      uint64_t v13 = v67;
    }
    _DWORD v13[2] = v42 + 1;
    unint64_t result = sub_7D530(v38, (uint64_t)v13+ ((*(unsigned __int8 *)(v54 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v54 + 80))+ *(void *)(v54 + 72) * v42, type metadata accessor for CollectionRecommendation);
    char v19 = *(unsigned char *)(a1 + 32);
    unint64_t v20 = 1 << v19;
    if (v65 >= 1 << v19) {
      goto LABEL_27;
    }
    uint64_t v18 = v51;
    uint64_t v43 = *(void *)(v51 + 8 * v22);
    if ((v43 & v63) == 0) {
      goto LABEL_28;
    }
    LODWORD(v15) = v50;
    if (*(_DWORD *)(a1 + 36) != v50) {
      goto LABEL_29;
    }
    unint64_t v44 = v43 & (-2 << (v65 & 0x3F));
    if (v44)
    {
      unint64_t v20 = __clz(__rbit64(v44)) | v65 & 0xFFFFFFFFFFFFFFC0;
      int64_t v21 = v49;
    }
    else
    {
      unint64_t v45 = v22 + 1;
      unint64_t v46 = (v20 + 63) >> 6;
      int64_t v21 = v49;
      if (v22 + 1 < v46)
      {
        unint64_t v47 = *(void *)(v51 + 8 * v45);
        if (v47)
        {
LABEL_22:
          unint64_t v20 = __clz(__rbit64(v47)) + (v45 << 6);
        }
        else
        {
          while (v46 - 2 != v22)
          {
            unint64_t v47 = *(void *)(v61 + 8 * v22++);
            if (v47)
            {
              unint64_t v45 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v16 = v62 + 1;
    unint64_t result = v20;
    if (v62 + 1 == v21) {
      return (unint64_t)v13;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_6C248@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 8);
  uint64_t v3 = *(void *)(a1 + 16);
  char v4 = *(unsigned char *)(a1 + 24);
  uint64_t v5 = *(void *)(a1 + 32);
  uint64_t v7 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = *(void *)(a1 + 72);
  *(void *)a2 = *(void *)a1;
  *(unsigned char *)(a2 + 8) = v2;
  *(void *)(a2 + 16) = v3;
  *(unsigned char *)(a2 + 24) = v4;
  *(void *)(a2 + 32) = v5;
  char v10 = *(unsigned char *)(a1 + 40);
  *(unsigned char *)(a2 + 40) = v10;
  *(void *)(a2 + 48) = v7;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v8;
  *(void *)(a2 + 72) = v9;
  sub_5480C(v5, v10);
  swift_bridgeObjectRetain();
  return swift_bridgeObjectRetain();
}

uint64_t sub_6C2D4()
{
  sub_1264C(v0 + 16);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for AllCollectionTypesFillingClusteringService()
{
  return self;
}

uint64_t sub_6C330@<X0>(uint64_t a1@<X0>, unint64_t *a2@<X8>)
{
  return sub_620D8(a1, a2);
}

uint64_t sub_6C354(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_6C3D8(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D958);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_12124(&qword_26D938);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v40 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v41 = (char *)v37 - v8;
  unint64_t v42 = _swiftEmptyDictionarySingleton;
  unint64_t v47 = _swiftEmptyDictionarySingleton;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  if (-v10 < 64) {
    uint64_t v11 = ~(-1 << -(char)v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  v37[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v43 = (unint64_t)(63 - v10) >> 6;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v38 = v7;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v12) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v17 = v16 | (v15 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
    uint64_t v46 = *(void *)(*(void *)(a1 + 56) + 8 * v17);
    swift_bridgeObjectRetain_n();
    sub_12124(&qword_26D960);
    sub_52CC0(&qword_26D968, &qword_26D960);
    sub_1FB3D0();
    if ((*v13)(v4, 1, v45) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_55F38((uint64_t)v4, &qword_26D958);
      if (v12) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v23 = *v39;
      (*v39)(v41, v4, v45);
      v23(v40, v41, v45);
      unint64_t v24 = v23;
      uint64_t v25 = v42;
      unint64_t v26 = v42[2];
      if (v42[3] <= v26)
      {
        sub_117664(v26 + 1, 1);
        uint64_t v25 = v47;
      }
      uint64_t result = sub_1FC7D0();
      char v27 = v25 + 8;
      unint64_t v42 = v25;
      uint64_t v28 = -1 << *((unsigned char *)v25 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~v25[(v29 >> 6) + 8]) == 0)
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v28) >> 6;
        while (++v30 != v33 || (v32 & 1) == 0)
        {
          BOOL v34 = v30 == v33;
          if (v30 == v33) {
            unint64_t v30 = 0;
          }
          v32 |= v34;
          uint64_t v35 = v27[v30];
          if (v35 != -1)
          {
            unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~v25[(v29 >> 6) + 8])) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_36:
      *(void *)((char *)v27 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      uint64_t v36 = v42;
      *(void *)(v42[6] + 8 * v31) = v18;
      v24((char *)(v36[7] + *(void *)(v38 + 72) * v31), v40, v45);
      ++v36[2];
      uint64_t result = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v19 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v19);
    int64_t v21 = v15 + 1;
    if (!v20)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 2 >= v43) {
        goto LABEL_38;
      }
      unint64_t v20 = *(void *)(v44 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v15 + 3;
        if (v15 + 3 >= v43) {
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v44 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v15 + 4;
          if (v15 + 4 >= v43) {
            goto LABEL_38;
          }
          unint64_t v20 = *(void *)(v44 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v15 = v21;
  }
  int64_t v22 = v15 + 5;
  if (v15 + 5 >= v43)
  {
LABEL_38:
    sub_1226C();
    return (uint64_t)v42;
  }
  unint64_t v20 = *(void *)(v44 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v15 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_6C8AC(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D958);
  __chkstk_darwin(v2 - 8);
  char v4 = (char *)v36 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_12124(&qword_26D938);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v40 = (char *)v36 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v41 = (char *)v36 - v8;
  unint64_t v42 = _swiftEmptyDictionarySingleton;
  unint64_t v47 = _swiftEmptyDictionarySingleton;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  if (-v10 < 64) {
    uint64_t v11 = ~(-1 << -(char)v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  v36[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v43 = (unint64_t)(63 - v10) >> 6;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v37 = v7;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v12) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v17 = v16 | (v15 << 6);
  while (1)
  {
    char v18 = *(unsigned char *)(*(void *)(a1 + 48) + v17);
    uint64_t v46 = *(void *)(*(void *)(a1 + 56) + 8 * v17);
    swift_bridgeObjectRetain_n();
    sub_12124(&qword_26D960);
    sub_52CC0(&qword_26D968, &qword_26D960);
    sub_1FB3D0();
    if ((*v13)(v4, 1, v45) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_55F38((uint64_t)v4, &qword_26D958);
      if (v12) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v23 = *v39;
      (*v39)(v41, v4, v45);
      uint64_t v38 = v23;
      v23(v40, v41, v45);
      unint64_t v24 = v42;
      unint64_t v25 = v42[2];
      if (v42[3] <= v25)
      {
        sub_117A88(v25 + 1, 1);
        unint64_t v24 = v47;
      }
      sub_1FC7E0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      uint64_t result = sub_1FC830();
      unint64_t v26 = v24 + 8;
      unint64_t v42 = v24;
      uint64_t v27 = -1 << *((unsigned char *)v24 + 32);
      unint64_t v28 = result & ~v27;
      unint64_t v29 = v28 >> 6;
      if (((-1 << v28) & ~v24[(v28 >> 6) + 8]) == 0)
      {
        char v31 = 0;
        unint64_t v32 = (unint64_t)(63 - v27) >> 6;
        while (++v29 != v32 || (v31 & 1) == 0)
        {
          BOOL v33 = v29 == v32;
          if (v29 == v32) {
            unint64_t v29 = 0;
          }
          v31 |= v33;
          uint64_t v34 = v26[v29];
          if (v34 != -1)
          {
            unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~v24[(v28 >> 6) + 8])) | v28 & 0x7FFFFFFFFFFFFFC0;
LABEL_36:
      *(void *)((char *)v26 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
      uint64_t v35 = v42;
      *(unsigned char *)(v42[6] + v30) = v18;
      v38((char *)(v35[7] + *(void *)(v37 + 72) * v30), v40, v45);
      ++v35[2];
      uint64_t result = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v19 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v19);
    int64_t v21 = v15 + 1;
    if (!v20)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 2 >= v43) {
        goto LABEL_38;
      }
      unint64_t v20 = *(void *)(v44 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v15 + 3;
        if (v15 + 3 >= v43) {
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v44 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v15 + 4;
          if (v15 + 4 >= v43) {
            goto LABEL_38;
          }
          unint64_t v20 = *(void *)(v44 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v15 = v21;
  }
  int64_t v22 = v15 + 5;
  if (v15 + 5 >= v43)
  {
LABEL_38:
    sub_1226C();
    return (uint64_t)v42;
  }
  unint64_t v20 = *(void *)(v44 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v15 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_6CDD4(uint64_t result, uint64_t a2)
{
  if (result == a2) {
    return 1;
  }
  uint64_t v3 = result;
  if (*(void *)(result + 16) != *(void *)(a2 + 16)) {
    return 0;
  }
  int64_t v4 = 0;
  uint64_t v5 = result + 64;
  uint64_t v6 = 1 << *(unsigned char *)(result + 32);
  uint64_t v7 = -1;
  if (v6 < 64) {
    uint64_t v7 = ~(-1 << v6);
  }
  unint64_t v8 = v7 & *(void *)(result + 64);
  int64_t v9 = (unint64_t)(v6 + 63) >> 6;
  while (1)
  {
    if (v8)
    {
      unint64_t v10 = __clz(__rbit64(v8));
      v8 &= v8 - 1;
      unint64_t v11 = v10 | (v4 << 6);
      goto LABEL_24;
    }
    int64_t v12 = v4 + 1;
    if (__OFADD__(v4, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v12 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v12);
    ++v4;
    if (!v13)
    {
      int64_t v4 = v12 + 1;
      if (v12 + 1 >= v9) {
        return 1;
      }
      unint64_t v13 = *(void *)(v5 + 8 * v4);
      if (!v13)
      {
        int64_t v4 = v12 + 2;
        if (v12 + 2 >= v9) {
          return 1;
        }
        unint64_t v13 = *(void *)(v5 + 8 * v4);
        if (!v13)
        {
          int64_t v4 = v12 + 3;
          if (v12 + 3 >= v9) {
            return 1;
          }
          unint64_t v13 = *(void *)(v5 + 8 * v4);
          if (!v13) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v8 = (v13 - 1) & v13;
    unint64_t v11 = __clz(__rbit64(v13)) + (v4 << 6);
LABEL_24:
    uint64_t v15 = *(void *)(*(void *)(v3 + 56) + 8 * v11);
    unsigned __int8 v16 = *(unsigned char *)(*(void *)(v3 + 48) + v11);
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_4C3A0(v16);
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
    char v19 = sub_192D0(*(void *)(*(void *)(a2 + 56) + 8 * v17), v15);
    uint64_t result = swift_bridgeObjectRelease();
    if ((v19 & 1) == 0) {
      return 0;
    }
  }
  int64_t v14 = v12 + 4;
  if (v14 >= v9) {
    return 1;
  }
  unint64_t v13 = *(void *)(v5 + 8 * v14);
  if (v13)
  {
    int64_t v4 = v14;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v4 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v4 >= v9) {
      return 1;
    }
    unint64_t v13 = *(void *)(v5 + 8 * v4);
    ++v14;
    if (v13) {
      goto LABEL_23;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_6CF7C(char a1, void **a2, uint64_t a3)
{
  char v5 = a1 & 1;
  sub_54834(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *a2;
  unint64_t v28 = *a2;
  *a2 = (void *)0x8000000000000000;
  unint64_t v9 = sub_4C69C(v5);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    uint64_t result = (uint64_t)sub_41DE0(0, v7[2] + 1, 1, v7);
    uint64_t v7 = (void *)result;
    a2[v9] = (void *)result;
    goto LABEL_10;
  }
  char v13 = v8;
  if (v7[3] >= v12)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_120B84();
      uint64_t v7 = v28;
    }
  }
  else
  {
    sub_117EA0(v12, isUniquelyReferenced_nonNull_native);
    uint64_t v7 = v28;
    unint64_t v14 = sub_4C69C(v5);
    if ((v13 & 1) != (v15 & 1))
    {
      uint64_t result = sub_1FC770();
      __break(1u);
      return result;
    }
    unint64_t v9 = v14;
  }
  *a2 = v7;
  swift_bridgeObjectRelease();
  unsigned __int8 v16 = *a2;
  if ((v13 & 1) == 0) {
    sub_118EC(v9, v5, (uint64_t)_swiftEmptyArrayStorage, *a2);
  }
  a2 = (void **)v16[7];
  uint64_t v7 = a2[v9];
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  a2[v9] = v7;
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  unint64_t v19 = v7[2];
  unint64_t v18 = v7[3];
  if (v19 >= v18 >> 1)
  {
    uint64_t result = (uint64_t)sub_41DE0((void *)(v18 > 1), v19 + 1, 1, v7);
    uint64_t v7 = (void *)result;
    a2[v9] = (void *)result;
  }
  uint64_t v7[2] = v19 + 1;
  unint64_t v20 = &v7[19 * v19];
  long long v21 = *(_OWORD *)(a3 + 16);
  *((_OWORD *)v20 + 2) = *(_OWORD *)a3;
  *((_OWORD *)v20 + 3) = v21;
  long long v22 = *(_OWORD *)(a3 + 32);
  long long v23 = *(_OWORD *)(a3 + 48);
  long long v24 = *(_OWORD *)(a3 + 80);
  *((_OWORD *)v20 + 6) = *(_OWORD *)(a3 + 64);
  *((_OWORD *)v20 + 7) = v24;
  *((_OWORD *)v20 + 4) = v22;
  *((_OWORD *)v20 + 5) = v23;
  long long v25 = *(_OWORD *)(a3 + 96);
  long long v26 = *(_OWORD *)(a3 + 112);
  long long v27 = *(_OWORD *)(a3 + 128);
  *((unsigned char *)v20 + 176) = *(unsigned char *)(a3 + 144);
  *((_OWORD *)v20 + 9) = v26;
  *((_OWORD *)v20 + 10) = v27;
  *((_OWORD *)v20 + 8) = v25;
  return result;
}

uint64_t sub_6D154(uint64_t a1, void **a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  swift_bridgeObjectRetain();
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  BOOL v11 = *a2;
  long long v25 = *a2;
  *a2 = (void *)0x8000000000000000;
  unint64_t v13 = sub_56168(a1);
  uint64_t v14 = v11[2];
  BOOL v15 = (v12 & 1) == 0;
  uint64_t v16 = v14 + v15;
  if (__OFADD__(v14, v15))
  {
    __break(1u);
LABEL_14:
    uint64_t result = (uint64_t)sub_42490(0, v11[2] + 1, 1, v11);
    BOOL v11 = (void *)result;
    *(void *)(a1 + 8 * v13) = result;
    goto LABEL_10;
  }
  char v17 = v12;
  if (v11[3] >= v16)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_121C40();
      BOOL v11 = v25;
    }
  }
  else
  {
    sub_119E8C(v16, isUniquelyReferenced_nonNull_native);
    BOOL v11 = v25;
    uint64_t v18 = sub_56168(a1);
    if ((v17 & 1) != (v19 & 1))
    {
      uint64_t result = sub_1FC770();
      __break(1u);
      return result;
    }
    unint64_t v13 = v18;
  }
  *a2 = v11;
  swift_bridgeObjectRelease();
  unint64_t v20 = *a2;
  if ((v17 & 1) == 0) {
    sub_118F0(v13, a1, (uint64_t)_swiftEmptyArrayStorage, *a2);
  }
  a1 = v20[7];
  BOOL v11 = *(void **)(a1 + 8 * v13);
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  *(void *)(a1 + 8 * v13) = v11;
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  unint64_t v23 = v11[2];
  unint64_t v22 = v11[3];
  if (v23 >= v22 >> 1)
  {
    uint64_t result = (uint64_t)sub_42490((void *)(v22 > 1), v23 + 1, 1, v11);
    BOOL v11 = (void *)result;
    *(void *)(a1 + 8 * v13) = result;
  }
  v11[2] = v23 + 1;
  long long v24 = &v11[3 * v23];
  v24[4] = a3;
  v24[5] = a4;
  v24[6] = a5;
  return result;
}

uint64_t sub_6D30C(uint64_t a1, void **a2, uint64_t a3)
{
  return sub_6D324(a1, a2, a3);
}

uint64_t sub_6D324(uint64_t a1, void **a2, uint64_t a3)
{
  sub_54834(a3);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = *a2;
  unint64_t v28 = *a2;
  *a2 = (void *)0x8000000000000000;
  unint64_t v9 = sub_56168(a1);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_14:
    uint64_t result = (uint64_t)sub_41DE0(0, v7[2] + 1, 1, v7);
    uint64_t v7 = (void *)result;
    a2[v9] = (void *)result;
    goto LABEL_10;
  }
  char v13 = v8;
  if (v7[3] >= v12)
  {
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_12095C();
      uint64_t v7 = v28;
    }
  }
  else
  {
    sub_117678(v12, isUniquelyReferenced_nonNull_native);
    uint64_t v7 = v28;
    uint64_t v14 = sub_56168(a1);
    if ((v13 & 1) != (v15 & 1))
    {
      uint64_t result = sub_1FC770();
      __break(1u);
      return result;
    }
    unint64_t v9 = v14;
  }
  *a2 = v7;
  swift_bridgeObjectRelease();
  uint64_t v16 = *a2;
  if ((v13 & 1) == 0) {
    sub_118F0(v9, a1, (uint64_t)_swiftEmptyArrayStorage, *a2);
  }
  a2 = (void **)v16[7];
  uint64_t v7 = a2[v9];
  uint64_t result = swift_isUniquelyReferenced_nonNull_native();
  a2[v9] = v7;
  if ((result & 1) == 0) {
    goto LABEL_14;
  }
LABEL_10:
  unint64_t v19 = v7[2];
  unint64_t v18 = v7[3];
  if (v19 >= v18 >> 1)
  {
    uint64_t result = (uint64_t)sub_41DE0((void *)(v18 > 1), v19 + 1, 1, v7);
    uint64_t v7 = (void *)result;
    a2[v9] = (void *)result;
  }
  uint64_t v7[2] = v19 + 1;
  unint64_t v20 = &v7[19 * v19];
  long long v21 = *(_OWORD *)(a3 + 16);
  *((_OWORD *)v20 + 2) = *(_OWORD *)a3;
  *((_OWORD *)v20 + 3) = v21;
  long long v22 = *(_OWORD *)(a3 + 32);
  long long v23 = *(_OWORD *)(a3 + 48);
  long long v24 = *(_OWORD *)(a3 + 80);
  *((_OWORD *)v20 + 6) = *(_OWORD *)(a3 + 64);
  *((_OWORD *)v20 + 7) = v24;
  *((_OWORD *)v20 + 4) = v22;
  *((_OWORD *)v20 + 5) = v23;
  long long v25 = *(_OWORD *)(a3 + 96);
  long long v26 = *(_OWORD *)(a3 + 112);
  long long v27 = *(_OWORD *)(a3 + 128);
  *((unsigned char *)v20 + 176) = *(unsigned char *)(a3 + 144);
  *((_OWORD *)v20 + 9) = v26;
  *((_OWORD *)v20 + 10) = v27;
  *((_OWORD *)v20 + 8) = v25;
  return result;
}

unint64_t sub_6D4FC(unint64_t result, char a2, uint64_t a3)
{
  if (a2)
  {
    if ((result & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (*(void *)(a3 + 16) > result)
    {
      return result;
    }
    __break(1u);
  }
  return result;
}

void *sub_6D51C()
{
  uint64_t v1 = *v0;
  uint64_t result = (void *)swift_isUniquelyReferenced_nonNull_native();
  *uint64_t v0 = v1;
  if (!result)
  {
    uint64_t result = sub_41DE0(result, v1[2] + 1, 1, v1);
    *uint64_t v0 = result;
  }
  return result;
}

void *sub_6D568(void *result)
{
  unint64_t v2 = (*v1)[3];
  if ((uint64_t)result + 1 > (uint64_t)(v2 >> 1))
  {
    uint64_t result = sub_41DE0((void *)(v2 > 1), (int64_t)result + 1, 1, *v1);
    void *v1 = result;
  }
  return result;
}

__n128 sub_6D5AC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 16) = a1 + 1;
  uint64_t v4 = v3 + 152 * a1;
  long long v5 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(v4 + 128) = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(v4 + 144) = v5;
  *(_OWORD *)(v4 + 160) = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(v4 + 176) = *(unsigned char *)(a2 + 144);
  long long v6 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v4 + 64) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(v4 + 80) = v6;
  long long v7 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(v4 + 112) = v7;
  __n128 result = *(__n128 *)a2;
  long long v9 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v4 + 32) = *(_OWORD *)a2;
  *(_OWORD *)(v4 + 48) = v9;
  return result;
}

uint64_t sub_6D5F4(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v35 = sub_12124(&qword_26D938);
  uint64_t v4 = *(void *)(v35 - 8);
  uint64_t v5 = __chkstk_darwin(v35);
  uint64_t v36 = (char *)&v28 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v8 = (char *)&v28 - v7;
  sub_12124(&qword_26D940);
  uint64_t result = sub_1FC280();
  int64_t v10 = 0;
  uint64_t v37 = v4;
  uint64_t v38 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v29 = a1 + 64;
  uint64_t v12 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v11;
  unint64_t v32 = (void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v33 = v4 + 16;
  int64_t v30 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v31 = result + 64;
  uint64_t v34 = result;
  uint64_t v16 = v35;
  char v15 = v36;
  if ((v13 & v11) == 0) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v39 = v2;
  unint64_t v17 = __clz(__rbit64(v14));
  v14 &= v14 - 1;
  for (unint64_t i = v17 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v10 << 6))
  {
    char v22 = *(unsigned char *)(*(void *)(v38 + 48) + i);
    long long v23 = *(void (**)(char *, unint64_t, uint64_t))(v37 + 16);
    v23(v8, *(void *)(v38 + 56) + *(void *)(v37 + 72) * i, v16);
    v23(v15, (unint64_t)v8, v16);
    sub_52CC0(&qword_26D948, &qword_26D938);
    uint64_t v40 = sub_1FB9B0();
    uint64_t v24 = v39;
    sub_6C354(&v40, sub_124778, sub_6DF24);
    if (v24) {
      break;
    }
    uint64_t v2 = 0;
    uint64_t v25 = v40;
    (*v32)(v8, v16);
    *(void *)(v31 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t result = v34;
    *(unsigned char *)(*(void *)(v34 + 48) + i) = v22;
    *(void *)(*(void *)(result + 56) + 8 * i) = v25;
    uint64_t v26 = *(void *)(result + 16);
    BOOL v19 = __OFADD__(v26, 1);
    uint64_t v27 = v26 + 1;
    if (v19)
    {
      __break(1u);
LABEL_26:
      __break(1u);
LABEL_27:
      __break(1u);
      break;
    }
    *(void *)(result + 16) = v27;
    if (v14) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v19 = __OFADD__(v10++, 1);
    if (v19) {
      goto LABEL_26;
    }
    if (v10 >= v30) {
      return result;
    }
    unint64_t v20 = *(void *)(v29 + 8 * v10);
    if (!v20)
    {
      int64_t v21 = v10 + 1;
      if (v10 + 1 >= v30) {
        return result;
      }
      unint64_t v20 = *(void *)(v29 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v10 + 2;
        if (v10 + 2 >= v30) {
          return result;
        }
        unint64_t v20 = *(void *)(v29 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v10 + 3;
          if (v10 + 3 >= v30) {
            return result;
          }
          unint64_t v20 = *(void *)(v29 + 8 * v21);
          if (!v20)
          {
            while (1)
            {
              int64_t v10 = v21 + 1;
              if (__OFADD__(v21, 1)) {
                goto LABEL_27;
              }
              if (v10 >= v30) {
                return result;
              }
              unint64_t v20 = *(void *)(v29 + 8 * v10);
              ++v21;
              if (v20) {
                goto LABEL_15;
              }
            }
          }
        }
      }
      int64_t v10 = v21;
    }
LABEL_15:
    uint64_t v39 = v2;
    unint64_t v14 = (v20 - 1) & v20;
  }
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

uint64_t sub_6D96C(unsigned char *a1, uint64_t a2, char *a3, uint64_t *a4)
{
  return sub_1F48FC(a1, a2, a3, a4, *(void *)(v4 + 16));
}

uint64_t sub_6D988(uint64_t a1)
{
  return a1;
}

unint64_t sub_6D9D8()
{
  unint64_t result = qword_26D910;
  if (!qword_26D910)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_26D910);
  }
  return result;
}

uint64_t sub_6DA2C(uint64_t a1)
{
  return a1;
}

uint64_t sub_6DA7C()
{
  swift_bridgeObjectRelease();

  return _swift_deallocObject(v0, 24, 7);
}

uint64_t sub_6DAB4(uint64_t a1)
{
  return sub_63F5C(a1, v1);
}

uint64_t sub_6DABC()
{
  swift_unknownObjectRelease();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 72, 7);
}

uint64_t sub_6DB14()
{
  uint64_t v2 = *(void *)(v0 + 64);
  uint64_t v3 = swift_task_alloc();
  long long v4 = *(_OWORD *)(v0 + 32);
  long long v5 = *(_OWORD *)(v0 + 48);
  *(void *)(v1 + 16) = v3;
  *(void *)uint64_t v3 = v1;
  *(void *)(v3 + 8) = sub_5958;
  *(void *)(v3 + 48) = v2;
  *(_OWORD *)(v3 + 16) = v4;
  *(_OWORD *)(v3 + 32) = v5;
  return _swift_task_switch(sub_64030, 0, 0);
}

uint64_t sub_6DBC8(uint64_t a1, uint64_t a2)
{
  if ((*(unsigned char *)(*(void *)(a1 - 8) + 82) & 2) != 0) {
    return *(void *)a2;
  }
  return a2;
}

uint64_t sub_6DC00(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = -v6;
  uint64_t v62 = a1;
  uint64_t v63 = a1 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  uint64_t v64 = v7;
  uint64_t v65 = 0;
  uint64_t v66 = v10 & v8;
  uint64_t v67 = a2;
  uint64_t v68 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_74798((uint64_t)v52);
  uint64_t v11 = v58;
  if (v58)
  {
    while (1)
    {
      uint64_t v50 = v11;
      uint64_t v23 = v52[0];
      uint64_t v24 = v52[1];
      char v25 = v53;
      uint64_t v26 = v54;
      char v27 = v55;
      char v48 = v57;
      uint64_t v46 = v59;
      uint64_t v47 = v56;
      uint64_t v49 = v60;
      uint64_t v28 = v61;
      uint64_t v29 = (void *)*a5;
      unint64_t v31 = sub_56168(v52[0]);
      uint64_t v32 = v29[2];
      BOOL v33 = (v30 & 1) == 0;
      uint64_t v34 = v32 + v33;
      if (__OFADD__(v32, v33)) {
        break;
      }
      char v35 = v30;
      if (v29[3] >= v34)
      {
        if ((a4 & 1) == 0) {
          sub_120B90();
        }
      }
      else
      {
        sub_117EAC(v34, a4 & 1);
        uint64_t v36 = sub_56168(v23);
        if ((v35 & 1) != (v37 & 1)) {
          goto LABEL_19;
        }
        unint64_t v31 = v36;
      }
      uint64_t v38 = (void *)*a5;
      if (v35)
      {
        uint64_t v13 = 80 * v31;
        uint64_t v14 = v38[7] + 80 * v31;
        uint64_t v15 = *(void *)v14;
        char v16 = *(unsigned char *)(v14 + 8);
        char v43 = *(unsigned char *)(v14 + 24);
        uint64_t v17 = *(void *)(v14 + 32);
        uint64_t v18 = *(void *)(v14 + 48);
        uint64_t v44 = *(void *)(v14 + 16);
        uint64_t v45 = *(void *)(v14 + 56);
        uint64_t v19 = *(void *)(v14 + 64);
        uint64_t v20 = *(void *)(v14 + 72);
        char v21 = *(unsigned char *)(v14 + 40);
        sub_5480C(v17, v21);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_54820(v47, v48);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v22 = v38[7] + v13;
        sub_54820(*(void *)(v22 + 32), *(unsigned char *)(v22 + 40));
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v22 = v15;
        *(unsigned char *)(v22 + 8) = v16;
        *(void *)(v22 + 16) = v44;
        *(unsigned char *)(v22 + 24) = v43;
        *(void *)(v22 + 32) = v17;
        *(unsigned char *)(v22 + 40) = v21;
        *(void *)(v22 + 48) = v18;
        *(void *)(v22 + 56) = v45;
        *(void *)(v22 + 64) = v19;
        *(void *)(v22 + 72) = v20;
      }
      else
      {
        v38[(v31 >> 6) + 8] |= 1 << v31;
        *(void *)(v38[6] + 8 * v31) = v23;
        uint64_t v39 = v38[7] + 80 * v31;
        *(void *)uint64_t v39 = v24;
        *(unsigned char *)(v39 + 8) = v25;
        *(void *)(v39 + 16) = v26;
        *(unsigned char *)(v39 + 24) = v27;
        *(void *)(v39 + 32) = v47;
        *(unsigned char *)(v39 + 40) = v48;
        *(void *)(v39 + 48) = v50;
        *(void *)(v39 + 56) = v46;
        *(void *)(v39 + 64) = v49;
        *(void *)(v39 + 72) = v28;
        uint64_t v40 = v38[2];
        BOOL v41 = __OFADD__(v40, 1);
        uint64_t v42 = v40 + 1;
        if (v41) {
          goto LABEL_18;
        }
        v38[2] = v42;
      }
      sub_74798((uint64_t)v52);
      uint64_t v11 = v58;
      a4 = 1;
      if (!v58) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1FC770();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1226C();
    return swift_release();
  }
  return result;
}

Swift::Int sub_6DF24(void *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v79 = *v2;
      uint64_t v80 = *v2 + 152;
      uint64_t v81 = -1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v83 = v81;
        uint64_t v84 = v80;
        do
        {
          if (*(double *)(v84 + 72) >= *(double *)(v84 - 80)) {
            break;
          }
          if (!v79) {
            goto LABEL_143;
          }
          uint64_t v85 = v84 - 152;
          long long v126 = *(_OWORD *)(v84 + 96);
          long long v129 = *(_OWORD *)(v84 + 112);
          long long v132 = *(_OWORD *)(v84 + 128);
          char v135 = *(unsigned char *)(v84 + 144);
          long long v114 = *(_OWORD *)(v84 + 32);
          long long v117 = *(_OWORD *)(v84 + 48);
          long long v120 = *(_OWORD *)(v84 + 64);
          long long v123 = *(_OWORD *)(v84 + 80);
          long long v108 = *(_OWORD *)v84;
          long long v111 = *(_OWORD *)(v84 + 16);
          long long v86 = *(_OWORD *)(v84 - 40);
          *(_OWORD *)(v84 + 96) = *(_OWORD *)(v84 - 56);
          *(_OWORD *)(v84 + 112) = v86;
          *(_OWORD *)(v84 + 128) = *(_OWORD *)(v84 - 24);
          *(void *)(v84 + 144) = *(void *)(v84 - 8);
          long long v87 = *(_OWORD *)(v84 - 104);
          *(_OWORD *)(v84 + 32) = *(_OWORD *)(v84 - 120);
          *(_OWORD *)(v84 + 48) = v87;
          long long v88 = *(_OWORD *)(v84 - 72);
          *(_OWORD *)(v84 + 64) = *(_OWORD *)(v84 - 88);
          *(_OWORD *)(v84 + 80) = v88;
          long long v89 = *(_OWORD *)(v84 - 136);
          *(_OWORD *)uint64_t v84 = *(_OWORD *)(v84 - 152);
          *(_OWORD *)(v84 + 16) = v89;
          *(_OWORD *)(v85 + 96) = v126;
          *(_OWORD *)(v85 + 112) = v129;
          *(_OWORD *)(v85 + 128) = v132;
          *(unsigned char *)(v85 + 144) = v135;
          *(_OWORD *)(v85 + 32) = v114;
          *(_OWORD *)(v85 + 48) = v117;
          *(_OWORD *)(v85 + 64) = v120;
          *(_OWORD *)(v85 + 80) = v123;
          v84 -= 152;
          *(_OWORD *)uint64_t v85 = v108;
          *(_OWORD *)(v85 + 16) = v111;
        }
        while (!__CFADD__(v83++, 1));
        v80 += 152;
        --v81;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  Swift::Int v102 = result;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    long long v104 = (double *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      unint64_t v91 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      long long v101 = v8;
      if (v11 >= 2)
      {
        uint64_t v92 = *v2;
        do
        {
          unint64_t v93 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v92) {
            goto LABEL_147;
          }
          uint64_t v94 = v91;
          uint64_t v95 = *(void *)&v91[16 * v93 + 32];
          uint64_t v96 = *(void *)&v91[16 * v11 + 24];
          sub_6F848((double *)(v92 + 152 * v95), (double *)(v92 + 152 * *(void *)&v91[16 * v11 + 16]), v92 + 152 * v96, v104);
          if (v1) {
            break;
          }
          if (v96 < v95) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v94 = sub_70B24((uint64_t)v94);
          }
          if (v93 >= *((void *)v94 + 2)) {
            goto LABEL_136;
          }
          long long v97 = &v94[16 * v93 + 32];
          *(void *)long long v97 = v95;
          *((void *)v97 + 1) = v96;
          unint64_t v98 = *((void *)v94 + 2);
          if (v11 > v98) {
            goto LABEL_137;
          }
          memmove(&v94[16 * v11 + 16], &v94[16 * v11 + 32], 16 * (v98 - v11));
          unint64_t v91 = v94;
          *((void *)v94 + 2) = v98 - 1;
          unint64_t v11 = v98 - 1;
        }
        while (v98 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      v101[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v101 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    long long v101 = (void *)v7;
    long long v104 = (double *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  long long v99 = v2;
  uint64_t v10 = *v2;
  uint64_t v100 = v10 + 72;
  char v105 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v103 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    if (v9 < v3)
    {
      double v13 = *(double *)(v100 + 152 * v9);
      double v14 = *(double *)(v100 + 152 * v12);
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v15 = (double *)(v10 + 224 + 152 * v12);
        while (v13 < v14 != v15[19] >= *v15)
        {
          ++v9;
          v15 += 19;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v13 < v14)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          char v16 = (_OWORD *)(v10 - 152 + 152 * v9);
          Swift::Int v17 = v9;
          Swift::Int v18 = v12;
          uint64_t v19 = (_OWORD *)(v10 + 152 * v12);
          do
          {
            if (v18 != --v17)
            {
              if (!v10) {
                goto LABEL_146;
              }
              long long v124 = v19[6];
              long long v127 = v19[7];
              long long v130 = v19[8];
              char v133 = *((unsigned char *)v19 + 144);
              long long v112 = v19[2];
              long long v115 = v19[3];
              long long v118 = v19[4];
              long long v121 = v19[5];
              long long v106 = *v19;
              long long v109 = v19[1];
              memmove(v19, v16, 0x98uLL);
              v16[6] = v124;
              v16[7] = v127;
              v16[8] = v130;
              *((unsigned char *)v16 + 144) = v133;
              _OWORD v16[2] = v112;
              v16[3] = v115;
              void v16[4] = v118;
              v16[5] = v121;
              *char v16 = v106;
              v16[1] = v109;
            }
            ++v18;
            char v16 = (_OWORD *)((char *)v16 - 152);
            uint64_t v19 = (_OWORD *)((char *)v19 + 152);
          }
          while (v18 < v17);
          Swift::Int v3 = v103;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v102) {
      goto LABEL_39;
    }
    Swift::Int v20 = v12 + v102;
    if (__OFADD__(v12, v102)) {
      goto LABEL_141;
    }
    if (v20 >= v3) {
      Swift::Int v20 = v3;
    }
    if (v20 < v12) {
      break;
    }
    if (v9 != v20)
    {
      char v71 = (long long *)(v10 + 152 * v9);
      char v21 = v105;
      do
      {
        Swift::Int v72 = v12;
        uint64_t v73 = (double *)v71;
        do
        {
          if (v73[9] >= *(v73 - 10)) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          uint64_t v74 = v73 - 19;
          long long v125 = *((_OWORD *)v73 + 6);
          long long v128 = *((_OWORD *)v73 + 7);
          long long v131 = *((_OWORD *)v73 + 8);
          char v134 = *((unsigned char *)v73 + 144);
          long long v113 = *((_OWORD *)v73 + 2);
          long long v116 = *((_OWORD *)v73 + 3);
          long long v119 = *((_OWORD *)v73 + 4);
          long long v122 = *((_OWORD *)v73 + 5);
          long long v107 = *(_OWORD *)v73;
          long long v110 = *((_OWORD *)v73 + 1);
          long long v75 = *(_OWORD *)(v73 - 5);
          *((_OWORD *)v73 + 6) = *(_OWORD *)(v73 - 7);
          *((_OWORD *)v73 + 7) = v75;
          *((_OWORD *)v73 + 8) = *(_OWORD *)(v73 - 3);
          v73[18] = *(v73 - 1);
          long long v76 = *(_OWORD *)(v73 - 13);
          *((_OWORD *)v73 + 2) = *(_OWORD *)(v73 - 15);
          *((_OWORD *)v73 + 3) = v76;
          long long v77 = *(_OWORD *)(v73 - 9);
          *((_OWORD *)v73 + 4) = *(_OWORD *)(v73 - 11);
          *((_OWORD *)v73 + 5) = v77;
          long long v78 = *(_OWORD *)(v73 - 17);
          *(_OWORD *)uint64_t v73 = *(_OWORD *)(v73 - 19);
          *((_OWORD *)v73 + 1) = v78;
          *((_OWORD *)v74 + 6) = v125;
          *((_OWORD *)v74 + 7) = v128;
          *((_OWORD *)v74 + 8) = v131;
          *((unsigned char *)v74 + 144) = v134;
          *((_OWORD *)v74 + 2) = v113;
          *((_OWORD *)v74 + 3) = v116;
          *((_OWORD *)v74 + 4) = v119;
          *((_OWORD *)v74 + 5) = v122;
          ++v72;
          v73 -= 19;
          *(_OWORD *)uint64_t v74 = v107;
          *((_OWORD *)v74 + 1) = v110;
        }
        while (v9 != v72);
        ++v9;
        char v71 = (long long *)((char *)v71 + 152);
      }
      while (v9 != v20);
      Swift::Int v9 = v20;
      if (v20 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    char v21 = v105;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v21 = sub_7004C(0, *((void *)v21 + 2) + 1, 1, v21);
    }
    unint64_t v23 = *((void *)v21 + 2);
    unint64_t v22 = *((void *)v21 + 3);
    unint64_t v11 = v23 + 1;
    if (v23 >= v22 >> 1) {
      char v21 = sub_7004C((char *)(v22 > 1), v23 + 1, 1, v21);
    }
    *((void *)v21 + 2) = v11;
    uint64_t v24 = v21 + 32;
    char v25 = &v21[16 * v23 + 32];
    *(void *)char v25 = v12;
    *((void *)v25 + 1) = v9;
    char v105 = v21;
    if (v23)
    {
      while (1)
      {
        unint64_t v26 = v11 - 1;
        if (v11 >= 4)
        {
          unint64_t v31 = &v24[16 * v11];
          uint64_t v32 = *((void *)v31 - 8);
          uint64_t v33 = *((void *)v31 - 7);
          BOOL v37 = __OFSUB__(v33, v32);
          uint64_t v34 = v33 - v32;
          if (v37) {
            goto LABEL_122;
          }
          uint64_t v36 = *((void *)v31 - 6);
          uint64_t v35 = *((void *)v31 - 5);
          BOOL v37 = __OFSUB__(v35, v36);
          uint64_t v29 = v35 - v36;
          char v30 = v37;
          if (v37) {
            goto LABEL_123;
          }
          unint64_t v38 = v11 - 2;
          uint64_t v39 = &v24[16 * v11 - 32];
          uint64_t v41 = *(void *)v39;
          uint64_t v40 = *((void *)v39 + 1);
          BOOL v37 = __OFSUB__(v40, v41);
          uint64_t v42 = v40 - v41;
          if (v37) {
            goto LABEL_125;
          }
          BOOL v37 = __OFADD__(v29, v42);
          uint64_t v43 = v29 + v42;
          if (v37) {
            goto LABEL_128;
          }
          if (v43 >= v34)
          {
            uint64_t v61 = &v24[16 * v26];
            uint64_t v63 = *(void *)v61;
            uint64_t v62 = *((void *)v61 + 1);
            BOOL v37 = __OFSUB__(v62, v63);
            uint64_t v64 = v62 - v63;
            if (v37) {
              goto LABEL_132;
            }
            BOOL v54 = v29 < v64;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v55 = *((void *)v21 + 4);
            uint64_t v56 = *((void *)v21 + 5);
            BOOL v37 = __OFSUB__(v56, v55);
            uint64_t v48 = v56 - v55;
            char v49 = v37;
            goto LABEL_70;
          }
          uint64_t v28 = *((void *)v21 + 4);
          uint64_t v27 = *((void *)v21 + 5);
          BOOL v37 = __OFSUB__(v27, v28);
          uint64_t v29 = v27 - v28;
          char v30 = v37;
        }
        if (v30) {
          goto LABEL_124;
        }
        unint64_t v38 = v11 - 2;
        uint64_t v44 = &v24[16 * v11 - 32];
        uint64_t v46 = *(void *)v44;
        uint64_t v45 = *((void *)v44 + 1);
        BOOL v47 = __OFSUB__(v45, v46);
        uint64_t v48 = v45 - v46;
        char v49 = v47;
        if (v47) {
          goto LABEL_127;
        }
        uint64_t v50 = &v24[16 * v26];
        uint64_t v52 = *(void *)v50;
        uint64_t v51 = *((void *)v50 + 1);
        BOOL v37 = __OFSUB__(v51, v52);
        uint64_t v53 = v51 - v52;
        if (v37) {
          goto LABEL_130;
        }
        if (__OFADD__(v48, v53)) {
          goto LABEL_131;
        }
        if (v48 + v53 >= v29)
        {
          BOOL v54 = v29 < v53;
LABEL_76:
          if (v54) {
            unint64_t v26 = v38;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v49) {
          goto LABEL_126;
        }
        char v57 = &v24[16 * v26];
        uint64_t v59 = *(void *)v57;
        uint64_t v58 = *((void *)v57 + 1);
        BOOL v37 = __OFSUB__(v58, v59);
        uint64_t v60 = v58 - v59;
        if (v37) {
          goto LABEL_129;
        }
        if (v60 < v48) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v65 = v26 - 1;
        if (v26 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        uint64_t v66 = &v24[16 * v65];
        uint64_t v67 = *(void *)v66;
        uint64_t v68 = &v24[16 * v26];
        uint64_t v69 = *((void *)v68 + 1);
        sub_6F848((double *)(v10 + 152 * *(void *)v66), (double *)(v10 + 152 * *(void *)v68), v10 + 152 * v69, v104);
        if (v1) {
          goto LABEL_95;
        }
        if (v69 < v67) {
          goto LABEL_119;
        }
        if (v26 > *((void *)v105 + 2)) {
          goto LABEL_120;
        }
        *(void *)uint64_t v66 = v67;
        *(void *)&v24[16 * v65 + 8] = v69;
        unint64_t v70 = *((void *)v105 + 2);
        if (v26 >= v70) {
          goto LABEL_121;
        }
        char v21 = v105;
        unint64_t v11 = v70 - 1;
        memmove(&v24[16 * v26], v68 + 16, 16 * (v70 - 1 - v26));
        *((void *)v105 + 2) = v70 - 1;
        if (v70 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v103;
    if (v9 >= v103)
    {
      uint64_t v8 = v101;
      unint64_t v91 = v105;
      uint64_t v2 = v99;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_6E780(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_1FC570(v3);
  Swift::Int v100 = v3;
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_140;
    }
    if ((unint64_t)v3 >= 2)
    {
      long long v78 = (void *)*a1;
      uint64_t v79 = -1;
      uint64_t v80 = 1;
      uint64_t v81 = v78;
      do
      {
        uint64_t v82 = v79;
        uint64_t v83 = v81;
        do
        {
          if (v83[70] >= v83[141]) {
            break;
          }
          if (!v78) {
            goto LABEL_144;
          }
          memcpy(__dst, v83 + 71, sizeof(__dst));
          memcpy(v83 + 71, v83, 0x238uLL);
          uint64_t result = (uint64_t)memcpy(v83, __dst, 0x238uLL);
          v83 -= 71;
        }
        while (!__CFADD__(v82++, 1));
        ++v80;
        v81 += 71;
        --v79;
      }
      while (v80 != v100);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_149;
  }
  uint64_t v98 = result;
  uint64_t v104 = v1;
  uint64_t v94 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    long long v101 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_106:
      uint64_t v85 = v10;
      long long v97 = v8;
      if (v11 >= 2)
      {
        uint64_t v86 = *v94;
        do
        {
          unint64_t v87 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_135;
          }
          if (!v86) {
            goto LABEL_148;
          }
          long long v88 = v85;
          uint64_t v89 = *(void *)&v85[16 * v87 + 32];
          uint64_t v90 = *(void *)&v85[16 * v11 + 24];
          uint64_t v91 = v104;
          sub_6FB00((char *)(v86 + 568 * v89), (char *)(v86 + 568 * *(void *)&v85[16 * v11 + 16]), v86 + 568 * v90, v101);
          uint64_t v104 = v91;
          if (v91) {
            break;
          }
          if (v90 < v89) {
            goto LABEL_136;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v88 = sub_70B24((uint64_t)v88);
          }
          if (v87 >= *((void *)v88 + 2)) {
            goto LABEL_137;
          }
          uint64_t v92 = &v88[16 * v87 + 32];
          *(void *)uint64_t v92 = v89;
          *((void *)v92 + 1) = v90;
          unint64_t v93 = *((void *)v88 + 2);
          if (v11 > v93) {
            goto LABEL_138;
          }
          memmove(&v88[16 * v11 + 16], &v88[16 * v11 + 32], 16 * (v93 - v11));
          uint64_t v85 = v88;
          *((void *)v88 + 2) = v93 - 1;
          unint64_t v11 = v93 - 1;
        }
        while (v93 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      v97[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v97 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    sub_12124(&qword_26D3D8);
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    long long v97 = (void *)v7;
    long long v101 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v102 = *a1;
  uint64_t v95 = *a1 - 568;
  uint64_t v96 = *a1 + 1696;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v12 = v9++;
    if (v9 < v3)
    {
      uint64_t v13 = *(void *)(v102 + 568 * v9 + 560);
      uint64_t v14 = *(void *)(v102 + 568 * v12 + 560);
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        uint64_t v15 = (uint64_t *)(v96 + 568 * v12);
        uint64_t v16 = v13;
        while (1)
        {
          uint64_t v17 = *v15;
          if (v14 < v13 == v16 >= *v15) {
            break;
          }
          v15 += 71;
          ++v9;
          uint64_t v16 = v17;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v14 < v13)
      {
        if (v9 < v12) {
          goto LABEL_141;
        }
        if (v12 < v9)
        {
          Swift::Int v18 = (char *)(v95 + 568 * v9);
          Swift::Int v19 = v9;
          Swift::Int v20 = v12;
          char v21 = (char *)(v102 + 568 * v12);
          do
          {
            if (v20 != --v19)
            {
              if (!v102) {
                goto LABEL_147;
              }
              memcpy(__dst, v21, sizeof(__dst));
              memmove(v21, v18, 0x238uLL);
              memcpy(v18, __dst, 0x238uLL);
            }
            ++v20;
            v18 -= 568;
            v21 += 568;
          }
          while (v20 < v19);
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_139;
    }
    if (v9 - v12 >= v98) {
      goto LABEL_39;
    }
    if (__OFADD__(v12, v98)) {
      goto LABEL_142;
    }
    Swift::Int v22 = v12 + v98 >= v3 ? v3 : v12 + v98;
    if (v22 < v12) {
      break;
    }
    if (v9 != v22)
    {
      long long v76 = (void *)(v95 + 568 * v9);
      uint64_t v23 = v102;
      Swift::Int v99 = v12;
      do
      {
        long long v77 = v76;
        do
        {
          if (v77[70] >= v77[141]) {
            break;
          }
          if (!v102) {
            goto LABEL_145;
          }
          memcpy(__dst, v77 + 71, sizeof(__dst));
          memcpy(v77 + 71, v77, 0x238uLL);
          memcpy(v77, __dst, 0x238uLL);
          ++v12;
          v77 -= 71;
        }
        while (v9 != v12);
        ++v9;
        v76 += 71;
        Swift::Int v12 = v99;
      }
      while (v9 != v22);
      Swift::Int v9 = v22;
      if (v22 < v99) {
        goto LABEL_134;
      }
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v23 = v102;
    if (v9 < v12) {
      goto LABEL_134;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v10 = sub_7004C(0, *((void *)v10 + 2) + 1, 1, v10);
    }
    unint64_t v25 = *((void *)v10 + 2);
    unint64_t v24 = *((void *)v10 + 3);
    unint64_t v11 = v25 + 1;
    if (v25 >= v24 >> 1) {
      uint64_t v10 = sub_7004C((char *)(v24 > 1), v25 + 1, 1, v10);
    }
    *((void *)v10 + 2) = v11;
    unint64_t v26 = v10 + 32;
    uint64_t v27 = &v10[16 * v25 + 32];
    *(void *)uint64_t v27 = v12;
    *((void *)v27 + 1) = v9;
    if (v25)
    {
      while (1)
      {
        unint64_t v28 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v33 = &v26[16 * v11];
          uint64_t v34 = *((void *)v33 - 8);
          uint64_t v35 = *((void *)v33 - 7);
          BOOL v39 = __OFSUB__(v35, v34);
          uint64_t v36 = v35 - v34;
          if (v39) {
            goto LABEL_123;
          }
          uint64_t v38 = *((void *)v33 - 6);
          uint64_t v37 = *((void *)v33 - 5);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v31 = v37 - v38;
          char v32 = v39;
          if (v39) {
            goto LABEL_124;
          }
          unint64_t v40 = v11 - 2;
          uint64_t v41 = &v26[16 * v11 - 32];
          uint64_t v43 = *(void *)v41;
          uint64_t v42 = *((void *)v41 + 1);
          BOOL v39 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          if (v39) {
            goto LABEL_126;
          }
          BOOL v39 = __OFADD__(v31, v44);
          uint64_t v45 = v31 + v44;
          if (v39) {
            goto LABEL_129;
          }
          if (v45 >= v36)
          {
            uint64_t v63 = &v26[16 * v28];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v39 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v39) {
              goto LABEL_133;
            }
            BOOL v56 = v31 < v66;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v57 = *((void *)v10 + 4);
            uint64_t v58 = *((void *)v10 + 5);
            BOOL v39 = __OFSUB__(v58, v57);
            uint64_t v50 = v58 - v57;
            char v51 = v39;
            goto LABEL_70;
          }
          uint64_t v30 = *((void *)v10 + 4);
          uint64_t v29 = *((void *)v10 + 5);
          BOOL v39 = __OFSUB__(v29, v30);
          uint64_t v31 = v29 - v30;
          char v32 = v39;
        }
        if (v32) {
          goto LABEL_125;
        }
        unint64_t v40 = v11 - 2;
        uint64_t v46 = &v26[16 * v11 - 32];
        uint64_t v48 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        BOOL v49 = __OFSUB__(v47, v48);
        uint64_t v50 = v47 - v48;
        char v51 = v49;
        if (v49) {
          goto LABEL_128;
        }
        uint64_t v52 = &v26[16 * v28];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v39 = __OFSUB__(v53, v54);
        uint64_t v55 = v53 - v54;
        if (v39) {
          goto LABEL_131;
        }
        if (__OFADD__(v50, v55)) {
          goto LABEL_132;
        }
        if (v50 + v55 >= v31)
        {
          BOOL v56 = v31 < v55;
LABEL_76:
          if (v56) {
            unint64_t v28 = v40;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v51) {
          goto LABEL_127;
        }
        uint64_t v59 = &v26[16 * v28];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v39 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v39) {
          goto LABEL_130;
        }
        if (v62 < v50) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v67 = v28 - 1;
        if (v28 - 1 >= v11)
        {
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
          goto LABEL_143;
        }
        uint64_t v68 = v23;
        if (!v23) {
          goto LABEL_146;
        }
        uint64_t v69 = v10;
        unint64_t v70 = &v26[16 * v67];
        uint64_t v71 = *(void *)v70;
        Swift::Int v72 = &v26[16 * v28];
        uint64_t v73 = *((void *)v72 + 1);
        uint64_t v74 = v104;
        sub_6FB00((char *)(v68 + 568 * *(void *)v70), (char *)(v68 + 568 * *(void *)v72), v68 + 568 * v73, v101);
        uint64_t v104 = v74;
        if (v74) {
          goto LABEL_95;
        }
        if (v73 < v71) {
          goto LABEL_120;
        }
        if (v28 > *((void *)v69 + 2)) {
          goto LABEL_121;
        }
        *(void *)unint64_t v70 = v71;
        *(void *)&v26[16 * v67 + 8] = v73;
        unint64_t v75 = *((void *)v69 + 2);
        if (v28 >= v75) {
          goto LABEL_122;
        }
        uint64_t v10 = v69;
        unint64_t v11 = v75 - 1;
        memmove(&v26[16 * v28], v72 + 16, 16 * (v75 - 1 - v28));
        *((void *)v69 + 2) = v75 - 1;
        uint64_t v23 = v102;
        if (v75 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v100;
    if (v9 >= v100)
    {
      uint64_t v8 = v97;
      goto LABEL_106;
    }
  }
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  uint64_t result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_6EF08(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_136;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v83 = 0;
      uint64_t v84 = *a1;
      for (uint64_t i = 1; i != v3; ++i)
      {
        uint64_t v86 = *(void *)(v84 + 16 * i + 8);
        uint64_t v87 = v83;
        do
        {
          uint64_t v88 = v84 + v87;
          if (*(void *)(v84 + v87 + 8) >= v86) {
            break;
          }
          if (!v84) {
            goto LABEL_140;
          }
          uint64_t v89 = *(void *)(v88 + 16);
          *(_OWORD *)(v88 + 16) = *(_OWORD *)v88;
          *(void *)uint64_t v88 = v89;
          *(void *)(v88 + 8) = v86;
          v87 -= 16;
        }
        while (v87 != -16);
        v83 += 16;
      }
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_145;
  }
  Swift::Int v6 = result;
  Swift::Int v99 = a1;
  if (v3 < 2)
  {
    Swift::Int v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      Swift::Int v12 = (char *)_swiftEmptyArrayStorage;
LABEL_102:
      uint64_t v90 = v12;
      long long v101 = v9;
      if (v13 >= 2)
      {
        uint64_t v91 = *v99;
        do
        {
          unint64_t v92 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_131;
          }
          if (!v91) {
            goto LABEL_144;
          }
          unint64_t v93 = v90;
          uint64_t v94 = *(void *)&v90[16 * v92 + 32];
          uint64_t v95 = *(void *)&v90[16 * v13 + 24];
          sub_6FDC0((char *)(v91 + 16 * v94), (char *)(v91 + 16 * *(void *)&v90[16 * v13 + 16]), v91 + 16 * v95, __dst);
          if (v1) {
            break;
          }
          if (v95 < v94) {
            goto LABEL_132;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v93 = sub_70B24((uint64_t)v93);
          }
          if (v92 >= *((void *)v93 + 2)) {
            goto LABEL_133;
          }
          uint64_t v96 = &v93[16 * v92 + 32];
          *(void *)uint64_t v96 = v94;
          *((void *)v96 + 1) = v95;
          unint64_t v97 = *((void *)v93 + 2);
          if (v13 > v97) {
            goto LABEL_134;
          }
          memmove(&v93[16 * v13 + 16], &v93[16 * v13 + 32], 16 * (v97 - v13));
          uint64_t v90 = v93;
          *((void *)v93 + 2) = v97 - 1;
          unint64_t v13 = v97 - 1;
        }
        while (v97 > 2);
      }
LABEL_93:
      swift_bridgeObjectRelease();
      v101[2] = 0;
      return swift_bridgeObjectRelease();
    }
    long long v101 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    sub_12124(&qword_26D9A8);
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    long long v101 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v100 = *a1 + 40;
  uint64_t v98 = *a1 - 16;
  Swift::Int v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v102 = v6;
  Swift::Int v103 = v3;
  uint64_t v104 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 < v3)
    {
      uint64_t v15 = *(void *)(v11 + 16 * v10 + 8);
      uint64_t v16 = *(void *)(v11 + 16 * v14 + 8);
      Swift::Int v10 = v14 + 2;
      if (v14 + 2 < v3)
      {
        uint64_t v17 = (uint64_t *)(v100 + 16 * v14);
        uint64_t v18 = v15;
        while (1)
        {
          uint64_t v20 = *v17;
          v17 += 2;
          uint64_t v19 = v20;
          if (v16 < v15 == v18 >= v20) {
            break;
          }
          ++v10;
          uint64_t v18 = v19;
          if (v3 == v10)
          {
            Swift::Int v10 = v3;
            break;
          }
        }
      }
      if (v16 < v15)
      {
        if (v10 < v14) {
          goto LABEL_137;
        }
        if (v14 < v10)
        {
          char v21 = (long long *)(v98 + 16 * v10);
          Swift::Int v22 = v10;
          Swift::Int v23 = v14;
          unint64_t v24 = (long long *)(v11 + 16 * v14);
          do
          {
            if (v23 != --v22)
            {
              if (!v11) {
                goto LABEL_143;
              }
              long long v25 = *v24;
              *unint64_t v24 = *v21;
              *char v21 = v25;
            }
            ++v23;
            --v21;
            ++v24;
          }
          while (v23 < v22);
        }
      }
    }
    if (v10 >= v3) {
      goto LABEL_46;
    }
    if (__OFSUB__(v10, v14)) {
      goto LABEL_135;
    }
    if (v10 - v14 >= v6) {
      goto LABEL_46;
    }
    Swift::Int v26 = v14 + v6;
    if (__OFADD__(v14, v6)) {
      goto LABEL_138;
    }
    if (v26 >= v3) {
      Swift::Int v26 = v3;
    }
    if (v26 < v14) {
      break;
    }
    if (v10 != v26)
    {
      uint64_t v27 = (void *)(v11 + 16 * v10);
      do
      {
        uint64_t v28 = *(void *)(v11 + 16 * v10 + 8);
        Swift::Int v29 = v14;
        uint64_t v30 = v27;
        do
        {
          if (*(v30 - 1) >= v28) {
            break;
          }
          if (!v11) {
            goto LABEL_141;
          }
          uint64_t v31 = *v30;
          *(_OWORD *)uint64_t v30 = *((_OWORD *)v30 - 1);
          *(v30 - 1) = v28;
          *(v30 - 2) = v31;
          v30 -= 2;
          ++v29;
        }
        while (v10 != v29);
        ++v10;
        v27 += 2;
      }
      while (v10 != v26);
      Swift::Int v10 = v26;
    }
LABEL_46:
    if (v10 < v14) {
      goto LABEL_130;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::Int v12 = sub_7004C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v33 = *((void *)v12 + 2);
    unint64_t v32 = *((void *)v12 + 3);
    unint64_t v13 = v33 + 1;
    uint64_t v11 = v104;
    if (v33 >= v32 >> 1)
    {
      uint64_t v82 = sub_7004C((char *)(v32 > 1), v33 + 1, 1, v12);
      uint64_t v11 = v104;
      Swift::Int v12 = v82;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v34 = v12 + 32;
    uint64_t v35 = &v12[16 * v33 + 32];
    *(void *)uint64_t v35 = v14;
    *((void *)v35 + 1) = v10;
    if (v33)
    {
      while (1)
      {
        unint64_t v36 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v41 = &v34[16 * v13];
          uint64_t v42 = *((void *)v41 - 8);
          uint64_t v43 = *((void *)v41 - 7);
          BOOL v47 = __OFSUB__(v43, v42);
          uint64_t v44 = v43 - v42;
          if (v47) {
            goto LABEL_119;
          }
          uint64_t v46 = *((void *)v41 - 6);
          uint64_t v45 = *((void *)v41 - 5);
          BOOL v47 = __OFSUB__(v45, v46);
          uint64_t v39 = v45 - v46;
          char v40 = v47;
          if (v47) {
            goto LABEL_120;
          }
          unint64_t v48 = v13 - 2;
          BOOL v49 = &v34[16 * v13 - 32];
          uint64_t v51 = *(void *)v49;
          uint64_t v50 = *((void *)v49 + 1);
          BOOL v47 = __OFSUB__(v50, v51);
          uint64_t v52 = v50 - v51;
          if (v47) {
            goto LABEL_122;
          }
          BOOL v47 = __OFADD__(v39, v52);
          uint64_t v53 = v39 + v52;
          if (v47) {
            goto LABEL_125;
          }
          if (v53 >= v44)
          {
            uint64_t v71 = &v34[16 * v36];
            uint64_t v73 = *(void *)v71;
            uint64_t v72 = *((void *)v71 + 1);
            BOOL v47 = __OFSUB__(v72, v73);
            uint64_t v74 = v72 - v73;
            if (v47) {
              goto LABEL_129;
            }
            BOOL v64 = v39 < v74;
            goto LABEL_83;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v65 = *((void *)v12 + 4);
            uint64_t v66 = *((void *)v12 + 5);
            BOOL v47 = __OFSUB__(v66, v65);
            uint64_t v58 = v66 - v65;
            char v59 = v47;
            goto LABEL_77;
          }
          uint64_t v38 = *((void *)v12 + 4);
          uint64_t v37 = *((void *)v12 + 5);
          BOOL v47 = __OFSUB__(v37, v38);
          uint64_t v39 = v37 - v38;
          char v40 = v47;
        }
        if (v40) {
          goto LABEL_121;
        }
        unint64_t v48 = v13 - 2;
        uint64_t v54 = &v34[16 * v13 - 32];
        uint64_t v56 = *(void *)v54;
        uint64_t v55 = *((void *)v54 + 1);
        BOOL v57 = __OFSUB__(v55, v56);
        uint64_t v58 = v55 - v56;
        char v59 = v57;
        if (v57) {
          goto LABEL_124;
        }
        uint64_t v60 = &v34[16 * v36];
        uint64_t v62 = *(void *)v60;
        uint64_t v61 = *((void *)v60 + 1);
        BOOL v47 = __OFSUB__(v61, v62);
        uint64_t v63 = v61 - v62;
        if (v47) {
          goto LABEL_127;
        }
        if (__OFADD__(v58, v63)) {
          goto LABEL_128;
        }
        if (v58 + v63 >= v39)
        {
          BOOL v64 = v39 < v63;
LABEL_83:
          if (v64) {
            unint64_t v36 = v48;
          }
          goto LABEL_85;
        }
LABEL_77:
        if (v59) {
          goto LABEL_123;
        }
        unint64_t v67 = &v34[16 * v36];
        uint64_t v69 = *(void *)v67;
        uint64_t v68 = *((void *)v67 + 1);
        BOOL v47 = __OFSUB__(v68, v69);
        uint64_t v70 = v68 - v69;
        if (v47) {
          goto LABEL_126;
        }
        if (v70 < v58) {
          goto LABEL_15;
        }
LABEL_85:
        unint64_t v75 = v36 - 1;
        if (v36 - 1 >= v13)
        {
          __break(1u);
LABEL_116:
          __break(1u);
LABEL_117:
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
          goto LABEL_139;
        }
        if (!v11) {
          goto LABEL_142;
        }
        long long v76 = v12;
        long long v77 = &v34[16 * v75];
        uint64_t v78 = *(void *)v77;
        uint64_t v79 = &v34[16 * v36];
        uint64_t v80 = *((void *)v79 + 1);
        sub_6FDC0((char *)(v11 + 16 * *(void *)v77), (char *)(v11 + 16 * *(void *)v79), v11 + 16 * v80, __dst);
        if (v1) {
          goto LABEL_93;
        }
        if (v80 < v78) {
          goto LABEL_116;
        }
        if (v36 > *((void *)v76 + 2)) {
          goto LABEL_117;
        }
        *(void *)long long v77 = v78;
        *(void *)&v34[16 * v75 + 8] = v80;
        unint64_t v81 = *((void *)v76 + 2);
        if (v36 >= v81) {
          goto LABEL_118;
        }
        Swift::Int v12 = v76;
        unint64_t v13 = v81 - 1;
        memmove(&v34[16 * v36], v79 + 16, 16 * (v81 - 1 - v36));
        *((void *)v76 + 2) = v81 - 1;
        uint64_t v11 = v104;
        if (v81 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v102;
    Swift::Int v3 = v103;
    if (v10 >= v103)
    {
      Swift::Int v9 = v101;
      goto LABEL_102;
    }
  }
LABEL_139:
  __break(1u);
LABEL_140:
  __break(1u);
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_6F5D8(uint64_t result, uint64_t a2, uint64_t a3, uint64_t (*a4)(long long *, _OWORD *))
{
  uint64_t v65 = a2;
  if (a3 != a2)
  {
    uint64_t v7 = a3;
    uint64_t v8 = *v4;
    uint64_t v9 = *v4 + 152 * a3;
    uint64_t v10 = result + 1;
    uint64_t v48 = result + 1;
LABEL_5:
    for (uint64_t i = v9; ; i -= 152)
    {
      long long v12 = *(_OWORD *)(i + 16);
      v61[0] = *(_OWORD *)i;
      v61[1] = v12;
      long long v13 = *(_OWORD *)(i + 32);
      long long v14 = *(_OWORD *)(i + 48);
      long long v15 = *(_OWORD *)(i + 80);
      v61[4] = *(_OWORD *)(i + 64);
      v61[5] = v15;
      v61[2] = v13;
      v61[3] = v14;
      long long v16 = *(_OWORD *)(i + 96);
      long long v17 = *(_OWORD *)(i + 112);
      long long v18 = *(_OWORD *)(i + 128);
      char v62 = *(unsigned char *)(i + 144);
      v61[7] = v17;
      v61[8] = v18;
      v61[6] = v16;
      long long v19 = *(_OWORD *)(i + 112);
      long long v57 = *(_OWORD *)(i + 96);
      long long v58 = v19;
      long long v59 = *(_OWORD *)(i + 128);
      char v60 = *(unsigned char *)(i + 144);
      long long v20 = *(_OWORD *)(i + 48);
      long long v53 = *(_OWORD *)(i + 32);
      long long v54 = v20;
      long long v21 = *(_OWORD *)(i + 80);
      long long v55 = *(_OWORD *)(i + 64);
      long long v56 = v21;
      long long v22 = *(_OWORD *)(i + 16);
      long long v51 = *(_OWORD *)i;
      long long v52 = v22;
      long long v23 = *(_OWORD *)(i - 136);
      v63[0] = *(_OWORD *)(i - 152);
      v63[1] = v23;
      long long v24 = *(_OWORD *)(i - 120);
      long long v25 = *(_OWORD *)(i - 104);
      long long v26 = *(_OWORD *)(i - 72);
      v63[4] = *(_OWORD *)(i - 88);
      v63[5] = v26;
      v63[2] = v24;
      v63[3] = v25;
      long long v27 = *(_OWORD *)(i - 56);
      long long v28 = *(_OWORD *)(i - 40);
      long long v29 = *(_OWORD *)(i - 24);
      char v64 = *(unsigned char *)(i - 8);
      v63[7] = v28;
      v63[8] = v29;
      v63[6] = v27;
      long long v30 = *(_OWORD *)(i - 40);
      v49[6] = *(_OWORD *)(i - 56);
      v49[7] = v30;
      v49[8] = *(_OWORD *)(i - 24);
      char v50 = *(unsigned char *)(i - 8);
      long long v31 = *(_OWORD *)(i - 104);
      v49[2] = *(_OWORD *)(i - 120);
      v49[3] = v31;
      long long v32 = *(_OWORD *)(i - 72);
      v49[4] = *(_OWORD *)(i - 88);
      v49[5] = v32;
      long long v33 = *(_OWORD *)(i - 136);
      v49[0] = *(_OWORD *)(i - 152);
      v49[1] = v33;
      sub_54834((uint64_t)v61);
      sub_54834((uint64_t)v63);
      char v34 = a4(&v51, v49);
      sub_7A018((uint64_t)v63);
      Swift::Int result = sub_7A018((uint64_t)v61);
      if (v5) {
        break;
      }
      if ((v34 & 1) == 0) {
        goto LABEL_4;
      }
      if (!v8)
      {
        __break(1u);
        return result;
      }
      uint64_t v35 = i - 152;
      long long v36 = *(_OWORD *)(i + 112);
      long long v57 = *(_OWORD *)(i + 96);
      long long v58 = v36;
      long long v59 = *(_OWORD *)(i + 128);
      char v60 = *(unsigned char *)(i + 144);
      long long v37 = *(_OWORD *)(i + 48);
      long long v53 = *(_OWORD *)(i + 32);
      long long v54 = v37;
      long long v38 = *(_OWORD *)(i + 80);
      long long v55 = *(_OWORD *)(i + 64);
      long long v56 = v38;
      long long v39 = *(_OWORD *)(i + 16);
      long long v51 = *(_OWORD *)i;
      long long v52 = v39;
      long long v40 = *(_OWORD *)(i - 40);
      *(_OWORD *)(i + 96) = *(_OWORD *)(i - 56);
      *(_OWORD *)(i + 112) = v40;
      *(_OWORD *)(i + 128) = *(_OWORD *)(i - 24);
      *(void *)(i + 144) = *(void *)(i - 8);
      long long v41 = *(_OWORD *)(i - 104);
      *(_OWORD *)(i + 32) = *(_OWORD *)(i - 120);
      *(_OWORD *)(i + 48) = v41;
      long long v42 = *(_OWORD *)(i - 72);
      *(_OWORD *)(i + 64) = *(_OWORD *)(i - 88);
      *(_OWORD *)(i + 80) = v42;
      long long v43 = *(_OWORD *)(i - 136);
      *(_OWORD *)uint64_t i = *(_OWORD *)(i - 152);
      *(_OWORD *)(i + 16) = v43;
      long long v44 = v58;
      *(_OWORD *)(v35 + 96) = v57;
      *(_OWORD *)(v35 + 112) = v44;
      *(_OWORD *)(v35 + 128) = v59;
      *(unsigned char *)(v35 + 144) = v60;
      long long v45 = v54;
      *(_OWORD *)(v35 + 32) = v53;
      *(_OWORD *)(v35 + 48) = v45;
      long long v46 = v56;
      *(_OWORD *)(v35 + 64) = v55;
      *(_OWORD *)(v35 + 80) = v46;
      long long v47 = v52;
      *(_OWORD *)uint64_t v35 = v51;
      *(_OWORD *)(v35 + 16) = v47;
      if (v7 == v10)
      {
LABEL_4:
        ++v7;
        v9 += 152;
        uint64_t v10 = v48;
        if (v7 == v65) {
          return result;
        }
        goto LABEL_5;
      }
      ++v10;
    }
  }
  return result;
}

uint64_t sub_6F848(double *__dst, double *__src, unint64_t a3, double *a4)
{
  long long v4 = a4;
  Swift::Int v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = (char *)__src - (char *)__dst;
  int64_t v9 = ((char *)__src - (char *)__dst) / 152;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 152;
  long long v25 = __dst;
  long long v24 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -151)
    {
      uint64_t v17 = 19 * v11;
      if (a4 != __src || &__src[v17] <= a4) {
        memmove(a4, __src, 152 * v11);
      }
      long long v18 = &v4[v17];
      long long v23 = (char *)&v4[v17];
      long long v25 = v6;
      if (v7 < v6 && v10 >= 152)
      {
        long long v19 = (double *)(a3 - 152);
        do
        {
          long long v20 = v19 + 19;
          if (*(v18 - 10) >= *(v6 - 10))
          {
            long long v23 = (char *)(v18 - 19);
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              memmove(v19, v18 - 19, 0x98uLL);
            }
            long long v21 = v6;
            v18 -= 19;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v21 = v6 - 19;
            if (v20 != v6 || v19 >= v6) {
              memmove(v19, v6 - 19, 0x98uLL);
            }
            long long v25 = v6 - 19;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 19;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_40:
      sub_705A4((void **)&v25, (const void **)&v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -151)
  {
    size_t v12 = 19 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12 * 8);
    }
    long long v13 = &v4[v12];
    long long v23 = (char *)v13;
    if ((unint64_t)v6 < a3 && v8 >= 152)
    {
      long long v14 = v4;
      while (1)
      {
        if (v6[9] >= v14[9])
        {
          long long v4 = v14 + 19;
          long long v16 = v14;
          long long v15 = v6;
          if (v7 == v14)
          {
            v14 += 19;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v14 += 19;
          }
        }
        else
        {
          long long v15 = v6 + 19;
          long long v16 = v6;
          if (v7 == v6 && v7 < v15) {
            goto LABEL_18;
          }
        }
        memmove(v7, v16, 0x98uLL);
LABEL_18:
        v7 += 19;
        if (v14 < v13)
        {
          Swift::Int v6 = v15;
          if ((unint64_t)v15 < a3) {
            continue;
          }
        }
        long long v24 = v4;
        long long v25 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_6FB00(char *__dst, char *__src, unint64_t a3, char *a4)
{
  long long v4 = a4;
  Swift::Int v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 568;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 568;
  long long v23 = __dst;
  long long v22 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -567)
    {
      if (a4 != __src || &__src[568 * v11] <= a4) {
        memmove(a4, __src, 568 * v11);
      }
      long long v16 = &v4[568 * v11];
      long long v21 = v16;
      long long v23 = v6;
      if (v7 < v6 && v10 >= 568)
      {
        uint64_t v17 = (char *)(a3 - 568);
        do
        {
          long long v18 = v17 + 568;
          if (*((void *)v6 - 1) >= *((void *)v16 - 1))
          {
            long long v21 = v16 - 568;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              memmove(v17, v16 - 568, 0x238uLL);
            }
            long long v19 = v6;
            v16 -= 568;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v19 = v6 - 568;
            if (v18 != v6 || v17 >= v6) {
              memmove(v17, v6 - 568, 0x238uLL);
            }
            long long v23 = v6 - 568;
            if (v19 <= v7) {
              break;
            }
          }
          v17 -= 568;
          Swift::Int v6 = v19;
        }
        while (v16 > v4);
      }
LABEL_40:
      sub_70674((void **)&v23, &v22, &v21);
      return 1;
    }
  }
  else if (v8 >= -567)
  {
    if (a4 != __dst || &__dst[568 * v9] <= a4) {
      memmove(a4, __dst, 568 * v9);
    }
    size_t v12 = &v4[568 * v9];
    long long v21 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 568)
    {
      long long v13 = v4;
      while (1)
      {
        if (*((void *)v13 + 70) >= *((void *)v6 + 70))
        {
          long long v4 = v13 + 568;
          long long v15 = v13;
          long long v14 = v6;
          if (v7 == v13)
          {
            v13 += 568;
            if (v7 < v4) {
              goto LABEL_18;
            }
          }
          else
          {
            v13 += 568;
          }
        }
        else
        {
          long long v14 = v6 + 568;
          long long v15 = v6;
          if (v7 == v6 && v7 < v14) {
            goto LABEL_18;
          }
        }
        memmove(v7, v15, 0x238uLL);
LABEL_18:
        v7 += 568;
        if (v13 < v12)
        {
          Swift::Int v6 = v14;
          if ((unint64_t)v14 < a3) {
            continue;
          }
        }
        long long v22 = v4;
        long long v23 = v7;
        goto LABEL_40;
      }
    }
    goto LABEL_40;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_6FDC0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  long long v4 = __dst;
  Swift::Int v6 = a2;
  uint64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = a2 - __src + 15;
  if (a2 - __src >= 0) {
    int64_t v9 = a2 - __src;
  }
  uint64_t v10 = v9 >> 4;
  uint64_t v11 = a3 - (void)a2;
  uint64_t v12 = a3 - (void)a2 + 15;
  if ((uint64_t)(a3 - (void)a2) >= 0) {
    uint64_t v12 = a3 - (void)a2;
  }
  uint64_t v13 = v12 >> 4;
  long long v25 = __src;
  long long v24 = __dst;
  if (v10 >= v12 >> 4)
  {
    if (v11 >= -15)
    {
      if (__dst != a2 || &a2[16 * v13] <= __dst) {
        memmove(__dst, a2, 16 * v13);
      }
      long long v18 = &v4[16 * v13];
      long long v23 = v18;
      long long v25 = v6;
      if (v7 < v6 && v11 >= 16)
      {
        long long v19 = (char *)(a3 - 16);
        do
        {
          long long v20 = v19 + 16;
          if (*((void *)v6 - 1) >= *((void *)v18 - 1))
          {
            long long v23 = v18 - 16;
            if (v20 < v18 || v19 >= v18 || v20 != v18) {
              *(_OWORD *)long long v19 = *((_OWORD *)v18 - 1);
            }
            long long v21 = v6;
            v18 -= 16;
            if (v6 <= v7) {
              break;
            }
          }
          else
          {
            long long v21 = v6 - 16;
            if (v20 != v6 || v19 >= v6) {
              *(_OWORD *)long long v19 = *(_OWORD *)v21;
            }
            long long v25 = v6 - 16;
            if (v21 <= v7) {
              break;
            }
          }
          v19 -= 16;
          Swift::Int v6 = v21;
        }
        while (v18 > v4);
      }
LABEL_44:
      sub_7014C((void **)&v25, &v24, &v23);
      return 1;
    }
  }
  else if (v8 >= -15)
  {
    if (__dst != __src || &__src[16 * v10] <= __dst) {
      memmove(__dst, __src, 16 * v10);
    }
    long long v14 = &v4[16 * v10];
    long long v23 = v14;
    if ((unint64_t)v6 < a3 && v8 >= 16)
    {
      long long v15 = v4;
      while (1)
      {
        if (*((void *)v15 + 1) >= *((void *)v6 + 1))
        {
          long long v4 = v15 + 16;
          uint64_t v17 = v15;
          long long v16 = v6;
          if (v7 == v15)
          {
            v15 += 16;
            if (v7 < v4) {
              goto LABEL_22;
            }
          }
          else
          {
            v15 += 16;
          }
        }
        else
        {
          long long v16 = v6 + 16;
          uint64_t v17 = v6;
          if (v7 == v6 && v7 < v16) {
            goto LABEL_22;
          }
        }
        *(_OWORD *)uint64_t v7 = *(_OWORD *)v17;
LABEL_22:
        v7 += 16;
        if (v15 < v14)
        {
          Swift::Int v6 = v16;
          if ((unint64_t)v16 < a3) {
            continue;
          }
        }
        long long v24 = v4;
        long long v25 = v7;
        goto LABEL_44;
      }
    }
    goto LABEL_44;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

char *sub_7004C(char *result, int64_t a2, char a3, char *a4)
{
  char v5 = (char)result;
  if (a3)
  {
    unint64_t v6 = *((void *)a4 + 3);
    int64_t v7 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) < a2)
    {
      if (v7 + 0x4000000000000000 < 0)
      {
        __break(1u);
        return result;
      }
      int64_t v7 = v6 & 0xFFFFFFFFFFFFFFFELL;
      if ((uint64_t)(v6 & 0xFFFFFFFFFFFFFFFELL) <= a2) {
        int64_t v7 = a2;
      }
    }
  }
  else
  {
    int64_t v7 = a2;
  }
  uint64_t v8 = *((void *)a4 + 2);
  if (v7 <= v8) {
    uint64_t v9 = *((void *)a4 + 2);
  }
  else {
    uint64_t v9 = v7;
  }
  if (v9)
  {
    sub_12124(&qword_26D950);
    uint64_t v10 = (char *)swift_allocObject();
    int64_t v11 = j__malloc_size(v10);
    uint64_t v12 = v11 - 32;
    if (v11 < 32) {
      uint64_t v12 = v11 - 17;
    }
    *((void *)v10 + 2) = v8;
    *((void *)v10 + 3) = 2 * (v12 >> 4);
  }
  else
  {
    uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  }
  uint64_t v13 = v10 + 32;
  long long v14 = a4 + 32;
  if (v5)
  {
    if (v10 != a4 || v13 >= &v14[16 * v8]) {
      memmove(v13, v14, 16 * v8);
    }
    *((void *)a4 + 2) = 0;
  }
  else
  {
    memcpy(v13, v14, 16 * v8);
  }
  swift_bridgeObjectRelease();
  return v10;
}

char *sub_7014C(void **a1, const void **a2, void *a3)
{
  Swift::Int v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 15;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -16)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 4;
    if (result != v3 || result >= &v3[16 * v7])
    {
      return (char *)memmove(result, v3, 16 * v7);
    }
  }
  return result;
}

uint64_t sub_70208(unint64_t *a1, unint64_t *a2, uint64_t *a3)
{
  unint64_t v3 = *a1;
  unint64_t v4 = *a2;
  uint64_t v5 = *a3;
  uint64_t result = sub_12124(&qword_26D530);
  uint64_t v7 = *(void *)(*(void *)(result - 8) + 72);
  if (!v7)
  {
    __break(1u);
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  uint64_t v8 = v5 - v4;
  if (v5 - v4 == 0x8000000000000000 && v7 == -1) {
    goto LABEL_18;
  }
  if (v8 / v7 < 0)
  {
LABEL_19:
    uint64_t result = sub_1FC2B0();
    __break(1u);
    return result;
  }
  if (v3 < v4 || v3 >= v4 + v8 / v7 * v7)
  {
    return swift_arrayInitWithTakeFrontToBack();
  }
  else if (v3 != v4)
  {
    return swift_arrayInitWithTakeBackToFront();
  }
  return result;
}

char *sub_7034C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -560)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 560 * (v4 / 560);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_7041C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -80)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 80;
    if (result != v3 || result >= &v3[80 * v6])
    {
      return (char *)memmove(result, v3, 80 * v6);
    }
  }
  return result;
}

char *sub_704E8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  uint64_t v5 = v4 + 7;
  if (v4 >= 0) {
    uint64_t v5 = *a3 - (void)v3;
  }
  if (v4 <= -8)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v7 = v5 >> 3;
    if (result != v3 || result >= &v3[8 * v7])
    {
      return (char *)memmove(result, v3, 8 * v7);
    }
  }
  return result;
}

char *sub_705A4(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -152)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 152 * (v4 / 152);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_70674(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -568)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 568;
    if (result != v3 || result >= &v3[568 * v6])
    {
      return (char *)memmove(result, v3, 568 * v6);
    }
  }
  return result;
}

char *sub_70748(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -72)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 72;
    if (result != v3 || result >= &v3[72 * v6])
    {
      return (char *)memmove(result, v3, 72 * v6);
    }
  }
  return result;
}

char *sub_7081C(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 40;
    if (result != v3 || result >= &v3[40 * v6])
    {
      return (char *)memmove(result, v3, 40 * v6);
    }
  }
  return result;
}

char *sub_708E8(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -40)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    size_t v6 = 40 * (v4 / 40);
    if (result != v3 || result >= &v3[v6])
    {
      return (char *)memmove(result, v3, v6);
    }
  }
  return result;
}

char *sub_709B0(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  uint64_t v4 = *a3 - (void)v3;
  if (v4 <= -24)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    uint64_t v6 = v4 / 24;
    if (result != v3 || result >= &v3[24 * v6])
    {
      return (char *)memmove(result, v3, 24 * v6);
    }
  }
  return result;
}

char *sub_70A80(void **a1, const void **a2, void *a3)
{
  unint64_t v3 = (char *)*a2;
  int64_t v4 = *a3 - (void)v3;
  if (v4 < 0)
  {
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    uint64_t result = (char *)*a1;
    if (result != v3 || result >= &v3[v4])
    {
      return (char *)memmove(result, v3, v4);
    }
  }
  return result;
}

char *sub_70B24(uint64_t a1)
{
  return sub_7004C(0, *(void *)(a1 + 16), 0, (char *)a1);
}

uint64_t sub_70B38(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = sub_1FB220();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  int64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void *)*v3;
  unint64_t v14 = sub_4C3E4(a2);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 < v17 || (a3 & 1) == 0)
  {
    if (v19 >= v17 && (a3 & 1) == 0)
    {
      sub_11FDA8();
      goto LABEL_7;
    }
    sub_115FB8(v17, a3 & 1);
    unint64_t v28 = sub_4C3E4(a2);
    if ((v18 & 1) == (v29 & 1))
    {
      unint64_t v14 = v28;
      long long v20 = *v4;
      if (v18) {
        goto LABEL_8;
      }
LABEL_13:
      (*(void (**)(char *, uint64_t, uint64_t))(v9 + 16))(v11, a2, v8);
      return sub_11788(v14, (uint64_t)v11, a1, v20);
    }
LABEL_15:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
LABEL_7:
  long long v20 = *v4;
  if ((v18 & 1) == 0) {
    goto LABEL_13;
  }
LABEL_8:
  uint64_t v21 = v20[7];
  uint64_t v22 = sub_1FB1F0();
  uint64_t v23 = *(void *)(v22 - 8);
  long long v24 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v23 + 40);
  uint64_t v25 = v22;
  uint64_t v26 = v21 + *(void *)(v23 + 72) * v14;

  return v24(v26, a1, v25);
}

void *sub_70D3C(void *a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_56168(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_120150();
      goto LABEL_7;
    }
    sub_1164B4(v13, a3 & 1);
    uint64_t v19 = sub_56168(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (void *)sub_1FC770();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = (void *)(v16[7] + 384 * v10);
    return memcpy(v17, a1, 0x179uLL);
  }
LABEL_13:

  return sub_1187C(v10, a2, a1, v16);
}

unint64_t sub_70E74(uint64_t a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_56168(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_12074C();
    goto LABEL_7;
  }
  sub_117318(v13, a3 & 1);
  uint64_t v19 = sub_56168(a2);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_118F0(v10, a2, a1, v16);
}

unint64_t sub_70F9C(uint64_t a1, char a2, char a3)
{
  int64_t v4 = (void **)v3;
  char v7 = a2 & 1;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_4C69C(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_120734();
    goto LABEL_7;
  }
  sub_11730C(v13, a3 & 1);
  unint64_t v19 = sub_4C69C(v7);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_118EC(v10, v7, a1, v16);
}

unint64_t sub_710C4(_OWORD *a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_56168(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_120B90();
      goto LABEL_7;
    }
    sub_117EAC(v13, a3 & 1);
    uint64_t v19 = sub_56168(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    unint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 80 * v10;
    return sub_7D46C((uint64_t)a1, v17);
  }
LABEL_13:

  return sub_118F4(v10, a2, a1, v16);
}

uint64_t sub_711F8(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_71278(a1, a2, a3, a4, (void (*)(void))sub_1221E0, (void (*)(void))sub_11AB28, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1199C);
}

uint64_t sub_71238(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  return sub_71278(a1, a2, a3, a4, (void (*)(void))sub_1221EC, (void (*)(void))sub_11AB34, (uint64_t (*)(unint64_t, char *, uint64_t, uint64_t, uint64_t))sub_1199C);
}

uint64_t sub_71278(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void (*a5)(void), void (*a6)(void), uint64_t (*a7)(unint64_t, char *, uint64_t, uint64_t, uint64_t))
{
  uint64_t v30 = a6;
  long long v31 = a7;
  char v9 = v7;
  uint64_t v32 = a1;
  uint64_t v33 = a2;
  uint64_t v12 = sub_1FB110();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)&v30 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *v7;
  unint64_t v18 = sub_4C9C4(a3);
  uint64_t v19 = *(void *)(v16 + 16);
  BOOL v20 = (v17 & 1) == 0;
  uint64_t v21 = v19 + v20;
  if (__OFADD__(v19, v20))
  {
    __break(1u);
    goto LABEL_14;
  }
  char v22 = v17;
  uint64_t v23 = *(void *)(v16 + 24);
  if (v23 >= v21 && (a4 & 1) != 0)
  {
LABEL_7:
    uint64_t v24 = *v9;
    if (v22)
    {
LABEL_8:
      uint64_t v25 = (void *)(*(void *)(v24 + 56) + 16 * v18);
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      uint64_t v27 = v33;
      void *v25 = v32;
      v25[1] = v27;
      return result;
    }
    goto LABEL_11;
  }
  if (v23 >= v21 && (a4 & 1) == 0)
  {
    a5();
    goto LABEL_7;
  }
  v30();
  unint64_t v28 = sub_4C9C4(a3);
  if ((v22 & 1) != (v29 & 1))
  {
LABEL_14:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v18 = v28;
  uint64_t v24 = *v9;
  if (v22) {
    goto LABEL_8;
  }
LABEL_11:
  (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v15, a3, v12);
  return v31(v18, v15, v32, v33, v24);
}

unint64_t sub_71450(uint64_t a1, unint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_4CE18(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v21 = a1;
      *(_DWORD *)(v21 + 8) = a2;
      *(unsigned char *)(v21 + 12) = BYTE4(a2) & 1;
      *(void *)(v21 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_123288();
    goto LABEL_7;
  }
  sub_11CB4C(v17, a5 & 1);
  unint64_t v23 = sub_4CE18(a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    unint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  BOOL v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_11AE0(v14, a4, a1, a2 | ((HIDWORD(a2) & 1) << 32), a3, v20);
}

unint64_t sub_715BC(uint64_t a1, char a2, uint64_t a3, char a4, char a5)
{
  uint64_t v6 = (void **)v5;
  uint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_4CEFC(a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v6;
    if (v18)
    {
LABEL_8:
      uint64_t v21 = v20[7] + 24 * v14;
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)uint64_t v21 = a1;
      *(unsigned char *)(v21 + 8) = a2 & 1;
      *(void *)(v21 + 16) = a3;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1237B8();
    goto LABEL_7;
  }
  sub_11D3CC(v17, a5 & 1);
  unint64_t v23 = sub_4CEFC(a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    unint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  BOOL v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_11B3C(v14, a4, a1, a2 & 1, a3, v20);
}

uint64_t sub_7171C(uint64_t a1, uint64_t a2, uint64_t a3, char a4)
{
  uint64_t v5 = (void **)v4;
  unint64_t v10 = (void *)*v4;
  unint64_t v12 = sub_4C328(a2, a3);
  uint64_t v13 = v10[2];
  BOOL v14 = (v11 & 1) == 0;
  uint64_t v15 = v13 + v14;
  if (__OFADD__(v13, v14))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v16 = v11;
  uint64_t v17 = v10[3];
  if (v17 >= v15 && (a4 & 1) != 0)
  {
LABEL_7:
    char v18 = *v5;
    if (v16)
    {
LABEL_8:
      uint64_t v19 = v18[7];
      uint64_t result = swift_bridgeObjectRelease();
      *(void *)(v19 + 8 * v12) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v17 >= v15 && (a4 & 1) == 0)
  {
    sub_124038();
    goto LABEL_7;
  }
  sub_11F068(v15, a4 & 1);
  unint64_t v21 = sub_4C328(a2, a3);
  if ((v16 & 1) != (v22 & 1))
  {
LABEL_15:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v12 = v21;
  char v18 = *v5;
  if (v16) {
    goto LABEL_8;
  }
LABEL_11:
  sub_11B94(v12, a2, a3, a1, v18);

  return swift_bridgeObjectRetain();
}

uint64_t sub_7185C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, char a5)
{
  uint64_t v6 = (void **)v5;
  unint64_t v12 = (void *)*v5;
  unint64_t v14 = sub_4C328(a3, a4);
  uint64_t v15 = v12[2];
  BOOL v16 = (v13 & 1) == 0;
  uint64_t v17 = v15 + v16;
  if (__OFADD__(v15, v16))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v18 = v13;
  uint64_t v19 = v12[3];
  if (v19 >= v17 && (a5 & 1) != 0)
  {
LABEL_7:
    BOOL v20 = *v6;
    if (v18)
    {
LABEL_8:
      unint64_t v21 = (uint64_t *)(v20[7] + 16 * v14);
      uint64_t result = swift_bridgeObjectRelease();
      *unint64_t v21 = a1;
      v21[1] = a2;
      return result;
    }
    goto LABEL_11;
  }
  if (v19 >= v17 && (a5 & 1) == 0)
  {
    sub_1241F0();
    goto LABEL_7;
  }
  sub_11F380(v17, a5 & 1);
  unint64_t v23 = sub_4C328(a3, a4);
  if ((v18 & 1) != (v24 & 1))
  {
LABEL_15:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v14 = v23;
  BOOL v20 = *v6;
  if (v18) {
    goto LABEL_8;
  }
LABEL_11:
  sub_11BDC(v14, a3, a4, a1, a2, v20);

  return swift_bridgeObjectRetain();
}

void *sub_719B0(void *a1, uint64_t a2, char a3)
{
  int64_t v4 = (void **)v3;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_56168(a2);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_17;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 < v13 || (a3 & 1) == 0)
  {
    if (v15 >= v13 && (a3 & 1) == 0)
    {
      sub_122EC4();
      goto LABEL_7;
    }
    sub_116AFC(v13, a3 & 1);
    uint64_t v19 = sub_56168(a2);
    if ((v14 & 1) == (v20 & 1))
    {
      unint64_t v10 = v19;
      BOOL v16 = *v4;
      if (v14) {
        goto LABEL_8;
      }
      goto LABEL_13;
    }
LABEL_17:
    uint64_t result = (void *)sub_1FC770();
    __break(1u);
    return result;
  }
LABEL_7:
  BOOL v16 = *v4;
  if (v14)
  {
LABEL_8:
    uint64_t v17 = v16[7] + 560 * v10;
    return (void *)sub_7D598((uint64_t)a1, v17);
  }
LABEL_13:

  return sub_11C2C(v10, a2, a1, v16);
}

unint64_t sub_71AE4(uint64_t a1, char a2, char a3)
{
  int64_t v4 = (void **)v3;
  char v7 = a2 & 1;
  uint64_t v8 = (void *)*v3;
  unint64_t v10 = sub_4C744(a2 & 1);
  uint64_t v11 = v8[2];
  BOOL v12 = (v9 & 1) == 0;
  uint64_t v13 = v11 + v12;
  if (__OFADD__(v11, v12))
  {
    __break(1u);
    goto LABEL_15;
  }
  char v14 = v9;
  uint64_t v15 = v8[3];
  if (v15 >= v13 && (a3 & 1) != 0)
  {
LABEL_7:
    BOOL v16 = *v4;
    if (v14)
    {
LABEL_8:
      uint64_t v17 = v16[7];
      unint64_t result = swift_bridgeObjectRelease();
      *(void *)(v17 + 8 * v10) = a1;
      return result;
    }
    goto LABEL_11;
  }
  if (v15 >= v13 && (a3 & 1) == 0)
  {
    sub_123978();
    goto LABEL_7;
  }
  sub_11D7FC(v13, a3 & 1);
  unint64_t v19 = sub_4C744(v7);
  if ((v14 & 1) != (v20 & 1))
  {
LABEL_15:
    unint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  unint64_t v10 = v19;
  BOOL v16 = *v4;
  if (v14) {
    goto LABEL_8;
  }
LABEL_11:

  return sub_118EC(v10, v7, a1, v16);
}

uint64_t sub_71C0C(uint64_t isStackAllocationSafe, uint64_t (*a2)(char *, unint64_t, uint64_t))
{
  uint64_t v4 = v2;
  uint64_t v5 = isStackAllocationSafe;
  char v6 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v7 = (unint64_t)((1 << v6) + 63) >> 6;
  size_t v8 = 8 * v7;
  if ((v6 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v8);
    uint64_t v9 = a2((char *)&v12 - ((v8 + 15) & 0x3FFFFFFFFFFFFFF0), v7, v5);
    if (v2) {
      swift_willThrow();
    }
    else {
      return v9;
    }
  }
  else
  {
    unint64_t v10 = (void *)swift_slowAlloc();
    bzero(v10, v8);
    uint64_t v4 = a2((char *)v10, v7, v5);
    swift_slowDealloc();
  }
  return v4;
}

uint64_t sub_71D78(uint64_t isStackAllocationSafe, uint64_t a2, uint64_t (*a3)(char *, unint64_t, uint64_t, uint64_t))
{
  uint64_t v5 = v3;
  uint64_t v7 = isStackAllocationSafe;
  char v8 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v9 = (unint64_t)((1 << v8) + 63) >> 6;
  size_t v10 = 8 * v9;
  if ((v8 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v14 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v10);
    uint64_t v11 = a3((char *)&v14 - ((v10 + 15) & 0x3FFFFFFFFFFFFFF0), v9, v7, a2);
    if (v3) {
      swift_willThrow();
    }
    else {
      uint64_t v5 = v11;
    }
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v12 = (void *)swift_slowAlloc();
    bzero(v12, v10);
    uint64_t v5 = a3((char *)v12, v9, v7, a2);
    swift_slowDealloc();
    swift_bridgeObjectRelease();
  }
  return v5;
}

uint64_t sub_71F08(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v19 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_22:
    if (*(unsigned char *)(*(void *)(a3 + 56) + 152 * v13 + 8) == 1)
    {
      unint64_t result = swift_bridgeObjectRelease();
LABEL_5:
      *(unint64_t *)((char *)v19 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_28;
      }
    }
    else
    {
      char v17 = sub_1FC5F0();
      unint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_5;
      }
    }
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v14);
  ++v5;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v5 = v14 + 1;
  if (v14 + 1 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v5);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v5 = v14 + 2;
  if (v14 + 2 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v5);
  if (v15)
  {
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_72558(v19, a2, v4, a3);
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_720F0(uint64_t result, uint64_t a2, uint64_t a3)
{
  unint64_t v19 = (unint64_t *)result;
  uint64_t v4 = 0;
  int64_t v5 = 0;
  uint64_t v6 = a3 + 64;
  uint64_t v7 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a3 + 64);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  while (v9)
  {
    unint64_t v12 = __clz(__rbit64(v9));
    v9 &= v9 - 1;
    unint64_t v13 = v12 | (v5 << 6);
LABEL_22:
    if (*(unsigned char *)(*(void *)(a3 + 56) + 152 * v13 + 8))
    {
      char v17 = sub_1FC5F0();
      unint64_t result = swift_bridgeObjectRelease();
      if (v17) {
        goto LABEL_5;
      }
    }
    else
    {
      unint64_t result = swift_bridgeObjectRelease();
LABEL_5:
      *(unint64_t *)((char *)v19 + ((v13 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v13;
      if (__OFADD__(v4++, 1)) {
        goto LABEL_28;
      }
    }
  }
  int64_t v14 = v5 + 1;
  if (__OFADD__(v5, 1))
  {
    __break(1u);
    goto LABEL_27;
  }
  if (v14 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v14);
  ++v5;
  if (v15) {
    goto LABEL_21;
  }
  int64_t v5 = v14 + 1;
  if (v14 + 1 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v5);
  if (v15) {
    goto LABEL_21;
  }
  int64_t v5 = v14 + 2;
  if (v14 + 2 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v5);
  if (v15)
  {
LABEL_21:
    unint64_t v9 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v5 << 6);
    goto LABEL_22;
  }
  int64_t v16 = v14 + 3;
  if (v16 >= v10) {
    return sub_72558(v19, a2, v4, a3);
  }
  unint64_t v15 = *(void *)(v6 + 8 * v16);
  if (v15)
  {
    int64_t v5 = v16;
    goto LABEL_21;
  }
  while (1)
  {
    int64_t v5 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v5 >= v10) {
      return sub_72558(v19, a2, v4, a3);
    }
    unint64_t v15 = *(void *)(v6 + 8 * v5);
    ++v16;
    if (v15) {
      goto LABEL_21;
    }
  }
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_722D4(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_12124(&qword_26DA08);
  uint64_t result = sub_1FC2A0();
  uint64_t v9 = result;
  unint64_t v28 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v28[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v28[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v28[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v28[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v28[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    memcpy(__dst, (const void *)(*(void *)(v4 + 56) + 384 * v14), sizeof(__dst));
    uint64_t result = sub_1FC7D0();
    uint64_t v19 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v20 = result & ~v19;
    unint64_t v21 = v20 >> 6;
    if (((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6))) != 0)
    {
      unint64_t v22 = __clz(__rbit64((-1 << v20) & ~*(void *)(v12 + 8 * (v20 >> 6)))) | v20 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v23 = 0;
      unint64_t v24 = (unint64_t)(63 - v19) >> 6;
      do
      {
        if (++v21 == v24 && (v23 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v25 = v21 == v24;
        if (v21 == v24) {
          unint64_t v21 = 0;
        }
        v23 |= v25;
        uint64_t v26 = *(void *)(v12 + 8 * v21);
      }
      while (v26 == -1);
      unint64_t v22 = __clz(__rbit64(~v26)) + (v21 << 6);
    }
    *(void *)(v12 + ((v22 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v22;
    *(void *)(*(void *)(v9 + 48) + 8 * v22) = v18;
    uint64_t result = (uint64_t)memcpy((void *)(*(void *)(v9 + 56) + 384 * v22), __dst, 0x179uLL);
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_72558(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_12124(&qword_26D970);
  uint64_t result = sub_1FC2A0();
  uint64_t v9 = result;
  long long v44 = a1;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= a2) {
        return v9;
      }
      unint64_t v16 = v44[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= a2) {
          return v9;
        }
        unint64_t v16 = v44[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= a2) {
            return v9;
          }
          unint64_t v16 = v44[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= a2) {
              return v9;
            }
            unint64_t v16 = v44[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= a2) {
                  return v9;
                }
                unint64_t v16 = v44[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v19 = *(void *)(v4 + 56) + 152 * v14;
    long long v20 = *(_OWORD *)(v19 + 80);
    long long v22 = *(_OWORD *)(v19 + 32);
    long long v21 = *(_OWORD *)(v19 + 48);
    long long v49 = *(_OWORD *)(v19 + 64);
    long long v50 = v20;
    long long v47 = v22;
    long long v48 = v21;
    long long v24 = *(_OWORD *)(v19 + 112);
    long long v23 = *(_OWORD *)(v19 + 128);
    long long v25 = *(_OWORD *)(v19 + 96);
    char v54 = *(unsigned char *)(v19 + 144);
    long long v52 = v24;
    long long v53 = v23;
    long long v51 = v25;
    long long v26 = *(_OWORD *)(v19 + 16);
    long long v45 = *(_OWORD *)v19;
    long long v46 = v26;
    uint64_t result = sub_1FC7D0();
    uint64_t v27 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v28 = result & ~v27;
    unint64_t v29 = v28 >> 6;
    if (((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6))) != 0)
    {
      unint64_t v30 = __clz(__rbit64((-1 << v28) & ~*(void *)(v12 + 8 * (v28 >> 6)))) | v28 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v31 = 0;
      unint64_t v32 = (unint64_t)(63 - v27) >> 6;
      do
      {
        if (++v29 == v32 && (v31 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v33 = v29 == v32;
        if (v29 == v32) {
          unint64_t v29 = 0;
        }
        v31 |= v33;
        uint64_t v34 = *(void *)(v12 + 8 * v29);
      }
      while (v34 == -1);
      unint64_t v30 = __clz(__rbit64(~v34)) + (v29 << 6);
    }
    *(void *)(v12 + ((v30 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v30;
    *(void *)(*(void *)(v9 + 48) + 8 * v30) = v18;
    uint64_t v35 = *(void *)(v9 + 56) + 152 * v30;
    long long v36 = v46;
    *(_OWORD *)uint64_t v35 = v45;
    *(_OWORD *)(v35 + 16) = v36;
    long long v37 = v47;
    long long v38 = v48;
    long long v39 = v50;
    *(_OWORD *)(v35 + 64) = v49;
    *(_OWORD *)(v35 + 80) = v39;
    *(_OWORD *)(v35 + 32) = v37;
    *(_OWORD *)(v35 + 48) = v38;
    long long v40 = v51;
    long long v41 = v52;
    long long v42 = v53;
    *(unsigned char *)(v35 + 144) = v54;
    *(_OWORD *)(v35 + 112) = v41;
    *(_OWORD *)(v35 + 128) = v42;
    *(_OWORD *)(v35 + 96) = v40;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = sub_54834((uint64_t)&v45);
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_7282C(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v27 = a1;
  uint64_t v7 = sub_12124(&qword_26D980);
  uint64_t v30 = *(void *)(v7 - 8);
  __chkstk_darwin(v7 - 8);
  unint64_t v29 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!a3) {
    return _swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return a4;
  }
  sub_12124(&qword_26D988);
  uint64_t result = (void *)sub_1FC2A0();
  unint64_t v10 = result;
  uint64_t v26 = a2;
  if (a2 < 1) {
    unint64_t v11 = 0;
  }
  else {
    unint64_t v11 = *v27;
  }
  uint64_t v12 = 0;
  unint64_t v28 = result + 8;
  uint64_t v13 = (uint64_t)v29;
  unint64_t v14 = result + 8;
  while (1)
  {
    if (v11)
    {
      unint64_t v15 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      uint64_t v31 = v12;
      unint64_t v16 = v15 | (v12 << 6);
    }
    else
    {
      uint64_t v17 = v12 + 1;
      if (__OFADD__(v12, 1)) {
        goto LABEL_30;
      }
      if (v17 >= v26) {
        return v10;
      }
      unint64_t v18 = v27[v17];
      uint64_t v19 = v12 + 1;
      if (!v18)
      {
        uint64_t v19 = v12 + 2;
        if (v12 + 2 >= v26) {
          return v10;
        }
        unint64_t v18 = v27[v19];
        if (!v18)
        {
          uint64_t v19 = v12 + 3;
          if (v12 + 3 >= v26) {
            return v10;
          }
          unint64_t v18 = v27[v19];
          if (!v18)
          {
            uint64_t v20 = v12 + 4;
            if (v12 + 4 >= v26) {
              return v10;
            }
            unint64_t v18 = v27[v20];
            if (!v18)
            {
              while (1)
              {
                uint64_t v19 = v20 + 1;
                if (__OFADD__(v20, 1)) {
                  goto LABEL_31;
                }
                if (v19 >= v26) {
                  return v10;
                }
                unint64_t v18 = v27[v19];
                ++v20;
                if (v18) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v19 = v12 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v11 = (v18 - 1) & v18;
      uint64_t v31 = v19;
      unint64_t v16 = __clz(__rbit64(v18)) + (v19 << 6);
    }
    memcpy(v34, (const void *)(a4[6] + 560 * v16), 0x229uLL);
    long long v21 = a4;
    uint64_t v22 = a4[7];
    uint64_t v23 = *(void *)(v30 + 72);
    sub_5606C(v22 + v23 * v16, v13, &qword_26D980);
    memcpy(v33, v34, sizeof(v33));
    sub_1FC7E0();
    sub_12384(v34);
    SeedBook.hash(into:)((uint64_t)&v32);
    sub_1FC830();
    unint64_t v24 = sub_1FBF80();
    *(void *)((char *)v14 + ((v24 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v24;
    memcpy((void *)(v10[6] + 560 * v24), v34, 0x229uLL);
    uint64_t result = (void *)sub_55844(v13, v10[7] + v24 * v23, &qword_26D980);
    ++v10[2];
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v21;
    uint64_t v12 = v31;
    if (!a3) {
      return v10;
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_72B54(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v47 = sub_12124(&qword_26D938);
  uint64_t v45 = *(void *)(v47 - 8);
  uint64_t v8 = __chkstk_darwin(v47);
  long long v48 = (char *)&v39 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v44 = (char *)&v39 - v10;
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_12124(&qword_26D9A0);
  uint64_t result = sub_1FC2A0();
  uint64_t v12 = result;
  long long v40 = a1;
  uint64_t v41 = a2;
  if (a2 < 1) {
    unint64_t v13 = 0;
  }
  else {
    unint64_t v13 = *a1;
  }
  uint64_t v14 = 0;
  unint64_t v15 = v44;
  uint64_t v42 = v45 + 32;
  uint64_t v43 = v45 + 16;
  uint64_t v16 = result + 64;
  while (1)
  {
    if (v13)
    {
      unint64_t v17 = __clz(__rbit64(v13));
      v13 &= v13 - 1;
      uint64_t v46 = v14;
      unint64_t v18 = v17 | (v14 << 6);
    }
    else
    {
      uint64_t v19 = v14 + 1;
      if (__OFADD__(v14, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v41) {
        return v12;
      }
      unint64_t v20 = v40[v19];
      uint64_t v21 = v14 + 1;
      if (!v20)
      {
        uint64_t v21 = v14 + 2;
        if (v14 + 2 >= v41) {
          return v12;
        }
        unint64_t v20 = v40[v21];
        if (!v20)
        {
          uint64_t v21 = v14 + 3;
          if (v14 + 3 >= v41) {
            return v12;
          }
          unint64_t v20 = v40[v21];
          if (!v20)
          {
            uint64_t v22 = v14 + 4;
            if (v14 + 4 >= v41) {
              return v12;
            }
            unint64_t v20 = v40[v22];
            if (!v20)
            {
              while (1)
              {
                uint64_t v21 = v22 + 1;
                if (__OFADD__(v22, 1)) {
                  goto LABEL_41;
                }
                if (v21 >= v41) {
                  return v12;
                }
                unint64_t v20 = v40[v21];
                ++v22;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v21 = v14 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v13 = (v20 - 1) & v20;
      uint64_t v46 = v21;
      unint64_t v18 = __clz(__rbit64(v20)) + (v21 << 6);
    }
    uint64_t v23 = a4[7];
    unint64_t v24 = a4;
    uint64_t v25 = *(void *)(a4[6] + 8 * v18);
    uint64_t v26 = v45;
    uint64_t v27 = *(void *)(v45 + 72);
    uint64_t v28 = v47;
    (*(void (**)(char *, unint64_t, uint64_t))(v45 + 16))(v15, v23 + v27 * v18, v47);
    unint64_t v29 = *(void (**)(char *, char *, uint64_t))(v26 + 32);
    v29(v48, v15, v28);
    uint64_t result = sub_1FC7D0();
    uint64_t v30 = -1 << *(unsigned char *)(v12 + 32);
    unint64_t v31 = result & ~v30;
    unint64_t v32 = v31 >> 6;
    if (((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6))) != 0)
    {
      unint64_t v33 = __clz(__rbit64((-1 << v31) & ~*(void *)(v16 + 8 * (v31 >> 6)))) | v31 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v34 = 0;
      unint64_t v35 = (unint64_t)(63 - v30) >> 6;
      do
      {
        if (++v32 == v35 && (v34 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v36 = v32 == v35;
        if (v32 == v35) {
          unint64_t v32 = 0;
        }
        v34 |= v36;
        uint64_t v37 = *(void *)(v16 + 8 * v32);
      }
      while (v37 == -1);
      unint64_t v33 = __clz(__rbit64(~v37)) + (v32 << 6);
    }
    *(void *)(v16 + ((v33 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v33;
    *(void *)(*(void *)(v12 + 48) + 8 * v33) = v25;
    uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v29)(*(void *)(v12 + 56) + v33 * v27, v48, v47);
    ++*(void *)(v12 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v24;
    uint64_t v14 = v46;
    if (!a3) {
      return v12;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_72EE0(unint64_t *a1, uint64_t a2, uint64_t a3, void *a4)
{
  BOOL v36 = a1;
  uint64_t v7 = type metadata accessor for AttributeAffinityResult();
  uint64_t v37 = *(void *)(v7 - 8);
  uint64_t v8 = __chkstk_darwin(v7 - 8);
  uint64_t v38 = (uint64_t)&v35 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  unint64_t v11 = (char *)&v35 - v10;
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  if (a4[2] == a3)
  {
    swift_retain();
    return (uint64_t)a4;
  }
  sub_12124(&qword_26D9F8);
  uint64_t result = sub_1FC2A0();
  uint64_t v13 = result;
  uint64_t v35 = a2;
  if (a2 < 1) {
    unint64_t v14 = 0;
  }
  else {
    unint64_t v14 = *v36;
  }
  uint64_t v15 = 0;
  uint64_t v16 = result + 64;
  while (1)
  {
    if (v14)
    {
      unint64_t v17 = __clz(__rbit64(v14));
      v14 &= v14 - 1;
      unint64_t v18 = v17 | (v15 << 6);
    }
    else
    {
      uint64_t v19 = v15 + 1;
      if (__OFADD__(v15, 1)) {
        goto LABEL_40;
      }
      if (v19 >= v35) {
        return v13;
      }
      unint64_t v20 = v36[v19];
      ++v15;
      if (!v20)
      {
        uint64_t v15 = v19 + 1;
        if (v19 + 1 >= v35) {
          return v13;
        }
        unint64_t v20 = v36[v15];
        if (!v20)
        {
          uint64_t v15 = v19 + 2;
          if (v19 + 2 >= v35) {
            return v13;
          }
          unint64_t v20 = v36[v15];
          if (!v20)
          {
            uint64_t v21 = v19 + 3;
            if (v21 >= v35) {
              return v13;
            }
            unint64_t v20 = v36[v21];
            if (!v20)
            {
              while (1)
              {
                uint64_t v15 = v21 + 1;
                if (__OFADD__(v21, 1)) {
                  goto LABEL_41;
                }
                if (v15 >= v35) {
                  return v13;
                }
                unint64_t v20 = v36[v15];
                ++v21;
                if (v20) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v15 = v21;
          }
        }
      }
LABEL_24:
      unint64_t v14 = (v20 - 1) & v20;
      unint64_t v18 = __clz(__rbit64(v20)) + (v15 << 6);
    }
    uint64_t v22 = a4[7];
    uint64_t v23 = a4;
    uint64_t v24 = *(void *)(a4[6] + 8 * v18);
    uint64_t v25 = *(void *)(v37 + 72);
    sub_7D4C8(v22 + v25 * v18, (uint64_t)v11, (uint64_t (*)(void))type metadata accessor for AttributeAffinityResult);
    sub_7D530((uint64_t)v11, v38, (uint64_t (*)(void))type metadata accessor for AttributeAffinityResult);
    uint64_t result = sub_1FC7D0();
    uint64_t v26 = -1 << *(unsigned char *)(v13 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v16 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v16 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v16 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(void *)(*(void *)(v13 + 48) + 8 * v29) = v24;
    uint64_t result = sub_7D530(v38, *(void *)(v13 + 56) + v29 * v25, (uint64_t (*)(void))type metadata accessor for AttributeAffinityResult);
    ++*(void *)(v13 + 16);
    if (__OFSUB__(a3--, 1)) {
      break;
    }
    a4 = v23;
    if (!a3) {
      return v13;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_73250(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_12124(&qword_26DA18);
  uint64_t result = sub_1FC2A0();
  uint64_t v9 = result;
  BOOL v36 = a1;
  uint64_t v37 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  uint64_t v38 = v4;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      uint64_t v39 = v11;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v37) {
        return v9;
      }
      unint64_t v16 = v36[v15];
      uint64_t v17 = v11 + 1;
      if (!v16)
      {
        uint64_t v17 = v11 + 2;
        if (v11 + 2 >= v37) {
          return v9;
        }
        unint64_t v16 = v36[v17];
        if (!v16)
        {
          uint64_t v17 = v11 + 3;
          if (v11 + 3 >= v37) {
            return v9;
          }
          unint64_t v16 = v36[v17];
          if (!v16)
          {
            uint64_t v18 = v11 + 4;
            if (v11 + 4 >= v37) {
              return v9;
            }
            unint64_t v16 = v36[v18];
            if (!v16)
            {
              while (1)
              {
                uint64_t v17 = v18 + 1;
                if (__OFADD__(v18, 1)) {
                  goto LABEL_41;
                }
                if (v17 >= v37) {
                  return v9;
                }
                unint64_t v16 = v36[v17];
                ++v18;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v17 = v11 + 4;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      uint64_t v39 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v20 = *(void *)(v4 + 56) + 80 * v14;
    char v21 = *(unsigned char *)v20;
    uint64_t v23 = *(void *)(v20 + 8);
    uint64_t v22 = *(void *)(v20 + 16);
    uint64_t v24 = *(void *)(v20 + 24);
    char v25 = *(unsigned char *)(v20 + 32);
    uint64_t v43 = *(void *)(v20 + 48);
    uint64_t v44 = *(void *)(v20 + 40);
    uint64_t v41 = *(void *)(v20 + 64);
    uint64_t v42 = *(void *)(v20 + 56);
    char v40 = *(unsigned char *)(v20 + 72);
    uint64_t result = sub_1FC7D0();
    uint64_t v26 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v27 = result & ~v26;
    unint64_t v28 = v27 >> 6;
    if (((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6))) != 0)
    {
      unint64_t v29 = __clz(__rbit64((-1 << v27) & ~*(void *)(v12 + 8 * (v27 >> 6)))) | v27 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v30 = 0;
      unint64_t v31 = (unint64_t)(63 - v26) >> 6;
      do
      {
        if (++v28 == v31 && (v30 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v32 = v28 == v31;
        if (v28 == v31) {
          unint64_t v28 = 0;
        }
        v30 |= v32;
        uint64_t v33 = *(void *)(v12 + 8 * v28);
      }
      while (v33 == -1);
      unint64_t v29 = __clz(__rbit64(~v33)) + (v28 << 6);
    }
    *(void *)(v12 + ((v29 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v29;
    *(void *)(*(void *)(v9 + 48) + 8 * v29) = v19;
    uint64_t v34 = *(void *)(v9 + 56) + 80 * v29;
    *(unsigned char *)uint64_t v34 = v21;
    *(void *)(v34 + 8) = v23;
    *(void *)(v34 + 16) = v22;
    *(void *)(v34 + 24) = v24;
    *(unsigned char *)(v34 + 32) = v25;
    *(void *)(v34 + 40) = v44;
    *(void *)(v34 + 48) = v43;
    *(void *)(v34 + 56) = v42;
    *(void *)(v34 + 64) = v41;
    *(unsigned char *)(v34 + 72) = v40;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t result = swift_bridgeObjectRetain();
    uint64_t v4 = v38;
    uint64_t v11 = v39;
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_73544(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) == a3)
  {
    swift_retain();
    return v4;
  }
  sub_12124(&qword_26DA10);
  uint64_t result = sub_1FC2A0();
  uint64_t v9 = result;
  BOOL v32 = a1;
  uint64_t v33 = a2;
  if (a2 < 1) {
    unint64_t v10 = 0;
  }
  else {
    unint64_t v10 = *a1;
  }
  uint64_t v11 = 0;
  uint64_t v12 = result + 64;
  while (1)
  {
    if (v10)
    {
      unint64_t v13 = __clz(__rbit64(v10));
      v10 &= v10 - 1;
      unint64_t v14 = v13 | (v11 << 6);
    }
    else
    {
      uint64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_40;
      }
      if (v15 >= v33) {
        return v9;
      }
      unint64_t v16 = v32[v15];
      ++v11;
      if (!v16)
      {
        uint64_t v11 = v15 + 1;
        if (v15 + 1 >= v33) {
          return v9;
        }
        unint64_t v16 = v32[v11];
        if (!v16)
        {
          uint64_t v11 = v15 + 2;
          if (v15 + 2 >= v33) {
            return v9;
          }
          unint64_t v16 = v32[v11];
          if (!v16)
          {
            uint64_t v17 = v15 + 3;
            if (v17 >= v33) {
              return v9;
            }
            unint64_t v16 = v32[v17];
            if (!v16)
            {
              while (1)
              {
                uint64_t v11 = v17 + 1;
                if (__OFADD__(v17, 1)) {
                  goto LABEL_41;
                }
                if (v11 >= v33) {
                  return v9;
                }
                unint64_t v16 = v32[v11];
                ++v17;
                if (v16) {
                  goto LABEL_24;
                }
              }
            }
            uint64_t v11 = v17;
          }
        }
      }
LABEL_24:
      unint64_t v10 = (v16 - 1) & v16;
      unint64_t v14 = __clz(__rbit64(v16)) + (v11 << 6);
    }
    uint64_t v18 = *(void *)(*(void *)(v4 + 48) + 8 * v14);
    uint64_t v19 = (uint64_t *)(*(void *)(v4 + 56) + 16 * v14);
    uint64_t v20 = *v19;
    uint64_t v21 = v19[1];
    uint64_t result = sub_1FC7D0();
    uint64_t v22 = -1 << *(unsigned char *)(v9 + 32);
    unint64_t v23 = result & ~v22;
    unint64_t v24 = v23 >> 6;
    if (((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6))) != 0)
    {
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v12 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
          goto LABEL_39;
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v12 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
    }
    *(void *)(v12 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
    *(void *)(*(void *)(v9 + 48) + 8 * v25) = v18;
    char v30 = (void *)(*(void *)(v9 + 56) + 16 * v25);
    *char v30 = v20;
    v30[1] = v21;
    ++*(void *)(v9 + 16);
    if (__OFSUB__(v5--, 1)) {
      break;
    }
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      return v9;
    }
  }
LABEL_39:
  __break(1u);
LABEL_40:
  __break(1u);
LABEL_41:
  __break(1u);
  return result;
}

void *sub_737C0(unint64_t *a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (!a3) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v4 = a4;
  uint64_t v5 = a3;
  if (*(void *)(a4 + 16) != a3)
  {
    sub_12124(&qword_26DA00);
    uint64_t v7 = sub_1FC2A0();
    uint64_t v8 = v7;
    uint64_t v33 = a2;
    if (a2 < 1) {
      unint64_t v9 = 0;
    }
    else {
      unint64_t v9 = *a1;
    }
    uint64_t v10 = 0;
    uint64_t v11 = v7 + 64;
    uint64_t v35 = v4;
    while (1)
    {
      if (v9)
      {
        unint64_t v12 = __clz(__rbit64(v9));
        v9 &= v9 - 1;
        unint64_t v13 = v12 | (v10 << 6);
      }
      else
      {
        uint64_t v14 = v10 + 1;
        if (__OFADD__(v10, 1)) {
          goto LABEL_40;
        }
        if (v14 >= v33) {
          return (void *)v8;
        }
        unint64_t v15 = a1[v14];
        ++v10;
        if (!v15)
        {
          uint64_t v10 = v14 + 1;
          if (v14 + 1 >= v33) {
            return (void *)v8;
          }
          unint64_t v15 = a1[v10];
          if (!v15)
          {
            uint64_t v10 = v14 + 2;
            if (v14 + 2 >= v33) {
              return (void *)v8;
            }
            unint64_t v15 = a1[v10];
            if (!v15)
            {
              uint64_t v16 = v14 + 3;
              if (v16 >= v33) {
                return (void *)v8;
              }
              unint64_t v15 = a1[v16];
              if (!v15)
              {
                while (1)
                {
                  uint64_t v10 = v16 + 1;
                  if (__OFADD__(v16, 1)) {
                    goto LABEL_41;
                  }
                  if (v10 >= v33) {
                    return (void *)v8;
                  }
                  unint64_t v15 = a1[v10];
                  ++v16;
                  if (v15) {
                    goto LABEL_24;
                  }
                }
              }
              uint64_t v10 = v16;
            }
          }
        }
LABEL_24:
        unint64_t v9 = (v15 - 1) & v15;
        unint64_t v13 = __clz(__rbit64(v15)) + (v10 << 6);
      }
      char v17 = *(unsigned char *)(*(void *)(v4 + 48) + v13);
      uint64_t v18 = *(void *)(v4 + 56) + 24 * v13;
      uint64_t v36 = *(void *)v18;
      char v19 = *(unsigned char *)(v18 + 8);
      uint64_t v20 = *(void *)(v18 + 16);
      sub_1FC7E0();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      Swift::Int v21 = sub_1FC830();
      uint64_t v22 = -1 << *(unsigned char *)(v8 + 32);
      unint64_t v23 = v21 & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6))) != 0)
      {
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~*(void *)(v11 + 8 * (v23 >> 6)))) | v23 & 0x7FFFFFFFFFFFFFC0;
        goto LABEL_35;
      }
      char v26 = 0;
      unint64_t v27 = (unint64_t)(63 - v22) >> 6;
      do
      {
        if (++v24 == v27 && (v26 & 1) != 0)
        {
          __break(1u);
LABEL_39:
          __break(1u);
LABEL_40:
          __break(1u);
LABEL_41:
          __break(1u);
          JUMPOUT(0x73C08);
        }
        BOOL v28 = v24 == v27;
        if (v24 == v27) {
          unint64_t v24 = 0;
        }
        v26 |= v28;
        uint64_t v29 = *(void *)(v11 + 8 * v24);
      }
      while (v29 == -1);
      unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
LABEL_35:
      *(void *)(v11 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(unsigned char *)(*(void *)(v8 + 48) + v25) = v17;
      uint64_t v30 = *(void *)(v8 + 56) + 24 * v25;
      *(void *)uint64_t v30 = v36;
      *(unsigned char *)(v30 + 8) = v19;
      *(void *)(v30 + 16) = v20;
      ++*(void *)(v8 + 16);
      if (__OFSUB__(v5--, 1)) {
        goto LABEL_39;
      }
      uint64_t v4 = v35;
      if (!v5) {
        return (void *)v8;
      }
    }
  }
  swift_retain();
  return (void *)v4;
}

uint64_t sub_73C3C(uint64_t a1)
{
  unint64_t v1 = *(void *)(a1 + 64);
  if (v1)
  {
    uint64_t v2 = 0;
    return __clz(__rbit64(v1)) + v2;
  }
  char v5 = *(unsigned char *)(a1 + 32);
  unsigned int v6 = v5 & 0x3F;
  uint64_t v3 = 1 << v5;
  if (v6 < 7) {
    return v3;
  }
  unint64_t v1 = *(void *)(a1 + 72);
  if (v1)
  {
    uint64_t v2 = 64;
    return __clz(__rbit64(v1)) + v2;
  }
  unint64_t v7 = (unint64_t)(v3 + 63) >> 6;
  if (v7 <= 2) {
    unint64_t v7 = 2;
  }
  unint64_t v8 = v7 - 2;
  unint64_t v9 = (unint64_t *)(a1 + 80);
  uint64_t v2 = 64;
  while (v8)
  {
    unint64_t v10 = *v9++;
    unint64_t v1 = v10;
    --v8;
    v2 += 64;
    if (v10) {
      return __clz(__rbit64(v1)) + v2;
    }
  }
  return v3;
}

size_t sub_73CC4(size_t result)
{
  int64_t v2 = result;
  unint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void **)v1;
  int64_t v5 = v3 >> 1;
  if ((v3 & 1) == 0 || (result = swift_isUniquelyReferenced_nonNull(), *(void *)uint64_t v1 = v4, (result & 1) == 0))
  {
    unint64_t v9 = v4;
    goto LABEL_9;
  }
  uint64_t v6 = *(void *)(v1 + 16);
  int64_t v7 = v5 - v6;
  if (__OFSUB__(v5, v6))
  {
LABEL_37:
    __break(1u);
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  uint64_t v8 = *(void *)(v1 + 8);
  sub_1FC730();
  swift_unknownObjectRetain();
  uint64_t result = swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = (size_t)_swiftEmptyArrayStorage;
  }
  unint64_t v9 = *(void **)(result + 16);
  if (v8 + 152 * v6 + 152 * v7 == result + 152 * (void)v9 + 32) {
    goto LABEL_29;
  }
  uint64_t result = swift_release();
  while (1)
  {
    if (v7 >= v2) {
      goto LABEL_26;
    }
    unint64_t v9 = *(void **)v1;
LABEL_9:
    uint64_t v10 = *(void *)(v1 + 16);
    int64_t v7 = v5 - v10;
    if (__OFSUB__(v5, v10))
    {
      __break(1u);
      goto LABEL_33;
    }
    uint64_t v11 = *(void *)(v1 + 8);
    if (!(v7 <= v2 ? v2 : v5 - v10)) {
      break;
    }
    sub_12124(&qword_26D3A8);
    uint64_t v4 = (void *)swift_allocObject();
    uint64_t result = j__malloc_size(v4);
    v4[2] = v7;
    v4[3] = 2 * ((uint64_t)(result - 32) / 152);
    if (v5 >= v10) {
      goto LABEL_15;
    }
LABEL_28:
    __break(1u);
LABEL_29:
    unint64_t v18 = *(void *)(result + 24);
    uint64_t result = swift_release();
    unint64_t v19 = (v18 >> 1) - (void)v9;
    BOOL v20 = __OFADD__(v7, v19);
    v7 += v19;
    if (v20) {
      goto LABEL_38;
    }
  }
  uint64_t v4 = _swiftEmptyArrayStorage;
  if (v5 < v10) {
    goto LABEL_28;
  }
LABEL_15:
  if ((v7 & 0x8000000000000000) == 0)
  {
    unint64_t v13 = (unint64_t)(v4 + 4);
    unint64_t v14 = v11 + 152 * v10;
    if (v14 >= (unint64_t)&v4[19 * v7 + 4] || v13 >= v14 + 152 * v7)
    {
      swift_arrayInitWithCopy();
      if (!__OFSUB__(0, v10))
      {
        uint64_t v16 = v4[2];
        uint64_t v17 = v10 + v16;
        if (!__OFADD__(v10, v16))
        {
          if (v17 >= v10)
          {
            uint64_t result = swift_unknownObjectRelease();
            if ((v17 & 0x8000000000000000) == 0)
            {
              *(void *)(v1 + 8) = v13 - 152 * v10;
              *(void *)(v1 + 16) = v10;
              *(void *)(v1 + 24) = (2 * v17) | 1;
LABEL_26:
              *(void *)uint64_t v1 = v4;
              return result;
            }
            goto LABEL_36;
          }
LABEL_35:
          __break(1u);
LABEL_36:
          __break(1u);
          goto LABEL_37;
        }
LABEL_34:
        __break(1u);
        goto LABEL_35;
      }
LABEL_33:
      __break(1u);
      goto LABEL_34;
    }
  }
LABEL_39:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_73F60(uint64_t *a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t, uint64_t))
{
  uint64_t v5 = v4[2];
  uint64_t v6 = v4[3] >> 1;
  int64_t v7 = (void *)(v6 - v5);
  if (__OFSUB__(v6, v5))
  {
    __break(1u);
    goto LABEL_32;
  }
  uint64_t v9 = *a1;
  uint64_t v10 = *(void *)(*a1 + 16);
  BOOL v11 = __OFSUB__(v10, a2);
  uint64_t v12 = v10 - a2;
  if (v11)
  {
LABEL_32:
    __break(1u);
    goto LABEL_33;
  }
  uint64_t v14 = v12 - a3;
  if (__OFSUB__(v12, a3))
  {
LABEL_33:
    __break(1u);
    goto LABEL_34;
  }
  unint64_t v15 = (char *)v7 - a2;
  if (__OFSUB__(v7, a2))
  {
LABEL_34:
    __break(1u);
    goto LABEL_35;
  }
  BOOL v11 = __OFSUB__(v15, v14);
  uint64_t v16 = &v15[-v14];
  if (v11)
  {
LABEL_35:
    __break(1u);
    goto LABEL_36;
  }
  uint64_t v34 = v16;
  size_t v17 = 152 * a2;
  __dst = (char *)(v9 + 32);
  uint64_t v18 = v9 + 32 + 152 * a2;
  uint64_t v33 = (char *)(v18 + 152 * a3);
  uint64_t v19 = sub_74588(v7);
  if (v19)
  {
    uint64_t v20 = v19;
    uint64_t v32 = v9;
    uint64_t v21 = v4[2];
    uint64_t v22 = (char *)(v4[1] + 152 * v21);
    swift_arrayDestroy();
    if (a2 < 0) {
      goto LABEL_46;
    }
    unint64_t v23 = &v22[v17];
    if (__dst != v22 || __dst >= v23) {
      memmove(__dst, v22, v17);
    }
    swift_arrayDestroy();
    a4(v18, a3);
    if (v14 < 0) {
      goto LABEL_46;
    }
    unint64_t v24 = &v23[152 * (void)v34];
    if (v33 != v24 || v33 >= &v24[152 * v14]) {
      memmove(v33, v24, 152 * v14);
    }
    swift_arrayDestroy();
    *(void *)(v20 + 16) = 0;
    swift_release();
    uint64_t v9 = v32;
LABEL_26:
    swift_retain();
    uint64_t result = swift_unknownObjectRelease();
    if (!__OFSUB__(0, v21))
    {
      uint64_t v30 = *(void *)(v9 + 16);
      BOOL v11 = __OFADD__(v21, v30);
      uint64_t v31 = v21 + v30;
      if (!v11)
      {
        if (v31 >= v21)
        {
          if ((v31 & 0x8000000000000000) == 0)
          {
            void *v4 = v9;
            v4[1] = &__dst[-152 * v21];
            v4[2] = v21;
            v4[3] = (2 * v31) | 1;
            return result;
          }
          goto LABEL_39;
        }
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        goto LABEL_40;
      }
LABEL_37:
      __break(1u);
      goto LABEL_38;
    }
LABEL_36:
    __break(1u);
    goto LABEL_37;
  }
  uint64_t v21 = v4[2];
  uint64_t v26 = v21 + a2;
  if (__OFADD__(v21, a2))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v26 < v21)
  {
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (__OFSUB__(v26, v21))
  {
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  swift_arrayInitWithCopy();
  a4((uint64_t)&__dst[152 * a2], a3);
  unint64_t v27 = &v34[v26];
  if (__OFADD__(v26, v34))
  {
LABEL_43:
    __break(1u);
    goto LABEL_44;
  }
  BOOL v28 = (char *)(v4[3] >> 1);
  if ((uint64_t)v28 < (uint64_t)v27)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (!__OFSUB__(v28, v27))
  {
    swift_arrayInitWithCopy();
    goto LABEL_26;
  }
LABEL_45:
  __break(1u);
LABEL_46:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_74290(void *result)
{
  uint64_t v2 = *(void *)(v1 + 16);
  unint64_t v3 = *(void *)(v1 + 24);
  unint64_t v4 = v3 >> 1;
  BOOL v5 = __OFSUB__(v3 >> 1, v2);
  uint64_t v6 = (v3 >> 1) - v2;
  if (v5)
  {
    __break(1u);
    goto LABEL_12;
  }
  int64_t v7 = (char *)result - v6;
  if (__OFSUB__(result, v6))
  {
LABEL_12:
    __break(1u);
LABEL_13:
    __break(1u);
    goto LABEL_14;
  }
  if (!v7) {
    return result;
  }
  sub_1FC730();
  swift_unknownObjectRetain();
  uint64_t result = (void *)swift_dynamicCastClass();
  if (!result)
  {
    swift_unknownObjectRelease();
    uint64_t result = _swiftEmptyArrayStorage;
  }
  uint64_t v8 = result[2];
  BOOL v5 = __OFADD__(v8, v7);
  uint64_t v9 = &v7[v8];
  if (v5) {
    goto LABEL_13;
  }
  result[2] = v9;
  uint64_t result = (void *)swift_release();
  uint64_t v10 = &v7[v4];
  if (__OFADD__(v4, v7))
  {
LABEL_14:
    __break(1u);
    goto LABEL_15;
  }
  if (((unint64_t)v10 & 0x8000000000000000) != 0)
  {
LABEL_15:
    __break(1u);
    return result;
  }
  *(void *)(v1 + 24) = v3 & 1 | (2 * (void)v10);
  return result;
}

void *sub_74348(void *result, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6)
{
  uint64_t v8 = (a6 >> 1) - a5;
  if (__OFSUB__(a6 >> 1, a5))
  {
    __break(1u);
LABEL_32:
    if (v8 >= v7) {
      goto LABEL_21;
    }
LABEL_18:
    if (v8 + 0x4000000000000000 >= 0)
    {
      v8 *= 2;
      goto LABEL_21;
    }
    __break(1u);
    goto LABEL_35;
  }
  uint64_t v7 = a2;
  uint64_t v6 = result;
  if ((a6 & 1) == 0) {
    goto LABEL_32;
  }
  sub_1FC730();
  swift_unknownObjectRetain();
  BOOL v11 = (void *)swift_dynamicCastClass();
  if (!v11)
  {
    swift_unknownObjectRelease();
    BOOL v11 = _swiftEmptyArrayStorage;
  }
  uint64_t v12 = v11[2];
  uint64_t v13 = a4 + 152 * a5 + 152 * v8;
  if ((void *)v13 == &v11[19 * v12 + 4])
  {
    unint64_t v15 = v11[3];
    uint64_t result = (void *)swift_release();
    uint64_t v16 = (v15 >> 1) - v12;
    uint64_t v14 = v8 + v16;
    if (__OFADD__(v8, v16))
    {
LABEL_35:
      __break(1u);
      goto LABEL_36;
    }
  }
  else
  {
    swift_release();
    uint64_t v14 = v8;
  }
  swift_unknownObjectRetain();
  size_t v17 = (void *)swift_dynamicCastClass();
  if (v14 < v7)
  {
    if (!v17)
    {
      swift_unknownObjectRelease();
      size_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    if ((void *)v13 == &v17[19 * v18 + 4])
    {
      unint64_t v20 = v17[3];
      uint64_t result = (void *)swift_release();
      uint64_t v21 = (v20 >> 1) - v18;
      BOOL v22 = __OFADD__(v8, v21);
      v8 += v21;
      if (v22)
      {
LABEL_36:
        __break(1u);
        goto LABEL_37;
      }
    }
    else
    {
      uint64_t result = (void *)swift_release();
    }
    goto LABEL_18;
  }
  if (!v17)
  {
    swift_unknownObjectRelease();
    size_t v17 = _swiftEmptyArrayStorage;
  }
  uint64_t v19 = v17[2];
  if ((void *)v13 == &v17[19 * v19 + 4])
  {
    unint64_t v23 = v17[3];
    uint64_t result = (void *)swift_release();
    uint64_t v24 = (v23 >> 1) - v19;
    BOOL v22 = __OFADD__(v8, v24);
    v8 += v24;
    if (!v22) {
      goto LABEL_21;
    }
LABEL_37:
    __break(1u);
    return result;
  }
  swift_release();
LABEL_21:
  if (v8 <= v7) {
    uint64_t v25 = v7;
  }
  else {
    uint64_t v25 = v8;
  }
  if (v25 <= (uint64_t)v6) {
    uint64_t v26 = v6;
  }
  else {
    uint64_t v26 = (void *)v25;
  }
  if (!v26) {
    return _swiftEmptyArrayStorage;
  }
  sub_12124(&qword_26D3A8);
  unint64_t v27 = (void *)swift_allocObject();
  size_t v28 = j__malloc_size(v27);
  void v27[2] = v6;
  v27[3] = 2 * ((uint64_t)(v28 - 32) / 152);
  return v27;
}

uint64_t (*sub_7456C())()
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t sub_74588(void *a1)
{
  uint64_t isUniquelyReferenced_nonNull = swift_isUniquelyReferenced_nonNull();
  if (!isUniquelyReferenced_nonNull) {
    return 0;
  }
  uint64_t v6 = v1[2];
  unint64_t v5 = v1[3];
  uint64_t v7 = (v5 >> 1) - v6;
  if (__OFSUB__(v5 >> 1, v6))
  {
    __break(1u);
    goto LABEL_18;
  }
  uint64_t v8 = v1[1];
  if ((v5 & 1) == 0) {
    goto LABEL_8;
  }
  sub_1FC730();
  swift_unknownObjectRetain();
  uint64_t v9 = (void *)swift_dynamicCastClass();
  if (!v9)
  {
    swift_unknownObjectRelease();
    uint64_t v9 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v9[2];
  if ((void *)(v8 + 152 * v6 + 152 * v7) != &v9[19 * v10 + 4])
  {
    swift_release();
LABEL_8:
    uint64_t v11 = v7;
    goto LABEL_10;
  }
  unint64_t v12 = v9[3];
  uint64_t result = swift_release();
  uint64_t v14 = (v12 >> 1) - v10;
  BOOL v15 = __OFADD__(v7, v14);
  uint64_t v11 = v7 + v14;
  if (!v15)
  {
LABEL_10:
    if (v11 < (uint64_t)a1) {
      return 0;
    }
    sub_1FC730();
    swift_unknownObjectRetain();
    a1 = (void *)swift_dynamicCastClass();
    if (!a1)
    {
      swift_unknownObjectRelease();
      a1 = _swiftEmptyArrayStorage;
    }
    uint64_t v16 = (v8 + 152 * v6 - (uint64_t)a1 - 32) / 152;
    uint64_t isUniquelyReferenced_nonNull = v7 + v16;
    if (!__OFADD__(v7, v16))
    {
      uint64_t v4 = a1[2];
      if (isUniquelyReferenced_nonNull >= v4) {
        return (uint64_t)a1;
      }
LABEL_19:
      sub_75E24(isUniquelyReferenced_nonNull, v4, 0);
      return (uint64_t)a1;
    }
LABEL_18:
    __break(1u);
    goto LABEL_19;
  }
  __break(1u);
  return result;
}

uint64_t sub_74710@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v2 = *(void *)(a1 + 24);
  char v3 = *(unsigned char *)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 56);
  uint64_t v5 = *(void *)(a1 + 64);
  uint64_t v7 = *(void *)(a1 + 72);
  uint64_t v8 = *(void *)(a1 + 80);
  *(unsigned char *)(a2 + 16) = *(unsigned char *)(a1 + 16);
  *(void *)(a2 + 24) = v2;
  *(unsigned char *)(a2 + 32) = v3;
  *(void *)(a2 + 40) = v4;
  char v9 = *(unsigned char *)(a1 + 48);
  *(unsigned char *)(a2 + 48) = v9;
  *(void *)(a2 + 56) = v6;
  *(void *)(a2 + 64) = v5;
  *(void *)(a2 + 72) = v7;
  *(void *)(a2 + 80) = v8;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  sub_5480C(v4, v9);
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_74798@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v23 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v24 = (unint64_t)(v1[2] + 64) >> 6;
    if (v23 < v24)
    {
      uint64_t v25 = v1[1];
      unint64_t v26 = *(void *)(v25 + 8 * v23);
      if (v26)
      {
LABEL_9:
        uint64_t v7 = (v26 - 1) & v26;
        unint64_t v8 = __clz(__rbit64(v26)) + (v23 << 6);
        int64_t v6 = v23;
        goto LABEL_3;
      }
      int64_t v27 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v24)
      {
        unint64_t v26 = *(void *)(v25 + 8 * v27);
        if (v26)
        {
LABEL_12:
          int64_t v23 = v27;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v24)
        {
          unint64_t v26 = *(void *)(v25 + 8 * (v5 + 3));
          if (v26)
          {
            int64_t v23 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v27 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v24)
          {
            unint64_t v26 = *(void *)(v25 + 8 * v27);
            if (v26) {
              goto LABEL_12;
            }
            int64_t v23 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v24)
            {
              unint64_t v26 = *(void *)(v25 + 8 * v23);
              if (v26) {
                goto LABEL_9;
              }
              int64_t v6 = v24 - 1;
              int64_t v28 = v5 + 6;
              while (v24 != v28)
              {
                unint64_t v26 = *(void *)(v25 + 8 * v28++);
                if (v26)
                {
                  int64_t v23 = v28 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(void *)(a1 + 80) = 0;
    return result;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = *(void *)(*(void *)(v3 + 48) + 8 * v8);
  uint64_t v10 = *(void *)(v3 + 56) + 80 * v8;
  uint64_t v11 = *(void *)v10;
  char v12 = *(unsigned char *)(v10 + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  char v14 = *(unsigned char *)(v10 + 24);
  uint64_t v15 = *(void *)(v10 + 32);
  uint64_t v17 = *(void *)(v10 + 48);
  uint64_t v16 = *(void *)(v10 + 56);
  uint64_t v18 = *(void *)(v10 + 64);
  uint64_t v19 = *(void *)(v10 + 72);
  char v20 = *(unsigned char *)(v10 + 40);
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v21 = (void (*)(void *))v1[5];
  v29[0] = v9;
  v29[1] = v11;
  char v30 = v12;
  uint64_t v31 = v13;
  char v32 = v14;
  uint64_t v33 = v15;
  char v34 = v20;
  uint64_t v35 = v17;
  uint64_t v36 = v16;
  uint64_t v37 = v18;
  uint64_t v38 = v19;
  sub_5480C(v15, v20);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v21(v29);
  sub_54820(v15, v20);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_749C0@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v21 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v22 = (unint64_t)(v1[2] + 64) >> 6;
    if (v21 < v22)
    {
      uint64_t v23 = v1[1];
      unint64_t v24 = *(void *)(v23 + 8 * v21);
      if (v24)
      {
LABEL_9:
        uint64_t v7 = (v24 - 1) & v24;
        unint64_t v8 = __clz(__rbit64(v24)) + (v21 << 6);
        int64_t v6 = v21;
        goto LABEL_3;
      }
      int64_t v25 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v22)
      {
        unint64_t v24 = *(void *)(v23 + 8 * v25);
        if (v24)
        {
LABEL_12:
          int64_t v21 = v25;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v22)
        {
          unint64_t v24 = *(void *)(v23 + 8 * (v5 + 3));
          if (v24)
          {
            int64_t v21 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v25 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v22)
          {
            unint64_t v24 = *(void *)(v23 + 8 * v25);
            if (v24) {
              goto LABEL_12;
            }
            int64_t v21 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v22)
            {
              unint64_t v24 = *(void *)(v23 + 8 * v21);
              if (v24) {
                goto LABEL_9;
              }
              int64_t v6 = v22 - 1;
              int64_t v26 = v5 + 6;
              while (v22 != v26)
              {
                unint64_t v24 = *(void *)(v23 + 8 * v26++);
                if (v24)
                {
                  int64_t v21 = v26 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(_OWORD *)(a1 + 48) = 0u;
    *(_OWORD *)(a1 + 64) = 0u;
    *(unsigned char *)(a1 + 80) = 0;
    return result;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = *(void *)(*(void *)(v3 + 48) + 8 * v8);
  uint64_t v10 = *(void *)(v3 + 56) + 80 * v8;
  char v11 = *(unsigned char *)v10;
  uint64_t v12 = *(void *)(v10 + 8);
  uint64_t v13 = *(void *)(v10 + 16);
  uint64_t v14 = *(void *)(v10 + 24);
  char v15 = *(unsigned char *)(v10 + 32);
  char v16 = *(unsigned char *)(v10 + 72);
  uint64_t v17 = (void (*)(uint64_t *))v1[5];
  uint64_t v27 = v9;
  char v28 = v11;
  uint64_t v29 = v12;
  uint64_t v30 = v13;
  uint64_t v31 = v14;
  char v32 = v15;
  long long v18 = *(_OWORD *)(v10 + 40);
  long long v19 = *(_OWORD *)(v10 + 56);
  v1[3] = v6;
  v1[4] = v7;
  long long v33 = v18;
  long long v34 = v19;
  char v35 = v16;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v17(&v27);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_74BBC@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v15 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v16 = (unint64_t)(v1[2] + 64) >> 6;
    if (v15 < v16)
    {
      uint64_t v17 = v1[1];
      unint64_t v18 = *(void *)(v17 + 8 * v15);
      if (v18)
      {
LABEL_9:
        uint64_t v7 = (v18 - 1) & v18;
        unint64_t v8 = __clz(__rbit64(v18)) + (v15 << 6);
        int64_t v6 = v15;
        goto LABEL_3;
      }
      int64_t v19 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v16)
      {
        unint64_t v18 = *(void *)(v17 + 8 * v19);
        if (v18)
        {
LABEL_12:
          int64_t v15 = v19;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v16)
        {
          unint64_t v18 = *(void *)(v17 + 8 * (v5 + 3));
          if (v18)
          {
            int64_t v15 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v19 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v16)
          {
            unint64_t v18 = *(void *)(v17 + 8 * v19);
            if (v18) {
              goto LABEL_12;
            }
            int64_t v15 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v16)
            {
              unint64_t v18 = *(void *)(v17 + 8 * v15);
              if (v18) {
                goto LABEL_9;
              }
              int64_t v6 = v16 - 1;
              int64_t v20 = v5 + 6;
              while (v16 != v20)
              {
                unint64_t v18 = *(void *)(v17 + 8 * v20++);
                if (v18)
                {
                  int64_t v15 = v20 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    a1[1] = 0;
    a1[2] = 0;
    *a1 = 0;
    return result;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = *(void *)(*(void *)(v3 + 48) + 8 * v8);
  uint64_t v10 = (uint64_t *)(*(void *)(v3 + 56) + 16 * v8);
  uint64_t v11 = *v10;
  uint64_t v12 = v10[1];
  v1[3] = v6;
  v1[4] = v7;
  uint64_t v13 = (void (*)(void *))v1[5];
  v21[0] = v9;
  v21[1] = v11;
  void v21[2] = v12;
  swift_bridgeObjectRetain();
  v13(v21);

  return swift_bridgeObjectRelease();
}

uint64_t sub_74D58@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = *v1;
  int64_t v5 = v1[3];
  unint64_t v4 = v1[4];
  int64_t v6 = v5;
  if (!v4)
  {
    int64_t v18 = v5 + 1;
    if (__OFADD__(v5, 1))
    {
      __break(1u);
      return result;
    }
    int64_t v19 = (unint64_t)(v1[2] + 64) >> 6;
    if (v18 < v19)
    {
      uint64_t v20 = v1[1];
      unint64_t v21 = *(void *)(v20 + 8 * v18);
      if (v21)
      {
LABEL_9:
        uint64_t v7 = (v21 - 1) & v21;
        unint64_t v8 = __clz(__rbit64(v21)) + (v18 << 6);
        int64_t v6 = v18;
        goto LABEL_3;
      }
      int64_t v22 = v5 + 2;
      int64_t v6 = v5 + 1;
      if (v5 + 2 < v19)
      {
        unint64_t v21 = *(void *)(v20 + 8 * v22);
        if (v21)
        {
LABEL_12:
          int64_t v18 = v22;
          goto LABEL_9;
        }
        int64_t v6 = v5 + 2;
        if (v5 + 3 < v19)
        {
          unint64_t v21 = *(void *)(v20 + 8 * (v5 + 3));
          if (v21)
          {
            int64_t v18 = v5 + 3;
            goto LABEL_9;
          }
          int64_t v22 = v5 + 4;
          int64_t v6 = v5 + 3;
          if (v5 + 4 < v19)
          {
            unint64_t v21 = *(void *)(v20 + 8 * v22);
            if (v21) {
              goto LABEL_12;
            }
            int64_t v18 = v5 + 5;
            int64_t v6 = v5 + 4;
            if (v5 + 5 < v19)
            {
              unint64_t v21 = *(void *)(v20 + 8 * v18);
              if (v21) {
                goto LABEL_9;
              }
              int64_t v6 = v19 - 1;
              int64_t v23 = v5 + 6;
              while (v19 != v23)
              {
                unint64_t v21 = *(void *)(v20 + 8 * v23++);
                if (v21)
                {
                  int64_t v18 = v23 - 1;
                  goto LABEL_9;
                }
              }
            }
          }
        }
      }
    }
    v1[3] = v6;
    v1[4] = 0;
    *(_OWORD *)a1 = 0u;
    *(_OWORD *)(a1 + 16) = 0u;
    *(_OWORD *)(a1 + 32) = 0u;
    *(void *)(a1 + 48) = 0;
    return result;
  }
  uint64_t v7 = (v4 - 1) & v4;
  unint64_t v8 = __clz(__rbit64(v4)) | (v5 << 6);
LABEL_3:
  uint64_t v9 = *(void *)(*(void *)(v3 + 48) + 8 * v8);
  uint64_t v10 = *(void *)(v3 + 56) + 48 * v8;
  char v11 = *(unsigned char *)(v10 + 16);
  uint64_t v13 = *(void *)(v10 + 24);
  uint64_t v12 = *(void *)(v10 + 32);
  uint64_t v14 = *(void *)(v10 + 40);
  int64_t v15 = (void (*)(uint64_t *))v1[5];
  uint64_t v24 = v9;
  long long v16 = *(_OWORD *)v10;
  v1[3] = v6;
  v1[4] = v7;
  long long v25 = v16;
  char v26 = v11;
  uint64_t v27 = v13;
  uint64_t v28 = v12;
  uint64_t v29 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v15(&v24);
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_74F38(uint64_t a1, char a2, uint64_t *a3)
{
  uint64_t v96 = a3;
  unint64_t v4 = *(void *)(a1 + 16);
  uint64_t v63 = a1 + 32;
  swift_bridgeObjectRetain();
  unint64_t v5 = 0;
  BOOL v6 = v4 == 0;
  if (!v4) {
    goto LABEL_7;
  }
LABEL_2:
  if (!v6)
  {
    uint64_t v7 = (_OWORD *)(v63 + 160 * v5);
    long long v8 = v7[7];
    long long v9 = v7[5];
    long long v92 = v7[6];
    long long v93 = v8;
    long long v10 = v7[7];
    v94[0] = v7[8];
    *(_OWORD *)((char *)v94 + 9) = *(_OWORD *)((char *)v7 + 137);
    long long v11 = v7[3];
    long long v12 = v7[1];
    long long v88 = v7[2];
    long long v89 = v11;
    long long v13 = v7[3];
    long long v14 = v7[5];
    long long v90 = v7[4];
    long long v91 = v14;
    long long v15 = v7[1];
    v87[0] = *v7;
    v87[1] = v15;
    *(_OWORD *)&v95[96] = v92;
    *(_OWORD *)&v95[112] = v10;
    *(_OWORD *)&v95[128] = v7[8];
    *(_OWORD *)&v95[137] = *(_OWORD *)((char *)v7 + 137);
    *(_OWORD *)&v95[32] = v88;
    *(_OWORD *)&v95[48] = v13;
    *(_OWORD *)&v95[64] = v90;
    *(_OWORD *)&v95[80] = v9;
    ++v5;
    *(_OWORD *)uint64_t v95 = v87[0];
    *(_OWORD *)&v95[16] = v12;
    AuthorRecommendationSource.id.getter(v95);
    sub_7D348((uint64_t)v87);
    while (1)
    {
      sub_55844((uint64_t)v95, (uint64_t)v86, &qword_26D9E8);
      sub_55844((uint64_t)v86, (uint64_t)v87, &qword_26D9E8);
      if (sub_7D3D0((uint64_t)v87) == 1) {
        return swift_bridgeObjectRelease();
      }
      uint64_t v40 = *(void *)v95;
      long long v82 = *(_OWORD *)&v95[104];
      long long v83 = *(_OWORD *)&v95[120];
      long long v84 = *(_OWORD *)&v95[136];
      char v85 = v95[152];
      long long v78 = *(_OWORD *)&v95[40];
      long long v79 = *(_OWORD *)&v95[56];
      long long v80 = *(_OWORD *)&v95[72];
      long long v81 = *(_OWORD *)&v95[88];
      long long v76 = *(_OWORD *)&v95[8];
      long long v77 = *(_OWORD *)&v95[24];
      uint64_t v41 = *v96;
      unint64_t v43 = sub_56168(*(void *)v95);
      uint64_t v44 = *(void *)(v41 + 16);
      BOOL v45 = (v42 & 1) == 0;
      uint64_t v46 = v44 + v45;
      if (__OFADD__(v44, v45))
      {
        __break(1u);
        break;
      }
      char v47 = v42;
      if (*(void *)(v41 + 24) >= v46)
      {
        if (a2)
        {
          if (v42) {
            goto LABEL_5;
          }
        }
        else
        {
          sub_120968();
          if (v47) {
            goto LABEL_5;
          }
        }
      }
      else
      {
        sub_117684(v46, a2 & 1);
        uint64_t v48 = sub_56168(v40);
        if ((v47 & 1) != (v49 & 1)) {
          goto LABEL_22;
        }
        unint64_t v43 = v48;
        if (v47)
        {
LABEL_5:
          uint64_t v16 = *v96;
          uint64_t v17 = *(void *)(*v96 + 56) + 152 * v43;
          long long v18 = *(_OWORD *)(v17 + 16);
          long long v64 = *(_OWORD *)v17;
          long long v65 = v18;
          long long v19 = *(_OWORD *)(v17 + 80);
          long long v21 = *(_OWORD *)(v17 + 32);
          long long v20 = *(_OWORD *)(v17 + 48);
          long long v68 = *(_OWORD *)(v17 + 64);
          long long v69 = v19;
          long long v66 = v21;
          long long v67 = v20;
          long long v23 = *(_OWORD *)(v17 + 112);
          long long v22 = *(_OWORD *)(v17 + 128);
          long long v24 = *(_OWORD *)(v17 + 96);
          char v73 = *(unsigned char *)(v17 + 144);
          long long v71 = v23;
          long long v72 = v22;
          long long v70 = v24;
          sub_54834((uint64_t)&v64);
          sub_7A018((uint64_t)&v76);
          uint64_t v25 = *(void *)(v16 + 56) + 152 * v43;
          long long v26 = *(_OWORD *)(v25 + 96);
          long long v27 = *(_OWORD *)(v25 + 112);
          long long v28 = *(_OWORD *)(v25 + 128);
          char v75 = *(unsigned char *)(v25 + 144);
          v74[7] = v27;
          v74[8] = v28;
          v74[6] = v26;
          long long v29 = *(_OWORD *)(v25 + 32);
          long long v30 = *(_OWORD *)(v25 + 48);
          long long v31 = *(_OWORD *)(v25 + 80);
          v74[4] = *(_OWORD *)(v25 + 64);
          void v74[5] = v31;
          v74[3] = v30;
          long long v32 = *(_OWORD *)(v25 + 16);
          v74[0] = *(_OWORD *)v25;
          v74[1] = v32;
          v74[2] = v29;
          sub_7A018((uint64_t)v74);
          long long v33 = v65;
          *(_OWORD *)uint64_t v25 = v64;
          *(_OWORD *)(v25 + 16) = v33;
          long long v34 = v69;
          long long v36 = v66;
          long long v35 = v67;
          *(_OWORD *)(v25 + 64) = v68;
          *(_OWORD *)(v25 + 80) = v34;
          *(_OWORD *)(v25 + 32) = v36;
          *(_OWORD *)(v25 + 48) = v35;
          long long v38 = v71;
          long long v37 = v72;
          long long v39 = v70;
          *(unsigned char *)(v25 + 144) = v73;
          *(_OWORD *)(v25 + 112) = v38;
          *(_OWORD *)(v25 + 128) = v37;
          *(_OWORD *)(v25 + 96) = v39;
          goto LABEL_6;
        }
      }
      long long v50 = (void *)*v96;
      v50[(v43 >> 6) + 8] |= 1 << v43;
      *(void *)(v50[6] + 8 * v43) = v40;
      uint64_t v51 = v50[7] + 152 * v43;
      long long v52 = v77;
      *(_OWORD *)uint64_t v51 = v76;
      *(_OWORD *)(v51 + 16) = v52;
      long long v53 = v78;
      long long v54 = v79;
      long long v55 = v81;
      *(_OWORD *)(v51 + 64) = v80;
      *(_OWORD *)(v51 + 80) = v55;
      *(_OWORD *)(v51 + 32) = v53;
      *(_OWORD *)(v51 + 48) = v54;
      long long v56 = v82;
      long long v57 = v83;
      long long v58 = v84;
      *(unsigned char *)(v51 + 144) = v85;
      *(_OWORD *)(v51 + 112) = v57;
      *(_OWORD *)(v51 + 128) = v58;
      *(_OWORD *)(v51 + 96) = v56;
      uint64_t v59 = v50[2];
      BOOL v60 = __OFADD__(v59, 1);
      uint64_t v61 = v59 + 1;
      if (v60) {
        goto LABEL_21;
      }
      v50[2] = v61;
LABEL_6:
      a2 = 1;
      BOOL v6 = v5 >= v4;
      if (v5 != v4) {
        goto LABEL_2;
      }
LABEL_7:
      sub_7D3E8(v87);
      sub_55844((uint64_t)v87, (uint64_t)v95, &qword_26D9E8);
      unint64_t v5 = v4;
    }
  }
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_752C0(uint64_t *a1, uint64_t a2)
{
  uint64_t v161 = sub_12124(&qword_26D938);
  uint64_t v152 = *(void *)(v161 - 8);
  uint64_t v5 = __chkstk_darwin(v161);
  unint64_t v154 = (char *)&v140 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  int64_t v155 = (char *)&v140 - v7;
  Swift::Int v8 = a1[1];
  swift_bridgeObjectRetain_n();
  Swift::Int v9 = sub_1FC570(v8);
  if (v9 < v8)
  {
    if (v8 >= 0) {
      uint64_t v10 = v8;
    }
    else {
      uint64_t v10 = v8 + 1;
    }
    if (v8 < -1)
    {
LABEL_171:
      swift_bridgeObjectRelease_n();
      uint64_t result = sub_1FC210();
      __break(1u);
      return result;
    }
    Swift::Int v11 = v9;
    uint64_t v157 = a2;
    uint64_t v151 = v2;
    uint64_t v141 = a1;
    if (v8 < 2)
    {
      long long v15 = _swiftEmptyArrayStorage;
      unint64_t v149 = (char *)&_swiftEmptyArrayStorage[4];
      if (v8 != 1)
      {
        unint64_t v72 = _swiftEmptyArrayStorage[2];
        long long v18 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
        unint64_t v143 = v15;
        if (v72 < 2)
        {
LABEL_128:
          swift_bridgeObjectRelease();
          v143[2] = 0;
          swift_bridgeObjectRelease_n();
          return swift_bridgeObjectRelease();
        }
        uint64_t v129 = *v141;
        while (1)
        {
          unint64_t v130 = v72 - 2;
          if (v72 < 2) {
            break;
          }
          BOOL v150 = v18;
          if (!v129) {
            goto LABEL_170;
          }
          uint64_t v131 = *(void *)&v150[16 * v130 + 32];
          uint64_t v132 = *(void *)&v150[16 * v72 + 24];
          char v133 = (char *)(v129 + 8 * *(void *)&v150[16 * v72 + 16]);
          uint64_t v134 = v157;
          swift_bridgeObjectRetain();
          uint64_t v135 = v151;
          sub_7672C((char *)(v129 + 8 * v131), v133, (char *)(v129 + 8 * v132), v149, v134);
          uint64_t v151 = v135;
          if (v135) {
            goto LABEL_129;
          }
          swift_bridgeObjectRelease();
          if (v132 < v131) {
            goto LABEL_154;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            BOOL v150 = sub_70B24((uint64_t)v150);
          }
          char v136 = v150;
          if (v130 >= *((void *)v150 + 2)) {
            goto LABEL_155;
          }
          uint64_t v137 = v150 + 32;
          uint64_t v138 = &v150[16 * v130 + 32];
          *(void *)uint64_t v138 = v131;
          *((void *)v138 + 1) = v132;
          unint64_t v139 = *((void *)v136 + 2);
          if (v72 > v139) {
            goto LABEL_156;
          }
          memmove(&v137[16 * v72 - 16], &v137[16 * v72], 16 * (v139 - v72));
          *((void *)v136 + 2) = v139 - 1;
          unint64_t v72 = v139 - 1;
          long long v18 = v136;
          if (v139 <= 2) {
            goto LABEL_128;
          }
        }
LABEL_153:
        __break(1u);
LABEL_154:
        __break(1u);
LABEL_155:
        __break(1u);
LABEL_156:
        __break(1u);
LABEL_157:
        __break(1u);
LABEL_158:
        __break(1u);
LABEL_159:
        __break(1u);
LABEL_160:
        __break(1u);
LABEL_161:
        __break(1u);
LABEL_162:
        __break(1u);
LABEL_163:
        __break(1u);
LABEL_164:
        __break(1u);
LABEL_165:
        __break(1u);
LABEL_166:
        __break(1u);
LABEL_167:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_168:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_169:
        swift_bridgeObjectRelease_n();
        __break(1u);
LABEL_170:
        swift_bridgeObjectRelease_n();
        __break(1u);
        goto LABEL_171;
      }
      unint64_t v143 = _swiftEmptyArrayStorage;
    }
    else
    {
      uint64_t v12 = v10 >> 1;
      uint64_t v13 = sub_1FBB40();
      *(void *)(v13 + 16) = v12;
      unint64_t v143 = (void *)v13;
      unint64_t v149 = (char *)(v13 + 32);
    }
    uint64_t v16 = 0;
    uint64_t v17 = *a1;
    uint64_t v159 = v152 + 8;
    uint64_t v160 = v152 + 16;
    uint64_t v142 = v17 + 16;
    uint64_t v156 = v17;
    uint64_t v140 = v17 - 8;
    long long v18 = (char *)_swiftEmptyArrayStorage;
    uint64_t v147 = v8;
    Swift::Int v144 = v11;
LABEL_15:
    uint64_t v148 = (uint64_t)v16;
    Swift::Int v19 = (Swift::Int)(v16 + 1);
    if ((uint64_t)(v16 + 1) < v8)
    {
      if (!*(void *)(a2 + 16)) {
        goto LABEL_158;
      }
      uint64_t v20 = *(void *)(v156 + 8 * v148);
      uint64_t v21 = sub_56168(*(void *)(v156 + 8 * v19));
      if ((v22 & 1) == 0) {
        goto LABEL_159;
      }
      BOOL v150 = v18;
      uint64_t v23 = *(void *)(a2 + 56);
      uint64_t v24 = v152;
      uint64_t v158 = *(char **)(v152 + 72);
      uint64_t v25 = v155;
      uint64_t v26 = v161;
      int64_t v153 = *(char **)(v152 + 16);
      ((void (*)(char *, uint64_t, uint64_t))v153)(v155, v23 + (void)v158 * v21, v161);
      uint64_t v146 = sub_1FB380();
      long long v27 = *(void (**)(char *, uint64_t))(v24 + 8);
      v27(v25, v26);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_160;
      }
      uint64_t v28 = sub_56168(v20);
      if ((v29 & 1) == 0) {
        goto LABEL_161;
      }
      long long v30 = v154;
      uint64_t v31 = v161;
      ((void (*)(char *, uint64_t, uint64_t))v153)(v154, *(void *)(a2 + 56) + v28 * (void)v158, v161);
      uint64_t v145 = sub_1FB380();
      v27(v30, v31);
      Swift::Int v19 = v148 + 2;
      if (v148 + 2 < v8)
      {
        long long v32 = (void *)(v142 + 8 * v148);
        while (1)
        {
          if (!*(void *)(a2 + 16)) {
            goto LABEL_138;
          }
          uint64_t v33 = *(v32 - 1);
          uint64_t v34 = sub_56168(*v32);
          if ((v35 & 1) == 0) {
            goto LABEL_139;
          }
          long long v36 = v155;
          uint64_t v37 = v161;
          ((void (*)(char *, uint64_t, uint64_t))v153)(v155, *(void *)(a2 + 56) + v34 * (void)v158, v161);
          uint64_t v38 = sub_1FB380();
          v27(v36, v37);
          if (!*(void *)(a2 + 16)) {
            goto LABEL_140;
          }
          uint64_t v39 = sub_56168(v33);
          if ((v40 & 1) == 0) {
            goto LABEL_141;
          }
          BOOL v41 = v145 < v146;
          char v42 = v154;
          uint64_t v43 = v161;
          ((void (*)(char *, uint64_t, uint64_t))v153)(v154, *(void *)(a2 + 56) + v39 * (void)v158, v161);
          uint64_t v44 = sub_1FB380();
          v27(v42, v43);
          if (v41 == v44 >= v38) {
            break;
          }
          ++v19;
          ++v32;
          if (v147 == v19)
          {
            Swift::Int v8 = v147;
            Swift::Int v19 = v147;
            goto LABEL_30;
          }
        }
        Swift::Int v8 = v147;
LABEL_30:
        Swift::Int v11 = v144;
      }
      long long v18 = v150;
      if (v145 < v146)
      {
        uint64_t v45 = v148;
        if (v19 < v148) {
          goto LABEL_166;
        }
        if (v148 < v19)
        {
          Swift::Int v46 = v19 - 1;
          uint64_t v47 = v156;
          do
          {
            if (v45 != v46)
            {
              if (!v47) {
                goto LABEL_169;
              }
              uint64_t v48 = *(void *)(v47 + 8 * v45);
              *(void *)(v47 + 8 * v45) = *(void *)(v47 + 8 * v46);
              *(void *)(v47 + 8 * v46) = v48;
            }
            BOOL v104 = ++v45 < v46--;
          }
          while (v104);
        }
      }
    }
    if (v19 >= v8) {
      goto LABEL_61;
    }
    if (__OFSUB__(v19, v148)) {
      goto LABEL_162;
    }
    if (v19 - v148 >= v11)
    {
LABEL_61:
      char v49 = (char *)v148;
LABEL_62:
      if (v19 < (uint64_t)v49) {
        goto LABEL_157;
      }
      goto LABEL_63;
    }
    char v49 = (char *)v148;
    if (__OFADD__(v148, v11)) {
      goto LABEL_164;
    }
    if (v148 + v11 >= v8) {
      Swift::Int v50 = v8;
    }
    else {
      Swift::Int v50 = v148 + v11;
    }
    if (v50 < v148) {
      goto LABEL_165;
    }
    if (v19 == v50) {
      goto LABEL_62;
    }
    BOOL v150 = v18;
    uint64_t v51 = (int8x16_t *)(v140 + 8 * v19);
    uint64_t v145 = v50;
LABEL_52:
    uint64_t v146 = (uint64_t)v51;
    int64_t v153 = (char *)v19;
    while (*(void *)(a2 + 16))
    {
      uint64_t v53 = v51->i64[0];
      uint64_t v54 = sub_56168(v51->i64[1]);
      if ((v55 & 1) == 0) {
        goto LABEL_131;
      }
      uint64_t v158 = v49;
      uint64_t v56 = v152;
      uint64_t v57 = *(void *)(v152 + 72);
      long long v58 = *(void (**)(char *, uint64_t, uint64_t))(v152 + 16);
      uint64_t v59 = v155;
      uint64_t v60 = v161;
      v58(v155, *(void *)(a2 + 56) + v57 * v54, v161);
      uint64_t v61 = sub_1FB380();
      char v62 = *(void (**)(char *, uint64_t))(v56 + 8);
      v62(v59, v60);
      if (!*(void *)(a2 + 16)) {
        goto LABEL_132;
      }
      uint64_t v63 = sub_56168(v53);
      if ((v64 & 1) == 0) {
        goto LABEL_133;
      }
      uint64_t v65 = *(void *)(a2 + 56) + v63 * v57;
      long long v66 = v154;
      uint64_t v67 = v161;
      v58(v154, v65, v161);
      uint64_t v68 = sub_1FB380();
      v62(v66, v67);
      if (v68 >= v61)
      {
        a2 = v157;
        long long v52 = v153;
LABEL_51:
        Swift::Int v19 = (Swift::Int)(v52 + 1);
        uint64_t v51 = (int8x16_t *)(v146 + 8);
        char v49 = (char *)v148;
        if (v19 != v145) {
          goto LABEL_52;
        }
        Swift::Int v19 = v145;
        long long v18 = v150;
        if (v145 < v148) {
          goto LABEL_157;
        }
LABEL_63:
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        int64_t v153 = (char *)v19;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          long long v18 = sub_7004C(0, *((void *)v18 + 2) + 1, 1, v18);
        }
        unint64_t v71 = *((void *)v18 + 2);
        unint64_t v70 = *((void *)v18 + 3);
        unint64_t v72 = v71 + 1;
        if (v71 >= v70 >> 1) {
          long long v18 = sub_7004C((char *)(v70 > 1), v71 + 1, 1, v18);
        }
        *((void *)v18 + 2) = v72;
        char v73 = v18 + 32;
        uint64_t v74 = &v18[16 * v71 + 32];
        char v75 = v153;
        *(void *)uint64_t v74 = v49;
        *((void *)v74 + 1) = v75;
        if (v71)
        {
          BOOL v150 = v18;
          uint64_t v158 = v18 + 32;
          while (1)
          {
            unint64_t v76 = v72 - 1;
            if (v72 >= 4)
            {
              long long v81 = &v73[16 * v72];
              uint64_t v82 = *((void *)v81 - 8);
              uint64_t v83 = *((void *)v81 - 7);
              BOOL v87 = __OFSUB__(v83, v82);
              uint64_t v84 = v83 - v82;
              if (v87) {
                goto LABEL_142;
              }
              uint64_t v86 = *((void *)v81 - 6);
              uint64_t v85 = *((void *)v81 - 5);
              BOOL v87 = __OFSUB__(v85, v86);
              uint64_t v79 = v85 - v86;
              char v80 = v87;
              if (v87) {
                goto LABEL_143;
              }
              unint64_t v88 = v72 - 2;
              long long v89 = &v73[16 * v72 - 32];
              uint64_t v91 = *(void *)v89;
              uint64_t v90 = *((void *)v89 + 1);
              BOOL v87 = __OFSUB__(v90, v91);
              uint64_t v92 = v90 - v91;
              if (v87) {
                goto LABEL_145;
              }
              BOOL v87 = __OFADD__(v79, v92);
              uint64_t v93 = v79 + v92;
              if (v87) {
                goto LABEL_148;
              }
              if (v93 >= v84)
              {
                long long v111 = &v73[16 * v76];
                uint64_t v113 = *(void *)v111;
                uint64_t v112 = *((void *)v111 + 1);
                BOOL v87 = __OFSUB__(v112, v113);
                uint64_t v114 = v112 - v113;
                if (v87) {
                  goto LABEL_152;
                }
                BOOL v104 = v79 < v114;
                goto LABEL_100;
              }
            }
            else
            {
              if (v72 != 3)
              {
                uint64_t v105 = *((void *)v18 + 4);
                uint64_t v106 = *((void *)v18 + 5);
                BOOL v87 = __OFSUB__(v106, v105);
                uint64_t v98 = v106 - v105;
                char v99 = v87;
                goto LABEL_94;
              }
              uint64_t v78 = *((void *)v18 + 4);
              uint64_t v77 = *((void *)v18 + 5);
              BOOL v87 = __OFSUB__(v77, v78);
              uint64_t v79 = v77 - v78;
              char v80 = v87;
            }
            if (v80) {
              goto LABEL_144;
            }
            unint64_t v88 = v72 - 2;
            uint64_t v94 = &v73[16 * v72 - 32];
            uint64_t v96 = *(void *)v94;
            uint64_t v95 = *((void *)v94 + 1);
            BOOL v97 = __OFSUB__(v95, v96);
            uint64_t v98 = v95 - v96;
            char v99 = v97;
            if (v97) {
              goto LABEL_147;
            }
            uint64_t v100 = &v73[16 * v76];
            uint64_t v102 = *(void *)v100;
            uint64_t v101 = *((void *)v100 + 1);
            BOOL v87 = __OFSUB__(v101, v102);
            uint64_t v103 = v101 - v102;
            if (v87) {
              goto LABEL_150;
            }
            if (__OFADD__(v98, v103)) {
              goto LABEL_151;
            }
            if (v98 + v103 >= v79)
            {
              BOOL v104 = v79 < v103;
LABEL_100:
              if (v104) {
                unint64_t v76 = v88;
              }
              goto LABEL_102;
            }
LABEL_94:
            if (v99) {
              goto LABEL_146;
            }
            long long v107 = &v73[16 * v76];
            uint64_t v109 = *(void *)v107;
            uint64_t v108 = *((void *)v107 + 1);
            BOOL v87 = __OFSUB__(v108, v109);
            uint64_t v110 = v108 - v109;
            if (v87) {
              goto LABEL_149;
            }
            if (v110 < v98) {
              goto LABEL_111;
            }
LABEL_102:
            unint64_t v115 = v76 - 1;
            if (v76 - 1 >= v72) {
              goto LABEL_134;
            }
            if (!v156) {
              goto LABEL_168;
            }
            long long v116 = &v73[16 * v115];
            uint64_t v117 = *(void *)v116;
            unint64_t v118 = v76;
            long long v119 = &v73[16 * v76];
            uint64_t v120 = *((void *)v119 + 1);
            long long v121 = (char *)(v156 + 8 * *(void *)v116);
            long long v122 = (char *)(v156 + 8 * *(void *)v119);
            long long v123 = (char *)(v156 + 8 * v120);
            uint64_t v124 = v157;
            swift_bridgeObjectRetain();
            long long v125 = v121;
            uint64_t v126 = v151;
            sub_7672C(v125, v122, v123, v149, v124);
            if (v126)
            {
LABEL_129:
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              v143[2] = 0;
              swift_bridgeObjectRelease_n();
              return swift_bridgeObjectRelease();
            }
            swift_bridgeObjectRelease();
            if (v120 < v117) {
              goto LABEL_135;
            }
            long long v127 = v150;
            if (v118 > *((void *)v150 + 2)) {
              goto LABEL_136;
            }
            *(void *)long long v116 = v117;
            char v73 = v158;
            *(void *)&v158[16 * v115 + 8] = v120;
            unint64_t v128 = *((void *)v127 + 2);
            if (v118 >= v128) {
              goto LABEL_137;
            }
            long long v18 = v127;
            uint64_t v151 = 0;
            unint64_t v72 = v128 - 1;
            memmove(v119, v119 + 16, 16 * (v128 - 1 - v118));
            *((void *)v18 + 2) = v128 - 1;
            a2 = v157;
            if (v128 <= 2) {
              goto LABEL_111;
            }
          }
        }
        unint64_t v72 = 1;
LABEL_111:
        Swift::Int v8 = v147;
        uint64_t v16 = v153;
        Swift::Int v11 = v144;
        if ((uint64_t)v153 >= v147)
        {
          long long v15 = v143;
          goto LABEL_117;
        }
        goto LABEL_15;
      }
      long long v52 = v153;
      if (!v156) {
        goto LABEL_167;
      }
      *uint64_t v51 = vextq_s8(*v51, *v51, 8uLL);
      uint64_t v51 = (int8x16_t *)((char *)v51 - 8);
      a2 = v157;
      char v49 = v158 + 1;
      if (v52 == v158 + 1) {
        goto LABEL_51;
      }
    }
    __break(1u);
LABEL_131:
    __break(1u);
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
LABEL_135:
    __break(1u);
LABEL_136:
    __break(1u);
LABEL_137:
    __break(1u);
LABEL_138:
    __break(1u);
LABEL_139:
    __break(1u);
LABEL_140:
    __break(1u);
LABEL_141:
    __break(1u);
LABEL_142:
    __break(1u);
LABEL_143:
    __break(1u);
LABEL_144:
    __break(1u);
LABEL_145:
    __break(1u);
LABEL_146:
    __break(1u);
LABEL_147:
    __break(1u);
LABEL_148:
    __break(1u);
LABEL_149:
    __break(1u);
LABEL_150:
    __break(1u);
LABEL_151:
    __break(1u);
LABEL_152:
    __break(1u);
    goto LABEL_153;
  }
  if (v8 < 0) {
    goto LABEL_163;
  }
  if (v8)
  {
    swift_bridgeObjectRetain();
    sub_76CC4(0, v8, 1, a1, a2);
  }
  return swift_bridgeObjectRelease_n();
}

char *sub_75E24(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a2 - a1;
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_14;
  }
  uint64_t v7 = *v3;
  uint64_t v8 = v7 + 32 + 152 * a1;
  uint64_t result = (char *)swift_arrayDestroy();
  BOOL v10 = __OFSUB__(a3, v4);
  uint64_t v11 = a3 - v4;
  if (v10)
  {
LABEL_14:
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
    goto LABEL_17;
  }
  if (!v11) {
    goto LABEL_11;
  }
  uint64_t v12 = *(void *)(v7 + 16);
  BOOL v10 = __OFSUB__(v12, a2);
  uint64_t v13 = v12 - a2;
  if (v10) {
    goto LABEL_15;
  }
  if (v13 < 0)
  {
LABEL_18:
    uint64_t result = (char *)sub_1FC2B0();
    __break(1u);
    return result;
  }
  uint64_t result = (char *)(v8 + 152 * a3);
  long long v14 = (char *)(v7 + 32 + 152 * a2);
  size_t v15 = 152 * v13;
  if (result != v14 || result >= &v14[v15]) {
    uint64_t result = (char *)memmove(result, v14, v15);
  }
  uint64_t v16 = *(void *)(v7 + 16);
  BOOL v10 = __OFADD__(v16, v11);
  uint64_t v17 = v16 + v11;
  if (v10) {
    goto LABEL_16;
  }
  *(void *)(v7 + 16) = v17;
LABEL_11:
  if (a3 > 0)
  {
LABEL_17:
    __break(1u);
    goto LABEL_18;
  }
  return result;
}

void *sub_75F4C(void *result)
{
  uint64_t v3 = v1[2];
  unint64_t v2 = v1[3];
  uint64_t v4 = (v2 >> 1) - v3;
  if (__OFSUB__(v2 >> 1, v3)) {
    goto LABEL_56;
  }
  uint64_t v49 = result[2];
  uint64_t v50 = result[1];
  uint64_t v5 = result[4];
  uint64_t v6 = result[3] >> 1;
  if (v5 == v6)
  {
    sub_7D328((uint64_t)v65);
    sub_55844((uint64_t)v65, (uint64_t)__dst, &qword_26D9E0);
  }
  else
  {
    if (v5 < result[2] || v5 >= v6) {
      goto LABEL_57;
    }
    uint64_t v8 = (_OWORD *)(v50 + 152 * v5);
    long long v9 = v8[1];
    v65[0] = *v8;
    v65[1] = v9;
    long long v10 = v8[2];
    long long v11 = v8[3];
    long long v12 = v8[5];
    v65[4] = v8[4];
    v65[5] = v12;
    v65[2] = v10;
    v65[3] = v11;
    long long v13 = v8[6];
    long long v14 = v8[7];
    long long v15 = v8[8];
    char v66 = *((unsigned char *)v8 + 144);
    v65[7] = v14;
    v65[8] = v15;
    v65[6] = v13;
    memmove(__dst, v8, 0x91uLL);
    ++v5;
    AuthorRecommendationSource.id.getter(__dst);
    sub_54834((uint64_t)v65);
  }
  sub_55844((uint64_t)__dst, (uint64_t)v64, &qword_26D9E0);
  sub_55844((uint64_t)v64, (uint64_t)v65, &qword_26D9E0);
  uint64_t result = (void *)sub_7D310((uint64_t)v65);
  if (result != 1)
  {
    uint64_t v51 = v1;
    while (1)
    {
      if (__OFADD__(v4, 1))
      {
        __break(1u);
LABEL_49:
        __break(1u);
LABEL_50:
        __break(1u);
LABEL_51:
        __break(1u);
LABEL_52:
        __break(1u);
LABEL_53:
        __break(1u);
        goto LABEL_54;
      }
      uint64_t v63 = sub_74348((void *)v4, v4 + 1, *v1, v1[1], v3, v2);
      uint64_t v16 = sub_7456C();
      sub_73F60((uint64_t *)&v63, v4, 0, (void (*)(uint64_t, uint64_t))v16);
      swift_release();
      uint64_t result = (void *)swift_release();
      uint64_t v18 = v1[2];
      unint64_t v17 = v1[3];
      if (__OFSUB__(v17 >> 1, v18)) {
        goto LABEL_49;
      }
      unint64_t v52 = v17 >> 1;
      uint64_t v53 = v1[2];
      uint64_t v54 = v1[1];
      uint64_t v55 = (v17 >> 1) - v18;
      uint64_t v56 = v1[3];
      if ((v17 & 1) == 0) {
        break;
      }
      sub_1FC730();
      swift_unknownObjectRetain();
      Swift::Int v19 = (void *)swift_dynamicCastClass();
      uint64_t v20 = v5;
      if (!v19)
      {
        swift_unknownObjectRelease();
        Swift::Int v19 = _swiftEmptyArrayStorage;
      }
      uint64_t v21 = v19[2];
      uint64_t v22 = 152 * v18;
      if ((void *)(v54 + v22 + 152 * v55) == &v19[19 * v21 + 4])
      {
        unint64_t v24 = v19[3];
        uint64_t result = (void *)swift_release();
        uint64_t v25 = (v24 >> 1) - v21;
        uint64_t v23 = v55 + v25;
        if (__OFADD__(v55, v25)) {
          goto LABEL_55;
        }
        goto LABEL_23;
      }
      swift_release();
      uint64_t v23 = v55;
LABEL_24:
      sub_55844((uint64_t)__dst, (uint64_t)v61, &qword_26D9E0);
      sub_55844((uint64_t)v61, (uint64_t)v62, &qword_26D9E0);
      uint64_t result = (void *)sub_7D310((uint64_t)v62);
      if (result != 1 && v4 < v23)
      {
        uint64_t v5 = v20;
        uint64_t v26 = v54 + v22;
        while (1)
        {
          uint64_t v27 = v26 + 152 * v4;
          uint64_t v28 = v4 + 1;
          while (1)
          {
            uint64_t v4 = v28;
            uint64_t result = (void *)sub_55844((uint64_t)v61, (uint64_t)v59, &qword_26D9E0);
            long long v29 = v59[1];
            *(_OWORD *)uint64_t v27 = v59[0];
            *(_OWORD *)(v27 + 16) = v29;
            long long v30 = v59[5];
            long long v32 = v59[2];
            long long v31 = v59[3];
            *(_OWORD *)(v27 + 64) = v59[4];
            *(_OWORD *)(v27 + 80) = v30;
            *(_OWORD *)(v27 + 32) = v32;
            *(_OWORD *)(v27 + 48) = v31;
            long long v34 = v59[7];
            long long v33 = v59[8];
            long long v35 = v59[6];
            *(unsigned char *)(v27 + 144) = v60;
            *(_OWORD *)(v27 + 112) = v34;
            *(_OWORD *)(v27 + 128) = v33;
            *(_OWORD *)(v27 + 96) = v35;
            if (v5 != v6) {
              break;
            }
            sub_7D328((uint64_t)v57);
            sub_55844((uint64_t)v57, (uint64_t)__dst, &qword_26D9E0);
            sub_55844((uint64_t)__dst, (uint64_t)v61, &qword_26D9E0);
            sub_55844((uint64_t)v61, (uint64_t)v62, &qword_26D9E0);
            uint64_t result = (void *)sub_7D310((uint64_t)v62);
            if (result != 1)
            {
              v27 += 152;
              uint64_t v28 = v4 + 1;
              if (v4 < v23) {
                continue;
              }
            }
            uint64_t v5 = v6;
            goto LABEL_39;
          }
          if (v20 < v49 || v5 >= v6) {
            break;
          }
          long long v36 = (_OWORD *)(v50 + 152 * v5);
          long long v37 = v36[1];
          v57[0] = *v36;
          v57[1] = v37;
          long long v38 = v36[2];
          long long v39 = v36[3];
          long long v40 = v36[5];
          v57[4] = v36[4];
          v57[5] = v40;
          v57[2] = v38;
          v57[3] = v39;
          long long v41 = v36[6];
          long long v42 = v36[7];
          long long v43 = v36[8];
          char v58 = *((unsigned char *)v36 + 144);
          v57[7] = v42;
          v57[8] = v43;
          v57[6] = v41;
          memmove(__dst, v36, 0x91uLL);
          ++v5;
          AuthorRecommendationSource.id.getter(__dst);
          sub_54834((uint64_t)v57);
          sub_55844((uint64_t)__dst, (uint64_t)v61, &qword_26D9E0);
          sub_55844((uint64_t)v61, (uint64_t)v62, &qword_26D9E0);
          uint64_t result = (void *)sub_7D310((uint64_t)v62);
          if (result == 1 || v4 >= v23) {
            goto LABEL_39;
          }
        }
LABEL_54:
        __break(1u);
LABEL_55:
        __break(1u);
LABEL_56:
        __break(1u);
LABEL_57:
        __break(1u);
        return result;
      }
      uint64_t v5 = v20;
LABEL_39:
      uint64_t v44 = v4 - v55;
      if (__OFSUB__(v4, v55)) {
        goto LABEL_50;
      }
      uint64_t v1 = v51;
      uint64_t v3 = v53;
      if (v44)
      {
        sub_1FC730();
        swift_unknownObjectRetain();
        uint64_t result = (void *)swift_dynamicCastClass();
        if (!result)
        {
          swift_unknownObjectRelease();
          uint64_t result = _swiftEmptyArrayStorage;
        }
        uint64_t v45 = result[2];
        BOOL v46 = __OFADD__(v45, v44);
        uint64_t v47 = v45 + v44;
        if (v46) {
          goto LABEL_51;
        }
        result[2] = v47;
        uint64_t result = (void *)swift_release();
        unint64_t v48 = v52 + v44;
        if (__OFADD__(v52, v44)) {
          goto LABEL_52;
        }
        if ((v48 & 0x8000000000000000) != 0) {
          goto LABEL_53;
        }
        uint64_t v56 = v56 & 1 | (2 * v48);
        v51[3] = v56;
      }
      sub_55844((uint64_t)__dst, (uint64_t)v64, &qword_26D9E0);
      sub_55844((uint64_t)v64, (uint64_t)v65, &qword_26D9E0);
      uint64_t result = (void *)sub_7D310((uint64_t)v65);
      unint64_t v2 = v56;
      if (result == 1) {
        return result;
      }
    }
    uint64_t v22 = 152 * v18;
    uint64_t v23 = v55;
LABEL_23:
    uint64_t v20 = v5;
    goto LABEL_24;
  }
  return result;
}

void *sub_76434(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v5 = a4 >> 1;
  uint64_t v6 = (a4 >> 1) - a3;
  if (__OFSUB__(a4 >> 1, a3))
  {
    __break(1u);
    goto LABEL_38;
  }
  uint64_t v8 = v4[2];
  unint64_t v7 = v4[3];
  int64_t v9 = (v7 >> 1) - v8;
  if (__OFSUB__(v7 >> 1, v8))
  {
LABEL_38:
    __break(1u);
    goto LABEL_39;
  }
  if ((v7 & 1) == 0)
  {
LABEL_8:
    int64_t v15 = v9;
    goto LABEL_10;
  }
  uint64_t v12 = v4[1];
  sub_1FC730();
  swift_unknownObjectRetain();
  long long v13 = (void *)swift_dynamicCastClass();
  if (!v13)
  {
    swift_unknownObjectRelease();
    long long v13 = _swiftEmptyArrayStorage;
  }
  uint64_t v14 = v13[2];
  if ((void *)(v12 + 152 * v8 + 152 * v9) != &v13[19 * v14 + 4])
  {
    swift_release();
    goto LABEL_8;
  }
  unint64_t v16 = v13[3];
  swift_release();
  uint64_t v17 = (v16 >> 1) - v14;
  BOOL v18 = __OFADD__(v9, v17);
  int64_t v15 = v9 + v17;
  if (v18)
  {
LABEL_45:
    __break(1u);
    goto LABEL_46;
  }
LABEL_10:
  int64_t v19 = v9 + v6;
  if (__OFADD__(v9, v6))
  {
LABEL_39:
    __break(1u);
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v15 < v19)
  {
    if (v15 + 0x4000000000000000 < 0)
    {
LABEL_43:
      __break(1u);
      goto LABEL_44;
    }
    uint64_t v20 = 2 * v15;
    if (v20 > v19) {
      int64_t v19 = v20;
    }
  }
  uint64_t result = (void *)sub_73CC4(v19);
  uint64_t v23 = v4[2];
  unint64_t v22 = v4[3];
  uint64_t v24 = (v22 >> 1) - v23;
  if (__OFSUB__(v22 >> 1, v23)) {
    goto LABEL_40;
  }
  unint64_t v25 = v4[1] + 152 * v23 + 152 * v24;
  if ((v22 & 1) == 0)
  {
LABEL_21:
    uint64_t v28 = v24;
    goto LABEL_23;
  }
  sub_1FC730();
  swift_unknownObjectRetain();
  uint64_t v26 = (void *)swift_dynamicCastClass();
  if (!v26)
  {
    swift_unknownObjectRelease();
    uint64_t v26 = _swiftEmptyArrayStorage;
  }
  uint64_t v27 = v26[2];
  if ((void *)v25 != &v26[19 * v27 + 4])
  {
    uint64_t result = (void *)swift_release();
    goto LABEL_21;
  }
  unint64_t v29 = v26[3];
  uint64_t result = (void *)swift_release();
  uint64_t v30 = (v29 >> 1) - v27;
  BOOL v18 = __OFADD__(v24, v30);
  uint64_t v28 = v24 + v30;
  if (v18)
  {
LABEL_46:
    __break(1u);
    goto LABEL_47;
  }
LABEL_23:
  uint64_t v31 = v28 - v24;
  if (__OFSUB__(v28, v24))
  {
LABEL_41:
    __break(1u);
LABEL_42:
    __break(1u);
    goto LABEL_43;
  }
  if (v5 == a3)
  {
    if (v6 <= 0)
    {
      uint64_t v6 = 0;
      unint64_t v5 = a3;
      goto LABEL_34;
    }
    goto LABEL_42;
  }
  if (v31 < v6)
  {
LABEL_44:
    __break(1u);
    goto LABEL_45;
  }
  if (v6 < 0) {
    goto LABEL_48;
  }
  unint64_t v32 = a2 + 152 * a3;
  if (v32 < v25 + 152 * v6 && v25 < v32 + 152 * v6) {
    goto LABEL_48;
  }
  uint64_t result = (void *)swift_arrayInitWithCopy();
  if (v6)
  {
    if (__OFADD__(v24, v6))
    {
LABEL_47:
      __break(1u);
LABEL_48:
      uint64_t result = (void *)sub_1FC2B0();
      __break(1u);
      return result;
    }
    uint64_t result = sub_74290((void *)(v24 + v6));
  }
LABEL_34:
  if (v6 == v31)
  {
    v35[0] = a1;
    v35[1] = a2;
    _OWORD v35[2] = a3;
    void v35[3] = a4;
    v35[4] = v5;
    return sub_75F4C(v35);
  }
  return result;
}

uint64_t sub_7672C(char *a1, char *a2, char *a3, char *a4, uint64_t a5)
{
  uint64_t v75 = a5;
  uint64_t v79 = sub_12124(&qword_26D938);
  uint64_t v74 = *(void *)(v79 - 8);
  uint64_t v9 = __chkstk_darwin(v79);
  unint64_t v72 = (char *)v67 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  char v73 = (char *)v67 - v11;
  uint64_t v12 = a2 - a1;
  uint64_t v13 = a2 - a1 + 7;
  if (a2 - a1 >= 0) {
    uint64_t v13 = a2 - a1;
  }
  uint64_t v14 = v13 >> 3;
  unint64_t v70 = a3;
  uint64_t v15 = a3 - a2;
  uint64_t v16 = a3 - a2 + 7;
  if (a3 - a2 >= 0) {
    uint64_t v16 = a3 - a2;
  }
  uint64_t v17 = v16 >> 3;
  uint64_t v82 = a1;
  long long v81 = a4;
  if (v14 < v16 >> 3)
  {
    if (v12 < -7) {
      goto LABEL_63;
    }
    if (a4 != a1 || &a1[8 * v14] <= a4) {
      memmove(a4, a1, 8 * v14);
    }
    unint64_t v71 = &a4[8 * v14];
    char v80 = v71;
    uint64_t v18 = v75;
    if (v12 >= 8 && a2 < v70)
    {
      unint64_t v76 = (char *)(v74 + 16);
      unint64_t v69 = v74 + 8;
      while (1)
      {
        if (!*(void *)(v18 + 16))
        {
          __break(1u);
          goto LABEL_56;
        }
        uint64_t v78 = a1;
        uint64_t v19 = *(void *)a4;
        uint64_t v20 = sub_56168(*(void *)a2);
        if ((v21 & 1) == 0) {
          goto LABEL_57;
        }
        unint64_t v22 = a2;
        uint64_t v77 = a4;
        uint64_t v23 = v74;
        uint64_t v24 = *(void *)(v74 + 72);
        uint64_t v25 = *(void *)(v18 + 56) + v24 * v20;
        uint64_t v26 = v18;
        uint64_t v27 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
        uint64_t v28 = v73;
        uint64_t v29 = v79;
        v27(v73, v25, v79);
        uint64_t v30 = sub_1FB380();
        uint64_t v31 = *(void (**)(char *, uint64_t))(v23 + 8);
        v31(v28, v29);
        if (!*(void *)(v26 + 16)) {
          goto LABEL_59;
        }
        uint64_t v32 = sub_56168(v19);
        if ((v33 & 1) == 0) {
          goto LABEL_61;
        }
        uint64_t v34 = *(void *)(v26 + 56) + v32 * v24;
        long long v35 = v72;
        uint64_t v36 = v79;
        v27(v72, v34, v79);
        uint64_t v37 = sub_1FB380();
        v31(v35, v36);
        if (v37 >= v30)
        {
          long long v40 = v77;
          long long v39 = v78;
          if (v78 != v77) {
            *(void *)uint64_t v78 = *(void *)v77;
          }
          a4 = v40 + 8;
          long long v81 = a4;
          long long v38 = v22;
        }
        else
        {
          long long v38 = v22 + 8;
          a4 = v77;
          long long v39 = v78;
          if (v78 >= v22 && v78 < v38)
          {
            uint64_t v18 = v75;
            if (v78 != v22) {
              *(void *)uint64_t v78 = *(void *)v22;
            }
            goto LABEL_27;
          }
          *(void *)uint64_t v78 = *(void *)v22;
        }
        uint64_t v18 = v75;
LABEL_27:
        a1 = v39 + 8;
        uint64_t v82 = a1;
        if (a4 < v71)
        {
          a2 = v38;
          if (v38 < v70) {
            continue;
          }
        }
        break;
      }
    }
LABEL_54:
    sub_704E8((void **)&v82, (const void **)&v81, &v80);
    return 1;
  }
  if (v15 < -7) {
    goto LABEL_63;
  }
  uint64_t v41 = v75;
  if (a4 != a2 || &a2[8 * v17] <= a4) {
    memmove(a4, a2, 8 * v17);
  }
  long long v42 = &a4[8 * v17];
  char v80 = v42;
  uint64_t v82 = a2;
  if (v15 < 8 || a1 >= a2) {
    goto LABEL_54;
  }
  unint64_t v71 = (char *)(v74 + 16);
  long long v43 = v70 - 8;
  uint64_t v77 = a4;
  uint64_t v78 = a1;
  v67[1] = v74 + 8;
  while (*(void *)(v41 + 16))
  {
    uint64_t v44 = a2 - 8;
    uint64_t v45 = *((void *)a2 - 1);
    uint64_t v46 = sub_56168(*((void *)v42 - 1));
    if ((v47 & 1) == 0) {
      goto LABEL_58;
    }
    uint64_t v68 = v42 - 8;
    unint64_t v69 = (unint64_t)v42;
    unint64_t v76 = v43;
    unint64_t v70 = a2;
    uint64_t v48 = *(void *)(v41 + 56);
    uint64_t v49 = v41;
    uint64_t v50 = v73;
    uint64_t v51 = v74;
    uint64_t v52 = *(void *)(v74 + 72);
    uint64_t v53 = *(void (**)(char *, uint64_t, uint64_t))(v74 + 16);
    uint64_t v54 = v79;
    v53(v73, v48 + v52 * v46, v79);
    uint64_t v55 = sub_1FB380();
    uint64_t v56 = *(void (**)(char *, uint64_t))(v51 + 8);
    v56(v50, v54);
    if (!*(void *)(v49 + 16)) {
      goto LABEL_60;
    }
    uint64_t v57 = sub_56168(v45);
    if ((v58 & 1) == 0) {
      goto LABEL_62;
    }
    uint64_t v59 = v76 + 8;
    uint64_t v60 = *(void *)(v49 + 56) + v57 * v52;
    uint64_t v61 = v72;
    uint64_t v62 = v79;
    v53(v72, v60, v79);
    uint64_t v63 = sub_1FB380();
    v56(v61, v62);
    if (v63 >= v55)
    {
      long long v42 = v68;
      char v80 = v68;
      char v64 = v76;
      uint64_t v65 = v77;
      uint64_t v44 = v70;
      if ((unint64_t)v59 >= v69 && (unint64_t)v76 < v69)
      {
        uint64_t v41 = v75;
        if (v59 != (char *)v69) {
          *(void *)unint64_t v76 = *(void *)v68;
        }
        goto LABEL_52;
      }
      *(void *)unint64_t v76 = *(void *)v68;
    }
    else
    {
      long long v42 = (char *)v69;
      char v64 = v76;
      uint64_t v65 = v77;
      if (v59 != v70 || v76 >= v70) {
        *(void *)unint64_t v76 = *(void *)v44;
      }
      uint64_t v82 = v44;
    }
    uint64_t v41 = v75;
LABEL_52:
    if (v42 > v65)
    {
      long long v43 = v64 - 8;
      a2 = v44;
      if (v44 > v78) {
        continue;
      }
    }
    goto LABEL_54;
  }
LABEL_56:
  __break(1u);
LABEL_57:
  __break(1u);
LABEL_58:
  __break(1u);
LABEL_59:
  __break(1u);
LABEL_60:
  __break(1u);
LABEL_61:
  __break(1u);
LABEL_62:
  __break(1u);
LABEL_63:
  swift_bridgeObjectRelease();
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_76CC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, uint64_t a5)
{
  uint64_t v33 = a1;
  uint64_t v43 = sub_12124(&qword_26D938);
  uint64_t v38 = *(void *)(v43 - 8);
  uint64_t v9 = __chkstk_darwin(v43);
  uint64_t v36 = (char *)&v31 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v31 - v12;
  uint64_t v39 = a3;
  uint64_t v32 = a2;
  if (a3 != a2)
  {
    uint64_t v13 = *a4;
    uint64_t v41 = v38 + 8;
    uint64_t v42 = v38 + 16;
    uint64_t v35 = v13;
    uint64_t v14 = (int8x16_t *)(v13 + 8 * v39 - 8);
LABEL_5:
    uint64_t v15 = v33;
    uint64_t v34 = v14;
    while (*(void *)(a5 + 16))
    {
      uint64_t v16 = v14->i64[0];
      uint64_t result = sub_56168(v14->i64[1]);
      if ((v17 & 1) == 0) {
        goto LABEL_15;
      }
      uint64_t v40 = v15;
      uint64_t v19 = v37;
      uint64_t v18 = v38;
      uint64_t v20 = *(void *)(v38 + 72);
      char v21 = *(void (**)(char *, uint64_t, uint64_t))(v38 + 16);
      uint64_t v22 = v43;
      v21(v37, *(void *)(a5 + 56) + v20 * result, v43);
      uint64_t v23 = sub_1FB380();
      uint64_t v24 = *(uint64_t (**)(char *, uint64_t))(v18 + 8);
      uint64_t result = v24(v19, v22);
      if (!*(void *)(a5 + 16)) {
        goto LABEL_16;
      }
      uint64_t result = sub_56168(v16);
      if ((v25 & 1) == 0) {
        goto LABEL_17;
      }
      uint64_t v26 = *(void *)(a5 + 56) + result * v20;
      uint64_t v27 = v36;
      uint64_t v28 = v43;
      v21(v36, v26, v43);
      uint64_t v29 = sub_1FB380();
      uint64_t result = v24(v27, v28);
      uint64_t v30 = v40;
      if (v29 < v23)
      {
        if (!v35) {
          goto LABEL_18;
        }
        *uint64_t v14 = vextq_s8(*v14, *v14, 8uLL);
        uint64_t v14 = (int8x16_t *)((char *)v14 - 8);
        uint64_t v15 = v30 + 1;
        if (v39 != v15) {
          continue;
        }
      }
      uint64_t v14 = (int8x16_t *)&v34->u64[1];
      if (++v39 == v32) {
        return result;
      }
      goto LABEL_5;
    }
    __break(1u);
LABEL_15:
    __break(1u);
LABEL_16:
    __break(1u);
LABEL_17:
    __break(1u);
LABEL_18:
    __break(1u);
  }
  return result;
}

uint64_t sub_76F4C(uint64_t *a1, uint64_t a2)
{
  uint64_t v4 = *a1;
  swift_bridgeObjectRetain_n();
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_124764(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  swift_bridgeObjectRetain();
  sub_752C0(v7, a2);
  swift_bridgeObjectRelease();
  *a1 = v4;
  return swift_bridgeObjectRelease_n();
}

char *sub_76FF0(uint64_t a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v168 = a3;
  uint64_t v4 = sub_12124(&qword_26D958);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  long long v163 = (char *)&v160 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v162 = (uint64_t)&v160 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v160 - v10;
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v14 = (char *)&v160 - v13;
  uint64_t v15 = __chkstk_darwin(v12);
  long long v165 = (char *)&v160 - v16;
  uint64_t v17 = __chkstk_darwin(v15);
  long long v164 = (char *)&v160 - v18;
  uint64_t v19 = __chkstk_darwin(v17);
  uint64_t v161 = (uint64_t)&v160 - v20;
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v23 = (char *)&v160 - v22;
  uint64_t v24 = __chkstk_darwin(v21);
  uint64_t v26 = (char *)&v160 - v25;
  uint64_t v27 = __chkstk_darwin(v24);
  uint64_t v29 = (char *)&v160 - v28;
  uint64_t v30 = __chkstk_darwin(v27);
  uint64_t v166 = (uint64_t)&v160 - v31;
  __chkstk_darwin(v30);
  uint64_t v167 = (char *)&v160 - v32;
  int v33 = *a2;
  uint64_t v34 = swift_bridgeObjectRetain();
  uint64_t v35 = sub_71C0C(v34, (uint64_t (*)(char *, unint64_t, uint64_t))sub_720F0);
  swift_bridgeObjectRelease();
  uint64_t v36 = swift_bridgeObjectRetain();
  uint64_t v37 = sub_71C0C(v36, (uint64_t (*)(char *, unint64_t, uint64_t))sub_71F08);
  swift_bridgeObjectRelease();
  if (v33 == 7)
  {
    swift_release();
    if (*(void *)(v35 + 16) >= v168) {
      unint64_t v51 = v168;
    }
    else {
      unint64_t v51 = *(void *)(v35 + 16);
    }
    uint64_t v52 = sub_4ABEC(v35);
    swift_release();
    if ((v51 & 0x8000000000000000) != 0) {
      goto LABEL_133;
    }
    if (v52[2] < v51)
    {
LABEL_135:
      __break(1u);
      goto LABEL_136;
    }
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v53 = (void *)swift_dynamicCastClass();
    if (!v53)
    {
      swift_release();
      uint64_t v53 = _swiftEmptyArrayStorage;
    }
    uint64_t v54 = v53[2];
    swift_release();
    if (v54 != v51) {
      goto LABEL_139;
    }
    unint64_t v51 = swift_dynamicCastClass();
    swift_release();
    if (!v51)
    {
      swift_release();
      return (char *)_swiftEmptyArrayStorage;
    }
    return (char *)v51;
  }
  if (v33 == 5)
  {
    uint64_t v44 = sub_65900((uint64_t)_swiftEmptyDictionarySingleton, v35, sub_7D29C);
    uint64_t v45 = sub_6C3D8(v44);
    swift_release();
    swift_bridgeObjectRelease();
    uint64_t v46 = sub_65900((uint64_t)_swiftEmptyDictionarySingleton, v37, sub_7D29C);
    uint64_t v47 = sub_6C3D8(v46);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain_n();
    unint64_t v171 = sub_4ABEC(v45);
    sub_76F4C((uint64_t *)&v171, v45);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v48 = v171[2];
    uint64_t v49 = (uint64_t)v165;
    if (v48) {
      uint64_t v50 = v171[4];
    }
    else {
      uint64_t v50 = 0;
    }
    swift_release();
    swift_bridgeObjectRetain_n();
    unint64_t v171 = sub_4ABEC(v47);
    sub_76F4C((uint64_t *)&v171, v47);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v63 = v171[2];
    if (v63)
    {
      uint64_t v64 = v171[4];
      swift_release();
      if (!v48) {
        goto LABEL_47;
      }
    }
    else
    {
      uint64_t v64 = 0;
      swift_release();
      if (!v48) {
        goto LABEL_47;
      }
    }
    if (*(void *)(v45 + 16))
    {
      uint64_t v65 = sub_56168(v50);
      if (v66)
      {
        uint64_t v67 = v65;
        uint64_t v68 = *(void *)(v45 + 56);
        uint64_t v69 = sub_12124(&qword_26D938);
        uint64_t v70 = *(void *)(v69 - 8);
        uint64_t v71 = v70;
        uint64_t v72 = v68 + *(void *)(v70 + 72) * v67;
        uint64_t v73 = (uint64_t)v164;
        uint64_t v49 = (uint64_t)v165;
        (*(void (**)(char *, uint64_t, uint64_t))(v70 + 16))(v164, v72, v69);
        (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v71 + 56))(v73, 0, 1, v69);
        goto LABEL_48;
      }
    }
LABEL_47:
    uint64_t v74 = sub_12124(&qword_26D938);
    uint64_t v73 = (uint64_t)v164;
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v74 - 8) + 56))(v164, 1, 1, v74);
LABEL_48:
    swift_bridgeObjectRelease();
    if (v63 && *(void *)(v47 + 16) && (uint64_t v75 = sub_56168(v64), (v76 & 1) != 0))
    {
      uint64_t v77 = v75;
      uint64_t v78 = *(void *)(v47 + 56);
      uint64_t v79 = sub_12124(&qword_26D938);
      uint64_t v80 = *(void *)(v79 - 8);
      uint64_t v81 = v80;
      uint64_t v82 = v78 + *(void *)(v80 + 72) * v77;
      uint64_t v73 = (uint64_t)v164;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v80 + 16))(v49, v82, v79);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v81 + 56))(v49, 0, 1, v79);
    }
    else
    {
      uint64_t v83 = sub_12124(&qword_26D938);
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v49, 1, 1, v83);
    }
    swift_bridgeObjectRelease();
    sub_5606C(v73, (uint64_t)v14, &qword_26D958);
    uint64_t v52 = (void *)sub_12124(&qword_26D938);
    uint64_t v84 = *(v52 - 1);
    uint64_t v85 = *(unsigned int (**)(char *, uint64_t, void *))(v84 + 48);
    if (v85(v14, 1, v52) == 1)
    {
      sub_55F38((uint64_t)v14, &qword_26D958);
      uint64_t v86 = 0;
      BOOL v87 = _swiftEmptyArrayStorage;
      uint64_t v167 = (char *)&_swiftEmptyArrayStorage[4];
      uint64_t v88 = 1;
      uint64_t v89 = (uint64_t)v163;
    }
    else
    {
      sub_5606C(v73, (uint64_t)v11, &qword_26D958);
      if (v85(v11, 1, v52) == 1)
      {
        sub_55F38((uint64_t)v11, &qword_26D958);
        uint64_t v90 = v168 & (v168 >> 63);
      }
      else
      {
        uint64_t v113 = sub_1FB380();
        (*(void (**)(char *, void *))(v84 + 8))(v11, v52);
        uint64_t v90 = v168;
        if (v113 < v168) {
          uint64_t v90 = v113;
        }
      }
      uint64_t v89 = (uint64_t)v163;
      if (v90 < 0) {
        goto LABEL_146;
      }
      uint64_t v169 = 0;
      uint64_t v170 = v90;
      sub_52CC0(&qword_26D9D8, &qword_26D960);
      sub_1FB3B0();
      BOOL v87 = v171;
      uint64_t v167 = v172;
      uint64_t v86 = v173;
      uint64_t v88 = v174;
      (*(void (**)(char *, void *))(v84 + 8))(v14, v52);
    }
    uint64_t v114 = v162;
    sub_5606C(v49, v162, &qword_26D958);
    if (v85((char *)v114, 1, v52) == 1)
    {
      sub_55F38(v114, &qword_26D958);
      uint64_t v115 = 0;
      long long v116 = (char *)&_swiftEmptyArrayStorage[4];
      unint64_t v117 = 1;
    }
    else
    {
      sub_5606C(v49, v89, &qword_26D958);
      uint64_t v118 = v86;
      if (v85((char *)v89, 1, v52) == 1)
      {
        sub_55F38(v89, &qword_26D958);
        uint64_t v119 = v168 & (v168 >> 63);
      }
      else
      {
        uint64_t v120 = sub_1FB380();
        (*(void (**)(uint64_t, void *))(v84 + 8))(v89, v52);
        uint64_t v119 = v168;
        if (v120 < v168) {
          uint64_t v119 = v120;
        }
      }
      if (v119 < 0) {
        goto LABEL_148;
      }
      uint64_t v169 = 0;
      uint64_t v170 = v119;
      sub_52CC0(&qword_26D9D8, &qword_26D960);
      sub_1FB3B0();
      long long v116 = v172;
      uint64_t v115 = v173;
      unint64_t v117 = v174;
      (*(void (**)(uint64_t, void *))(v84 + 8))(v114, v52);
      uint64_t v86 = v118;
      uint64_t v49 = (uint64_t)v165;
    }
    unint64_t v171 = v87;
    unint64_t v172 = v167;
    uint64_t v173 = v86;
    unint64_t v174 = v88;
    swift_unknownObjectRetain();
    uint64_t v121 = swift_unknownObjectRetain();
    unint64_t v51 = (unint64_t)&v171;
    sub_76434(v121, (uint64_t)v116, v115, v117);
    swift_unknownObjectRelease();
    uint64_t v122 = v173;
    int64_t v123 = v174 >> 1;
    uint64_t v124 = (v174 >> 1) - v173;
    if (__OFSUB__(v174 >> 1, v173))
    {
LABEL_137:
      __break(1u);
      goto LABEL_138;
    }
    uint64_t v52 = v171;
    if (v124)
    {
      long long v125 = v172;
      unint64_t v171 = _swiftEmptyArrayStorage;
      sub_46538(0, v124 & ~(v124 >> 63), 0);
      if ((v124 & 0x8000000000000000) == 0)
      {
        unint64_t v51 = (unint64_t)v171;
        if (v122 <= v123) {
          int64_t v126 = v123;
        }
        else {
          int64_t v126 = v122;
        }
        uint64_t v127 = v126 - v122;
        unint64_t v128 = &v125[152 * v122];
        while (v127)
        {
          uint64_t v129 = *(void *)v128;
          unint64_t v171 = (void *)v51;
          unint64_t v131 = *(void *)(v51 + 16);
          unint64_t v130 = *(void *)(v51 + 24);
          if (v131 >= v130 >> 1)
          {
            sub_46538(v130 > 1, v131 + 1, 1);
            unint64_t v51 = (unint64_t)v171;
          }
          *(void *)(v51 + 16) = v131 + 1;
          *(void *)(v51 + 8 * v131 + 32) = v129;
          --v127;
          v128 += 152;
          if (!--v124)
          {
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            swift_unknownObjectRelease();
            uint64_t v49 = (uint64_t)v165;
            goto LABEL_96;
          }
        }
        __break(1u);
        goto LABEL_132;
      }
      __break(1u);
      goto LABEL_145;
    }
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_96:
    uint64_t v132 = v164;
    sub_55F38(v49, &qword_26D958);
    uint64_t v133 = (uint64_t)v132;
    goto LABEL_129;
  }
  if (v33 != 3)
  {
    if (*(void *)(v35 + 16) >= v168) {
      unint64_t v51 = v168;
    }
    else {
      unint64_t v51 = *(void *)(v35 + 16);
    }
    if (*(void *)(v37 + 16) >= v168) {
      unint64_t v55 = v168;
    }
    else {
      unint64_t v55 = *(void *)(v37 + 16);
    }
    uint64_t v52 = sub_4ABEC(v35);
    swift_release();
    if ((v51 & 0x8000000000000000) != 0) {
      goto LABEL_134;
    }
    if (v52[2] < v51)
    {
LABEL_136:
      __break(1u);
      goto LABEL_137;
    }
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v56 = (void *)swift_dynamicCastClass();
    if (!v56)
    {
      swift_release();
      uint64_t v56 = _swiftEmptyArrayStorage;
    }
    uint64_t v57 = v56[2];
    swift_release();
    if (v57 == v51)
    {
      char v58 = (void *)swift_dynamicCastClass();
      if (!v58)
      {
        swift_release();
        char v58 = _swiftEmptyArrayStorage;
      }
    }
    else
    {
      swift_release();
      char v58 = sub_4B17C((uint64_t)v52, (uint64_t)(v52 + 4), 0, (2 * v51) | 1);
    }
    swift_release();
    uint64_t v59 = sub_4ABEC(v37);
    swift_release();
    if ((v55 & 0x8000000000000000) != 0)
    {
      __break(1u);
    }
    else if (v59[2] >= v55)
    {
      swift_unknownObjectRetain_n();
      uint64_t v60 = (void *)swift_dynamicCastClass();
      if (!v60)
      {
        swift_release();
        uint64_t v60 = _swiftEmptyArrayStorage;
      }
      uint64_t v61 = v60[2];
      swift_release();
      if (v61 == v55)
      {
        uint64_t v62 = (void *)swift_dynamicCastClass();
        if (!v62)
        {
          swift_release();
          uint64_t v62 = _swiftEmptyArrayStorage;
        }
        goto LABEL_38;
      }
LABEL_143:
      swift_release();
      uint64_t v62 = sub_4B17C((uint64_t)v59, (uint64_t)(v59 + 4), 0, (2 * v55) | 1);
LABEL_38:
      swift_release();
      unint64_t v171 = v58;
      sub_A98F4((uint64_t)v62);
      return (char *)v171;
    }
    __break(1u);
    goto LABEL_143;
  }
  uint64_t v38 = sub_65630((uint64_t)_swiftEmptyDictionarySingleton, v35, sub_7D29C);
  uint64_t v39 = sub_6C3D8(v38);
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v40 = sub_65630((uint64_t)_swiftEmptyDictionarySingleton, v37, sub_7D29C);
  uint64_t v41 = sub_6C3D8(v40);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  unint64_t v171 = sub_4ABEC(v39);
  sub_76F4C((uint64_t *)&v171, v39);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v42 = v171[2];
  if (v42) {
    uint64_t v43 = v171[4];
  }
  else {
    uint64_t v43 = 0;
  }
  swift_release();
  swift_bridgeObjectRetain_n();
  unint64_t v171 = sub_4ABEC(v41);
  sub_76F4C((uint64_t *)&v171, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v91 = v171[2];
  if (v91) {
    uint64_t v92 = (char *)v171[4];
  }
  else {
    uint64_t v92 = 0;
  }
  uint64_t v93 = (uint64_t)v167;
  swift_release();
  if (v42 && *(void *)(v39 + 16) && (uint64_t v94 = sub_56168(v43), (v95 & 1) != 0))
  {
    uint64_t v96 = v94;
    long long v165 = v92;
    uint64_t v97 = *(void *)(v39 + 56);
    uint64_t v98 = sub_12124(&qword_26D938);
    uint64_t v99 = *(void *)(v98 - 8);
    uint64_t v100 = v99;
    uint64_t v101 = v97 + *(void *)(v99 + 72) * v96;
    uint64_t v92 = v165;
    (*(void (**)(char *, uint64_t, uint64_t))(v99 + 16))(v167, v101, v98);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v100 + 56))(v167, 0, 1, v98);
    uint64_t v93 = (uint64_t)v167;
  }
  else
  {
    uint64_t v102 = sub_12124(&qword_26D938);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v102 - 8) + 56))(v93, 1, 1, v102);
  }
  swift_bridgeObjectRelease();
  uint64_t v103 = v166;
  if (v91 && *(void *)(v41 + 16))
  {
    uint64_t v104 = sub_56168(v92);
    if (v105)
    {
      uint64_t v106 = v104;
      uint64_t v107 = *(void *)(v41 + 56);
      uint64_t v108 = sub_12124(&qword_26D938);
      uint64_t v109 = *(void *)(v108 - 8);
      uint64_t v110 = v109;
      uint64_t v111 = v107 + *(void *)(v109 + 72) * v106;
      uint64_t v103 = v166;
      uint64_t v93 = (uint64_t)v167;
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v109 + 16))(v166, v111, v108);
      (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v110 + 56))(v103, 0, 1, v108);
    }
    else
    {
      uint64_t v134 = sub_12124(&qword_26D938);
      uint64_t v103 = v166;
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v134 - 8) + 56))(v166, 1, 1, v134);
    }
  }
  else
  {
    uint64_t v112 = sub_12124(&qword_26D938);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v112 - 8) + 56))(v103, 1, 1, v112);
  }
  swift_bridgeObjectRelease();
  sub_5606C(v93, (uint64_t)v29, &qword_26D958);
  uint64_t v135 = sub_12124(&qword_26D938);
  uint64_t v136 = *(void *)(v135 - 8);
  uint64_t v137 = *(unsigned int (**)(char *, uint64_t, uint64_t))(v136 + 48);
  if (v137(v29, 1, v135) == 1)
  {
    sub_55F38((uint64_t)v29, &qword_26D958);
    uint64_t v138 = 0;
    uint64_t v52 = _swiftEmptyArrayStorage;
    long long v164 = (unsigned char *)(&dword_0 + 1);
    long long v165 = (char *)&_swiftEmptyArrayStorage[4];
  }
  else
  {
    sub_5606C(v93, (uint64_t)v26, &qword_26D958);
    if (v137(v26, 1, v135) == 1)
    {
      sub_55F38((uint64_t)v26, &qword_26D958);
      uint64_t v139 = v168 & (v168 >> 63);
    }
    else
    {
      uint64_t v140 = sub_1FB380();
      (*(void (**)(char *, uint64_t))(v136 + 8))(v26, v135);
      uint64_t v139 = v168;
      if (v140 < v168) {
        uint64_t v139 = v140;
      }
      uint64_t v103 = v166;
    }
    if (v139 < 0) {
      goto LABEL_147;
    }
    uint64_t v169 = 0;
    uint64_t v170 = v139;
    sub_52CC0(&qword_26D9D8, &qword_26D960);
    sub_1FB3B0();
    uint64_t v52 = v171;
    uint64_t v138 = (char *)v173;
    long long v164 = (char *)v174;
    long long v165 = v172;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v29, v135);
  }
  sub_5606C(v103, (uint64_t)v23, &qword_26D958);
  if (v137(v23, 1, v135) == 1)
  {
    sub_55F38((uint64_t)v23, &qword_26D958);
    uint64_t v141 = 0;
    uint64_t v142 = (char *)&_swiftEmptyArrayStorage[4];
    unint64_t v143 = 1;
  }
  else
  {
    long long v163 = v138;
    uint64_t v144 = v161;
    sub_5606C(v103, v161, &qword_26D958);
    if (v137((char *)v144, 1, v135) == 1)
    {
      sub_55F38(v144, &qword_26D958);
      uint64_t v145 = v168 & (v168 >> 63);
    }
    else
    {
      uint64_t v146 = sub_1FB380();
      (*(void (**)(uint64_t, uint64_t))(v136 + 8))(v144, v135);
      uint64_t v145 = v168;
      if (v146 < v168) {
        uint64_t v145 = v146;
      }
    }
    if (v145 < 0) {
      goto LABEL_149;
    }
    uint64_t v169 = 0;
    uint64_t v170 = v145;
    sub_52CC0(&qword_26D9D8, &qword_26D960);
    sub_1FB3B0();
    uint64_t v142 = v172;
    uint64_t v141 = v173;
    unint64_t v143 = v174;
    (*(void (**)(char *, uint64_t))(v136 + 8))(v23, v135);
    uint64_t v138 = v163;
  }
  unint64_t v171 = v52;
  unint64_t v172 = v165;
  uint64_t v173 = (uint64_t)v138;
  unint64_t v174 = (unint64_t)v164;
  swift_unknownObjectRetain();
  uint64_t v147 = swift_unknownObjectRetain();
  unint64_t v51 = (unint64_t)&v171;
  sub_76434(v147, (uint64_t)v142, v141, v143);
  swift_unknownObjectRelease();
  uint64_t v148 = v173;
  int64_t v149 = v174 >> 1;
  uint64_t v150 = (v174 >> 1) - v173;
  if (__OFSUB__(v174 >> 1, v173))
  {
LABEL_138:
    __break(1u);
LABEL_139:
    swift_release();
    uint64_t v159 = sub_4B17C((uint64_t)v52, (uint64_t)(v52 + 4), 0, (2 * v51) | 1);
    swift_release();
    return v159;
  }
  if (!v150)
  {
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    swift_unknownObjectRelease();
    unint64_t v51 = (unint64_t)_swiftEmptyArrayStorage;
LABEL_128:
    sub_55F38(v166, &qword_26D958);
    uint64_t v133 = (uint64_t)v167;
LABEL_129:
    sub_55F38(v133, &qword_26D958);
    return (char *)v51;
  }
  uint64_t v151 = v172;
  unint64_t v171 = _swiftEmptyArrayStorage;
  sub_46538(0, v150 & ~(v150 >> 63), 0);
  if ((v150 & 0x8000000000000000) == 0)
  {
    unint64_t v51 = (unint64_t)v171;
    if (v148 <= v149) {
      int64_t v152 = v149;
    }
    else {
      int64_t v152 = v148;
    }
    uint64_t v153 = v152 - v148;
    unint64_t v154 = &v151[152 * v148];
    while (v153)
    {
      uint64_t v155 = *(void *)v154;
      unint64_t v171 = (void *)v51;
      unint64_t v157 = *(void *)(v51 + 16);
      unint64_t v156 = *(void *)(v51 + 24);
      if (v157 >= v156 >> 1)
      {
        sub_46538(v156 > 1, v157 + 1, 1);
        unint64_t v51 = (unint64_t)v171;
      }
      *(void *)(v51 + 16) = v157 + 1;
      *(void *)(v51 + 8 * v157 + 32) = v155;
      --v153;
      v154 += 152;
      if (!--v150)
      {
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        swift_unknownObjectRelease();
        goto LABEL_128;
      }
    }
LABEL_132:
    __break(1u);
LABEL_133:
    __break(1u);
LABEL_134:
    __break(1u);
    goto LABEL_135;
  }
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  __break(1u);
LABEL_149:
  __break(1u);
  uint64_t result = (char *)swift_release();
  __break(1u);
  return result;
}