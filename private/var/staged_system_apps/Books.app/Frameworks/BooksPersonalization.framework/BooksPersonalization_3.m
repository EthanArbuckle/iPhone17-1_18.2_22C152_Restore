_OWORD *sub_1858C0(_OWORD *a1, _OWORD *a2)
{
  uint64_t AssociatedTypeWitness;
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  uint64_t v8;
  uint64_t v9;
  uint64_t v10;
  uint64_t v11;
  uint64_t v12;
  uint64_t v13;
  char *v14;
  char *v15;
  uint64_t v16;
  unint64_t v17;
  size_t v18;
  unint64_t v19;
  _OWORD *v20;
  _OWORD *v21;
  void *v22;
  void *v23;
  char *v24;
  long long v25;

  *a1 = *a2;
  AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  v5 = *(void *)(AssociatedTypeWitness - 8);
  v6 = v5 + 32;
  v7 = *(unsigned __int8 *)(v5 + 80);
  v8 = ((unint64_t)a1 + v7 + 16) & ~v7;
  v9 = ((unint64_t)a2 + v7 + 16) & ~v7;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 32))(v8, v9, AssociatedTypeWitness);
  v10 = *(void *)(v6 + 32);
  v11 = sub_1FAF80();
  v12 = *(void *)(v11 - 8);
  v13 = *(_DWORD *)(v12 + 80) & 0xF8 | 7;
  v14 = (char *)((v10 + v13 + v8) & ~v13);
  v15 = (char *)((v10 + v13 + v9) & ~v13);
  v16 = *(void *)(v12 + 64) + 7;
  v17 = ((((v16 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  if (*(_DWORD *)(v12 + 84) < 0x7FFFFFFFu)
  {
    v19 = *(void *)(((unint64_t)&v15[v16] & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v19 >= 0xFFFFFFFF) {
      LODWORD(v19) = -1;
    }
    v18 = v17 + 16;
    if (v19 != -1) {
      goto LABEL_3;
    }
LABEL_7:
    (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v15, v11);
    v20 = (_OWORD *)((unint64_t)&v14[v16] & 0xFFFFFFFFFFFFFFF8);
    v21 = (_OWORD *)((unint64_t)&v15[v16] & 0xFFFFFFFFFFFFFFF8);
    *v20 = *v21;
    v22 = (void *)(((unint64_t)v20 + 23) & 0xFFFFFFFFFFFFFFF8);
    v23 = (void *)(((unint64_t)v21 + 23) & 0xFFFFFFFFFFFFFFF8);
    *v22 = *v23;
    *(_OWORD *)(((unint64_t)v22 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v23 + 15) & 0xFFFFFFFFFFFFFFF8);
    goto LABEL_8;
  }
  v18 = v17 + 16;
  if (!(*(unsigned int (**)(char *))(v12 + 48))(v15)) {
    goto LABEL_7;
  }
LABEL_3:
  memcpy(v14, v15, v18);
LABEL_8:
  v24 = &v14[v18];
  v25 = *(_OWORD *)&v15[v18 + 16];
  *(_OWORD *)v24 = *(_OWORD *)&v15[v18];
  *((_OWORD *)v24 + 1) = v25;
  *(void *)((unint64_t)&v14[v18 + 39] & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)&v15[v18 + 39] & 0xFFFFFFFFFFFFFFF8);
  return a1;
}

void *sub_185AE0(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v6 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v7 = v6 + 40;
  uint64_t v8 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v9 = ((unint64_t)a1 + v8 + 16) & ~v8;
  uint64_t v10 = ((unint64_t)a2 + v8 + 16) & ~v8;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v6 + 40))(v9, v10, AssociatedTypeWitness);
  uint64_t v11 = *(void *)(v7 + 24);
  uint64_t v12 = sub_1FAF80();
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v14 = *(unsigned int *)(v13 + 84);
  uint64_t v15 = *(_DWORD *)(v13 + 80) & 0xF8 | 7;
  v16 = (char *)((v11 + v15 + v9) & ~v15);
  v17 = (char *)((v11 + v15 + v10) & ~v15);
  uint64_t v18 = *(void *)(v13 + 64) + 7;
  size_t v19 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  if (v14 < 0x7FFFFFFF)
  {
    unint64_t v27 = *(void *)(((unint64_t)&v17[v18] & 0xFFFFFFFFFFFFFFF8) + 8);
    if (v27 >= 0xFFFFFFFF) {
      LODWORD(v27) = -1;
    }
    int v22 = v27 + 1;
    if (*(void *)(((unint64_t)&v16[v18] & 0xFFFFFFFFFFFFFFF8) + 8) < 0xFFFFFFFFuLL)
    {
LABEL_3:
      if (!v22)
      {
        (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v16, v17, v12);
        v23 = (_OWORD *)((unint64_t)&v16[v18] & 0xFFFFFFFFFFFFFFF8);
        v24 = (_OWORD *)((unint64_t)&v17[v18] & 0xFFFFFFFFFFFFFFF8);
        _OWORD *v23 = *v24;
        v25 = (void *)(((unint64_t)v23 + 23) & 0xFFFFFFFFFFFFFFF8);
        v26 = (void *)(((unint64_t)v24 + 23) & 0xFFFFFFFFFFFFFFF8);
        void *v25 = *v26;
        *(_OWORD *)(((unint64_t)v25 + 15) & 0xFFFFFFFFFFFFFFF8) = *(_OWORD *)(((unint64_t)v26 + 15) & 0xFFFFFFFFFFFFFFF8);
        goto LABEL_12;
      }
      goto LABEL_11;
    }
  }
  else
  {
    v20 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
    int v21 = v20(v16, v14, v12);
    int v22 = v20(v17, v14, v12);
    size_t v19 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
    if (v21) {
      goto LABEL_3;
    }
  }
  v28 = (void *)((unint64_t)&v16[v18] & 0xFFFFFFFFFFFFFFF8);
  if (v22)
  {
    (*(void (**)(char *, uint64_t))(v13 + 8))(v16, v12);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v29 = (uint64_t *)(((((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
    unint64_t v30 = v29[1];
    if ((v30 & 0x3000000000000000) == 0) {
      sub_520E8(*v29, v30);
    }
LABEL_11:
    memcpy(v16, v17, v19);
    goto LABEL_12;
  }
  (*(void (**)(char *, char *, uint64_t))(v13 + 40))(v16, v17, v12);
  v37 = (void *)((unint64_t)&v17[v18] & 0xFFFFFFFFFFFFFFF8);
  void *v28 = *v37;
  v28[1] = v37[1];
  swift_bridgeObjectRelease();
  v38 = (void *)(((unint64_t)v28 + 23) & 0xFFFFFFFFFFFFFFF8);
  v39 = (void *)(((unint64_t)v37 + 23) & 0xFFFFFFFFFFFFFFF8);
  void *v38 = *v39;
  swift_bridgeObjectRelease();
  v40 = (uint64_t *)(((unint64_t)v38 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v41 = ((unint64_t)v39 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v42 = v40[1];
  if ((v42 & 0x3000000000000000) != 0) {
    goto LABEL_21;
  }
  uint64_t v43 = *(void *)(v41 + 8);
  if ((v43 & 0x3000000000000000) != 0)
  {
    sub_520E8(*v40, v42);
LABEL_21:
    *(_OWORD *)v40 = *(_OWORD *)v41;
    goto LABEL_12;
  }
  uint64_t v44 = *v40;
  uint64_t *v40 = *(void *)v41;
  v40[1] = v43;
  sub_520E8(v44, v42);
LABEL_12:
  v31 = &v16[v19];
  v32 = &v17[v19];
  if (*(void *)&v16[v19 + 8] < 0xFFFFFFFFuLL)
  {
LABEL_16:
    long long v35 = *((_OWORD *)v32 + 1);
    *(_OWORD *)v31 = *(_OWORD *)v32;
    *((_OWORD *)v31 + 1) = v35;
    goto LABEL_17;
  }
  if (*((void *)v32 + 1) < 0xFFFFFFFFuLL)
  {
    swift_bridgeObjectRelease();
    sub_520E8(*((void *)v31 + 2), *((void *)v31 + 3));
    goto LABEL_16;
  }
  *(void *)v31 = *(void *)v32;
  *((void *)v31 + 1) = *((void *)v32 + 1);
  swift_bridgeObjectRelease();
  uint64_t v33 = *((void *)v31 + 2);
  unint64_t v34 = *((void *)v31 + 3);
  *((_OWORD *)v31 + 1) = *((_OWORD *)v32 + 1);
  sub_520E8(v33, v34);
LABEL_17:
  *(void *)((unint64_t)(v31 + 39) & 0xFFFFFFFFFFFFFFF8) = *(void *)((unint64_t)(v32 + 39) & 0xFFFFFFFFFFFFFFF8);
  swift_errorRelease();
  return a1;
}

uint64_t sub_185EB0(int *a1, unsigned int a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v5 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v6 = *(unsigned int *)(v5 + 84);
  uint64_t v7 = *(void *)(sub_1FAF80() - 8);
  uint64_t v8 = v7;
  unsigned int v9 = *(_DWORD *)(v7 + 84);
  if (v9 <= 0x7FFFFFFF) {
    int v10 = 0x7FFFFFFF;
  }
  else {
    int v10 = *(_DWORD *)(v7 + 84);
  }
  unsigned int v11 = v10 - 1;
  if (v6 <= v11) {
    unsigned int v12 = v11;
  }
  else {
    unsigned int v12 = v6;
  }
  uint64_t v13 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v14 = *(void *)(v5 + 64);
  int v15 = *(_DWORD *)(v7 + 80);
  uint64_t v16 = *(void *)(v7 + 64);
  if (v12 <= 0x7FFFFFFF) {
    unsigned int v17 = 0x7FFFFFFF;
  }
  else {
    unsigned int v17 = v12;
  }
  if (!a2) {
    return 0;
  }
  uint64_t v18 = v15 & 0xF8 | 7;
  uint64_t v19 = v16 + 7;
  if (v17 < a2)
  {
    unint64_t v20 = ((((v14 + v18 + ((v13 + 16) & ~v13)) & ~v18)
          + (((((v19 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8)
          + 55) & 0xFFFFFFFFFFFFFFF8)
        + 8;
    if ((v20 & 0xFFFFFFF8) != 0) {
      unsigned int v21 = 2;
    }
    else {
      unsigned int v21 = a2 - v17 + 1;
    }
    if (v21 >= 0x10000) {
      unsigned int v22 = 4;
    }
    else {
      unsigned int v22 = 2;
    }
    if (v21 < 0x100) {
      unsigned int v22 = 1;
    }
    if (v21 >= 2) {
      uint64_t v23 = v22;
    }
    else {
      uint64_t v23 = 0;
    }
    switch(v23)
    {
      case 1:
        int v24 = *((unsigned __int8 *)a1 + v20);
        if (!*((unsigned char *)a1 + v20)) {
          break;
        }
        goto LABEL_28;
      case 2:
        int v24 = *(unsigned __int16 *)((char *)a1 + v20);
        if (*(_WORD *)((char *)a1 + v20)) {
          goto LABEL_28;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x18618CLL);
      case 4:
        int v24 = *(int *)((char *)a1 + v20);
        if (!v24) {
          break;
        }
LABEL_28:
        int v26 = v24 - 1;
        if ((v20 & 0xFFFFFFF8) != 0)
        {
          int v26 = 0;
          int v27 = *a1;
        }
        else
        {
          int v27 = 0;
        }
        return v17 + (v27 | v26) + 1;
      default:
        break;
    }
  }
  if ((v12 & 0x80000000) != 0)
  {
    uint64_t v29 = ((unint64_t)a1 + v13 + 16) & ~v13;
    if (v6 == v17)
    {
      unint64_t v30 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
      return v30(v29, v6, AssociatedTypeWitness);
    }
    else
    {
      uint64_t v31 = (v29 + v14 + v18) & ~v18;
      if (v9 < 0x7FFFFFFF)
      {
        unint64_t v33 = *(void *)(((v19 + v31) & 0xFFFFFFFFFFFFFFF8) + 8);
        if (v33 >= 0xFFFFFFFF) {
          LODWORD(v33) = -1;
        }
        unsigned int v32 = v33 + 1;
      }
      else
      {
        unsigned int v32 = (*(uint64_t (**)(uint64_t))(v8 + 48))(v31);
      }
      if (v32 >= 2) {
        return v32 - 1;
      }
      else {
        return 0;
      }
    }
  }
  else
  {
    unint64_t v28 = *((void *)a1 + 1);
    if (v28 >= 0xFFFFFFFF) {
      LODWORD(v28) = -1;
    }
    return (v28 + 1);
  }
}

void sub_1861A0(void *a1, uint64_t a2, unsigned int a3)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v35 = v7;
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = sub_1FAF80();
  uint64_t v10 = *(void *)(v9 - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v7 + 80);
  uint64_t v13 = *(void *)(v7 + 64);
  if (v11 <= 0x7FFFFFFF) {
    unsigned int v14 = 0x7FFFFFFF;
  }
  else {
    unsigned int v14 = *(_DWORD *)(v10 + 84);
  }
  unsigned int v15 = v14 - 1;
  if (v8 > v14 - 1) {
    unsigned int v15 = v8;
  }
  if (v15 <= 0x7FFFFFFF) {
    unsigned int v16 = 0x7FFFFFFF;
  }
  else {
    unsigned int v16 = v15;
  }
  uint64_t v17 = *(_DWORD *)(v10 + 80) & 0xF8 | 7;
  uint64_t v18 = *(void *)(*(void *)(v9 - 8) + 64) + 7;
  size_t v19 = (((((v18 & 0xFFFFFFFFFFFFFFF8) + 23) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 16;
  unint64_t v20 = ((((v13 + v17 + ((v12 + 16) & ~v12)) & ~v17) + v19 + 39) & 0xFFFFFFFFFFFFFFF8) + 8;
  if (v16 >= a3)
  {
    int v23 = 0;
    int v24 = a2 - v16;
    if (a2 <= v16)
    {
LABEL_22:
      switch(v23)
      {
        case 1:
          *((unsigned char *)a1 + v20) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_35;
        case 2:
          *(_WORD *)((char *)a1 + v20) = 0;
          if (!a2) {
            return;
          }
          goto LABEL_35;
        case 3:
          goto LABEL_59;
        case 4:
          *(_DWORD *)((char *)a1 + v20) = 0;
          goto LABEL_34;
        default:
LABEL_34:
          if (a2)
          {
LABEL_35:
            if ((v15 & 0x80000000) != 0)
            {
              uint64_t v28 = ((unint64_t)a1 + v12 + 16) & ~v12;
              if (v8 == v16)
              {
                uint64_t v29 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v35 + 56);
                v29(v28, a2, v8, AssociatedTypeWitness);
              }
              else
              {
                uint64_t v25 = ~v17;
                unint64_t v30 = (_DWORD *)((v28 + v13 + v17) & ~v17);
                if ((int)a2 + 1 <= v14)
                {
                  if (a2 != -1)
                  {
                    if (v11 < 0x7FFFFFFF)
                    {
                      unint64_t v34 = (void *)(((unint64_t)v30 + v18) & 0xFFFFFFFFFFFFFFF8);
                      if (a2 + 1 < 0)
                      {
                        *unint64_t v34 = (a2 - 0x7FFFFFFF);
                        v34[1] = 0;
                      }
                      else
                      {
                        v34[1] = a2;
                      }
                    }
                    else
                    {
                      unsigned int v32 = *(void (**)(uint64_t, void))(v10 + 56);
                      uint64_t v33 = (v28 + v13 + v17) & v25;
                      v32(v33, (a2 + 1));
                    }
                  }
                }
                else if ((((((v18 & 0xFFFFFFF8) + 23) & 0xFFFFFFF8) + 15) & 0xFFFFFFF8) != 0xFFFFFFF0)
                {
                  int v31 = a2 - v14;
                  bzero((void *)((v28 + v13 + v17) & v25), v19);
                  *unint64_t v30 = v31;
                }
              }
            }
            else if ((a2 & 0x80000000) != 0)
            {
              *a1 = a2 ^ 0x80000000;
              a1[1] = 0;
            }
            else
            {
              a1[1] = (a2 - 1);
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (((((v13 + v17 + ((v12 + 16) & ~v12)) & ~v17) + v19 + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
      unsigned int v21 = a3 - v16 + 1;
    }
    else {
      unsigned int v21 = 2;
    }
    if (v21 >= 0x10000) {
      int v22 = 4;
    }
    else {
      int v22 = 2;
    }
    if (v21 < 0x100) {
      int v22 = 1;
    }
    if (v21 >= 2) {
      int v23 = v22;
    }
    else {
      int v23 = 0;
    }
    int v24 = a2 - v16;
    if (a2 <= v16) {
      goto LABEL_22;
    }
  }
  if (((((v13 + v17 + ((v12 + 16) & ~v12)) & ~v17) + v19 + 39) & 0xFFFFFFF8) == 0xFFFFFFF8) {
    int v26 = v24;
  }
  else {
    int v26 = 1;
  }
  if (((((v13 + v17 + ((v12 + 16) & ~v12)) & ~v17) + v19 + 39) & 0xFFFFFFF8) != 0xFFFFFFF8)
  {
    int v27 = ~v16 + a2;
    bzero(a1, ((((v13 + v17 + ((v12 + 16) & ~v12)) & ~v17) + v19 + 39) & 0xFFFFFFFFFFFFFFF8) + 8);
    *(_DWORD *)a1 = v27;
  }
  switch(v23)
  {
    case 1:
      *((unsigned char *)a1 + v20) = v26;
      break;
    case 2:
      *(_WORD *)((char *)a1 + v20) = v26;
      break;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x18652CLL);
    case 4:
      *(_DWORD *)((char *)a1 + v20) = v26;
      break;
    default:
      return;
  }
}

void sub_186554()
{
  if (!qword_272598)
  {
    type metadata accessor for ClientCurrency.Request();
    unint64_t v0 = sub_1FBEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_272598);
    }
  }
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientErrorPayload(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v6 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v6 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v7 = sub_1FADC0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
        break;
      case 2u:
        uint64_t v8 = *a2;
        swift_errorRetain();
        *a1 = v8;
        break;
      default:
        uint64_t v9 = a2[1];
        *a1 = *a2;
        a1[1] = v9;
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t destroy for ClientErrorPayload(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 3:
    case 4:
    case 5:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 1:
      uint64_t v3 = sub_1FADC0();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    case 2:
      uint64_t result = swift_errorRelease();
      break;
    default:
      return result;
  }
  return result;
}

uint64_t *initializeWithCopy for ClientErrorPayload(uint64_t *a1, uint64_t *a2)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
      uint64_t v4 = sub_1FADC0();
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
      break;
    case 2u:
      uint64_t v5 = *a2;
      swift_errorRetain();
      *a1 = v5;
      break;
    default:
      uint64_t v6 = a2[1];
      *a1 = *a2;
      a1[1] = v6;
      swift_bridgeObjectRetain();
      break;
  }
  swift_storeEnumTagMultiPayload();
  return a1;
}

uint64_t *assignWithCopy for ClientErrorPayload(uint64_t *a1, uint64_t *a2)
{
  if (a1 != a2)
  {
    sub_186B40((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ClientErrorPayload);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 1u:
        uint64_t v4 = sub_1FADC0();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
        break;
      case 2u:
        uint64_t v5 = *a2;
        swift_errorRetain();
        *a1 = v5;
        break;
      default:
        *a1 = *a2;
        a1[1] = a2[1];
        swift_bridgeObjectRetain();
        break;
    }
    swift_storeEnumTagMultiPayload();
  }
  return a1;
}

uint64_t sub_186B40(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

void *initializeWithTake for ClientErrorPayload(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 1)
  {
    uint64_t v6 = sub_1FADC0();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *assignWithTake for ClientErrorPayload(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_186B40((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for ClientErrorPayload);
    if (swift_getEnumCaseMultiPayload() == 1)
    {
      uint64_t v6 = sub_1FADC0();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_186D34()
{
  uint64_t result = sub_1FADC0();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

ValueMetadata *type metadata accessor for APIClientHelpers()
{
  return &type metadata for APIClientHelpers;
}

ValueMetadata *type metadata accessor for ClientConfiguration()
{
  return &type metadata for ClientConfiguration;
}

uint64_t destroy for ClientConverter(void *a1)
{
  if (*a1) {
    swift_release();
  }
  if (a1[2]) {
    swift_release();
  }
  if (a1[4]) {
    swift_release();
  }
  if (a1[6]) {
    swift_release();
  }
  if (a1[8]) {
    swift_release();
  }
  if (a1[10]) {
    swift_release();
  }
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_release();
}

uint64_t initializeWithCopy for ClientConverter(uint64_t a1, uint64_t a2)
{
  if (*(void *)a2)
  {
    uint64_t v4 = *(void *)(a2 + 8);
    *(void *)a1 = *(void *)a2;
    *(void *)(a1 + 8) = v4;
    swift_retain();
  }
  else
  {
    *(_OWORD *)a1 = *(_OWORD *)a2;
  }
  uint64_t v5 = *(void *)(a2 + 16);
  if (v5)
  {
    uint64_t v6 = *(void *)(a2 + 24);
    *(void *)(a1 + 16) = v5;
    *(void *)(a1 + 24) = v6;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  }
  uint64_t v7 = *(void *)(a2 + 32);
  if (v7)
  {
    uint64_t v8 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 40) = v8;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  }
  uint64_t v9 = *(void *)(a2 + 48);
  if (v9)
  {
    uint64_t v10 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = v9;
    *(void *)(a1 + 56) = v10;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  }
  uint64_t v11 = *(void *)(a2 + 64);
  if (v11)
  {
    uint64_t v12 = *(void *)(a2 + 72);
    *(void *)(a1 + 64) = v11;
    *(void *)(a1 + 72) = v12;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  }
  uint64_t v13 = *(void *)(a2 + 80);
  if (v13)
  {
    uint64_t v14 = *(void *)(a2 + 88);
    *(void *)(a1 + 80) = v13;
    *(void *)(a1 + 88) = v14;
    swift_retain();
  }
  else
  {
    *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  }
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  uint64_t v15 = *(void *)(a2 + 128);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = v15;
  uint64_t v17 = *(void *)(a2 + 136);
  uint64_t v16 = *(void *)(a2 + 144);
  *(void *)(a1 + 136) = v17;
  *(void *)(a1 + 144) = v16;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for ClientConverter(void *a1, void *a2)
{
  uint64_t v4 = *a2;
  if (*a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *a1 = v4;
      a1[1] = v5;
      swift_retain();
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *a1 = v4;
    a1[1] = v6;
    swift_retain();
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (a1[2])
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      a1[2] = v7;
      a1[3] = v8;
      swift_retain();
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    a1[2] = v7;
    a1[3] = v9;
    swift_retain();
    goto LABEL_15;
  }
  *((_OWORD *)a1 + 1) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (a1[4])
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      a1[4] = v10;
      a1[5] = v11;
      swift_retain();
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    a1[4] = v10;
    a1[5] = v12;
    swift_retain();
    goto LABEL_22;
  }
  *((_OWORD *)a1 + 2) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (a1[6])
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      a1[6] = v13;
      a1[7] = v14;
      swift_retain();
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    a1[6] = v13;
    a1[7] = v15;
    swift_retain();
    goto LABEL_29;
  }
  *((_OWORD *)a1 + 3) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (a1[8])
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      a1[8] = v16;
      a1[9] = v17;
      swift_retain();
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    a1[8] = v16;
    a1[9] = v18;
    swift_retain();
    goto LABEL_36;
  }
  *((_OWORD *)a1 + 4) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = a2[10];
  if (!a1[10])
  {
    if (v19)
    {
      uint64_t v21 = a2[11];
      a1[10] = v19;
      a1[11] = v21;
      swift_retain();
      goto LABEL_43;
    }
LABEL_42:
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    goto LABEL_43;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_42;
  }
  uint64_t v20 = a2[11];
  a1[10] = v19;
  a1[11] = v20;
  swift_retain();
  swift_release();
LABEL_43:
  uint64_t v22 = a2[13];
  a1[12] = a2[12];
  a1[13] = v22;
  swift_retain();
  swift_release();
  uint64_t v23 = a2[15];
  a1[14] = a2[14];
  a1[15] = v23;
  swift_retain();
  swift_release();
  a1[16] = a2[16];
  swift_retain();
  swift_release();
  a1[17] = a2[17];
  swift_retain();
  swift_release();
  a1[18] = a2[18];
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for ClientConverter(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ClientConverter(uint64_t a1, uint64_t *a2)
{
  uint64_t v4 = *a2;
  if (*(void *)a1)
  {
    if (v4)
    {
      uint64_t v5 = a2[1];
      *(void *)a1 = v4;
      *(void *)(a1 + 8) = v5;
      swift_release();
      goto LABEL_8;
    }
    swift_release();
  }
  else if (v4)
  {
    uint64_t v6 = a2[1];
    *(void *)a1 = v4;
    *(void *)(a1 + 8) = v6;
    goto LABEL_8;
  }
  *(_OWORD *)a1 = *(_OWORD *)a2;
LABEL_8:
  uint64_t v7 = a2[2];
  if (*(void *)(a1 + 16))
  {
    if (v7)
    {
      uint64_t v8 = a2[3];
      *(void *)(a1 + 16) = v7;
      *(void *)(a1 + 24) = v8;
      swift_release();
      goto LABEL_15;
    }
    swift_release();
  }
  else if (v7)
  {
    uint64_t v9 = a2[3];
    *(void *)(a1 + 16) = v7;
    *(void *)(a1 + 24) = v9;
    goto LABEL_15;
  }
  *(_OWORD *)(a1 + 16) = *((_OWORD *)a2 + 1);
LABEL_15:
  uint64_t v10 = a2[4];
  if (*(void *)(a1 + 32))
  {
    if (v10)
    {
      uint64_t v11 = a2[5];
      *(void *)(a1 + 32) = v10;
      *(void *)(a1 + 40) = v11;
      swift_release();
      goto LABEL_22;
    }
    swift_release();
  }
  else if (v10)
  {
    uint64_t v12 = a2[5];
    *(void *)(a1 + 32) = v10;
    *(void *)(a1 + 40) = v12;
    goto LABEL_22;
  }
  *(_OWORD *)(a1 + 32) = *((_OWORD *)a2 + 2);
LABEL_22:
  uint64_t v13 = a2[6];
  if (*(void *)(a1 + 48))
  {
    if (v13)
    {
      uint64_t v14 = a2[7];
      *(void *)(a1 + 48) = v13;
      *(void *)(a1 + 56) = v14;
      swift_release();
      goto LABEL_29;
    }
    swift_release();
  }
  else if (v13)
  {
    uint64_t v15 = a2[7];
    *(void *)(a1 + 48) = v13;
    *(void *)(a1 + 56) = v15;
    goto LABEL_29;
  }
  *(_OWORD *)(a1 + 48) = *((_OWORD *)a2 + 3);
LABEL_29:
  uint64_t v16 = a2[8];
  if (*(void *)(a1 + 64))
  {
    if (v16)
    {
      uint64_t v17 = a2[9];
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v17;
      swift_release();
      goto LABEL_36;
    }
    swift_release();
  }
  else if (v16)
  {
    uint64_t v18 = a2[9];
    *(void *)(a1 + 64) = v16;
    *(void *)(a1 + 72) = v18;
    goto LABEL_36;
  }
  *(_OWORD *)(a1 + 64) = *((_OWORD *)a2 + 4);
LABEL_36:
  uint64_t v19 = a2[10];
  if (!*(void *)(a1 + 80))
  {
    if (v19)
    {
      uint64_t v21 = a2[11];
      *(void *)(a1 + 80) = v19;
      *(void *)(a1 + 88) = v21;
      goto LABEL_43;
    }
LABEL_42:
    *(_OWORD *)(a1 + 80) = *((_OWORD *)a2 + 5);
    goto LABEL_43;
  }
  if (!v19)
  {
    swift_release();
    goto LABEL_42;
  }
  uint64_t v20 = a2[11];
  *(void *)(a1 + 80) = v19;
  *(void *)(a1 + 88) = v20;
  swift_release();
LABEL_43:
  *(_OWORD *)(a1 + 96) = *((_OWORD *)a2 + 6);
  swift_release();
  *(_OWORD *)(a1 + 112) = *((_OWORD *)a2 + 7);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 128) = *((_OWORD *)a2 + 8);
  swift_release();
  *(void *)(a1 + 144) = a2[18];
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientConverter(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 152)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 96);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClientConverter(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 152) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 96) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 152) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClientConverter()
{
  return &type metadata for ClientConverter;
}

uint64_t sub_1875EC(uint64_t a1, uint64_t a2, uint64_t (*a3)(void))
{
  uint64_t v5 = a3(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(a2, a1, v5);
  return a2;
}

uint64_t sub_187654()
{
  return swift_getGenericMetadata();
}

uint64_t sub_187688(uint64_t a1, void *a2)
{
  return sub_52B04(a1, a2);
}

uint64_t sub_1876A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = type metadata accessor for AttributeScorer();
  uint64_t result = swift_allocObject();
  a1[3] = v2;
  a1[4] = (uint64_t)&off_25F6F8;
  *a1 = result;
  return result;
}

uint64_t sub_1876EC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18774C(a1, (uint64_t (*)(void))type metadata accessor for DelegatingGenreRecommendationService, (uint64_t)&off_25EE58, a2);
}

uint64_t sub_18770C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18774C(a1, (uint64_t (*)(void))type metadata accessor for DelegatingGenreRecommendationService, (uint64_t)&off_25EE68, a2);
}

uint64_t sub_18772C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_18774C(a1, (uint64_t (*)(void))type metadata accessor for DefaultGenreCollectionRecommendationService, (uint64_t)&off_25D5C0, a2);
}

uint64_t sub_18774C@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v7 = a2(0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1877D0(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (v7)
  {
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_272710);
    uint64_t result = sub_1FB260();
    if (v5)
    {
      type metadata accessor for DefaultGenreCollectionRecommendationService();
      uint64_t v3 = swift_allocObject();
      sub_37C30(&v6, v3 + 16);
      sub_37C30(&v4, v3 + 56);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1878B0(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_2706A0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    uint64_t v3 = result;
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_26E4C0);
    uint64_t result = sub_1FB260();
    if (v6)
    {
      type metadata accessor for DelegatingGenreRecommendationService();
      uint64_t v4 = swift_allocObject();
      *(void *)(v4 + 64) = _swiftEmptyDictionarySingleton;
      *(void *)(v4 + 16) = v3;
      sub_37C30(&v5, v4 + 24);
      return v4;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_187998@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D138);
  uint64_t result = sub_1FB260();
  if (v10)
  {
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_26D140);
    uint64_t result = sub_1FB260();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for SeedBookGenreRecommendationService();
      uint64_t v6 = swift_allocObject();
      sub_37C30(&v9, v6 + 16);
      uint64_t result = sub_37C30(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_25F6D8;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_187A94@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272728);
  uint64_t result = sub_1FB240();
  if (v10)
  {
    sub_5D64(a1, a1[3]);
    uint64_t result = sub_1FB240();
    if (v8)
    {
      uint64_t v5 = type metadata accessor for CombinedGenreRecommendationService();
      uint64_t v6 = swift_allocObject();
      sub_37C30(&v9, v6 + 16);
      uint64_t result = sub_37C30(&v7, v6 + 56);
      a2[3] = v5;
      a2[4] = (uint64_t)&off_25F640;
      *a2 = v6;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_187BC0(uint64_t a1, void *a2)
{
  sub_12124(&qword_272728);
  unint64_t v4 = 0;
  uint64_t v5 = (void *)(a1 + 64);
  do
  {
    if (v4 >= 5)
    {
      __break(1u);
LABEL_19:
      __break(1u);
LABEL_20:
      __break(1u);
LABEL_21:
      __break(1u);
LABEL_22:
      sub_1FC770();
      __break(1u);
      JUMPOUT(0x187EBCLL);
    }
    unsigned __int8 v8 = *((unsigned char *)&off_256FD8 + v4++ + 32);
    sub_5D64(a2, a2[3]);
    sub_1FB240();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_21;
    }
    sub_37C30(&v24, (uint64_t)v26);
    swift_beginAccess();
    sub_51B70((uint64_t)v26, (uint64_t)&v24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = (void *)*v5;
    uint64_t v23 = (void *)*v5;
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v12 = sub_4CB5C(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_19;
    }
    char v16 = v11;
    if (v10[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v23;
        if (v11) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_1230B0();
        uint64_t v19 = v23;
        if (v16) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_11C48C(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_4CB5C(v8);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_22;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v23;
      if (v16)
      {
LABEL_2:
        uint64_t v6 = v19[7] + 40 * v12;
        sub_1264C(v6);
        sub_37C30(&v24, v6);
        goto LABEL_3;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    sub_37C30(&v24, v19[7] + 40 * v12);
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_20;
    }
    v19[2] = v22;
LABEL_3:
    *uint64_t v5 = v19;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = sub_1264C((uint64_t)v26);
  }
  while (v4 != 5);
  return result;
}

uint64_t type metadata accessor for GenreRecommendationServiceAssembly()
{
  return self;
}

uint64_t sub_187EF8(uint64_t a1)
{
  uint64_t v2 = sub_1FB270();
  uint64_t v21 = *(void *)(v2 - 8);
  uint64_t v22 = v2;
  __chkstk_darwin(v2);
  uint64_t v20 = &v16[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1FB350();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  long long v7 = &v16[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1FB280();
  sub_12124(&qword_26D138);
  sub_1FB310();
  swift_release();
  uint64_t v8 = enum case for Scope.singleton(_:);
  long long v9 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for Scope.singleton(_:), v4);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(unsigned char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_272710);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_272718);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_272720);
  sub_1FB310();
  swift_release();
  unsigned int v17 = v8;
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  type metadata accessor for DefaultGenreCollectionRecommendationService();
  sub_1FB300();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  uint64_t v18 = a1;
  sub_1FB290();
  uint64_t v19 = type metadata accessor for DelegatingGenreRecommendationService();
  sub_1FB300();
  swift_release();
  uint64_t v11 = v17;
  v9(v7, v17, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  sub_12124(&qword_272728);
  sub_1FB310();
  swift_release();
  v9(v7, v11, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  sub_1FB310();
  swift_release();
  v9(v7, v11, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB2A0();
  sub_5D64(v23, v23[3]);
  uint64_t v13 = v20;
  uint64_t v12 = v21;
  uint64_t v14 = v22;
  (*(void (**)(unsigned char *, void, uint64_t))(v21 + 104))(v20, enum case for CallbackScope.any(_:), v22);
  sub_1FB320();
  (*(void (**)(unsigned char *, uint64_t))(v12 + 8))(v13, v14);
  return sub_1264C((uint64_t)v23);
}

uint64_t CollectionType.supportedSources.getter()
{
  return (uint64_t)*(&off_262F00 + *v0);
}

BooksPersonalization::CollectionType_optional __swiftcall CollectionType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2570F0;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 7;
  if (v5 < 7) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

_UNKNOWN **static CollectionType.allCases.getter()
{
  return &off_2571B8;
}

unint64_t CollectionType.rawValue.getter()
{
  unint64_t result = 0x736B6F6F62;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0xD000000000000017;
      break;
    case 2:
    case 4:
      unint64_t result = 0xD000000000000011;
      break;
    case 3:
      unint64_t result = 0x756F59726F66;
      break;
    case 5:
      unint64_t result = 0xD000000000000013;
      break;
    case 6:
      unint64_t result = 0x6974736567677573;
      break;
    default:
      return result;
  }
  return result;
}

BooksPersonalization::CollectionType_optional sub_188704(Swift::String *a1)
{
  return CollectionType.init(rawValue:)(*a1);
}

unint64_t sub_188710@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CollectionType.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

void sub_188738(void *a1@<X8>)
{
  *a1 = &off_2571B8;
}

Swift::Int sub_188748()
{
  return sub_114F70();
}

uint64_t sub_188754()
{
  return sub_160680();
}

Swift::Int sub_18875C()
{
  return sub_114F70();
}

uint64_t sub_188764(unsigned __int8 *a1, char *a2)
{
  return sub_1DA164(*a1, *a2);
}

uint64_t sub_188770()
{
  return sub_1FBA60();
}

uint64_t sub_1887D0()
{
  return sub_1FBA40();
}

unint64_t sub_188824()
{
  unint64_t result = qword_272730;
  if (!qword_272730)
  {
    sub_121C4(&qword_272738);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272730);
  }
  return result;
}

unint64_t sub_188884()
{
  unint64_t result = qword_272740;
  if (!qword_272740)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272740);
  }
  return result;
}

unint64_t sub_1888DC()
{
  unint64_t result = qword_272748;
  if (!qword_272748)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272748);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for CollectionType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *unint64_t result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1889FCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionType()
{
  return &type metadata for CollectionType;
}

unint64_t sub_188A34()
{
  unint64_t result = qword_272750;
  if (!qword_272750)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272750);
  }
  return result;
}

uint64_t Array<A>.affinity.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    int v3 = _swiftEmptyArrayStorage;
    uint64_t v8 = _swiftEmptyArrayStorage[2];
    if (v8) {
      goto LABEL_11;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v2 = (double *)(swift_bridgeObjectRetain() + 80);
  int v3 = _swiftEmptyArrayStorage;
  do
  {
    if ((*(unsigned char *)v2 & 1) == 0)
    {
      double v4 = *(v2 - 2);
      double v5 = exp2(-*(v2 - 1) / *(v2 - 3));
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_41BAC(0, v3[2] + 1, 1, v3);
      }
      unint64_t v7 = v3[2];
      unint64_t v6 = v3[3];
      if (v7 >= v6 >> 1) {
        int v3 = sub_41BAC((void *)(v6 > 1), v7 + 1, 1, v3);
      }
      v3[2] = v7 + 1;
      *(double *)&v3[v7 + 4] = v4 * v5;
    }
    v2 += 7;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  uint64_t v8 = v3[2];
  if (!v8) {
    goto LABEL_14;
  }
LABEL_11:
  if (v8 == 1)
  {
    uint64_t v9 = 0;
    double v10 = 0.0;
  }
  else
  {
    uint64_t v9 = v8 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v12 = (double *)(v3 + 5);
    double v10 = 0.0;
    uint64_t v13 = v8 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v10 = v10 + *(v12 - 1) + *v12;
      v12 += 2;
      v13 -= 2;
    }
    while (v13);
    if (v8 == v9) {
      goto LABEL_20;
    }
  }
  uint64_t v14 = v8 - v9;
  uint64_t v15 = (double *)&v3[v9 + 4];
  do
  {
    double v16 = *v15++;
    double v10 = v10 + v16;
    --v14;
  }
  while (v14);
LABEL_20:
  swift_bridgeObjectRelease();
  return *(void *)&v10;
}

uint64_t Array<A>.rawAffinity.getter(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1)
  {
    int v3 = _swiftEmptyArrayStorage;
    uint64_t v7 = _swiftEmptyArrayStorage[2];
    if (v7) {
      goto LABEL_11;
    }
LABEL_14:
    swift_bridgeObjectRelease();
    return 0;
  }
  uint64_t v2 = (unsigned char *)(swift_bridgeObjectRetain() + 80);
  int v3 = _swiftEmptyArrayStorage;
  do
  {
    if ((*v2 & 1) == 0)
    {
      uint64_t v4 = *((void *)v2 - 2);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        int v3 = sub_41BAC(0, v3[2] + 1, 1, v3);
      }
      unint64_t v6 = v3[2];
      unint64_t v5 = v3[3];
      if (v6 >= v5 >> 1) {
        int v3 = sub_41BAC((void *)(v5 > 1), v6 + 1, 1, v3);
      }
      v3[2] = v6 + 1;
      v3[v6 + 4] = v4;
    }
    v2 += 56;
    --v1;
  }
  while (v1);
  swift_bridgeObjectRelease();
  uint64_t v7 = v3[2];
  if (!v7) {
    goto LABEL_14;
  }
LABEL_11:
  if (v7 == 1)
  {
    uint64_t v8 = 0;
    double v9 = 0.0;
  }
  else
  {
    uint64_t v8 = v7 & 0x7FFFFFFFFFFFFFFELL;
    uint64_t v11 = (double *)(v3 + 5);
    double v9 = 0.0;
    uint64_t v12 = v7 & 0x7FFFFFFFFFFFFFFELL;
    do
    {
      double v9 = v9 + *(v11 - 1) + *v11;
      v11 += 2;
      v12 -= 2;
    }
    while (v12);
    if (v7 == v8) {
      goto LABEL_20;
    }
  }
  uint64_t v13 = v7 - v8;
  uint64_t v14 = (double *)&v3[v8 + 4];
  do
  {
    double v15 = *v14++;
    double v9 = v9 + v15;
    --v13;
  }
  while (v13);
LABEL_20:
  swift_bridgeObjectRelease();
  return *(void *)&v9;
}

double FeatureAffinityInfo.halfLife.getter()
{
  return *(double *)(v0 + 24);
}

__n128 FeatureAffinityInfo.datedRawAffinity.getter@<Q0>(__n128 *a1@<X8>)
{
  unsigned __int8 v2 = v1[3].n128_u8[0];
  __n128 result = v1[2];
  *a1 = result;
  a1[1].n128_u8[0] = v2;
  return result;
}

void FeatureAffinityInfo.hash(into:)()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  Swift::UInt64 v4 = *(void *)(v0 + 32);
  Swift::UInt64 v3 = *(void *)(v0 + 40);
  int v5 = *(unsigned __int8 *)(v0 + 48);
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_1FC820(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  sub_1FC820(v7);
  if (v5 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = v4;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    sub_1FC820(v8);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v3;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
}

unint64_t sub_188E60()
{
  unint64_t result = 0xD000000000000010;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x746867696577;
      break;
    case 2:
      unint64_t result = 0x6566694C666C6168;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_188EEC@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18A294(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_188F14(uint64_t a1)
{
  unint64_t v2 = sub_189ACC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_188F50(uint64_t a1)
{
  unint64_t v2 = sub_189ACC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t FeatureAffinityInfo.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_272758);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  Swift::UInt64 v7 = (char *)&v17 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *(void *)(v1 + 32);
  uint64_t v18 = *(void *)(v1 + 40);
  uint64_t v19 = v8;
  int v23 = *(unsigned __int8 *)(v1 + 48);
  uint64_t v9 = a1[3];
  double v10 = a1;
  uint64_t v12 = v11;
  sub_5D64(v10, v9);
  sub_189ACC();
  sub_1FC870();
  LOBYTE(v20) = 0;
  sub_1FC4E0();
  if (!v2)
  {
    char v13 = v23;
    uint64_t v15 = v18;
    uint64_t v14 = v19;
    LOBYTE(v20) = 1;
    sub_1FC500();
    LOBYTE(v20) = 2;
    sub_1FC500();
    uint64_t v20 = v14;
    uint64_t v21 = v15;
    char v22 = v13;
    char v24 = 3;
    sub_189B20();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v12);
}

Swift::Int FeatureAffinityInfo.hashValue.getter()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  Swift::UInt64 v4 = *(void *)(v0 + 32);
  Swift::UInt64 v3 = *(void *)(v0 + 40);
  int v5 = *(unsigned __int8 *)(v0 + 48);
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_1FC820(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  sub_1FC820(v7);
  if (v5 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = v4;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    sub_1FC820(v8);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v3;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
  return sub_1FC830();
}

uint64_t FeatureAffinityInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_272770);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt64 v8 = (char *)&v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_189ACC();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  LOBYTE(v19) = 0;
  uint64_t v9 = sub_1FC3A0();
  uint64_t v11 = v10;
  LOBYTE(v19) = 1;
  swift_bridgeObjectRetain();
  sub_1FC3C0();
  uint64_t v13 = v12;
  LOBYTE(v19) = 2;
  sub_1FC3C0();
  uint64_t v15 = v14;
  char v21 = 3;
  sub_189B74();
  sub_1FC360();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  char v17 = v20;
  long long v18 = v19;
  *(void *)a2 = v9;
  *(void *)(a2 + 8) = v11;
  *(void *)(a2 + 16) = v13;
  *(void *)(a2 + 24) = v15;
  *(_OWORD *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 48) = v17;
  sub_1264C((uint64_t)a1);
  return swift_bridgeObjectRelease();
}

uint64_t sub_1894CC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return FeatureAffinityInfo.init(from:)(a1, a2);
}

uint64_t sub_1894E4(void *a1)
{
  return FeatureAffinityInfo.encode(to:)(a1);
}

Swift::Int sub_189504()
{
  Swift::UInt64 v1 = *(void *)(v0 + 16);
  Swift::UInt64 v2 = *(void *)(v0 + 24);
  Swift::UInt64 v4 = *(void *)(v0 + 32);
  Swift::UInt64 v3 = *(void *)(v0 + 40);
  int v5 = *(unsigned __int8 *)(v0 + 48);
  sub_1FC7E0();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  if ((v1 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v6 = v1;
  }
  else {
    Swift::UInt64 v6 = 0;
  }
  sub_1FC820(v6);
  if ((v2 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v7 = v2;
  }
  else {
    Swift::UInt64 v7 = 0;
  }
  sub_1FC820(v7);
  if (v5 == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    sub_1FC800(1u);
    if ((v4 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v8 = v4;
    }
    else {
      Swift::UInt64 v8 = 0;
    }
    sub_1FC820(v8);
    if ((v3 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v3;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
  return sub_1FC830();
}

uint64_t sub_1895E0()
{
  if (*v0) {
    return 0xD000000000000019;
  }
  else {
    return 0x7974696E69666661;
  }
}

uint64_t sub_189620@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_18A440(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_189648(uint64_t a1)
{
  unint64_t v2 = sub_189BC8();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_189684(uint64_t a1)
{
  unint64_t v2 = sub_189BC8();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t DatedAffinity.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_272780);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  Swift::UInt64 v6 = &v8[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_189BC8();
  sub_1FC870();
  v8[15] = 0;
  sub_1FC500();
  if (!v1)
  {
    v8[14] = 1;
    sub_1FC500();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 8))(v6, v3);
}

uint64_t DatedAffinity.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_272790);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  Swift::UInt64 v8 = (char *)&v14 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_189BC8();
  sub_1FC850();
  if (!v2)
  {
    char v16 = 0;
    sub_1FC3C0();
    uint64_t v10 = v9;
    char v15 = 1;
    sub_1FC3C0();
    uint64_t v12 = v11;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v10;
    a2[1] = v12;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1899CC@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return DatedAffinity.init(from:)(a1, a2);
}

uint64_t sub_1899E4(void *a1)
{
  return DatedAffinity.encode(to:)(a1);
}

uint64_t _s20BooksPersonalization19FeatureAffinityInfoV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  double v3 = *(double *)(a1 + 16);
  double v2 = *(double *)(a1 + 24);
  double v4 = *(double *)(a1 + 32);
  double v5 = *(double *)(a1 + 40);
  char v6 = *(unsigned char *)(a1 + 48);
  double v8 = *(double *)(a2 + 16);
  double v7 = *(double *)(a2 + 24);
  double v9 = *(double *)(a2 + 32);
  double v10 = *(double *)(a2 + 40);
  char v11 = *(unsigned char *)(a2 + 48);
  if (*(void *)a1 == *(void *)a2 && *(void *)(a1 + 8) == *(void *)(a2 + 8))
  {
    if (v3 != v8 || v2 != v7) {
      return 0;
    }
LABEL_14:
    if (v6)
    {
      if ((v11 & 1) == 0) {
        return 0;
      }
    }
    else
    {
      if (v11) {
        return 0;
      }
      if (v4 != v9 || v5 != v10) {
        return 0;
      }
    }
    return 1;
  }
  char v13 = sub_1FC5F0();
  uint64_t result = 0;
  if ((v13 & 1) != 0 && v3 == v8 && v2 == v7) {
    goto LABEL_14;
  }
  return result;
}

unint64_t sub_189ACC()
{
  unint64_t result = qword_272760;
  if (!qword_272760)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272760);
  }
  return result;
}

unint64_t sub_189B20()
{
  unint64_t result = qword_272768;
  if (!qword_272768)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272768);
  }
  return result;
}

unint64_t sub_189B74()
{
  unint64_t result = qword_272778;
  if (!qword_272778)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272778);
  }
  return result;
}

unint64_t sub_189BC8()
{
  unint64_t result = qword_272788;
  if (!qword_272788)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272788);
  }
  return result;
}

unint64_t sub_189C20()
{
  unint64_t result = qword_272798;
  if (!qword_272798)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272798);
  }
  return result;
}

unint64_t sub_189C78()
{
  unint64_t result = qword_2727A0;
  if (!qword_2727A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727A0);
  }
  return result;
}

uint64_t initializeWithCopy for FeatureAffinityInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  long long v4 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v4;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for FeatureAffinityInfo(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  long long v4 = *(_OWORD *)(a2 + 32);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = v4;
  return a1;
}

uint64_t assignWithTake for FeatureAffinityInfo(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  long long v5 = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 32) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  return a1;
}

uint64_t getEnumTagSinglePayload for FeatureAffinityInfo(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 49)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for FeatureAffinityInfo(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 40) = 0;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 48) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 49) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 49) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureAffinityInfo()
{
  return &type metadata for FeatureAffinityInfo;
}

ValueMetadata *type metadata accessor for DatedAffinity()
{
  return &type metadata for DatedAffinity;
}

unsigned char *storeEnumTagSinglePayload for DatedAffinity.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *unint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x189F48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DatedAffinity.CodingKeys()
{
  return &type metadata for DatedAffinity.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for FeatureAffinityInfo.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x18A04CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FeatureAffinityInfo.CodingKeys()
{
  return &type metadata for FeatureAffinityInfo.CodingKeys;
}

unint64_t sub_18A088()
{
  unint64_t result = qword_2727A8;
  if (!qword_2727A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727A8);
  }
  return result;
}

unint64_t sub_18A0E0()
{
  unint64_t result = qword_2727B0;
  if (!qword_2727B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727B0);
  }
  return result;
}

unint64_t sub_18A138()
{
  unint64_t result = qword_2727B8;
  if (!qword_2727B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727B8);
  }
  return result;
}

unint64_t sub_18A190()
{
  unint64_t result = qword_2727C0;
  if (!qword_2727C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727C0);
  }
  return result;
}

unint64_t sub_18A1E8()
{
  unint64_t result = qword_2727C8;
  if (!qword_2727C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727C8);
  }
  return result;
}

unint64_t sub_18A240()
{
  unint64_t result = qword_2727D0;
  if (!qword_2727D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2727D0);
  }
  return result;
}

uint64_t sub_18A294(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x8000000000219D20 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x746867696577 && a2 == 0xE600000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x6566694C666C6168 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000219D40)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 3;
    }
    else {
      return 4;
    }
  }
}

uint64_t sub_18A440(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x7974696E69666661 && a2 == 0xE800000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x8000000000219D60)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_18A530(uint64_t a1)
{
  uint64_t v2 = 18;
  double v45 = *(double *)(v1 + 96);
  char v44 = *(unsigned char *)(v1 + 104);
  double v43 = *(double *)(v1 + 112);
  char v42 = *(unsigned char *)(v1 + 120);
  double v41 = *(double *)(v1 + 128);
  char v40 = *(unsigned char *)(v1 + 136);
  double v39 = *(double *)(v1 + 144);
  char v38 = *(unsigned char *)(v1 + 152);
  double v37 = *(double *)(v1 + 160);
  char v36 = *(unsigned char *)(v1 + 168);
  double v35 = *(double *)(v1 + 176);
  char v34 = *(unsigned char *)(v1 + 184);
  double v33 = *(double *)(v1 + 192);
  char v32 = *(unsigned char *)(v1 + 200);
  double v3 = *(double *)(v1 + 248);
  char v4 = *(unsigned char *)(v1 + 256);
  double v31 = *(double *)(v1 + 304);
  char v30 = *(unsigned char *)(v1 + 312);
  double v29 = *(double *)(v1 + 320);
  char v28 = *(unsigned char *)(v1 + 328);
  int v5 = *(unsigned __int8 *)(v1 + 296);
  double v6 = *(double *)(v1 + 264);
  int v7 = *(unsigned __int8 *)(v1 + 240);
  double v9 = *(double *)(v1 + 208);
  double v8 = *(double *)(v1 + 216);
  int v10 = *(unsigned __int8 *)(v1 + 80);
  double v11 = *(double *)(v1 + 48);
  double v12 = *(double *)(a1 + 320);
  double v13 = v12 * (double)*(uint64_t *)(v1 + 64) + v11;
  double v14 = v12 * (double)*(uint64_t *)(v1 + 280) + v6;
  if (*(double *)(v1 + 56) < v13) {
    double v13 = *(double *)(v1 + 56);
  }
  if (v10) {
    double v11 = v13;
  }
  double v27 = v11;
  if (*(double *)(v1 + 272) < v14) {
    double v14 = *(double *)(v1 + 272);
  }
  if (v5) {
    double v6 = v14;
  }
  double v26 = v6;
  if (v8 >= *(double *)(a1 + 312) * (double)*(uint64_t *)(v1 + 224) + v9) {
    double v8 = *(double *)(a1 + 312) * (double)*(uint64_t *)(v1 + 224) + v9;
  }
  if ((v7 & 1) == 0) {
    double v8 = *(double *)(v1 + 208);
  }
  if (v8 < v3) {
    char v15 = 1;
  }
  else {
    char v15 = *(unsigned char *)(v1 + 256);
  }
  double v25 = v8;
  if (v7 == 255) {
    char v15 = 0;
  }
  char v24 = v15;
  char v16 = _swiftEmptyArrayStorage;
  char v17 = &byte_252908;
  do
  {
    int v18 = *v17++;
    switch(v18)
    {
      case 1:
        double v19 = v27;
        if (v10 != 255) {
          goto LABEL_47;
        }
        break;
      case 3:
        double v19 = v45;
        if ((v44 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 4:
        double v19 = v43;
        if ((v42 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 5:
        double v19 = v41;
        if ((v40 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 6:
        double v19 = v39;
        if ((v38 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 7:
        double v19 = v37;
        if ((v36 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 8:
        double v19 = v35;
        if ((v34 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 9:
        double v19 = v33;
        if ((v32 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 10:
        double v19 = v25;
        if (v24) {
          goto LABEL_47;
        }
        break;
      case 11:
        double v19 = v3;
        if ((v4 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 12:
        double v19 = v26;
        if (v5 != 255) {
          goto LABEL_47;
        }
        break;
      case 13:
        double v19 = v31;
        if ((v30 & 1) == 0) {
          goto LABEL_47;
        }
        break;
      case 14:
        double v19 = v29;
        if ((v28 & 1) == 0)
        {
LABEL_47:
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            char v16 = sub_41BAC(0, v16[2] + 1, 1, v16);
          }
          unint64_t v21 = v16[2];
          unint64_t v20 = v16[3];
          if (v21 >= v20 >> 1) {
            char v16 = sub_41BAC((void *)(v20 > 1), v21 + 1, 1, v16);
          }
          v16[2] = v21 + 1;
          *(double *)&v16[v21 + 4] = v19;
        }
        break;
      default:
        break;
    }
    --v2;
  }
  while (v2);
  uint64_t v22 = sub_E31A4((uint64_t)v16);
  swift_bridgeObjectRelease();
  return v22;
}

uint64_t BookHistory.isEmpty.getter()
{
  uint64_t v1 = 18;
  int v2 = v0[16];
  unsigned __int8 v3 = v0[32];
  unsigned __int8 v4 = v0[104];
  unsigned __int8 v5 = v0[120];
  unsigned __int8 v6 = v0[136];
  unsigned __int8 v7 = v0[152];
  unsigned __int8 v8 = v0[168];
  unsigned __int8 v9 = v0[184];
  unsigned __int8 v10 = v0[200];
  unsigned __int8 v11 = v0[256];
  unsigned __int8 v12 = v0[312];
  unsigned __int8 v13 = v0[328];
  unsigned __int8 v14 = v0[344];
  unsigned __int8 v15 = v0[360];
  unsigned __int8 v16 = v0[376];
  int v17 = v0[296];
  int v18 = v0[240];
  double v19 = &byte_252908;
  int v20 = v0[80];
  while (2)
  {
    int v21 = *v19++;
    switch(v21)
    {
      case 1:
        if (v20 == 255) {
          goto LABEL_3;
        }
        return 0;
      case 2:
        if ((v3 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 3:
        if ((v4 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 4:
        if ((v5 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 5:
        if ((v6 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 6:
        if ((v7 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 7:
        if ((v8 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 8:
        if ((v9 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 9:
        if ((v10 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 10:
        if (v18 != 255) {
          return 0;
        }
        goto LABEL_3;
      case 11:
        if ((v11 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 12:
        if (v17 != 255) {
          return 0;
        }
        goto LABEL_3;
      case 13:
        if ((v12 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 14:
        if ((v13 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 15:
        if ((v14 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 16:
        if ((v15 & 1) == 0) {
          return 0;
        }
        goto LABEL_3;
      case 17:
        if (v16) {
          goto LABEL_3;
        }
        return 0;
      default:
        if (!v2) {
          return 0;
        }
LABEL_3:
        if (--v1) {
          continue;
        }
        return 1;
    }
  }
}

Swift::Bool __swiftcall BookHistory.hasValue(for:)(BooksPersonalization::BookHistory::Feature a1)
{
  switch(*(unsigned char *)a1)
  {
    case 1:
      int v3 = v1[80];
      goto LABEL_15;
    case 2:
      return v1[32] ^ 1;
    case 3:
      return v1[104] ^ 1;
    case 4:
      return v1[120] ^ 1;
    case 5:
      return v1[136] ^ 1;
    case 6:
      return v1[152] ^ 1;
    case 7:
      return v1[168] ^ 1;
    case 8:
      return v1[184] ^ 1;
    case 9:
      return v1[200] ^ 1;
    case 0xA:
      int v3 = v1[240];
      goto LABEL_15;
    case 0xB:
      return v1[256] ^ 1;
    case 0xC:
      int v3 = v1[296];
LABEL_15:
      Swift::Bool result = v3 != 255;
      break;
    case 0xD:
      Swift::Bool result = v1[312] ^ 1;
      break;
    case 0xE:
      Swift::Bool result = v1[328] ^ 1;
      break;
    case 0xF:
      Swift::Bool result = v1[344] ^ 1;
      break;
    case 0x10:
      Swift::Bool result = v1[360] ^ 1;
      break;
    case 0x11:
      Swift::Bool result = v1[376] ^ 1;
      break;
    default:
      Swift::Bool result = v1[16] ^ 1;
      break;
  }
  return result;
}

uint64_t sub_18AB80(uint64_t a1)
{
  char v2 = *((unsigned char *)v1 + 152);
  if ((v2 & 1) == 0)
  {
LABEL_2:
    char v3 = 1;
    return v3 & 1;
  }
  unsigned __int8 v5 = v1;
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v79 = *(void *)(a1 + 72);
  uint64_t v80 = *(void *)(a1 + 80);
  uint64_t v78 = *(void *)(a1 + 88);
  uint64_t v7 = *(void *)(a1 + 96);
  uint64_t v61 = *(void *)(a1 + 104);
  double v8 = *(double *)(a1 + 312);
  uint64_t v9 = *((void *)v1 + 18);
  unsigned __int8 v10 = (long long *)((char *)v1 + 153);
  double v11 = *((double *)v1 + 26);
  double v12 = *((double *)v1 + 27);
  uint64_t v13 = *((void *)v1 + 28);
  uint64_t v14 = *((void *)v1 + 29);
  int v15 = *((unsigned __int8 *)v1 + 240);
  unsigned __int8 v16 = (_DWORD *)((char *)v1 + 241);
  double v17 = *((double *)v1 + 31);
  char v18 = *((unsigned char *)v1 + 256);
  double v19 = (_DWORD *)((char *)v1 + 257);
  uint64_t v20 = *((void *)v1 + 33);
  uint64_t v21 = *((void *)v1 + 34);
  uint64_t v22 = *((void *)v1 + 35);
  uint64_t v23 = *((void *)v1 + 36);
  char v24 = (long long *)((char *)v1 + 297);
  uint64_t v25 = *((void *)v5 + 42);
  char v26 = *((unsigned char *)v5 + 344);
  uint64_t v27 = *((void *)v5 + 46);
  char v28 = *((unsigned char *)v5 + 376);
  int v29 = *((unsigned __int8 *)v5 + 296);
  long long v30 = v5[7];
  long long v93 = v5[6];
  long long v94 = v30;
  long long v95 = v5[8];
  long long v31 = v5[3];
  long long v89 = v5[2];
  long long v90 = v31;
  long long v32 = v5[5];
  long long v91 = v5[4];
  long long v92 = v32;
  long long v33 = v5[1];
  long long v87 = *v5;
  long long v88 = v33;
  double v75 = v11;
  uint64_t v76 = v9;
  uint64_t v96 = v9;
  char v77 = v2;
  char v97 = v2;
  long long v34 = v10[1];
  long long v98 = *v10;
  long long v99 = v34;
  *(_OWORD *)v100 = v10[2];
  v63 = v16;
  v64 = v10;
  *(void *)&v100[15] = *(void *)((char *)v10 + 47);
  double v101 = v11;
  uint64_t v73 = v13;
  double v74 = v12;
  double v102 = v12;
  uint64_t v103 = v13;
  uint64_t v72 = v14;
  uint64_t v104 = v14;
  int v71 = v15;
  char v105 = v15;
  *(_DWORD *)v106 = *v16;
  *(_DWORD *)&v106[3] = *(_DWORD *)((char *)v16 + 3);
  double v70 = v17;
  double v107 = v17;
  char v69 = v18;
  char v108 = v18;
  *(_DWORD *)v109 = *v19;
  v62 = v19;
  *(_DWORD *)&v109[3] = *(_DWORD *)((char *)v19 + 3);
  uint64_t v67 = v21;
  uint64_t v68 = v20;
  uint64_t v110 = v20;
  uint64_t v111 = v21;
  uint64_t v65 = v23;
  uint64_t v66 = v22;
  uint64_t v112 = v22;
  uint64_t v113 = v23;
  char v114 = v29;
  long long v35 = v24[1];
  long long v115 = *v24;
  *(_OWORD *)v116 = v35;
  *(void *)&v116[15] = *(void *)((char *)v24 + 31);
  uint64_t v36 = v25;
  uint64_t v117 = v25;
  char v37 = v26;
  char v118 = v26;
  *(_OWORD *)v119 = *(long long *)((char *)v5 + 345);
  *(void *)&v119[15] = *((void *)v5 + 45);
  uint64_t v38 = v27;
  uint64_t v120 = v27;
  char v121 = v28;
  char v39 = sub_103414();
  char v3 = 0;
  if ((v39 & 1) == 0 && v29 == 255)
  {
    if (v71 == 255) {
      goto LABEL_12;
    }
    double v40 = v75;
    if (v71)
    {
      double v40 = v74;
      if (v8 * (double)v73 + v75 <= v74) {
        double v40 = v8 * (double)v73 + v75;
      }
    }
    char v3 = 0;
    if ((v69 & 1) == 0 && v40 >= v70)
    {
LABEL_12:
      long long v41 = v5[7];
      long long v93 = v5[6];
      long long v94 = v41;
      long long v95 = v5[8];
      long long v42 = v5[3];
      long long v89 = v5[2];
      long long v90 = v42;
      long long v43 = v5[5];
      long long v91 = v5[4];
      long long v92 = v43;
      long long v44 = v5[1];
      long long v87 = *v5;
      long long v88 = v44;
      uint64_t v96 = v76;
      char v97 = v77;
      long long v45 = v64[1];
      long long v98 = *v64;
      long long v99 = v45;
      *(_OWORD *)v100 = v64[2];
      *(void *)&v100[15] = *(void *)((char *)v64 + 47);
      double v101 = v75;
      double v102 = v74;
      uint64_t v103 = v73;
      uint64_t v104 = v72;
      char v105 = v71;
      *(_DWORD *)v106 = *v63;
      *(_DWORD *)&v106[3] = *(_DWORD *)((char *)v63 + 3);
      double v107 = v70;
      char v108 = v69;
      *(_DWORD *)v109 = *v62;
      *(_DWORD *)&v109[3] = *(_DWORD *)((char *)v62 + 3);
      uint64_t v110 = v68;
      uint64_t v111 = v67;
      uint64_t v112 = v66;
      uint64_t v113 = v65;
      char v114 = -1;
      long long v46 = v24[1];
      long long v115 = *v24;
      *(_OWORD *)v116 = v46;
      *(void *)&v116[15] = *(void *)((char *)v24 + 31);
      uint64_t v117 = v36;
      char v118 = v37;
      *(_OWORD *)v119 = *(long long *)((char *)v5 + 345);
      *(void *)&v119[15] = *((void *)v5 + 45);
      uint64_t v120 = v38;
      char v121 = v28;
      if (v37) {
        uint64_t v47 = 0;
      }
      else {
        uint64_t v47 = v36;
      }
      uint64_t v81 = v6;
      uint64_t v82 = v79;
      uint64_t v83 = v80;
      uint64_t v84 = v78;
      uint64_t v85 = v7;
      uint64_t v86 = v61;
      sub_18D3F0(v47, v79, (uint64_t)&v81);
      if (v48) {
        goto LABEL_2;
      }
      *(_DWORD *)v109 = *v62;
      *(_DWORD *)v106 = *v63;
      long long v49 = v64[1];
      long long v98 = *v64;
      long long v99 = v49;
      *(_OWORD *)v100 = v64[2];
      long long v50 = v24[1];
      long long v115 = *v24;
      *(_OWORD *)v116 = v50;
      *(_OWORD *)v119 = *(long long *)((char *)v5 + 345);
      long long v51 = v5[6];
      long long v52 = v5[7];
      long long v53 = v5[8];
      long long v54 = v5[2];
      long long v55 = v5[3];
      long long v57 = v5[4];
      long long v56 = v5[5];
      long long v59 = *v5;
      long long v58 = v5[1];
      uint64_t v96 = v76;
      char v97 = v77;
      *(void *)&v100[15] = *(void *)((char *)v64 + 47);
      double v101 = v75;
      double v102 = v74;
      uint64_t v103 = v73;
      uint64_t v104 = v72;
      char v105 = v71;
      *(_DWORD *)&v106[3] = *(_DWORD *)((char *)v63 + 3);
      double v107 = v70;
      char v108 = v69;
      *(_DWORD *)&v109[3] = *(_DWORD *)((char *)v62 + 3);
      uint64_t v110 = v68;
      uint64_t v111 = v67;
      uint64_t v112 = v66;
      uint64_t v113 = v65;
      char v114 = -1;
      *(void *)&v116[15] = *(void *)((char *)v24 + 31);
      uint64_t v117 = v36;
      char v118 = v37;
      *(void *)&v119[15] = *((void *)v5 + 45);
      char v121 = v28;
      uint64_t v82 = v79;
      uint64_t v83 = v80;
      uint64_t v84 = v78;
      uint64_t v86 = v61;
      long long v93 = v51;
      long long v94 = v52;
      long long v95 = v53;
      long long v89 = v54;
      long long v90 = v55;
      long long v91 = v57;
      long long v92 = v56;
      long long v87 = v59;
      long long v88 = v58;
      uint64_t v120 = v38;
      if (v28) {
        uint64_t v60 = 0;
      }
      else {
        uint64_t v60 = v38;
      }
      uint64_t v81 = v6;
      uint64_t v85 = v7;
      sub_18D3F0(v60, v80, (uint64_t)&v81);
    }
  }
  return v3 & 1;
}

uint64_t BookHistory.affinity(with:)(long long *a1)
{
  BookHistory.internalAffinitySource(with:)(a1, (uint64_t)v11);
  char v1 = v12;
  if (v12 >> 1 == 0xFFFFFFFF) {
    return 0;
  }
  uint64_t v3 = v11[0];
  uint64_t v4 = v11[1];
  uint64_t v6 = v11[2];
  uint64_t v5 = v11[3];
  uint64_t v8 = v11[4];
  uint64_t v7 = v11[5];
  if (v12 >> 62 == 3)
  {
    uint64_t v9 = v11[0];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    *(void *)(v9 + 48) = v6;
    *(void *)(v9 + 56) = v5;
    *(void *)(v9 + 64) = v8;
    *(void *)(v9 + 72) = v7;
    *(unsigned char *)(v9 + 80) = v1 & 1;
  }
  uint64_t v2 = Array<A>.affinity.getter(v9);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t BookHistory.pruned(to:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  double v4 = *(double *)(v2 + 8);
  uint64_t v124 = *(void *)v2;
  char v104 = *(unsigned char *)(v2 + 16);
  double v5 = *(double *)(v2 + 24);
  char v102 = *(unsigned char *)(v2 + 32);
  uint64_t v6 = *(void *)(v2 + 48);
  uint64_t v67 = *(void *)(v2 + 40);
  uint64_t v8 = *(void *)(v2 + 56);
  uint64_t v7 = *(void *)(v2 + 64);
  uint64_t v9 = *(void *)(v2 + 72);
  char v10 = *(unsigned char *)(v2 + 80);
  uint64_t v79 = *(void *)(v2 + 96);
  uint64_t v81 = *(void *)(v2 + 88);
  char v78 = *(unsigned char *)(v2 + 104);
  double v112 = *(double *)(v2 + 112);
  char v93 = *(unsigned char *)(v2 + 120);
  char v90 = *(unsigned char *)(v2 + 136);
  double v106 = *(double *)(v2 + 144);
  double v108 = *(double *)(v2 + 128);
  char v97 = *(unsigned char *)(v2 + 152);
  char v95 = *(unsigned char *)(v2 + 168);
  double v85 = *(double *)(v2 + 176);
  double v87 = *(double *)(v2 + 160);
  char v92 = *(unsigned char *)(v2 + 184);
  double v83 = *(double *)(v2 + 192);
  char v89 = *(unsigned char *)(v2 + 200);
  uint64_t v70 = *(void *)(v2 + 216);
  uint64_t v71 = *(void *)(v2 + 208);
  uint64_t v72 = *(void *)(v2 + 224);
  uint64_t v69 = *(void *)(v2 + 232);
  char v68 = *(unsigned char *)(v2 + 240);
  double v99 = *(double *)(v2 + 248);
  char v101 = *(unsigned char *)(v2 + 256);
  uint64_t v76 = *(void *)(v2 + 272);
  uint64_t v77 = *(void *)(v2 + 264);
  uint64_t v74 = *(void *)(v2 + 288);
  uint64_t v75 = *(void *)(v2 + 280);
  char v73 = *(unsigned char *)(v2 + 296);
  double v111 = *(double *)(v2 + 304);
  double v115 = *(double *)(v2 + 320);
  double v117 = *(double *)(v2 + 336);
  double v119 = *(double *)(v2 + 352);
  double v121 = *(double *)(v2 + 368);
  char v110 = *(unsigned char *)(v2 + 312);
  char v114 = *(unsigned char *)(v2 + 328);
  char v116 = *(unsigned char *)(v2 + 344);
  char v118 = *(unsigned char *)(v2 + 360);
  char v120 = *(unsigned char *)(v2 + 376);
  BOOL v11 = sub_3950C(0, a1);
  if (v11) {
    double v12 = v4;
  }
  else {
    double v12 = 0.0;
  }
  double v123 = v12;
  BOOL v13 = sub_3950C(2u, a1);
  if (v13) {
    double v14 = v5;
  }
  else {
    double v14 = 0.0;
  }
  double v122 = v14;
  if (sub_3950C(1u, a1))
  {
    uint64_t v15 = v67;
  }
  else
  {
    uint64_t v15 = 0;
    uint64_t v6 = 0;
    uint64_t v8 = 0;
    uint64_t v7 = 0;
    uint64_t v9 = 0;
    char v10 = -1;
  }
  BOOL v16 = !v11;
  BOOL v17 = !v13;
  v138[0] = v15;
  v138[1] = v6;
  v138[2] = v8;
  v138[3] = v7;
  v138[4] = v9;
  char v139 = v10;
  BOOL v18 = sub_3950C(3u, a1);
  uint64_t v20 = v79;
  uint64_t v19 = v81;
  if (!v18)
  {
    uint64_t v19 = 0;
    uint64_t v20 = 0;
  }
  *(void *)&long long v136 = v19;
  *((void *)&v136 + 1) = v20;
  char v137 = v78 & 1 | !v18;
  BOOL v21 = sub_3950C(4u, a1);
  double v22 = v112;
  if (!v21) {
    double v22 = 0.0;
  }
  double v113 = v22;
  BOOL v23 = !v21;
  BOOL v24 = sub_3950C(5u, a1);
  double v25 = v108;
  if (!v24) {
    double v25 = 0.0;
  }
  double v109 = v25;
  BOOL v26 = !v24;
  BOOL v27 = sub_3950C(6u, a1);
  double v28 = v106;
  if (!v27) {
    double v28 = 0.0;
  }
  double v107 = v28;
  BOOL v29 = !v27;
  BOOL v30 = sub_3950C(7u, a1);
  double v31 = v87;
  if (!v30) {
    double v31 = 0.0;
  }
  double v88 = v31;
  BOOL v32 = !v30;
  BOOL v33 = sub_3950C(8u, a1);
  double v34 = v85;
  if (!v33) {
    double v34 = 0.0;
  }
  double v86 = v34;
  BOOL v35 = !v33;
  BOOL v36 = sub_3950C(9u, a1);
  double v37 = v83;
  if (!v36) {
    double v37 = 0.0;
  }
  double v84 = v37;
  BOOL v38 = !v36;
  if (sub_3950C(0xAu, a1))
  {
    uint64_t v40 = v71;
    uint64_t v39 = v72;
    uint64_t v42 = v69;
    uint64_t v41 = v70;
    char v43 = v68;
  }
  else
  {
    uint64_t v40 = 0;
    uint64_t v41 = 0;
    uint64_t v39 = 0;
    uint64_t v42 = 0;
    char v43 = -1;
  }
  char v105 = v16 | v104;
  char v103 = v17 | v102;
  char v94 = v23 | v93;
  char v91 = v26 | v90;
  *(void *)&long long v132 = v40;
  *((void *)&v132 + 1) = v41;
  char v80 = v29 | v97;
  char v82 = v32 | v95;
  char v96 = v35 | v92;
  char v98 = v38 | v89;
  uint64_t v133 = v39;
  uint64_t v134 = v42;
  char v135 = v43;
  BOOL v44 = sub_3950C(0xBu, a1);
  double v45 = v99;
  if (!v44) {
    double v45 = 0.0;
  }
  double v100 = v45;
  char v46 = !v44 | v101;
  if (sub_3950C(0xCu, a1))
  {
    uint64_t v48 = v76;
    uint64_t v47 = v77;
    uint64_t v50 = v74;
    uint64_t v49 = v75;
    char v51 = v73;
  }
  else
  {
    uint64_t v47 = 0;
    uint64_t v48 = 0;
    uint64_t v49 = 0;
    uint64_t v50 = 0;
    char v51 = -1;
  }
  *(void *)&long long v128 = v47;
  *((void *)&v128 + 1) = v48;
  uint64_t v129 = v49;
  uint64_t v130 = v50;
  char v131 = v51;
  char v52 = sub_3950C(0xDu, a1);
  if (v52) {
    double v53 = v111;
  }
  else {
    double v53 = 0.0;
  }
  char v54 = v110 | ~v52;
  char v55 = sub_3950C(0xEu, a1);
  if (v55) {
    double v56 = v115;
  }
  else {
    double v56 = 0.0;
  }
  char v57 = v114 | ~v55;
  char v58 = sub_3950C(0xFu, a1);
  if (v58) {
    double v59 = v117;
  }
  else {
    double v59 = 0.0;
  }
  char v60 = v116 | ~v58;
  char v61 = sub_3950C(0x10u, a1);
  if (v61) {
    double v62 = v119;
  }
  else {
    double v62 = 0.0;
  }
  char v63 = v118 | ~v61;
  BOOL v64 = sub_3950C(0x11u, a1);
  double v65 = v121;
  if (!v64) {
    double v65 = 0.0;
  }
  BookHistory.init(storeID:readFractionHighWaterMark:sampleReadFractionHighWaterMark:markedFinishedInfo:reviewInfo:secondsSinceMoreLikeThis:secondsSinceLessLikeThis:secondsSinceExplicitDecline:secondsSinceLastRead:secondsSincePurchased:secondsSinceFirstDownloadedViaFamilySharing:addedToWantToRead:secondsSinceRemovedFromWantToRead:sampled:secondsSinceProductPageViewed:secondsSinceFirstRecommended:daysRecommendedCount:consecutiveDaysNotRecommendedCount:daysRecommendationPassedOverCount:)(v124, v123, v105 & 1, v122, v103 & 1, v138, &v136, v113, (uint64_t)__src, v94 & 1, v109, v91 & 1, v107, v80 & 1, v88, v82 & 1, v86, v96 & 1, v84,
    v98 & 1,
    &v132,
    v100,
    v46 & 1,
    &v128,
    v53,
    v54 & 1,
    v56,
    v57 & 1,
    v59,
    v60 & 1,
    v62,
    v63 & 1,
    v65,
    v120 & 1 | !v64);
  if (BookHistory.isEmpty.getter())
  {
    sub_7A8D0((uint64_t)__dst);
  }
  else
  {
    memcpy(__dst, __src, 0x179uLL);
    AuthorRecommendationSource.id.getter(__dst);
  }
  sub_12588((uint64_t)__dst, (uint64_t)v127);
  return sub_12588((uint64_t)v127, a2);
}

void BookHistory.internalAffinitySource(with:)(long long *a1@<X0>, uint64_t a2@<X8>)
{
  long long v4 = a1[1];
  long long v202 = *a1;
  long long v203 = v4;
  long long v5 = a1[3];
  long long v204 = a1[2];
  long long v205 = v5;
  uint64_t v6 = *((void *)a1 + 8);
  uint64_t v7 = *((void *)a1 + 9);
  uint64_t v8 = *((void *)a1 + 10);
  uint64_t v85 = *((void *)a1 + 11);
  long double v9 = *((double *)a1 + 12);
  uint64_t v87 = *((void *)a1 + 13);
  uint64_t v10 = *((void *)a1 + 14);
  uint64_t v11 = *((void *)a1 + 15);
  uint64_t v12 = *((void *)a1 + 16);
  uint64_t v13 = *((void *)a1 + 17);
  long long v14 = a1[11];
  long long v201 = a1[12];
  long long v200 = v14;
  long long v15 = a1[9];
  long long v199 = a1[10];
  long long v198 = v15;
  double v16 = *((double *)a1 + 26);
  uint64_t v86 = *((void *)a1 + 27);
  uint64_t v197 = *((void *)a1 + 38);
  long long v196 = a1[18];
  long long v17 = a1[16];
  long long v195 = a1[17];
  long long v194 = v17;
  long long v18 = a1[14];
  long long v193 = a1[15];
  long long v192 = v18;
  double v19 = *((double *)a1 + 39);
  long long v20 = a1[20];
  long long v21 = a1[21];
  *(_OWORD *)((char *)v191 + 11) = *(long long *)((char *)a1 + 347);
  v191[0] = v21;
  long long v190 = v20;
  long long v22 = v2[1];
  long long v218 = *v2;
  long long v219 = v22;
  long long v23 = v2[2];
  long long v24 = v2[3];
  long long v25 = v2[4];
  double v26 = *((double *)v2 + 11);
  uint64_t v223 = *((void *)v2 + 10);
  long long v221 = v24;
  long long v222 = v25;
  long long v220 = v23;
  uint64_t v108 = *((void *)v2 + 12);
  double v109 = v26;
  char v112 = *((unsigned char *)v2 + 104);
  int v27 = *(_DWORD *)((char *)v2 + 105);
  *(_DWORD *)((char *)v217 + 3) = *((_DWORD *)v2 + 27);
  v217[0] = v27;
  double v28 = *((double *)v2 + 14);
  char v29 = *((unsigned char *)v2 + 120);
  int v30 = *(_DWORD *)((char *)v2 + 121);
  *(_DWORD *)((char *)v216 + 3) = *((_DWORD *)v2 + 31);
  v216[0] = v30;
  double v114 = *((double *)v2 + 16);
  double v116 = v28;
  LOBYTE(v28) = *((unsigned char *)v2 + 136);
  int v31 = *(_DWORD *)((char *)v2 + 137);
  *(_DWORD *)((char *)v215 + 3) = *((_DWORD *)v2 + 35);
  v215[0] = v31;
  uint64_t v98 = *((void *)v2 + 18);
  char v97 = *((unsigned char *)v2 + 152);
  long long v32 = *(long long *)((char *)v2 + 153);
  long long v33 = *(long long *)((char *)v2 + 169);
  long long v34 = *(long long *)((char *)v2 + 185);
  double v35 = *((double *)v2 + 26);
  *(void *)&v214[15] = *((void *)v2 + 25);
  *(_OWORD *)v214 = v34;
  long long v213 = v33;
  long long v212 = v32;
  double v105 = *((double *)v2 + 27);
  double v106 = v35;
  uint64_t v104 = *((void *)v2 + 28);
  uint64_t v36 = *((void *)v2 + 29);
  int v103 = *((unsigned __int8 *)v2 + 240);
  int v37 = *(_DWORD *)((char *)v2 + 241);
  *(_DWORD *)((char *)v211 + 3) = *((_DWORD *)v2 + 61);
  v211[0] = v37;
  double v102 = *((double *)v2 + 31);
  char v101 = *((unsigned char *)v2 + 256);
  int v38 = *(_DWORD *)((char *)v2 + 257);
  *(_DWORD *)((char *)v210 + 3) = *((_DWORD *)v2 + 65);
  v210[0] = v38;
  uint64_t v95 = *((void *)v2 + 33);
  uint64_t v96 = v36;
  uint64_t v93 = *((void *)v2 + 35);
  uint64_t v94 = *((void *)v2 + 34);
  uint64_t v92 = *((void *)v2 + 36);
  int v91 = *((unsigned __int8 *)v2 + 296);
  long long v39 = *(long long *)((char *)v2 + 297);
  long long v40 = *(long long *)((char *)v2 + 313);
  uint64_t v113 = *((void *)v2 + 42);
  *(void *)((char *)v209 + 15) = *((void *)v2 + 41);
  v209[0] = v40;
  long long v208 = v39;
  *(_DWORD *)((char *)v207 + 3) = *((_DWORD *)v2 + 87);
  v207[0] = *(_DWORD *)((char *)v2 + 345);
  *(_DWORD *)((char *)v206 + 3) = *((_DWORD *)v2 + 91);
  v206[0] = *(_DWORD *)((char *)v2 + 361);
  char v99 = LOBYTE(v28);
  char v100 = *((unsigned char *)v2 + 344);
  uint64_t v107 = *((void *)v2 + 44);
  char v110 = *((unsigned char *)v2 + 360);
  if ((LOBYTE(v28) & 1) == 0)
  {
    if ((v29 & 1) != 0 || v114 < v116)
    {
      *(_OWORD *)a2 = xmmword_212010;
      *(void *)(a2 + 16) = v12;
      *(void *)(a2 + 24) = v13;
      *(void *)(a2 + 32) = v12;
      *(double *)(a2 + 40) = v114;
      *(void *)(a2 + 48) = 0;
LABEL_7:
      *(void *)(a2 + 64) = 0;
      goto LABEL_8;
    }
LABEL_6:
    *(_OWORD *)a2 = xmmword_212010;
    *(void *)(a2 + 16) = v10;
    *(void *)(a2 + 24) = v11;
    *(void *)(a2 + 32) = v10;
    *(double *)(a2 + 40) = v116;
    *(void *)(a2 + 48) = 0x4000000000000000;
    goto LABEL_7;
  }
  if ((v29 & 1) == 0) {
    goto LABEL_6;
  }
  if ((v112 & 1) == 0)
  {
    sub_12124(&qword_26D7F0);
    uint64_t v41 = swift_allocObject();
    *(_OWORD *)(v41 + 16) = xmmword_1FD2A0;
    *(void *)(v41 + 56) = &type metadata for Double;
    *(void *)(v41 + 64) = &protocol witness table for Double;
    *(double *)(v41 + 32) = v109;
    *(void *)a2 = sub_1FB840();
    *(void *)(a2 + 8) = v42;
    *(double *)(a2 + 16) = v16;
    *(void *)(a2 + 24) = v86;
    *(double *)(a2 + 32) = v16 * v109;
    *(void *)(a2 + 40) = v108;
    *(void *)(a2 + 48) = 0x8000000000000000;
    *(double *)(a2 + 56) = v109;
    *(void *)(a2 + 64) = v108;
    return;
  }
  uint64_t v43 = 8;
  uint64_t v80 = a2;
  double v45 = v105;
  double v44 = v35;
  double v81 = (double)v85;
  uint64_t v90 = *((void *)v2 + 46);
  if (v19 * (double)v104 + v35 <= v105) {
    double v45 = v19 * (double)v104 + v35;
  }
  if (v103) {
    double v44 = v45;
  }
  char v82 = (v103 != 255) & (v101 | (v44 < v102));
  char v89 = *((unsigned char *)v2 + 376);
  double v117 = _swiftEmptyArrayStorage;
  char v46 = &byte_252C00;
  uint64_t v83 = v8;
  uint64_t v84 = v7;
  char v88 = v29;
  do
  {
    uint64_t v150 = v223;
    *(_DWORD *)&v154[3] = *(_DWORD *)((char *)v217 + 3);
    *(_DWORD *)v154 = v217[0];
    *(_DWORD *)&v157[3] = *(_DWORD *)((char *)v216 + 3);
    *(_DWORD *)v157 = v216[0];
    *(_DWORD *)&v160[3] = *(_DWORD *)((char *)v215 + 3);
    *(_DWORD *)v160 = v215[0];
    *(void *)&v165[15] = *(void *)&v214[15];
    *(_DWORD *)&v171[3] = *(_DWORD *)((char *)v211 + 3);
    *(_DWORD *)v171 = v211[0];
    *(_DWORD *)&v174[3] = *(_DWORD *)((char *)v210 + 3);
    *(_DWORD *)v174 = v210[0];
    *(void *)&v181[15] = *(void *)((char *)v209 + 15);
    *(_DWORD *)&v184[3] = *(_DWORD *)((char *)v207 + 3);
    *(_DWORD *)v184 = v207[0];
    *(_DWORD *)&v187[3] = *(_DWORD *)((char *)v206 + 3);
    *(_DWORD *)v187 = v206[0];
    uint64_t v140 = v197;
    unsigned __int8 v48 = *v46;
    char v47 = *v46;
    double v111 = v46 + 1;
    long long v147 = v220;
    long long v148 = v221;
    long long v149 = v222;
    long long v145 = v218;
    long long v146 = v219;
    double v151 = v109;
    uint64_t v152 = v108;
    char v153 = v112;
    double v155 = v116;
    char v156 = v29;
    double v158 = v114;
    char v159 = v99;
    uint64_t v161 = v98;
    char v162 = v97;
    long long v164 = v213;
    *(_OWORD *)v165 = *(_OWORD *)v214;
    long long v163 = v212;
    double v166 = v106;
    double v167 = v105;
    uint64_t v168 = v104;
    uint64_t v169 = v96;
    char v170 = v103;
    double v172 = v102;
    char v173 = v101;
    uint64_t v175 = v95;
    uint64_t v176 = v94;
    uint64_t v177 = v93;
    uint64_t v178 = v92;
    char v179 = v91;
    long long v180 = v208;
    *(_OWORD *)v181 = v209[0];
    uint64_t v182 = v113;
    char v183 = v100;
    uint64_t v185 = v107;
    char v186 = v110;
    uint64_t v188 = v90;
    char v189 = v89;
    unsigned __int8 v144 = v48;
    v118[0] = v202;
    v118[1] = v203;
    v118[2] = v204;
    v118[3] = v205;
    uint64_t v119 = v6;
    uint64_t v120 = v7;
    uint64_t v121 = v8;
    uint64_t v122 = v85;
    long double v123 = v9;
    uint64_t v124 = v87;
    uint64_t v125 = v10;
    uint64_t v126 = v11;
    uint64_t v127 = v12;
    uint64_t v128 = v13;
    long long v131 = v200;
    long long v132 = v201;
    long long v129 = v198;
    long long v130 = v199;
    double v133 = v16;
    uint64_t v134 = v86;
    long long v135 = v192;
    long long v136 = v193;
    long long v138 = v195;
    long long v139 = v196;
    long long v137 = v194;
    double v141 = v19;
    *(_OWORD *)&v143[11] = *(_OWORD *)((char *)v191 + 11);
    long long v142 = v190;
    *(_OWORD *)v143 = v191[0];
    uint64_t v49 = BookHistory.affinityInfosExcludingDecline(for:with:)(&v144, (uint64_t)v118);
    if ((v97 & 1) == 0) {
      goto LABEL_17;
    }
    uint64_t v150 = v223;
    *(_DWORD *)&v154[3] = *(_DWORD *)((char *)v217 + 3);
    *(_DWORD *)v154 = v217[0];
    *(_DWORD *)v157 = v216[0];
    *(_DWORD *)&v157[3] = *(_DWORD *)((char *)v216 + 3);
    *(_DWORD *)v160 = v215[0];
    *(_DWORD *)&v160[3] = *(_DWORD *)((char *)v215 + 3);
    *(void *)&v165[15] = *(void *)&v214[15];
    *(_DWORD *)&v171[3] = *(_DWORD *)((char *)v211 + 3);
    *(_DWORD *)v171 = v211[0];
    *(_DWORD *)&v174[3] = *(_DWORD *)((char *)v210 + 3);
    *(_DWORD *)v174 = v210[0];
    *(void *)&v181[15] = *(void *)((char *)v209 + 15);
    *(_DWORD *)&v184[3] = *(_DWORD *)((char *)v207 + 3);
    *(_DWORD *)v184 = v207[0];
    *(_DWORD *)&v187[3] = *(_DWORD *)((char *)v206 + 3);
    *(_DWORD *)v187 = v206[0];
    long long v147 = v220;
    long long v148 = v221;
    long long v149 = v222;
    long long v145 = v218;
    long long v146 = v219;
    double v151 = v109;
    uint64_t v152 = v108;
    char v153 = v112;
    double v155 = v116;
    char v156 = v88;
    double v158 = v114;
    char v159 = v99;
    uint64_t v161 = v98;
    char v162 = v97;
    long long v164 = v213;
    *(_OWORD *)v165 = *(_OWORD *)v214;
    long long v163 = v212;
    double v166 = v106;
    double v167 = v105;
    uint64_t v168 = v104;
    uint64_t v169 = v96;
    char v170 = v103;
    double v172 = v102;
    char v173 = v101;
    uint64_t v175 = v95;
    uint64_t v176 = v94;
    uint64_t v177 = v93;
    uint64_t v178 = v92;
    char v179 = v91;
    long long v180 = v208;
    *(_OWORD *)v181 = v209[0];
    uint64_t v182 = v113;
    char v183 = v100;
    uint64_t v185 = v107;
    char v186 = v110;
    uint64_t v188 = v90;
    char v189 = v89;
    if (sub_103414() & 1 | (v91 != 255) | v82 & 1) {
      goto LABEL_29;
    }
    if (!(v100 & 1 | (v113 < 1)))
    {
      if (!v84)
      {
        __break(1u);
LABEL_79:
        __break(1u);
LABEL_80:
        __break(1u);
LABEL_81:
        __break(1u);
LABEL_82:
        __break(1u);
LABEL_83:
        __break(1u);
LABEL_84:
        __break(1u);
LABEL_85:
        __break(1u);
        return;
      }
      if (!(v113 % v84))
      {
        double v57 = round(pow(v9, (double)(v113 / v84 - 1)) * v81);
        if ((~*(void *)&v57 & 0x7FF0000000000000) == 0) {
          goto LABEL_80;
        }
        if (v57 <= -9.22337204e18) {
          goto LABEL_81;
        }
        if (v57 >= 9.22337204e18) {
          goto LABEL_82;
        }
        uint64_t v58 = (uint64_t)v57;
        if (v87 < (uint64_t)v57) {
          uint64_t v58 = v87;
        }
        if (v110)
        {
          if (v58 > 0) {
            goto LABEL_17;
          }
        }
        else if (v107 < v58)
        {
          goto LABEL_17;
        }
      }
    }
    if (!(v89 & 1 | (v90 < 1)))
    {
      if (!v83) {
        goto LABEL_79;
      }
      if (!(v90 % v83))
      {
        double v59 = round(pow(v9, (double)(v90 / v83 - 1)) * v81);
        if ((~*(void *)&v59 & 0x7FF0000000000000) == 0) {
          goto LABEL_83;
        }
        if (v59 <= -9.22337204e18) {
          goto LABEL_84;
        }
        if (v59 >= 9.22337204e18) {
          goto LABEL_85;
        }
        uint64_t v60 = (uint64_t)v59;
        if (v87 < (uint64_t)v59) {
          uint64_t v60 = v87;
        }
        if (v110)
        {
          if (v60 < 1) {
            goto LABEL_29;
          }
        }
        else if (v107 >= v60)
        {
          goto LABEL_29;
        }
LABEL_17:
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v49 = sub_43374(0, v49[2] + 1, 1, v49);
        }
        unint64_t v51 = v49[2];
        unint64_t v50 = v49[3];
        if (v51 >= v50 >> 1) {
          uint64_t v49 = sub_43374((void *)(v50 > 1), v51 + 1, 1, v49);
        }
        v49[2] = v51 + 1;
        char v52 = &v49[7 * v51];
        v52[4] = 1702195828;
        v52[5] = 0xE400000000000000;
        v52[6] = v6;
        v52[7] = 0x7FEFFFFFFFFFFFFFLL;
        v52[8] = v6;
        v52[9] = 0;
        *((unsigned char *)v52 + 80) = 0;
      }
    }
LABEL_29:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      double v117 = sub_43264(0, v117[2] + 1, 1, v117);
    }
    unint64_t v54 = v117[2];
    unint64_t v53 = v117[3];
    unint64_t v55 = v54 + 1;
    uint64_t v8 = v83;
    uint64_t v7 = v84;
    if (v54 >= v53 >> 1)
    {
      char v61 = sub_43264((void *)(v53 > 1), v54 + 1, 1, v117);
      uint64_t v8 = v83;
      uint64_t v7 = v84;
      double v117 = v61;
    }
    v117[2] = v55;
    double v56 = &v117[2 * v54];
    *((unsigned char *)v56 + 32) = v47;
    v56[5] = v49;
    --v43;
    char v29 = v88;
    char v46 = v111;
  }
  while (v43);
  swift_bridgeObjectRetain();
  uint64_t v62 = 0;
  unsigned __int8 v115 = 0;
  uint64_t v63 = 0;
  double v64 = -1.79769313e308;
  do
  {
    uint64_t v65 = (uint64_t)&v117[2 * v62 + 4];
    unsigned __int8 v66 = *(unsigned char *)v65;
    uint64_t v67 = *(void *)(v65 + 8);
    uint64_t v68 = *(void *)(v67 + 16);
    if (v68)
    {
      swift_bridgeObjectRetain();
      uint64_t v69 = (double *)(v67 + 80);
      uint64_t v70 = _swiftEmptyArrayStorage;
      do
      {
        if ((*(unsigned char *)v69 & 1) == 0)
        {
          double v71 = *(v69 - 2);
          double v72 = exp2(-*(v69 - 1) / *(v69 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v70 = sub_41BAC(0, v70[2] + 1, 1, v70);
          }
          unint64_t v74 = v70[2];
          unint64_t v73 = v70[3];
          if (v74 >= v73 >> 1) {
            uint64_t v70 = sub_41BAC((void *)(v73 > 1), v74 + 1, 1, v70);
          }
          v70[2] = v74 + 1;
          *(double *)&v70[v74 + 4] = v71 * v72;
        }
        v69 += 7;
        --v68;
      }
      while (v68);
      swift_bridgeObjectRelease();
      uint64_t v75 = v70[2];
      if (!v75)
      {
LABEL_72:
        swift_bridgeObjectRelease();
        double v77 = 0.0;
        if (v64 < 0.0) {
          goto LABEL_55;
        }
        goto LABEL_56;
      }
    }
    else
    {
      uint64_t v70 = _swiftEmptyArrayStorage;
      uint64_t v75 = _swiftEmptyArrayStorage[2];
      if (!v75) {
        goto LABEL_72;
      }
    }
    uint64_t v76 = 0;
    double v77 = 0.0;
    do
    {
      double v78 = *(double *)&v70[v76++ + 4];
      double v77 = v77 + v78;
    }
    while (v75 != v76);
    swift_bridgeObjectRelease();
    if (v64 < v77)
    {
LABEL_55:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      unsigned __int8 v115 = v66;
      uint64_t v63 = v67;
      double v64 = v77;
    }
LABEL_56:
    ++v62;
  }
  while (v62 != v55);
  swift_bridgeObjectRelease_n();
  a2 = v80;
  if (v63)
  {
    *(void *)uint64_t v80 = v63;
    *(void *)(v80 + 8) = v115;
    *(_OWORD *)(v80 + 16) = 0u;
    *(_OWORD *)(v80 + 32) = 0u;
    unint64_t v79 = 0xC000000000000000;
  }
  else
  {
    *(_OWORD *)(v80 + 16) = 0u;
    *(_OWORD *)(v80 + 32) = 0u;
    *(_OWORD *)uint64_t v80 = 0u;
    unint64_t v79 = 0x1FFFFFFFELL;
  }
  *(void *)(v80 + 64) = 0;
  *(void *)(v80 + 48) = v79;
LABEL_8:
  *(void *)(a2 + 56) = 0;
}

void *BookHistory.affinityInfos(for:with:)(char *a1, long long *a2)
{
  long long v2 = a2[1];
  v37[0] = *a2;
  v37[1] = v2;
  long long v3 = a2[3];
  long long v5 = *a2;
  long long v4 = a2[1];
  long long v38 = a2[2];
  long long v39 = v3;
  *(_OWORD *)((char *)v60 + 11) = *(long long *)((char *)a2 + 347);
  long long v6 = a2[7];
  long long v7 = a2[8];
  long long v8 = a2[10];
  long long v48 = a2[9];
  long long v49 = v8;
  long long v9 = a2[8];
  long long v10 = a2[9];
  long long v11 = a2[7];
  long long v46 = v6;
  long long v47 = v9;
  long long v12 = a2[12];
  long long v13 = a2[14];
  long long v52 = a2[13];
  long long v53 = v13;
  long long v14 = a2[10];
  long long v15 = a2[12];
  long long v50 = a2[11];
  long long v51 = v15;
  long long v16 = a2[16];
  long long v17 = a2[18];
  long long v56 = a2[17];
  long long v57 = v17;
  long long v18 = a2[14];
  long long v19 = a2[16];
  long long v54 = a2[15];
  long long v55 = v19;
  long long v20 = a2[20];
  v60[0] = a2[21];
  long long v21 = a2[20];
  long long v22 = a2[18];
  long long v58 = a2[19];
  long long v59 = v21;
  v61[0] = v5;
  v61[1] = v4;
  long long v23 = a2[3];
  v61[2] = v38;
  v61[3] = v23;
  *(_OWORD *)&v82[11] = *(long long *)((char *)a2 + 347);
  long long v70 = v10;
  long long v71 = v14;
  char v24 = *a1;
  long long v68 = v11;
  long long v69 = v7;
  uint64_t v25 = *((void *)a2 + 8);
  uint64_t v26 = *((void *)a2 + 9);
  uint64_t v27 = *((void *)a2 + 10);
  uint64_t v28 = *((void *)a2 + 11);
  long long v74 = v52;
  long long v75 = v18;
  uint64_t v29 = *((void *)a2 + 12);
  uint64_t v30 = *((void *)a2 + 13);
  char v83 = v24;
  uint64_t v62 = v25;
  uint64_t v63 = v26;
  uint64_t v64 = v27;
  uint64_t v65 = v28;
  uint64_t v66 = v29;
  uint64_t v67 = v30;
  long long v72 = v50;
  long long v73 = v12;
  long long v31 = a2[21];
  long long v78 = v56;
  long long v79 = v22;
  long long v76 = v54;
  long long v77 = v16;
  long long v81 = v20;
  *(_OWORD *)char v82 = v31;
  long long v80 = v58;
  long long v32 = (void *)BookHistory.affinityInfosExcludingDecline(for:with:)(&v83, v61);
  uint64_t v40 = v25;
  uint64_t v41 = v26;
  uint64_t v42 = v27;
  uint64_t v43 = v28;
  uint64_t v44 = v29;
  uint64_t v45 = v30;
  if (sub_18AB80((uint64_t)v37))
  {
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      long long v32 = sub_43374(0, v32[2] + 1, 1, v32);
    }
    unint64_t v34 = v32[2];
    unint64_t v33 = v32[3];
    if (v34 >= v33 >> 1) {
      long long v32 = sub_43374((void *)(v33 > 1), v34 + 1, 1, v32);
    }
    v32[2] = v34 + 1;
    double v35 = &v32[7 * v34];
    v35[4] = 1702195828;
    v35[5] = 0xE400000000000000;
    v35[6] = v25;
    v35[7] = 0x7FEFFFFFFFFFFFFFLL;
    v35[8] = v25;
    v35[9] = 0;
    *((unsigned char *)v35 + 80) = 0;
  }
  return v32;
}

void *BookHistory.affinityInfosExcludingDecline(for:with:)(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v3 = *a1;
  double v5 = *(double *)a2;
  double v4 = *(double *)(a2 + 8);
  double v6 = *(double *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  double v8 = *(double *)(a2 + 32);
  double v9 = *(double *)(a2 + 40);
  double v10 = *(double *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v12 = *(void *)(a2 + 144);
  uint64_t v13 = *(void *)(a2 + 152);
  uint64_t v140 = *(void *)(a2 + 160);
  uint64_t v141 = *(void *)(a2 + 168);
  uint64_t v15 = *(void *)(a2 + 176);
  uint64_t v14 = *(void *)(a2 + 184);
  uint64_t v17 = *(void *)(a2 + 224);
  uint64_t v16 = *(void *)(a2 + 232);
  uint64_t v18 = *(void *)(a2 + 240);
  uint64_t v19 = *(void *)(a2 + 248);
  uint64_t v20 = *(void *)(a2 + 256);
  uint64_t v21 = *(void *)(a2 + 264);
  double v23 = *(double *)(a2 + 312);
  double v22 = *(double *)(a2 + 320);
  double v24 = *(double *)v2;
  double v25 = *((double *)v2 + 1);
  char v26 = *((unsigned char *)v2 + 16);
  double v137 = *((double *)v2 + 3);
  char v27 = *((unsigned char *)v2 + 32);
  char v225 = v27;
  uint64_t v28 = v2[5];
  double v139 = *((double *)v2 + 6);
  double v138 = *((double *)v2 + 7);
  long long v29 = *((_OWORD *)v2 + 4);
  int v30 = *((unsigned __int8 *)v2 + 80);
  double v31 = *((double *)v2 + 20);
  char v32 = *((unsigned char *)v2 + 168);
  char v224 = v32;
  double v33 = *((double *)v2 + 22);
  char v34 = *((unsigned char *)v2 + 184);
  uint64_t v35 = v2[24];
  char v36 = *((unsigned char *)v2 + 200);
  double v37 = *((double *)v2 + 26);
  double v38 = *((double *)v2 + 27);
  uint64_t v39 = v2[28];
  int v40 = *((unsigned __int8 *)v2 + 240);
  double v41 = *((double *)v2 + 31);
  char v42 = *((unsigned char *)v2 + 256);
  double v44 = *((double *)v2 + 33);
  double v43 = *((double *)v2 + 34);
  uint64_t v45 = v2[35];
  int v46 = *((unsigned __int8 *)v2 + 296);
  uint64_t v47 = v2[38];
  char v48 = *((unsigned char *)v2 + 312);
  switch(v3)
  {
    case 1:
      *(_DWORD *)v211 = *(_DWORD *)((char *)v2 + 257);
      *(_DWORD *)v217 = *(_DWORD *)((char *)v2 + 297);
      double v178 = v24;
      double v179 = v25;
      char v180 = v26;
      *(_DWORD *)v181 = *(_DWORD *)((char *)v2 + 17);
      *(_DWORD *)&v181[3] = *((_DWORD *)v2 + 5);
      char v183 = v27;
      *(_DWORD *)v184 = *(_DWORD *)((char *)v2 + 33);
      *(_DWORD *)&v184[3] = *((_DWORD *)v2 + 9);
      uint64_t v185 = v28;
      double v186 = v139;
      double v187 = v138;
      char v189 = v30;
      *(_DWORD *)long long v196 = *(_DWORD *)((char *)v2 + 169);
      *(_DWORD *)&v199[3] = *((_DWORD *)v2 + 47);
      *(_DWORD *)long long v199 = *(_DWORD *)((char *)v2 + 185);
      *(_DWORD *)&v202[3] = *((_DWORD *)v2 + 51);
      *(_DWORD *)long long v202 = *(_DWORD *)((char *)v2 + 201);
      *(_DWORD *)&v208[3] = *((_DWORD *)v2 + 61);
      *(_DWORD *)long long v208 = *(_DWORD *)((char *)v2 + 241);
      long long v191 = *(_OWORD *)((char *)v2 + 97);
      long long v192 = *(_OWORD *)((char *)v2 + 113);
      *(_OWORD *)long long v193 = *(_OWORD *)((char *)v2 + 129);
      long long v190 = *(_OWORD *)((char *)v2 + 81);
      char v195 = v32;
      *(_DWORD *)&v196[3] = *((_DWORD *)v2 + 43);
      double v197 = v33;
      char v198 = v34;
      uint64_t v200 = v35;
      char v201 = v36;
      double v203 = v37;
      double v204 = v38;
      uint64_t v51 = v2[29];
      uint64_t v205 = v39;
      uint64_t v206 = v51;
      char v207 = v40;
      double v209 = v41;
      char v210 = v42;
      *(_DWORD *)&v211[3] = *((_DWORD *)v2 + 65);
      uint64_t v52 = v2[36];
      uint64_t v214 = v45;
      uint64_t v215 = v52;
      char v216 = v46;
      *(_DWORD *)&v217[3] = *((_DWORD *)v2 + 75);
      uint64_t v218 = v47;
      char v219 = v48;
      long long v53 = *((_OWORD *)v2 + 9);
      long long v54 = *(_OWORD *)((char *)v2 + 313);
      long long v55 = *(_OWORD *)((char *)v2 + 329);
      long long v56 = *(_OWORD *)((char *)v2 + 361);
      long long v222 = *(_OWORD *)((char *)v2 + 345);
      long long v223 = v56;
      long long v220 = v54;
      long long v221 = v55;
      char v177 = 5;
      uint64_t v156 = v12;
      uint64_t v157 = v13;
      uint64_t v158 = v140;
      uint64_t v159 = v141;
      *(_DWORD *)&v176[15] = *(_DWORD *)(a2 + 359);
      long long v57 = *(_OWORD *)(a2 + 344);
      long long v175 = *(_OWORD *)(a2 + 328);
      *(_OWORD *)uint64_t v176 = v57;
      long long v58 = *(_OWORD *)(a2 + 96);
      long long v59 = *(_OWORD *)(a2 + 112);
      long long v60 = *(_OWORD *)(a2 + 128);
      long long v62 = *(_OWORD *)(a2 + 64);
      long long v61 = *(_OWORD *)(a2 + 80);
      long long v63 = *(_OWORD *)(a2 + 192);
      long long v64 = *(_OWORD *)(a2 + 208);
      long long v65 = *(_OWORD *)(a2 + 272);
      long long v66 = *(_OWORD *)(a2 + 288);
      uint64_t v172 = *(void *)(a2 + 304);
      long long v188 = v29;
      *(_OWORD *)&v193[15] = v53;
      double v212 = v44;
      double v213 = v43;
      *(double *)&long long v144 = v5;
      *((double *)&v144 + 1) = v4;
      double v145 = v6;
      uint64_t v146 = v7;
      double v182 = v137;
      double v67 = v31;
      double v194 = v31;
      double v147 = v8;
      double v148 = v9;
      double v149 = v10;
      uint64_t v150 = v11;
      uint64_t v142 = v11;
      long long v153 = v58;
      long long v154 = v59;
      long long v155 = v60;
      long long v152 = v61;
      long long v151 = v62;
      uint64_t v160 = v15;
      uint64_t v161 = v14;
      long long v162 = v63;
      long long v163 = v64;
      uint64_t v164 = v17;
      uint64_t v165 = v16;
      uint64_t v166 = v18;
      uint64_t v167 = v19;
      uint64_t v168 = v20;
      uint64_t v169 = v21;
      long long v170 = v65;
      long long v171 = v66;
      double v173 = v23;
      double v174 = v22;
      long long v68 = BookHistory.affinityInfos(for:with:)(&v177, &v144);
      if (v225 & 1) != 0 || (v224)
      {
        swift_bridgeObjectRelease();
        return _swiftEmptyArrayStorage;
      }
      if (v9 > v137) {
        double v119 = v8 * v137;
      }
      else {
        double v119 = v8 + v10;
      }
      sub_12124(&qword_26D7F0);
      uint64_t v120 = swift_allocObject();
      *(_OWORD *)(v120 + 16) = xmmword_1FD2A0;
      *(void *)(v120 + 56) = &type metadata for Double;
      *(void *)(v120 + 64) = &protocol witness table for Double;
      *(double *)(v120 + 32) = v119;
      uint64_t v121 = sub_1FB840();
      uint64_t v123 = v122;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v73 = (uint64_t)v68;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v73 = (uint64_t)sub_43374(0, v68[2] + 1, 1, v68);
      }
      unint64_t v125 = *(void *)(v73 + 16);
      unint64_t v124 = *(void *)(v73 + 24);
      unint64_t v126 = v125 + 1;
      uint64_t v127 = v142;
      if (v125 >= v124 >> 1)
      {
        long long v136 = sub_43374((void *)(v124 > 1), v125 + 1, 1, (void *)v73);
        uint64_t v127 = v142;
        double v128 = v67;
        unint64_t v126 = v125 + 1;
        uint64_t v73 = (uint64_t)v136;
      }
      else
      {
        double v128 = v67;
      }
      *(void *)(v73 + 16) = v126;
      uint64_t v129 = v73 + 56 * v125;
      *(void *)(v129 + 32) = v121;
      *(void *)(v129 + 40) = v123;
      *(void *)(v129 + 48) = 0x3FF0000000000000;
      *(void *)(v129 + 56) = v127;
      *(double *)(v129 + 64) = v119;
      *(double *)(v129 + 72) = v128;
      *(unsigned char *)(v129 + 80) = 0;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (void *)v73;
    case 2:
      uint64_t v143 = v29;
      double v69 = v23;
      uint64_t v70 = v15;
      uint64_t v71 = v14;
      sub_12124(&qword_26D5D8);
      uint64_t v72 = swift_allocObject();
      uint64_t v73 = v72;
      *(_OWORD *)(v72 + 16) = xmmword_1FD2A0;
      if (v30 == 255)
      {
        uint64_t v74 = 0;
        double v75 = 0.0;
        unint64_t v76 = 0xA300000000000000;
        char v77 = 1;
        uint64_t v78 = 9732322;
        uint64_t v79 = v70;
LABEL_78:
        *(void *)(v72 + 32) = v78;
        *(void *)(v72 + 40) = v76;
        *(void *)(v72 + 48) = v79;
        *(void *)(v72 + 56) = v71;
        *(void *)(v72 + 64) = v74;
        *(double *)(v72 + 72) = v75;
        *(unsigned char *)(v72 + 80) = v77;
        return (void *)v73;
      }
      uint64_t v79 = v70;
      if ((v34 & 1) == 0) {
        goto LABEL_77;
      }
      if (v36 & 1) != 0 && (v30)
      {
        double v101 = v69 * (double)v143;
        if (v101 + v139 <= v138) {
          double v75 = v101 + v139;
        }
        else {
          double v75 = v138;
        }
      }
      else
      {
        double v75 = v139;
        if ((v36 & 1) == 0)
        {
LABEL_77:
          uint64_t v74 = 0;
          double v75 = 0.0;
          unint64_t v76 = 0xA300000000000000;
          char v77 = 1;
          uint64_t v78 = 9732322;
          goto LABEL_78;
        }
      }
      char v77 = 0;
      uint64_t v74 = v70;
      unint64_t v76 = 0xE400000000000000;
      uint64_t v78 = 1702195828;
      goto LABEL_78;
    case 3:
      uint64_t v80 = v13;
      uint64_t v81 = v12;
      sub_12124(&qword_26D5D8);
      uint64_t v82 = swift_allocObject();
      uint64_t v73 = v82;
      *(_OWORD *)(v82 + 16) = xmmword_1FD2A0;
      if (v34)
      {
        uint64_t v83 = 0;
        double v33 = 0.0;
        unint64_t v84 = 0xA300000000000000;
        uint64_t v85 = 9732322;
      }
      else
      {
        unint64_t v84 = 0xE400000000000000;
        uint64_t v85 = 1702195828;
        uint64_t v83 = v81;
      }
      *(void *)(v82 + 32) = v85;
      *(void *)(v82 + 40) = v84;
      *(void *)(v82 + 48) = v81;
      *(void *)(v82 + 56) = v80;
      *(void *)(v82 + 64) = v83;
      *(double *)(v82 + 72) = v33;
      *(unsigned char *)(v82 + 80) = v34 & 1;
      return (void *)v73;
    case 4:
      sub_12124(&qword_26D5D8);
      uint64_t v86 = swift_allocObject();
      uint64_t v73 = v86;
      *(_OWORD *)(v86 + 16) = xmmword_1FD2A0;
      if (v36)
      {
        uint64_t v87 = 0;
        uint64_t v35 = 0;
        unint64_t v88 = 0xA300000000000000;
        uint64_t v89 = 9732322;
        uint64_t v90 = v140;
      }
      else
      {
        unint64_t v88 = 0xE400000000000000;
        uint64_t v89 = 1702195828;
        uint64_t v90 = v140;
        uint64_t v87 = v140;
      }
      *(void *)(v86 + 32) = v89;
      *(void *)(v86 + 40) = v88;
      *(void *)(v86 + 48) = v90;
      *(void *)(v86 + 56) = v141;
      *(void *)(v86 + 64) = v87;
      *(void *)(v86 + 72) = v35;
      *(unsigned char *)(v86 + 80) = v36 & 1;
      return (void *)v73;
    case 5:
      double v91 = 0.0;
      double v92 = 0.0;
      if (v46 != 255)
      {
        if (v46)
        {
          double v92 = *((double *)v2 + 34);
          if (v22 * (double)v45 + v44 <= v43) {
            double v92 = v22 * (double)v45 + v44;
          }
        }
        else
        {
          double v92 = *((double *)v2 + 33);
        }
      }
      sub_12124(&qword_26D5D8);
      uint64_t v130 = swift_allocObject();
      uint64_t v73 = v130;
      *(_OWORD *)(v130 + 16) = xmmword_1FD2A0;
      if (v46 == 255)
      {
        uint64_t v131 = 0;
        unint64_t v132 = 0xA300000000000000;
        uint64_t v133 = 9732322;
      }
      else
      {
        uint64_t v131 = v17;
        unint64_t v132 = 0xE400000000000000;
        uint64_t v133 = 1702195828;
        double v91 = v92;
      }
      *(void *)(v130 + 32) = v133;
      *(void *)(v130 + 40) = v132;
      *(void *)(v130 + 48) = v17;
      *(void *)(v130 + 56) = v16;
      *(void *)(v130 + 64) = v131;
      *(double *)(v130 + 72) = v91;
      *(unsigned char *)(v130 + 80) = v46 == 255;
      return (void *)v73;
    case 6:
      if (v40 == 255)
      {
        uint64_t v93 = v19;
        double v94 = 0.0;
        char v95 = 1;
      }
      else
      {
        double v102 = *((double *)v2 + 26);
        if (v40)
        {
          double v102 = *((double *)v2 + 27);
          if (v23 * (double)v39 + v37 <= v38) {
            double v102 = v23 * (double)v39 + v37;
          }
        }
        uint64_t v93 = v19;
        BOOL v103 = (v42 & 1) == 0;
        BOOL v104 = v102 >= v41;
        char v95 = v103 && v104;
        if (v103 && v104) {
          double v94 = 0.0;
        }
        else {
          double v94 = v102;
        }
      }
      sub_12124(&qword_26D5D8);
      uint64_t v105 = swift_allocObject();
      uint64_t v73 = v105;
      *(_OWORD *)(v105 + 16) = xmmword_1FD2A0;
      if (v95)
      {
        uint64_t v106 = 0;
        double v94 = 0.0;
        unint64_t v107 = 0xA300000000000000;
        uint64_t v108 = 9732322;
      }
      else
      {
        uint64_t v106 = v18;
        unint64_t v107 = 0xE400000000000000;
        uint64_t v108 = 1702195828;
      }
      *(void *)(v105 + 32) = v108;
      *(void *)(v105 + 40) = v107;
      *(void *)(v105 + 48) = v18;
      *(void *)(v105 + 56) = v93;
      *(void *)(v105 + 64) = v106;
      *(double *)(v105 + 72) = v94;
      *(unsigned char *)(v105 + 80) = v95 & 1;
      return (void *)v73;
    case 7:
      sub_12124(&qword_26D5D8);
      uint64_t v96 = swift_allocObject();
      uint64_t v73 = v96;
      *(_OWORD *)(v96 + 16) = xmmword_1FD2A0;
      if (v48)
      {
        uint64_t v97 = 0;
        uint64_t v47 = 0;
        unint64_t v98 = 0xA300000000000000;
        uint64_t v99 = 9732322;
      }
      else
      {
        uint64_t v97 = v20;
        unint64_t v98 = 0xE400000000000000;
        uint64_t v99 = 1702195828;
      }
      *(void *)(v96 + 32) = v99;
      *(void *)(v96 + 40) = v98;
      *(void *)(v96 + 48) = v20;
      *(void *)(v96 + 56) = v21;
      *(void *)(v96 + 64) = v97;
      *(void *)(v96 + 72) = v47;
      *(unsigned char *)(v96 + 80) = v48 & 1;
      return (void *)v73;
    default:
      if (v2[23])
      {
        if (v2[25])
        {
          if (v30 != 255)
          {
            uint64_t v49 = v15;
            uint64_t v50 = v14;
            if (v30)
            {
              double v33 = v138;
              double v135 = v23 * (double)(uint64_t)v29;
              if (v135 + v139 <= v138) {
                double v33 = v135 + v139;
              }
            }
            else
            {
              double v33 = v139;
            }
            uint64_t v111 = v7;
            if (v32) {
              double v109 = v33;
            }
            else {
              double v109 = v31;
            }
            double v110 = 1.0;
            goto LABEL_55;
          }
          return _swiftEmptyArrayStorage;
        }
        unsigned __int8 v100 = 0;
        double v33 = *((double *)v2 + 24);
        uint64_t v12 = v140;
        uint64_t v13 = v141;
      }
      else
      {
        unsigned __int8 v100 = 64;
      }
      if (v32) {
        double v109 = v33;
      }
      else {
        double v109 = v31;
      }
      if (v30 == 255 || (double v110 = 1.0, (_BYTE)v28))
      {
        if ((v26 & 1) != 0 || (double v110 = v25, v25 <= 0.0))
        {
          sub_18D4C4(1702195828, 0xE400000000000000, v12, v13, v12, *(uint64_t *)&v33, v100);
          return _swiftEmptyArrayStorage;
        }
      }
      uint64_t v111 = v7;
      uint64_t v50 = v13;
      uint64_t v49 = v12;
LABEL_55:
      double v112 = v5 * v110;
      double v113 = v5 + v6;
      if (v4 > v110) {
        double v114 = v112;
      }
      else {
        double v114 = v113;
      }
      sub_12124(&qword_26D7F0);
      uint64_t v115 = swift_allocObject();
      *(_OWORD *)(v115 + 16) = xmmword_1FD2A0;
      *(void *)(v115 + 56) = &type metadata for Double;
      *(void *)(v115 + 64) = &protocol witness table for Double;
      *(double *)(v115 + 32) = v114;
      uint64_t v116 = sub_1FB840();
      uint64_t v118 = v117;
      sub_12124(&qword_26D5D8);
      uint64_t v73 = swift_allocObject();
      *(_OWORD *)(v73 + 16) = xmmword_2055D0;
      *(void *)(v73 + 32) = 1702195828;
      *(void *)(v73 + 40) = 0xE400000000000000;
      *(void *)(v73 + 48) = v49;
      *(void *)(v73 + 56) = v50;
      *(void *)(v73 + 64) = v49;
      *(double *)(v73 + 72) = v33;
      *(unsigned char *)(v73 + 80) = 0;
      *(void *)(v73 + 88) = v116;
      *(void *)(v73 + 96) = v118;
      *(void *)(v73 + 104) = 0x3FF0000000000000;
      *(void *)(v73 + 112) = v111;
      *(double *)(v73 + 120) = v114;
      *(double *)(v73 + 128) = v109;
      *(unsigned char *)(v73 + 136) = 0;
      return (void *)v73;
  }
}

uint64_t BookHistory.rawAffinity(with:)(long long *a1)
{
  BookHistory.internalAffinitySource(with:)(a1, (uint64_t)v13);
  unint64_t v1 = v14;
  if ((v14 & 0xFFFFFFFFFFFFFFFELL) == 0x1FFFFFFFELL) {
    return 0;
  }
  uint64_t v3 = v13[0];
  uint64_t v4 = v13[1];
  uint64_t v5 = v13[2];
  uint64_t v6 = v13[3];
  uint64_t v7 = v13[4];
  uint64_t v8 = v13[5];
  if (v14 >> 62 == 3)
  {
    uint64_t v9 = v13[0];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    *(void *)(v9 + 48) = v5;
    *(void *)(v9 + 56) = v6;
    *(void *)(v9 + 64) = v7;
    *(void *)(v9 + 72) = v8;
    *(unsigned char *)(v9 + 80) = v1 & 1;
  }
  sub_1244C();
  uint64_t v12 = Array<A>.rawAffinity.getter(v9);
  char v11 = v10;
  swift_bridgeObjectRelease();
  sub_1255C(v3, v4, v5, v6, v7, v8, v1);
  if (v11) {
    return 0;
  }
  else {
    return v12;
  }
}

void sub_18D3F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a1 >= 1)
  {
    if (a2)
    {
      if (a1 % a2) {
        return;
      }
      double v3 = round(pow(*(long double *)(a3 + 32), (double)(a1 / a2 - 1)) * (double)*(uint64_t *)(a3 + 24));
      if ((~*(void *)&v3 & 0x7FF0000000000000) != 0)
      {
        if (v3 > -9.22337204e18)
        {
          if (v3 < 9.22337204e18) {
            return;
          }
LABEL_12:
          __break(1u);
          return;
        }
LABEL_11:
        __break(1u);
        goto LABEL_12;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_11;
  }
}

uint64_t sub_18D4C4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 0xFDu) {
    return sub_18D4D8(a1, a2, a3, a4, a5, a6, a7);
  }
  return a1;
}

uint64_t sub_18D4D8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned __int8 a7)
{
  if (a7 <= 0xBFu) {
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_18D4F0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  uint64_t v5 = **(uint64_t (***)(uint64_t, uint64_t, uint64_t))(v4 - 8);

  return v5(a1, a2, v4);
}

uint64_t sub_18D55C(uint64_t a1)
{
  uint64_t v2 = sub_1FB110();
  double v3 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8);

  return v3(a1, v2);
}

uint64_t sub_18D5C0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a1, a2, v4);
  return a1;
}

uint64_t sub_18D624(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a1, a2, v4);
  return a1;
}

uint64_t sub_18D688(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a1, a2, v4);
  return a1;
}

uint64_t sub_18D6EC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a1, a2, v4);
  return a1;
}

uint64_t sub_18D750(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_18D764);
}

uint64_t sub_18D764(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_18D7D0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_18D7E4);
}

uint64_t sub_18D7E4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB110();
  uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 56);

  return v5(a1, a2, a2, v4);
}

uint64_t type metadata accessor for GenreRecommendationWork()
{
  uint64_t result = qword_272830;
  if (!qword_272830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_18D8A0()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_18D92C()
{
  return sub_18E53C(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
}

void *sub_18D974(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  sub_46B2C(0, v6, 0);
  int64_t v7 = v6;
  int64_t v34 = v5;
  unint64_t v36 = v4;
  uint64_t v38 = a1;
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 32);
    uint64_t v9 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    int64_t v11 = v7;
    uint64_t v12 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      uint64_t v13 = *v8;
      uint64_t v14 = *v9;
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1)
      {
        uint64_t v32 = v12;
        uint64_t v31 = *v8;
        uint64_t result = (void *)sub_46B2C(v15 > 1, v16 + 1, 1);
        uint64_t v13 = v31;
        uint64_t v12 = v32;
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[4 * v16];
      v17[4] = v13;
      *((unsigned char *)v17 + 40) = v14 == 1;
      --v5;
      v17[6] = _swiftEmptyArrayStorage;
      v17[7] = 0;
      --v4;
      ++v9;
      ++v8;
      if (!--v11) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v12 = a2;
LABEL_13:
    if (v36 <= v34)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    uint64_t v18 = 0;
    if (v7 <= v34) {
      int64_t v19 = v34;
    }
    else {
      int64_t v19 = v7;
    }
    int64_t v20 = v19 - v7;
    unint64_t v21 = v36 - v7;
    int64_t v22 = v34 - v7;
    uint64_t v23 = 8 * v7 + 32;
    uint64_t v24 = v38 + v23;
    uint64_t v25 = v12 + v23;
    while (v21 != v18)
    {
      if (v22 == v18) {
        goto LABEL_24;
      }
      if (v20 == v18) {
        goto LABEL_28;
      }
      uint64_t v26 = *(void *)(v24 + 8 * v18);
      uint64_t v27 = *(void *)(v25 + 8 * v18);
      unint64_t v29 = _swiftEmptyArrayStorage[2];
      unint64_t v28 = _swiftEmptyArrayStorage[3];
      if (v29 >= v28 >> 1)
      {
        uint64_t v33 = v12;
        uint64_t v35 = v22;
        uint64_t v37 = v20;
        uint64_t result = (void *)sub_46B2C(v28 > 1, v29 + 1, 1);
        int64_t v22 = v35;
        int64_t v20 = v37;
        uint64_t v12 = v33;
      }
      _swiftEmptyArrayStorage[2] = v29 + 1;
      int v30 = &_swiftEmptyArrayStorage[4 * v29];
      v30[4] = v26;
      *((unsigned char *)v30 + 40) = v27 == 1;
      v30[6] = _swiftEmptyArrayStorage;
      v30[7] = 0;
      if (v21 == ++v18) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

void *sub_18DBD8(uint64_t a1, uint64_t a2)
{
  unint64_t v33 = *(void *)(a1 + 16);
  if (*(void *)(a2 + 16) >= v33) {
    int64_t v4 = *(void *)(a1 + 16);
  }
  else {
    int64_t v4 = *(void *)(a2 + 16);
  }
  sub_469A8(0, v4, 0);
  int64_t v5 = v4;
  uint64_t v31 = a2;
  uint64_t v32 = a1;
  if (v4)
  {
    int64_t v6 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    int64_t v7 = (void *)(a1 + 56);
    int64_t v8 = v5;
    while (1)
    {
      uint64_t v9 = *(v7 - 3);
      char v10 = *((unsigned char *)v7 - 16);
      uint64_t v11 = *(v7 - 1);
      uint64_t v12 = *v7;
      uint64_t v13 = v6 + 1;
      uint64_t v14 = *v6;
      uint64_t v35 = v13;
      swift_bridgeObjectRetain();
      uint64_t result = (void *)swift_bridgeObjectRetain();
      if (!v11) {
        break;
      }
      unint64_t v17 = _swiftEmptyArrayStorage[2];
      unint64_t v16 = _swiftEmptyArrayStorage[3];
      unint64_t v18 = v17 + 1;
      if (v17 >= v16 >> 1)
      {
        uint64_t result = (void *)sub_469A8(v16 > 1, v17 + 1, 1);
        unint64_t v18 = v17 + 1;
      }
      _swiftEmptyArrayStorage[2] = v18;
      int64_t v19 = &_swiftEmptyArrayStorage[5 * v17];
      v19[4] = v9;
      v7 += 4;
      *((unsigned char *)v19 + 40) = v10;
      v19[6] = v11;
      v19[7] = v12;
      v19[8] = v14;
      --v8;
      int64_t v6 = v35;
      if (!v8) {
        goto LABEL_12;
      }
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
LABEL_12:
    if (v33 <= v30)
    {
LABEL_19:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    unint64_t v20 = v30 - v5;
    unint64_t v21 = v33 - v5;
    int64_t v22 = (uint64_t *)(v31 + 8 * v5 + 32);
    uint64_t v23 = v32 + 32 * v5 + 32;
    while (v21)
    {
      if (v20)
      {
        uint64_t v36 = *(void *)v23;
        char v34 = *(unsigned char *)(v23 + 8);
        uint64_t v24 = *(void *)(v23 + 16);
        uint64_t v25 = *(void *)(v23 + 24);
        uint64_t v26 = *v22;
        unint64_t v28 = _swiftEmptyArrayStorage[2];
        unint64_t v27 = _swiftEmptyArrayStorage[3];
        swift_bridgeObjectRetain();
        uint64_t result = (void *)swift_bridgeObjectRetain();
        if (v28 >= v27 >> 1) {
          uint64_t result = (void *)sub_469A8(v27 > 1, v28 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v28 + 1;
        unint64_t v29 = &_swiftEmptyArrayStorage[5 * v28];
        v29[4] = v36;
        *((unsigned char *)v29 + 40) = v34;
        v29[6] = v24;
        v29[7] = v25;
        v29[8] = v26;
        --v20;
        ++v22;
        v23 += 32;
        if (--v21) {
          continue;
        }
      }
      goto LABEL_19;
    }
    __break(1u);
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_18DE2C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v2 = a1[30];
  if (v2)
  {
    uint64_t v18 = a1[29];
    uint64_t v15 = a1[33];
    uint64_t v16 = a1[34];
    uint64_t v4 = a1[32];
    uint64_t v17 = a1[31];
    uint64_t v5 = qword_26C390;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v5 != -1) {
      swift_once();
    }
    int64_t v6 = (void *)qword_272B70;
    sub_12124(&qword_26D7F0);
    uint64_t v7 = swift_allocObject();
    *(_OWORD *)(v7 + 16) = xmmword_202680;
    sub_1FB110();
    sub_18E53C((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
    id v8 = v6;
    uint64_t v9 = sub_1FC580();
    uint64_t v11 = v10;
    *(void *)(v7 + 56) = &type metadata for String;
    unint64_t v12 = sub_5FD80();
    *(void *)(v7 + 32) = v9;
    *(void *)(v7 + 40) = v11;
    *(void *)(v7 + 96) = &type metadata for String;
    *(void *)(v7 + 104) = v12;
    *(void *)(v7 + 64) = v12;
    *(void *)(v7 + 72) = v18;
    *(void *)(v7 + 80) = v2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v19._countAndFlagsBits = 41;
    v19._object = (void *)0xE100000000000000;
    sub_1FB8F0(v19);
    *(void *)(v7 + 136) = &type metadata for String;
    *(void *)(v7 + 144) = v12;
    *(void *)(v7 + 112) = v17;
    *(void *)(v7 + 120) = v4;
    *(void *)(v7 + 176) = &type metadata for String;
    *(void *)(v7 + 184) = v12;
    *(void *)(v7 + 152) = v15;
    *(void *)(v7 + 160) = v16;
    swift_bridgeObjectRetain();
    sub_1FBDC0();
    sub_1FB400();

    swift_bridgeObjectRelease();
    sub_1FB690();
    sub_1FB680();
    sub_12124(&qword_26D370);
    uint64_t v13 = swift_allocObject();
    *(_OWORD *)(v13 + 16) = xmmword_2026C0;
    *(void *)(v13 + 32) = v18;
    *(void *)(v13 + 40) = v2;
    *(void *)(v13 + 48) = v17;
    *(void *)(v13 + 56) = v4;
    *(void *)(v13 + 64) = v15;
    *(void *)(v13 + 72) = v16;
    sub_1FB660();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1FB650();
    *a2 = result;
    a2[1] = v18;
    a2[2] = v2;
    a2[3] = v17;
    a2[4] = v4;
    a2[5] = v15;
    a2[6] = v16;
  }
  else
  {
    sub_18E5DC();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

void *sub_18E0E8()
{
  uint64_t v0 = sub_1E4E94();
  if (!v0)
  {
    if (qword_26C390 == -1) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E4E94();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    if (qword_26C390 == -1) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v3 = v2;
  uint64_t v4 = sub_1E4B04();
  if (!v4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26C390 == -1)
    {
LABEL_14:
      id v9 = (id)qword_272B70;
      sub_1FBD90();
      id v8 = _swiftEmptyArrayStorage;
      sub_1FB400();

      return v8;
    }
LABEL_16:
    swift_once();
    goto LABEL_14;
  }
  uint64_t v5 = (uint64_t)v4;
  uint64_t v6 = *(void *)(v3 + 16);
  if (v6 != *(void *)(v1 + 16) || v4[2] != v6)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26C390 == -1) {
      goto LABEL_14;
    }
    goto LABEL_16;
  }
  uint64_t v7 = sub_18D974(v1, v3);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  id v8 = sub_18DBD8((uint64_t)v7, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8;
}

unint64_t sub_18E3BC()
{
  return 0xD000000000000014;
}

double sub_18E3D8@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_18DE2C(a1, (uint64_t *)v6);
  if (!v2)
  {
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    double result = *(double *)&v7;
    *(_OWORD *)(a2 + 32) = v7;
    *(void *)(a2 + 48) = v8;
  }
  return result;
}

void *sub_18E428@<X0>(void *a1@<X8>)
{
  double result = sub_18E0E8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_18E454(uint64_t a1)
{
  uint64_t result = sub_18E53C((unint64_t *)&qword_26FFC0, (void (*)(uint64_t))type metadata accessor for GenreRecommendationWork);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_18E4AC()
{
  return sub_18E53C(&qword_272868, (void (*)(uint64_t))type metadata accessor for GenreRecommendationWork);
}

uint64_t sub_18E4F4()
{
  return sub_18E53C((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_18E53C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_18E588()
{
  unint64_t result = qword_272870;
  if (!qword_272870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272870);
  }
  return result;
}

unint64_t sub_18E5DC()
{
  unint64_t result = qword_272878;
  if (!qword_272878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272878);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for GenreRecommendationWork.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x18E6CCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreRecommendationWork.Errors()
{
  return &type metadata for GenreRecommendationWork.Errors;
}

uint64_t destroy for GenreRecommendationWork.Context()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for GenreRecommendationWork.Context(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  uint64_t v5 = a2[5];
  a1[4] = a2[4];
  a1[5] = v5;
  a1[6] = a2[6];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for GenreRecommendationWork.Context(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for GenreRecommendationWork.Context(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = a2[6];
  a1[5] = a2[5];
  a1[6] = v6;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for GenreRecommendationWork.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for GenreRecommendationWork.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for GenreRecommendationWork.Context()
{
  return &type metadata for GenreRecommendationWork.Context;
}

unint64_t sub_18E970()
{
  unint64_t result = qword_272880;
  if (!qword_272880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272880);
  }
  return result;
}

uint64_t sub_18E9C4(uint64_t a1, uint64_t a2)
{
  uint64_t v54 = a2;
  uint64_t v4 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  uint64_t v5 = *((void *)v4 - 1);
  __chkstk_darwin(v4);
  long long v7 = (char *)&v48 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v8 = *(void *)(a1 + 16);
  id v9 = _swiftEmptyArrayStorage;
  if (!v8) {
    return (uint64_t)v9;
  }
  uint64_t v59 = v2;
  long long v64 = _swiftEmptyArrayStorage;
  sub_468BC(0, v8, 0);
  uint64_t v10 = 0;
  unint64_t v51 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  int64_t v52 = v8;
  uint64_t v53 = a1 + v51;
  uint64_t v11 = *(void *)(v5 + 72);
  uint64_t v49 = v7;
  uint64_t v50 = v11;
  while (1)
  {
    uint64_t v58 = v10;
    uint64_t v12 = v53 + v11 * v10;
    uint64_t v13 = *(void *)(v12 + v4[5]);
    uint64_t v14 = *(void *)(v13 + 16);
    if (v14) {
      break;
    }
    swift_bridgeObjectRetain();
    uint64_t v15 = (char *)_swiftEmptyArrayStorage;
LABEL_7:
    v61[0] = (uint64_t)v15;
    uint64_t v18 = v59;
    sub_18F92C(v61, (uint64_t (*)(uint64_t *, void *))sub_1DB0F0);
    if (v18) {
      goto LABEL_21;
    }
    swift_bridgeObjectRelease();
    sub_12124(&qword_26EC48);
    sub_52CC0(&qword_270BF0, &qword_26EC48);
    uint64_t v19 = sub_1FB990();
    uint64_t v20 = swift_release();
    __chkstk_darwin(v20);
    uint64_t v21 = v54;
    *(&v48 - 2) = v12;
    *(&v48 - 1) = v21;
    int64_t v22 = sub_18F684((void (*)(void *__return_ptr, unsigned char *))sub_19B6FC, (uint64_t)(&v48 - 4), v19);
    swift_bridgeObjectRelease();
    uint64_t v23 = v22[2];
    sub_556E4();
    uint64_t v24 = sub_1FBCD0();
    uint64_t v62 = v24;
    uint64_t v59 = 0;
    if (v23)
    {
      uint64_t v25 = v23 - 1;
      uint64_t v26 = 4;
      uint64_t v11 = v50;
      while (1)
      {
        memcpy(v63, &v22[v26], 0x229uLL);
        sub_12384(v63);
        sub_74A0(v60, v63);
        memcpy(v61, v60, 0x229uLL);
        sub_124B4(v61);
        if (!v25) {
          break;
        }
        --v25;
        v26 += 70;
      }
      swift_bridgeObjectRelease();
      uint64_t v27 = v62;
    }
    else
    {
      uint64_t v27 = v24;
      swift_bridgeObjectRelease();
      uint64_t v11 = v50;
    }
    uint64_t v28 = sub_1FB110();
    (*(void (**)(char *, uint64_t, uint64_t))(*(void *)(v28 - 8) + 16))(v7, v12, v28);
    unint64_t v29 = (uint64_t *)(v12 + v4[6]);
    uint64_t v31 = *v29;
    uint64_t v30 = v29[1];
    uint64_t v32 = (uint64_t *)(v12 + v4[7]);
    char v33 = *(unsigned char *)(v12 + v4[8]);
    char v34 = *(unsigned char *)(v12 + v4[9]);
    uint64_t v35 = *(void *)(v12 + v4[10]);
    char v36 = *(unsigned char *)(v12 + v4[11]);
    uint64_t v37 = *(void *)(v12 + v4[13]);
    uint64_t v38 = *(void *)(v12 + v4[14]);
    uint64_t v39 = *v32;
    uint64_t v40 = v32[1];
    *(void *)&v7[v4[5]] = v27;
    double v41 = &v7[v4[6]];
    *(void *)double v41 = v31;
    *((void *)v41 + 1) = v30;
    char v42 = &v7[v4[7]];
    *(void *)char v42 = v39;
    *((void *)v42 + 1) = v40;
    v7[v4[8]] = v33;
    v7[v4[9]] = v34;
    *(void *)&v7[v4[10]] = v35;
    v7[v4[11]] = v36;
    *(void *)&v7[v4[12]] = _swiftEmptySetSingleton;
    *(void *)&v7[v4[13]] = v37;
    *(void *)&v7[v4[14]] = v38;
    id v9 = v64;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = v58;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_468BC(0, v9[2] + 1, 1);
      id v9 = v64;
    }
    unint64_t v46 = v9[2];
    unint64_t v45 = v9[3];
    if (v46 >= v45 >> 1)
    {
      sub_468BC(v45 > 1, v46 + 1, 1);
      id v9 = v64;
    }
    uint64_t v10 = v44 + 1;
    v9[2] = v46 + 1;
    sub_A1178((uint64_t)v7, (uint64_t)v9 + v51 + v46 * v11);
    if (v10 == v52) {
      return (uint64_t)v9;
    }
  }
  sub_12124(&qword_26D3C8);
  uint64_t v15 = (char *)swift_allocObject();
  size_t v16 = j__malloc_size(v15);
  *((void *)v15 + 2) = v14;
  *((void *)v15 + 3) = 2 * ((uint64_t)(v16 - 32) / 560);
  uint64_t v17 = sub_4EEFC(v61, v15 + 32, v14, v13);
  uint64_t v56 = v61[3];
  long long v57 = v17;
  uint64_t v55 = v61[4];
  swift_bridgeObjectRetain_n();
  sub_1226C();
  if (v57 == (void *)v14)
  {
    swift_bridgeObjectRelease();
    long long v7 = v49;
    goto LABEL_7;
  }
  __break(1u);
LABEL_21:
  uint64_t result = swift_release();
  __break(1u);
  return result;
}

void *sub_18EF10(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  int64_t v5 = *(void *)(a1 + 16);
  if (v5)
  {
    sub_46B4C(0, v5, 0);
    uint64_t result = (void *)sub_73C38(a1);
    uint64_t v9 = (uint64_t)result;
    uint64_t v10 = 0;
    uint64_t v11 = a1 + 64;
    int64_t v25 = v5;
    uint64_t v26 = a2;
    int v27 = v8;
    uint64_t v28 = a1 + 64;
    while ((v9 & 0x8000000000000000) == 0 && v9 < 1 << *(unsigned char *)(a1 + 32))
    {
      unint64_t v14 = (unint64_t)v9 >> 6;
      if ((*(void *)(v11 + 8 * ((unint64_t)v9 >> 6)) & (1 << v9)) == 0) {
        goto LABEL_23;
      }
      if (*(_DWORD *)(a1 + 36) != v8) {
        goto LABEL_24;
      }
      char v30 = *(unsigned char *)(*(void *)(a1 + 48) + v9);
      uint64_t v15 = *(void *)(*(void *)(a1 + 56) + 8 * v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      size_t v16 = sub_18F178(v15, a2);
      uint64_t v29 = v3;
      uint64_t result = (void *)swift_bridgeObjectRelease();
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      if (v18 >= v17 >> 1) {
        uint64_t result = (void *)sub_46B4C(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      uint64_t v19 = &_swiftEmptyArrayStorage[2 * v18];
      *((unsigned char *)v19 + 32) = v30;
      v19[5] = v16;
      int64_t v12 = 1 << *(unsigned char *)(a1 + 32);
      if (v9 >= v12) {
        goto LABEL_25;
      }
      uint64_t v11 = a1 + 64;
      uint64_t v20 = *(void *)(v28 + 8 * v14);
      if ((v20 & (1 << v9)) == 0) {
        goto LABEL_26;
      }
      int v8 = v27;
      if (*(_DWORD *)(a1 + 36) != v27) {
        goto LABEL_27;
      }
      unint64_t v21 = v20 & (-2 << (v9 & 0x3F));
      if (v21)
      {
        int64_t v12 = __clz(__rbit64(v21)) | v9 & 0xFFFFFFFFFFFFFFC0;
        uint64_t v3 = v29;
        int64_t v13 = v25;
        a2 = v26;
      }
      else
      {
        unint64_t v22 = v14 + 1;
        unint64_t v23 = (unint64_t)(v12 + 63) >> 6;
        uint64_t v3 = v29;
        int64_t v13 = v25;
        a2 = v26;
        if (v14 + 1 < v23)
        {
          unint64_t v24 = *(void *)(v28 + 8 * v22);
          if (v24)
          {
LABEL_20:
            int64_t v12 = __clz(__rbit64(v24)) + (v22 << 6);
          }
          else
          {
            while (v23 - 2 != v14)
            {
              unint64_t v24 = *(void *)(a1 + 80 + 8 * v14++);
              if (v24)
              {
                unint64_t v22 = v14 + 1;
                goto LABEL_20;
              }
            }
          }
        }
      }
      ++v10;
      uint64_t v9 = v12;
      if (v10 == v13) {
        goto LABEL_21;
      }
    }
    __break(1u);
LABEL_23:
    __break(1u);
LABEL_24:
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
  }
  else
  {
LABEL_21:
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_18F178(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = sub_19A604(a1, a2);
  swift_bridgeObjectRelease();
  return v2;
}

uint64_t sub_18F1C8(uint64_t result, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a3;
  unint64_t v18 = (uint64_t (*)(uint64_t *))result;
  uint64_t v17 = *(void *)(a3 + 16);
  if (v17)
  {
    unint64_t v5 = 0;
    uint64_t v6 = (void *)(a3 + 48);
    long long v7 = _swiftEmptyArrayStorage;
    while (v5 < *(void *)(v4 + 16))
    {
      uint64_t v8 = *(v6 - 2);
      int v9 = *((_DWORD *)v6 - 2);
      char v10 = *((unsigned char *)v6 - 4);
      uint64_t v11 = *v6;
      uint64_t v19 = v8;
      int v20 = v9;
      char v21 = v10;
      uint64_t v22 = v11;
      swift_bridgeObjectRetain();
      char v12 = v18(&v19);
      if (v3)
      {
        swift_release();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        return (uint64_t)v7;
      }
      if (v12)
      {
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        unint64_t v23 = v7;
        if ((result & 1) == 0)
        {
          uint64_t result = sub_46A9C(0, v7[2] + 1, 1);
          long long v7 = v23;
        }
        unint64_t v14 = v7[2];
        unint64_t v13 = v7[3];
        uint64_t v3 = 0;
        if (v14 >= v13 >> 1)
        {
          uint64_t result = sub_46A9C(v13 > 1, v14 + 1, 1);
          uint64_t v3 = 0;
          long long v7 = v23;
        }
        v7[2] = v14 + 1;
        uint64_t v15 = &v7[3 * v14];
        v15[4] = v8;
        *((_DWORD *)v15 + 10) = v9;
        *((unsigned char *)v15 + 44) = v10;
        v15[6] = v11;
        uint64_t v4 = a3;
      }
      else
      {
        uint64_t result = swift_bridgeObjectRelease();
        uint64_t v3 = 0;
      }
      ++v5;
      v6 += 3;
      if (v17 == v5) {
        goto LABEL_14;
      }
    }
    __break(1u);
  }
  else
  {
    long long v7 = _swiftEmptyArrayStorage;
LABEL_14:
    swift_bridgeObjectRelease();
    return (uint64_t)v7;
  }
  return result;
}

uint64_t sub_18F380(void (*a1)(uint64_t *__return_ptr, unsigned char *), uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  uint64_t v27 = a3 + 56;
  uint64_t v5 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a3 + 56);
  int64_t v28 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  char v10 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v7)
    {
      uint64_t v11 = v10;
      unint64_t v12 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v13 = v12 | (v9 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v9++, 1))
    {
      __break(1u);
      goto LABEL_33;
    }
    if (v9 >= v28) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v9);
    if (!v15) {
      break;
    }
LABEL_18:
    uint64_t v11 = v10;
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v13 = __clz(__rbit64(v15)) + (v9 << 6);
LABEL_19:
    uint64_t v17 = (const void *)(*(void *)(a3 + 48) + 560 * v13);
    memcpy(__dst, v17, 0x229uLL);
    memcpy(v44, v17, 0x229uLL);
    sub_12384(__dst);
    a1(&v35, v44);
    if (v4)
    {
      sub_124B4(__dst);
      char v10 = v11;
      swift_bridgeObjectRelease();
LABEL_31:
      swift_release();
      return (uint64_t)v10;
    }
    uint64_t result = (uint64_t)sub_124B4(__dst);
    uint64_t v18 = v41;
    char v10 = v11;
    if (v41)
    {
      uint64_t v20 = v35;
      char v19 = v36;
      uint64_t v21 = v37;
      char v31 = v38;
      uint64_t v32 = v39;
      char v33 = v40;
      long long v34 = v42;
      uint64_t v22 = v43;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_41CBC(0, v11[2] + 1, 1, v11);
        char v10 = (void *)result;
      }
      unint64_t v24 = v10[2];
      unint64_t v23 = v10[3];
      int64_t v25 = v10;
      if (v24 >= v23 >> 1)
      {
        uint64_t result = (uint64_t)sub_41CBC((void *)(v23 > 1), v24 + 1, 1, v10);
        int64_t v25 = (void *)result;
      }
      v25[2] = v24 + 1;
      char v10 = v25;
      uint64_t v26 = &v25[10 * v24];
      v26[4] = v20;
      *((unsigned char *)v26 + 40) = v19 & 1;
      v26[6] = v21;
      *((unsigned char *)v26 + 56) = v31 & 1;
      v26[8] = v32;
      *((unsigned char *)v26 + 72) = v33;
      v26[10] = v18;
      *(_OWORD *)(v26 + 11) = v34;
      v26[13] = v22;
      uint64_t v4 = 0;
    }
  }
  int64_t v16 = v9 + 1;
  if (v9 + 1 >= v28) {
    goto LABEL_31;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v9 + 2;
  if (v9 + 2 >= v28) {
    goto LABEL_31;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v9 + 3;
  if (v9 + 3 >= v28) {
    goto LABEL_31;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15) {
    goto LABEL_17;
  }
  int64_t v16 = v9 + 4;
  if (v9 + 4 >= v28) {
    goto LABEL_31;
  }
  unint64_t v15 = *(void *)(v27 + 8 * v16);
  if (v15)
  {
LABEL_17:
    int64_t v9 = v16;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v9 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v9 >= v28) {
      goto LABEL_31;
    }
    unint64_t v15 = *(void *)(v27 + 8 * v9);
    ++v16;
    if (v15) {
      goto LABEL_18;
    }
  }
LABEL_33:
  __break(1u);
  return result;
}

void *sub_18F684(void (*a1)(void *__return_ptr, unsigned char *), uint64_t a2, uint64_t a3)
{
  void (*v20)(void *__return_ptr, unsigned char *);

  uint64_t v4 = v3;
  uint64_t v5 = *(void *)(a3 + 16);
  if (!v5) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v8 = (const void *)(a3 + 32);
  swift_bridgeObjectRetain();
  memcpy(__dst, v8, 0x229uLL);
  memcpy(v18, __dst, 0x229uLL);
  sub_12384(__dst);
  a1(v17, v18);
  int64_t v9 = _swiftEmptyArrayStorage;
  if (v4)
  {
    sub_124B4(__dst);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v10 = 592;
    uint64_t v20 = a1;
    while (1)
    {
      sub_124B4(__dst);
      sub_55844((uint64_t)v17, (uint64_t)v15, &qword_26EB40);
      sub_55844((uint64_t)v15, (uint64_t)v16, &qword_26EB40);
      if (sub_AE3B8((uint64_t)v16) != 1)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          int64_t v9 = sub_41974(0, v9[2] + 1, 1, v9);
        }
        unint64_t v12 = v9[2];
        unint64_t v11 = v9[3];
        if (v12 >= v11 >> 1) {
          int64_t v9 = sub_41974((void *)(v11 > 1), v12 + 1, 1, v9);
        }
        sub_55844((uint64_t)v15, (uint64_t)__src, &qword_26EB40);
        v9[2] = v12 + 1;
        memcpy(&v9[70 * v12 + 4], __src, 0x229uLL);
        a1 = v20;
      }
      if (!--v5) {
        break;
      }
      memcpy(__dst, (const void *)(a3 + v10), 0x229uLL);
      memcpy(v18, __dst, 0x229uLL);
      sub_12384(__dst);
      a1(v17, v18);
      v10 += 560;
    }
    swift_bridgeObjectRelease();
  }
  return v9;
}

uint64_t ScoredBook.copyWith(seriesID:)@<X0>(uint64_t a1@<X0>, char a2@<W1>, uint64_t a3@<X8>)
{
  char v4 = *(unsigned char *)(v3 + 8);
  uint64_t v5 = *(void *)(v3 + 32);
  uint64_t v7 = *(void *)(v3 + 48);
  uint64_t v6 = *(void *)(v3 + 56);
  uint64_t v8 = *(void *)(v3 + 64);
  uint64_t v9 = *(void *)(v3 + 72);
  *(void *)a3 = *(void *)v3;
  *(unsigned char *)(a3 + 8) = v4;
  *(void *)(a3 + 16) = a1;
  *(unsigned char *)(a3 + 24) = a2 & 1;
  *(void *)(a3 + 32) = v5;
  char v10 = *(unsigned char *)(v3 + 40);
  *(unsigned char *)(a3 + 40) = v10;
  *(void *)(a3 + 48) = v7;
  *(void *)(a3 + 56) = v6;
  *(void *)(a3 + 64) = v8;
  *(void *)(a3 + 72) = v9;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();

  return sub_5480C(v5, v10);
}

Swift::Int sub_18F92C(uint64_t *a1, uint64_t (*a2)(uint64_t *, void *))
{
  uint64_t v4 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v4 = sub_12473C(v4);
  }
  uint64_t v5 = *(void *)(v4 + 16);
  v7[0] = v4 + 32;
  v7[1] = v5;
  Swift::Int result = sub_19657C(v7, a2);
  *a1 = v4;
  return result;
}

uint64_t sub_18F9A0(uint64_t *a1, uint64_t (*a2)(uint64_t), uint64_t (*a3)(void *))
{
  uint64_t v6 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v6 = a2(v6);
  }
  uint64_t v7 = *(void *)(v6 + 16);
  v9[0] = v6 + 32;
  v9[1] = v7;
  uint64_t result = a3(v9);
  *a1 = v6;
  return result;
}

uint64_t sub_18FA24(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_2729A0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_12124(&qword_2703F8);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v40 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v41 = (char *)v37 - v8;
  long long v42 = _swiftEmptyDictionarySingleton;
  uint64_t v47 = _swiftEmptyDictionarySingleton;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  if (-v10 < 64) {
    uint64_t v11 = ~(-1 << -(char)v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  v37[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v43 = (unint64_t)(63 - v10) >> 6;
  unint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v38 = v7;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v12) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v17 = v16 | (v15 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
    uint64_t v46 = *(void *)(*(void *)(a1 + 56) + 8 * v17);
    swift_bridgeObjectRetain_n();
    sub_12124(&qword_2729A8);
    sub_52CC0(&qword_2729B0, &qword_2729A8);
    sub_1FB3D0();
    if ((*v13)(v4, 1, v45) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_55F38((uint64_t)v4, &qword_2729A0);
      if (v12) {
        goto LABEL_5;
      }
    }
    else
    {
      unint64_t v23 = *v39;
      (*v39)(v41, v4, v45);
      v23(v40, v41, v45);
      unint64_t v24 = v23;
      int64_t v25 = v42;
      unint64_t v26 = v42[2];
      if (v42[3] <= v26)
      {
        sub_119AD4(v26 + 1, 1);
        int64_t v25 = v47;
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v27 = v25 + 8;
      long long v42 = v25;
      uint64_t v28 = -1 << *((unsigned char *)v25 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~v25[(v29 >> 6) + 8]) == 0)
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v28) >> 6;
        while (++v30 != v33 || (v32 & 1) == 0)
        {
          BOOL v34 = v30 == v33;
          if (v30 == v33) {
            unint64_t v30 = 0;
          }
          v32 |= v34;
          uint64_t v35 = v27[v30];
          if (v35 != -1)
          {
            unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~v25[(v29 >> 6) + 8])) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_36:
      *(void *)((char *)v27 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      uint64_t v36 = v42;
      *(void *)(v42[6] + 8 * v31) = v18;
      v24((char *)(v36[7] + *(void *)(v38 + 72) * v31), v40, v45);
      ++v36[2];
      uint64_t result = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v19 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v19);
    int64_t v21 = v15 + 1;
    if (!v20)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 2 >= v43) {
        goto LABEL_38;
      }
      unint64_t v20 = *(void *)(v44 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v15 + 3;
        if (v15 + 3 >= v43) {
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v44 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v15 + 4;
          if (v15 + 4 >= v43) {
            goto LABEL_38;
          }
          unint64_t v20 = *(void *)(v44 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v15 = v21;
  }
  int64_t v22 = v15 + 5;
  if (v15 + 5 >= v43)
  {
LABEL_38:
    sub_1226C();
    return (uint64_t)v42;
  }
  unint64_t v20 = *(void *)(v44 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v15 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_18FEF8()
{
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(void *)(v0 + 96);
  uint64_t v3 = *(void *)(v0 + 104);
  uint64_t v4 = *(void *)(v0 + 112);
  uint64_t v5 = *(void *)(v0 + 120);
  uint64_t v6 = *(void *)(v0 + 128);
  unint64_t v7 = *(void *)(v0 + 136);
  unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  int v23 = *(unsigned __int8 *)(v0 + 8);
  if ((v7 & 0xFFFFFFFFFFFFFFFELL) == 0x1FFFFFFFELL)
  {
    uint64_t v9 = 0x3E6C696E3CLL;
    uint64_t v10 = (void *)0xE500000000000000;
  }
  else
  {
    if (v7 >> 62 == 3)
    {
      uint64_t v11 = *(void *)(v0 + 88);
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v11 = swift_allocObject();
      *(_OWORD *)(v11 + 16) = xmmword_1FD2A0;
      *(void *)(v11 + 32) = v1;
      *(void *)(v11 + 40) = v2;
      *(void *)(v11 + 48) = v3;
      *(void *)(v11 + 56) = v4;
      *(void *)(v11 + 64) = v5;
      *(void *)(v11 + 72) = v6;
      *(unsigned char *)(v11 + 80) = v7 & 1;
    }
    sub_1244C();
    sub_1244C();
    double v21 = COERCE_DOUBLE(Array<A>.affinity.getter(v11));
    char v22 = v12;
    swift_bridgeObjectRelease();
    sub_1255C(v1, v2, v3, v4, v5, v6, v7);
    if (v22) {
      double v13 = 0.0;
    }
    else {
      double v13 = v21;
    }
    sub_12124(&qword_26D7F0);
    uint64_t v14 = swift_allocObject();
    *(_OWORD *)(v14 + 16) = xmmword_1FD2A0;
    *(void *)(v14 + 56) = &type metadata for Double;
    *(void *)(v14 + 64) = &protocol witness table for Double;
    *(double *)(v14 + 32) = v13;
    uint64_t v9 = sub_1FB840();
    uint64_t v10 = v15;
    unint64_t v8 = v7 & 0xFFFFFFFFFFFFFFFELL;
  }
  uint64_t v24 = sub_1FC580();
  v25._countAndFlagsBits = 58;
  v25._object = (void *)0xE100000000000000;
  sub_1FB8F0(v25);
  if (v23) {
    v16._countAndFlagsBits = 0x6F6F626F69647561;
  }
  else {
    v16._countAndFlagsBits = 0x6B6F6F6265;
  }
  if (v23) {
    unint64_t v17 = (void *)0xE90000000000006BLL;
  }
  else {
    unint64_t v17 = (void *)0xE500000000000000;
  }
  v16._object = v17;
  sub_1FB8F0(v16);
  swift_bridgeObjectRelease();
  v26._countAndFlagsBits = 58;
  v26._object = (void *)0xE100000000000000;
  sub_1FB8F0(v26);
  if (v8 == 0x1FFFFFFFELL)
  {
    object = (void *)0xE300000000000000;
    v19._countAndFlagsBits = 7104878;
  }
  else
  {
    v19._countAndFlagsBits = sub_195224();
    object = v19._object;
  }
  v19._object = object;
  sub_1FB8F0(v19);
  swift_bridgeObjectRelease();
  v27._countAndFlagsBits = 58;
  v27._object = (void *)0xE100000000000000;
  sub_1FB8F0(v27);
  v28._countAndFlagsBits = v9;
  v28._object = v10;
  sub_1FB8F0(v28);
  swift_bridgeObjectRelease();
  return v24;
}

uint64_t sub_190238()
{
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  qword_2A5C28 = result;
  return result;
}

uint64_t sub_1902A0()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5C30);
  sub_6DBC8(v0, (uint64_t)qword_2A5C30);
  if (qword_26C368 != -1) {
    swift_once();
  }
  id v1 = (id)qword_2A5C28;
  return sub_1FB440();
}

uint64_t sub_19032C(uint64_t a1, const void *a2)
{
  v3[146] = v2;
  v3[145] = a1;
  memcpy(v3 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_1903A4, 0, 0);
}

uint64_t sub_1903A4()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[146];
  uint64_t v2 = v0[145];
  uint64_t v10 = _swiftEmptyDictionarySingleton;
  uint64_t v3 = sub_18E9C4(v2, (uint64_t)&v10);
  v0[147] = v3;
  uint64_t v4 = v10;
  v0[148] = v10;
  uint64_t v5 = sub_12124(&qword_26D490);
  uint64_t v6 = sub_12124(&qword_26E5E0);
  unint64_t v7 = (void *)swift_task_alloc();
  v0[149] = v7;
  uint64_t v7[2] = v3;
  v7[3] = v4;
  v7[4] = v1;
  v7[5] = v0 + 2;
  unint64_t v8 = (void *)swift_task_alloc();
  v0[150] = v8;
  *unint64_t v8 = v0;
  v8[1] = sub_190504;
  uint64_t v13 = v6;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 143, v5, v6, 0, 0, &unk_272960, v7, v5);
}

uint64_t sub_190504()
{
  *(void *)(*(void *)v1 + 1208) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_190794;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_190620;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_190620()
{
  uint64_t v12 = v0;
  uint64_t v1 = v0[151];
  uint64_t v2 = v0[148];
  uint64_t v3 = v0[143];
  uint64_t v4 = swift_task_alloc();
  *(void *)(v4 + 16) = v2;
  uint64_t v5 = sub_199AE0(v3, (uint64_t (*)(char *, uint64_t, void))sub_19551C, v4);
  swift_task_dealloc();
  if (*(void *)(v5 + 16))
  {
    sub_12124(&qword_2703F0);
    uint64_t v6 = (void *)sub_1FC2A0();
  }
  else
  {
    uint64_t v6 = _swiftEmptyDictionarySingleton;
  }
  uint64_t v11 = v6;
  uint64_t v7 = swift_bridgeObjectRetain();
  sub_195524(v7, 1, &v11);
  if (v1)
  {
    return swift_unexpectedError();
  }
  else
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v9 = v11;
    uint64_t v10 = (uint64_t (*)(void *))v0[1];
    return v10(v9);
  }
}

uint64_t sub_190794()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_190810(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[14] = a5;
  v6[15] = a6;
  v6[12] = a2;
  v6[13] = a3;
  v6[11] = a1;
  uint64_t v7 = sub_12124(&qword_26D490);
  v6[16] = v7;
  v6[17] = *(void *)(v7 - 8);
  v6[18] = swift_task_alloc();
  v6[19] = swift_task_alloc();
  v6[20] = swift_task_alloc();
  sub_12124(&qword_26E6A8);
  v6[21] = swift_task_alloc();
  uint64_t v8 = sub_12124(&qword_26E6B0);
  v6[22] = v8;
  v6[23] = *(void *)(v8 - 8);
  v6[24] = swift_task_alloc();
  uint64_t v9 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  v6[25] = v9;
  v6[26] = *(void *)(v9 + 64);
  v6[27] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v6[28] = swift_task_alloc();
  v6[29] = swift_task_alloc();
  return _swift_task_switch(sub_190A28, 0, 0);
}

uint64_t sub_190A28()
{
  uint64_t v1 = *(void *)(v0 + 104);
  uint64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    uint64_t v3 = *(void *)(v0 + 200);
    unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
    uint64_t v5 = v1 + v4;
    uint64_t v30 = *(void *)(v3 + 72);
    unint64_t v31 = v4;
    unint64_t v29 = (*(void *)(v0 + 208) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = sub_1FBC60();
    uint64_t v6 = *(void *)(v28 - 8);
    Swift::String v27 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v6 + 56);
    Swift::String v26 = (uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48);
    Swift::String v25 = (void (**)(uint64_t, uint64_t))(v6 + 8);
    swift_bridgeObjectRetain();
    while (1)
    {
      uint64_t v33 = v2;
      uint64_t v8 = *(void *)(v0 + 224);
      uint64_t v9 = *(void *)(v0 + 232);
      uint64_t v10 = *(void *)(v0 + 216);
      uint64_t v12 = *(void *)(v0 + 112);
      uint64_t v11 = *(const void **)(v0 + 120);
      v27(v9, 1, 1, v28);
      uint64_t v32 = v5;
      sub_A0EE0(v5, v10);
      uint64_t v13 = swift_allocObject();
      *(void *)(v13 + 16) = 0;
      uint64_t v14 = (void *)(v13 + 16);
      *(void *)(v13 + 24) = 0;
      sub_A1178(v10, v13 + v31);
      *(void *)(v13 + v29) = v12;
      memcpy((void *)(v13 + ((v29 + 15) & 0xFFFFFFFFFFFFFFF8)), v11, 0x460uLL);
      sub_5606C(v9, v8, &qword_26D908);
      LODWORD(v8) = (*v26)(v8, 1, v28);
      swift_retain();
      sub_A1310((uint64_t)v11);
      uint64_t v15 = *(void *)(v0 + 224);
      if (v8 == 1)
      {
        sub_55F38(*(void *)(v0 + 224), &qword_26D908);
        if (!*v14) {
          goto LABEL_8;
        }
      }
      else
      {
        sub_1FBC50();
        (*v25)(v15, v28);
        if (!*v14)
        {
LABEL_8:
          uint64_t v16 = 0;
          uint64_t v18 = 0;
          goto LABEL_9;
        }
      }
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v16 = sub_1FBBD0();
      uint64_t v18 = v17;
      swift_unknownObjectRelease();
LABEL_9:
      uint64_t v19 = **(void **)(v0 + 96);
      uint64_t v20 = v18 | v16;
      if (v18 | v16)
      {
        uint64_t v20 = v0 + 16;
        *(void *)(v0 + 16) = 0;
        *(void *)(v0 + 24) = 0;
        *(void *)(v0 + 32) = v16;
        *(void *)(v0 + 40) = v18;
      }
      uint64_t v7 = *(void *)(v0 + 232);
      *(void *)(v0 + 48) = 1;
      *(void *)(v0 + 56) = v20;
      *(void *)(v0 + 64) = v19;
      swift_task_create();
      swift_release();
      sub_55F38(v7, &qword_26D908);
      uint64_t v5 = v32 + v30;
      uint64_t v2 = v33 - 1;
      if (v33 == 1)
      {
        swift_bridgeObjectRelease();
        break;
      }
    }
  }
  sub_12124(&qword_26D670);
  sub_1FBC80();
  *(void *)(v0 + 240) = _swiftEmptyDictionarySingleton;
  double v21 = (void *)swift_task_alloc();
  *(void *)(v0 + 248) = v21;
  *double v21 = v0;
  v21[1] = sub_190DDC;
  uint64_t v22 = *(void *)(v0 + 168);
  uint64_t v23 = *(void *)(v0 + 176);
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v22, 0, 0, v23, v0 + 72);
}

uint64_t sub_190DDC()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = sub_A07B8;
  }
  else
  {
    uint64_t v1 = sub_190EF4;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_190EF4()
{
  uint64_t v1 = v0[21];
  uint64_t v2 = v0[16];
  int v3 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v0[17] + 48))(v1, 1, v2);
  uint64_t v4 = v0[30];
  if (v3 == 1)
  {
    uint64_t v5 = (void *)v0[11];
    (*(void (**)(void, void))(v0[23] + 8))(v0[24], v0[22]);
    *uint64_t v5 = v4;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  uint64_t v9 = v0[19];
  uint64_t v8 = v0[20];
  uint64_t v43 = v0[18];
  uint64_t v10 = *(int *)(v2 + 48);
  uint64_t v11 = *(void *)(v1 + v10);
  uint64_t v12 = sub_1FB110();
  uint64_t v13 = *(void *)(v12 - 8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v8, v1, v12);
  *(void *)(v8 + v10) = v11;
  uint64_t v14 = *(int *)(v2 + 48);
  uint64_t v15 = *(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 16);
  v15(v9, v8, v12);
  *(void *)(v9 + v14) = v11;
  uint64_t v16 = *(int *)(v2 + 48);
  long long v42 = (uint64_t (*)(unint64_t, uint64_t, uint64_t))v15;
  v15(v43, v8, v12);
  *(void *)(v43 + v16) = v11;
  swift_bridgeObjectRetain();
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  v0[10] = v4;
  unint64_t v22 = sub_4C9C4(v9);
  uint64_t v23 = *(void *)(v4 + 16);
  BOOL v24 = (v18 & 1) == 0;
  uint64_t v25 = v23 + v24;
  if (__OFADD__(v23, v24))
  {
    __break(1u);
    goto LABEL_22;
  }
  char v26 = v18;
  if (*(void *)(v0[30] + 24) >= v25)
  {
    uint64_t v30 = v13;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
      sub_1212EC();
    }
    goto LABEL_14;
  }
  uint64_t v27 = v0[19];
  sub_118B9C(v25, isUniquelyReferenced_nonNull_native);
  unint64_t v28 = sub_4C9C4(v27);
  uint64_t v30 = v13;
  if ((v26 & 1) == (v29 & 1))
  {
    unint64_t v22 = v28;
LABEL_14:
    unint64_t v31 = (void *)v0[10];
    if (v26)
    {
      uint64_t v32 = v31[7];
      swift_bridgeObjectRelease();
      *(void *)(v32 + 8 * v22) = v11;
      goto LABEL_18;
    }
    uint64_t v33 = v0[19];
    v31[(v22 >> 6) + 8] |= 1 << v22;
    uint64_t v25 = v42(v31[6] + *(void *)(v30 + 72) * v22, v33, v12);
    *(void *)(v31[7] + 8 * v22) = v11;
    uint64_t v34 = v31[2];
    BOOL v35 = __OFADD__(v34, 1);
    uint64_t v36 = v34 + 1;
    if (!v35)
    {
      v31[2] = v36;
LABEL_18:
      uint64_t v38 = v0[19];
      uint64_t v37 = v0[20];
      uint64_t v39 = v0[18];
      swift_bridgeObjectRelease();
      uint64_t v40 = *(void (**)(uint64_t, uint64_t))(v30 + 8);
      v40(v38, v12);
      sub_55F38(v37, &qword_26D490);
      v40(v39, v12);
      v0[30] = v31;
      uint64_t v41 = (void *)swift_task_alloc();
      v0[31] = v41;
      *uint64_t v41 = v0;
      v41[1] = sub_190DDC;
      uint64_t v25 = v0[21];
      uint64_t v20 = v0[22];
      uint64_t v18 = 0;
      uint64_t v19 = 0;
      double v21 = v0 + 9;
      return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v25, v18, v19, v20, v21);
    }
LABEL_22:
    __break(1u);
    return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v25, v18, v19, v20, v21);
  }
  return sub_1FC770();
}

uint64_t sub_191308(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  v6[145] = a6;
  v6[144] = a5;
  v6[143] = a4;
  v6[142] = a1;
  return _swift_task_switch(sub_191334, 0, 0);
}

uint64_t sub_191334()
{
  uint64_t v1 = (const void *)v0[145];
  uint64_t v2 = v0[143];
  uint64_t v3 = v0[142];
  uint64_t v4 = sub_1FB110();
  v0[146] = v4;
  uint64_t v5 = *(void *)(v4 - 8);
  v0[147] = v5;
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16))(v3, v2, v4);
  memcpy(v0 + 2, v1, 0x460uLL);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[148] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_A0AB4;
  uint64_t v7 = v0[143];
  return sub_191458(v7, v0 + 2);
}

uint64_t sub_191458(uint64_t a1, const void *a2)
{
  v3[342] = v2;
  v3[341] = a1;
  uint64_t v5 = sub_1FB430();
  v3[343] = v5;
  v3[344] = *(void *)(v5 - 8);
  v3[345] = swift_task_alloc();
  uint64_t v6 = sub_1FB110();
  v3[346] = v6;
  v3[347] = *(void *)(v6 - 8);
  v3[348] = swift_task_alloc();
  memcpy(v3 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_191598, 0, 0);
}

uint64_t sub_191598()
{
  uint64_t v1 = v0[348];
  uint64_t v2 = v0[347];
  uint64_t v3 = v0[346];
  sub_1FB100();
  v0[349] = sub_1FB0F0();
  v0[350] = v4;
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  memcpy(v0 + 142, v0 + 2, 0x460uLL);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[351] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_19169C;
  uint64_t v6 = v0[341];
  return sub_191FF8((uint64_t)(v0 + 328), v6, (uint64_t)(v0 + 142));
}

uint64_t sub_19169C()
{
  *(void *)(*(void *)v1 + 2816) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_191F88;
  }
  else
  {
    uint64_t v2 = sub_1917B8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1917B8()
{
  long long v63 = v0;
  uint64_t v1 = v0[328];
  uint64_t v2 = v0[329];
  uint64_t v3 = v0[330];
  uint64_t v4 = v0[331];
  uint64_t v5 = v0[332];
  uint64_t v6 = v0[333];
  uint64_t v7 = sub_1293EC();
  uint64_t v8 = sub_129750();
  v61[0] = v1;
  v61[1] = v2;
  v61[2] = v3;
  v61[3] = v4;
  _OWORD v61[4] = v5;
  v61[5] = v6;
  uint64_t v9 = sub_129130();
  long long v60 = v7;
  if (!*(void *)(v1 + 16))
  {
    sub_1290DC();
    swift_allocError();
    *(void *)uint64_t v12 = 2;
    *(unsigned char *)(v12 + 8) = 7;
    swift_willThrow();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  uint64_t v56 = (uint64_t)v9;
  os_log_t log = v8;
  uint64_t v10 = v0[352];
  v61[0] = *(void *)(v1 + 32);
  uint64_t v11 = sub_128C70();
  if (v10)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v13 = (uint64_t (*)(void))v0[1];
    return v13();
  }
  uint64_t v15 = v11;
  uint64_t v16 = v0[341];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v17 = type metadata accessor for SeedBasedRecommendationRequest(0);
  char v18 = *(unsigned char *)(v16 + *(int *)(v17 + 32));
  uint64_t v19 = *(void *)(v16 + *(int *)(v17 + 20));
  uint64_t v20 = (uint64_t)(v0 + 13);
  memcpy(v0 + 282, v0 + 13, 0x16BuLL);
  v0[337] = _swiftEmptyDictionarySingleton;
  uint64_t v21 = v15[2];
  if (v21)
  {
    uint64_t v55 = v19;
    unint64_t v22 = (void **)(v0 + 337);
    sub_8CFA4((uint64_t)(v0 + 13));
    swift_bridgeObjectRetain();
    uint64_t v23 = v15 + 6;
    do
    {
      uint64_t v24 = *(v23 - 2);
      uint64_t v25 = *(v23 - 1);
      uint64_t v26 = *v23;
      v23 += 3;
      v0[334] = v24;
      v0[335] = v25;
      v0[336] = v26;
      sub_12124(&qword_26D3C0);
      uint64_t v27 = swift_allocObject();
      *(_OWORD *)(v27 + 16) = xmmword_1FD2A0;
      *(void *)(v27 + 32) = v26;
      uint64_t v28 = sub_BDF88(v27);
      swift_setDeallocating();
      swift_deallocClassInstance();
      uint64_t v29 = swift_task_alloc();
      *(void *)(v29 + 16) = v22;
      *(void *)(v29 + 24) = v0 + 334;
      swift_bridgeObjectRetain();
      sub_6188(sub_19AF08, v29, v28);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_task_dealloc();
      --v21;
    }
    while (v21);
    swift_bridgeObjectRelease();
    uint64_t v30 = *v22;
    uint64_t v31 = (uint64_t)v60;
    uint64_t v20 = (uint64_t)(v0 + 13);
    uint64_t v19 = v55;
  }
  else
  {
    sub_8CFA4((uint64_t)(v0 + 13));
    uint64_t v30 = _swiftEmptyDictionarySingleton;
    uint64_t v31 = (uint64_t)v60;
  }
  uint64_t v32 = sub_18FA24((uint64_t)v30);
  swift_bridgeObjectRelease();
  v61[0] = (uint64_t)_swiftEmptyDictionarySingleton;
  sub_8CFA4(v20);
  swift_bridgeObjectRetain();
  sub_19AF30(v19, v32, (uint64_t)(v0 + 282), v61, v18);
  sub_8D5A4(v20);
  swift_bridgeObjectRelease_n();
  uint64_t v33 = swift_bridgeObjectRetain();
  uint64_t v34 = sub_4B70C(v33);
  swift_bridgeObjectRelease_n();
  sub_8D5A4(v20);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  BOOL v35 = sub_199F48((uint64_t)v34, v31, (uint64_t)log, v56);
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_release();
  if (qword_26C370 != -1) {
    swift_once();
  }
  uint64_t v36 = v0[345];
  uint64_t v37 = v0[344];
  uint64_t v38 = v0[343];
  uint64_t v39 = sub_6DBC8(v38, (uint64_t)qword_2A5C30);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v37 + 16))(v36, v39, v38);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v40 = sub_1FB410();
  os_log_type_t v41 = sub_1FBDC0();
  BOOL v42 = os_log_type_enabled(v40, v41);
  unint64_t v43 = v0[350];
  if (v42)
  {
    loga = v40;
    uint64_t v44 = v0[349];
    uint64_t v45 = swift_slowAlloc();
    v62[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v45 = 136446466;
    swift_bridgeObjectRetain();
    v0[339] = sub_D5890(v44, v43, v62);
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    *(_WORD *)(v45 + 12) = 2080;
    v61[0] = (uint64_t)v35;
    swift_bridgeObjectRetain();
    sub_18F9A0(v61, sub_124778, (uint64_t (*)(void *))sub_19790C);
    uint64_t v49 = v0[345];
    uint64_t v50 = v0[344];
    uint64_t v57 = v0[343];
    uint64_t v51 = sub_E39A0(v61[0]);
    unint64_t v53 = v52;
    swift_release();
    v0[340] = sub_D5890(v51, v53, v62);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, loga, v41, "for %{public}s, returning result %s", (uint8_t *)v45, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    (*(void (**)(uint64_t, uint64_t))(v50 + 8))(v49, v57);
  }
  else
  {
    uint64_t v46 = v0[345];
    uint64_t v47 = v0[344];
    uint64_t v48 = v0[343];
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();

    (*(void (**)(uint64_t, uint64_t))(v47 + 8))(v46, v48);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v54 = (uint64_t (*)(void *))v0[1];
  return v54(v35);
}

uint64_t sub_191F88()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_191FF8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 2544) = v3;
  *(void *)(v4 + 2536) = a2;
  *(void *)(v4 + 2528) = a1;
  uint64_t v6 = sub_1FB110();
  *(void *)(v4 + 2552) = v6;
  *(void *)(v4 + 2560) = *(void *)(v6 - 8);
  *(void *)(v4 + 2568) = swift_task_alloc();
  *(void *)(v4 + 2576) = type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v4 + 2584) = swift_task_alloc();
  *(void *)(v4 + 2592) = swift_task_alloc();
  *(void *)(v4 + 2600) = swift_task_alloc();
  *(void *)(v4 + 2608) = swift_task_alloc();
  memcpy((void *)(v4 + 1856), (const void *)a3, 0x170uLL);
  *(void *)(v4 + 2616) = *(void *)(a3 + 368);
  *(_OWORD *)(v4 + 2416) = *(_OWORD *)(a3 + 376);
  *(void *)(v4 + 2624) = *(void *)(a3 + 392);
  memcpy((void *)(v4 + 1136), (const void *)(a3 + 400), 0x2D0uLL);
  return _swift_task_switch(sub_192168, 0, 0);
}

uint64_t sub_192168()
{
  uint64_t v90 = v0;
  uint64_t v2 = *(void *)(*(void *)(v0 + 2536) + *(int *)(*(void *)(v0 + 2576) + 20));
  swift_bridgeObjectRetain_n();
  uint64_t v3 = sub_4AD80(v2);
  swift_bridgeObjectRelease();
  uint64_t v89 = v3;
  sub_18F92C((uint64_t *)&v89, (uint64_t (*)(uint64_t *, void *))sub_193B80);
  uint64_t v5 = *(void *)(v0 + 2576);
  uint64_t v6 = *(void *)(v0 + 2536);
  swift_bridgeObjectRelease();
  uint64_t v7 = (uint64_t)v89;
  sub_12124(&qword_26D4E0);
  uint64_t v8 = swift_allocObject();
  *(_OWORD *)(v8 + 16) = xmmword_1FD2A0;
  *(void *)(v8 + 32) = _swiftEmptyArrayStorage;
  uint64_t v9 = *(int *)(v5 + 56);
  *(_DWORD *)(v0 + 2736) = v9;
  uint64_t v10 = *(void *)(v6 + v9);
  uint64_t v11 = *(int *)(v5 + 52);
  *(_DWORD *)(v0 + 2740) = v11;
  uint64_t v12 = *(void *)(v6 + v11);
  if (!v12)
  {
    __break(1u);
LABEL_41:
    __break(1u);
    goto LABEL_42;
  }
  if (v10 == 0x8000000000000000 && v12 == -1) {
    goto LABEL_41;
  }
  uint64_t v14 = v8;
  uint64_t v15 = v10 / v12;
  if (*(void *)(v0 + 2616) >= v15) {
    uint64_t v16 = v15;
  }
  else {
    uint64_t v16 = *(void *)(v0 + 2616);
  }
  if (v16)
  {
    uint64_t v17 = (uint64_t)sub_19AC88(0, *(void *)(v7 + 16), v16, v16, v7);
    uint64_t v88 = 0;
  }
  else
  {
    sub_12124(&qword_26D4E8);
    uint64_t v17 = swift_allocObject();
    uint64_t v88 = 0;
    *(_OWORD *)(v17 + 16) = xmmword_1FD2A0;
    *(void *)(v17 + 32) = _swiftEmptyArrayStorage;
    *(void *)(v17 + 40) = &_swiftEmptyArrayStorage[4];
    *(_OWORD *)(v17 + 48) = xmmword_202690;
  }
  swift_release();
  *(void *)(v0 + 2632) = v17;
  uint64_t v18 = *(void *)(v17 + 16);
  *(void *)(v0 + 2640) = v18;
  if (!v18 || (*(void *)(v0 + 2624) & 0x8000000000000000) != 0)
  {
    swift_bridgeObjectRelease();
    uint64_t v46 = *(void *)(v0 + 2528);
    *(void *)uint64_t v46 = v14;
    *(_OWORD *)(v46 + 8) = 0u;
    *(_OWORD *)(v46 + 24) = 0u;
    *(void *)(v46 + 40) = 0;
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v47 = *(uint64_t (**)(void))(v0 + 8);
    return v47();
  }
  uint64_t v19 = *(int **)(v0 + 2576);
  uint64_t v20 = *(void *)(v0 + 2560);
  uint64_t v21 = *(void *)(v0 + 2536);
  uint64_t v22 = v19[6];
  *(_DWORD *)(v0 + 2744) = v22;
  os_log_t log = (os_log_t)(v21 + v22);
  uint64_t v23 = v19[7];
  *(_DWORD *)(v0 + 2748) = v23;
  uint64_t v84 = v20;
  uint64_t v85 = (uint64_t *)(v21 + v23);
  uint64_t v83 = v19[8];
  *(_DWORD *)(v0 + 2752) = v83;
  uint64_t v82 = v19[9];
  *(_DWORD *)(v0 + 2756) = v82;
  uint64_t v81 = v19[10];
  *(_DWORD *)(v0 + 2760) = v81;
  uint64_t v80 = v19[11];
  *(_DWORD *)(v0 + 2764) = v80;
  *(_OWORD *)(v0 + 2664) = 0u;
  *(_OWORD *)(v0 + 2680) = 0u;
  *(void *)(v0 + 2696) = 0;
  *(void *)(v0 + 2656) = v14;
  *(void *)(v0 + 2648) = 1;
  uint64_t v78 = *(int *)(v0 + 2736);
  uint64_t v79 = *(int *)(v0 + 2740);
  uint64_t v24 = *(void *)(v0 + 2608);
  uint64_t v25 = *(void *)(v0 + 2568);
  uint64_t v26 = *(void *)(v0 + 2552);
  uint64_t v27 = *(void *)(v17 + 48);
  unint64_t v28 = *(void *)(v17 + 56);
  uint64_t v29 = *(void *)(v17 + 32);
  uint64_t v30 = *(void *)(v17 + 40);
  *(void *)(v0 + 2704) = v29;
  uint64_t v77 = v29;
  swift_unknownObjectRetain();
  sub_1FB100();
  uint64_t v76 = v30;
  uint64_t v87 = v27;
  uint64_t v31 = sub_517D0(v30, v27, v28);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v84 + 16))(v24, v25, v26);
  char v32 = *(unsigned char *)(v21 + v83);
  char v33 = *(unsigned char *)(v21 + v82);
  uint64_t v34 = *(void *)(v21 + v81);
  Class isa = log->isa;
  Class v35 = log[1].isa;
  char v37 = *(unsigned char *)(v21 + v80);
  uint64_t v38 = *(void *)(v21 + v79);
  uint64_t v39 = *v85;
  uint64_t v40 = v85[1];
  uint64_t v41 = *(void *)(v21 + v78);
  *(void *)(v24 + v19[5]) = v31;
  BOOL v42 = (Class *)(v24 + v19[6]);
  *BOOL v42 = isa;
  v42[1] = v35;
  unint64_t v43 = (void *)(v24 + v19[7]);
  *unint64_t v43 = v39;
  v43[1] = v40;
  *(unsigned char *)(v24 + v19[8]) = v32;
  *(unsigned char *)(v24 + v19[9]) = v33;
  *(void *)(v24 + v19[10]) = v34;
  *(unsigned char *)(v24 + v19[11]) = v37;
  *(void *)(v24 + v19[12]) = _swiftEmptySetSingleton;
  *(void *)(v24 + v19[13]) = v38;
  *(void *)(v24 + v19[14]) = v41;
  unint64_t v1 = v28;
  uint64_t v44 = *(void (**)(uint64_t, uint64_t))(v84 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  v44(v25, v26);
  if (v28)
  {
    sub_1FC730();
    uint64_t v7 = v77;
    swift_unknownObjectRetain_n();
    uint64_t v48 = (void *)swift_dynamicCastClass();
    if (!v48)
    {
      swift_unknownObjectRelease();
      uint64_t v48 = _swiftEmptyArrayStorage;
    }
    uint64_t v49 = v48[2];
    swift_release();
    if (!__OFSUB__(v28 >> 1, v87))
    {
      if (v49 == (v28 >> 1) - v87)
      {
        uint64_t v45 = (void *)swift_dynamicCastClass();
        if (!v45)
        {
          swift_unknownObjectRelease();
          uint64_t v45 = _swiftEmptyArrayStorage;
        }
        goto LABEL_30;
      }
      goto LABEL_43;
    }
LABEL_42:
    __break(1u);
LABEL_43:
    swift_unknownObjectRelease();
    goto LABEL_20;
  }
  uint64_t v7 = v77;
  swift_unknownObjectRetain();
LABEL_20:
  uint64_t v45 = sub_4ABF0(v7, v76, v87, v1);
LABEL_30:
  swift_unknownObjectRelease();
  *(void *)(v0 + 2464) = v45;
  sub_18F9A0((uint64_t *)(v0 + 2464), sub_12473C, sub_195DEC);
  uint64_t v50 = *(void *)(v0 + 2464);
  if (!v88)
  {
    if (qword_26C370 != -1) {
      swift_once();
    }
    uint64_t v51 = *(void *)(v0 + 2608);
    uint64_t v52 = *(void *)(v0 + 2600);
    uint64_t v53 = *(void *)(v0 + 2592);
    uint64_t v54 = *(void *)(v0 + 2536);
    uint64_t v55 = sub_1FB430();
    *(void *)(v0 + 2712) = sub_6DBC8(v55, (uint64_t)qword_2A5C30);
    sub_A0EE0(v51, v52);
    sub_A0EE0(v54, v53);
    swift_unknownObjectRetain_n();
    swift_retain();
    uint64_t v56 = sub_1FB410();
    os_log_type_t v57 = sub_1FBDC0();
    BOOL v58 = os_log_type_enabled(v56, v57);
    uint64_t v59 = *(void *)(v0 + 2600);
    if (v58)
    {
      uint64_t v60 = swift_slowAlloc();
      *(void *)(v0 + 2488) = swift_slowAlloc();
      *(_DWORD *)uint64_t v60 = 136446978;
      uint64_t v61 = sub_1FB0F0();
      *(void *)(v0 + 2496) = sub_D5890(v61, v62, (uint64_t *)(v0 + 2488));
      sub_1FBED0();
      swift_bridgeObjectRelease();
      sub_19B62C(v59);
      *(_WORD *)(v60 + 12) = 2048;
      uint64_t v63 = swift_unknownObjectRelease();
      if (__OFSUB__(v1 >> 1, v87))
      {
        __break(1u);
        return _swift_task_switch(v63, v64, v65);
      }
      uint64_t v66 = *(void *)(v0 + 2592);
      *(void *)(v0 + 2504) = (v1 >> 1) - v87;
      sub_1FBED0();
      swift_unknownObjectRelease();
      *(_WORD *)(v60 + 22) = 2082;
      uint64_t v67 = sub_1FB0F0();
      *(void *)(v0 + 2512) = sub_D5890(v67, v68, (uint64_t *)(v0 + 2488));
      sub_1FBED0();
      swift_bridgeObjectRelease();
      sub_19B62C(v66);
      *(_WORD *)(v60 + 32) = 2080;
      uint64_t v69 = sub_193ED4(v50);
      *(void *)(v0 + 2520) = sub_D5890(v69, v70, (uint64_t *)(v0 + 2488));
      sub_1FBED0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v56, v57, "issuing subrequest %{public}s with %ld seed books for request %{public}s seedBooks=%s", (uint8_t *)v60, 0x2Au);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v71 = *(void *)(v0 + 2592);
      swift_unknownObjectRelease();
      sub_19B62C(v59);
      swift_unknownObjectRelease();
      sub_19B62C(v71);
      swift_release_n();
    }
    uint64_t v72 = *(void *)(v0 + 2624);
    uint64_t v73 = *(void *)(v0 + 2616);
    memcpy((void *)(v0 + 16), (const void *)(v0 + 1856), 0x170uLL);
    *(void *)(v0 + 384) = v73;
    *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 2416);
    *(void *)(v0 + 408) = v72;
    memcpy((void *)(v0 + 416), (const void *)(v0 + 1136), 0x2D0uLL);
    uint64_t v74 = (void *)swift_task_alloc();
    *(void *)(v0 + 2720) = v74;
    *uint64_t v74 = v0;
    v74[1] = sub_192A4C;
    uint64_t v75 = *(void *)(v0 + 2608);
    v74[108] = *(void *)(v0 + 2544);
    v74[107] = v75;
    v74[106] = v0 + 2320;
    v74[109] = *(void *)(v0 + 480);
    uint64_t v63 = (uint64_t)sub_194098;
    uint64_t v64 = 0;
    uint64_t v65 = 0;
    return _swift_task_switch(v63, v64, v65);
  }
  return swift_release();
}

uint64_t sub_192A4C()
{
  *(void *)(*(void *)v1 + 2728) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1938B4;
  }
  else
  {
    uint64_t v2 = sub_192BC8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_192BC8()
{
  uint64_t v115 = v0;
  uint64_t v1 = *(void *)(v0 + 2728);
  uint64_t v2 = *(void *)(v0 + 2328);
  uint64_t v3 = *(void *)(v0 + 2336);
  uint64_t v4 = *(void *)(v0 + 2344);
  uint64_t v5 = *(void *)(v0 + 2352);
  uint64_t v6 = *(void *)(v0 + 2360);
  uint64_t v7 = swift_bridgeObjectRetain();
  uint64_t v8 = sub_19A14C(v7, (uint64_t)sub_194D4C, 0);
  swift_bridgeObjectRelease_n();
  if (!v8[2])
  {
    sub_1290DC();
    swift_allocError();
    *(void *)uint64_t v10 = 2;
    *(unsigned char *)(v10 + 8) = 7;
    swift_willThrow();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    goto LABEL_5;
  }
  *(void *)(v0 + 2432) = v8[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_128C70();
  if (!v1)
  {
    uint64_t v13 = v9;
    uint64_t v14 = v2;
    uint64_t v15 = v3;
    uint64_t v16 = v4;
    uint64_t v17 = v5;
    swift_bridgeObjectRelease();
    uint64_t v113 = v14;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)(v0 + 2440) = v13;
    swift_bridgeObjectRetain();
    sub_18F9A0((uint64_t *)(v0 + 2440), sub_124804, sub_198160);
    uint64_t v104 = v16;
    uint64_t v111 = v6;
    uint64_t v18 = *(void *)(v0 + 2608);
    uint64_t v19 = *(void *)(v0 + 2584);
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void *)(v0 + 2440);
    sub_A0EE0(v18, v19);
    swift_retain();
    uint64_t v21 = sub_1FB410();
    os_log_type_t v22 = sub_1FBDC0();
    BOOL v23 = os_log_type_enabled(v21, v22);
    uint64_t v24 = *(void *)(v0 + 2584);
    if (v23)
    {
      uint64_t v25 = swift_slowAlloc();
      v114[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 136446466;
      uint64_t v26 = sub_1FB0F0();
      *(void *)(v0 + 2472) = sub_D5890(v26, v27, v114);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      sub_19B62C(v24);
      *(_WORD *)(v25 + 12) = 2080;
      uint64_t v28 = sub_194D64(v20);
      *(void *)(v0 + 2480) = sub_D5890(v28, v29, v114);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      swift_release_n();
      _os_log_impl(&dword_0, v21, v22, "subrequest %{public}s filteredResponse=%s", (uint8_t *)v25, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      sub_19B62C(*(void *)(v0 + 2584));
      swift_release_n();
    }

    uint64_t v96 = *(void *)(v0 + 2688);
    uint64_t v30 = *(void *)(v0 + 2680);
    uint64_t v31 = *(void *)(v0 + 2672);
    uint64_t v32 = *(void *)(v0 + 2664);
    uint64_t v99 = *(void *)(v0 + 2640);
    *(void *)type = *(void *)(v0 + 2648);
    uint64_t v97 = *(void *)(v0 + 2696);
    uint64_t v98 = *(void *)(v0 + 2608);
    *(void *)(v0 + 2368) = *(void *)(v0 + 2656);
    *(void *)(v0 + 2376) = v32;
    *(void *)(v0 + 2384) = v31;
    *(void *)(v0 + 2392) = v30;
    *(void *)(v0 + 2400) = v96;
    *(void *)(v0 + 2408) = v97;
    *(void *)(v0 + 2272) = v8;
    *(void *)(v0 + 2280) = v113;
    *(void *)(v0 + 2288) = v15;
    *(void *)(v0 + 2296) = v104;
    *(void *)(v0 + 2304) = v17;
    *(void *)(v0 + 2312) = v111;
    sub_129AB4((void *)(v0 + 2368), (uint64_t *)(v0 + 2272), (uint64_t *)(v0 + 2224));
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_19B62C(v98);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v33 = *(void *)(v0 + 2224);
    unint64_t v34 = *(void *)(v0 + 2232);
    unint64_t v35 = *(void *)(v0 + 2240);
    unint64_t v36 = *(void *)(v0 + 2248);
    uint64_t v37 = *(void *)(v0 + 2256);
    uint64_t v38 = *(uint64_t **)(v0 + 2264);
    if (*(void *)type == v99) {
      goto LABEL_15;
    }
    unint64_t v39 = *(void *)(v0 + 2648);
    uint64_t v40 = *(void *)(v0 + 2632);
    if (v39 >= *(void *)(v40 + 16))
    {
      __break(1u);
    }
    else
    {
      if (v39 == *(void *)(v0 + 2624) + 1)
      {
LABEL_15:
        swift_bridgeObjectRelease();
        uint64_t v41 = *(unint64_t **)(v0 + 2528);
        *uint64_t v41 = v33;
        v41[1] = v34;
        v41[2] = v35;
        v41[3] = v36;
        v41[4] = v37;
        v41[5] = (unint64_t)v38;
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        swift_task_dealloc();
        uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
        goto LABEL_6;
      }
      *(void *)(v0 + 2696) = v38;
      *(void *)(v0 + 2688) = v37;
      BOOL v42 = (void *)(v40 + 32 * v39);
      *(void *)(v0 + 2680) = v36;
      *(void *)(v0 + 2672) = v35;
      *(void *)(v0 + 2664) = v34;
      *(void *)(v0 + 2656) = v33;
      *(void *)(v0 + 2648) = v39 + 1;
      os_log_t log = (os_log_t)*(int *)(v0 + 2760);
      uint64_t v112 = *(int *)(v0 + 2764);
      uint64_t v108 = *(int *)(v0 + 2756);
      uint64_t v105 = *(int *)(v0 + 2752);
      uint64_t v107 = *(int *)(v0 + 2740);
      uint64_t v106 = *(int *)(v0 + 2736);
      uint64_t v43 = *(void *)(v0 + 2608);
      uint64_t v44 = *(int **)(v0 + 2576);
      uint64_t v45 = *(void *)(v0 + 2568);
      uint64_t v46 = *(void *)(v0 + 2560);
      uint64_t v47 = *(void *)(v0 + 2536);
      *(void *)typea = *(void *)(v0 + 2552);
      BOOL v103 = (uint64_t *)(v47 + *(int *)(v0 + 2748));
      uint64_t v48 = (uint64_t *)(v47 + *(int *)(v0 + 2744));
      uint64_t v50 = v42[6];
      unint64_t v49 = v42[7];
      uint64_t v51 = v42[4];
      uint64_t v52 = v42[5];
      *(void *)(v0 + 2704) = v51;
      uint64_t v100 = v51;
      swift_unknownObjectRetain();
      sub_1FB100();
      uint64_t v98 = v52;
      uint64_t v113 = v50;
      uint64_t v53 = sub_517D0(v52, v50, v49);
      (*(void (**)(uint64_t, uint64_t, os_log_type_t *))(v46 + 16))(v43, v45, *(os_log_type_t **)typea);
      char v54 = *(unsigned char *)(v47 + v105);
      char v55 = *(unsigned char *)(v47 + v108);
      uint64_t v56 = *(uint64_t *)((char *)&log->isa + v47);
      uint64_t v58 = *v48;
      uint64_t v57 = v48[1];
      char v59 = *(unsigned char *)(v47 + v112);
      uint64_t v60 = *(void *)(v47 + v107);
      uint64_t v61 = *v103;
      uint64_t v62 = v103[1];
      uint64_t v63 = *(void *)(v47 + v106);
      *(void *)(v43 + v44[5]) = v53;
      uint64_t v64 = (void *)(v43 + v44[6]);
      void *v64 = v58;
      v64[1] = v57;
      uint64_t v65 = (void *)(v43 + v44[7]);
      *uint64_t v65 = v61;
      v65[1] = v62;
      *(unsigned char *)(v43 + v44[8]) = v54;
      *(unsigned char *)(v43 + v44[9]) = v55;
      *(void *)(v43 + v44[10]) = v56;
      *(unsigned char *)(v43 + v44[11]) = v59;
      *(void *)(v43 + v44[12]) = _swiftEmptySetSingleton;
      *(void *)(v43 + v44[13]) = v60;
      *(void *)(v43 + v44[14]) = v63;
      uint64_t v66 = *(void (**)(uint64_t, void))(v46 + 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v66(v45, *(void *)typea);
      unint64_t v33 = v49;
      if ((v49 & 1) == 0)
      {
        uint64_t v37 = v100;
        swift_unknownObjectRetain();
        uint64_t v38 = (uint64_t *)(v0 + 2488);
LABEL_18:
        uint64_t v67 = sub_4ABF0(v37, v98, v113, v33);
        goto LABEL_25;
      }
      sub_1FC730();
      uint64_t v37 = v100;
      swift_unknownObjectRetain_n();
      unint64_t v68 = (void *)swift_dynamicCastClass();
      uint64_t v38 = (uint64_t *)(v0 + 2488);
      if (!v68)
      {
        swift_unknownObjectRelease();
        unint64_t v68 = _swiftEmptyArrayStorage;
      }
      uint64_t v69 = v68[2];
      swift_release();
      if (!__OFSUB__(v33 >> 1, v113))
      {
        if (v69 == (v33 >> 1) - v113)
        {
          uint64_t v67 = (void *)swift_dynamicCastClass();
          if (!v67)
          {
            swift_unknownObjectRelease();
            uint64_t v67 = _swiftEmptyArrayStorage;
          }
LABEL_25:
          swift_unknownObjectRelease();
          *(void *)(v0 + 2464) = v67;
          sub_18F9A0((uint64_t *)(v0 + 2464), sub_12473C, sub_195DEC);
          uint64_t v70 = *(void *)(v0 + 2464);
          if (qword_26C370 != -1) {
            swift_once();
          }
          uint64_t v71 = *(void *)(v0 + 2608);
          uint64_t v72 = *(void *)(v0 + 2600);
          uint64_t v73 = *(void *)(v0 + 2592);
          uint64_t v74 = *(void *)(v0 + 2536);
          uint64_t v75 = sub_1FB430();
          *(void *)(v0 + 2712) = sub_6DBC8(v75, (uint64_t)qword_2A5C30);
          sub_A0EE0(v71, v72);
          sub_A0EE0(v74, v73);
          swift_unknownObjectRetain_n();
          swift_retain();
          uint64_t v76 = sub_1FB410();
          os_log_type_t v77 = sub_1FBDC0();
          BOOL v78 = os_log_type_enabled(v76, v77);
          uint64_t v79 = *(void *)(v0 + 2600);
          if (v78)
          {
            os_log_type_t v109 = v77;
            uint64_t v80 = swift_slowAlloc();
            uint64_t *v38 = swift_slowAlloc();
            *(_DWORD *)uint64_t v80 = 136446978;
            uint64_t v81 = sub_1FB0F0();
            *(void *)(v0 + 2496) = sub_D5890(v81, v82, v38);
            sub_1FBED0();
            swift_bridgeObjectRelease();
            sub_19B62C(v79);
            *(_WORD *)(v80 + 12) = 2048;
            uint64_t v83 = swift_unknownObjectRelease();
            if (__OFSUB__(v33 >> 1, v113))
            {
              __break(1u);
              return _swift_task_switch(v83, v84, v85);
            }
            uint64_t v86 = *(void *)(v0 + 2592);
            *(void *)(v0 + 2504) = (v33 >> 1) - v113;
            sub_1FBED0();
            swift_unknownObjectRelease();
            *(_WORD *)(v80 + 22) = 2082;
            uint64_t v87 = sub_1FB0F0();
            *(void *)(v0 + 2512) = sub_D5890(v87, v88, v38);
            sub_1FBED0();
            swift_bridgeObjectRelease();
            sub_19B62C(v86);
            *(_WORD *)(v80 + 32) = 2080;
            uint64_t v89 = sub_193ED4(v70);
            *(void *)(v0 + 2520) = sub_D5890(v89, v90, v38);
            sub_1FBED0();
            swift_bridgeObjectRelease();
            swift_release_n();
            _os_log_impl(&dword_0, v76, v109, "issuing subrequest %{public}s with %ld seed books for request %{public}s seedBooks=%s", (uint8_t *)v80, 0x2Au);
            swift_arrayDestroy();
            swift_slowDealloc();
            swift_slowDealloc();
          }
          else
          {
            uint64_t v91 = *(void *)(v0 + 2592);
            swift_unknownObjectRelease();
            sub_19B62C(v79);
            swift_unknownObjectRelease();
            sub_19B62C(v91);
            swift_release_n();
          }
          uint64_t v92 = *(void *)(v0 + 2624);
          uint64_t v93 = *(void *)(v0 + 2616);
          memcpy((void *)(v0 + 16), (const void *)(v0 + 1856), 0x170uLL);
          *(void *)(v0 + 384) = v93;
          *(_OWORD *)(v0 + 392) = *(_OWORD *)(v0 + 2416);
          *(void *)(v0 + 408) = v92;
          memcpy((void *)(v0 + 416), (const void *)(v0 + 1136), 0x2D0uLL);
          double v94 = (void *)swift_task_alloc();
          *(void *)(v0 + 2720) = v94;
          *double v94 = v0;
          v94[1] = sub_192A4C;
          uint64_t v95 = *(void *)(v0 + 2608);
          v94[108] = *(void *)(v0 + 2544);
          v94[107] = v95;
          v94[106] = v0 + 2320;
          v94[109] = *(void *)(v0 + 480);
          uint64_t v83 = (uint64_t)sub_194098;
          uint64_t v84 = 0;
          uint64_t v85 = 0;
          return _swift_task_switch(v83, v84, v85);
        }
        goto LABEL_36;
      }
    }
    __break(1u);
LABEL_36:
    swift_unknownObjectRelease();
    goto LABEL_18;
  }
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease_n();
  swift_unknownObjectRelease();
LABEL_5:
  sub_19B62C(*(void *)(v0 + 2608));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
LABEL_6:
  return v11();
}

uint64_t sub_1938B4()
{
  uint64_t v1 = *(void *)(v0 + 2608);
  swift_unknownObjectRelease();
  sub_19B62C(v1);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = *(uint64_t (**)(void))(v0 + 8);
  return v2();
}

uint64_t sub_19396C@<X0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v8 = *a1;
  char v33 = *((unsigned char *)a1 + 8);
  uint64_t v9 = a1[4];
  char v10 = *((unsigned char *)a1 + 40);
  uint64_t v11 = a1[6];
  uint64_t v35 = a1[7];
  uint64_t v12 = a1[8];
  uint64_t v13 = a1[9];
  if (*(void *)(a2 + 16) && (uint64_t v15 = sub_56168(v8), (v16 & 1) != 0))
  {
    uint64_t v32 = *(void **)(*(void *)(a2 + 56) + 8 * v15);
    swift_bridgeObjectRetain();
    if (!*(void *)(a3 + 16)) {
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v32 = _swiftEmptyArrayStorage;
    if (!*(void *)(a3 + 16))
    {
LABEL_8:
      uint64_t v19 = _swiftEmptyArrayStorage;
      goto LABEL_9;
    }
  }
  uint64_t v17 = sub_56168(v8);
  if ((v18 & 1) == 0) {
    goto LABEL_8;
  }
  uint64_t v19 = *(void **)(*(void *)(a3 + 56) + 8 * v17);
  swift_bridgeObjectRetain();
LABEL_9:
  uint64_t v34 = v8;
  if (*(void *)(a4 + 16) && (uint64_t v20 = sub_56168(v8), (v21 & 1) != 0))
  {
    char v22 = 0;
    uint64_t v23 = *(void *)(a4 + 56) + 40 * v20;
    uint64_t v30 = *(void *)(v23 + 8);
    uint64_t v31 = *(void *)v23;
    uint64_t v27 = *(unsigned __int8 *)(v23 + 16);
    uint64_t v29 = *(void *)(v23 + 24);
    char v28 = *(unsigned char *)(v23 + 32);
  }
  else
  {
    uint64_t v30 = 0;
    uint64_t v31 = 0;
    uint64_t v29 = 0;
    char v28 = 0;
    char v22 = 1;
    uint64_t v27 = 2;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_5480C(v9, v10);
  uint64_t v24 = sub_50A6C((uint64_t)v32);
  swift_bridgeObjectRelease();
  uint64_t v25 = sub_50A6C((uint64_t)v19);
  swift_bridgeObjectRelease();
  uint64_t result = sub_5148C((uint64_t)&off_254128);
  *(void *)a5 = v34;
  *(unsigned char *)(a5 + 8) = v33;
  *(void *)(a5 + 16) = v30;
  *(unsigned char *)(a5 + 24) = v22;
  *(void *)(a5 + 32) = v9;
  *(unsigned char *)(a5 + 40) = v10;
  *(void *)(a5 + 48) = v11;
  *(void *)(a5 + 56) = v35;
  *(void *)(a5 + 64) = v12;
  *(void *)(a5 + 72) = v13;
  *(void *)(a5 + 80) = v24;
  *(void *)(a5 + 88) = v25;
  *(void *)(a5 + 96) = result;
  *(void *)(a5 + 104) = _swiftEmptySetSingleton;
  *(void *)(a5 + 112) = v31;
  *(void *)(a5 + 120) = v30;
  *(void *)(a5 + 128) = v27;
  *(void *)(a5 + 136) = v29;
  *(unsigned char *)(a5 + 144) = v28;
  return result;
}

BOOL sub_193B80(void *a1, void *a2)
{
  unint64_t v2 = a2[17];
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v34 = a1[11];
  uint64_t v29 = a1[13];
  uint64_t v30 = a1[12];
  uint64_t v28 = a1[14];
  unint64_t v33 = a1[17];
  uint64_t v27 = a1[15];
  uint64_t v3 = a2[11];
  uint64_t v4 = a2[12];
  uint64_t v5 = a2[13];
  uint64_t v6 = a2[14];
  uint64_t v8 = a2[15];
  uint64_t v7 = a2[16];
  uint64_t v24 = a1[16];
  if (v2 >> 62 == 3)
  {
    uint64_t v9 = a2[11];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    *(void *)(v9 + 48) = v5;
    *(void *)(v9 + 56) = v6;
    *(void *)(v9 + 64) = v8;
    *(void *)(v9 + 72) = v7;
    *(unsigned char *)(v9 + 80) = v2 & 1;
  }
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  uint64_t v13 = v8;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  uint64_t v16 = v12;
  sub_1244C();
  sub_1244C();
  double v26 = COERCE_DOUBLE(Array<A>.affinity.getter(v9));
  char v25 = v17;
  swift_bridgeObjectRelease();
  sub_1255C(v3, v14, v15, v16, v13, v7, v2);
  if (v33 >> 1 == 0xFFFFFFFF)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x193EB4);
  }
  if (v33 >> 62 == 3)
  {
    uint64_t v18 = v34;
    uint64_t v19 = v24;
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1FD2A0;
    *(void *)(v18 + 32) = v34;
    *(void *)(v18 + 40) = v30;
    *(void *)(v18 + 48) = v29;
    *(void *)(v18 + 56) = v28;
    uint64_t v19 = v24;
    *(void *)(v18 + 64) = v27;
    *(void *)(v18 + 72) = v24;
    *(unsigned char *)(v18 + 80) = v33 & 1;
  }
  if (v25) {
    double v20 = 0.0;
  }
  else {
    double v20 = v26;
  }
  sub_1244C();
  sub_1244C();
  uint64_t v32 = Array<A>.affinity.getter(v18);
  char v31 = v21;
  swift_bridgeObjectRelease();
  sub_1255C(v34, v30, v29, v28, v27, v19, v33);
  double v22 = *(double *)&v32;
  if (v31) {
    double v22 = 0.0;
  }
  return v20 < v22;
}

uint64_t sub_193ED4(uint64_t a1)
{
  uint64_t v17 = 0x202020200A5BLL;
  unint64_t v18 = 0xE600000000000000;
  int64_t v1 = *(void *)(a1 + 16);
  unint64_t v2 = _swiftEmptyArrayStorage;
  if (v1)
  {
    uint64_t v16 = _swiftEmptyArrayStorage;
    sub_46588(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage;
    uint64_t v4 = (char *)(a1 + 32);
    do
    {
      memcpy(__dst, v4, 0x229uLL);
      uint64_t v5 = sub_18FEF8();
      uint64_t v7 = v6;
      uint64_t v16 = v2;
      unint64_t v9 = v2[2];
      unint64_t v8 = v2[3];
      if (v9 >= v8 >> 1)
      {
        sub_46588(v8 > 1, v9 + 1, 1);
        unint64_t v2 = v16;
      }
      v2[2] = v9 + 1;
      uint64_t v10 = &v2[2 * v9];
      v10[4] = v5;
      v10[5] = v7;
      v4 += 560;
      --v1;
    }
    while (v1);
  }
  __dst[0] = v2;
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v11 = sub_1FB7B0();
  uint64_t v13 = v12;
  swift_bridgeObjectRelease();
  v19._countAndFlagsBits = v11;
  v19._object = v13;
  sub_1FB8F0(v19);
  swift_bridgeObjectRelease();
  v20._countAndFlagsBits = 93;
  v20._object = (void *)0xE100000000000000;
  sub_1FB8F0(v20);
  return v17;
}

uint64_t sub_194068(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[108] = v3;
  v4[107] = a2;
  v4[106] = a1;
  v4[109] = *(void *)(a3 + 464);
  return _swift_task_switch(sub_194098, 0, 0);
}

uint64_t sub_194098()
{
  uint64_t v71 = v0;
  uint64_t v2 = *(void *)(v0 + 856);
  uint64_t v3 = sub_1FB0F0();
  unint64_t v5 = v4;
  *(void *)(v0 + 880) = v3;
  *(void *)(v0 + 888) = v4;
  uint64_t v6 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  uint64_t v7 = *(void *)(v2 + v6[5]);
  uint64_t v8 = swift_task_alloc();
  *(void *)(v8 + 16) = v2;
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_18F380((void (*)(uint64_t *__return_ptr, unsigned char *))sub_19B688, v8, v7);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v10 = *(void *)(v9 + 16);
  uint64_t v11 = *(void *)(v2 + v6[13]);
  if ((unsigned __int128)(v10 * (__int128)v11) >> 64 == (v10 * v11) >> 63)
  {
    uint64_t v64 = v3;
    unint64_t v65 = v5;
    uint64_t v12 = *(void *)(v0 + 856);
    if (*(void *)(v12 + v6[14]) >= v10 * v11) {
      uint64_t v13 = v10 * v11;
    }
    else {
      uint64_t v13 = *(void *)(v12 + v6[14]);
    }
    sub_128788(v9, (uint64_t)&v67);
    uint64_t v63 = v67;
    *(unsigned char *)(v0 + 777) = v67;
    uint64_t v8 = v68;
    *(void *)(v0 + 896) = v68;
    sub_12124(&qword_2729C0);
    uint64_t v3 = swift_allocObject();
    *(void *)(v0 + 904) = v3;
    *(_OWORD *)(v3 + 16) = xmmword_1FD2A0;
    if (*(unsigned char *)(v12 + v6[9]))
    {
      uint64_t v14 = _swiftEmptySetSingleton;
    }
    else
    {
      uint64_t v15 = swift_bridgeObjectRetain();
      uint64_t v14 = (void *)sub_50A6C(v15);
      swift_bridgeObjectRelease();
    }
    sub_12889C((uint64_t)v14, v13, v3 + 32);
    uint64_t v16 = *(void *)(v0 + 856);
    swift_bridgeObjectRelease();
    uint64_t v17 = (uint64_t *)(v16 + v6[7]);
    uint64_t v18 = *v17;
    *(void *)(v0 + 912) = *v17;
    uint64_t v19 = v17[1];
    *(void *)(v0 + 920) = v19;
    uint64_t v59 = v19;
    uint64_t v60 = v18;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v1 = v5;
    if (qword_26C370 == -1) {
      goto LABEL_9;
    }
  }
  else
  {
    __break(1u);
  }
  swift_once();
LABEL_9:
  uint64_t v61 = (_OWORD *)(v0 + 256);
  uint64_t v62 = (_OWORD *)(v0 + 648);
  uint64_t v20 = sub_1FB430();
  *(void *)(v0 + 928) = sub_6DBC8(v20, (uint64_t)qword_2A5C30);
  swift_bridgeObjectRetain_n();
  char v21 = sub_1FB410();
  os_log_type_t v22 = sub_1FBDC0();
  if (os_log_type_enabled(v21, v22))
  {
    uint64_t v23 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v23 = 136446210;
    swift_bridgeObjectRetain();
    uint64_t v24 = v64;
    *(void *)(v0 + 840) = sub_D5890(v64, v65, &v67);
    unint64_t v1 = v65;
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v21, v22, "initiating request for %{public}s", v23, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();

    uint64_t v24 = v64;
  }
  char v25 = (_OWORD *)(v0 + 16);
  uint64_t v26 = *(void *)(v0 + 864);
  *(void *)(v0 + 648) = v24;
  *(void *)(v0 + 656) = v1;
  *(_OWORD *)(v0 + 664) = 0u;
  *(void *)(v0 + 680) = v60;
  *(void *)(v0 + 688) = v59;
  *(void *)(v0 + 696) = v63;
  *(void *)(v0 + 704) = v8;
  *(void *)(v0 + 712) = v3;
  *(void *)(v0 + 720) = 0;
  unint64_t v27 = 0xD00000000000003DLL;
  unint64_t v28 = 0x8000000000219AD0;
  switch(*(unsigned char *)(v26 + 48))
  {
    case 1:
      unint64_t v27 = 0xD00000000000004CLL;
      uint64_t v29 = "https://public-news-qa-books-personalization-server.us-west-3d.app.apple.com";
      goto LABEL_15;
    case 2:
      unint64_t v27 = 0xD00000000000003FLL;
      uint64_t v29 = "https://staging-books-personalization-server.newsapps.apple.com";
LABEL_15:
      unint64_t v28 = (unint64_t)(v29 - 32) | 0x8000000000000000;
      break;
    case 3:
      unint64_t v28 = 0x8000000000219A10;
      unint64_t v27 = 0xD00000000000002ELL;
      break;
    default:
      break;
  }
  uint64_t v30 = *(void *)(v26 + 16);
  uint64_t v31 = *(void *)(v26 + 24);
  uint64_t v32 = *(void *)(v26 + 32);
  uint64_t v33 = *(void *)(v26 + 40);
  sub_51B70(v26 + 96, v0 + 784);
  *(void *)(v0 + 168) = v27;
  *(void *)(v0 + 176) = v28;
  *(void *)(v0 + 184) = v30;
  *(void *)(v0 + 192) = v31;
  *(void *)(v0 + 200) = v32;
  *(void *)(v0 + 208) = v33;
  sub_51B70(v0 + 784, v0 + 216);
  uint64_t v67 = v30;
  uint64_t v68 = v31;
  uint64_t v69 = v32;
  uint64_t v70 = v33;
  sub_52948(v30);
  sub_52948(v32);
  swift_bridgeObjectRetain();
  sub_52948(v30);
  sub_52948(v32);
  ClientConverter.init(configuration:)(&v67, (uint64_t *)(v0 + 496));
  sub_1264C(v0 + 784);
  long long v34 = *(_OWORD *)(v0 + 592);
  long long v35 = *(_OWORD *)(v0 + 608);
  *(_OWORD *)(v0 + 112) = v34;
  *(_OWORD *)(v0 + 128) = v35;
  *(_OWORD *)(v0 + 144) = *(_OWORD *)(v0 + 624);
  *(void *)(v0 + 160) = *(void *)(v0 + 640);
  long long v36 = *(_OWORD *)(v0 + 528);
  long long v37 = *(_OWORD *)(v0 + 544);
  *(_OWORD *)(v0 + 48) = v36;
  *(_OWORD *)(v0 + 64) = v37;
  long long v38 = *(_OWORD *)(v0 + 576);
  *(_OWORD *)(v0 + 80) = *(_OWORD *)(v0 + 560);
  *(_OWORD *)(v0 + 96) = v38;
  long long v39 = *(_OWORD *)(v0 + 512);
  _OWORD *v25 = *(_OWORD *)(v0 + 496);
  *(_OWORD *)(v0 + 32) = v39;
  long long v40 = *(_OWORD *)(v0 + 192);
  long long v41 = *(_OWORD *)(v0 + 224);
  long long v42 = *(_OWORD *)(v0 + 240);
  *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 208);
  *(_OWORD *)(v0 + 464) = v41;
  *(_OWORD *)(v0 + 480) = v42;
  long long v43 = *(_OWORD *)(v0 + 128);
  long long v44 = *(_OWORD *)(v0 + 144);
  *(_OWORD *)(v0 + 352) = v34;
  *(_OWORD *)(v0 + 368) = v43;
  long long v45 = *(_OWORD *)(v0 + 160);
  long long v46 = *(_OWORD *)(v0 + 176);
  *(_OWORD *)(v0 + 384) = v44;
  *(_OWORD *)(v0 + 400) = v45;
  *(_OWORD *)(v0 + 416) = v46;
  *(_OWORD *)(v0 + 432) = v40;
  long long v47 = *(_OWORD *)(v0 + 64);
  long long v48 = *(_OWORD *)(v0 + 80);
  *(_OWORD *)(v0 + 288) = v36;
  *(_OWORD *)(v0 + 304) = v47;
  long long v49 = *(_OWORD *)(v0 + 96);
  *(_OWORD *)(v0 + 320) = v48;
  *(_OWORD *)(v0 + 336) = v49;
  long long v50 = *(_OWORD *)(v0 + 32);
  *uint64_t v61 = *v25;
  *(_OWORD *)(v0 + 272) = v50;
  swift_bridgeObjectRetain_n();
  uint64_t v51 = sub_1FB410();
  os_log_type_t v52 = sub_1FBDC0();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    uint64_t v67 = swift_slowAlloc();
    *(_DWORD *)uint64_t v53 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 832) = sub_D5890(v64, v65, &v67);
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v51, v52, "fetching recommendations for %{public}s", v53, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v54 = swift_task_alloc();
  *(void *)(v0 + 936) = v54;
  *(void *)(v54 + 16) = v61;
  *(void *)(v54 + 24) = v62;
  uint64_t v55 = swift_task_alloc();
  *(void *)(v0 + 944) = v55;
  *(void *)(v55 + 16) = v61;
  uint64_t v56 = swift_task_alloc();
  *(void *)(v0 + 952) = v56;
  *(void *)(v56 + 16) = v61;
  uint64_t v66 = (uint64_t (*)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_270808 + dword_270808);
  uint64_t v57 = (void *)swift_task_alloc();
  *(void *)(v0 + 960) = v57;
  *uint64_t v57 = v0;
  v57[1] = sub_194868;
  return v66(v0 + 728, v62, (uint64_t)sub_12D8BC, v54, (uint64_t)&unk_270800, v55, (uint64_t)sub_12DEA0, v56);
}

uint64_t sub_194868()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 968) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = sub_194A48;
  }
  else
  {
    uint64_t v4 = *(void *)(v2 + 920);
    uint64_t v5 = *(void *)(v2 + 912);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_12A0F8(v5, v4);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = sub_194B14;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_194A48()
{
  uint64_t v1 = v0[115];
  uint64_t v2 = v0[114];
  swift_bridgeObjectRelease();
  sub_1723E0((uint64_t)(v0 + 32));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_12A0F8(v2, v1);
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_194B14()
{
  uint64_t v19 = v0;
  uint64_t v1 = *(void *)(v0 + 728);
  uint64_t v2 = *(void *)(v0 + 736);
  uint64_t v3 = *(void *)(v0 + 744);
  uint64_t v16 = *(void *)(v0 + 752);
  uint64_t v4 = *(void *)(v0 + 760);
  uint64_t v5 = *(void *)(v0 + 768);
  unsigned __int8 v6 = *(unsigned char *)(v0 + 776);
  swift_bridgeObjectRetain();
  uint64_t v7 = sub_1FB410();
  os_log_type_t v8 = sub_1FBDC0();
  if (os_log_type_enabled(v7, v8))
  {
    unint64_t v9 = *(void *)(v0 + 888);
    uint64_t v14 = *(void *)(v0 + 880);
    uint64_t v15 = v2;
    uint64_t v10 = (uint8_t *)swift_slowAlloc();
    v17[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v10 = 136446210;
    swift_bridgeObjectRetain();
    *(void *)(v0 + 824) = sub_D5890(v14, v9, v17);
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v7, v8, "fetched recommendations for %{public}s", v10, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v2 = v15;
    swift_slowDealloc();
  }
  else
  {
    swift_bridgeObjectRelease_n();
  }

  uint64_t v11 = *(void **)(v0 + 848);
  v17[0] = v1;
  v17[1] = v2;
  v17[2] = v3;
  v17[3] = v16;
  v17[4] = v4;
  v17[5] = v5;
  unsigned __int8 v18 = v6;
  sub_128AF8(v11);
  sub_12A87C(v1, v2, v3, v16, v4, v5, v6);
  sub_1723E0(v0 + 256);
  uint64_t v12 = *(uint64_t (**)(void))(v0 + 8);
  return v12();
}

uint64_t sub_194D4C(uint64_t a1)
{
  return (*(float *)(a1 + 8) > 0.0) & ~*(unsigned __int8 *)(a1 + 12);
}

uint64_t sub_194D64(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46588(0, v1, 0);
    uint64_t v3 = a1 + 48;
    do
    {
      uint64_t v4 = *(void *)(v3 - 8);
      swift_bridgeObjectRetain();
      uint64_t v19 = sub_1FC580();
      uint64_t v20 = v5;
      v21._countAndFlagsBits = 58;
      v21._object = (void *)0xE100000000000000;
      sub_1FB8F0(v21);
      v22._countAndFlagsBits = sub_1FC580();
      sub_1FB8F0(v22);
      swift_bridgeObjectRelease();
      v23._countAndFlagsBits = 58;
      v23._object = (void *)0xE100000000000000;
      sub_1FB8F0(v23);
      if (*(void *)(v4 + 16) && (unint64_t v6 = sub_4CD3C(0, 0), (v7 & 1) != 0))
      {
        uint64_t v8 = *(void *)(*(void *)(v4 + 56) + 8 * v6);
        sub_12124(&qword_26D7F0);
        uint64_t v9 = swift_allocObject();
        *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
        *(void *)(v9 + 56) = &type metadata for Double;
        *(void *)(v9 + 64) = &protocol witness table for Double;
        *(void *)(v9 + 32) = v8;
        v10._countAndFlagsBits = sub_1FB840();
        object = v10._object;
      }
      else
      {
        object = (void *)0xE300000000000000;
        v10._countAndFlagsBits = 7104878;
      }
      v10._object = object;
      sub_1FB8F0(v10);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      unint64_t v12 = _swiftEmptyArrayStorage[3];
      if (v13 >= v12 >> 1) {
        sub_46588(v12 > 1, v13 + 1, 1);
      }
      v3 += 24;
      _swiftEmptyArrayStorage[2] = v13 + 1;
      uint64_t v14 = &_swiftEmptyArrayStorage[2 * v13];
      v14[4] = v19;
      v14[5] = v20;
      --v1;
    }
    while (v1);
  }
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v15 = sub_1FB7B0();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  v24._countAndFlagsBits = v15;
  v24._object = v17;
  sub_1FB8F0(v24);
  swift_bridgeObjectRelease();
  v25._countAndFlagsBits = 93;
  v25._object = (void *)0xE100000000000000;
  sub_1FB8F0(v25);
  return 0x202020200A5BLL;
}

uint64_t sub_195018()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_52958(*(void *)(v0 + 16));
  sub_52958(v1);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BooksBackendSeedBasedRecommendationService()
{
  return self;
}

uint64_t sub_1950AC(uint64_t a1, const void *a2)
{
  uint64_t v6 = *v2;
  char v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *char v7 = v3;
  v7[1] = sub_B06F4;
  v7[146] = v6;
  v7[145] = a1;
  memcpy(v7 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_1903A4, 0, 0);
}

void *sub_195180(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 16))(a1, a2, v8);
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_19A264(a3, a4);
  swift_bridgeObjectRelease();
  return v9;
}

unint64_t sub_195224()
{
  unint64_t result = 0x656B694C7373656CLL;
  switch(*(void *)(v0 + 48) >> 62)
  {
    case 1:
      unint64_t result = 0x656B694C65726F6DLL;
      break;
    case 2:
      ReviewInfo.starRating.getter(&v2);
      v3._countAndFlagsBits = sub_1FC580();
      sub_1FB8F0(v3);
      swift_bridgeObjectRelease();
      v4._countAndFlagsBits = 41;
      v4._object = (void *)0xE100000000000000;
      sub_1FB8F0(v4);
      unint64_t result = 0x6974615272617473;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      switch(*(unsigned char *)(v0 + 8))
      {
        case 1:
          unint64_t result = 0xD00000000000001FLL;
          break;
        case 2:
          unint64_t result = 0xD000000000000015;
          break;
        case 3:
          unint64_t result = 0x6863727550736177;
          break;
        case 4:
          unint64_t result = 0xD00000000000001DLL;
          break;
        case 5:
          unint64_t result = 0x6C706D6153736177;
          break;
        case 6:
        case 7:
          unint64_t result = 0xD000000000000014;
          break;
        default:
          return result;
      }
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_195454(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = v2[2];
  uint64_t v7 = v2[3];
  uint64_t v9 = v2[4];
  uint64_t v8 = v2[5];
  Swift::String v10 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v10;
  *Swift::String v10 = v3;
  v10[1] = sub_98BD4;
  return sub_190810(a1, a2, v6, v7, v9, v8);
}

void *sub_19551C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_195180(a1, a2, a3, *(void *)(v3 + 16));
}

uint64_t sub_195524(uint64_t a1, int a2, void *a3)
{
  uint64_t v7 = sub_1FB110();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  Swift::String v10 = (char *)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26D490);
  uint64_t v12 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)v56 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = *(void *)(a1 + 16);
  if (!v16) {
    return swift_bridgeObjectRelease();
  }
  LODWORD(v59) = a2;
  v56[1] = v3;
  uint64_t v17 = *(int *)(v12 + 48);
  v56[0] = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v18 = a1 + v56[0];
  uint64_t v61 = *(void *)(v13 + 72);
  uint64_t v58 = a1;
  swift_bridgeObjectRetain();
  sub_5606C(v18, (uint64_t)v15, &qword_26D490);
  uint64_t v57 = v8;
  uint64_t v19 = *(void (**)(unint64_t, char *, uint64_t))(v8 + 32);
  uint64_t v62 = v7;
  uint64_t v63 = v19;
  v19((unint64_t)v10, v15, v7);
  uint64_t v60 = v17;
  uint64_t v20 = *(void *)&v15[v17];
  uint64_t v64 = a3;
  uint64_t v21 = *a3;
  unint64_t v23 = sub_4C9C4((uint64_t)v10);
  uint64_t v24 = *(void *)(v21 + 16);
  BOOL v25 = (v22 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25)) {
    goto LABEL_24;
  }
  char v27 = v22;
  if (*(void *)(v21 + 24) >= v26)
  {
    if (v59)
    {
      if (v22) {
        goto LABEL_10;
      }
    }
    else
    {
      sub_1212EC();
      if (v27) {
        goto LABEL_10;
      }
    }
LABEL_13:
    long long v34 = (void *)*v64;
    *(void *)(*v64 + 8 * (v23 >> 6) + 64) |= 1 << v23;
    uint64_t v35 = v34[6];
    uint64_t v59 = *(void *)(v57 + 72);
    uint64_t v36 = v62;
    v63(v35 + v59 * v23, v10, v62);
    *(void *)(v34[7] + 8 * v23) = v20;
    uint64_t v37 = v34[2];
    BOOL v38 = __OFADD__(v37, 1);
    uint64_t v39 = v37 + 1;
    if (v38)
    {
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    uint64_t v40 = v36;
    v34[2] = v39;
    uint64_t v41 = v16 - 1;
    if (v16 == 1) {
      return swift_bridgeObjectRelease_n();
    }
    uint64_t v42 = v58 + v61 + v56[0];
    while (1)
    {
      sub_5606C(v42, (uint64_t)v15, &qword_26D490);
      v63((unint64_t)v10, v15, v40);
      uint64_t v43 = *(void *)&v15[v60];
      long long v44 = (void *)*v64;
      unint64_t v46 = sub_4C9C4((uint64_t)v10);
      uint64_t v47 = v44[2];
      BOOL v48 = (v45 & 1) == 0;
      uint64_t v49 = v47 + v48;
      if (__OFADD__(v47, v48)) {
        break;
      }
      char v50 = v45;
      if (v44[3] < v49)
      {
        sub_118B9C(v49, 1);
        unint64_t v51 = sub_4C9C4((uint64_t)v10);
        if ((v50 & 1) != (v52 & 1)) {
          goto LABEL_26;
        }
        unint64_t v46 = v51;
      }
      if (v50) {
        goto LABEL_10;
      }
      uint64_t v53 = (void *)*v64;
      *(void *)(*v64 + 8 * (v46 >> 6) + 64) |= 1 << v46;
      uint64_t v40 = v62;
      v63(v53[6] + v59 * v46, v10, v62);
      *(void *)(v53[7] + 8 * v46) = v43;
      uint64_t v54 = v53[2];
      BOOL v38 = __OFADD__(v54, 1);
      uint64_t v55 = v54 + 1;
      if (v38) {
        goto LABEL_25;
      }
      v53[2] = v55;
      v42 += v61;
      if (!--v41) {
        return swift_bridgeObjectRelease_n();
      }
    }
LABEL_24:
    __break(1u);
    goto LABEL_25;
  }
  sub_118B9C(v26, v59 & 1);
  unint64_t v28 = sub_4C9C4((uint64_t)v10);
  if ((v27 & 1) == (v29 & 1))
  {
    unint64_t v23 = v28;
    if ((v27 & 1) == 0) {
      goto LABEL_13;
    }
LABEL_10:
    uint64_t v31 = swift_allocError();
    swift_willThrow();
    uint64_t v67 = v31;
    swift_errorRetain();
    sub_12124(&qword_26D670);
    char v32 = swift_dynamicCast();
    uint64_t v33 = v62;
    if ((v32 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v57 + 8))(v10, v33);
      swift_bridgeObjectRelease();
      return swift_errorRelease();
    }
    goto LABEL_27;
  }
LABEL_26:
  sub_1FC770();
  __break(1u);
LABEL_27:
  uint64_t v65 = 0;
  unint64_t v66 = 0xE000000000000000;
  sub_1FC050(30);
  v68._object = (void *)0x80000000002171E0;
  v68._countAndFlagsBits = 0xD00000000000001BLL;
  sub_1FB8F0(v68);
  sub_1FC1D0();
  v69._countAndFlagsBits = 39;
  v69._object = (void *)0xE100000000000000;
  sub_1FB8F0(v69);
  uint64_t result = sub_1FC220();
  __break(1u);
  return result;
}

uint64_t sub_195A84(uint64_t a1, char a2, void *a3)
{
  LOBYTE(v4) = a2;
  uint64_t v6 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (!v6) {
    return swift_bridgeObjectRelease_n();
  }
  char v7 = *(unsigned char *)(a1 + 32);
  uint64_t v8 = *(void *)(a1 + 40);
  swift_bridgeObjectRetain();
  if (!v8) {
    return swift_bridgeObjectRelease_n();
  }
  uint64_t v9 = (void *)*a3;
  unint64_t v10 = sub_4C744(v7);
  uint64_t v12 = v9[2];
  BOOL v13 = (v11 & 1) == 0;
  BOOL v14 = __OFADD__(v12, v13);
  uint64_t v15 = v12 + v13;
  if (v14)
  {
LABEL_25:
    __break(1u);
    goto LABEL_26;
  }
  char v16 = v11;
  if (v9[3] < v15)
  {
    sub_11D7FC(v15, v4 & 1);
    unint64_t v10 = sub_4C744(v7);
    if ((v16 & 1) == (v17 & 1)) {
      goto LABEL_8;
    }
LABEL_6:
    unint64_t v10 = sub_1FC770();
    __break(1u);
  }
  if (v4)
  {
LABEL_8:
    if (v16) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  unint64_t v19 = v10;
  sub_123978();
  unint64_t v10 = v19;
  if (v16)
  {
LABEL_9:
    swift_allocError();
    swift_willThrow();
    swift_errorRetain();
    sub_12124(&qword_26D670);
    if ((swift_dynamicCast() & 1) == 0)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease_n();
      return swift_errorRelease();
    }
    goto LABEL_28;
  }
LABEL_12:
  uint64_t v20 = (void *)*a3;
  *(void *)(*a3 + 8 * (v10 >> 6) + 64) |= 1 << v10;
  *(unsigned char *)(v20[6] + v10) = v7;
  *(void *)(v20[7] + 8 * v10) = v8;
  uint64_t v21 = v20[2];
  BOOL v14 = __OFADD__(v21, 1);
  uint64_t v22 = v21 + 1;
  if (v14)
  {
LABEL_26:
    __break(1u);
LABEL_27:
    __break(1u);
LABEL_28:
    sub_1FC050(30);
    v34._object = (void *)0x80000000002171E0;
    v34._countAndFlagsBits = 0xD00000000000001BLL;
    sub_1FB8F0(v34);
    sub_1FC1D0();
    v35._countAndFlagsBits = 39;
    v35._object = (void *)0xE100000000000000;
    sub_1FB8F0(v35);
    uint64_t result = sub_1FC220();
    __break(1u);
    return result;
  }
  v20[2] = v22;
  if (v6 != 1)
  {
    Swift::String v4 = (void *)(a1 + 56);
    unint64_t v23 = 1;
    while (v23 < *(void *)(a1 + 16))
    {
      char v7 = *((unsigned char *)v4 - 8);
      uint64_t v8 = *v4;
      swift_bridgeObjectRetain();
      if (!v8) {
        return swift_bridgeObjectRelease_n();
      }
      uint64_t v24 = (void *)*a3;
      unint64_t v25 = sub_4C744(v7);
      uint64_t v27 = v24[2];
      BOOL v28 = (v26 & 1) == 0;
      BOOL v14 = __OFADD__(v27, v28);
      uint64_t v29 = v27 + v28;
      if (v14) {
        goto LABEL_25;
      }
      char v16 = v26;
      if (v24[3] < v29)
      {
        sub_11D7FC(v29, 1);
        unint64_t v25 = sub_4C744(v7);
        if ((v16 & 1) != (v30 & 1)) {
          goto LABEL_6;
        }
      }
      if (v16) {
        goto LABEL_9;
      }
      uint64_t v31 = (void *)*a3;
      *(void *)(*a3 + 8 * (v25 >> 6) + 64) |= 1 << v25;
      *(unsigned char *)(v31[6] + v25) = v7;
      *(void *)(v31[7] + 8 * v25) = v8;
      uint64_t v32 = v31[2];
      BOOL v14 = __OFADD__(v32, 1);
      uint64_t v33 = v32 + 1;
      if (v14) {
        goto LABEL_26;
      }
      ++v23;
      v31[2] = v33;
      v4 += 2;
      if (v6 == v23) {
        return swift_bridgeObjectRelease_n();
      }
    }
    goto LABEL_27;
  }
  return swift_bridgeObjectRelease_n();
}

uint64_t sub_195DEC(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  uint64_t result = sub_1FC570(v3);
  Swift::Int v100 = v3;
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_146;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v79 = (void *)*a1;
      uint64_t v80 = -1;
      uint64_t v81 = 1;
      unint64_t v82 = v79;
      do
      {
        uint64_t v83 = v80;
        uint64_t v84 = v82;
        do
        {
          if (v84[70] >= *v84) {
            break;
          }
          if (!v79) {
            goto LABEL_150;
          }
          memcpy(__dst, v84 + 70, sizeof(__dst));
          memcpy(v84 + 70, v84, 0x230uLL);
          uint64_t result = (uint64_t)memcpy(v84, __dst, 0x229uLL);
          v84 -= 70;
        }
        while (!__CFADD__(v83++, 1));
        ++v81;
        v82 += 70;
        --v80;
      }
      while (v81 != v100);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_155;
  }
  uint64_t v99 = result;
  uint64_t v104 = v1;
  uint64_t v96 = a1;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    double v102 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      char v11 = (char *)_swiftEmptyArrayStorage;
LABEL_112:
      uint64_t v86 = v11;
      uint64_t v98 = v8;
      if (v12 >= 2)
      {
        uint64_t v87 = *v96;
        do
        {
          unint64_t v88 = v12 - 2;
          if (v12 < 2) {
            goto LABEL_141;
          }
          if (!v87) {
            goto LABEL_154;
          }
          uint64_t v89 = v86;
          uint64_t v90 = *(void *)&v86[16 * v88 + 32];
          uint64_t v91 = *(void *)&v86[16 * v12 + 24];
          uint64_t v92 = v104;
          sub_19891C((char *)(v87 + 560 * v90), (char *)(v87 + 560 * *(void *)&v86[16 * v12 + 16]), v87 + 560 * v91, v102);
          uint64_t v104 = v92;
          if (v92) {
            break;
          }
          if (v91 < v90) {
            goto LABEL_142;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v89 = sub_70B24((uint64_t)v89);
          }
          if (v88 >= *((void *)v89 + 2)) {
            goto LABEL_143;
          }
          uint64_t v93 = &v89[16 * v88 + 32];
          *(void *)uint64_t v93 = v90;
          *((void *)v93 + 1) = v91;
          unint64_t v94 = *((void *)v89 + 2);
          if (v12 > v94) {
            goto LABEL_144;
          }
          memmove(&v89[16 * v12 + 16], &v89[16 * v12 + 32], 16 * (v94 - v12));
          uint64_t v86 = v89;
          *((void *)v89 + 2) = v94 - 1;
          unint64_t v12 = v94 - 1;
        }
        while (v94 > 2);
      }
LABEL_102:
      swift_bridgeObjectRelease();
      v98[2] = 0;
      return swift_bridgeObjectRelease();
    }
    uint64_t v98 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    uint64_t v98 = (void *)v7;
    double v102 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  uint64_t v97 = *a1 + 560;
  uint64_t v95 = *a1 - 560;
  char v11 = (char *)_swiftEmptyArrayStorage;
  uint64_t v101 = v10;
  while (1)
  {
    Swift::Int v13 = v9++;
    if (v9 >= v3)
    {
      Swift::Int v16 = v13;
      goto LABEL_25;
    }
    unint64_t v14 = *(void *)(v10 + 560 * v9);
    unint64_t v15 = *(void *)(v10 + 560 * v13);
    Swift::Int v9 = v13 + 2;
    if (v13 + 2 >= v3)
    {
      Swift::Int v16 = v13;
      if (v14 >= v15) {
        goto LABEL_25;
      }
LABEL_91:
      if (v9 < v16) {
        goto LABEL_147;
      }
      if (v16 < v9)
      {
        uint64_t v75 = (char *)(v95 + 560 * v9);
        Swift::Int v76 = v9;
        Swift::Int v77 = v16;
        BOOL v78 = (char *)(v10 + 560 * v16);
        while (1)
        {
          if (v77 != --v76)
          {
            if (!v10) {
              goto LABEL_153;
            }
            memcpy(__dst, v78, sizeof(__dst));
            memmove(v78, v75, 0x230uLL);
            memcpy(v75, __dst, 0x229uLL);
          }
          ++v77;
          v75 -= 560;
          v78 += 560;
          if (v77 >= v76) {
            goto LABEL_25;
          }
        }
      }
      goto LABEL_25;
    }
    Swift::Int v16 = v13;
    char v17 = (void *)(v97 + 560 * v13);
    while (v14 < v15 != v17[70] >= *v17)
    {
      v17 += 70;
      if (v3 == ++v9)
      {
        Swift::Int v9 = v3;
        break;
      }
    }
    if (v14 < v15) {
      goto LABEL_91;
    }
LABEL_25:
    if (v9 >= v3) {
      goto LABEL_41;
    }
    if (__OFSUB__(v9, v16)) {
      goto LABEL_145;
    }
    if (v9 - v16 >= v99)
    {
LABEL_41:
      Swift::Int v19 = v16;
      goto LABEL_42;
    }
    if (__OFADD__(v16, v99)) {
      goto LABEL_148;
    }
    Swift::Int v18 = v16 + v99 >= v3 ? v3 : v16 + v99;
    if (v18 < v16) {
      break;
    }
    Swift::Int v19 = v16;
    if (v9 != v18)
    {
      uint64_t v20 = (void *)(v10 + 560 * v9);
      do
      {
        Swift::Int v21 = v19;
        uint64_t v22 = v20;
        do
        {
          if (*v22 >= *(v22 - 70)) {
            break;
          }
          if (!v10) {
            goto LABEL_151;
          }
          memcpy(__dst, v22, sizeof(__dst));
          memcpy(v22, v22 - 70, 0x230uLL);
          memcpy(v22 - 70, __dst, 0x229uLL);
          ++v21;
          v22 -= 70;
        }
        while (v9 != v21);
        ++v9;
        v20 += 70;
      }
      while (v9 != v18);
      Swift::Int v9 = v18;
      if (v18 < v19) {
        goto LABEL_140;
      }
      goto LABEL_43;
    }
LABEL_42:
    if (v9 < v19) {
      goto LABEL_140;
    }
LABEL_43:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      char v11 = sub_7004C(0, *((void *)v11 + 2) + 1, 1, v11);
    }
    unint64_t v24 = *((void *)v11 + 2);
    unint64_t v23 = *((void *)v11 + 3);
    unint64_t v12 = v24 + 1;
    if (v24 >= v23 >> 1) {
      char v11 = sub_7004C((char *)(v23 > 1), v24 + 1, 1, v11);
    }
    *((void *)v11 + 2) = v12;
    unint64_t v25 = v11 + 32;
    char v26 = &v11[16 * v24 + 32];
    *(void *)char v26 = v19;
    *((void *)v26 + 1) = v9;
    if (v24)
    {
      uint64_t v10 = v101;
      while (1)
      {
        unint64_t v27 = v12 - 1;
        if (v12 >= 4)
        {
          uint64_t v32 = &v25[16 * v12];
          uint64_t v33 = *((void *)v32 - 8);
          uint64_t v34 = *((void *)v32 - 7);
          BOOL v38 = __OFSUB__(v34, v33);
          uint64_t v35 = v34 - v33;
          if (v38) {
            goto LABEL_129;
          }
          uint64_t v37 = *((void *)v32 - 6);
          uint64_t v36 = *((void *)v32 - 5);
          BOOL v38 = __OFSUB__(v36, v37);
          uint64_t v30 = v36 - v37;
          char v31 = v38;
          if (v38) {
            goto LABEL_130;
          }
          unint64_t v39 = v12 - 2;
          uint64_t v40 = &v25[16 * v12 - 32];
          uint64_t v42 = *(void *)v40;
          uint64_t v41 = *((void *)v40 + 1);
          BOOL v38 = __OFSUB__(v41, v42);
          uint64_t v43 = v41 - v42;
          if (v38) {
            goto LABEL_132;
          }
          BOOL v38 = __OFADD__(v30, v43);
          uint64_t v44 = v30 + v43;
          if (v38) {
            goto LABEL_135;
          }
          if (v44 >= v35)
          {
            uint64_t v62 = &v25[16 * v27];
            uint64_t v64 = *(void *)v62;
            uint64_t v63 = *((void *)v62 + 1);
            BOOL v38 = __OFSUB__(v63, v64);
            uint64_t v65 = v63 - v64;
            if (v38) {
              goto LABEL_139;
            }
            BOOL v55 = v30 < v65;
            goto LABEL_80;
          }
        }
        else
        {
          if (v12 != 3)
          {
            uint64_t v56 = *((void *)v11 + 4);
            uint64_t v57 = *((void *)v11 + 5);
            BOOL v38 = __OFSUB__(v57, v56);
            uint64_t v49 = v57 - v56;
            char v50 = v38;
            goto LABEL_74;
          }
          uint64_t v29 = *((void *)v11 + 4);
          uint64_t v28 = *((void *)v11 + 5);
          BOOL v38 = __OFSUB__(v28, v29);
          uint64_t v30 = v28 - v29;
          char v31 = v38;
        }
        if (v31) {
          goto LABEL_131;
        }
        unint64_t v39 = v12 - 2;
        char v45 = &v25[16 * v12 - 32];
        uint64_t v47 = *(void *)v45;
        uint64_t v46 = *((void *)v45 + 1);
        BOOL v48 = __OFSUB__(v46, v47);
        uint64_t v49 = v46 - v47;
        char v50 = v48;
        if (v48) {
          goto LABEL_134;
        }
        unint64_t v51 = &v25[16 * v27];
        uint64_t v53 = *(void *)v51;
        uint64_t v52 = *((void *)v51 + 1);
        BOOL v38 = __OFSUB__(v52, v53);
        uint64_t v54 = v52 - v53;
        if (v38) {
          goto LABEL_137;
        }
        if (__OFADD__(v49, v54)) {
          goto LABEL_138;
        }
        if (v49 + v54 >= v30)
        {
          BOOL v55 = v30 < v54;
LABEL_80:
          if (v55) {
            unint64_t v27 = v39;
          }
          goto LABEL_82;
        }
LABEL_74:
        if (v50) {
          goto LABEL_133;
        }
        uint64_t v58 = &v25[16 * v27];
        uint64_t v60 = *(void *)v58;
        uint64_t v59 = *((void *)v58 + 1);
        BOOL v38 = __OFSUB__(v59, v60);
        uint64_t v61 = v59 - v60;
        if (v38) {
          goto LABEL_136;
        }
        if (v61 < v49) {
          goto LABEL_15;
        }
LABEL_82:
        unint64_t v66 = v27 - 1;
        if (v27 - 1 >= v12)
        {
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
          goto LABEL_149;
        }
        if (!v10) {
          goto LABEL_152;
        }
        uint64_t v67 = v11;
        uint64_t v68 = v10;
        Swift::String v69 = &v25[16 * v66];
        uint64_t v70 = *(void *)v69;
        uint64_t v71 = &v25[16 * v27];
        uint64_t v72 = *((void *)v71 + 1);
        uint64_t v73 = v104;
        sub_19891C((char *)(v68 + 560 * *(void *)v69), (char *)(v68 + 560 * *(void *)v71), v68 + 560 * v72, v102);
        uint64_t v104 = v73;
        if (v73) {
          goto LABEL_102;
        }
        if (v72 < v70) {
          goto LABEL_126;
        }
        if (v27 > *((void *)v67 + 2)) {
          goto LABEL_127;
        }
        *(void *)Swift::String v69 = v70;
        *(void *)&v25[16 * v66 + 8] = v72;
        unint64_t v74 = *((void *)v67 + 2);
        if (v27 >= v74) {
          goto LABEL_128;
        }
        char v11 = v67;
        unint64_t v12 = v74 - 1;
        memmove(&v25[16 * v27], v71 + 16, 16 * (v74 - 1 - v27));
        *((void *)v67 + 2) = v74 - 1;
        BOOL v55 = v74 > 2;
        uint64_t v10 = v101;
        if (!v55) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v12 = 1;
    uint64_t v10 = v101;
LABEL_15:
    Swift::Int v3 = v100;
    if (v9 >= v100)
    {
      uint64_t v8 = v98;
      goto LABEL_112;
    }
  }
LABEL_149:
  __break(1u);
LABEL_150:
  __break(1u);
LABEL_151:
  __break(1u);
LABEL_152:
  __break(1u);
LABEL_153:
  __break(1u);
LABEL_154:
  __break(1u);
LABEL_155:
  uint64_t result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_19657C(uint64_t *a1, uint64_t (*a2)(uint64_t *, void *))
{
  Swift::Int v4 = a1[1];
  Swift::Int result = sub_1FC570(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_210;
    }
    if (v4) {
      return sub_5D8DC(0, v4, 1, a1);
    }
    return result;
  }
  Swift::Int v199 = result;
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_222;
  }
  Swift::Int v204 = v4;
  double v197 = a1;
  if (v4 < 2)
  {
    uint64_t v205 = (char *)&_swiftEmptyArrayStorage[4];
    char v198 = _swiftEmptyArrayStorage;
    if (v4 != 1)
    {
      unint64_t v138 = _swiftEmptyArrayStorage[2];
      char v11 = (char *)_swiftEmptyArrayStorage;
LABEL_175:
      if (v138 >= 2)
      {
        uint64_t v189 = *v197;
        do
        {
          unint64_t v190 = v138 - 2;
          if (v138 < 2) {
            goto LABEL_204;
          }
          if (!v189) {
            goto LABEL_221;
          }
          long long v191 = v11;
          uint64_t v192 = *(void *)&v11[16 * v190 + 32];
          uint64_t v193 = *(void *)&v11[16 * v138 + 24];
          sub_198BD0((char *)(v189 + 560 * v192), (char *)(v189 + 560 * *(void *)&v11[16 * v138 + 16]), v189 + 560 * v193, v205);
          if (v2) {
            break;
          }
          if (v193 < v192) {
            goto LABEL_206;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v191 = sub_70B24((uint64_t)v191);
          }
          if (v190 >= *((void *)v191 + 2)) {
            goto LABEL_207;
          }
          double v194 = &v191[16 * v190 + 32];
          *(void *)double v194 = v192;
          *((void *)v194 + 1) = v193;
          unint64_t v195 = *((void *)v191 + 2);
          if (v138 > v195) {
            goto LABEL_208;
          }
          memmove(&v191[16 * v138 + 16], &v191[16 * v138 + 32], 16 * (v195 - v138));
          char v11 = v191;
          *((void *)v191 + 2) = v195 - 1;
          unint64_t v138 = v195 - 1;
        }
        while (v195 > 2);
      }
LABEL_186:
      swift_bridgeObjectRelease();
      v198[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    char v198 = (void *)v8;
    uint64_t v205 = (char *)(v8 + 32);
  }
  Swift::Int v9 = 0;
  uint64_t v10 = *a1;
  Swift::Int v202 = v4 - 1;
  uint64_t v196 = *a1 - 560;
  char v11 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v12 = v4;
  uint64_t v210 = *a1;
  while (1)
  {
    char v201 = v11;
    Swift::Int v13 = v9 + 1;
    Swift::Int v209 = v9;
    if (v9 + 1 >= v12)
    {
      Swift::Int v15 = v9 + 1;
      goto LABEL_69;
    }
    Swift::Int v14 = v9;
    memcpy(__dst, (const void *)(v10 + 560 * v13), 0x229uLL);
    memcpy(__src, (const void *)(v10 + 560 * v13), 0x229uLL);
    memcpy(v243, (const void *)(v10 + 560 * v14), 0x229uLL);
    memcpy(v240, (const void *)(v10 + 560 * v14), 0x229uLL);
    sub_12384(__dst);
    sub_12384(v243);
    int v215 = a2(__src, v240);
    if (v2)
    {
      sub_124B4(v243);
      sub_124B4(__dst);
      goto LABEL_186;
    }
    sub_124B4(v243);
    sub_124B4(__dst);
    Swift::Int v15 = v14 + 2;
    Swift::Int v12 = v204;
    if (v14 + 2 < v204) {
      break;
    }
LABEL_59:
    if (v215) {
      goto LABEL_60;
    }
LABEL_69:
    if (v15 < v12)
    {
      if (__OFSUB__(v15, v209)) {
        goto LABEL_209;
      }
      if (v15 - v209 < v199)
      {
        Swift::Int v74 = v209 + v199;
        if (__OFADD__(v209, v199)) {
          goto LABEL_211;
        }
        if (v74 >= v12) {
          Swift::Int v74 = v12;
        }
        if (v74 < v209)
        {
LABEL_212:
          __break(1u);
          goto LABEL_213;
        }
        Swift::Int v203 = v74;
        if (v15 != v74)
        {
LABEL_79:
          Swift::Int v207 = v15;
          Swift::Int v75 = v15;
          while (1)
          {
            Swift::Int v76 = (char *)(v10 + 560 * v75);
            memcpy(__dst, v76, 0x229uLL);
            memcpy(v243, v76 - 560, 0x229uLL);
            unint64_t v77 = v243[17];
            if ((unint64_t)v243[17] >> 1 == 0xFFFFFFFF) {
              goto LABEL_214;
            }
            uint64_t v78 = v243[11];
            uint64_t v79 = v243[12];
            uint64_t v80 = v243[13];
            uint64_t v81 = v243[14];
            uint64_t v82 = v243[15];
            uint64_t v83 = v243[16];
            uint64_t v222 = v243[15];
            uint64_t v224 = v243[14];
            uint64_t v236 = v243[16];
            Swift::Int v217 = v75;
            uint64_t v219 = v243[11];
            double v213 = v76 - 560;
            uint64_t v214 = v76;
            uint64_t v221 = v243[12];
            if ((unint64_t)v243[17] >> 62 == 3)
            {
              uint64_t v84 = *(void *)(v243[11] + 16);
              if (!v84)
              {
                uint64_t v100 = v243[13];
                uint64_t v105 = v243[14];
                uint64_t v106 = v243[16];
                sub_12430(v243[11], v243[12], v243[13], v243[14], v243[15], v243[16], v243[17]);
                uint64_t v98 = v219;
                sub_12430(v219, v221, v100, v105, v82, v106, v77);
                sub_12384(__dst);
                sub_12384(v243);
                uint64_t v99 = v221;
                uint64_t v93 = _swiftEmptyArrayStorage;
                uint64_t v101 = _swiftEmptyArrayStorage[2];
                if (!v101) {
                  goto LABEL_98;
                }
                goto LABEL_94;
              }
              uint64_t v85 = v243[11];
              uint64_t v86 = v243[13];
            }
            else
            {
              uint64_t v87 = v243[12];
              sub_12124(&qword_26D5D8);
              uint64_t v88 = swift_allocObject();
              uint64_t v79 = v87;
              uint64_t v83 = v236;
              uint64_t v82 = v222;
              uint64_t v81 = v224;
              uint64_t v85 = v88;
              *(_OWORD *)(v88 + 16) = xmmword_1FD2A0;
              *(void *)(v88 + 32) = v78;
              *(void *)(v88 + 40) = v79;
              *(void *)(v88 + 48) = v80;
              *(void *)(v88 + 56) = v224;
              *(void *)(v88 + 64) = v222;
              *(void *)(v88 + 72) = v236;
              uint64_t v86 = v80;
              uint64_t v84 = 1;
              *(unsigned char *)(v88 + 80) = v77 & 1;
            }
            unint64_t v89 = v77;
            uint64_t v90 = v79;
            unint64_t v212 = v89;
            sub_12430(v78, v79, v86, v81, v82, v83, v89);
            uint64_t v91 = v90;
            uint64_t v238 = v86;
            unint64_t v77 = v212;
            sub_12430(v78, v91, v86, v81, v82, v236, v212);
            sub_12384(__dst);
            sub_12384(v243);
            swift_bridgeObjectRetain();
            uint64_t v92 = (double *)(v85 + 80);
            uint64_t v93 = _swiftEmptyArrayStorage;
            do
            {
              if ((*(unsigned char *)v92 & 1) == 0)
              {
                double v94 = *(v92 - 2);
                double v95 = exp2(-*(v92 - 1) / *(v92 - 3));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v93 = sub_41BAC(0, v93[2] + 1, 1, v93);
                }
                unint64_t v97 = v93[2];
                unint64_t v96 = v93[3];
                if (v97 >= v96 >> 1) {
                  uint64_t v93 = sub_41BAC((void *)(v96 > 1), v97 + 1, 1, v93);
                }
                v93[2] = v97 + 1;
                *(double *)&v93[v97 + 4] = v94 * v95;
              }
              v92 += 7;
              --v84;
            }
            while (v84);
            swift_bridgeObjectRelease();
            uint64_t v98 = v219;
            uint64_t v99 = v221;
            uint64_t v100 = v238;
            uint64_t v101 = v93[2];
            if (!v101)
            {
LABEL_98:
              swift_bridgeObjectRelease();
              double v103 = 0.0;
              goto LABEL_99;
            }
LABEL_94:
            double v102 = (double *)(v93 + 4);
            double v103 = 0.0;
            do
            {
              double v104 = *v102++;
              double v103 = v103 + v104;
              --v101;
            }
            while (v101);
            swift_bridgeObjectRelease();
LABEL_99:
            swift_bridgeObjectRelease();
            uint64_t v107 = __dst[11];
            uint64_t v228 = __dst[13];
            uint64_t v230 = __dst[12];
            uint64_t v239 = __dst[14];
            uint64_t v226 = __dst[15];
            uint64_t v108 = __dst[16];
            unint64_t v109 = __dst[17];
            sub_1255C(v98, v99, v100, v224, v222, v236, v77);
            if (v109 >> 1 == 0xFFFFFFFF) {
              goto LABEL_215;
            }
            if (v109 >> 62 == 3)
            {
              uint64_t v110 = *(void *)(v107 + 16);
              uint64_t v111 = v228;
              uint64_t v112 = v230;
              if (!v110)
              {
                uint64_t v129 = v230;
                uint64_t v130 = v239;
                uint64_t v131 = v226;
                sub_12430(v107, v230, v228, v239, v226, v108, v109);
                sub_12430(v107, v230, v228, v239, v226, v108, v109);
                unint64_t v124 = _swiftEmptyArrayStorage;
                uint64_t v132 = _swiftEmptyArrayStorage[2];
                if (v132) {
                  goto LABEL_113;
                }
                goto LABEL_117;
              }
              uint64_t v113 = v107;
              uint64_t v114 = v239;
              unint64_t v115 = v109;
              uint64_t v116 = v108;
              uint64_t v117 = v226;
              uint64_t v118 = v228;
            }
            else
            {
              sub_12124(&qword_26D5D8);
              uint64_t v113 = swift_allocObject();
              *(_OWORD *)(v113 + 16) = xmmword_1FD2A0;
              uint64_t v118 = v228;
              uint64_t v112 = v230;
              *(void *)(v113 + 32) = v107;
              *(void *)(v113 + 40) = v230;
              uint64_t v114 = v239;
              *(void *)(v113 + 48) = v228;
              *(void *)(v113 + 56) = v239;
              unint64_t v115 = v109;
              uint64_t v116 = v108;
              uint64_t v117 = v226;
              *(void *)(v113 + 64) = v226;
              *(void *)(v113 + 72) = v116;
              uint64_t v110 = 1;
              *(unsigned char *)(v113 + 80) = v109 & 1;
            }
            uint64_t v119 = v118;
            uint64_t v120 = v114;
            uint64_t v211 = v116;
            unint64_t v121 = v115;
            sub_12430(v107, v112, v118, v120, v117, v116, v115);
            unint64_t v234 = v121;
            uint64_t v122 = v117;
            uint64_t v108 = v211;
            sub_12430(v107, v112, v119, v239, v122, v211, v121);
            swift_bridgeObjectRetain();
            uint64_t v123 = (double *)(v113 + 80);
            unint64_t v124 = _swiftEmptyArrayStorage;
            do
            {
              if ((*(unsigned char *)v123 & 1) == 0)
              {
                double v125 = *(v123 - 2);
                double v126 = exp2(-*(v123 - 1) / *(v123 - 3));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  unint64_t v124 = sub_41BAC(0, v124[2] + 1, 1, v124);
                }
                unint64_t v128 = v124[2];
                unint64_t v127 = v124[3];
                if (v128 >= v127 >> 1) {
                  unint64_t v124 = sub_41BAC((void *)(v127 > 1), v128 + 1, 1, v124);
                }
                v124[2] = v128 + 1;
                *(double *)&v124[v128 + 4] = v125 * v126;
              }
              v123 += 7;
              --v110;
            }
            while (v110);
            swift_bridgeObjectRelease();
            uint64_t v111 = v228;
            uint64_t v129 = v230;
            uint64_t v130 = v239;
            uint64_t v131 = v226;
            unint64_t v109 = v234;
            uint64_t v132 = v124[2];
            if (v132)
            {
LABEL_113:
              uint64_t v133 = (double *)(v124 + 4);
              double v134 = 0.0;
              do
              {
                double v135 = *v133++;
                double v134 = v134 + v135;
                --v132;
              }
              while (v132);
              swift_bridgeObjectRelease();
              goto LABEL_118;
            }
LABEL_117:
            swift_bridgeObjectRelease();
            double v134 = 0.0;
LABEL_118:
            swift_bridgeObjectRelease();
            sub_1255C(v107, v129, v111, v130, v131, v108, v109);
            sub_124B4(v243);
            sub_124B4(__dst);
            uint64_t v10 = v210;
            if (v103 >= v134) {
              goto LABEL_78;
            }
            if (!v210) {
              goto LABEL_216;
            }
            Swift::Int v75 = v217 - 1;
            memcpy(__src, v214, 0x229uLL);
            memcpy(v214, v213, 0x230uLL);
            memcpy(v213, __src, 0x229uLL);
            if (v217 - 1 == v209)
            {
LABEL_78:
              Swift::Int v15 = v207 + 1;
              if (v207 + 1 == v203)
              {
                Swift::Int v15 = v203;
                break;
              }
              goto LABEL_79;
            }
          }
        }
      }
    }
    if (v15 < v209) {
      goto LABEL_205;
    }
    Swift::Int v208 = v15;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      char v11 = v201;
    }
    else {
      char v11 = sub_7004C(0, *((void *)v201 + 2) + 1, 1, v201);
    }
    unint64_t v137 = *((void *)v11 + 2);
    unint64_t v136 = *((void *)v11 + 3);
    unint64_t v138 = v137 + 1;
    Swift::Int v139 = v209;
    if (v137 >= v136 >> 1)
    {
      long long v188 = sub_7004C((char *)(v136 > 1), v137 + 1, 1, v11);
      Swift::Int v139 = v209;
      char v11 = v188;
    }
    *((void *)v11 + 2) = v138;
    uint64_t v140 = v11 + 32;
    uint64_t v141 = &v11[16 * v137 + 32];
    *(void *)uint64_t v141 = v139;
    *((void *)v141 + 1) = v208;
    if (v137)
    {
      while (1)
      {
        unint64_t v142 = v138 - 1;
        if (v138 >= 4)
        {
          double v147 = &v140[16 * v138];
          uint64_t v148 = *((void *)v147 - 8);
          uint64_t v149 = *((void *)v147 - 7);
          BOOL v153 = __OFSUB__(v149, v148);
          uint64_t v150 = v149 - v148;
          if (v153) {
            goto LABEL_193;
          }
          uint64_t v152 = *((void *)v147 - 6);
          uint64_t v151 = *((void *)v147 - 5);
          BOOL v153 = __OFSUB__(v151, v152);
          uint64_t v145 = v151 - v152;
          char v146 = v153;
          if (v153) {
            goto LABEL_194;
          }
          unint64_t v154 = v138 - 2;
          long long v155 = &v140[16 * v138 - 32];
          uint64_t v157 = *(void *)v155;
          uint64_t v156 = *((void *)v155 + 1);
          BOOL v153 = __OFSUB__(v156, v157);
          uint64_t v158 = v156 - v157;
          if (v153) {
            goto LABEL_196;
          }
          BOOL v153 = __OFADD__(v145, v158);
          uint64_t v159 = v145 + v158;
          if (v153) {
            goto LABEL_199;
          }
          if (v159 >= v150)
          {
            char v177 = &v140[16 * v142];
            uint64_t v179 = *(void *)v177;
            uint64_t v178 = *((void *)v177 + 1);
            BOOL v153 = __OFSUB__(v178, v179);
            uint64_t v180 = v178 - v179;
            if (v153) {
              goto LABEL_203;
            }
            BOOL v170 = v145 < v180;
            goto LABEL_160;
          }
        }
        else
        {
          if (v138 != 3)
          {
            uint64_t v171 = *((void *)v11 + 4);
            uint64_t v172 = *((void *)v11 + 5);
            BOOL v153 = __OFSUB__(v172, v171);
            uint64_t v164 = v172 - v171;
            char v165 = v153;
            goto LABEL_154;
          }
          uint64_t v144 = *((void *)v11 + 4);
          uint64_t v143 = *((void *)v11 + 5);
          BOOL v153 = __OFSUB__(v143, v144);
          uint64_t v145 = v143 - v144;
          char v146 = v153;
        }
        if (v146) {
          goto LABEL_195;
        }
        unint64_t v154 = v138 - 2;
        uint64_t v160 = &v140[16 * v138 - 32];
        uint64_t v162 = *(void *)v160;
        uint64_t v161 = *((void *)v160 + 1);
        BOOL v163 = __OFSUB__(v161, v162);
        uint64_t v164 = v161 - v162;
        char v165 = v163;
        if (v163) {
          goto LABEL_198;
        }
        uint64_t v166 = &v140[16 * v142];
        uint64_t v168 = *(void *)v166;
        uint64_t v167 = *((void *)v166 + 1);
        BOOL v153 = __OFSUB__(v167, v168);
        uint64_t v169 = v167 - v168;
        if (v153) {
          goto LABEL_201;
        }
        if (__OFADD__(v164, v169)) {
          goto LABEL_202;
        }
        if (v164 + v169 >= v145)
        {
          BOOL v170 = v145 < v169;
LABEL_160:
          if (v170) {
            unint64_t v142 = v154;
          }
          goto LABEL_162;
        }
LABEL_154:
        if (v165) {
          goto LABEL_197;
        }
        double v173 = &v140[16 * v142];
        uint64_t v175 = *(void *)v173;
        uint64_t v174 = *((void *)v173 + 1);
        BOOL v153 = __OFSUB__(v174, v175);
        uint64_t v176 = v174 - v175;
        if (v153) {
          goto LABEL_200;
        }
        if (v176 < v164) {
          goto LABEL_171;
        }
LABEL_162:
        unint64_t v181 = v142 - 1;
        if (v142 - 1 >= v138)
        {
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
          goto LABEL_212;
        }
        if (!v10) {
          goto LABEL_217;
        }
        double v182 = v11;
        char v183 = &v140[16 * v181];
        uint64_t v184 = *(void *)v183;
        uint64_t v185 = &v140[16 * v142];
        uint64_t v186 = *((void *)v185 + 1);
        sub_198BD0((char *)(v10 + 560 * *(void *)v183), (char *)(v10 + 560 * *(void *)v185), v10 + 560 * v186, v205);
        if (v2) {
          goto LABEL_186;
        }
        if (v186 < v184) {
          goto LABEL_190;
        }
        if (v142 > *((void *)v182 + 2)) {
          goto LABEL_191;
        }
        *(void *)char v183 = v184;
        *(void *)&v140[16 * v181 + 8] = v186;
        unint64_t v187 = *((void *)v182 + 2);
        if (v142 >= v187) {
          goto LABEL_192;
        }
        unint64_t v138 = v187 - 1;
        memmove(&v140[16 * v142], v185 + 16, 16 * (v187 - 1 - v142));
        char v11 = v182;
        *((void *)v182 + 2) = v187 - 1;
        if (v187 <= 2) {
          goto LABEL_171;
        }
      }
    }
    unint64_t v138 = 1;
LABEL_171:
    Swift::Int v12 = v204;
    Swift::Int v9 = v208;
    if (v208 >= v204) {
      goto LABEL_175;
    }
  }
  while (1)
  {
    Swift::Int v206 = v15;
    memcpy(v240, (const void *)(v10 + 560 * v15), 0x229uLL);
    memcpy(__src, (const void *)(v10 + 560 * v13), 0x229uLL);
    unint64_t v16 = __src[17];
    if ((unint64_t)__src[17] >> 1 == 0xFFFFFFFF) {
      goto LABEL_218;
    }
    uint64_t v17 = __src[11];
    uint64_t v18 = __src[12];
    uint64_t v19 = __src[13];
    uint64_t v20 = __src[14];
    uint64_t v21 = __src[15];
    uint64_t v22 = __src[16];
    uint64_t v235 = __src[16];
    uint64_t v225 = __src[13];
    uint64_t v227 = __src[15];
    uint64_t v223 = __src[12];
    if ((unint64_t)__src[17] >> 62 == 3)
    {
      uint64_t v23 = *(void *)(__src[11] + 16);
      if (!v23)
      {
        uint64_t v37 = __src[13];
        uint64_t v32 = __src[14];
        uint64_t v38 = __src[16];
        sub_12430(__src[11], __src[12], __src[13], __src[14], __src[15], __src[16], __src[17]);
        sub_12430(v17, v18, v37, v32, v21, v38, v16);
        sub_12384(v240);
        sub_12384(__src);
        unint64_t v27 = _swiftEmptyArrayStorage;
        uint64_t v33 = _swiftEmptyArrayStorage[2];
        if (!v33) {
          goto LABEL_34;
        }
        goto LABEL_30;
      }
      uint64_t v24 = __src[11];
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v25 = swift_allocObject();
      uint64_t v22 = v235;
      uint64_t v21 = v227;
      uint64_t v24 = v25;
      *(_OWORD *)(v25 + 16) = xmmword_1FD2A0;
      *(void *)(v25 + 32) = v17;
      *(void *)(v25 + 40) = v18;
      *(void *)(v25 + 48) = v19;
      *(void *)(v25 + 56) = v20;
      *(void *)(v25 + 64) = v227;
      *(void *)(v25 + 72) = v235;
      uint64_t v23 = 1;
      *(unsigned char *)(v25 + 80) = v16 & 1;
    }
    sub_12430(v17, v18, v19, v20, v21, v22, v16);
    uint64_t v232 = v20;
    sub_12430(v17, v18, v19, v20, v21, v235, v16);
    sub_12384(v240);
    sub_12384(__src);
    swift_bridgeObjectRetain();
    char v26 = (double *)(v24 + 80);
    unint64_t v27 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v26 & 1) == 0)
      {
        double v28 = *(v26 - 2);
        double v29 = exp2(-*(v26 - 1) / *(v26 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          unint64_t v27 = sub_41BAC(0, v27[2] + 1, 1, v27);
        }
        unint64_t v31 = v27[2];
        unint64_t v30 = v27[3];
        if (v31 >= v30 >> 1) {
          unint64_t v27 = sub_41BAC((void *)(v30 > 1), v31 + 1, 1, v27);
        }
        v27[2] = v31 + 1;
        *(double *)&v27[v31 + 4] = v28 * v29;
      }
      v26 += 7;
      --v23;
    }
    while (v23);
    swift_bridgeObjectRelease();
    uint64_t v32 = v232;
    uint64_t v33 = v27[2];
    if (!v33)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      double v35 = 0.0;
      goto LABEL_35;
    }
LABEL_30:
    uint64_t v34 = (double *)(v27 + 4);
    double v35 = 0.0;
    do
    {
      double v36 = *v34++;
      double v35 = v35 + v36;
      --v33;
    }
    while (v33);
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v40 = v240[11];
    uint64_t v39 = v240[12];
    uint64_t v231 = v240[13];
    uint64_t v233 = v240[14];
    uint64_t v41 = v240[16];
    uint64_t v229 = v240[15];
    unint64_t v42 = v240[17];
    sub_1255C(v17, v223, v225, v32, v227, v235, v16);
    if (v42 >> 1 == 0xFFFFFFFF) {
      goto LABEL_219;
    }
    uint64_t v220 = v39;
    if (v42 >> 62 == 3)
    {
      uint64_t v43 = v39;
      uint64_t v44 = *(void *)(v40 + 16);
      uint64_t v45 = v231;
      if (!v44)
      {
        uint64_t v63 = v233;
        uint64_t v64 = v229;
        sub_12430(v40, v43, v231, v233, v229, v41, v42);
        sub_12430(v40, v43, v231, v233, v229, v41, v42);
        uint64_t v58 = _swiftEmptyArrayStorage;
        uint64_t v65 = _swiftEmptyArrayStorage[2];
        if (!v65) {
          goto LABEL_53;
        }
        goto LABEL_49;
      }
      uint64_t v46 = v40;
      uint64_t v47 = v233;
      uint64_t v48 = v41;
      uint64_t v49 = v40;
      unint64_t v50 = v42;
      uint64_t v51 = v229;
      uint64_t v52 = v231;
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v46 = swift_allocObject();
      *(_OWORD *)(v46 + 16) = xmmword_1FD2A0;
      *(void *)(v46 + 32) = v40;
      *(void *)(v46 + 40) = v39;
      uint64_t v52 = v231;
      uint64_t v47 = v233;
      *(void *)(v46 + 48) = v231;
      *(void *)(v46 + 56) = v233;
      uint64_t v48 = v41;
      uint64_t v49 = v40;
      unint64_t v50 = v42;
      uint64_t v51 = v229;
      *(void *)(v46 + 64) = v229;
      *(void *)(v46 + 72) = v41;
      uint64_t v44 = 1;
      *(unsigned char *)(v46 + 80) = v42 & 1;
      uint64_t v43 = v39;
    }
    uint64_t v53 = v49;
    uint64_t v54 = v47;
    unint64_t v216 = v50;
    uint64_t v218 = v48;
    sub_12430(v49, v43, v52, v47, v51, v48, v50);
    uint64_t v237 = v53;
    uint64_t v55 = v53;
    uint64_t v56 = v54;
    unint64_t v42 = v216;
    uint64_t v41 = v218;
    sub_12430(v55, v43, v52, v56, v51, v218, v216);
    swift_bridgeObjectRetain();
    uint64_t v57 = (double *)(v46 + 80);
    uint64_t v58 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v57 & 1) == 0)
      {
        double v59 = *(v57 - 2);
        double v60 = exp2(-*(v57 - 1) / *(v57 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v58 = sub_41BAC(0, v58[2] + 1, 1, v58);
        }
        unint64_t v62 = v58[2];
        unint64_t v61 = v58[3];
        if (v62 >= v61 >> 1) {
          uint64_t v58 = sub_41BAC((void *)(v61 > 1), v62 + 1, 1, v58);
        }
        v58[2] = v62 + 1;
        *(double *)&v58[v62 + 4] = v59 * v60;
      }
      v57 += 7;
      --v44;
    }
    while (v44);
    swift_bridgeObjectRelease();
    uint64_t v45 = v231;
    uint64_t v63 = v233;
    uint64_t v64 = v229;
    uint64_t v40 = v237;
    uint64_t v65 = v58[2];
    if (!v65)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      double v67 = 0.0;
      goto LABEL_54;
    }
LABEL_49:
    unint64_t v66 = (double *)(v58 + 4);
    double v67 = 0.0;
    do
    {
      double v68 = *v66++;
      double v67 = v67 + v68;
      --v65;
    }
    while (v65);
    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
    sub_1255C(v40, v220, v45, v63, v64, v41, v42);
    sub_124B4(__src);
    sub_124B4(v240);
    if (((v215 ^ (v35 >= v67)) & 1) == 0)
    {
      Swift::Int v12 = v204;
      uint64_t v10 = v210;
      Swift::Int v15 = v206;
      goto LABEL_59;
    }
    Swift::Int v12 = v204;
    uint64_t v10 = v210;
    if (v206 == v202) {
      break;
    }
    Swift::Int v13 = v206;
    Swift::Int v15 = v206 + 1;
  }
  Swift::Int v15 = v204;
  if ((v215 & 1) == 0) {
    goto LABEL_69;
  }
LABEL_60:
  if (v15 >= v209)
  {
    if (v209 < v15)
    {
      Swift::String v69 = (char *)(v196 + 560 * v15);
      Swift::Int v70 = v15;
      Swift::Int v71 = v209;
      uint64_t v72 = (char *)(v10 + 560 * v209);
      while (1)
      {
        if (v71 != --v70)
        {
          if (!v10) {
            goto LABEL_220;
          }
          Swift::Int v73 = v15;
          memcpy(__src, v72, 0x229uLL);
          memmove(v72, v69, 0x230uLL);
          memcpy(v69, __src, 0x229uLL);
          Swift::Int v12 = v204;
          Swift::Int v15 = v73;
        }
        ++v71;
        v69 -= 560;
        v72 += 560;
        if (v71 >= v70) {
          goto LABEL_69;
        }
      }
    }
    goto LABEL_69;
  }
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_19790C(long long **a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = (Swift::Int)a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_139;
    }
    if ((unint64_t)v3 >= 2)
    {
      uint64_t v81 = *v2;
      uint64_t v82 = -1;
      uint64_t v83 = 1;
      uint64_t v84 = *v2;
      do
      {
        uint64_t v85 = v82;
        uint64_t v86 = v84;
        do
        {
          uint64_t v87 = (long long *)((char *)v86 + 152);
          if (*((void *)v86 + 19) >= *(void *)v86) {
            break;
          }
          if (!v81) {
            goto LABEL_143;
          }
          long long v128 = *(long long *)((char *)v86 + 248);
          long long v131 = *(long long *)((char *)v86 + 264);
          long long v134 = *(long long *)((char *)v86 + 280);
          long long v116 = *(long long *)((char *)v86 + 184);
          long long v119 = *(long long *)((char *)v86 + 200);
          long long v122 = *(long long *)((char *)v86 + 216);
          long long v125 = *(long long *)((char *)v86 + 232);
          long long v110 = *v87;
          long long v113 = *(long long *)((char *)v86 + 168);
          long long v88 = v86[7];
          *(long long *)((char *)v86 + 248) = v86[6];
          *(long long *)((char *)v86 + 264) = v88;
          *(long long *)((char *)v86 + 280) = v86[8];
          long long v89 = v86[3];
          *(long long *)((char *)v86 + 184) = v86[2];
          *(long long *)((char *)v86 + 200) = v89;
          long long v90 = v86[5];
          *(long long *)((char *)v86 + 216) = v86[4];
          *(long long *)((char *)v86 + 232) = v90;
          long long v91 = *v86;
          long long v92 = v86[1];
          v86[6] = v128;
          v86[7] = v131;
          v86[8] = v134;
          v86[2] = v116;
          v86[3] = v119;
          v86[4] = v122;
          v86[5] = v125;
          *uint64_t v86 = v110;
          v86[1] = v113;
          char v137 = *((unsigned char *)v86 + 296);
          *((void *)v86 + 37) = *((void *)v86 + 18);
          *((unsigned char *)v86 + 144) = v137;
          uint64_t v86 = (long long *)((char *)v86 - 152);
          *uint64_t v87 = v91;
          v87[1] = v92;
        }
        while (!__CFADD__(v85++, 1));
        ++v83;
        uint64_t v84 = (long long *)((char *)v84 + 152);
        --v82;
      }
      while (v83 != v3);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_148;
  }
  Swift::Int v104 = result;
  if (v3 < 2)
  {
    uint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v106 = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v11 = _swiftEmptyArrayStorage[2];
      double v94 = (char *)_swiftEmptyArrayStorage;
LABEL_105:
      double v103 = v8;
      if (v11 >= 2)
      {
        double v95 = *v2;
        do
        {
          unint64_t v96 = v11 - 2;
          if (v11 < 2) {
            goto LABEL_134;
          }
          if (!v95) {
            goto LABEL_147;
          }
          unint64_t v97 = v94;
          uint64_t v98 = *(void *)&v94[16 * v96 + 32];
          uint64_t v99 = *(void *)&v94[16 * v11 + 24];
          sub_199518((char *)v95 + 152 * v98, (char *)v95 + 152 * *(void *)&v94[16 * v11 + 16], (unint64_t)v95 + 152 * v99, v106);
          if (v1) {
            break;
          }
          if (v99 < v98) {
            goto LABEL_135;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v97 = sub_70B24((uint64_t)v97);
          }
          if (v96 >= *((void *)v97 + 2)) {
            goto LABEL_136;
          }
          uint64_t v100 = &v97[16 * v96 + 32];
          *(void *)uint64_t v100 = v98;
          *((void *)v100 + 1) = v99;
          unint64_t v101 = *((void *)v97 + 2);
          if (v11 > v101) {
            goto LABEL_137;
          }
          memmove(&v97[16 * v11 + 16], &v97[16 * v11 + 32], 16 * (v101 - v11));
          double v94 = v97;
          *((void *)v97 + 2) = v101 - 1;
          unint64_t v11 = v101 - 1;
        }
        while (v101 > 2);
      }
LABEL_95:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    double v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    double v103 = (void *)v7;
    uint64_t v106 = (char *)(v7 + 32);
  }
  Swift::Int v9 = 0;
  double v102 = v2;
  uint64_t v10 = *v2;
  uint64_t v107 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v105 = v3;
  while (1)
  {
    Swift::Int v12 = v9++;
    if (v9 < v3)
    {
      unint64_t v13 = *((void *)v10 + 19 * v9);
      unint64_t v14 = *((void *)v10 + 19 * v12);
      Swift::Int v9 = v12 + 2;
      if (v12 + 2 < v3)
      {
        Swift::Int v15 = (unint64_t *)v10 + 19 * v12 + 19;
        unint64_t v16 = v15;
        while (1)
        {
          unint64_t v17 = v16[19];
          v16 += 19;
          if (v13 < v14 == v17 >= *v15) {
            break;
          }
          ++v9;
          Swift::Int v15 = v16;
          if (v3 == v9)
          {
            Swift::Int v9 = v3;
            break;
          }
        }
      }
      if (v13 < v14)
      {
        if (v9 < v12) {
          goto LABEL_140;
        }
        if (v12 < v9)
        {
          uint64_t v18 = (long long *)((char *)v10 + 152 * v9 - 152);
          Swift::Int v19 = v9;
          Swift::Int v20 = v12;
          uint64_t v21 = (long long *)((char *)v10 + 152 * v12);
          do
          {
            if (v20 != --v19)
            {
              if (!v10) {
                goto LABEL_146;
              }
              long long v126 = v21[6];
              long long v129 = v21[7];
              long long v132 = v21[8];
              char v135 = *((unsigned char *)v21 + 144);
              long long v114 = v21[2];
              long long v117 = v21[3];
              long long v120 = v21[4];
              long long v123 = v21[5];
              long long v108 = *v21;
              long long v111 = v21[1];
              memmove(v21, v18, 0x98uLL);
              v18[6] = v126;
              v18[7] = v129;
              v18[8] = v132;
              *((unsigned char *)v18 + 144) = v135;
              v18[2] = v114;
              v18[3] = v117;
              v18[4] = v120;
              v18[5] = v123;
              *uint64_t v18 = v108;
              v18[1] = v111;
            }
            ++v20;
            uint64_t v18 = (_OWORD *)((char *)v18 - 152);
            uint64_t v21 = (_OWORD *)((char *)v21 + 152);
          }
          while (v20 < v19);
          Swift::Int v3 = v105;
        }
      }
    }
    if (v9 >= v3) {
      goto LABEL_39;
    }
    if (__OFSUB__(v9, v12)) {
      goto LABEL_138;
    }
    if (v9 - v12 >= v104) {
      goto LABEL_39;
    }
    Swift::Int v22 = v12 + v104;
    if (__OFADD__(v12, v104)) {
      goto LABEL_141;
    }
    if (v22 >= v3) {
      Swift::Int v22 = v3;
    }
    if (v22 < v12) {
      break;
    }
    if (v9 != v22)
    {
      Swift::Int v73 = (long long *)((char *)v10 + 152 * v9);
      uint64_t v23 = v107;
      do
      {
        Swift::Int v74 = v12;
        Swift::Int v75 = v73;
        do
        {
          Swift::Int v76 = (long long *)((char *)v75 - 152);
          if (*(void *)v75 >= *((void *)v75 - 19)) {
            break;
          }
          if (!v10) {
            goto LABEL_144;
          }
          long long v127 = v75[6];
          long long v130 = v75[7];
          long long v133 = v75[8];
          char v136 = *((unsigned char *)v75 + 144);
          long long v115 = v75[2];
          long long v118 = v75[3];
          long long v121 = v75[4];
          long long v124 = v75[5];
          long long v109 = *v75;
          long long v112 = v75[1];
          long long v77 = *(long long *)((char *)v75 - 40);
          v75[6] = *(long long *)((char *)v75 - 56);
          v75[7] = v77;
          v75[8] = *(long long *)((char *)v75 - 24);
          *((void *)v75 + 18) = *((void *)v75 - 1);
          long long v78 = *(long long *)((char *)v75 - 104);
          v75[2] = *(long long *)((char *)v75 - 120);
          v75[3] = v78;
          long long v79 = *(long long *)((char *)v75 - 72);
          v75[4] = *(long long *)((char *)v75 - 88);
          v75[5] = v79;
          long long v80 = *(long long *)((char *)v75 - 136);
          *Swift::Int v75 = *v76;
          v75[1] = v80;
          *(long long *)((char *)v75 - 56) = v127;
          *(long long *)((char *)v75 - 40) = v130;
          *(long long *)((char *)v75 - 24) = v133;
          *((unsigned char *)v75 - 8) = v136;
          *(long long *)((char *)v75 - 120) = v115;
          *(long long *)((char *)v75 - 104) = v118;
          *(long long *)((char *)v75 - 88) = v121;
          *(long long *)((char *)v75 - 72) = v124;
          Swift::Int v75 = (long long *)((char *)v75 - 152);
          ++v74;
          *Swift::Int v76 = v109;
          v76[1] = v112;
        }
        while (v9 != v74);
        ++v9;
        Swift::Int v73 = (long long *)((char *)v73 + 152);
      }
      while (v9 != v22);
      Swift::Int v9 = v22;
      if (v22 < v12) {
        goto LABEL_133;
      }
      goto LABEL_40;
    }
LABEL_39:
    uint64_t v23 = v107;
    if (v9 < v12) {
      goto LABEL_133;
    }
LABEL_40:
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v23 = sub_7004C(0, *((void *)v23 + 2) + 1, 1, v23);
    }
    unint64_t v25 = *((void *)v23 + 2);
    unint64_t v24 = *((void *)v23 + 3);
    unint64_t v11 = v25 + 1;
    if (v25 >= v24 >> 1) {
      uint64_t v23 = sub_7004C((char *)(v24 > 1), v25 + 1, 1, v23);
    }
    *((void *)v23 + 2) = v11;
    char v26 = v23 + 32;
    unint64_t v27 = &v23[16 * v25 + 32];
    *(void *)unint64_t v27 = v12;
    *((void *)v27 + 1) = v9;
    uint64_t v107 = v23;
    if (v25)
    {
      while (1)
      {
        unint64_t v28 = v11 - 1;
        if (v11 >= 4)
        {
          uint64_t v33 = &v26[16 * v11];
          uint64_t v34 = *((void *)v33 - 8);
          uint64_t v35 = *((void *)v33 - 7);
          BOOL v39 = __OFSUB__(v35, v34);
          uint64_t v36 = v35 - v34;
          if (v39) {
            goto LABEL_122;
          }
          uint64_t v38 = *((void *)v33 - 6);
          uint64_t v37 = *((void *)v33 - 5);
          BOOL v39 = __OFSUB__(v37, v38);
          uint64_t v31 = v37 - v38;
          char v32 = v39;
          if (v39) {
            goto LABEL_123;
          }
          unint64_t v40 = v11 - 2;
          uint64_t v41 = &v26[16 * v11 - 32];
          uint64_t v43 = *(void *)v41;
          uint64_t v42 = *((void *)v41 + 1);
          BOOL v39 = __OFSUB__(v42, v43);
          uint64_t v44 = v42 - v43;
          if (v39) {
            goto LABEL_125;
          }
          BOOL v39 = __OFADD__(v31, v44);
          uint64_t v45 = v31 + v44;
          if (v39) {
            goto LABEL_128;
          }
          if (v45 >= v36)
          {
            uint64_t v63 = &v26[16 * v28];
            uint64_t v65 = *(void *)v63;
            uint64_t v64 = *((void *)v63 + 1);
            BOOL v39 = __OFSUB__(v64, v65);
            uint64_t v66 = v64 - v65;
            if (v39) {
              goto LABEL_132;
            }
            BOOL v56 = v31 < v66;
            goto LABEL_76;
          }
        }
        else
        {
          if (v11 != 3)
          {
            uint64_t v57 = *((void *)v23 + 4);
            uint64_t v58 = *((void *)v23 + 5);
            BOOL v39 = __OFSUB__(v58, v57);
            uint64_t v50 = v58 - v57;
            char v51 = v39;
            goto LABEL_70;
          }
          uint64_t v30 = *((void *)v23 + 4);
          uint64_t v29 = *((void *)v23 + 5);
          BOOL v39 = __OFSUB__(v29, v30);
          uint64_t v31 = v29 - v30;
          char v32 = v39;
        }
        if (v32) {
          goto LABEL_124;
        }
        unint64_t v40 = v11 - 2;
        uint64_t v46 = &v26[16 * v11 - 32];
        uint64_t v48 = *(void *)v46;
        uint64_t v47 = *((void *)v46 + 1);
        BOOL v49 = __OFSUB__(v47, v48);
        uint64_t v50 = v47 - v48;
        char v51 = v49;
        if (v49) {
          goto LABEL_127;
        }
        uint64_t v52 = &v26[16 * v28];
        uint64_t v54 = *(void *)v52;
        uint64_t v53 = *((void *)v52 + 1);
        BOOL v39 = __OFSUB__(v53, v54);
        uint64_t v55 = v53 - v54;
        if (v39) {
          goto LABEL_130;
        }
        if (__OFADD__(v50, v55)) {
          goto LABEL_131;
        }
        if (v50 + v55 >= v31)
        {
          BOOL v56 = v31 < v55;
LABEL_76:
          if (v56) {
            unint64_t v28 = v40;
          }
          goto LABEL_78;
        }
LABEL_70:
        if (v51) {
          goto LABEL_126;
        }
        double v59 = &v26[16 * v28];
        uint64_t v61 = *(void *)v59;
        uint64_t v60 = *((void *)v59 + 1);
        BOOL v39 = __OFSUB__(v60, v61);
        uint64_t v62 = v60 - v61;
        if (v39) {
          goto LABEL_129;
        }
        if (v62 < v50) {
          goto LABEL_15;
        }
LABEL_78:
        unint64_t v67 = v28 - 1;
        if (v28 - 1 >= v11)
        {
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
          goto LABEL_142;
        }
        if (!v10) {
          goto LABEL_145;
        }
        double v68 = &v26[16 * v67];
        uint64_t v69 = *(void *)v68;
        Swift::Int v70 = &v26[16 * v28];
        uint64_t v71 = *((void *)v70 + 1);
        sub_199518((char *)v10 + 152 * *(void *)v68, (char *)v10 + 152 * *(void *)v70, (unint64_t)v10 + 152 * v71, v106);
        if (v1) {
          goto LABEL_95;
        }
        if (v71 < v69) {
          goto LABEL_119;
        }
        if (v28 > *((void *)v107 + 2)) {
          goto LABEL_120;
        }
        *(void *)double v68 = v69;
        *(void *)&v26[16 * v67 + 8] = v71;
        unint64_t v72 = *((void *)v107 + 2);
        if (v28 >= v72) {
          goto LABEL_121;
        }
        uint64_t v23 = v107;
        unint64_t v11 = v72 - 1;
        memmove(&v26[16 * v28], v70 + 16, 16 * (v72 - 1 - v28));
        *((void *)v107 + 2) = v72 - 1;
        if (v72 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v11 = 1;
LABEL_15:
    Swift::Int v3 = v105;
    if (v9 >= v105)
    {
      uint64_t v8 = v103;
      double v94 = v107;
      uint64_t v2 = v102;
      goto LABEL_105;
    }
  }
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  __break(1u);
LABEL_147:
  __break(1u);
LABEL_148:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

Swift::Int sub_198160(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_151;
    }
    if (v3) {
      return sub_198888(0, v3, 1, a1);
    }
    return result;
  }
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_159;
  }
  Swift::Int v6 = result;
  unint64_t v101 = a1;
  if (v3 < 2)
  {
    Swift::Int v9 = _swiftEmptyArrayStorage;
    __dst = (char *)&_swiftEmptyArrayStorage[4];
    if (v3 != 1)
    {
      unint64_t v13 = _swiftEmptyArrayStorage[2];
      Swift::Int v12 = (char *)_swiftEmptyArrayStorage;
LABEL_117:
      uint64_t v93 = v12;
      double v103 = v9;
      if (v13 >= 2)
      {
        uint64_t v94 = *v101;
        do
        {
          unint64_t v95 = v13 - 2;
          if (v13 < 2) {
            goto LABEL_146;
          }
          if (!v94) {
            goto LABEL_158;
          }
          unint64_t v96 = v93;
          uint64_t v97 = *(void *)&v93[16 * v95 + 32];
          uint64_t v98 = *(void *)&v93[16 * v13 + 24];
          sub_1997CC((char *)(v94 + 24 * v97), (char *)(v94 + 24 * *(void *)&v93[16 * v13 + 16]), v94 + 24 * v98, __dst);
          if (v1) {
            break;
          }
          if (v98 < v97) {
            goto LABEL_147;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            unint64_t v96 = sub_70B24((uint64_t)v96);
          }
          if (v95 >= *((void *)v96 + 2)) {
            goto LABEL_148;
          }
          uint64_t v99 = &v96[16 * v95 + 32];
          *(void *)uint64_t v99 = v97;
          *((void *)v99 + 1) = v98;
          unint64_t v100 = *((void *)v96 + 2);
          if (v13 > v100) {
            goto LABEL_149;
          }
          memmove(&v96[16 * v13 + 16], &v96[16 * v13 + 32], 16 * (v100 - v13));
          uint64_t v93 = v96;
          *((void *)v96 + 2) = v100 - 1;
          unint64_t v13 = v100 - 1;
        }
        while (v100 > 2);
      }
LABEL_114:
      swift_bridgeObjectRelease();
      v103[2] = 0;
      return swift_bridgeObjectRelease();
    }
    double v103 = _swiftEmptyArrayStorage;
  }
  else
  {
    uint64_t v7 = v5 >> 1;
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    double v103 = (void *)v8;
    __dst = (char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  uint64_t v102 = *a1 + 16;
  Swift::Int v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v104 = v6;
  Swift::Int v105 = v3;
  uint64_t v106 = v11;
  while (1)
  {
    Swift::Int v14 = v10++;
    if (v10 >= v3) {
      goto LABEL_47;
    }
    Swift::Int v15 = (unint64_t *)(v11 + 24 * v10);
    unint64_t v16 = *v15;
    unint64_t v17 = v15[2];
    uint64_t v18 = (unint64_t *)(v11 + 24 * v14);
    unint64_t v19 = v18[2];
    if (v17 >= v19)
    {
      if (v17 == v19)
      {
        BOOL v20 = v16 < *v18;
        Swift::Int v10 = v14 + 2;
        if (v14 + 2 >= v3)
        {
LABEL_38:
          if (!v20) {
            goto LABEL_47;
          }
LABEL_39:
          if (v10 < v14) {
            goto LABEL_152;
          }
          goto LABEL_40;
        }
      }
      else
      {
        Swift::Int v10 = v14 + 2;
        if (v14 + 2 >= v3) {
          goto LABEL_47;
        }
        BOOL v20 = 0;
      }
LABEL_25:
      if (v3 <= v10 + 1) {
        Swift::Int v21 = v10 + 1;
      }
      else {
        Swift::Int v21 = v3;
      }
      Swift::Int v22 = (unint64_t *)(v102 + 24 * v10);
      do
      {
        unint64_t v23 = v17;
        unint64_t v24 = *(v22 - 2);
        unint64_t v17 = *v22;
        if (*v22 < v23)
        {
          if (!v20) {
            goto LABEL_47;
          }
        }
        else if (*v22 == v23)
        {
          if (((v20 ^ (v24 >= v16)) & 1) == 0) {
            goto LABEL_38;
          }
        }
        else if (v20)
        {
          goto LABEL_39;
        }
        v22 += 3;
        ++v10;
        unint64_t v16 = v24;
      }
      while (v10 < v3);
      Swift::Int v10 = v21;
      goto LABEL_38;
    }
    Swift::Int v10 = v14 + 2;
    if (v14 + 2 < v3)
    {
      BOOL v20 = 1;
      goto LABEL_25;
    }
LABEL_40:
    if (v14 < v10)
    {
      uint64_t v25 = 24 * v10;
      uint64_t v26 = 24 * v14;
      Swift::Int v27 = v10;
      Swift::Int v28 = v14;
      do
      {
        if (v28 != --v27)
        {
          if (!v11) {
            goto LABEL_157;
          }
          uint64_t v29 = v11 + v26;
          uint64_t v30 = v11 + v25;
          long long v31 = *(_OWORD *)(v11 + v26);
          uint64_t v32 = *(void *)(v11 + v26 + 16);
          uint64_t v33 = *(void *)(v11 + v25 - 8);
          *(_OWORD *)uint64_t v29 = *(_OWORD *)(v11 + v25 - 24);
          *(void *)(v29 + 16) = v33;
          *(_OWORD *)(v30 - 24) = v31;
          *(void *)(v30 - 8) = v32;
        }
        ++v28;
        v25 -= 24;
        v26 += 24;
      }
      while (v28 < v27);
    }
LABEL_47:
    if (v10 < v3)
    {
      if (__OFSUB__(v10, v14)) {
        goto LABEL_150;
      }
      if (v10 - v14 < v6) {
        break;
      }
    }
LABEL_67:
    if (v10 < v14) {
      goto LABEL_145;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      Swift::Int v12 = sub_7004C(0, *((void *)v12 + 2) + 1, 1, v12);
    }
    unint64_t v44 = *((void *)v12 + 2);
    unint64_t v43 = *((void *)v12 + 3);
    unint64_t v13 = v44 + 1;
    uint64_t v11 = v106;
    if (v44 >= v43 >> 1)
    {
      long long v92 = sub_7004C((char *)(v43 > 1), v44 + 1, 1, v12);
      uint64_t v11 = v106;
      Swift::Int v12 = v92;
    }
    *((void *)v12 + 2) = v13;
    uint64_t v45 = v12 + 32;
    uint64_t v46 = &v12[16 * v44 + 32];
    *(void *)uint64_t v46 = v14;
    *((void *)v46 + 1) = v10;
    if (v44)
    {
      while (1)
      {
        unint64_t v47 = v13 - 1;
        if (v13 >= 4)
        {
          uint64_t v52 = &v45[16 * v13];
          uint64_t v53 = *((void *)v52 - 8);
          uint64_t v54 = *((void *)v52 - 7);
          BOOL v58 = __OFSUB__(v54, v53);
          uint64_t v55 = v54 - v53;
          if (v58) {
            goto LABEL_134;
          }
          uint64_t v57 = *((void *)v52 - 6);
          uint64_t v56 = *((void *)v52 - 5);
          BOOL v58 = __OFSUB__(v56, v57);
          uint64_t v50 = v56 - v57;
          char v51 = v58;
          if (v58) {
            goto LABEL_135;
          }
          unint64_t v59 = v13 - 2;
          uint64_t v60 = &v45[16 * v13 - 32];
          uint64_t v62 = *(void *)v60;
          uint64_t v61 = *((void *)v60 + 1);
          BOOL v58 = __OFSUB__(v61, v62);
          uint64_t v63 = v61 - v62;
          if (v58) {
            goto LABEL_137;
          }
          BOOL v58 = __OFADD__(v50, v63);
          uint64_t v64 = v50 + v63;
          if (v58) {
            goto LABEL_140;
          }
          if (v64 >= v55)
          {
            uint64_t v82 = &v45[16 * v47];
            uint64_t v84 = *(void *)v82;
            uint64_t v83 = *((void *)v82 + 1);
            BOOL v58 = __OFSUB__(v83, v84);
            uint64_t v85 = v83 - v84;
            if (v58) {
              goto LABEL_144;
            }
            BOOL v75 = v50 < v85;
            goto LABEL_104;
          }
        }
        else
        {
          if (v13 != 3)
          {
            uint64_t v76 = *((void *)v12 + 4);
            uint64_t v77 = *((void *)v12 + 5);
            BOOL v58 = __OFSUB__(v77, v76);
            uint64_t v69 = v77 - v76;
            char v70 = v58;
            goto LABEL_98;
          }
          uint64_t v49 = *((void *)v12 + 4);
          uint64_t v48 = *((void *)v12 + 5);
          BOOL v58 = __OFSUB__(v48, v49);
          uint64_t v50 = v48 - v49;
          char v51 = v58;
        }
        if (v51) {
          goto LABEL_136;
        }
        unint64_t v59 = v13 - 2;
        uint64_t v65 = &v45[16 * v13 - 32];
        uint64_t v67 = *(void *)v65;
        uint64_t v66 = *((void *)v65 + 1);
        BOOL v68 = __OFSUB__(v66, v67);
        uint64_t v69 = v66 - v67;
        char v70 = v68;
        if (v68) {
          goto LABEL_139;
        }
        uint64_t v71 = &v45[16 * v47];
        uint64_t v73 = *(void *)v71;
        uint64_t v72 = *((void *)v71 + 1);
        BOOL v58 = __OFSUB__(v72, v73);
        uint64_t v74 = v72 - v73;
        if (v58) {
          goto LABEL_142;
        }
        if (__OFADD__(v69, v74)) {
          goto LABEL_143;
        }
        if (v69 + v74 >= v50)
        {
          BOOL v75 = v50 < v74;
LABEL_104:
          if (v75) {
            unint64_t v47 = v59;
          }
          goto LABEL_106;
        }
LABEL_98:
        if (v70) {
          goto LABEL_138;
        }
        long long v78 = &v45[16 * v47];
        uint64_t v80 = *(void *)v78;
        uint64_t v79 = *((void *)v78 + 1);
        BOOL v58 = __OFSUB__(v79, v80);
        uint64_t v81 = v79 - v80;
        if (v58) {
          goto LABEL_141;
        }
        if (v81 < v69) {
          goto LABEL_15;
        }
LABEL_106:
        unint64_t v86 = v47 - 1;
        if (v47 - 1 >= v13)
        {
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
LABEL_141:
          __break(1u);
LABEL_142:
          __break(1u);
LABEL_143:
          __break(1u);
LABEL_144:
          __break(1u);
LABEL_145:
          __break(1u);
LABEL_146:
          __break(1u);
LABEL_147:
          __break(1u);
LABEL_148:
          __break(1u);
LABEL_149:
          __break(1u);
LABEL_150:
          __break(1u);
LABEL_151:
          __break(1u);
LABEL_152:
          __break(1u);
LABEL_153:
          __break(1u);
          goto LABEL_154;
        }
        if (!v11) {
          goto LABEL_156;
        }
        uint64_t v87 = &v45[16 * v86];
        uint64_t v88 = *(void *)v87;
        long long v89 = &v45[16 * v47];
        uint64_t v90 = *((void *)v89 + 1);
        sub_1997CC((char *)(v11 + 24 * *(void *)v87), (char *)(v11 + 24 * *(void *)v89), v11 + 24 * v90, __dst);
        if (v1) {
          goto LABEL_114;
        }
        if (v90 < v88) {
          goto LABEL_131;
        }
        if (v47 > *((void *)v12 + 2)) {
          goto LABEL_132;
        }
        *(void *)uint64_t v87 = v88;
        *(void *)&v45[16 * v86 + 8] = v90;
        unint64_t v91 = *((void *)v12 + 2);
        if (v47 >= v91) {
          goto LABEL_133;
        }
        unint64_t v13 = v91 - 1;
        memmove(&v45[16 * v47], v89 + 16, 16 * (v91 - 1 - v47));
        *((void *)v12 + 2) = v91 - 1;
        uint64_t v11 = v106;
        if (v91 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v13 = 1;
LABEL_15:
    Swift::Int v6 = v104;
    Swift::Int v3 = v105;
    if (v10 >= v105)
    {
      Swift::Int v9 = v103;
      goto LABEL_117;
    }
  }
  Swift::Int v34 = v14 + v6;
  if (__OFADD__(v14, v6)) {
    goto LABEL_153;
  }
  if (v34 >= v3) {
    Swift::Int v34 = v3;
  }
  if (v34 >= v14)
  {
    if (v10 != v34)
    {
      uint64_t v35 = (uint64_t *)(v11 + 24 * v10);
      do
      {
        unint64_t v36 = *(void *)(v11 + 24 * v10 + 16);
        Swift::Int v37 = v14;
        uint64_t v38 = v35;
        do
        {
          unint64_t v39 = *(v38 - 1);
          if (v36 >= v39 && (v36 != v39 || *v38 >= (unint64_t)*(v38 - 3))) {
            break;
          }
          if (!v11) {
            goto LABEL_155;
          }
          uint64_t v41 = *v38;
          uint64_t v42 = v38[1];
          *(_OWORD *)uint64_t v38 = *(_OWORD *)(v38 - 3);
          v38[2] = *(v38 - 1);
          *(v38 - 2) = v42;
          *(v38 - 1) = v36;
          *(v38 - 3) = v41;
          v38 -= 3;
          ++v37;
        }
        while (v10 != v37);
        ++v10;
        v35 += 3;
      }
      while (v10 != v34);
      Swift::Int v10 = v34;
    }
    goto LABEL_67;
  }
LABEL_154:
  __break(1u);
LABEL_155:
  __break(1u);
LABEL_156:
  __break(1u);
LABEL_157:
  __break(1u);
LABEL_158:
  __break(1u);
LABEL_159:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_198888(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v5 = *a4 + 24 * a3;
LABEL_5:
    unint64_t v6 = *(void *)(v4 + 24 * a3 + 16);
    uint64_t v7 = result;
    uint64_t v8 = (uint64_t *)v5;
    while (1)
    {
      unint64_t v9 = *(v8 - 1);
      if (v6 >= v9 && (v6 != v9 || *v8 >= (unint64_t)*(v8 - 3)))
      {
LABEL_4:
        ++a3;
        v5 += 24;
        if (a3 == a2) {
          return result;
        }
        goto LABEL_5;
      }
      if (!v4) {
        break;
      }
      uint64_t v11 = *v8;
      uint64_t v12 = v8[1];
      *(_OWORD *)uint64_t v8 = *(_OWORD *)(v8 - 3);
      v8[2] = *(v8 - 1);
      *(v8 - 2) = v12;
      *(v8 - 1) = v6;
      *(v8 - 3) = v11;
      v8 -= 3;
      if (a3 == ++v7) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_19891C(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = __src;
  uint64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 560;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 560;
  unint64_t v23 = __dst;
  Swift::Int v22 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -559)
    {
      uint64_t v15 = 560 * v11;
      if (a4 != __src || &__src[v15] <= a4) {
        memmove(a4, __src, 560 * v11);
      }
      unint64_t v16 = &v4[v15];
      Swift::Int v21 = &v4[v15];
      unint64_t v23 = v6;
      if (v7 < v6 && v10 >= 560)
      {
        unint64_t v17 = (char *)(a3 - 560);
        while (1)
        {
          uint64_t v18 = v17 + 560;
          unint64_t v19 = v6 - 560;
          if (*((void *)v16 - 70) >= *((void *)v6 - 70))
          {
            Swift::Int v21 = v16 - 560;
            if (v18 < v16 || v17 >= v16 || v18 != v16) {
              memmove(v17, v16 - 560, 0x230uLL);
            }
            unint64_t v19 = v6;
            v16 -= 560;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v18 != v6 || v17 >= v6) {
              memmove(v17, v6 - 560, 0x230uLL);
            }
            unint64_t v23 = v6 - 560;
            if (v19 <= v7) {
              goto LABEL_38;
            }
          }
          v17 -= 560;
          unint64_t v6 = v19;
          if (v16 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -559)
  {
    size_t v12 = 560 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    unint64_t v13 = &v4[v12];
    Swift::Int v21 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 560)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            memmove(v7, v4, 0x230uLL);
          }
          v4 += 560;
          Swift::Int v22 = v4;
          Swift::Int v14 = v6;
        }
        else
        {
          Swift::Int v14 = v6 + 560;
          if (v7 < v6 || v7 >= v14 || v7 != v6) {
            memmove(v7, v6, 0x230uLL);
          }
        }
        v7 += 560;
        if (v4 >= v13) {
          break;
        }
        unint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      unint64_t v23 = v7;
    }
LABEL_38:
    sub_7034C((void **)&v23, (const void **)&v22, &v21);
    return 1;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_198BD0(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  unint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 560;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 560;
  uint64_t v97 = __src;
  unint64_t v96 = __dst;
  if (v8 >= v10)
  {
    if (v9 < -559) {
      goto LABEL_74;
    }
    uint64_t v38 = 560 * v10;
    if (__dst != a2 || &a2[v38] <= __dst) {
      memmove(__dst, a2, 560 * v10);
    }
    unint64_t v39 = &v4[v38];
    unint64_t v95 = &v4[v38];
    uint64_t v97 = v5;
    if (v6 >= v5 || v9 < 560) {
      goto LABEL_69;
    }
    uint64_t v88 = v4;
    unint64_t v40 = (char *)(a3 - 560);
    uint64_t v90 = v6;
    while (1)
    {
      memcpy(__dsta, v39 - 560, 0x229uLL);
      uint64_t v73 = v5 - 560;
      memcpy(v94, v5 - 560, 0x229uLL);
      unint64_t v41 = v94[17];
      if (v94[17] >> 1 == 0xFFFFFFFFLL) {
        goto LABEL_72;
      }
      BOOL v75 = v40 + 560;
      uint64_t v77 = v40;
      uint64_t v42 = v94[11];
      uint64_t v43 = v94[12];
      uint64_t v44 = v94[13];
      uint64_t v45 = (void *)v94[14];
      uint64_t v46 = v94[15];
      uint64_t v47 = v94[16];
      uint64_t v72 = v39 - 560;
      long long v92 = v5;
      unint64_t v78 = (unint64_t)v39;
      if (v94[17] >> 62 == 3)
      {
        uint64_t v51 = v94[11];
      }
      else
      {
        uint64_t v48 = v94[15];
        unint64_t v49 = v94[17];
        sub_12124(&qword_26D5D8);
        uint64_t v50 = swift_allocObject();
        unint64_t v41 = v49;
        uint64_t v46 = v48;
        uint64_t v51 = v50;
        *(_OWORD *)(v50 + 16) = xmmword_1FD2A0;
        *(void *)(v50 + 32) = v42;
        *(void *)(v50 + 40) = v43;
        *(void *)(v50 + 48) = v44;
        *(void *)(v50 + 56) = v45;
        *(void *)(v50 + 64) = v46;
        *(void *)(v50 + 72) = v47;
        *(unsigned char *)(v50 + 80) = v49 & 1;
      }
      uint64_t v52 = v43;
      uint64_t v53 = v43;
      uint64_t v54 = (uint64_t)v45;
      __srcb = v45;
      uint64_t v55 = v46;
      unint64_t v56 = v41;
      sub_12430(v42, v53, v44, v54, v46, v47, v41);
      sub_12430(v42, v52, v44, (uint64_t)__srcb, v55, v47, v56);
      sub_12384(__dsta);
      sub_12384(v94);
      double v84 = COERCE_DOUBLE(Array<A>.affinity.getter(v51));
      char v81 = v57;
      swift_bridgeObjectRelease();
      sub_1255C(v42, v52, v44, (uint64_t)__srcb, v55, v47, v56);
      if (v81) {
        double v58 = 0.0;
      }
      else {
        double v58 = v84;
      }
      unint64_t v59 = __dsta[17];
      if (__dsta[17] >> 1 == 0xFFFFFFFFLL)
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      uint64_t v61 = __dsta[11];
      uint64_t v60 = __dsta[12];
      uint64_t v62 = __dsta[13];
      uint64_t v63 = __dsta[14];
      uint64_t v64 = __dsta[15];
      uint64_t v65 = __dsta[16];
      if (__dsta[17] >> 62 == 3)
      {
        uint64_t v66 = __dsta[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_1FD2A0;
        *(void *)(v66 + 32) = v61;
        *(void *)(v66 + 40) = v60;
        *(void *)(v66 + 48) = v62;
        *(void *)(v66 + 56) = v63;
        *(void *)(v66 + 64) = v64;
        *(void *)(v66 + 72) = v65;
        *(unsigned char *)(v66 + 80) = v59 & 1;
      }
      sub_1244C();
      sub_1244C();
      double v85 = COERCE_DOUBLE(Array<A>.affinity.getter(v66));
      char v68 = v67;
      swift_bridgeObjectRelease();
      sub_1255C(v61, v60, v62, v63, v64, v65, v59);
      sub_124B4(v94);
      sub_124B4(__dsta);
      if (v68) {
        BOOL v69 = v58 < 0.0;
      }
      else {
        BOOL v69 = v58 < v85;
      }
      unint64_t v39 = (char *)v78;
      if (v69)
      {
        if (v75 != v92)
        {
          char v70 = v73;
          uint64_t v5 = v73;
LABEL_63:
          memmove(v77, v70, 0x230uLL);
          goto LABEL_64;
        }
        char v70 = v73;
        uint64_t v5 = v73;
        if (v77 >= v92) {
          goto LABEL_63;
        }
      }
      else
      {
        uint64_t v5 = v92;
        if (v75 != (char *)v78)
        {
          unint64_t v39 = v72;
          char v70 = v72;
          goto LABEL_63;
        }
        char v70 = v72;
        unint64_t v39 = v72;
        if ((unint64_t)v77 >= v78) {
          goto LABEL_63;
        }
      }
LABEL_64:
      if (v39 <= v88 || v5 <= v90)
      {
        unint64_t v95 = v39;
        uint64_t v97 = v5;
        goto LABEL_69;
      }
      unint64_t v40 = v77 - 560;
    }
  }
  if (v7 < -559)
  {
LABEL_74:
    sub_1FC2B0();
    __break(1u);
    JUMPOUT(0x1994D8);
  }
  size_t v11 = 560 * v8;
  if (__dst != __src || &__src[v11] <= __dst) {
    memmove(__dst, __src, v11);
  }
  uint64_t v74 = &v4[v11];
  unint64_t v95 = &v4[v11];
  if ((unint64_t)v5 < a3 && v7 >= 560)
  {
    size_t v12 = v4;
    while (1)
    {
      long long v89 = v6;
      unint64_t v91 = v5;
      memcpy(__dsta, v5, 0x229uLL);
      memcpy(v94, v12, 0x229uLL);
      unint64_t v13 = v94[17];
      if (v94[17] >> 1 == 0xFFFFFFFFLL)
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      uint64_t v14 = v94[11];
      uint64_t v15 = v94[12];
      uint64_t v16 = v94[13];
      uint64_t v17 = v94[14];
      uint64_t v18 = v94[15];
      uint64_t v19 = v94[16];
      uint64_t v87 = v4;
      __srca = v12;
      if (v94[17] >> 62 == 3)
      {
        uint64_t v20 = v94[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1FD2A0;
        *(void *)(v20 + 32) = v14;
        *(void *)(v20 + 40) = v15;
        *(void *)(v20 + 48) = v16;
        *(void *)(v20 + 56) = v17;
        *(void *)(v20 + 64) = v18;
        *(void *)(v20 + 72) = v19;
        *(unsigned char *)(v20 + 80) = v13 & 1;
      }
      uint64_t v86 = v14;
      sub_12430(v14, v15, v16, v17, v18, v19, v13);
      sub_12430(v14, v15, v16, v17, v18, v19, v13);
      sub_12384(__dsta);
      sub_12384(v94);
      double v82 = COERCE_DOUBLE(Array<A>.affinity.getter(v20));
      char v22 = v21;
      swift_bridgeObjectRelease();
      sub_1255C(v86, v15, v16, v17, v18, v19, v13);
      if (v22) {
        double v23 = 0.0;
      }
      else {
        double v23 = v82;
      }
      unint64_t v24 = __dsta[17];
      if (__dsta[17] >> 1 == 0xFFFFFFFFLL) {
        goto LABEL_71;
      }
      uint64_t v26 = __dsta[11];
      uint64_t v25 = __dsta[12];
      uint64_t v27 = __dsta[13];
      uint64_t v28 = __dsta[14];
      uint64_t v29 = __dsta[15];
      uint64_t v30 = __dsta[16];
      if (__dsta[17] >> 62 == 3)
      {
        uint64_t v31 = __dsta[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1FD2A0;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v25;
        *(void *)(v31 + 48) = v27;
        *(void *)(v31 + 56) = v28;
        *(void *)(v31 + 64) = v29;
        *(void *)(v31 + 72) = v30;
        *(unsigned char *)(v31 + 80) = v24 & 1;
      }
      sub_1244C();
      uint64_t v32 = v26;
      sub_1244C();
      double v83 = COERCE_DOUBLE(Array<A>.affinity.getter(v31));
      uint64_t v33 = v25;
      uint64_t v34 = v32;
      LOBYTE(v32) = v35;
      swift_bridgeObjectRelease();
      sub_1255C(v34, v33, v27, v28, v29, v30, v24);
      sub_124B4(v94);
      sub_124B4(__dsta);
      BOOL v36 = (v32 & 1) != 0 ? v23 < 0.0 : v23 < v83;
      uint64_t v5 = v91;
      size_t v12 = __srca;
      if (v36) {
        break;
      }
      uint64_t v4 = __srca + 560;
      Swift::Int v37 = __srca;
      size_t v12 = __srca + 560;
      if (v89 != __srca) {
        goto LABEL_28;
      }
LABEL_29:
      unint64_t v6 = v89 + 560;
      if (v12 >= v74)
      {
        unint64_t v96 = v4;
        uint64_t v97 = v89 + 560;
        goto LABEL_69;
      }
      if ((unint64_t)v5 >= a3)
      {
        unint64_t v96 = v4;
        uint64_t v97 = v89 + 560;
        goto LABEL_69;
      }
    }
    Swift::Int v37 = v91;
    uint64_t v5 = v91 + 560;
    uint64_t v4 = v87;
    if (v89 == v91) {
      goto LABEL_29;
    }
LABEL_28:
    memmove(v89, v37, 0x230uLL);
    goto LABEL_29;
  }
LABEL_69:
  sub_7034C((void **)&v97, &v96, &v95);
  return 1;
}

uint64_t sub_199518(char *__dst, char *__src, unint64_t a3, char *a4)
{
  uint64_t v4 = a4;
  unint64_t v6 = __src;
  int64_t v7 = __dst;
  int64_t v8 = __src - __dst;
  int64_t v9 = (__src - __dst) / 152;
  uint64_t v10 = a3 - (void)__src;
  uint64_t v11 = (uint64_t)(a3 - (void)__src) / 152;
  unint64_t v24 = __dst;
  double v23 = a4;
  if (v9 >= v11)
  {
    if (v10 >= -151)
    {
      uint64_t v15 = 152 * v11;
      if (a4 != __src || &__src[v15] <= a4) {
        memmove(a4, __src, 152 * v11);
      }
      uint64_t v16 = &v4[v15];
      char v22 = &v4[v15];
      unint64_t v24 = v6;
      if (v7 < v6 && v10 >= 152)
      {
        uint64_t v17 = (char *)(a3 - 152);
        uint64_t v18 = v6;
        while (1)
        {
          uint64_t v19 = v17 + 152;
          unint64_t v20 = *((void *)v18 - 19);
          v18 -= 152;
          if (*((void *)v16 - 19) >= v20)
          {
            char v22 = v16 - 152;
            if (v19 < v16 || v17 >= v16 || v19 != v16) {
              memmove(v17, v16 - 152, 0x98uLL);
            }
            uint64_t v18 = v6;
            v16 -= 152;
            if (v6 <= v7) {
              goto LABEL_38;
            }
          }
          else
          {
            if (v19 != v6 || v17 >= v6) {
              memmove(v17, v18, 0x98uLL);
            }
            unint64_t v24 = v18;
            if (v18 <= v7) {
              goto LABEL_38;
            }
          }
          v17 -= 152;
          unint64_t v6 = v18;
          if (v16 <= v4) {
            goto LABEL_38;
          }
        }
      }
      goto LABEL_38;
    }
  }
  else if (v8 >= -151)
  {
    size_t v12 = 152 * v9;
    if (a4 != __dst || &__dst[v12] <= a4) {
      memmove(a4, __dst, v12);
    }
    unint64_t v13 = &v4[v12];
    char v22 = v13;
    if ((unint64_t)v6 < a3 && v8 >= 152)
    {
      do
      {
        if (*(void *)v6 >= *(void *)v4)
        {
          if (v7 != v4) {
            memmove(v7, v4, 0x98uLL);
          }
          v4 += 152;
          double v23 = v4;
          uint64_t v14 = v6;
        }
        else
        {
          uint64_t v14 = v6 + 152;
          if (v7 < v6 || v7 >= v14 || v7 != v6) {
            memmove(v7, v6, 0x98uLL);
          }
        }
        v7 += 152;
        if (v4 >= v13) {
          break;
        }
        unint64_t v6 = v14;
      }
      while ((unint64_t)v14 < a3);
      unint64_t v24 = v7;
    }
LABEL_38:
    sub_705A4((void **)&v24, (const void **)&v23, &v22);
    return 1;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_1997CC(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  unint64_t v6 = a2;
  int64_t v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 24;
  uint64_t v10 = a3 - (void)a2;
  uint64_t v11 = (uint64_t)(a3 - (void)a2) / 24;
  uint64_t v31 = __src;
  uint64_t v30 = __dst;
  if (v9 >= v11)
  {
    if (v10 >= -23)
    {
      if (__dst != a2 || &a2[24 * v11] <= __dst) {
        memmove(__dst, a2, 24 * v11);
      }
      uint64_t v19 = &v4[24 * v11];
      uint64_t v29 = v19;
      uint64_t v31 = v6;
      if (v7 < v6 && v10 >= 24)
      {
        unint64_t v20 = a3 - 24;
        while (1)
        {
          char v21 = (char *)(v20 + 24);
          unint64_t v22 = *((void *)v19 - 1);
          double v23 = v6 - 24;
          unint64_t v24 = *((void *)v6 - 1);
          if (v22 >= v24 && (v22 == v24 ? (BOOL v25 = *((void *)v19 - 3) >= *(void *)v23) : (BOOL v25 = 1), v25))
          {
            uint64_t v29 = v19 - 24;
            if (v21 < v19 || v20 >= (unint64_t)v19 || v21 != v19)
            {
              long long v26 = *(_OWORD *)(v19 - 24);
              *(void *)(v20 + 16) = *((void *)v19 - 1);
              *(_OWORD *)unint64_t v20 = v26;
            }
            double v23 = v6;
            v19 -= 24;
            if (v6 <= v7) {
              goto LABEL_49;
            }
          }
          else
          {
            if (v21 != v6 || v20 >= (unint64_t)v6)
            {
              long long v27 = *(_OWORD *)v23;
              *(void *)(v20 + 16) = *((void *)v6 - 1);
              *(_OWORD *)unint64_t v20 = v27;
            }
            uint64_t v31 = v6 - 24;
            if (v23 <= v7) {
              goto LABEL_49;
            }
          }
          v20 -= 24;
          unint64_t v6 = v23;
          if (v19 <= v4) {
            goto LABEL_49;
          }
        }
      }
      goto LABEL_49;
    }
  }
  else if (v8 >= -23)
  {
    if (__dst != __src || &__src[24 * v9] <= __dst) {
      memmove(__dst, __src, 24 * v9);
    }
    size_t v12 = &v4[24 * v9];
    uint64_t v29 = v12;
    if ((unint64_t)v6 < a3 && v8 >= 24)
    {
      do
      {
        unint64_t v13 = *((void *)v6 + 2);
        unint64_t v14 = *((void *)v4 + 2);
        if (v13 >= v14 && (v13 == v14 ? (BOOL v15 = *(void *)v6 >= *(void *)v4) : (BOOL v15 = 1), v15))
        {
          if (v7 != v4 || v7 >= v4 + 24)
          {
            long long v16 = *(_OWORD *)v4;
            *((void *)v7 + 2) = *((void *)v4 + 2);
            *(_OWORD *)int64_t v7 = v16;
          }
          uint64_t v30 = v4 + 24;
          uint64_t v17 = v6;
          v4 += 24;
        }
        else
        {
          uint64_t v17 = v6 + 24;
          if (v7 < v6 || v7 >= v17 || v7 != v6)
          {
            long long v18 = *(_OWORD *)v6;
            *((void *)v7 + 2) = *((void *)v6 + 2);
            *(_OWORD *)int64_t v7 = v18;
          }
        }
        v7 += 24;
        if (v4 >= v12) {
          break;
        }
        unint64_t v6 = v17;
      }
      while ((unint64_t)v17 < a3);
      uint64_t v31 = v7;
    }
LABEL_49:
    sub_709B0((void **)&v31, (const void **)&v30, &v29);
    return 1;
  }
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_199AB8(uint64_t *a1, void **a2, uint64_t *a3)
{
  return sub_6D154(*a1, a2, *a3, a3[1], a3[2]);
}

uint64_t sub_199AE0(uint64_t a1, uint64_t (*a2)(char *, uint64_t, void), uint64_t a3)
{
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  uint64_t v54 = sub_12124(&qword_272968);
  uint64_t v5 = __chkstk_darwin(v54);
  uint64_t v53 = (uint64_t)&v42 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v52 = (char *)&v42 - v8;
  __chkstk_darwin(v7);
  uint64_t v51 = (char *)&v42 - v9;
  uint64_t v10 = sub_12124(&qword_26D490);
  uint64_t v49 = *(void *)(v10 - 8);
  uint64_t v50 = v10;
  __chkstk_darwin(v10);
  size_t v12 = (char *)&v42 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v13 = *(void *)(a1 + 16);
  unint64_t v14 = _swiftEmptyArrayStorage;
  if (!v13) {
    return (uint64_t)v14;
  }
  uint64_t v42 = v3;
  uint64_t v60 = _swiftEmptyArrayStorage;
  sub_468F8(0, v13, 0);
  uint64_t result = sub_73C38(a1);
  uint64_t v17 = result;
  uint64_t v18 = 0;
  uint64_t v19 = a1 + 64;
  uint64_t v43 = a1 + 80;
  int64_t v44 = v13;
  uint64_t v47 = v12;
  uint64_t v48 = a1;
  uint64_t v45 = v16;
  uint64_t v46 = a1 + 64;
  while ((v17 & 0x8000000000000000) == 0 && v17 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v22 = (unint64_t)v17 >> 6;
    if ((*(void *)(v19 + 8 * ((unint64_t)v17 >> 6)) & (1 << v17)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v16) {
      goto LABEL_26;
    }
    uint64_t v57 = v18;
    uint64_t v58 = 1 << v17;
    uint64_t v23 = v54;
    uint64_t v59 = *(int *)(v54 + 48);
    uint64_t v24 = *(void *)(a1 + 48);
    uint64_t v25 = sub_1FB110();
    uint64_t v26 = *(void *)(v25 - 8);
    long long v27 = *(void (**)(char *, uint64_t, uint64_t))(v26 + 16);
    uint64_t v28 = (uint64_t)v51;
    v27(v51, v24 + *(void *)(v26 + 72) * v17, v25);
    uint64_t v29 = *(void *)(*(void *)(a1 + 56) + 8 * v17);
    *(void *)(v28 + v59) = v29;
    uint64_t v30 = (uint64_t)v52;
    v27(v52, v28, v25);
    *(void *)(v30 + *(int *)(v23 + 48)) = v29;
    uint64_t v31 = v53;
    sub_55844(v30, v53, &qword_272968);
    swift_bridgeObjectRetain_n();
    sub_55F38(v28, &qword_272968);
    uint64_t v32 = *(int *)(v23 + 48);
    uint64_t v33 = (uint64_t)v47;
    uint64_t v34 = *(int *)(v50 + 48);
    *(void *)(v33 + v34) = v55(v47, v31, *(void *)(v31 + v32));
    sub_55F38(v31, &qword_272968);
    unint64_t v14 = v60;
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
    {
      sub_468F8(0, v14[2] + 1, 1);
      unint64_t v14 = v60;
    }
    unint64_t v36 = v14[2];
    unint64_t v35 = v14[3];
    a1 = v48;
    if (v36 >= v35 >> 1)
    {
      sub_468F8(v35 > 1, v36 + 1, 1);
      unint64_t v14 = v60;
    }
    v14[2] = v36 + 1;
    uint64_t result = sub_55844(v33, (uint64_t)v14+ ((*(unsigned __int8 *)(v49 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v49 + 80))+ *(void *)(v49 + 72) * v36, &qword_26D490);
    int64_t v20 = 1 << *(unsigned char *)(a1 + 32);
    if (v17 >= v20) {
      goto LABEL_27;
    }
    uint64_t v19 = v46;
    uint64_t v37 = *(void *)(v46 + 8 * v22);
    if ((v37 & v58) == 0) {
      goto LABEL_28;
    }
    LODWORD(v16) = v45;
    if (*(_DWORD *)(a1 + 36) != v45) {
      goto LABEL_29;
    }
    unint64_t v38 = v37 & (-2 << (v17 & 0x3F));
    if (v38)
    {
      int64_t v20 = __clz(__rbit64(v38)) | v17 & 0xFFFFFFFFFFFFFFC0;
      int64_t v21 = v44;
    }
    else
    {
      unint64_t v39 = v22 + 1;
      unint64_t v40 = (unint64_t)(v20 + 63) >> 6;
      int64_t v21 = v44;
      if (v22 + 1 < v40)
      {
        unint64_t v41 = *(void *)(v46 + 8 * v39);
        if (v41)
        {
LABEL_22:
          int64_t v20 = __clz(__rbit64(v41)) + (v39 << 6);
        }
        else
        {
          while (v40 - 2 != v22)
          {
            unint64_t v41 = *(void *)(v43 + 8 * v22++);
            if (v41)
            {
              unint64_t v39 = v22 + 1;
              goto LABEL_22;
            }
          }
        }
      }
    }
    uint64_t v18 = v57 + 1;
    uint64_t v17 = v20;
    if (v57 + 1 == v21) {
      return (uint64_t)v14;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

void *sub_199F48(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  int64_t v6 = *(void *)(a1 + 16);
  uint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    uint64_t v48 = _swiftEmptyArrayStorage;
    sub_467D8(0, v6, 0);
    uint64_t v7 = _swiftEmptyArrayStorage;
    uint64_t v10 = (char *)(a1 + 56);
    while (1)
    {
      char v11 = *(v10 - 16);
      uint64_t v12 = *((void *)v10 - 1);
      char v13 = *v10;
      uint64_t v14 = *((void *)v10 + 1);
      char v15 = v10[16];
      uint64_t v17 = *((void *)v10 + 3);
      uint64_t v16 = *((void *)v10 + 4);
      uint64_t v18 = *((void *)v10 + 5);
      uint64_t v19 = *((void *)v10 + 6);
      uint64_t v36 = *((void *)v10 - 3);
      char v37 = v11;
      uint64_t v38 = v12;
      char v39 = v13;
      uint64_t v40 = v14;
      char v41 = v15;
      uint64_t v42 = v17;
      uint64_t v43 = v16;
      uint64_t v44 = v18;
      uint64_t v45 = v19;
      sub_5480C(v14, v15);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_19396C(&v36, a2, a3, a4, (uint64_t)v46);
      if (v5) {
        break;
      }
      uint64_t v5 = 0;
      sub_54820(v14, v15);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v30 = v46[4];
      long long v31 = v46[5];
      long long v29 = v46[3];
      long long v27 = v46[1];
      long long v28 = v46[2];
      long long v33 = v46[7];
      long long v34 = v46[8];
      long long v32 = v46[6];
      char v35 = v47;
      unint64_t v21 = v7[2];
      unint64_t v20 = v7[3];
      long long v26 = v46[0];
      uint64_t v48 = v7;
      if (v21 >= v20 >> 1)
      {
        sub_467D8(v20 > 1, v21 + 1, 1);
        uint64_t v7 = v48;
      }
      v10 += 80;
      uint64_t v7[2] = v21 + 1;
      unint64_t v22 = &v7[19 * v21];
      *((_OWORD *)v22 + 2) = v26;
      *((_OWORD *)v22 + 3) = v27;
      *((_OWORD *)v22 + 6) = v30;
      *((_OWORD *)v22 + 7) = v31;
      *((_OWORD *)v22 + 4) = v28;
      *((_OWORD *)v22 + 5) = v29;
      *((unsigned char *)v22 + 176) = v35;
      *((_OWORD *)v22 + 9) = v33;
      *((_OWORD *)v22 + 10) = v34;
      *((_OWORD *)v22 + 8) = v32;
      if (!--v6) {
        return v7;
      }
    }
    sub_54820(v14, v15);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v7;
}

void *sub_19A14C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  int64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    sub_46ABC(0, v3, 0);
    uint64_t v7 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v9 = *v7++;
      uint64_t v8 = v9;
      if (v9)
      {
        swift_bridgeObjectRetain_n();
        uint64_t v10 = sub_18F1C8(a2, a3, v8);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        uint64_t v10 = 0;
      }
      unint64_t v12 = _swiftEmptyArrayStorage[2];
      unint64_t v11 = _swiftEmptyArrayStorage[3];
      if (v12 >= v11 >> 1) {
        sub_46ABC(v11 > 1, v12 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v12 + 1;
      _swiftEmptyArrayStorage[v12 + 4] = v10;
      --v3;
    }
    while (v3);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_19A264(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    uint64_t v53 = _swiftEmptyArrayStorage;
    sub_467D8(0, v3, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v5 = a1 + 32;
    for (int64_t i = v3 - 1; ; --i)
    {
      long long v7 = *(_OWORD *)(v5 + 112);
      long long v49 = *(_OWORD *)(v5 + 96);
      long long v50 = v7;
      long long v51 = *(_OWORD *)(v5 + 128);
      char v52 = *(unsigned char *)(v5 + 144);
      long long v8 = *(_OWORD *)(v5 + 48);
      long long v45 = *(_OWORD *)(v5 + 32);
      long long v46 = v8;
      long long v9 = *(_OWORD *)(v5 + 80);
      long long v47 = *(_OWORD *)(v5 + 64);
      long long v48 = v9;
      long long v10 = *(_OWORD *)(v5 + 16);
      v44[0] = *(_OWORD *)v5;
      v44[1] = v10;
      uint64_t v37 = *(void *)&v44[0];
      uint64_t v38 = v10;
      char v35 = BYTE8(v10);
      char v36 = BYTE8(v44[0]);
      uint64_t v11 = v45;
      char v12 = BYTE8(v45);
      uint64_t v13 = v46;
      long long v14 = v47;
      uint64_t v39 = *((void *)&v46 + 1);
      long long v33 = result;
      if ((void)v47)
      {
        sub_54834((uint64_t)v44);
        sub_5480C(v11, v12);
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        if (sub_18EF10(v14, a2)[2])
        {
          sub_12124(&qword_26D7E0);
          char v15 = (void *)sub_1FC2A0();
        }
        else
        {
          char v15 = _swiftEmptyDictionarySingleton;
        }
        uint64_t v40 = v15;
        uint64_t v16 = swift_bridgeObjectRetain();
        sub_195A84(v16, 1, &v40);
        if (v27)
        {
          uint64_t result = (void *)swift_unexpectedError();
          __break(1u);
          return result;
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        long long v34 = v40;
      }
      else
      {
        sub_54834((uint64_t)v44);
        sub_5480C(v11, v12);
        swift_bridgeObjectRetain_n();
        long long v34 = 0;
      }
      uint64_t v17 = v13;
      long long v18 = v48;
      long long v19 = v49;
      uint64_t v31 = *((void *)&v50 + 1);
      uint64_t v32 = v50;
      uint64_t v29 = *((void *)&v51 + 1);
      uint64_t v30 = v51;
      char v28 = v52;
      sub_5480C(v11, v12);
      sub_54820(v11, v12);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_7A018((uint64_t)v44);
      uint64_t result = v33;
      uint64_t v53 = v33;
      unint64_t v21 = v33[2];
      unint64_t v20 = v33[3];
      if (v21 >= v20 >> 1)
      {
        sub_467D8(v20 > 1, v21 + 1, 1);
        uint64_t result = v53;
      }
      char v43 = v35;
      result[2] = v21 + 1;
      unint64_t v22 = &result[19 * v21];
      v22[4] = v37;
      *((unsigned char *)v22 + 40) = v36;
      int v23 = *(_DWORD *)((char *)&v40 + 3);
      *(_DWORD *)((char *)v22 + 41) = v40;
      *((_DWORD *)v22 + 11) = v23;
      v22[6] = v38;
      *((unsigned char *)v22 + 56) = v43;
      int v24 = *(_DWORD *)v42;
      *((_DWORD *)v22 + 15) = *(_DWORD *)&v42[3];
      *(_DWORD *)((char *)v22 + 57) = v24;
      v22[8] = v11;
      *((unsigned char *)v22 + 72) = v12;
      int v25 = *(_DWORD *)v41;
      *((_DWORD *)v22 + 19) = *(_DWORD *)&v41[3];
      *(_DWORD *)((char *)v22 + 73) = v25;
      v22[10] = v17;
      v22[11] = v39;
      v22[12] = v34;
      v22[13] = *((void *)&v14 + 1);
      *((_OWORD *)v22 + 7) = v18;
      *((_OWORD *)v22 + 8) = v19;
      v22[18] = v32;
      v22[19] = v31;
      v22[20] = v30;
      v22[21] = v29;
      *((unsigned char *)v22 + 176) = v28;
      if (!i) {
        return result;
      }
      v5 += 152;
    }
  }
  return result;
}

void *sub_19A604(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  int64_t v3 = _swiftEmptyArrayStorage;
  if (v2)
  {
    char v41 = _swiftEmptyArrayStorage;
    sub_465A8(0, v2, 0);
    uint64_t v5 = a2;
    int64_t v6 = (char *)(a1 + 32);
    int64_t v3 = _swiftEmptyArrayStorage;
    for (int64_t i = v2 - 1; ; int64_t i = v37 - 1)
    {
      int64_t v37 = i;
      memcpy(__dst, v6, 0x229uLL);
      uint64_t v8 = *(void *)&__dst[0];
      unint64_t v20 = v6;
      if (*(void *)(v5 + 16) && (uint64_t v9 = sub_56168(*(void *)&__dst[0]), v5 = a2, (v10 & 1) != 0))
      {
        memcpy(__src, (const void *)(*(void *)(a2 + 56) + 560 * v9), 0x229uLL);
        char v36 = BYTE8(__src[34]);
        uint64_t v34 = *(void *)&__src[6];
        uint64_t v35 = *((void *)&__src[5] + 1);
        uint64_t v32 = *(void *)&__src[7];
        uint64_t v33 = *((void *)&__src[6] + 1);
        uint64_t v28 = *((void *)&__src[8] + 1);
        uint64_t v29 = *(void *)&__src[8];
        uint64_t v30 = *(void *)&__src[34];
        uint64_t v31 = *((void *)&__src[7] + 1);
        uint64_t v26 = *((void *)&__src[9] + 1);
        uint64_t v27 = *(void *)&__src[9];
        char v25 = BYTE8(__src[0]);
        long long v24 = __src[1];
        uint64_t v23 = *(void *)&__src[2];
        char v22 = BYTE8(__src[2]);
        uint64_t v11 = *((void *)&__src[3] + 1);
        uint64_t v21 = *(void *)&__src[3];
        uint64_t v13 = *((void *)&__src[4] + 1);
        uint64_t v12 = *(void *)&__src[4];
        char v14 = __src[5];
        uint64_t v8 = *(void *)&__src[0];
        sub_12384(__src);
        char v15 = &__src[10];
      }
      else
      {
        char v36 = BYTE8(__dst[34]);
        uint64_t v34 = *(void *)&__dst[6];
        uint64_t v35 = *((void *)&__dst[5] + 1);
        uint64_t v32 = *(void *)&__dst[7];
        uint64_t v33 = *((void *)&__dst[6] + 1);
        uint64_t v28 = *((void *)&__dst[8] + 1);
        uint64_t v29 = *(void *)&__dst[8];
        uint64_t v30 = *(void *)&__dst[34];
        uint64_t v31 = *((void *)&__dst[7] + 1);
        uint64_t v26 = *((void *)&__dst[9] + 1);
        uint64_t v27 = *(void *)&__dst[9];
        char v25 = BYTE8(__dst[0]);
        long long v24 = __dst[1];
        uint64_t v23 = *(void *)&__dst[2];
        char v22 = BYTE8(__dst[2]);
        uint64_t v11 = *((void *)&__dst[3] + 1);
        uint64_t v21 = *(void *)&__dst[3];
        uint64_t v13 = *((void *)&__dst[4] + 1);
        uint64_t v12 = *(void *)&__dst[4];
        char v14 = __dst[5];
        sub_12384(__dst);
        char v15 = &__dst[10];
      }
      sub_55844((uint64_t)v15, (uint64_t)v39, &qword_26C518);
      char v41 = v3;
      unint64_t v17 = v3[2];
      unint64_t v16 = v3[3];
      if (v17 >= v16 >> 1)
      {
        sub_465A8(v16 > 1, v17 + 1, 1);
        uint64_t v5 = a2;
        int64_t v3 = v41;
      }
      *(void *)&__src[0] = v8;
      BYTE8(__src[0]) = v25;
      __src[1] = v24;
      *(void *)&__src[2] = v23;
      BYTE8(__src[2]) = v22;
      *(void *)&__src[3] = v21;
      *((void *)&__src[3] + 1) = v11;
      *(void *)&__src[4] = v12;
      *((void *)&__src[4] + 1) = v13;
      LOBYTE(__src[5]) = v14;
      *((void *)&__src[5] + 1) = v35;
      *(void *)&__src[6] = v34;
      *((void *)&__src[6] + 1) = v33;
      *(void *)&__src[7] = v32;
      *((void *)&__src[7] + 1) = v31;
      *(void *)&__src[8] = v29;
      *((void *)&__src[8] + 1) = v28;
      *(void *)&__src[9] = v27;
      *((void *)&__src[9] + 1) = v26;
      sub_55844((uint64_t)v39, (uint64_t)&__src[10], &qword_26C518);
      *(void *)&__src[34] = v30;
      BYTE8(__src[34]) = v36;
      v3[2] = v17 + 1;
      memcpy(&v3[70 * v17 + 4], __src, 0x229uLL);
      if (!v37) {
        break;
      }
      int64_t v6 = v20 + 560;
    }
  }
  return v3;
}

uint64_t sub_19A920()
{
  uint64_t v1 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  uint64_t v5 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8))(v0 + v3, v5);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  int64_t v6 = (void *)(v0 + v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(v0 + v4 + 904))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[116])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v6[124])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v6[134])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, v4 + 1120, v2 | 7);
}

uint64_t sub_19AB54(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = v1 + v5;
  uint64_t v8 = *(void *)(v1 + v6);
  uint64_t v9 = v1 + ((v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  char v10 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v10;
  *char v10 = v2;
  v10[1] = sub_5958;
  v10[145] = v9;
  v10[144] = v8;
  v10[143] = v7;
  v10[142] = a1;
  return _swift_task_switch(sub_191334, 0, 0);
}

void *sub_19AC88(int64_t a1, int64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  int64_t v6 = a2;
  int64_t v7 = a1;
  int64_t v8 = 0;
  int64_t v9 = a1;
  while (1)
  {
    BOOL v10 = v9 <= a2;
    if (a3 > 0) {
      BOOL v10 = v9 >= a2;
    }
    if (v10) {
      break;
    }
    BOOL v11 = __OFADD__(v9, a3);
    v9 += a3;
    if (v11) {
      int64_t v9 = (v9 >> 63) ^ 0x8000000000000000;
    }
    BOOL v11 = __OFADD__(v8++, 1);
    if (v11)
    {
      __break(1u);
      break;
    }
  }
  uint64_t result = (void *)sub_466F8(0, v8, 0);
  int64_t v28 = v6;
  if (v8)
  {
    int64_t v27 = *(void *)(a5 + 16);
    while (1)
    {
      BOOL v14 = v7 <= v6;
      if (a3 > 0) {
        BOOL v14 = v7 >= v6;
      }
      if (v14) {
        break;
      }
      if (__OFADD__(v7, a3)) {
        int64_t v15 = ((v7 + a3) >> 63) ^ 0x8000000000000000;
      }
      else {
        int64_t v15 = v7 + a3;
      }
      if (__OFADD__(v7, a4)) {
        goto LABEL_49;
      }
      if (v27 >= v7 + a4) {
        int64_t v16 = v7 + a4;
      }
      else {
        int64_t v16 = v27;
      }
      if (v16 < v7) {
        goto LABEL_50;
      }
      if (v7 < 0) {
        goto LABEL_51;
      }
      unint64_t v18 = _swiftEmptyArrayStorage[2];
      unint64_t v17 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_unknownObjectRetain();
      if (v18 >= v17 >> 1) {
        uint64_t result = (void *)sub_466F8(v17 > 1, v18 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v18 + 1;
      long long v19 = &_swiftEmptyArrayStorage[4 * v18];
      v19[4] = a5;
      v19[5] = a5 + 32;
      v19[6] = v7;
      v19[7] = (2 * v16) | 1;
      int64_t v7 = v15;
      --v8;
      int64_t v6 = v28;
      if (!v8) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_49:
    __break(1u);
LABEL_50:
    __break(1u);
LABEL_51:
    __break(1u);
  }
  else
  {
    int64_t v15 = v7;
LABEL_29:
    BOOL v20 = v15 <= v6;
    if (a3 > 0) {
      BOOL v20 = v15 >= v6;
    }
    if (v20) {
      return _swiftEmptyArrayStorage;
    }
    while (1)
    {
      int64_t v21 = __OFADD__(v15, a3) ? ((v15 + a3) >> 63) ^ 0x8000000000000000 : v15 + a3;
      if (__OFADD__(v15, a4)) {
        break;
      }
      if (*(void *)(a5 + 16) >= v15 + a4) {
        int64_t v22 = v15 + a4;
      }
      else {
        int64_t v22 = *(void *)(a5 + 16);
      }
      if (v22 < v15) {
        goto LABEL_53;
      }
      if (v15 < 0) {
        goto LABEL_54;
      }
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      unint64_t v23 = _swiftEmptyArrayStorage[3];
      uint64_t result = (void *)swift_unknownObjectRetain();
      if (v24 >= v23 >> 1) {
        uint64_t result = (void *)sub_466F8(v23 > 1, v24 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v24 + 1;
      char v25 = &_swiftEmptyArrayStorage[4 * v24];
      v25[4] = a5;
      v25[5] = a5 + 32;
      v25[6] = v15;
      v25[7] = (2 * v22) | 1;
      BOOL v26 = v21 <= v28;
      if (a3 > 0) {
        BOOL v26 = v21 >= v28;
      }
      int64_t v15 = v21;
      if (v26) {
        return _swiftEmptyArrayStorage;
      }
    }
  }
  __break(1u);
LABEL_53:
  __break(1u);
LABEL_54:
  __break(1u);
  return result;
}

uint64_t sub_19AF08(uint64_t *a1)
{
  return sub_6D154(*a1, *(void ***)(v1 + 16), **(void **)(v1 + 24), *(void *)(*(void *)(v1 + 24) + 8), *(void *)(*(void *)(v1 + 24) + 16));
}

uint64_t sub_19AF30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, char a5)
{
  uint64_t v6 = v5;
  char v70 = a4;
  uint64_t v85 = a3;
  int v69 = a5 & 1;
  uint64_t v9 = sub_12124(&qword_2703F8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v55 = (char *)&v55 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v65 = (char *)&v55 - v13;
  __chkstk_darwin(v12);
  uint64_t v73 = (char *)&v55 - v15;
  uint64_t v16 = *(void *)(a1 + 56);
  uint64_t v71 = a1 + 56;
  uint64_t v17 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v18 = -1;
  if (v17 < 64) {
    uint64_t v18 = ~(-1 << v17);
  }
  unint64_t v19 = v18 & v16;
  int64_t v72 = (unint64_t)(v17 + 63) >> 6;
  uint64_t v66 = v14;
  uint64_t v67 = v14 + 16;
  uint64_t v63 = &v77[11];
  uint64_t v64 = v14 + 32;
  uint64_t v62 = (void (**)(char *, uint64_t))(v14 + 8);
  swift_bridgeObjectRetain();
  int64_t v20 = 0;
  long long v57 = xmmword_1FD2A0;
  uint64_t v58 = a2;
  uint64_t v59 = a1;
  uint64_t v60 = v9;
  while (1)
  {
    if (v19)
    {
      unint64_t v21 = __clz(__rbit64(v19));
      v19 &= v19 - 1;
      unint64_t v22 = v21 | (v20 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v20++, 1)) {
      goto LABEL_44;
    }
    if (v20 >= v72) {
      return swift_release();
    }
    unint64_t v24 = *(void *)(v71 + 8 * v20);
    if (!v24)
    {
      int64_t v25 = v20 + 1;
      if (v20 + 1 >= v72) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v71 + 8 * v25);
      if (v24) {
        goto LABEL_17;
      }
      int64_t v25 = v20 + 2;
      if (v20 + 2 >= v72) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v71 + 8 * v25);
      if (v24) {
        goto LABEL_17;
      }
      int64_t v25 = v20 + 3;
      if (v20 + 3 >= v72) {
        return swift_release();
      }
      unint64_t v24 = *(void *)(v71 + 8 * v25);
      if (v24)
      {
LABEL_17:
        int64_t v20 = v25;
      }
      else
      {
        int64_t v53 = v20 + 4;
        if (v20 + 4 >= v72) {
          return swift_release();
        }
        unint64_t v24 = *(void *)(v71 + 8 * v53);
        for (v20 += 4; !v24; ++v53)
        {
          int64_t v20 = v53 + 1;
          if (__OFADD__(v53, 1)) {
            goto LABEL_45;
          }
          if (v20 >= v72) {
            return swift_release();
          }
          unint64_t v24 = *(void *)(v71 + 8 * v20);
        }
      }
    }
    unint64_t v19 = (v24 - 1) & v24;
    unint64_t v22 = __clz(__rbit64(v24)) + (v20 << 6);
LABEL_19:
    memcpy(v77, (const void *)(*(void *)(a1 + 48) + 560 * v22), 0x229uLL);
    if (*(void *)(a2 + 16))
    {
      uint64_t v26 = sub_56168(v77[0]);
      if (v27)
      {
        uint64_t v68 = v6;
        uint64_t v28 = v9;
        uint64_t v29 = v65;
        uint64_t v30 = v66;
        uint64_t v31 = *(void (**)(char *, uint64_t, uint64_t))(v66 + 16);
        v31(v65, *(void *)(a2 + 56) + *(void *)(v66 + 72) * v26, v28);
        uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v30 + 32);
        uint64_t v9 = v28;
        v32(v73, v29, v28);
        sub_55844((uint64_t)v63, (uint64_t)v78, &qword_272990);
        sub_55844((uint64_t)v78, (uint64_t)v79, &qword_272990);
        if (v79[6] >> 1 == 0xFFFFFFFFLL)
        {
          sub_12384(v77);
          uint64_t v6 = v68;
        }
        else
        {
          uint64_t v61 = (void (*)(char *, char *, uint64_t))v31;
          sub_19B580((uint64_t)v79, (uint64_t)v80);
          sub_19B580((uint64_t)v80, (uint64_t)&v81);
          char v33 = v84;
          switch(v84 >> 62)
          {
            case 2uLL:
              v84 &= 0x3FFFFFFFFFFFFFFFuLL;
              long long v38 = v81;
              long long v39 = v82;
              uint64_t v56 = *((void *)&v83 + 1);
              uint64_t v40 = v83;
              sub_12124(&qword_26D5D8);
              uint64_t v34 = swift_allocObject();
              *(_OWORD *)(v34 + 16) = v57;
              *(_OWORD *)(v34 + 32) = v38;
              *(_OWORD *)(v34 + 48) = v39;
              uint64_t v41 = v56;
              *(void *)(v34 + 64) = v40;
              *(void *)(v34 + 72) = v41;
              *(unsigned char *)(v34 + 80) = v33 & 1;
              break;
            case 3uLL:
              v84 &= 0x3FFFFFFFFFFFFFFFuLL;
              uint64_t v34 = v81;
              break;
            default:
              v84 &= 0x3FFFFFFFFFFFFFFFuLL;
              sub_12124(&qword_26D5D8);
              uint64_t v34 = swift_allocObject();
              long long v35 = v81;
              long long v36 = v82;
              *(_OWORD *)(v34 + 16) = v57;
              *(_OWORD *)(v34 + 32) = v35;
              long long v37 = v83;
              *(_OWORD *)(v34 + 48) = v36;
              *(_OWORD *)(v34 + 64) = v37;
              *(unsigned char *)(v34 + 80) = v84;
              break;
          }
          uint64_t v6 = v68;
          sub_19B5DC(v78, (void (*)(void, void, void, void, void, void, void, void, void))sub_12430);
          sub_12384(v77);
          sub_19B5DC(v78, (void (*)(void, void, void, void, void, void, void, void, void))sub_12430);
          double v42 = COERCE_DOUBLE(Array<A>.affinity.getter(v34));
          char v44 = v43;
          swift_bridgeObjectRelease();
          sub_19B5DC(v78, (void (*)(void, void, void, void, void, void, void, void, void))sub_1255C);
          if ((v44 & 1) != 0 || (double v45 = v42, v42 <= 0.0))
          {
            a2 = v58;
            a1 = v59;
            uint64_t v9 = v60;
          }
          else
          {
            v61(v55, v73, v60);
            sub_12384(v77);
            sub_8CFA4(v85);
            sub_52CC0(&qword_272998, &qword_2703F8);
            sub_1FB980();
            uint64_t v46 = v75;
            unint64_t v47 = v76;
            unint64_t v48 = *(void *)(v75 + 16);
            if (v76 != v48)
            {
              long long v49 = (uint64_t *)(v75 + 24 * v76 + 48);
              while (v47 < v48)
              {
                unint64_t v50 = v47 + 1;
                if (__OFADD__(v47, 1)) {
                  goto LABEL_43;
                }
                uint64_t v52 = *(v49 - 1);
                uint64_t v51 = *v49;
                v74[0] = *(v49 - 2);
                v74[1] = v52;
                v74[2] = v51;
                swift_bridgeObjectRetain();
                sub_1DCE88(v74, v85, v70, v77, v69, v45);
                swift_bridgeObjectRelease();
                unint64_t v48 = *(void *)(v46 + 16);
                v49 += 3;
                ++v47;
                if (v50 == v48) {
                  goto LABEL_33;
                }
              }
              __break(1u);
LABEL_43:
              __break(1u);
LABEL_44:
              __break(1u);
LABEL_45:
              __break(1u);
              JUMPOUT(0x19B570);
            }
LABEL_33:
            swift_bridgeObjectRelease();
            sub_124B4(v77);
            sub_8D5A4(v85);
            a2 = v58;
            a1 = v59;
            uint64_t v9 = v60;
          }
        }
        (*v62)(v73, v9);
        sub_124B4(v77);
      }
    }
  }
}

uint64_t sub_19B580(uint64_t a1, uint64_t a2)
{
  return a2;
}

void *sub_19B5DC(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_19B62C(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for SeedBasedRecommendationRequest(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

double sub_19B688@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = *(void *)(v2 + 16);
  uint64_t v5 = *a1;
  uint64_t v6 = *(unsigned __int8 *)(v4 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 32));
  *(void *)a2 = v5;
  *(void *)(a2 + 8) = v6;
  double result = 0.0;
  *(_OWORD *)(a2 + 16) = xmmword_202690;
  *(_OWORD *)(a2 + 32) = xmmword_212200;
  *(void *)(a2 + 48) = _swiftEmptyArrayStorage;
  *(void *)(a2 + 56) = 0;
  *(void *)(a2 + 64) = 0;
  *(void *)(a2 + 72) = 0x3FF0000000000000;
  return result;
}

void *sub_19B6FC@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return sub_1DB55C(a1, *(void *)(v2 + 16), *(uint64_t **)(v2 + 24), a2);
}

uint64_t getEnumTagSinglePayload for BooksBackendSeedBasedRecommendationService.Errors(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xF9 && *(unsigned char *)(a1 + 9)) {
    return (*(_DWORD *)a1 + 249);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 8);
  if (v3 <= 7) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t storeEnumTagSinglePayload for BooksBackendSeedBasedRecommendationService.Errors(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xF8)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)double result = a2 - 249;
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if (a3 >= 0xF9) {
      *(unsigned char *)(result + 9) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 8) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_19B7A4(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 8) <= 6u) {
    return *(unsigned __int8 *)(a1 + 8);
  }
  else {
    return (*(_DWORD *)a1 + 7);
  }
}

uint64_t sub_19B7BC(uint64_t result, unsigned int a2)
{
  if (a2 >= 7)
  {
    *(void *)double result = a2 - 7;
    LOBYTE(a2) = 7;
  }
  *(unsigned char *)(result + 8) = a2;
  return result;
}

ValueMetadata *type metadata accessor for BooksBackendSeedBasedRecommendationService.Errors()
{
  return &type metadata for BooksBackendSeedBasedRecommendationService.Errors;
}

uint64_t sub_19B7E4(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  double v2 = *(double *)(a1 + 32);
  uint64_t v3 = v1 - 1;
  if (v1 != 1)
  {
    int v4 = (double *)(a1 + 40);
    do
    {
      double v5 = *v4++;
      double v6 = v5;
      if (v2 < v5) {
        double v2 = v6;
      }
      --v3;
    }
    while (v3);
  }
  return *(void *)&v2;
}

void *Array<A>.positionScored()(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  double v2 = _swiftEmptyArrayStorage;
  if (!v1) {
    return v2;
  }
  uint64_t v3 = a1;
  v34[1] = v34;
  double v42 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_467B8(0, 0, 0);
  uint64_t v4 = (uint64_t)v42;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  uint64_t v6 = v1 - 1;
  uint64_t v36 = v3;
  do
  {
    uint64_t v41 = *(void *)(v3 + v5 + 32);
    int v40 = *(unsigned __int8 *)(v3 + v5 + 40);
    uint64_t v39 = *(void *)(v3 + v5 + 48);
    int v38 = *(unsigned __int8 *)(v3 + v5 + 56);
    uint64_t v7 = *(void *)(v3 + v5 + 64);
    char v8 = *(unsigned char *)(v3 + v5 + 72);
    uint64_t v9 = *(void *)(v3 + v5 + 80);
    uint64_t v37 = *(void *)(v3 + v5 + 88);
    uint64_t v10 = *(void *)(v3 + v5 + 96);
    sub_5480C(v7, v8);
    double v42 = (void *)v4;
    unint64_t v12 = *(void *)(v4 + 16);
    unint64_t v11 = *(void *)(v4 + 24);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v12 >= v11 >> 1)
    {
      sub_467B8(v11 > 1, v12 + 1, 1);
      uint64_t v4 = (uint64_t)v42;
    }
    *(void *)(v4 + 16) = v12 + 1;
    uint64_t v13 = v4 + 80 * v12;
    *(void *)(v13 + 32) = v41;
    *(unsigned char *)(v13 + 40) = v40;
    *(void *)(v13 + 48) = v39;
    *(unsigned char *)(v13 + 56) = v38;
    *(void *)(v13 + 64) = v7;
    *(unsigned char *)(v13 + 72) = v8;
    uint64_t v3 = v36;
    uint64_t v14 = v37;
    *(void *)(v13 + 80) = v9;
    *(void *)(v13 + 88) = v14;
    *(void *)(v13 + 96) = v10;
    *(double *)(v13 + 104) = (double)v6;
    v5 += 72;
    --v6;
  }
  while (v6 != -1);
  swift_bridgeObjectRelease_n();
  uint64_t v15 = (double *)sub_387A8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19BB6C, 0, v4);
  uint64_t v16 = *((void *)v15 + 2);
  if (!v16)
  {
    swift_bridgeObjectRelease();
LABEL_15:
    swift_release();
    return _swiftEmptyArrayStorage;
  }
  double v17 = v15[4];
  uint64_t v18 = v16 - 1;
  if (v18)
  {
    unint64_t v19 = v15 + 5;
    do
    {
      double v20 = *v19++;
      double v21 = v20;
      if (v17 < v20) {
        double v17 = v21;
      }
      --v18;
    }
    while (v18);
  }
  swift_bridgeObjectRelease();
  if (v17 == 0.0) {
    goto LABEL_15;
  }
  int64_t v23 = *(void *)(v4 + 16);
  if (!v23) {
    goto LABEL_15;
  }
  double v42 = _swiftEmptyArrayStorage;
  sub_467B8(0, v23, 0);
  uint64_t v24 = 0;
  double v2 = v42;
  uint64_t v35 = v4;
  do
  {
    uint64_t v41 = *(void *)(v4 + v24 + 32);
    int v40 = *(unsigned __int8 *)(v4 + v24 + 40);
    uint64_t v39 = *(void *)(v4 + v24 + 48);
    int v38 = *(unsigned __int8 *)(v4 + v24 + 56);
    uint64_t v25 = *(void *)(v4 + v24 + 64);
    char v26 = *(unsigned char *)(v4 + v24 + 72);
    uint64_t v27 = *(void *)(v4 + v24 + 80);
    uint64_t v37 = *(void *)(v4 + v24 + 88);
    uint64_t v28 = *(void *)(v4 + v24 + 96);
    double v29 = *(double *)(v4 + v24 + 104);
    sub_5480C(v25, v26);
    double v42 = v2;
    unint64_t v30 = v2[2];
    unint64_t v31 = v2[3];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v30 >= v31 >> 1)
    {
      sub_467B8(v31 > 1, v30 + 1, 1);
      double v2 = v42;
    }
    v2[2] = v30 + 1;
    uint64_t v32 = &v2[10 * v30];
    v32[4] = v41;
    *((unsigned char *)v32 + 40) = v40;
    v32[6] = v39;
    *((unsigned char *)v32 + 56) = v38;
    v32[8] = v25;
    *((unsigned char *)v32 + 72) = v26;
    uint64_t v33 = v37;
    v32[10] = v27;
    v32[11] = v33;
    v32[12] = v28;
    *((double *)v32 + 13) = v29 / v17;
    v24 += 80;
    --v23;
    uint64_t v4 = v35;
  }
  while (v23);
  swift_release();
  return v2;
}

double sub_19BB6C@<D0>(uint64_t a1@<X0>, double *a2@<X8>)
{
  double result = fabs(*(double *)(a1 + 72));
  *a2 = result;
  return result;
}

void *sub_19BB7C(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_46588(0, v1, 0);
    uint64_t v3 = (uint64_t *)(a1 + 40);
    do
    {
      uint64_t v5 = *(v3 - 1);
      uint64_t v4 = *v3;
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      if (v7 >= v6 >> 1) {
        sub_46588(v6 > 1, v7 + 1, 1);
      }
      v3 += 5;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      char v8 = &_swiftEmptyArrayStorage[2 * v7];
      v8[4] = v5;
      v8[5] = v4;
      --v1;
    }
    while (v1);
  }
  return _swiftEmptyArrayStorage;
}

void *sub_19BC54(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  double result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_46698(0, v2, 0);
    double result = _swiftEmptyArrayStorage;
    uint64_t v4 = (int *)(a1 + 48);
    do
    {
      int v6 = *v4;
      v4 += 10;
      int v5 = v6;
      uint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_46698(v7 > 1, v8 + 1, 1);
        double result = v9;
      }
      result[2] = v8 + 1;
      *((_DWORD *)result + v8 + 8) = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

unint64_t sub_19BD14(uint64_t a1, char *a2, uint64_t a3)
{
  uint64_t v54 = a1;
  uint64_t v50 = sub_1FB5F0();
  unint64_t v48 = *(char ***)(v50 - 8);
  uint64_t v5 = __chkstk_darwin(v50);
  long long v49 = (char *)&v46 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  unint64_t v8 = (char *)&v46 - v7;
  sub_12124(&qword_26D800);
  uint64_t v9 = sub_12124(&qword_26D808);
  unint64_t v11 = (*(unsigned __int8 *)(*(void *)(v9 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v52 = *(char ***)(*(void *)(v9 - 8) + 72);
  uint64_t v10 = v52;
  uint64_t v12 = swift_allocObject();
  *(_OWORD *)(v12 + 16) = xmmword_202680;
  uint64_t v51 = v12;
  uint64_t v13 = (char **)(v12 + v11);
  uint64_t v14 = v12 + v11 + *(int *)(v9 + 48);
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  v57._countAndFlagsBits = 0x44496D6164612ELL;
  v57._object = (void *)0xE700000000000000;
  sub_1FB8F0(v57);
  uint64_t v15 = v56;
  *uint64_t v13 = v55;
  v13[1] = (char *)v15;
  uint64_t v16 = v54;
  double v17 = sub_19BB7C(v54);
  static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)((uint64_t)v17, v14);
  swift_bridgeObjectRelease();
  uint64_t v18 = (char **)((char *)v10 + (void)v13);
  uint64_t v53 = v9;
  unint64_t v19 = a2;
  uint64_t v55 = a2;
  uint64_t v56 = a3;
  swift_bridgeObjectRetain();
  v58._countAndFlagsBits = 0x6F6964754173692ELL;
  v58._object = (void *)0xEC0000006B6F6F42;
  sub_1FB8F0(v58);
  uint64_t v20 = v56;
  *uint64_t v18 = v55;
  v18[1] = (char *)v20;
  sub_19BC54(v16);
  sub_1FB5E0();
  swift_bridgeObjectRetain();
  sub_1FB5D0();
  sub_1FB540();
  double v21 = v48;
  uint64_t v22 = v50;
  ((void (*)(char *, char *, uint64_t))v48[2])(v49, v8, v50);
  sub_1FB520();
  ((void (*)(char *, uint64_t))v21[1])(v8, v22);
  swift_bridgeObjectRelease();
  unint64_t v48 = v13;
  long long v49 = v19;
  int64_t v23 = (char **)((char *)v13 + 2 * (void)v52);
  uint64_t v55 = v19;
  uint64_t v56 = a3;
  uint64_t v50 = a3;
  swift_bridgeObjectRetain();
  v59._countAndFlagsBits = 0x444965726E65672ELL;
  v59._object = (void *)0xE900000000000073;
  sub_1FB8F0(v59);
  uint64_t v24 = v56;
  char *v23 = v55;
  v23[1] = (char *)v24;
  uint64_t v25 = *(void *)(v16 + 16);
  if (v25)
  {
    uint64_t v46 = v23;
    swift_bridgeObjectRetain();
    uint64_t v26 = v16 + 64;
    uint64_t v27 = _swiftEmptyArrayStorage;
    uint64_t v47 = v25;
    do
    {
      uint64_t v55 = *(char **)(v26 - 8);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_12124(&qword_26C6D8);
      sub_948A0();
      uint64_t v28 = sub_1FB7B0();
      uint64_t v30 = v29;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v27 = sub_41864(0, v27[2] + 1, 1, v27);
      }
      unint64_t v32 = v27[2];
      unint64_t v31 = v27[3];
      if (v32 >= v31 >> 1) {
        uint64_t v27 = sub_41864((void *)(v31 > 1), v32 + 1, 1, v27);
      }
      v27[2] = v32 + 1;
      uint64_t v33 = &v27[2 * v32];
      v33[4] = v28;
      v33[5] = v30;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v26 += 40;
      --v25;
    }
    while (v25);
    uint64_t v16 = v54;
    swift_bridgeObjectRelease();
    int64_t v23 = v46;
    uint64_t v25 = v47;
  }
  else
  {
    uint64_t v27 = _swiftEmptyArrayStorage;
  }
  static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)((uint64_t)v27, (uint64_t)v23 + *(int *)(v53 + 48));
  swift_bridgeObjectRelease();
  uint64_t v34 = (char **)((char *)v48 + 3 * (void)v52);
  uint64_t v55 = v49;
  uint64_t v56 = v50;
  swift_bridgeObjectRetain();
  v60._countAndFlagsBits = 0x49726F687475612ELL;
  v60._object = (void *)0xEA00000000007344;
  sub_1FB8F0(v60);
  uint64_t v35 = v56;
  *uint64_t v34 = v55;
  v34[1] = (char *)v35;
  if (v25)
  {
    uint64_t v52 = v34;
    swift_bridgeObjectRetain();
    uint64_t v36 = (char **)(v16 + 64);
    uint64_t v37 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v55 = *v36;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_12124(&qword_26C6D8);
      sub_948A0();
      uint64_t v38 = sub_1FB7B0();
      uint64_t v40 = v39;
      uint64_t v41 = v25;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v37 = sub_41864(0, v37[2] + 1, 1, v37);
      }
      unint64_t v43 = v37[2];
      unint64_t v42 = v37[3];
      if (v43 >= v42 >> 1) {
        uint64_t v37 = sub_41864((void *)(v42 > 1), v43 + 1, 1, v37);
      }
      void v37[2] = v43 + 1;
      char v44 = &v37[2 * v43];
      v44[4] = v38;
      v44[5] = v40;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v36 += 5;
      uint64_t v25 = v41 - 1;
    }
    while (v41 != 1);
    swift_bridgeObjectRelease();
    uint64_t v34 = v52;
  }
  else
  {
    uint64_t v37 = _swiftEmptyArrayStorage;
  }
  static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)((uint64_t)v37, (uint64_t)v34 + *(int *)(v53 + 48));
  swift_bridgeObjectRelease();
  return sub_160CB0(v51);
}

uint64_t type metadata accessor for SignerMiddleware()
{
  return self;
}

uint64_t sub_19C304(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_272A70 + dword_272A70);
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *uint64_t v9 = v5;
  v9[1] = sub_B2AB4;
  return v11(a1, a4, a5);
}

uint64_t sub_19C3CC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a3;
  v4[10] = v3;
  v4[7] = a1;
  v4[8] = a2;
  uint64_t v5 = sub_1FABD0();
  v4[11] = v5;
  v4[12] = *(void *)(v5 - 8);
  v4[13] = swift_task_alloc();
  return _swift_task_switch(sub_19C490, 0, 0);
}

uint64_t sub_19C490()
{
  uint64_t v1 = sub_1FABA0();
  v0[14] = v1;
  v0[15] = v2;
  if (v2 >> 60 == 15)
  {
    uint64_t v13 = (uint64_t (*)(uint64_t))(v0[8] + *(int *)v0[8]);
    uint64_t v3 = (void *)swift_task_alloc();
    v0[18] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_19C8AC;
    uint64_t v4 = v0[7];
  }
  else
  {
    uint64_t v5 = v1;
    unint64_t v6 = v2;
    sub_5D64((void *)(v0[10] + 16), *(void *)(v0[10] + 40));
    uint64_t v7 = sub_93E78(v5, v6);
    uint64_t v9 = v8;
    uint64_t v10 = (int *)v0[8];
    (*(void (**)(void, void, void))(v0[12] + 16))(v0[13], v0[7], v0[11]);
    v16._object = (void *)0x8000000000219FE0;
    v15.value._countAndFlagsBits = v7;
    v15.value._object = v9;
    v16._countAndFlagsBits = 0xD000000000000017;
    sub_1FABC0(v15, v16);
    swift_bridgeObjectRelease();
    uint64_t v13 = (uint64_t (*)(uint64_t))((char *)v10 + *v10);
    unint64_t v11 = (void *)swift_task_alloc();
    v0[16] = v11;
    *unint64_t v11 = v0;
    v11[1] = sub_19C6E4;
    uint64_t v4 = v0[13];
  }
  return v13(v4);
}

uint64_t sub_19C6E4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v5 = (void *)*v4;
  v5[2] = v4;
  v5[3] = a1;
  v5[4] = a2;
  v5[5] = a3;
  v5[6] = v3;
  v5[17] = v3;
  swift_task_dealloc();
  if (v3) {
    unint64_t v6 = sub_19C9F0;
  }
  else {
    unint64_t v6 = sub_19C804;
  }
  return _swift_task_switch(v6, 0, 0);
}

uint64_t sub_19C804()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  sub_134480(v0[14], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  uint64_t v5 = v0[3];
  uint64_t v4 = v0[4];
  uint64_t v6 = v0[5];
  swift_task_dealloc();
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  return v7(v5, v4, v6);
}

uint64_t sub_19C8AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *v4;
  swift_task_dealloc();
  uint64_t v9 = swift_task_dealloc();
  uint64_t v12 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v8 + 8);
  if (!v3)
  {
    uint64_t v9 = a1;
    uint64_t v10 = a2;
    uint64_t v11 = a3;
  }
  return v12(v9, v10, v11);
}

uint64_t sub_19C9F0()
{
  uint64_t v2 = v0[12];
  uint64_t v1 = v0[13];
  uint64_t v3 = v0[11];
  sub_134480(v0[14], v0[15]);
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v1, v3);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t Sequence<>.grouped<A>(by:)()
{
  return Sequence<>.grouped<A>(by:)();
}

{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  sub_1FBD00();
  sub_1FB6B0();
  sub_1FB770();
  sub_1FB9F0();
  swift_getWitnessTable();
  sub_1FB3C0();
  uint64_t v0 = sub_1FB710();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Sequence.grouped<A>(by:)()
{
  return Sequence.grouped<A>(by:)();
}

{
  uint64_t v0;

  swift_getAssociatedTypeWitness();
  sub_1FBBA0();
  sub_1FB6B0();
  sub_1FB770();
  sub_1FB9F0();
  swift_getWitnessTable();
  sub_1FB3C0();
  uint64_t v0 = sub_1FB710();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t Sequence.hashedUniquely<A>(by:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = a3;
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v15 = a6;
  uint64_t v16 = a1;
  uint64_t v17 = a2;
  swift_getAssociatedTypeWitness();
  TupleTypeMetadata2 = (char *)swift_getTupleTypeMetadata2();
  uint64_t v18 = sub_956AC((void (*)(char *, char *))sub_19D914, (uint64_t)v11, a3, TupleTypeMetadata2, (uint64_t)&type metadata for Never, a5, (uint64_t)&protocol witness table for Never, v9);
  sub_1FBBA0();
  swift_getWitnessTable();
  return sub_1FB780();
}

uint64_t Sequence.mappedUniquely<A>(by:)()
{
  sub_1FB6D0();
  sub_1FBD00();
  sub_1FB9F0();
  return v1;
}

uint64_t Sequence<>.uniqued()()
{
  swift_getAssociatedTypeWitness();
  sub_1FB6D0();
  sub_1FBD00();
  sub_1FB9F0();
  return v1;
}

void *sub_19CF20(uint64_t a1, void (*a2)(uint64_t), uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  sub_1398A4(a5, a5);
  swift_allocObject();
  uint64_t v11 = sub_1FBB00();
  a2(a1);
  uint64_t v12 = sub_95534(v11);
  if (sub_1FBB90()) {
    uint64_t v13 = (void *)sub_139BBC(v12, a5, a7);
  }
  else {
    uint64_t v13 = _swiftEmptySetSingleton;
  }
  swift_bridgeObjectRelease();
  return v13;
}

uint64_t sub_19D034(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_19D118(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7)
{
  uint64_t v51 = (char *)a3;
  uint64_t v52 = a2;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v13 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v14 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v16 = (char *)&v42 - v15;
  uint64_t v17 = __chkstk_darwin(v14);
  double v45 = (char *)&v42 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v42 - v19;
  uint64_t v50 = v21;
  unint64_t v43 = *(void (**)(char *, uint64_t, uint64_t))(v21 + 16);
  uint64_t v44 = v21 + 16;
  v43((char *)&v42 - v19, a1, a5);
  uint64_t v22 = (void *)swift_allocObject();
  v22[2] = a4;
  v22[3] = a5;
  v22[4] = a6;
  v22[5] = a7;
  int64_t v23 = *(void (**)(char *, char *, uint64_t))(v13 + 16);
  uint64_t v48 = AssociatedTypeWitness;
  long long v49 = v16;
  uint64_t v24 = AssociatedTypeWitness;
  uint64_t v25 = v52;
  v23(v16, v51, v24);
  uint64_t v26 = (void *)swift_allocObject();
  v26[2] = a4;
  v26[3] = a5;
  v26[4] = a6;
  v26[5] = a7;
  v26[6] = sub_19E4B4;
  v26[7] = v22;
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v53 = *v25;
  uint64_t v27 = v53;
  uint64_t *v25 = 0x8000000000000000;
  uint64_t v51 = v20;
  sub_19E424((uint64_t)v20, a5, a7);
  uint64_t v29 = *(void *)(v27 + 16);
  BOOL v30 = (v28 & 1) == 0;
  Swift::Int v31 = v29 + v30;
  if (__OFADD__(v29, v30))
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  char v32 = v28;
  uint64_t v46 = v22;
  sub_1FBBA0();
  uint64_t v48 = a7;
  sub_1FC200();
  BOOL v33 = sub_1FC1E0(isUniquelyReferenced_nonNull_native, v31);
  uint64_t v34 = v53;
  uint64_t v35 = (uint64_t)v51;
  if (v33)
  {
    sub_19E424((uint64_t)v51, a5, v48);
    if ((v32 & 1) != (v36 & 1)) {
      goto LABEL_9;
    }
  }
  uint64_t *v25 = v34;
  swift_bridgeObjectRelease();
  if (v32)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v37 = swift_bridgeObjectRetain();
    uint64_t v53 = ((uint64_t (*)(uint64_t))v26[6])(v37);
    v43(v45, v35, a5);
    sub_1FC1F0();
  }
  uint64_t v38 = a5;
  uint64_t v39 = v35;
  uint64_t v40 = v50;
  swift_bridgeObjectRelease();
  sub_1FBB70();
  (*(void (**)(uint64_t, uint64_t))(v40 + 8))(v39, v38);
  swift_release();
  return swift_release();
}

uint64_t sub_19D4C4()
{
  return sub_1FB3D0();
}

uint64_t sub_19D570@<X0>(uint64_t a1@<X0>, void (*a2)(uint64_t)@<X1>, uint64_t a3@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v7 = a3 + *(int *)(swift_getTupleTypeMetadata2() + 48);
  a2(a1);
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(v7, a1, AssociatedTypeWitness);
}

uint64_t sub_19D650(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v7 = *(void *)(a6 - 8);
  uint64_t v8 = __chkstk_darwin(a1);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v14 - v9;
  v12(v11);
  sub_1FBD00();
  sub_1FBCF0();
  return (*(uint64_t (**)(char *, uint64_t))(v7 + 8))(v10, a6);
}

void *sub_19D778(uint64_t a1)
{
  return sub_19CF20(a1, *(void (**)(uint64_t))(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

void *sub_19D904(uint64_t a1)
{
  return sub_19CF20(a1, *(void (**)(uint64_t))(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_19D914@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  return sub_19D570(a1, *(void (**)(uint64_t))(v2 + 48), a2);
}

uint64_t sub_19D93C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(AssociatedTypeWitness - 8) + 16))(a2, a1, AssociatedTypeWitness);
}

uint64_t sub_19D9C4(uint64_t a1, uint64_t a2)
{
  return sub_19E15C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_19D650);
}

uint64_t sub_19D9F0(uint64_t a1, uint64_t a2, void (*a3)(uint64_t))
{
  return swift_bridgeObjectRelease();
}

uint64_t sub_19DAE4(uint64_t a1, uint64_t *a2, uint64_t a3, uint64_t a4, uint64_t a5, unint64_t a6, uint64_t a7, uint64_t a8)
{
  unint64_t v54 = a6;
  uint64_t v55 = a8;
  uint64_t v56 = a3;
  Swift::String v58 = a2;
  uint64_t v11 = *(void *)(a5 - 8);
  uint64_t v12 = __chkstk_darwin(a1);
  uint64_t v48 = (char *)v47 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v15 = (char *)v47 - v14;
  uint64_t v57 = (uint64_t)v47 - v14;
  uint64_t v17 = v16;
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v19 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v20 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v22 = (char *)v47 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v51 = (char *)v47 - v23;
  uint64_t v53 = v11;
  v47[0] = *(void *)(v11 + 16);
  v47[1] = v11 + 16;
  ((void (*)(char *, uint64_t, uint64_t))v47[0])(v15, a1, a5);
  uint64_t v24 = (void *)swift_allocObject();
  v24[2] = v17;
  v24[3] = a5;
  uint64_t v25 = v17;
  unint64_t v27 = v54;
  uint64_t v26 = v55;
  v24[4] = v54;
  v24[5] = a7;
  v24[6] = v26;
  uint64_t v52 = v19;
  char v28 = *(void (**)(char *, uint64_t, uint64_t))(v19 + 16);
  uint64_t v50 = v22;
  uint64_t v29 = v56;
  uint64_t v56 = AssociatedTypeWitness;
  v28(v22, v29, AssociatedTypeWitness);
  BOOL v30 = (void *)swift_allocObject();
  v30[2] = v25;
  v30[3] = a5;
  v30[4] = v27;
  v30[5] = a7;
  v30[6] = v26;
  v30[7] = sub_19E238;
  v30[8] = v24;
  Swift::Int v31 = v58;
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v59 = *v31;
  uint64_t v33 = v59;
  uint64_t *v31 = 0x8000000000000000;
  unint64_t v54 = sub_19E424(v57, a5, a7);
  uint64_t v35 = *(void *)(v33 + 16);
  BOOL v36 = (v34 & 1) == 0;
  Swift::Int v37 = v35 + v36;
  if (__OFADD__(v35, v36))
  {
    __break(1u);
LABEL_9:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  char v38 = v34;
  uint64_t v49 = sub_1FBD00();
  uint64_t v55 = a7;
  sub_1FC200();
  BOOL v39 = sub_1FC1E0(isUniquelyReferenced_nonNull_native, v37);
  uint64_t v40 = v59;
  uint64_t v41 = v57;
  if (v39)
  {
    sub_19E424(v57, a5, v55);
    if ((v38 & 1) != (v42 & 1)) {
      goto LABEL_9;
    }
  }
  *Swift::String v58 = v40;
  swift_bridgeObjectRelease();
  if (v38)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v44 = swift_bridgeObjectRetain();
    uint64_t v59 = ((uint64_t (*)(uint64_t))v30[7])(v44);
    ((void (*)(char *, uint64_t, uint64_t))v47[0])(v48, v41, a5);
    sub_1FC1F0();
  }
  uint64_t v43 = v56;
  swift_bridgeObjectRelease();
  double v45 = v51;
  sub_1FBCF0();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v45, v43);
  (*(void (**)(uint64_t, uint64_t))(v53 + 8))(v41, a5);
  swift_release();
  return swift_release();
}

uint64_t sub_19DF04()
{
  return sub_1FB3D0();
}

uint64_t sub_19DFB8(uint64_t a1, uint64_t a2)
{
  uint64_t AssociatedTypeWitness = swift_getAssociatedTypeWitness();
  uint64_t v4 = *(void *)(AssociatedTypeWitness - 8);
  uint64_t v5 = __chkstk_darwin(AssociatedTypeWitness);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)&v11 - v8;
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v7, a2, AssociatedTypeWitness);
  sub_1FBD00();
  sub_1FBCF0();
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v9, AssociatedTypeWitness);
}

uint64_t sub_19E110(uint64_t a1, uint64_t a2)
{
  return sub_19DFB8(a1, a2);
}

uint64_t sub_19E130(uint64_t a1, uint64_t a2)
{
  return sub_19E15C(a1, a2, (uint64_t (*)(uint64_t, uint64_t, void, void, void, void, void, void))sub_19D034);
}

uint64_t sub_19E15C(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t, uint64_t, void, void, void, void, void, void))
{
  return a3(a1, a2, v3[6], v3[7], v3[2], v3[3], v3[4], v3[5]);
}

uint64_t sub_19E188()
{
  return sub_19D4C4();
}

uint64_t sub_19E1A8(uint64_t a1, uint64_t a2)
{
  return sub_19D9F0(a1, a2, *(void (**)(uint64_t))(v2 + 56));
}

uint64_t sub_19E1DC()
{
  return sub_19DF04();
}

uint64_t sub_19E200(uint64_t a1)
{
  return sub_19DAE4(a1, *(uint64_t **)(v1 + 56), *(void *)(v1 + 64), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 48));
}

uint64_t sub_19E228()
{
  return _swift_deallocObject(v0, 56, 7);
}

uint64_t sub_19E238()
{
  swift_getAssociatedTypeWitness();

  return sub_1FB6D0();
}

uint64_t sub_19E28C()
{
  return _swift_deallocObject(v0, 72, 7);
}

unint64_t sub_19E29C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v21[1] = a1;
  v21[2] = a4;
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = v4;
  uint64_t v9 = -1 << *(unsigned char *)(v4 + 32);
  unint64_t v11 = v10 & ~v9;
  v21[0] = v4 + 64;
  if ((*(void *)(v4 + 64 + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11))
  {
    uint64_t v12 = ~v9;
    uint64_t v15 = *(void (**)(char *, unint64_t, uint64_t))(v6 + 16);
    uint64_t v13 = v6 + 16;
    uint64_t v14 = v15;
    uint64_t v16 = *(void *)(v13 + 56);
    uint64_t v17 = (void (**)(char *, uint64_t))(v13 - 8);
    do
    {
      uint64_t v18 = v13;
      v14(v8, *(void *)(v22 + 48) + v16 * v11, a3);
      char v19 = sub_1FB7D0();
      (*v17)(v8, a3);
      if (v19) {
        break;
      }
      unint64_t v11 = (v11 + 1) & v12;
      uint64_t v13 = v18;
    }
    while (((*(void *)(v21[0] + ((v11 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v11) & 1) != 0);
  }
  return v11;
}

unint64_t sub_19E424(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB790();

  return sub_19E29C(a1, v6, a2, a3);
}

uint64_t sub_19E480(uint64_t a1)
{
  return sub_19D118(a1, *(uint64_t **)(v1 + 48), *(void *)(v1 + 56), *(void *)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40));
}

uint64_t sub_19E4A4()
{
  return _swift_deallocObject(v0, 48, 7);
}

uint64_t sub_19E4B4()
{
  swift_getAssociatedTypeWitness();

  return sub_1FBB30();
}

uint64_t sub_19E500()
{
  return _swift_deallocObject(v0, 64, 7);
}

void *TabiConfiguration.init(version:packageBaseURLString:packageAssetIDs:mlComputeUnits:eventAggregationConfiguration:genreRecommendationConfiguration:bookSuggestionsConfiguration:bookScoringConfiguration:seedBookRecommendationConfiguration:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, void *a5@<X4>, uint64_t a6@<X5>, char a7@<W6>, uint64_t a8@<X7>, void *a9@<X8>, long long *a10, long long *a11, long long *a12, long long *a13)
{
  sub_A404C(a8, (uint64_t)v45);
  long long v32 = a10[1];
  long long v33 = *a10;
  uint64_t v18 = *((void *)a10 + 5);
  uint64_t v31 = *((void *)a10 + 4);
  long long v35 = a11[1];
  long long v36 = *a11;
  uint64_t v19 = *((void *)a11 + 5);
  uint64_t v34 = *((void *)a11 + 4);
  uint64_t v20 = *((void *)a12 + 3);
  uint64_t v37 = *((void *)a12 + 2);
  long long v40 = *a13;
  long long v38 = *a12;
  long long v39 = a13[1];
  uint64_t v21 = 0x4649434550534E55;
  long long v29 = a13[2];
  long long v30 = a13[3];
  if (a2) {
    uint64_t v21 = a1;
  }
  unint64_t v22 = 0xEB00000000444549;
  uint64_t v23 = *((void *)a13 + 8);
  if (a2) {
    unint64_t v22 = a2;
  }
  unint64_t v24 = 0xD000000000000023;
  if (a4) {
    unint64_t v24 = a3;
  }
  unint64_t v25 = 0x80000000002176B0;
  uint64_t v26 = _swiftEmptyArrayStorage;
  if (a4) {
    unint64_t v25 = a4;
  }
  if (a5) {
    uint64_t v26 = a5;
  }
  uint64_t v27 = a6;
  if (a7) {
    uint64_t v27 = 0;
  }
  __src[0] = v21;
  __src[1] = v22;
  __src[2] = v24;
  __src[3] = v25;
  __src[4] = v26;
  __src[5] = v27;
  sub_A404C((uint64_t)v45, (uint64_t)&__src[6]);
  *(_OWORD *)&__src[29] = v33;
  *(_OWORD *)&__src[31] = v32;
  __src[33] = v31;
  __src[34] = v18;
  *(_OWORD *)&_OWORD __src[35] = v36;
  *(_OWORD *)&__src[37] = v35;
  __src[39] = v34;
  __src[40] = v19;
  *(_OWORD *)&__src[41] = v38;
  __src[43] = v37;
  __src[44] = v20;
  *(_OWORD *)&__src[45] = v40;
  *(_OWORD *)&__src[47] = v39;
  *(_OWORD *)&void __src[49] = v29;
  *(_OWORD *)&__src[51] = v30;
  __src[53] = v23;
  return memcpy(a9, __src, 0x1B0uLL);
}

uint64_t TabiConfiguration.init(with:)()
{
  swift_bridgeObjectRelease();
  sub_19E730();
  swift_allocError();
  *uint64_t v0 = 1;
  return swift_willThrow();
}

unint64_t sub_19E730()
{
  unint64_t result = qword_272A78;
  if (!qword_272A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272A78);
  }
  return result;
}

unint64_t sub_19E784(char a1)
{
  unint64_t result = 0x6E6F6973726576;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x416567616B636170;
      break;
    case 3:
      unint64_t result = 0x7475706D6F436C6DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_19E8CC(char a1)
{
  unint64_t result = 0x6E6F6973726576;
  switch(a1)
  {
    case 1:
      unint64_t result = 0xD000000000000014;
      break;
    case 2:
      unint64_t result = 0x416567616B636170;
      break;
    case 3:
      unint64_t result = 0x7475706D6F436C6DLL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001DLL;
      break;
    case 5:
      unint64_t result = 0xD000000000000020;
      break;
    case 6:
      unint64_t result = 0xD00000000000001CLL;
      break;
    case 7:
      unint64_t result = 0xD000000000000018;
      break;
    case 8:
      unint64_t result = 0xD000000000000023;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_19EA14(unsigned __int8 *a1, char *a2)
{
  return sub_1D9D00(*a1, *a2);
}

Swift::Int sub_19EA20()
{
  return sub_1FC830();
}

uint64_t sub_19EA68()
{
  return sub_1602E8();
}

Swift::Int sub_19EA70()
{
  return sub_1FC830();
}

uint64_t sub_19EAB4@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1A0DB8(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_19EAE4@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_19E784(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_19EB10()
{
  return sub_19E8CC(*v0);
}

uint64_t sub_19EB18@<X0>(uint64_t a1@<X0>, void *a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1A0DB8(a1, a2);
  *a3 = result;
  return result;
}

void sub_19EB40(unsigned char *a1@<X8>)
{
  *a1 = 9;
}

uint64_t sub_19EB4C(uint64_t a1)
{
  unint64_t v2 = sub_19F138();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_19EB88(uint64_t a1)
{
  unint64_t v2 = sub_19F138();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabiConfiguration.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_272A80);
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = *v1;
  uint64_t v54 = v1[2];
  uint64_t v55 = v7;
  uint64_t v8 = v1[3];
  uint64_t v51 = v1[4];
  uint64_t v52 = v1[5];
  uint64_t v53 = v8;
  sub_A404C((uint64_t)(v1 + 6), (uint64_t)v66);
  uint64_t v9 = v1[29];
  uint64_t v10 = v1[31];
  uint64_t v45 = v1[30];
  uint64_t v46 = v10;
  uint64_t v49 = v1[32];
  uint64_t v50 = v9;
  uint64_t v11 = v1[33];
  uint64_t v47 = v1[34];
  uint64_t v48 = v11;
  uint64_t v12 = v1[36];
  uint64_t v39 = v1[35];
  uint64_t v40 = v12;
  uint64_t v13 = v1[37];
  uint64_t v14 = v1[38];
  uint64_t v43 = v1[39];
  uint64_t v44 = v14;
  uint64_t v15 = v1[40];
  uint64_t v41 = v13;
  uint64_t v42 = v15;
  uint64_t v16 = v1[42];
  uint64_t v35 = v1[41];
  uint64_t v36 = v16;
  uint64_t v17 = v1[43];
  uint64_t v37 = v1[44];
  uint64_t v38 = v17;
  uint64_t v18 = v1[46];
  uint64_t v26 = v1[45];
  uint64_t v27 = v18;
  uint64_t v19 = v1[47];
  uint64_t v33 = v1[48];
  uint64_t v34 = v19;
  uint64_t v20 = v1[49];
  uint64_t v31 = v1[50];
  uint64_t v32 = v20;
  uint64_t v21 = v1[51];
  uint64_t v29 = v1[52];
  uint64_t v30 = v21;
  uint64_t v28 = v1[53];
  sub_5D64(a1, a1[3]);
  sub_19F138();
  sub_1FC870();
  LOBYTE(v57) = 0;
  uint64_t v22 = v56;
  sub_1FC4E0();
  if (!v22)
  {
    uint64_t v23 = v51;
    uint64_t v24 = v50;
    LOBYTE(v57) = 1;
    sub_1FC4E0();
    uint64_t v57 = v23;
    char v67 = 2;
    sub_12124(&qword_26C6D8);
    sub_15BA44(&qword_26C6E0);
    sub_1FC530();
    LOBYTE(v57) = 3;
    sub_1FC520();
    sub_A404C((uint64_t)v66, (uint64_t)&v57);
    char v67 = 4;
    sub_12124(&qword_26DE08);
    sub_19F2DC(&qword_272A90, &qword_26DE08, (void (*)(void))sub_19F18C);
    sub_1FC530();
    uint64_t v57 = v24;
    uint64_t v58 = v45;
    uint64_t v59 = v46;
    uint64_t v60 = v49;
    uint64_t v61 = v48;
    uint64_t v62 = v47;
    char v67 = 5;
    sub_12124(&qword_272AA0);
    sub_19F2DC(&qword_272AA8, &qword_272AA0, (void (*)(void))sub_19F1E0);
    sub_1FC530();
    uint64_t v57 = v39;
    uint64_t v58 = v40;
    uint64_t v59 = v41;
    uint64_t v60 = v44;
    uint64_t v61 = v43;
    uint64_t v62 = v42;
    char v67 = 6;
    sub_12124(&qword_272AB8);
    sub_19F2DC(&qword_272AC0, &qword_272AB8, (void (*)(void))sub_19F234);
    sub_1FC530();
    uint64_t v57 = v35;
    uint64_t v58 = v36;
    uint64_t v59 = v38;
    uint64_t v60 = v37;
    char v67 = 7;
    sub_12124(&qword_272AD0);
    sub_19F2DC(&qword_272AD8, &qword_272AD0, (void (*)(void))sub_19F288);
    sub_1FC530();
    uint64_t v57 = v26;
    uint64_t v58 = v27;
    uint64_t v59 = v34;
    uint64_t v60 = v33;
    uint64_t v61 = v32;
    uint64_t v62 = v31;
    uint64_t v63 = v30;
    uint64_t v64 = v29;
    uint64_t v65 = v28;
    char v67 = 8;
    sub_12124(&qword_272AE8);
    sub_19F2DC(&qword_272AF0, &qword_272AE8, (void (*)(void))sub_19F354);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v6, v3);
}

unint64_t sub_19F138()
{
  unint64_t result = qword_272A88;
  if (!qword_272A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272A88);
  }
  return result;
}

unint64_t sub_19F18C()
{
  unint64_t result = qword_272A98;
  if (!qword_272A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272A98);
  }
  return result;
}

unint64_t sub_19F1E0()
{
  unint64_t result = qword_272AB0;
  if (!qword_272AB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272AB0);
  }
  return result;
}

unint64_t sub_19F234()
{
  unint64_t result = qword_272AC8;
  if (!qword_272AC8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272AC8);
  }
  return result;
}

unint64_t sub_19F288()
{
  unint64_t result = qword_272AE0;
  if (!qword_272AE0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272AE0);
  }
  return result;
}

uint64_t sub_19F2DC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_19F354()
{
  unint64_t result = qword_272AF8;
  if (!qword_272AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272AF8);
  }
  return result;
}

uint64_t TabiConfiguration.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v52 = sub_12124(&qword_272B00);
  uint64_t v5 = *(void *)(v52 - 8);
  __chkstk_darwin(v52);
  uint64_t v7 = (char *)&v27 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_19F138();
  sub_1FC850();
  if (!v2)
  {
    uint64_t v51 = a2;
    LOBYTE(v53[0]) = 0;
    uint64_t v8 = sub_1FC310();
    unint64_t v10 = v9;
    LOBYTE(v53[0]) = 1;
    uint64_t v11 = v5;
    uint64_t v49 = sub_1FC310();
    unint64_t v50 = v12;
    sub_12124(&qword_26C6D8);
    LOBYTE(v53[0]) = 2;
    sub_15BA44(&qword_26C708);
    sub_1FC360();
    uint64_t v13 = (void *)v76[25];
    LOBYTE(v53[0]) = 3;
    uint64_t v14 = sub_1FC350();
    int v46 = v15;
    uint64_t v47 = v14;
    uint64_t v48 = v13;
    v75[191] = 4;
    sub_19FA84();
    sub_1FC360();
    sub_A404C((uint64_t)v76, (uint64_t)v75);
    LOBYTE(v53[0]) = 5;
    sub_19FAD8();
    sub_1FC360();
    uint64_t v41 = v69;
    uint64_t v42 = v70;
    uint64_t v16 = v72;
    uint64_t v45 = v73;
    uint64_t v43 = v71;
    uint64_t v44 = v74;
    LOBYTE(v53[0]) = 6;
    sub_19FB98();
    sub_1FC360();
    uint64_t v40 = v16;
    uint64_t v17 = v63;
    uint64_t v35 = v64;
    uint64_t v36 = v65;
    uint64_t v39 = v67;
    uint64_t v37 = v66;
    uint64_t v38 = v68;
    LOBYTE(v53[0]) = 7;
    sub_19FBEC();
    sub_1FC360();
    uint64_t v33 = v59;
    uint64_t v34 = v17;
    uint64_t v31 = v61;
    uint64_t v32 = v60;
    uint64_t v18 = v62;
    LOBYTE(v53[0]) = 8;
    sub_19FC40();
    sub_1FC360();
    long long v29 = v55;
    long long v30 = v54;
    long long v27 = v57;
    long long v28 = v56;
    uint64_t v20 = v58;
    uint64_t v21 = 0x4649434550534E55;
    if (v10) {
      uint64_t v21 = v8;
    }
    unint64_t v22 = 0xEB00000000444549;
    if (v10) {
      unint64_t v22 = v10;
    }
    unint64_t v23 = 0xD000000000000023;
    if (v50) {
      unint64_t v23 = v49;
    }
    unint64_t v24 = 0x80000000002176B0;
    unint64_t v25 = _swiftEmptyArrayStorage;
    if (v50) {
      unint64_t v24 = v50;
    }
    if (v48) {
      unint64_t v25 = v48;
    }
    v53[0] = v21;
    v53[1] = v22;
    uint64_t v26 = v47;
    if (v46) {
      uint64_t v26 = 0;
    }
    v53[2] = v23;
    v53[3] = v24;
    v53[4] = v25;
    v53[5] = v26;
    sub_A404C((uint64_t)v75, (uint64_t)&v53[6]);
    v53[29] = v41;
    v53[30] = v42;
    v53[31] = v43;
    v53[32] = v40;
    v53[33] = v45;
    v53[34] = v44;
    v53[35] = v34;
    v53[36] = v35;
    v53[37] = v36;
    v53[38] = v37;
    v53[39] = v39;
    v53[40] = v38;
    v53[41] = v33;
    v53[42] = v32;
    v53[43] = v31;
    v53[44] = v18;
    *(_OWORD *)&v53[45] = v30;
    *(_OWORD *)&v53[47] = v29;
    *(_OWORD *)&v53[49] = v28;
    *(_OWORD *)&v53[51] = v27;
    v53[53] = v20;
    (*(void (**)(char *, uint64_t))(v11 + 8))(v7, v52);
    memcpy(v51, v53, 0x1B0uLL);
  }
  return sub_1264C((uint64_t)a1);
}

unint64_t sub_19FA84()
{
  unint64_t result = qword_272B08;
  if (!qword_272B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B08);
  }
  return result;
}

unint64_t sub_19FAD8()
{
  unint64_t result = qword_272B10;
  if (!qword_272B10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B10);
  }
  return result;
}

uint64_t *sub_19FB2C(uint64_t *a1)
{
  sub_11FF4(*a1, a1[1], a1[2], a1[3], a1[4], a1[5], a1[6], a1[7], a1[8], a1[9], a1[10], a1[11], a1[12], a1[13], a1[14], a1[15], a1[16], a1[17], a1[18],
    a1[19],
    a1[20],
    a1[21]);
  return a1;
}

unint64_t sub_19FB98()
{
  unint64_t result = qword_272B18;
  if (!qword_272B18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B18);
  }
  return result;
}

unint64_t sub_19FBEC()
{
  unint64_t result = qword_272B20;
  if (!qword_272B20)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B20);
  }
  return result;
}

unint64_t sub_19FC40()
{
  unint64_t result = qword_272B28;
  if (!qword_272B28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B28);
  }
  return result;
}

uint64_t sub_19FC94@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return TabiConfiguration.init(from:)(a1, a2);
}

uint64_t sub_19FCAC(void *a1)
{
  return TabiConfiguration.encode(to:)(a1);
}

uint64_t TabiConfiguration.mlComputeUnits.getter()
{
  if ((unint64_t)(*(void *)(v0 + 40) - 1) >= 3) {
    return 0;
  }
  else {
    return *(void *)(v0 + 40);
  }
}

unint64_t sub_19FCE4()
{
  unint64_t result = qword_272B30;
  if (!qword_272B30)
  {
    type metadata accessor for TabiPackage();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B30);
  }
  return result;
}

uint64_t sub_19FD40()
{
  return sub_1FB480();
}

uint64_t destroy for TabiConfiguration(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[27])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[30])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[38])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  uint64_t result = a1[48];
  if (result)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t initializeWithCopy for TabiConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  uint64_t v7 = *(void *)(a2 + 216);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v7)
  {
    *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
    *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
    *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
    *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    uint64_t v8 = *(void *)(a2 + 224);
    *(void *)(a1 + 216) = v7;
    *(void *)(a1 + 224) = v8;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = *(void *)(a2 + 240);
    if (v9) {
      goto LABEL_3;
    }
LABEL_6:
    long long v20 = *(_OWORD *)(a2 + 248);
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 248) = v20;
    *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
    uint64_t v12 = *(void *)(a2 + 304);
    if (v12) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  long long v15 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v15;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  long long v16 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v16;
  long long v17 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v17;
  long long v18 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v18;
  long long v19 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v19;
  uint64_t v9 = *(void *)(a2 + 240);
  if (!v9) {
    goto LABEL_6;
  }
LABEL_3:
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = v9;
  uint64_t v10 = *(void *)(a2 + 256);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = v10;
  uint64_t v11 = *(void *)(a2 + 272);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = v11;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v12 = *(void *)(a2 + 304);
  if (v12)
  {
LABEL_4:
    *(void *)(a1 + 280) = *(void *)(a2 + 280);
    *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
    uint64_t v13 = *(void *)(a2 + 312);
    uint64_t v14 = *(void *)(a2 + 320);
    *(void *)(a1 + 304) = v12;
    *(void *)(a1 + 312) = v13;
    *(void *)(a1 + 320) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
LABEL_7:
  long long v21 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v21;
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
LABEL_8:
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  uint64_t v22 = *(void *)(a2 + 384);
  swift_bridgeObjectRetain();
  if (v22)
  {
    *(void *)(a1 + 360) = *(void *)(a2 + 360);
    uint64_t v23 = *(void *)(a2 + 392);
    uint64_t v24 = *(void *)(a2 + 400);
    *(void *)(a1 + 384) = v22;
    *(void *)(a1 + 392) = v23;
    uint64_t v25 = *(void *)(a2 + 408);
    uint64_t v26 = *(void *)(a2 + 416);
    *(void *)(a1 + 400) = v24;
    *(void *)(a1 + 408) = v25;
    *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
    uint64_t v27 = *(void *)(a2 + 424);
    *(void *)(a1 + 416) = v26;
    *(void *)(a1 + 424) = v27;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v28 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v28;
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    long long v29 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v29;
  }
  return a1;
}

void *assignWithCopy for TabiConfiguration(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[5] = a2[5];
  uint64_t v4 = a1 + 6;
  uint64_t v5 = (long long *)(a2 + 6);
  uint64_t v6 = a2[27];
  if (a1[27])
  {
    if (v6)
    {
      a1[6] = a2[6];
      a1[7] = a2[7];
      a1[8] = a2[8];
      a1[9] = a2[9];
      a1[10] = a2[10];
      a1[11] = a2[11];
      a1[12] = a2[12];
      a1[13] = a2[13];
      a1[14] = a2[14];
      a1[15] = a2[15];
      a1[16] = a2[16];
      a1[17] = a2[17];
      a1[18] = a2[18];
      a1[19] = a2[19];
      a1[20] = a2[20];
      a1[21] = a2[21];
      a1[22] = a2[22];
      a1[23] = a2[23];
      a1[24] = a2[24];
      a1[25] = a2[25];
      a1[26] = a2[26];
      a1[27] = a2[27];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[28] = a2[28];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF00((uint64_t)(a1 + 6));
      long long v13 = *((_OWORD *)a2 + 6);
      long long v15 = *v5;
      long long v14 = *((_OWORD *)a2 + 4);
      *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
      *((_OWORD *)a1 + 6) = v13;
      *uint64_t v4 = v15;
      *((_OWORD *)a1 + 4) = v14;
      long long v16 = *((_OWORD *)a2 + 10);
      long long v18 = *((_OWORD *)a2 + 7);
      long long v17 = *((_OWORD *)a2 + 8);
      *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
      *((_OWORD *)a1 + 10) = v16;
      *((_OWORD *)a1 + 7) = v18;
      *((_OWORD *)a1 + 8) = v17;
      long long v20 = *((_OWORD *)a2 + 12);
      long long v19 = *((_OWORD *)a2 + 13);
      long long v21 = *((_OWORD *)a2 + 11);
      a1[28] = a2[28];
      *((_OWORD *)a1 + 12) = v20;
      *((_OWORD *)a1 + 13) = v19;
      *((_OWORD *)a1 + 11) = v21;
    }
  }
  else if (v6)
  {
    a1[6] = a2[6];
    a1[7] = a2[7];
    a1[8] = a2[8];
    *(_OWORD *)(a1 + 9) = *(_OWORD *)(a2 + 9);
    long long v7 = *(_OWORD *)(a2 + 11);
    long long v8 = *(_OWORD *)(a2 + 13);
    long long v9 = *(_OWORD *)(a2 + 15);
    *(_OWORD *)(a1 + 17) = *(_OWORD *)(a2 + 17);
    *(_OWORD *)(a1 + 15) = v9;
    *(_OWORD *)(a1 + 13) = v8;
    *(_OWORD *)(a1 + 11) = v7;
    long long v10 = *(_OWORD *)(a2 + 19);
    long long v11 = *(_OWORD *)(a2 + 21);
    long long v12 = *(_OWORD *)(a2 + 23);
    *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
    *(_OWORD *)(a1 + 23) = v12;
    *(_OWORD *)(a1 + 21) = v11;
    *(_OWORD *)(a1 + 19) = v10;
    a1[27] = a2[27];
    a1[28] = a2[28];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v22 = *v5;
    long long v23 = *((_OWORD *)a2 + 4);
    long long v24 = *((_OWORD *)a2 + 6);
    *((_OWORD *)a1 + 5) = *((_OWORD *)a2 + 5);
    *((_OWORD *)a1 + 6) = v24;
    *uint64_t v4 = v22;
    *((_OWORD *)a1 + 4) = v23;
    long long v25 = *((_OWORD *)a2 + 7);
    long long v26 = *((_OWORD *)a2 + 8);
    long long v27 = *((_OWORD *)a2 + 10);
    *((_OWORD *)a1 + 9) = *((_OWORD *)a2 + 9);
    *((_OWORD *)a1 + 10) = v27;
    *((_OWORD *)a1 + 7) = v25;
    *((_OWORD *)a1 + 8) = v26;
    long long v28 = *((_OWORD *)a2 + 11);
    long long v29 = *((_OWORD *)a2 + 12);
    long long v30 = *((_OWORD *)a2 + 13);
    a1[28] = a2[28];
    *((_OWORD *)a1 + 12) = v29;
    *((_OWORD *)a1 + 13) = v30;
    *((_OWORD *)a1 + 11) = v28;
  }
  uint64_t v31 = a1 + 29;
  uint64_t v32 = a2 + 29;
  uint64_t v33 = a2[30];
  if (a1[30])
  {
    if (v33)
    {
      a1[29] = a2[29];
      a1[30] = a2[30];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[31] = a2[31];
      a1[32] = a2[32];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[33] = a2[33];
      a1[34] = a2[34];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF54((uint64_t)(a1 + 29));
      long long v35 = *(_OWORD *)(a2 + 31);
      long long v34 = *(_OWORD *)(a2 + 33);
      _OWORD *v31 = *v32;
      *(_OWORD *)(a1 + 31) = v35;
      *(_OWORD *)(a1 + 33) = v34;
    }
  }
  else if (v33)
  {
    a1[29] = a2[29];
    a1[30] = a2[30];
    a1[31] = a2[31];
    a1[32] = a2[32];
    a1[33] = a2[33];
    a1[34] = a2[34];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v36 = *v32;
    long long v37 = *(_OWORD *)(a2 + 33);
    *(_OWORD *)(a1 + 31) = *(_OWORD *)(a2 + 31);
    *(_OWORD *)(a1 + 33) = v37;
    _OWORD *v31 = v36;
  }
  uint64_t v38 = a1 + 35;
  uint64_t v39 = a2 + 35;
  uint64_t v40 = a2[38];
  if (a1[38])
  {
    if (v40)
    {
      a1[35] = a2[35];
      a1[36] = a2[36];
      a1[37] = a2[37];
      a1[38] = a2[38];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[39] = a2[39];
      a1[40] = a2[40];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EFA8((uint64_t)(a1 + 35));
      long long v42 = *(_OWORD *)(a2 + 37);
      long long v41 = *(_OWORD *)(a2 + 39);
      _OWORD *v38 = *v39;
      *(_OWORD *)(a1 + 37) = v42;
      *(_OWORD *)(a1 + 39) = v41;
    }
  }
  else if (v40)
  {
    a1[35] = a2[35];
    a1[36] = a2[36];
    a1[37] = a2[37];
    a1[38] = a2[38];
    a1[39] = a2[39];
    a1[40] = a2[40];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v43 = *v39;
    long long v44 = *(_OWORD *)(a2 + 39);
    *(_OWORD *)(a1 + 37) = *(_OWORD *)(a2 + 37);
    *(_OWORD *)(a1 + 39) = v44;
    _OWORD *v38 = v43;
  }
  a1[41] = a2[41];
  a1[42] = a2[42];
  a1[43] = a2[43];
  a1[44] = a2[44];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v45 = a1 + 45;
  int v46 = a2 + 45;
  uint64_t v47 = a2[48];
  if (a1[48])
  {
    if (v47)
    {
      a1[45] = a2[45];
      a1[46] = a2[46];
      a1[47] = a2[47];
      a1[48] = a2[48];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[49] = a2[49];
      a1[50] = a2[50];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[51] = a2[51];
      a1[52] = a2[52];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      a1[53] = a2[53];
    }
    else
    {
      sub_8EFFC((uint64_t)(a1 + 45));
      *uint64_t v45 = *v46;
      long long v49 = *(_OWORD *)(a2 + 49);
      long long v48 = *(_OWORD *)(a2 + 51);
      long long v50 = *(_OWORD *)(a2 + 47);
      a1[53] = a2[53];
      *(_OWORD *)(a1 + 49) = v49;
      *(_OWORD *)(a1 + 51) = v48;
      *(_OWORD *)(a1 + 47) = v50;
    }
  }
  else if (v47)
  {
    a1[45] = a2[45];
    a1[46] = a2[46];
    a1[47] = a2[47];
    a1[48] = a2[48];
    a1[49] = a2[49];
    a1[50] = a2[50];
    a1[51] = a2[51];
    a1[52] = a2[52];
    a1[53] = a2[53];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v45 = *v46;
    long long v51 = *(_OWORD *)(a2 + 47);
    long long v52 = *(_OWORD *)(a2 + 49);
    long long v53 = *(_OWORD *)(a2 + 51);
    a1[53] = a2[53];
    *(_OWORD *)(a1 + 49) = v52;
    *(_OWORD *)(a1 + 51) = v53;
    *(_OWORD *)(a1 + 47) = v51;
  }
  return a1;
}

void *initializeWithTake for TabiConfiguration(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x1B0uLL);
}

uint64_t assignWithTake for TabiConfiguration(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  if (*(void *)(a1 + 216))
  {
    uint64_t v6 = *(void *)(a2 + 216);
    if (v6)
    {
      *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
      *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
      *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
      *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
      *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
      *(_OWORD *)(a1 + 184) = *(_OWORD *)(a2 + 184);
      *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
      *(void *)(a1 + 216) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_8EF00(a1 + 48);
  }
  long long v7 = *(_OWORD *)(a2 + 192);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(_OWORD *)(a1 + 192) = v7;
  *(_OWORD *)(a1 + 208) = *(_OWORD *)(a2 + 208);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v8;
  long long v9 = *(_OWORD *)(a2 + 160);
  *(_OWORD *)(a1 + 144) = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 160) = v9;
  long long v10 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 48) = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 64) = v10;
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 80) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
LABEL_6:
  if (*(void *)(a1 + 240))
  {
    uint64_t v12 = *(void *)(a2 + 240);
    if (v12)
    {
      *(void *)(a1 + 232) = *(void *)(a2 + 232);
      *(void *)(a1 + 240) = v12;
      swift_bridgeObjectRelease();
      uint64_t v13 = *(void *)(a2 + 256);
      *(void *)(a1 + 248) = *(void *)(a2 + 248);
      *(void *)(a1 + 256) = v13;
      swift_bridgeObjectRelease();
      uint64_t v14 = *(void *)(a2 + 272);
      *(void *)(a1 + 264) = *(void *)(a2 + 264);
      *(void *)(a1 + 272) = v14;
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_8EF54(a1 + 232);
  }
  long long v15 = *(_OWORD *)(a2 + 248);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = v15;
  *(_OWORD *)(a1 + 264) = *(_OWORD *)(a2 + 264);
LABEL_11:
  if (*(void *)(a1 + 304))
  {
    uint64_t v16 = *(void *)(a2 + 304);
    if (v16)
    {
      *(void *)(a1 + 280) = *(void *)(a2 + 280);
      *(_OWORD *)(a1 + 288) = *(_OWORD *)(a2 + 288);
      *(void *)(a1 + 304) = v16;
      swift_bridgeObjectRelease();
      uint64_t v17 = *(void *)(a2 + 320);
      *(void *)(a1 + 312) = *(void *)(a2 + 312);
      *(void *)(a1 + 320) = v17;
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_8EFA8(a1 + 280);
  }
  long long v18 = *(_OWORD *)(a2 + 296);
  *(_OWORD *)(a1 + 280) = *(_OWORD *)(a2 + 280);
  *(_OWORD *)(a1 + 296) = v18;
  *(_OWORD *)(a1 + 312) = *(_OWORD *)(a2 + 312);
LABEL_16:
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 384))
  {
LABEL_20:
    long long v22 = *(_OWORD *)(a2 + 408);
    *(_OWORD *)(a1 + 392) = *(_OWORD *)(a2 + 392);
    *(_OWORD *)(a1 + 408) = v22;
    *(void *)(a1 + 424) = *(void *)(a2 + 424);
    long long v23 = *(_OWORD *)(a2 + 376);
    *(_OWORD *)(a1 + 360) = *(_OWORD *)(a2 + 360);
    *(_OWORD *)(a1 + 376) = v23;
    return a1;
  }
  uint64_t v19 = *(void *)(a2 + 384);
  if (!v19)
  {
    sub_8EFFC(a1 + 360);
    goto LABEL_20;
  }
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(void *)(a1 + 384) = v19;
  swift_bridgeObjectRelease();
  uint64_t v20 = *(void *)(a2 + 400);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = v20;
  swift_bridgeObjectRelease();
  uint64_t v21 = *(void *)(a2 + 416);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = v21;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  return a1;
}

uint64_t getEnumTagSinglePayload for TabiConfiguration(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 432)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for TabiConfiguration(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 424) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 432) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 432) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiConfiguration()
{
  return &type metadata for TabiConfiguration;
}

uint64_t getEnumTagSinglePayload for TabiConfiguration.CodingKeys(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF8) {
    goto LABEL_17;
  }
  if (a2 + 8 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 8) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 8;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 8;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 9;
  int v8 = v6 - 9;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for TabiConfiguration.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 8 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 8) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF8) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF7)
  {
    unsigned int v6 = ((a2 - 248) >> 8) + 1;
    *uint64_t result = a2 + 8;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0B1CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 8;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiConfiguration.CodingKeys()
{
  return &type metadata for TabiConfiguration.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for TabiConfiguration.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A0C20);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiConfiguration.Errors()
{
  return &type metadata for TabiConfiguration.Errors;
}

unint64_t sub_1A0C5C()
{
  unint64_t result = qword_272B38;
  if (!qword_272B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B38);
  }
  return result;
}

unint64_t sub_1A0CB4()
{
  unint64_t result = qword_272B40;
  if (!qword_272B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B40);
  }
  return result;
}

unint64_t sub_1A0D0C()
{
  unint64_t result = qword_272B48;
  if (!qword_272B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B48);
  }
  return result;
}

unint64_t sub_1A0D64()
{
  unint64_t result = qword_272B50;
  if (!qword_272B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B50);
  }
  return result;
}

uint64_t sub_1A0DB8(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_2571E0;
  v6._object = a2;
  unint64_t v4 = sub_1FC2D0(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 9) {
    return 9;
  }
  else {
    return v4;
  }
}

uint64_t sub_1A0E04(uint64_t a1)
{
  return sub_1A0EDC(a1, 0xD000000000000010, 0x800000000021A090, &qword_272B58);
}

uint64_t sub_1A0E28(uint64_t a1)
{
  return sub_1A0EDC(a1, 0xD000000000000016, 0x800000000021A000, &qword_272B60);
}

uint64_t sub_1A0E4C(uint64_t a1)
{
  return sub_1A0EDC(a1, 0xD000000000000022, 0x800000000021A060, &qword_272B68);
}

uint64_t sub_1A0E70(uint64_t a1)
{
  return sub_1A0EDC(a1, 0xD00000000000001ELL, 0x800000000021A020, &qword_272B70);
}

uint64_t sub_1A0E94(uint64_t a1)
{
  return sub_1A0EDC(a1, 0xD000000000000016, 0x800000000021A040, &qword_272B78);
}

uint64_t sub_1A0EB8(uint64_t a1)
{
  return sub_1A0EDC(a1, 0xD000000000000024, 0x800000000021A0B0, &qword_272B80);
}

uint64_t sub_1A0EDC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  id v5 = [self mainBundle];
  id v6 = [v5 bundleIdentifier];

  if (v6)
  {
    sub_1FB810();
  }
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  *a4 = result;
  return result;
}

BooksPersonalization::CollectionSource_optional __swiftcall CollectionSource.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  Swift::OpaquePointer v3 = v1;
  v4._rawValue = &off_2572D8;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 5;
  if (v5 < 5) {
    char v7 = v5;
  }
  *Swift::OpaquePointer v3 = v7;
  return result;
}

_UNKNOWN **static CollectionSource.allCases.getter()
{
  return &off_257370;
}

unint64_t CollectionSource.rawValue.getter()
{
  unint64_t result = 0xD000000000000013;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x495041616964656DLL;
      break;
    case 2:
      unint64_t result = 0x747369486B6F6F62;
      break;
    case 3:
      unint64_t result = 0xD000000000000022;
      break;
    case 4:
      unint64_t result = 1768055156;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1A10C8(unsigned __int8 *a1, char *a2)
{
  return sub_1D9F98(*a1, *a2);
}

unint64_t sub_1A10D8()
{
  unint64_t result = qword_272B88;
  if (!qword_272B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B88);
  }
  return result;
}

Swift::Int sub_1A112C()
{
  return sub_7E1E4();
}

uint64_t sub_1A1134()
{
  return sub_160464();
}

Swift::Int sub_1A113C()
{
  return sub_114D20();
}

BooksPersonalization::CollectionSource_optional sub_1A1144(Swift::String *a1)
{
  return CollectionSource.init(rawValue:)(*a1);
}

unint64_t sub_1A1150@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = CollectionSource.rawValue.getter();
  *a1 = result;
  a1[1] = v3;
  return result;
}

unint64_t sub_1A117C()
{
  unint64_t result = qword_272B90;
  if (!qword_272B90)
  {
    sub_121C4(&qword_272B98);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272B90);
  }
  return result;
}

void sub_1A11D8(void *a1@<X8>)
{
  *a1 = &off_257398;
}

unint64_t sub_1A11EC()
{
  unint64_t result = qword_272BA0;
  if (!qword_272BA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272BA0);
  }
  return result;
}

uint64_t sub_1A1240()
{
  return sub_1FBA60();
}

uint64_t sub_1A12A0()
{
  return sub_1FBA40();
}

unsigned char *storeEnumTagSinglePayload for CollectionSource(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *unint64_t result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A13BCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for CollectionSource()
{
  return &type metadata for CollectionSource;
}

uint64_t sub_1A13F4(uint64_t a1, uint64_t a2, uint64_t a3, unsigned char *a4)
{
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(v5 + 2720) = *(_OWORD *)a2;
  *(_OWORD *)(v5 + 2736) = v6;
  long long v7 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(v5 + 2752) = *(_OWORD *)(a2 + 32);
  *(void *)(v5 + 2712) = v4;
  *(void *)(v5 + 2704) = a3;
  *(void *)(v5 + 2696) = a1;
  *(_OWORD *)(v5 + 2768) = v7;
  *(void *)(v5 + 2784) = *(void *)(a2 + 64);
  *(void *)(v5 + 2985) = *(void *)(a3 + 32);
  *(unsigned char *)(v5 + 2993) = *(unsigned char *)(a3 + 40);
  *(unsigned char *)(v5 + 2994) = *(unsigned char *)(a3 + 48);
  *(unsigned char *)(v5 + 2995) = *(unsigned char *)(a3 + 49);
  *(void *)(v5 + 2792) = *(void *)(a3 + 56);
  *(_WORD *)(v5 + 2996) = *(_WORD *)(a3 + 64);
  uint64_t v8 = *(void *)(a3 + 80);
  *(void *)(v5 + 2800) = *(void *)(a3 + 72);
  *(void *)(v5 + 2808) = v8;
  *(unsigned char *)(v5 + 2998) = *a4;
  return _swift_task_switch(sub_1A1484, 0, 0);
}

uint64_t sub_1A1484()
{
  int v3 = (uint64_t (*)(uint64_t))((char *)&dword_270248 + dword_270248);
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 2816) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1A153C;
  return v3(v0 + 2984);
}

uint64_t sub_1A153C()
{
  *(void *)(*(void *)v1 + 2824) = v0;
  swift_task_dealloc();
  if (v0) {
    int v2 = sub_1A2F28;
  }
  else {
    int v2 = sub_1A1650;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1A1650()
{
  uint64_t v160 = v0;
  int v1 = *((unsigned __int8 *)v0 + 2984);
  if (v1 == 4)
  {
    unint64_t v2 = v0[346];
    switch(v2 >> 61)
    {
      case 1uLL:
        LODWORD(v23) = *((unsigned __int8 *)v0 + 2998);
        if (v23 == 5) {
          unint64_t v23 = 0x401030200uLL >> (8 * *((unsigned char *)v0 + 2985));
        }
        uint64_t v24 = v0[341];
        *((unsigned char *)v0 + 2999) = v23;
        uint64_t v25 = v0[353];
        uint64_t v26 = v0[339];
        LOBYTE(v159[0]) = v23;
        sub_1A3198((unsigned __int8 *)v159, v26, (uint64_t)(v0 + 301));
        if (v25) {
          goto LABEL_44;
        }
        __int16 v27 = *(_WORD *)((char *)v0 + 2985);
        uint64_t v28 = v0[342];
        char v29 = *((unsigned char *)v0 + 2720);
        uint64_t v30 = v0[304];
        uint64_t v31 = v0[305];
        sub_5D64(v0 + 301, v30);
        *((unsigned char *)v0 + 2648) = v29 & 1;
        v0[332] = v24;
        v0[333] = v28;
        *((_WORD *)v0 + 1491) = v27;
        BOOL v153 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v31 + 8) + **(int **)(v31 + 8));
        uint64_t v32 = (void *)swift_task_alloc();
        v0[354] = v32;
        void *v32 = v0;
        v32[1] = sub_1A2580;
        uint64_t v33 = v0 + 331;
        long long v34 = (void *)((char *)v0 + 2982);
        uint64_t v35 = v30;
        uint64_t v36 = v31;
        long long v37 = v153;
        goto LABEL_52;
      case 2uLL:
        LODWORD(v38) = *((unsigned __int8 *)v0 + 2998);
        if (v38 == 5) {
          unint64_t v38 = 0x401030200uLL >> (8 * *((unsigned char *)v0 + 2988));
        }
        uint64_t v39 = v0[341];
        *((unsigned char *)v0 + 3000) = v38;
        uint64_t v40 = v0[353];
        uint64_t v41 = v0[339];
        LOBYTE(v159[0]) = v38;
        sub_1A3264((unsigned __int8 *)v159, v41, (uint64_t)(v0 + 316));
        if (v40) {
          goto LABEL_44;
        }
        __int16 v42 = *((_WORD *)v0 + 1494);
        uint64_t v43 = v0[342];
        char v44 = *((unsigned char *)v0 + 2720);
        uint64_t v45 = v0[319];
        uint64_t v46 = v0[320];
        sub_5D64(v0 + 316, v45);
        *((unsigned char *)v0 + 2624) = v44 & 1;
        v0[329] = v39;
        v0[330] = v43;
        *((_WORD *)v0 + 1488) = v42;
        uint64_t v148 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v46 + 8) + **(int **)(v46 + 8));
        uint64_t v47 = (void *)swift_task_alloc();
        v0[357] = v47;
        *uint64_t v47 = v0;
        v47[1] = sub_1A271C;
        uint64_t v33 = v0 + 328;
        long long v34 = v0 + 372;
        uint64_t v35 = v45;
        uint64_t v36 = v46;
        long long v37 = v148;
        goto LABEL_52;
      case 3uLL:
        LODWORD(v48) = *((unsigned __int8 *)v0 + 2998);
        if (v48 == 5) {
          unint64_t v48 = 0x401030200uLL >> (8 * *((unsigned char *)v0 + 2990));
        }
        uint64_t v49 = v0[341];
        *((unsigned char *)v0 + 3001) = v48;
        uint64_t v50 = v0[353];
        uint64_t v51 = v0[339];
        LOBYTE(v159[0]) = v48;
        sub_1A3334((unsigned __int8 *)v159, v51, (uint64_t)(v0 + 306));
        if (v50) {
          goto LABEL_44;
        }
        __int16 v52 = *((_WORD *)v0 + 1495);
        uint64_t v53 = v0[342];
        char v54 = *((unsigned char *)v0 + 2720);
        uint64_t v55 = v0[309];
        uint64_t v56 = v0[310];
        sub_5D64(v0 + 306, v55);
        *((unsigned char *)v0 + 2600) = v54 & 1;
        v0[326] = v49;
        v0[327] = v53;
        *((_WORD *)v0 + 1489) = v52;
        unint64_t v154 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v56 + 8) + **(int **)(v56 + 8));
        long long v57 = (void *)swift_task_alloc();
        v0[360] = v57;
        *long long v57 = v0;
        v57[1] = sub_1A28B8;
        uint64_t v33 = v0 + 325;
        long long v34 = (void *)((char *)v0 + 2978);
        uint64_t v35 = v55;
        uint64_t v36 = v56;
        long long v37 = v154;
        goto LABEL_52;
      case 4uLL:
        LODWORD(v58) = *((unsigned __int8 *)v0 + 2998);
        if (v58 == 5) {
          unint64_t v58 = 0x401030200uLL >> (8 * *((unsigned char *)v0 + 2992));
        }
        uint64_t v59 = v0[340];
        *((unsigned char *)v0 + 3002) = v58;
        uint64_t v60 = v0[353];
        uint64_t v61 = v0[339];
        LOBYTE(v159[0]) = v58;
        sub_1A3404((unsigned __int8 *)v159, v61, (uint64_t)(v0 + 311));
        if (v60) {
          goto LABEL_44;
        }
        __int16 v62 = *((_WORD *)v0 + 1496);
        uint64_t v63 = v0[341];
        uint64_t v64 = v0[314];
        uint64_t v65 = v0[315];
        sub_5D64(v0 + 311, v64);
        v0[334] = v59;
        v0[335] = v63;
        *((_WORD *)v0 + 1490) = v62;
        long long v155 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v65 + 8) + **(int **)(v65 + 8));
        uint64_t v66 = (void *)swift_task_alloc();
        v0[363] = v66;
        *uint64_t v66 = v0;
        v66[1] = sub_1A2A54;
        uint64_t v33 = v0 + 334;
        long long v34 = (void *)((char *)v0 + 2980);
        uint64_t v35 = v64;
        uint64_t v36 = v65;
        long long v37 = v155;
        goto LABEL_52;
      case 5uLL:
        LODWORD(v67) = *((unsigned __int8 *)v0 + 2998);
        if (v67 == 5) {
          unint64_t v67 = 0x401030200uLL >> (8 * *((unsigned char *)v0 + 2994));
        }
        uint64_t v68 = v0[342];
        *((unsigned char *)v0 + 3003) = v67;
        uint64_t v69 = v0[353];
        uint64_t v70 = v0[339];
        LOBYTE(v159[0]) = v67;
        sub_1A34D4((unsigned __int8 *)v159, v70, (uint64_t)(v0 + 296));
        if (v69) {
          goto LABEL_44;
        }
        uint64_t v138 = v0[350];
        uint64_t v144 = v0[351];
        __int16 v130 = *((_WORD *)v0 + 1498);
        uint64_t v71 = v0[349];
        __int16 v72 = *((_WORD *)v0 + 1497);
        char v73 = *((unsigned char *)v0 + 2993);
        uint64_t v74 = v0[343];
        uint64_t v75 = v0[341];
        uint64_t v76 = v0[338];
        uint64_t v149 = v0[299];
        uint64_t v134 = v0[300];
        char v77 = v0[340] & 1;
        uint64_t v78 = *(void *)((char *)v0 + 2985);
        sub_5D64(v0 + 296, v149);
        *((unsigned char *)v0 + 2568) = v77;
        v0[322] = v75;
        v0[323] = v68;
        v0[324] = v74;
        long long v79 = *(_OWORD *)(v76 + 16);
        *((_OWORD *)v0 + 1) = *(_OWORD *)v76;
        *((_OWORD *)v0 + 2) = v79;
        v0[6] = v78;
        *((unsigned char *)v0 + 56) = v73;
        int v80 = *(_DWORD *)(v76 + 41);
        *((_DWORD *)v0 + 15) = *(_DWORD *)(v76 + 44);
        *(_DWORD *)((char *)v0 + 57) = v80;
        *((_WORD *)v0 + 32) = v72;
        LOWORD(v80) = *(_WORD *)(v76 + 54);
        *(_DWORD *)((char *)v0 + 66) = *(_DWORD *)(v76 + 50);
        *((_WORD *)v0 + 35) = v80;
        v0[9] = v71;
        *((_WORD *)v0 + 40) = v130;
        int v81 = *(_DWORD *)(v76 + 66);
        *((_WORD *)v0 + 43) = *(_WORD *)(v76 + 70);
        *(_DWORD *)((char *)v0 + 82) = v81;
        v0[11] = v138;
        v0[12] = v144;
        memcpy(v0 + 13, (const void *)(v76 + 88), 0x408uLL);
        Swift::Int v139 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v134 + 8)
                                                                            + **(int **)(v134 + 8));
        long long v82 = (void *)swift_task_alloc();
        v0[366] = v82;
        *long long v82 = v0;
        v82[1] = sub_1A2BF0;
        uint64_t v33 = v0 + 321;
        long long v34 = v0 + 2;
        uint64_t v35 = v149;
        uint64_t v36 = v134;
        long long v37 = v139;
        goto LABEL_52;
      case 6uLL:
        LODWORD(v83) = *((unsigned __int8 *)v0 + 2998);
        if (v83 == 5) {
          unint64_t v83 = 0x401030200uLL >> (8 * *((unsigned char *)v0 + 2996));
        }
        uint64_t v84 = v0[347];
        uint64_t v85 = v0[343];
        *((unsigned char *)v0 + 3004) = v83;
        uint64_t v86 = v0[353];
        uint64_t v87 = v0[339];
        LOBYTE(v159[0]) = v83;
        sub_1A35A4((unsigned __int8 *)v159, v87, (uint64_t)(v0 + 291));
        if (v86) {
          goto LABEL_44;
        }
        uint64_t v140 = v0[350];
        uint64_t v145 = v0[351];
        __int16 v131 = *((_WORD *)v0 + 1498);
        uint64_t v129 = v0[349];
        char v127 = *((unsigned char *)v0 + 2993);
        __int16 v128 = *((_WORD *)v0 + 1497);
        uint64_t v126 = v0[348];
        uint64_t v102 = v0[345];
        unsigned int v103 = *((_DWORD *)v0 + 688);
        uint64_t v104 = v0[342];
        long long v125 = *((_OWORD *)v0 + 170);
        uint64_t v105 = v0[338];
        uint64_t v150 = v0[294];
        uint64_t v136 = v0[295];
        char v106 = v103 & 1;
        int v107 = (v103 >> 8) & 1;
        char v108 = v0[346] & 1;
        uint64_t v109 = *(void *)((char *)v0 + 2985);
        sub_5D64(v0 + 291, v150);
        *((_OWORD *)v0 + 141) = v125;
        v0[284] = v104;
        v0[285] = v85;
        *((unsigned char *)v0 + 2288) = v106;
        *((unsigned char *)v0 + 2289) = v107;
        v0[287] = v102;
        *((unsigned char *)v0 + 2304) = v108;
        v0[289] = v84;
        v0[290] = v126;
        long long v110 = *(_OWORD *)(v105 + 16);
        *((_OWORD *)v0 + 71) = *(_OWORD *)v105;
        *((_OWORD *)v0 + 72) = v110;
        v0[146] = v109;
        *((unsigned char *)v0 + 1176) = v127;
        int v111 = *(_DWORD *)(v105 + 41);
        *((_DWORD *)v0 + 295) = *(_DWORD *)(v105 + 44);
        *(_DWORD *)((char *)v0 + 1177) = v111;
        *((_WORD *)v0 + 592) = v128;
        LOWORD(v111) = *(_WORD *)(v105 + 54);
        *(_DWORD *)((char *)v0 + 1186) = *(_DWORD *)(v105 + 50);
        *((_WORD *)v0 + 595) = v111;
        v0[149] = v129;
        *((_WORD *)v0 + 600) = v131;
        int v112 = *(_DWORD *)(v105 + 66);
        *((_WORD *)v0 + 603) = *(_WORD *)(v105 + 70);
        *(_DWORD *)((char *)v0 + 1202) = v112;
        v0[151] = v140;
        v0[152] = v145;
        memcpy(v0 + 153, (const void *)(v105 + 88), 0x408uLL);
        uint64_t v141 = (uint64_t (*)(void *, void *, uint64_t, uint64_t))(*(void *)(v136 + 8)
                                                                            + **(int **)(v136 + 8));
        long long v113 = (void *)swift_task_alloc();
        v0[369] = v113;
        *long long v113 = v0;
        v113[1] = sub_1A2D8C;
        long long v34 = v0 + 142;
        uint64_t v33 = v0 + 282;
        uint64_t v35 = v150;
        uint64_t v36 = v136;
        long long v37 = v141;
LABEL_52:
        uint64_t result = v37(v33, v34, v35, v36);
        break;
      default:
        uint64_t v3 = v0[340];
        uint64_t v4 = *(void *)(v3 + 16);
        uint64_t v5 = _swiftEmptyArrayStorage;
        if (v4)
        {
          __src = v0;
          uint64_t v6 = v0[345];
          uint64_t v7 = v0[344];
          uint64_t v8 = v0[343];
          uint64_t v9 = v0[342];
          uint64_t v10 = v4 - 1;
          uint64_t v11 = v0[341];
          *(void *)(swift_task_alloc() + 16) = v4 - 1;
          sub_1A3774(v3, v11, v9, v8, v7, v6, v2);
          v159[0] = _swiftEmptyArrayStorage;
          sub_467B8(0, 0, 0);
          uint64_t v12 = _swiftEmptyArrayStorage;
          uint64_t v13 = *(void *)(v3 + 16);
          swift_bridgeObjectRetain();
          if (v13)
          {
            uint64_t v14 = v3 + 48;
            do
            {
              uint64_t v152 = *(void *)(v14 - 16);
              char v147 = *(unsigned char *)(v14 - 8);
              uint64_t v143 = *(void *)v14;
              char v137 = *(unsigned char *)(v14 + 8);
              uint64_t v15 = *(void *)(v14 + 16);
              char v16 = *(unsigned char *)(v14 + 24);
              uint64_t v17 = *(void *)(v14 + 32);
              uint64_t v133 = *(void *)(v14 + 40);
              uint64_t v18 = *(void *)(v14 + 48);
              sub_5480C(v15, v16);
              v159[0] = v12;
              unint64_t v20 = v12[2];
              unint64_t v19 = v12[3];
              int64_t v157 = v20 + 1;
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v20 >= v19 >> 1)
              {
                sub_467B8(v19 > 1, v157, 1);
                uint64_t v12 = (void *)v159[0];
              }
              v12[2] = v157;
              uint64_t v21 = &v12[10 * v20];
              v21[4] = v152;
              *((unsigned char *)v21 + 40) = v147;
              v21[6] = v143;
              *((unsigned char *)v21 + 56) = v137;
              v21[8] = v15;
              *((unsigned char *)v21 + 72) = v16;
              v21[10] = v17;
              v21[11] = v133;
              v21[12] = v18;
              *((double *)v21 + 13) = (double)v10--;
              v14 += 72;
              --v13;
            }
            while (v13);
          }
          unint64_t v90 = __src[346];
          uint64_t v91 = __src[345];
          uint64_t v92 = __src[344];
          uint64_t v93 = __src[343];
          uint64_t v94 = __src[342];
          uint64_t v95 = (uint64_t)v12;
          uint64_t v96 = __src[341];
          uint64_t v97 = __src[340];
          sub_158F14(v97, v96, v94, v93, v92, v91, v90);
          sub_158F14(v97, v96, v94, v93, v92, v91, v90);
          swift_task_dealloc();
          uint64_t v98 = sub_387A8((void (*)(uint64_t *__return_ptr, uint64_t *))sub_19BB6C, 0, v95);
          double v99 = COERCE_DOUBLE(sub_19B7E4((uint64_t)v98));
          LOBYTE(v94) = v100;
          swift_bridgeObjectRelease();
          if ((v94 & 1) != 0 || (v135 = v95, double v101 = v99, v99 == 0.0) || (v115 = *(void *)(v95 + 16)) == 0)
          {
            swift_release();
            uint64_t v5 = _swiftEmptyArrayStorage;
          }
          else
          {
            v159[0] = _swiftEmptyArrayStorage;
            sub_467B8(0, v115, 0);
            uint64_t v116 = 0;
            uint64_t v5 = _swiftEmptyArrayStorage;
            do
            {
              uint64_t v158 = *(void *)(v135 + v116 + 32);
              char v156 = *(unsigned char *)(v135 + v116 + 40);
              uint64_t v151 = *(void *)(v135 + v116 + 48);
              char v146 = *(unsigned char *)(v135 + v116 + 56);
              uint64_t v117 = *(void *)(v135 + v116 + 64);
              char v118 = *(unsigned char *)(v135 + v116 + 72);
              uint64_t v119 = *(void *)(v135 + v116 + 80);
              uint64_t v142 = *(void *)(v135 + v116 + 88);
              uint64_t v120 = *(void *)(v135 + v116 + 96);
              double v121 = *(double *)(v135 + v116 + 104);
              sub_5480C(v117, v118);
              v159[0] = v5;
              unint64_t v123 = v5[2];
              unint64_t v122 = v5[3];
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              if (v123 >= v122 >> 1)
              {
                sub_467B8(v122 > 1, v123 + 1, 1);
                uint64_t v5 = (void *)v159[0];
              }
              v5[2] = v123 + 1;
              long long v124 = &v5[10 * v123];
              v124[4] = v158;
              *((unsigned char *)v124 + 40) = v156;
              v124[6] = v151;
              *((unsigned char *)v124 + 56) = v146;
              v124[8] = v117;
              *((unsigned char *)v124 + 72) = v118;
              v124[10] = v119;
              v124[11] = v142;
              v124[12] = v120;
              *((double *)v124 + 13) = v121 / v101;
              v116 += 80;
              --v115;
            }
            while (v115);
            swift_release();
          }
          uint64_t v0 = __src;
        }
        *(unsigned char *)v0[337] = 2;
        long long v114 = (uint64_t (*)(void *))v0[1];
        uint64_t result = v114(v5);
        break;
    }
  }
  else
  {
    sub_1A3720();
    swift_allocError();
    *long long v22 = v1;
    swift_willThrow();
LABEL_44:
    uint64_t v88 = (uint64_t (*)(void))v0[1];
    return v88();
  }
  return result;
}

uint64_t sub_1A2580(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2840) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A2F40;
  }
  else
  {
    *(void *)(v4 + 2848) = a1;
    uint64_t v5 = sub_1A26A8;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1A26A8()
{
  **(unsigned char **)(v0 + 2696) = *(unsigned char *)(v0 + 2999);
  sub_1264C(v0 + 2408);
  uint64_t v1 = *(void *)(v0 + 2848);
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A271C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2864) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A2FA4;
  }
  else
  {
    *(void *)(v4 + 2872) = a1;
    uint64_t v5 = sub_1A2844;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1A2844()
{
  **(unsigned char **)(v0 + 2696) = *(unsigned char *)(v0 + 3000);
  sub_1264C(v0 + 2528);
  uint64_t v1 = *(void *)(v0 + 2872);
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A28B8(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2888) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A3008;
  }
  else
  {
    *(void *)(v4 + 2896) = a1;
    uint64_t v5 = sub_1A29E0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1A29E0()
{
  **(unsigned char **)(v0 + 2696) = *(unsigned char *)(v0 + 3001);
  sub_1264C(v0 + 2448);
  uint64_t v1 = *(void *)(v0 + 2896);
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A2A54(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2912) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A306C;
  }
  else
  {
    *(void *)(v4 + 2920) = a1;
    uint64_t v5 = sub_1A2B7C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1A2B7C()
{
  **(unsigned char **)(v0 + 2696) = *(unsigned char *)(v0 + 3002);
  sub_1264C(v0 + 2488);
  uint64_t v1 = *(void *)(v0 + 2920);
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A2BF0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2936) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A30D0;
  }
  else
  {
    *(void *)(v4 + 2944) = a1;
    uint64_t v5 = sub_1A2D18;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1A2D18()
{
  **(unsigned char **)(v0 + 2696) = *(unsigned char *)(v0 + 3003);
  sub_1264C(v0 + 2368);
  uint64_t v1 = *(void *)(v0 + 2944);
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A2D8C(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2960) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1A3134;
  }
  else
  {
    *(void *)(v4 + 2968) = a1;
    uint64_t v5 = sub_1A2EB4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1A2EB4()
{
  **(unsigned char **)(v0 + 2696) = *(unsigned char *)(v0 + 3004);
  sub_1264C(v0 + 2328);
  uint64_t v1 = *(void *)(v0 + 2968);
  unint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1A2F28()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1A2F40()
{
  sub_1264C(v0 + 2408);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A2FA4()
{
  sub_1264C(v0 + 2528);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3008()
{
  sub_1264C(v0 + 2448);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A306C()
{
  sub_1264C(v0 + 2488);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A30D0()
{
  sub_1264C(v0 + 2368);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3134()
{
  sub_1264C(v0 + 2328);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1A3198@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 24);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_4CF40(v5), (v8 & 1) != 0))
  {
    sub_51B70(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v11);
    sub_37C30(v11, a3);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1A382C();
    swift_allocError();
    *uint64_t v10 = v5;
    return swift_willThrow();
  }
}

uint64_t sub_1A3264@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 32);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_4CF40(v5), (v8 & 1) != 0))
  {
    sub_51B70(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v11);
    sub_37C30(v11, a3);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1A382C();
    swift_allocError();
    *uint64_t v10 = v5 | 0x20;
    return swift_willThrow();
  }
}

uint64_t sub_1A3334@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 40);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_4CF40(v5), (v8 & 1) != 0))
  {
    sub_51B70(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v11);
    sub_37C30(v11, a3);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1A382C();
    swift_allocError();
    *uint64_t v10 = v5 | 0x40;
    return swift_willThrow();
  }
}

uint64_t sub_1A3404@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 48);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_4CF40(v5), (v8 & 1) != 0))
  {
    sub_51B70(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v11);
    sub_37C30(v11, a3);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1A382C();
    swift_allocError();
    *uint64_t v10 = v5 | 0x60;
    return swift_willThrow();
  }
}

uint64_t sub_1A34D4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 56);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_4CF40(v5), (v8 & 1) != 0))
  {
    sub_51B70(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v11);
    sub_37C30(v11, a3);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1A382C();
    swift_allocError();
    *uint64_t v10 = v5 | 0x80;
    return swift_willThrow();
  }
}

uint64_t sub_1A35A4@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  unsigned __int8 v5 = *a1;
  swift_beginAccess();
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(v6 + 16) && (unint64_t v7 = sub_4CF40(v5), (v8 & 1) != 0))
  {
    sub_51B70(*(void *)(v6 + 56) + 40 * v7, (uint64_t)v11);
    sub_37C30(v11, a3);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1A382C();
    swift_allocError();
    *uint64_t v10 = v5 | 0xA0;
    return swift_willThrow();
  }
}

uint64_t sub_1A3678()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_1A36C8()
{
  sub_1A3678();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for DelegatingCollectionService()
{
  return self;
}

unint64_t sub_1A3720()
{
  unint64_t result = qword_272C80;
  if (!qword_272C80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272C80);
  }
  return result;
}

uint64_t sub_1A3774(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unint64_t a7)
{
  switch(a7 >> 61)
  {
    case 0uLL:
    case 1uLL:
    case 2uLL:
    case 3uLL:
    case 4uLL:
      goto LABEL_4;
    case 5uLL:
      swift_bridgeObjectRetain();
      goto LABEL_4;
    case 6uLL:
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
LABEL_4:
      uint64_t result = swift_bridgeObjectRetain();
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1A382C()
{
  unint64_t result = qword_272C88;
  if (!qword_272C88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272C88);
  }
  return result;
}

unint64_t sub_1A3880()
{
  unint64_t result = qword_272C90;
  if (!qword_272C90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272C90);
  }
  return result;
}

uint64_t getEnumTagSinglePayload for DelegatingCollectionService.Errors(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0x1B) {
    goto LABEL_17;
  }
  if (a2 + 229 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 229) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 229;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 229;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 229;
    }
  }
LABEL_17:
  unsigned int v6 = (*a1 & 0x18 | (*a1 >> 5)) ^ 0x1F;
  if (v6 >= 0x1A) {
    unsigned int v6 = -1;
  }
  return v6 + 1;
}

unsigned char *storeEnumTagSinglePayload for DelegatingCollectionService.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 229 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 229) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0x1B) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0x1A)
  {
    unsigned int v6 = ((a2 - 27) >> 8) + 1;
    *unint64_t result = a2 - 27;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1A3A48);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = 8 * (((-a2 >> 3) & 3) - 4 * a2);
        break;
    }
  }
  return result;
}

uint64_t sub_1A3A70(unsigned __int8 *a1)
{
  return *a1 >> 5;
}

unsigned char *sub_1A3A7C(unsigned char *result)
{
  *result &= 0x1Fu;
  return result;
}

unsigned char *sub_1A3A8C(unsigned char *result, char a2)
{
  *unint64_t result = *result & 7 | (32 * a2);
  return result;
}

ValueMetadata *type metadata accessor for DelegatingCollectionService.Errors()
{
  return &type metadata for DelegatingCollectionService.Errors;
}

uint64_t sub_1A3AB0(uint64_t a1, const void *a2)
{
  long long v4 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 2376) = *(_OWORD *)a1;
  *(void *)(v3 + 2368) = v2;
  *(_OWORD *)(v3 + 2392) = v4;
  *(unsigned char *)(v3 + 2480) = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(v3 + 2481) = *(unsigned char *)(a1 + 33);
  *(void *)(v3 + 2408) = *(void *)(a1 + 40);
  *(unsigned char *)(v3 + 2482) = *(unsigned char *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 64);
  *(void *)(v3 + 2416) = *(void *)(a1 + 56);
  *(void *)(v3 + 2424) = v5;
  memcpy((void *)(v3 + 16), a2, 0x460uLL);
  return _swift_task_switch(sub_1A3B64, 0, 0);
}

uint64_t sub_1A3B64()
{
  uint64_t v1 = *(void *)(*(void *)(v0 + 2368) + 16);
  *(void *)(v0 + 2432) = v1;
  uint64_t v2 = *(void *)(v1 + 16);
  *(void *)(v0 + 2440) = v2;
  if (v2)
  {
    char v17 = *(unsigned char *)(v0 + 2482);
    char v3 = *(unsigned char *)(v0 + 2481);
    char v4 = *(unsigned char *)(v0 + 2480);
    *(void *)(v0 + 2448) = 0;
    uint64_t v16 = *(void *)(v0 + 2424);
    uint64_t v5 = *(void *)(v0 + 2416);
    uint64_t v6 = *(void *)(v0 + 2408);
    uint64_t v7 = *(void *)(v0 + 2400);
    long long v15 = *(_OWORD *)(v0 + 2376);
    uint64_t v8 = v1 + 32;
    uint64_t v9 = *(void *)(v0 + 2392);
    swift_bridgeObjectRetain();
    sub_51B70(v8, v0 + 2328);
    uint64_t v10 = *(void *)(v0 + 2352);
    uint64_t v11 = *(void *)(v0 + 2360);
    sub_5D64((void *)(v0 + 2328), v10);
    *(_OWORD *)(v0 + 2256) = v15;
    *(void *)(v0 + 2272) = v9;
    *(void *)(v0 + 2280) = v7;
    *(unsigned char *)(v0 + 2288) = v4;
    *(unsigned char *)(v0 + 2289) = v3;
    *(void *)(v0 + 2296) = v6;
    *(unsigned char *)(v0 + 2304) = v17;
    *(void *)(v0 + 2312) = v5;
    *(void *)(v0 + 2320) = v16;
    memcpy((void *)(v0 + 1136), (const void *)(v0 + 16), 0x460uLL);
    uint64_t v18 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v11 + 8) + **(int **)(v11 + 8));
    uint64_t v12 = (void *)swift_task_alloc();
    *(void *)(v0 + 2456) = v12;
    *uint64_t v12 = v0;
    v12[1] = sub_1A3D9C;
    return v18(v0 + 2256, v0 + 1136, v10, v11);
  }
  else
  {
    uint64_t v14 = *(uint64_t (**)(void *))(v0 + 8);
    return v14(_swiftEmptyArrayStorage);
  }
}

uint64_t sub_1A3D9C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2464) = a1;
  *(void *)(v3 + 2472) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    char v4 = sub_1A4134;
  }
  else
  {
    char v4 = sub_1A3EBC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1A3EBC()
{
  if (*(void *)(*(void *)(v0 + 2464) + 16))
  {
    swift_bridgeObjectRelease();
    sub_1264C(v0 + 2328);
    uint64_t v1 = *(void **)(v0 + 2464);
LABEL_5:
    char v4 = *(uint64_t (**)(void *))(v0 + 8);
    return v4(v1);
  }
  uint64_t v2 = *(void *)(v0 + 2448);
  uint64_t v3 = *(void *)(v0 + 2440);
  swift_bridgeObjectRelease();
  sub_1264C(v0 + 2328);
  if (v2 + 1 == v3)
  {
    swift_bridgeObjectRelease();
    uint64_t v1 = _swiftEmptyArrayStorage;
    goto LABEL_5;
  }
  uint64_t v6 = *(void *)(v0 + 2448) + 1;
  *(void *)(v0 + 2448) = v6;
  uint64_t v18 = *(void *)(v0 + 2424);
  uint64_t v17 = *(void *)(v0 + 2416);
  char v7 = *(unsigned char *)(v0 + 2482);
  uint64_t v8 = *(void *)(v0 + 2408);
  char v9 = *(unsigned char *)(v0 + 2481);
  char v10 = *(unsigned char *)(v0 + 2480);
  uint64_t v11 = *(void *)(v0 + 2400);
  uint64_t v12 = *(void *)(v0 + 2392);
  long long v16 = *(_OWORD *)(v0 + 2376);
  sub_51B70(*(void *)(v0 + 2432) + 40 * v6 + 32, v0 + 2328);
  uint64_t v13 = *(void *)(v0 + 2352);
  uint64_t v14 = *(void *)(v0 + 2360);
  sub_5D64((void *)(v0 + 2328), v13);
  *(_OWORD *)(v0 + 2256) = v16;
  *(void *)(v0 + 2272) = v12;
  *(void *)(v0 + 2280) = v11;
  *(unsigned char *)(v0 + 2288) = v10;
  *(unsigned char *)(v0 + 2289) = v9;
  *(void *)(v0 + 2296) = v8;
  *(unsigned char *)(v0 + 2304) = v7;
  *(void *)(v0 + 2312) = v17;
  *(void *)(v0 + 2320) = v18;
  memcpy((void *)(v0 + 1136), (const void *)(v0 + 16), 0x460uLL);
  uint64_t v19 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v14 + 8) + **(int **)(v14 + 8));
  long long v15 = (void *)swift_task_alloc();
  *(void *)(v0 + 2456) = v15;
  *long long v15 = v0;
  v15[1] = sub_1A3D9C;
  return v19(v0 + 2256, v0 + 1136, v13, v14);
}

uint64_t sub_1A4134()
{
  sub_1264C(v0 + 2328);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for FallingBackSuggestionsService()
{
  return self;
}

uint64_t sub_1A41BC(uint64_t a1, const void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_B06F4;
  return sub_1A3AB0(a1, a2);
}

uint64_t sub_1A4264(void *a1)
{
  uint64_t v2 = sub_1FB4C0();
  uint64_t v25 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v24 = (char *)v22 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_12124(&qword_26E7A8);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v27 = (uint64_t)v22 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v28 = (uint64_t)v22 - v7;
  uint64_t v8 = sub_1FAF80();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v26 = (char *)v22 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v22 - v12;
  sub_5D64(a1, a1[3]);
  type metadata accessor for TabiConfigurationManager();
  uint64_t result = sub_1FB250();
  if (!result)
  {
    __break(1u);
    goto LABEL_9;
  }
  uint64_t v23 = v2;
  v31[54] = result;
  sub_1A60FC(v32);
  sub_1A613C((uint64_t)v32, (uint64_t)v31);
  sub_5D64(a1, a1[3]);
  type metadata accessor for TabiPackageService();
  uint64_t result = sub_1FB250();
  if (!result)
  {
LABEL_9:
    __break(1u);
    goto LABEL_10;
  }
  uint64_t v30 = result;
  uint64_t v15 = v28;
  sub_1BD53C(v28);
  long long v16 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v9 + 48);
  uint64_t result = v16(v15, 1, v8);
  if (result == 1)
  {
LABEL_10:
    __break(1u);
    goto LABEL_11;
  }
  sub_1FAF10();
  uint64_t v17 = v15;
  uint64_t v18 = *(void (**)(uint64_t, uint64_t))(v9 + 8);
  v18(v17, v8);
  uint64_t v28 = sub_1FAF50();
  v22[1] = v19;
  v18((uint64_t)v13, v8);
  uint64_t v20 = v27;
  sub_1BD53C(v27);
  uint64_t result = v16(v20, 1, v8);
  if (result == 1)
  {
LABEL_11:
    __break(1u);
    goto LABEL_12;
  }
  uint64_t v21 = v26;
  sub_1FAF10();
  v18(v20, v8);
  sub_1FAF50();
  v18((uint64_t)v21, v8);
  sub_5D64(a1, a1[3]);
  type metadata accessor for UserFeaturesWorkFactory();
  uint64_t result = sub_1FB250();
  if (!result)
  {
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
  uint64_t v29 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DF8);
  uint64_t result = sub_1FB250();
  if (result)
  {
    sub_12124(&qword_272DE0);
    (*(void (**)(char *, void, uint64_t))(v25 + 104))(v24, enum case for WorkServiceSettings.PerformanceOptimizationPolicy.memory(_:), v23);
    return sub_1FB450();
  }
LABEL_13:
  __break(1u);
  return result;
}

uint64_t sub_1A4700(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DE8);
  uint64_t result = sub_1FB260();
  if (v16)
  {
    uint64_t v2 = sub_51B20((uint64_t)v15, v16);
    __chkstk_darwin(v2);
    uint64_t v4 = (void *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    uint64_t v6 = *v4;
    uint64_t v7 = type metadata accessor for UserEncodingInputFeaturesService();
    v14[3] = v7;
    v14[4] = &off_25C340;
    v14[0] = v6;
    type metadata accessor for UserFeaturesWorkFactory();
    uint64_t v8 = (void *)swift_allocObject();
    uint64_t v9 = sub_51B20((uint64_t)v14, v7);
    __chkstk_darwin(v9);
    uint64_t v11 = (void *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    v8[5] = v7;
    v8[6] = &off_25C340;
    v8[2] = v13;
    sub_1264C((uint64_t)v14);
    sub_1264C((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4900@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DE0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    uint64_t v4 = result;
    uint64_t v5 = (objc_class *)type metadata accessor for TabiGenreRecommendationService();
    id v6 = objc_allocWithZone(v5);
    uint64_t v7 = qword_26C390;
    uint64_t v8 = (char *)v6;
    if (v7 != -1) {
      swift_once();
    }
    id v9 = (id)qword_272B70;
    sub_1FBD90();
    sub_1FB400();

    *(void *)&v8[OBJC_IVAR____TtC20BooksPersonalization30TabiGenreRecommendationService_workService] = v4;
    swift_retain();

    v11.receiver = v8;
    v11.super_class = v5;
    id v10 = [super init];
    uint64_t result = swift_release();
    a2[3] = v5;
    a2[4] = &protocol witness table for TabiGenreRecommendationService;
    *a2 = v10;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4A44@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DE0);
  uint64_t result = sub_1FB250();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v5 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (!v14)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  id v6 = (objc_class *)type metadata accessor for TabiSuggestionsService();
  id v7 = objc_allocWithZone(v6);
  uint64_t v8 = qword_26C380;
  id v9 = (char *)v7;
  if (v8 != -1) {
    swift_once();
  }
  id v10 = (id)qword_272B60;
  sub_1FBDC0();
  sub_1FB400();

  *(void *)&v9[OBJC_IVAR____TtC20BooksPersonalization22TabiSuggestionsService_workService] = v5;
  sub_51B70((uint64_t)v13, (uint64_t)&v9[OBJC_IVAR____TtC20BooksPersonalization22TabiSuggestionsService_bookMetadataService]);
  swift_retain();

  v12.receiver = v9;
  v12.super_class = v6;
  id v11 = [super init];
  swift_release();
  uint64_t result = sub_1264C((uint64_t)v13);
  a2[3] = v6;
  a2[4] = &protocol witness table for TabiSuggestionsService;
  *a2 = v11;
  return result;
}

uint64_t sub_1A4BE8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v4 = type metadata accessor for TabiSeedBasedRecommendationService();
  uint64_t result = sub_1FB250();
  if (!result)
  {
    __break(1u);
    goto LABEL_6;
  }
  uint64_t v13 = v4;
  uint64_t v14 = &protocol witness table for TabiSeedBasedRecommendationService;
  *(void *)&long long v12 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E930);
  uint64_t result = sub_1FB240();
  if (!v11)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (v9)
  {
    uint64_t v6 = type metadata accessor for CombinedSeedBasedRecommendationService();
    uint64_t v7 = swift_allocObject();
    sub_37C30(&v12, v7 + 16);
    sub_37C30(&v10, v7 + 56);
    uint64_t result = sub_37C30(&v8, v7 + 96);
    a2[3] = v6;
    a2[4] = (uint64_t)&off_264200;
    *a2 = v7;
    return result;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1A4D54(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DE0);
  uint64_t result = sub_1FB250();
  if (!result)
  {
    __break(1u);
    goto LABEL_7;
  }
  uint64_t v3 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (!v7)
  {
LABEL_7:
    __break(1u);
    return result;
  }
  type metadata accessor for TabiBookScorer();
  uint64_t v4 = swift_allocObject();
  if (qword_26C380 != -1) {
    swift_once();
  }
  id v5 = (id)qword_272B60;
  sub_1FBDC0();
  sub_1FB400();

  *(void *)(v4 + 16) = v3;
  sub_37C30(&v6, v4 + 24);
  return v4;
}

uint64_t sub_1A4EA4@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v3 = type metadata accessor for TabiBookScorer();
  uint64_t result = sub_1FB250();
  if (result)
  {
    a2[3] = v3;
    a2[4] = (uint64_t)&protocol witness table for TabiBookScorer;
    *a2 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4F18(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (v4)
  {
    type metadata accessor for TabiConfigurationManager();
    uint64_t v2 = swift_allocObject();
    sub_37C30(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A4FA8(void *a1)
{
  sub_5D64(a1, a1[3]);
  type metadata accessor for TabiConfigurationManager();
  uint64_t result = sub_1FB250();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for TabiPackageService();
    uint64_t result = swift_allocObject();
    *(void *)(result + 16) = v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5018(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DE0);
  uint64_t result = sub_1FB250();
  if (!result)
  {
    __break(1u);
    goto LABEL_8;
  }
  uint64_t v3 = result;
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (!v9)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E930);
  uint64_t result = sub_1FB240();
  if (!v7)
  {
LABEL_9:
    __break(1u);
    return result;
  }
  type metadata accessor for TabiSeedBasedRecommendationService();
  uint64_t v4 = swift_allocObject();
  if (qword_26C388 != -1) {
    swift_once();
  }
  id v5 = (id)qword_272B68;
  sub_1FBDC0();
  sub_1FB400();

  *(void *)(v4 + 16) = v3;
  sub_37C30(&v8, v4 + 24);
  sub_37C30(&v6, v4 + 64);
  return v4;
}

uint64_t sub_1A51BC@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E988);
  uint64_t result = sub_1FB260();
  if (!v12)
  {
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E918);
  uint64_t result = sub_1FB260();
  if (!v10)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (!v8)
  {
LABEL_8:
    __break(1u);
    goto LABEL_9;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E4C0);
  uint64_t result = sub_1FB260();
  if (v6[3])
  {
    uint64_t v5 = type metadata accessor for UserEncodingInputFeaturesService();
    swift_allocObject();
    uint64_t result = sub_A1D60((uint64_t)v11, (uint64_t)v9, (uint64_t)v7, (uint64_t)v6);
    a2[3] = v5;
    a2[4] = (uint64_t)&off_25C340;
    *a2 = result;
    return result;
  }
LABEL_9:
  __break(1u);
  return result;
}

uint64_t sub_1A5334@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_272DE0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    uint64_t v5 = result;
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_272DE8);
    uint64_t result = sub_1FB260();
    if (v21)
    {
      uint64_t v6 = sub_51B20((uint64_t)v20, v21);
      __chkstk_darwin(v6);
      uint64_t v8 = (void *)((char *)v19 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v9 + 16))(v8);
      uint64_t v10 = *v8;
      uint64_t v11 = type metadata accessor for UserEncodingInputFeaturesService();
      v19[3] = v11;
      v19[4] = &off_25C340;
      v19[0] = v10;
      uint64_t v12 = type metadata accessor for UserEncodingService();
      uint64_t v13 = (void *)swift_allocObject();
      uint64_t v14 = sub_51B20((uint64_t)v19, v11);
      __chkstk_darwin(v14);
      uint64_t v16 = (void *)((char *)v19 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0));
      (*(void (**)(uint64_t *))(v17 + 16))(v16);
      uint64_t v18 = *v16;
      void v13[6] = v11;
      v13[7] = &off_25C340;
      v13[2] = v5;
      v13[3] = v18;
      sub_1264C((uint64_t)v19);
      uint64_t result = sub_1264C((uint64_t)v20);
      a2[3] = v12;
      a2[4] = &protocol witness table for UserEncodingService;
      *a2 = v13;
      return result;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1A5598(uint64_t a1)
{
  sub_51B70(a1, (uint64_t)v3);
  type metadata accessor for BooksTabiWorkServiceStartupTask();
  uint64_t v1 = swift_allocObject();
  sub_37C30(v3, v1 + 16);
  return v1;
}

uint64_t sub_1A55EC(uint64_t a1, void *a2)
{
  sub_5D64(a2, a2[3]);
  uint64_t v2 = type metadata accessor for BooksTabiWorkServiceStartupTask();
  uint64_t result = sub_1FB250();
  if (result)
  {
    uint64_t v4 = result;
    v5[3] = v2;
    v5[4] = sub_1A60A4();
    v5[0] = v4;
    sub_1FB2D0();
    return sub_1264C((uint64_t)v5);
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1A5684()
{
  return sub_1FB4E0();
}

uint64_t type metadata accessor for TabiAssembly()
{
  return self;
}

uint64_t sub_1A56E8()
{
  uint64_t v0 = sub_1FB270();
  uint64_t v20 = *(void *)(v0 - 8);
  uint64_t v21 = v0;
  __chkstk_darwin(v0);
  uint64_t v19 = &v13[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v2 = sub_1FB350();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = &v13[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1FB280();
  sub_12124(&qword_272DE0);
  sub_1FB300();
  swift_release();
  uint64_t v6 = enum case for Scope.singleton(_:);
  uint64_t v7 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v3 + 104);
  v7(v5, enum case for Scope.singleton(_:), v2);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v8 = *(void (**)(unsigned char *, uint64_t))(v3 + 8);
  v8(v5, v2);
  sub_1FB280();
  type metadata accessor for UserFeaturesWorkFactory();
  sub_1FB300();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB280();
  sub_12124(&qword_272728);
  sub_1FB310();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB280();
  sub_12124(&qword_26D390);
  sub_1FB310();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB280();
  sub_12124(&qword_26E930);
  sub_1FB310();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB280();
  type metadata accessor for TabiBookScorer();
  sub_1FB300();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB280();
  sub_12124(&qword_26E948);
  sub_1FB310();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB290();
  type metadata accessor for TabiConfigurationManager();
  sub_1FB300();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB290();
  type metadata accessor for TabiPackageService();
  sub_1FB300();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB290();
  type metadata accessor for TabiSeedBasedRecommendationService();
  sub_1FB300();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB290();
  sub_12124(&qword_272DE8);
  sub_1FB310();
  swift_release();
  unsigned int v14 = v6;
  v7(v5, v6, v2);
  uint64_t v15 = v7;
  uint64_t v17 = v3 + 104;
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  uint64_t v16 = (uint64_t (*)(unsigned char *, uint64_t))v8;
  uint64_t v18 = v3 + 8;
  sub_1FB280();
  sub_12124(&qword_272DF0);
  sub_1FB310();
  swift_release();
  v7(v5, v6, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  v8(v5, v2);
  sub_1FB290();
  type metadata accessor for BooksTabiWorkServiceStartupTask();
  sub_1FB300();
  swift_release();
  swift_release();
  sub_1FB2A0();
  sub_5D64(v22, v22[3]);
  sub_1FB2E0();
  uint64_t v10 = v19;
  uint64_t v9 = v20;
  uint64_t v11 = v21;
  (*(void (**)(unsigned char *, void, uint64_t))(v20 + 104))(v19, enum case for CallbackScope.any(_:), v21);
  sub_1FB320();
  (*(void (**)(unsigned char *, uint64_t))(v9 + 8))(v10, v11);
  sub_1264C((uint64_t)v22);
  sub_1FB290();
  sub_12124(&qword_272DF8);
  sub_1FB300();
  swift_release();
  v15(v5, v14, v2);
  sub_1FB230();
  swift_release();
  swift_release();
  return v16(v5, v2);
}

unint64_t sub_1A60A4()
{
  unint64_t result = qword_272E00;
  if (!qword_272E00)
  {
    type metadata accessor for BooksTabiWorkServiceStartupTask();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272E00);
  }
  return result;
}

double sub_1A60FC(_OWORD *a1)
{
  double result = 0.0;
  a1[25] = 0u;
  a1[26] = 0u;
  a1[23] = 0u;
  a1[24] = 0u;
  a1[21] = 0u;
  a1[22] = 0u;
  a1[19] = 0u;
  a1[20] = 0u;
  a1[17] = 0u;
  a1[18] = 0u;
  a1[15] = 0u;
  a1[16] = 0u;
  a1[13] = 0u;
  a1[14] = 0u;
  a1[11] = 0u;
  a1[12] = 0u;
  a1[9] = 0u;
  a1[10] = 0u;
  a1[7] = 0u;
  a1[8] = 0u;
  a1[5] = 0u;
  a1[6] = 0u;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_1A613C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26DE00);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t ClientCurrency.Response.init(statusCode:headers:body:)@<X0>(uint64_t result@<X0>, uint64_t *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, void *a5@<X8>)
{
  uint64_t v5 = *a2;
  *a5 = result;
  a5[1] = v5;
  a5[2] = a3;
  a5[3] = a4;
  return result;
}

uint64_t ClientCurrency.Request.init(url:method:headers:body:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  uint64_t v13 = *a4;
  unsigned int v14 = (int *)type metadata accessor for ClientCurrency.Request();
  uint64_t v15 = (void *)(a7 + v14[7]);
  uint64_t v16 = sub_1FAF80();
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 32))(a7, a1, v16);
  uint64_t v18 = (void *)(a7 + v14[5]);
  *uint64_t v18 = a2;
  v18[1] = a3;
  *(void *)(a7 + v14[6]) = v13;
  *uint64_t v15 = a5;
  v15[1] = a6;
  return result;
}

uint64_t type metadata accessor for ClientCurrency.Request()
{
  uint64_t result = qword_272E80;
  if (!qword_272E80) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t ClientCurrency.Request.url.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = sub_1FAF80();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 16);

  return v4(a1, v1, v3);
}

uint64_t ClientCurrency.Request.url.setter(uint64_t a1)
{
  uint64_t v3 = sub_1FAF80();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 40);

  return v4(v1, a1, v3);
}

uint64_t ClientCurrency.Request.method.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for ClientCurrency.Request() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t ClientCurrency.Request.method.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for ClientCurrency.Request() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*ClientCurrency.Request.method.modify())(void)
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t ClientCurrency.Request.headers.getter@<X0>(void *a1@<X8>)
{
  *a1 = *(void *)(v1 + *(int *)(type metadata accessor for ClientCurrency.Request() + 24));

  return swift_bridgeObjectRetain();
}

uint64_t ClientCurrency.Request.headers.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t v3 = *(int *)(type metadata accessor for ClientCurrency.Request() + 24);
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + v3) = v2;
  return result;
}

uint64_t (*ClientCurrency.Request.headers.modify())(void)
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t ClientCurrency.Request.body.getter()
{
  uint64_t v1 = v0 + *(int *)(type metadata accessor for ClientCurrency.Request() + 28);
  uint64_t v2 = *(void *)v1;
  sub_1A6570(*(void *)v1, *(void *)(v1 + 8));
  return v2;
}

uint64_t sub_1A6570(uint64_t a1, unint64_t a2)
{
  if (a2 >> 60 != 15) {
    return sub_52090(a1, a2);
  }
  return a1;
}

uint64_t ClientCurrency.Request.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = v2 + *(int *)(type metadata accessor for ClientCurrency.Request() + 28);
  uint64_t result = sub_134480(*(void *)v5, *(void *)(v5 + 8));
  *(void *)uint64_t v5 = a1;
  *(void *)(v5 + 8) = a2;
  return result;
}

uint64_t (*ClientCurrency.Request.body.modify())(void)
{
  return AuthorRecommendationSource.id.getter;
}

void ClientCurrency.Request.hash(into:)()
{
  sub_1FAF80();
  sub_1A77EC(&qword_272E08, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_1FB7A0();
  uint64_t v1 = type metadata accessor for ClientCurrency.Request();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 24));
  sub_1FC7F0(*(void *)(v2 + 16));
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(v1 + 28));
  unint64_t v6 = v5[1];
  if (v6 >> 60 == 15)
  {
    sub_1FC800(0);
  }
  else
  {
    uint64_t v7 = *v5;
    sub_1FC800(1u);
    sub_52090(v7, v6);
    sub_1FAFF0();
    sub_134480(v7, v6);
  }
}

Swift::Int ClientCurrency.Request.hashValue.getter()
{
  sub_1FC7E0();
  sub_1FAF80();
  sub_1A77EC(&qword_272E08, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_1FB7A0();
  uint64_t v1 = type metadata accessor for ClientCurrency.Request();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(v0 + *(int *)(v1 + 24));
  sub_1FC7F0(*(void *)(v2 + 16));
  uint64_t v3 = *(void *)(v2 + 16);
  if (v3)
  {
    swift_bridgeObjectRetain();
    uint64_t v4 = v2 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v4 += 32;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (uint64_t *)(v0 + *(int *)(v1 + 28));
  unint64_t v6 = v5[1];
  if (v6 >> 60 == 15)
  {
    sub_1FC800(0);
  }
  else
  {
    uint64_t v7 = *v5;
    sub_1FC800(1u);
    sub_52090(v7, v6);
    sub_1FAFF0();
    sub_134480(v7, v6);
  }
  return sub_1FC830();
}

Swift::Int sub_1A69BC(uint64_t a1, uint64_t a2)
{
  sub_1FC7E0();
  sub_1FAF80();
  sub_1A77EC(&qword_272E08, (void (*)(uint64_t))&type metadata accessor for URL);
  sub_1FB7A0();
  swift_bridgeObjectRetain();
  sub_1FB8C0();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(v2 + *(int *)(a2 + 24));
  sub_1FC7F0(*(void *)(v4 + 16));
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = v4 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  uint64_t v7 = (uint64_t *)(v2 + *(int *)(a2 + 28));
  unint64_t v8 = v7[1];
  if (v8 >> 60 == 15)
  {
    sub_1FC800(0);
  }
  else
  {
    uint64_t v9 = *v7;
    sub_1FC800(1u);
    sub_52090(v9, v8);
    sub_1FAFF0();
    sub_134480(v9, v8);
  }
  return sub_1FC830();
}

uint64_t ClientCurrency.Response.headers.setter(uint64_t *a1)
{
  uint64_t v2 = *a1;
  uint64_t result = swift_bridgeObjectRelease();
  *(void *)(v1 + 8) = v2;
  return result;
}

uint64_t ClientCurrency.Response.body.getter()
{
  uint64_t v1 = *(void *)(v0 + 16);
  sub_52090(v1, *(void *)(v0 + 24));
  return v1;
}

uint64_t ClientCurrency.Response.body.setter(uint64_t a1, uint64_t a2)
{
  uint64_t result = sub_520E8(*(void *)(v2 + 16), *(void *)(v2 + 24));
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = a2;
  return result;
}

uint64_t static ClientCurrency.Response.== infix(_:_:)(void *a1, void *a2)
{
  if (*a1 != *a2) {
    return 0;
  }
  uint64_t v3 = a1[2];
  unint64_t v2 = a1[3];
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  if ((sub_194C0(a1[1], a2[1]) & 1) == 0) {
    return 0;
  }

  return sub_1A73B4(v3, v2, v5, v4);
}

uint64_t ClientCurrency.Response.hash(into:)()
{
  Swift::UInt v1 = v0[1];
  uint64_t v2 = v0[2];
  unint64_t v3 = v0[3];
  sub_1FC7F0(*v0);
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v5 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v5 += 32;
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  sub_52090(v2, v3);
  sub_1FAFF0();

  return sub_520E8(v2, v3);
}

Swift::Int ClientCurrency.Response.hashValue.getter()
{
  Swift::UInt v2 = *v0;
  Swift::UInt v1 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_1FC7E0();
  sub_1FC7F0(v2);
  sub_1FC7F0(*(void *)(v1 + 16));
  uint64_t v5 = *(void *)(v1 + 16);
  if (v5)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v6 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_52090(v3, v4);
  sub_1FAFF0();
  sub_520E8(v3, v4);
  return sub_1FC830();
}

Swift::Int sub_1A6EA4()
{
  Swift::UInt v2 = *v0;
  Swift::UInt v1 = v0[1];
  uint64_t v3 = v0[2];
  unint64_t v4 = v0[3];
  sub_1FC7E0();
  sub_1FC7F0(v2);
  Swift::UInt v5 = *(void *)(v1 + 16);
  sub_1FC7F0(v5);
  if (v5)
  {
    swift_bridgeObjectRetain();
    Swift::UInt v6 = v1 + 56;
    do
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1FB8C0();
      sub_1FB8C0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      v6 += 32;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
  }
  sub_52090(v3, v4);
  sub_1FAFF0();
  sub_520E8(v3, v4);
  return sub_1FC830();
}

uint64_t sub_1A6FB0@<X0>(uint64_t __s1@<X0>, uint64_t a2@<X2>, unint64_t a3@<X3>, char *a4@<X8>)
{
  uint64_t v7 = (const void *)__s1;
  switch(a3 >> 62)
  {
    case 1uLL:
      uint64_t v9 = (a2 >> 32) - (int)a2;
      if (a2 >> 32 < (int)a2)
      {
        __break(1u);
LABEL_31:
        __break(1u);
LABEL_32:
        __break(1u);
        goto LABEL_33;
      }
      sub_52090(a2, a3);
      uint64_t v10 = (char *)sub_1FADE0();
      if (!v10) {
        goto LABEL_8;
      }
      uint64_t v11 = sub_1FAE00();
      if (__OFSUB__((int)a2, v11)) {
LABEL_33:
      }
        __break(1u);
      v10 += (int)a2 - v11;
LABEL_8:
      uint64_t v12 = sub_1FADF0();
      if (v12 >= v9) {
        size_t v13 = (a2 >> 32) - (int)a2;
      }
      else {
        size_t v13 = v12;
      }
      if (!v7)
      {
LABEL_35:
        __break(1u);
LABEL_36:
        __break(1u);
LABEL_37:
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        JUMPOUT(0x1A7214);
      }
      if (!v10) {
        goto LABEL_36;
      }
      int v14 = memcmp(v7, v10, v13);
      __s1 = sub_520E8(a2, a3);
      BOOL v8 = v14 == 0;
LABEL_24:
      char v24 = v8;
LABEL_29:
      *a4 = v24;
      return __s1;
    case 2uLL:
      uint64_t v15 = *(void *)(a2 + 16);
      uint64_t v16 = *(void *)(a2 + 24);
      swift_retain();
      swift_retain();
      uint64_t v17 = (char *)sub_1FADE0();
      if (!v17) {
        goto LABEL_17;
      }
      uint64_t v18 = sub_1FAE00();
      if (__OFSUB__(v15, v18)) {
        goto LABEL_32;
      }
      v17 += v15 - v18;
LABEL_17:
      BOOL v19 = __OFSUB__(v16, v15);
      int64_t v20 = v16 - v15;
      if (v19) {
        goto LABEL_31;
      }
      uint64_t v21 = sub_1FADF0();
      if (v21 >= v20) {
        size_t v22 = v20;
      }
      else {
        size_t v22 = v21;
      }
      if (!v7) {
        goto LABEL_37;
      }
      if (!v17) {
        goto LABEL_38;
      }
      int v23 = memcmp(v7, v17, v22);
      swift_release();
      __s1 = swift_release();
      BOOL v8 = v23 == 0;
      goto LABEL_24;
    case 3uLL:
      if (!__s1) {
        goto LABEL_39;
      }
      char v24 = 1;
      goto LABEL_29;
    default:
      uint64_t __s2 = a2;
      __int16 v26 = a3;
      char v27 = BYTE2(a3);
      char v28 = BYTE3(a3);
      char v29 = BYTE4(a3);
      char v30 = BYTE5(a3);
      if (__s1)
      {
        __s1 = memcmp((const void *)__s1, &__s2, BYTE6(a3));
        BOOL v8 = __s1 == 0;
        goto LABEL_24;
      }
      __break(1u);
      goto LABEL_35;
  }
}

uint64_t sub_1A7224(uint64_t a1, uint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t __s1 = a1;
  __int16 v9 = a2;
  char v10 = BYTE2(a2);
  char v11 = BYTE3(a2);
  char v12 = BYTE4(a2);
  char v13 = BYTE5(a2);
  sub_1A6FB0((uint64_t)&__s1, a3, a4, &v7);
  if (!v4) {
    char v5 = v7;
  }
  return v5 & 1;
}

uint64_t sub_1A72FC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, unint64_t a5)
{
  uint64_t result = sub_1FADE0();
  uint64_t v11 = result;
  if (result)
  {
    uint64_t result = sub_1FAE00();
    if (__OFSUB__(a1, result))
    {
LABEL_9:
      __break(1u);
      return result;
    }
    v11 += a1 - result;
  }
  if (__OFSUB__(a2, a1))
  {
    __break(1u);
    goto LABEL_9;
  }
  sub_1FADF0();
  sub_1A6FB0(v11, a4, a5, &v13);
  if (!v5) {
    char v12 = v13;
  }
  return v12 & 1;
}

uint64_t sub_1A73B4(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  uint64_t v8 = 0;
  switch(a2 >> 62)
  {
    case 1uLL:
      LODWORD(v8) = HIDWORD(a1) - a1;
      if (__OFSUB__(HIDWORD(a1), a1))
      {
        __break(1u);
LABEL_26:
        __break(1u);
LABEL_27:
        __break(1u);
LABEL_28:
        __break(1u);
LABEL_29:
        __break(1u);
        JUMPOUT(0x1A761CLL);
      }
      uint64_t v8 = (int)v8;
LABEL_6:
      switch(a4 >> 62)
      {
        case 1uLL:
          LODWORD(v12) = HIDWORD(a3) - a3;
          if (__OFSUB__(HIDWORD(a3), a3)) {
            goto LABEL_27;
          }
          uint64_t v12 = (int)v12;
LABEL_11:
          if (v8 == v12)
          {
            if (v8 < 1)
            {
              char v17 = 1;
            }
            else
            {
              switch(a2 >> 62)
              {
                case 1uLL:
                  if (a1 >> 32 < (int)a1) {
                    goto LABEL_29;
                  }
                  sub_52090(a3, a4);
                  sub_52090(a1, a2);
                  char v17 = sub_1A72FC((int)a1, a1 >> 32, a2 & 0x3FFFFFFFFFFFFFFFLL, a3, a4);
                  sub_520E8(a3, a4);
                  uint64_t v18 = a1;
                  unint64_t v19 = a2;
                  break;
                case 2uLL:
                  uint64_t v20 = a2 & 0x3FFFFFFFFFFFFFFFLL;
                  uint64_t v21 = *(void *)(a1 + 16);
                  uint64_t v22 = *(void *)(a1 + 24);
                  sub_52090(a3, a4);
                  swift_retain();
                  swift_retain();
                  char v17 = sub_1A72FC(v21, v22, v20, a3, a4);
                  sub_520E8(a3, a4);
                  swift_release();
                  swift_release();
                  return v17 & 1;
                case 3uLL:
                  sub_52090(a3, a4);
                  uint64_t v16 = 0;
                  uint64_t v15 = 0;
                  goto LABEL_22;
                default:
                  sub_52090(a3, a4);
                  uint64_t v15 = a2 & 0xFFFFFFFFFFFFFFLL;
                  uint64_t v16 = a1;
LABEL_22:
                  char v17 = sub_1A7224(v16, v15, a3, a4);
                  uint64_t v18 = a3;
                  unint64_t v19 = a4;
                  break;
              }
              sub_520E8(v18, v19);
            }
          }
          else
          {
            char v17 = 0;
          }
          return v17 & 1;
        case 2uLL:
          uint64_t v14 = *(void *)(a3 + 16);
          uint64_t v13 = *(void *)(a3 + 24);
          BOOL v11 = __OFSUB__(v13, v14);
          uint64_t v12 = v13 - v14;
          if (!v11) {
            goto LABEL_11;
          }
          goto LABEL_28;
        case 3uLL:
          char v17 = v8 == 0;
          return v17 & 1;
        default:
          uint64_t v12 = BYTE6(a4);
          goto LABEL_11;
      }
    case 2uLL:
      uint64_t v10 = *(void *)(a1 + 16);
      uint64_t v9 = *(void *)(a1 + 24);
      BOOL v11 = __OFSUB__(v9, v10);
      uint64_t v8 = v9 - v10;
      if (!v11) {
        goto LABEL_6;
      }
      goto LABEL_26;
    case 3uLL:
      goto LABEL_6;
    default:
      uint64_t v8 = BYTE6(a2);
      goto LABEL_6;
  }
}

BOOL _s20BooksPersonalization14ClientCurrencyO7RequestV2eeoiySbAE_AEtFZ_0(uint64_t a1, uint64_t a2)
{
  if ((sub_1FAF20() & 1) == 0) {
    return 0;
  }
  uint64_t v4 = (int *)type metadata accessor for ClientCurrency.Request();
  uint64_t v5 = v4[5];
  uint64_t v6 = *(void *)(a1 + v5);
  uint64_t v7 = *(void *)(a1 + v5 + 8);
  uint64_t v8 = (void *)(a2 + v5);
  BOOL v9 = v6 == *v8 && v7 == v8[1];
  if (v9 || (char v10 = sub_1FC5F0(), result = 0, (v10 & 1) != 0))
  {
    if (sub_194C0(*(void *)(a1 + v4[6]), *(void *)(a2 + v4[6])))
    {
      uint64_t v12 = v4[7];
      uint64_t v13 = a1 + v12;
      uint64_t v14 = *(void *)(a1 + v12);
      unint64_t v15 = *(void *)(v13 + 8);
      uint64_t v16 = (uint64_t *)(a2 + v12);
      uint64_t v17 = *v16;
      unint64_t v18 = v16[1];
      if (v15 >> 60 == 15)
      {
        if (v18 >> 60 == 15) {
          return 1;
        }
      }
      else if (v18 >> 60 != 15)
      {
        sub_1A6570(v14, *(void *)(v13 + 8));
        sub_1A6570(v17, v18);
        char v19 = sub_1A73B4(v14, v15, v17, v18);
        sub_134480(v17, v18);
        sub_134480(v14, v15);
        return (v19 & 1) != 0;
      }
      sub_1A6570(v14, *(void *)(v13 + 8));
      sub_1A6570(v17, v18);
      sub_134480(v14, v15);
      sub_134480(v17, v18);
    }
    return 0;
  }
  return result;
}

uint64_t sub_1A77A4()
{
  return sub_1A77EC(&qword_272E10, (void (*)(uint64_t))type metadata accessor for ClientCurrency.Request);
}

uint64_t sub_1A77EC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1A7838()
{
  unint64_t result = qword_272E18;
  if (!qword_272E18)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272E18);
  }
  return result;
}

uint64_t dispatch thunk of ClientTransport.makeCall(with:operationId:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  unint64_t v15 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a6 + 8)
                                                                                     + **(int **)(a6 + 8));
  uint64_t v13 = (void *)swift_task_alloc();
  *(void *)(v6 + 16) = v13;
  *uint64_t v13 = v6;
  v13[1] = sub_5958;
  return v15(a1, a2, a3, a4, a5, a6);
}

ValueMetadata *type metadata accessor for ClientCurrency()
{
  return &type metadata for ClientCurrency;
}

uint64_t *initializeBufferWithCopyOfBuffer for ClientCurrency.Request(uint64_t *a1, uint64_t *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v17 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v17 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FAF80();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[5];
    uint64_t v9 = a3[6];
    char v10 = (uint64_t *)((char *)a1 + v8);
    BOOL v11 = (uint64_t *)((char *)a2 + v8);
    uint64_t v12 = v11[1];
    *char v10 = *v11;
    v10[1] = v12;
    *(uint64_t *)((char *)a1 + v9) = *(uint64_t *)((char *)a2 + v9);
    uint64_t v13 = a3[7];
    uint64_t v14 = (char *)a1 + v13;
    unint64_t v15 = (_OWORD *)((char *)a2 + v13);
    unint64_t v16 = *(uint64_t *)((char *)a2 + v13 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v16 >> 60 == 15)
    {
      *(_OWORD *)uint64_t v14 = *v15;
    }
    else
    {
      uint64_t v18 = *(void *)v15;
      sub_52090(v18, v16);
      *(void *)uint64_t v14 = v18;
      *((void *)v14 + 1) = v16;
    }
  }
  return a1;
}

uint64_t destroy for ClientCurrency.Request(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FAF80();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t *)(a1 + *(int *)(a2 + 28));
  unint64_t v7 = v6[1];
  if (v7 >> 60 != 15)
  {
    uint64_t v8 = *v6;
    return sub_520E8(v8, v7);
  }
  return result;
}

uint64_t initializeWithCopy for ClientCurrency.Request(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FAF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = a3[6];
  uint64_t v9 = (void *)(a1 + v7);
  char v10 = (void *)(a2 + v7);
  uint64_t v11 = v10[1];
  *uint64_t v9 = *v10;
  v9[1] = v11;
  *(void *)(a1 + v8) = *(void *)(a2 + v8);
  uint64_t v12 = a3[7];
  uint64_t v13 = a1 + v12;
  uint64_t v14 = a2 + v12;
  unint64_t v15 = *(void *)(v14 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v15 >> 60 == 15)
  {
    *(_OWORD *)uint64_t v13 = *(_OWORD *)v14;
  }
  else
  {
    uint64_t v16 = *(void *)v14;
    sub_52090(v16, v15);
    *(void *)uint64_t v13 = v16;
    *(void *)(v13 + 8) = v15;
  }
  return a1;
}

uint64_t assignWithCopy for ClientCurrency.Request(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FAF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (uint64_t *)(a1 + v10);
  uint64_t v12 = (uint64_t *)(a2 + v10);
  unint64_t v13 = *(void *)(a2 + v10 + 8);
  if (*(void *)(a1 + v10 + 8) >> 60 != 15)
  {
    if (v13 >> 60 != 15)
    {
      uint64_t v15 = *v12;
      sub_52090(v15, v13);
      uint64_t v16 = *v11;
      unint64_t v17 = v11[1];
      *uint64_t v11 = v15;
      v11[1] = v13;
      sub_520E8(v16, v17);
      return a1;
    }
    sub_1A7DB4((uint64_t)v11);
    goto LABEL_6;
  }
  if (v13 >> 60 == 15)
  {
LABEL_6:
    *(_OWORD *)uint64_t v11 = *(_OWORD *)v12;
    return a1;
  }
  uint64_t v14 = *v12;
  sub_52090(v14, v13);
  *uint64_t v11 = v14;
  v11[1] = v13;
  return a1;
}

uint64_t sub_1A7DB4(uint64_t a1)
{
  return a1;
}

uint64_t initializeWithTake for ClientCurrency.Request(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FAF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(_OWORD *)(a1 + a3[5]) = *(_OWORD *)(a2 + a3[5]);
  *(void *)(a1 + v7) = *(void *)(a2 + v7);
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  return a1;
}

uint64_t assignWithTake for ClientCurrency.Request(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FAF80();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = a3[5];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[6]) = *(void *)(a2 + a3[6]);
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  unint64_t v13 = (uint64_t *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  unint64_t v15 = *(void *)(a1 + v12 + 8);
  if (v15 >> 60 != 15)
  {
    unint64_t v16 = v14[1];
    if (v16 >> 60 != 15)
    {
      uint64_t v17 = *v13;
      *unint64_t v13 = *v14;
      v13[1] = v16;
      sub_520E8(v17, v15);
      return a1;
    }
    sub_1A7DB4((uint64_t)v13);
  }
  *(_OWORD *)unint64_t v13 = *(_OWORD *)v14;
  return a1;
}

uint64_t getEnumTagSinglePayload for ClientCurrency.Request(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A7F9C);
}

uint64_t sub_1A7F9C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FAF80();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for ClientCurrency.Request(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A8074);
}

uint64_t sub_1A8074(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FAF80();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A8134()
{
  uint64_t result = sub_1FAF80();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t destroy for ClientCurrency.Response(uint64_t a1)
{
  swift_bridgeObjectRelease();
  uint64_t v2 = *(void *)(a1 + 16);
  unint64_t v3 = *(void *)(a1 + 24);

  return sub_520E8(v2, v3);
}

void *initializeWithCopy for ClientCurrency.Response(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[2];
  unint64_t v5 = a2[3];
  swift_bridgeObjectRetain();
  sub_52090(v4, v5);
  a1[2] = v4;
  a1[3] = v5;
  return a1;
}

void *assignWithCopy for ClientCurrency.Response(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[2];
  unint64_t v4 = a2[3];
  sub_52090(v5, v4);
  uint64_t v6 = a1[2];
  unint64_t v7 = a1[3];
  a1[2] = v5;
  a1[3] = v4;
  sub_520E8(v6, v7);
  return a1;
}

void *assignWithTake for ClientCurrency.Response(void *a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *a1 = *(void *)a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a1[2];
  unint64_t v6 = a1[3];
  *((_OWORD *)a1 + 1) = *(_OWORD *)(a2 + 16);
  sub_520E8(v5, v6);
  return a1;
}

ValueMetadata *type metadata accessor for ClientCurrency.Response()
{
  return &type metadata for ClientCurrency.Response;
}

uint64_t sub_1A832C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v5[146] = v4;
  v5[145] = a4;
  v5[144] = a3;
  v5[143] = a2;
  v5[142] = a1;
  return _swift_task_switch(sub_1A835C, 0, 0);
}

uint64_t sub_1A835C()
{
  uint64_t v11 = v0[145];
  unint64_t v1 = (const void *)v0[143];
  uint64_t v2 = v0[142];
  sub_12124(&qword_26D450);
  uint64_t v3 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = swift_allocObject();
  v0[147] = v5;
  *(_OWORD *)(v5 + 16) = xmmword_1FD2A0;
  sub_A0EE0(v2, v5 + v4);
  memcpy(v0 + 2, v1, 0x460uLL);
  unint64_t v10 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v11 + 8) + **(int **)(v11 + 8));
  unint64_t v6 = (void *)swift_task_alloc();
  v0[148] = v6;
  *unint64_t v6 = v0;
  v6[1] = sub_1A8514;
  uint64_t v7 = v0[145];
  uint64_t v8 = v0[144];
  return v10(v5, v0 + 2, v8, v7);
}

uint64_t sub_1A8514(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 1192) = a1;
  *(void *)(v3 + 1200) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1) {
    unint64_t v4 = sub_1A8788;
  }
  else {
    unint64_t v4 = sub_1A863C;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1A863C()
{
  if (*(void *)(v0[149] + 16) && (unint64_t v1 = sub_4C9C4(v0[142]), (v2 & 1) != 0))
  {
    uint64_t v3 = *(void *)(*(void *)(v0[149] + 56) + 8 * v1);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v4 = (uint64_t (*)(uint64_t))v0[1];
    return v4(v3);
  }
  else
  {
    uint64_t v6 = v0[142];
    swift_bridgeObjectRelease();
    type metadata accessor for Errors(0);
    sub_1A94A0();
    swift_allocError();
    uint64_t v8 = v7;
    uint64_t v9 = sub_1FB110();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16))(v8, v6, v9);
    swift_willThrow();
    unint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1A8788()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

int *SeedBasedRecommendationRequest.init(uuid:seedBooks:userInfo:storeInfo:mediaType:allGenresAllowed:allowedSales:explicitAllowed:excludedStoreIDs:bookCandidateLimitPerSeedBook:bookCandidateLimit:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t *a4@<X3>, char *a5@<X4>, char a6@<W5>, uint64_t *a7@<X6>, char a8@<W7>, uint64_t a9@<X8>, uint64_t a10, uint64_t a11, uint64_t a12)
{
  uint64_t v15 = *a3;
  uint64_t v16 = a3[1];
  uint64_t v17 = *a4;
  uint64_t v18 = a4[1];
  char v19 = *a5;
  uint64_t v20 = *a7;
  uint64_t v21 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 32))(a9, a1, v21);
  uint64_t result = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(a9 + result[5]) = a2;
  int v23 = (void *)(a9 + result[6]);
  void *v23 = v15;
  v23[1] = v16;
  char v24 = (void *)(a9 + result[7]);
  void *v24 = v17;
  v24[1] = v18;
  *(unsigned char *)(a9 + result[8]) = v19;
  *(unsigned char *)(a9 + result[9]) = a6;
  *(void *)(a9 + result[10]) = v20;
  *(unsigned char *)(a9 + result[11]) = a8;
  *(void *)(a9 + result[12]) = a10;
  *(void *)(a9 + result[13]) = a11;
  *(void *)(a9 + result[14]) = a12;
  return result;
}

uint64_t type metadata accessor for SeedBasedRecommendationRequest(uint64_t a1)
{
  return sub_DA140(a1, qword_272F18);
}

uint64_t SeedBasedRecommendationRequest.seedBooks.getter()
{
  type metadata accessor for SeedBasedRecommendationRequest(0);

  return swift_bridgeObjectRetain();
}

uint64_t SeedBasedRecommendationRequest.userInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 24));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SeedBasedRecommendationRequest.storeInfo.getter@<X0>(void *a1@<X8>)
{
  uint64_t v3 = (void *)(v1 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 28));
  uint64_t v4 = v3[1];
  *a1 = *v3;
  a1[1] = v4;

  return swift_bridgeObjectRetain();
}

uint64_t SeedBasedRecommendationRequest.mediaType.getter@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = type metadata accessor for SeedBasedRecommendationRequest(0);
  *a1 = *(unsigned char *)(v1 + *(int *)(result + 32));
  return result;
}

uint64_t SeedBasedRecommendationRequest.allGenresAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 36));
}

uint64_t SeedBasedRecommendationRequest.allowedSales.getter@<X0>(void *a1@<X8>)
{
  uint64_t result = type metadata accessor for SeedBasedRecommendationRequest(0);
  *a1 = *(void *)(v1 + *(int *)(result + 40));
  return result;
}

uint64_t SeedBasedRecommendationRequest.explicitAllowed.getter()
{
  return *(unsigned __int8 *)(v0 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 44));
}

uint64_t SeedBasedRecommendationRequest.excludedStoreIDs.getter()
{
  type metadata accessor for SeedBasedRecommendationRequest(0);

  return swift_bridgeObjectRetain();
}

uint64_t SeedBasedRecommendationRequest.bookCandidateLimitPerSeedBook.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 52));
}

uint64_t SeedBasedRecommendationRequest.bookCandidateLimit.getter()
{
  return *(void *)(v0 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 56));
}

void *initializeBufferWithCopyOfBuffer for SeedBasedRecommendationRequest(void *a1, void *a2, int *a3)
{
  int v5 = *(_DWORD *)(*((void *)a3 - 1) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v20 = *a2;
    *a1 = *a2;
    a1 = (void *)(v20 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FB110();
    (*(void (**)(void *, void *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = a3[6];
    *(void *)((char *)a1 + a3[5]) = *(void *)((char *)a2 + a3[5]);
    uint64_t v9 = (void *)((char *)a1 + v8);
    unint64_t v10 = (void *)((char *)a2 + v8);
    uint64_t v11 = v10[1];
    *uint64_t v9 = *v10;
    v9[1] = v11;
    uint64_t v12 = a3[7];
    uint64_t v13 = a3[8];
    uint64_t v14 = (void *)((char *)a1 + v12);
    uint64_t v15 = (void *)((char *)a2 + v12);
    uint64_t v16 = v15[1];
    *uint64_t v14 = *v15;
    v14[1] = v16;
    *((unsigned char *)a1 + v13) = *((unsigned char *)a2 + v13);
    uint64_t v17 = a3[10];
    *((unsigned char *)a1 + a3[9]) = *((unsigned char *)a2 + a3[9]);
    *(void *)((char *)a1 + v17) = *(void *)((char *)a2 + v17);
    uint64_t v18 = a3[12];
    *((unsigned char *)a1 + a3[11]) = *((unsigned char *)a2 + a3[11]);
    *(void *)((char *)a1 + v18) = *(void *)((char *)a2 + v18);
    uint64_t v19 = a3[14];
    *(void *)((char *)a1 + a3[13]) = *(void *)((char *)a2 + a3[13]);
    *(void *)((char *)a1 + v19) = *(void *)((char *)a2 + v19);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for SeedBasedRecommendationRequest(uint64_t a1)
{
  uint64_t v2 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SeedBasedRecommendationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  uint64_t v10 = v9[1];
  *uint64_t v8 = *v9;
  v8[1] = v10;
  uint64_t v11 = a3[7];
  uint64_t v12 = a3[8];
  uint64_t v13 = (void *)(a1 + v11);
  uint64_t v14 = (void *)(a2 + v11);
  uint64_t v15 = v14[1];
  *uint64_t v13 = *v14;
  v13[1] = v15;
  *(unsigned char *)(a1 + v12) = *(unsigned char *)(a2 + v12);
  uint64_t v16 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v16) = *(void *)(a2 + v16);
  uint64_t v17 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v17) = *(void *)(a2 + v17);
  uint64_t v18 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v18) = *(void *)(a2 + v18);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SeedBasedRecommendationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (void *)(a2 + v7);
  *uint64_t v8 = *v9;
  v8[1] = v9[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v10 = a3[7];
  uint64_t v11 = (void *)(a1 + v10);
  uint64_t v12 = (void *)(a2 + v10);
  *uint64_t v11 = *v12;
  v11[1] = v12[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + a3[14]) = *(void *)(a2 + a3[14]);
  return a1;
}

uint64_t initializeWithTake for SeedBasedRecommendationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = a3[6];
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  *(_OWORD *)(a1 + v7) = *(_OWORD *)(a2 + v7);
  uint64_t v8 = a3[8];
  *(_OWORD *)(a1 + a3[7]) = *(_OWORD *)(a2 + a3[7]);
  *(unsigned char *)(a1 + v8) = *(unsigned char *)(a2 + v8);
  uint64_t v9 = a3[10];
  *(unsigned char *)(a1 + a3[9]) = *(unsigned char *)(a2 + a3[9]);
  *(void *)(a1 + v9) = *(void *)(a2 + v9);
  uint64_t v10 = a3[12];
  *(unsigned char *)(a1 + a3[11]) = *(unsigned char *)(a2 + a3[11]);
  *(void *)(a1 + v10) = *(void *)(a2 + v10);
  uint64_t v11 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v11) = *(void *)(a2 + v11);
  return a1;
}

uint64_t assignWithTake for SeedBasedRecommendationRequest(uint64_t a1, uint64_t a2, int *a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  *(void *)(a1 + a3[5]) = *(void *)(a2 + a3[5]);
  swift_bridgeObjectRelease();
  uint64_t v7 = a3[6];
  uint64_t v8 = (void *)(a1 + v7);
  uint64_t v9 = (uint64_t *)(a2 + v7);
  uint64_t v11 = *v9;
  uint64_t v10 = v9[1];
  *uint64_t v8 = v11;
  v8[1] = v10;
  swift_bridgeObjectRelease();
  uint64_t v12 = a3[7];
  uint64_t v13 = (void *)(a1 + v12);
  uint64_t v14 = (uint64_t *)(a2 + v12);
  uint64_t v16 = *v14;
  uint64_t v15 = v14[1];
  *uint64_t v13 = v16;
  v13[1] = v15;
  swift_bridgeObjectRelease();
  uint64_t v17 = a3[9];
  *(unsigned char *)(a1 + a3[8]) = *(unsigned char *)(a2 + a3[8]);
  *(unsigned char *)(a1 + v17) = *(unsigned char *)(a2 + v17);
  uint64_t v18 = a3[11];
  *(void *)(a1 + a3[10]) = *(void *)(a2 + a3[10]);
  *(unsigned char *)(a1 + v18) = *(unsigned char *)(a2 + v18);
  *(void *)(a1 + a3[12]) = *(void *)(a2 + a3[12]);
  swift_bridgeObjectRelease();
  uint64_t v19 = a3[14];
  *(void *)(a1 + a3[13]) = *(void *)(a2 + a3[13]);
  *(void *)(a1 + v19) = *(void *)(a2 + v19);
  return a1;
}

uint64_t getEnumTagSinglePayload for SeedBasedRecommendationRequest(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1A9114);
}

uint64_t sub_1A9114(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for SeedBasedRecommendationRequest(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1A91E8);
}

uint64_t sub_1A91E8(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FB110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t sub_1A92A4()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t dispatch thunk of SeedBasedRecommendationServiceType.fetchBooks(for:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t type metadata accessor for Errors(uint64_t a1)
{
  return sub_DA140(a1, (uint64_t *)&unk_273008);
}

unint64_t sub_1A94A0()
{
  unint64_t result = qword_272F88;
  if (!qword_272F88)
  {
    type metadata accessor for Errors(255);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_272F88);
  }
  return result;
}

uint64_t *sub_1A94F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = sub_1FB110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  }
  return a1;
}

uint64_t sub_1A95A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_272F90);
  int v5 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 48);

  return v5(a1, a2, v4);
}

uint64_t sub_1A9618(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_12124(&qword_272F90);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(a1, a2, a3, v6);
}

uint64_t sub_1A9698(uint64_t a1)
{
  uint64_t result = sub_1FB110();
  if (v3 <= 0x3F)
  {
    uint64_t v4 = *(void *)(result - 8);
    swift_initEnumMetadataSingleCase();
    uint64_t result = 0;
    *(_DWORD *)(*(void *)(a1 - 8) + 84) = *(_DWORD *)(v4 + 84);
  }
  return result;
}

char *sub_1A973C(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12473C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  uint64_t result = sub_1A9984(v5);
  *a1 = v2;
  return result;
}

uint64_t Dictionary<>.primarySeed.getter@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v5 = 0;
  sub_1A9888(&v5, a1, v7);
  sub_55844((uint64_t)v7, (uint64_t)v8, &qword_26EB40);
  sub_55844((uint64_t)v8, (uint64_t)__src, &qword_26EB40);
  if (sub_AE3B8((uint64_t)__src) == 1)
  {
    sub_111554(&v5);
  }
  else
  {
    memcpy(&v4[7], __src, 0x229uLL);
    char v5 = 0;
    memcpy(v6, v4, sizeof(v6));
    AuthorRecommendationSource.id.getter(&v5);
  }
  return sub_55844((uint64_t)&v5, a2, &qword_273018);
}

uint64_t sub_1A9888@<X0>(char *a1@<X0>, uint64_t a2@<X1>, void *a3@<X8>)
{
  if (*(void *)(a2 + 16))
  {
    unint64_t v5 = sub_4C744(*a1);
    if (v6)
    {
      __dst[0] = *(void *)(*(void *)(a2 + 56) + 8 * v5);
      swift_bridgeObjectRetain_n();
      sub_1A973C(__dst);
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(__dst[0] + 16);
      if (v7)
      {
        uint64_t v8 = (const void *)(__dst[0] + 560 * v7 - 528);
        memcpy(__dst, v8, 0x229uLL);
        memmove(a3, v8, 0x229uLL);
        AuthorRecommendationSource.id.getter(a3);
        sub_12384(__dst);
        return swift_release();
      }
      swift_release();
    }
  }
  sub_AE3D0(__dst);
  return sub_55844((uint64_t)__dst, (uint64_t)a3, &qword_26EB40);
}

char *sub_1A9984(uint64_t *a1)
{
  uint64_t v2 = a1;
  Swift::Int v3 = a1[1];
  uint64_t result = (char *)sub_1FC570(v3);
  if ((uint64_t)result < v3)
  {
    if (v3 >= 0) {
      uint64_t v5 = v3;
    }
    else {
      uint64_t v5 = v3 + 1;
    }
    if (v3 < -1) {
      goto LABEL_241;
    }
    Swift::Int v199 = result;
    Swift::Int v203 = v3;
    if (v3 < 2)
    {
      Swift::Int v204 = (char *)&_swiftEmptyArrayStorage[4];
      char v198 = _swiftEmptyArrayStorage;
      if (v3 != 1)
      {
        unint64_t v12 = _swiftEmptyArrayStorage[2];
        unint64_t v10 = (char *)_swiftEmptyArrayStorage;
        if (v12 < 2) {
          goto LABEL_210;
        }
        goto LABEL_197;
      }
    }
    else
    {
      uint64_t v6 = v5 >> 1;
      uint64_t v7 = sub_1FBB40();
      *(void *)(v7 + 16) = v6;
      char v198 = (void *)v7;
      Swift::Int v204 = (char *)(v7 + 32);
    }
    Swift::Int v8 = 0;
    uint64_t v9 = *v2;
    Swift::Int v201 = v3 - 1;
    uint64_t v196 = v2;
    uint64_t v197 = *v2 - 560;
    unint64_t v10 = (char *)_swiftEmptyArrayStorage;
    Swift::Int v11 = v3;
    uint64_t v216 = *v2;
LABEL_15:
    uint64_t v200 = v10;
    Swift::Int v13 = v8 + 1;
    uint64_t v215 = v8;
    if (v8 + 1 >= v11)
    {
      Swift::Int v16 = v8 + 1;
      goto LABEL_90;
    }
    Swift::Int v14 = v8;
    memcpy(__dst, (const void *)(v9 + 560 * v13), 0x229uLL);
    memcpy(v241, (const void *)(v9 + 560 * v14), 0x229uLL);
    if ((unint64_t)__dst[17] >> 1 == 0xFFFFFFFF)
    {
      sub_12384(__dst);
      sub_12384(v241);
      double v15 = 0.0;
    }
    else
    {
      unint64_t v17 = __dst[17];
      uint64_t v18 = __dst[11];
      uint64_t v19 = __dst[12];
      uint64_t v20 = __dst[13];
      uint64_t v21 = __dst[14];
      uint64_t v22 = __dst[15];
      uint64_t v23 = __dst[16];
      unint64_t v242 = __dst[18];
      if ((unint64_t)__dst[17] >> 62 == 3)
      {
        uint64_t v24 = __dst[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v24 = swift_allocObject();
        *(_OWORD *)(v24 + 16) = xmmword_1FD2A0;
        *(void *)(v24 + 32) = v18;
        *(void *)(v24 + 40) = v19;
        *(void *)(v24 + 48) = v20;
        *(void *)(v24 + 56) = v21;
        *(void *)(v24 + 64) = v22;
        *(void *)(v24 + 72) = v23;
        *(unsigned char *)(v24 + 80) = v17 & 1;
      }
      uint64_t v225 = v23;
      sub_12430(v18, v19, v20, v21, v22, v23, v17);
      sub_12384(__dst);
      sub_12384(v241);
      sub_12430(v18, v19, v20, v21, v22, v23, v17);
      double v231 = COERCE_DOUBLE(Array<A>.affinity.getter(v24));
      uint64_t v25 = v18;
      char v27 = v26;
      swift_bridgeObjectRelease();
      sub_1255C(v25, v19, v20, v21, v22, v225, v17);
      if (v27) {
        double v15 = 0.0;
      }
      else {
        double v15 = v231;
      }
      uint64_t v9 = v216;
    }
    uint64_t v28 = v241[17];
    if ((unint64_t)v241[17] >> 1 == 0xFFFFFFFF)
    {
      sub_124B4(v241);
      sub_124B4(__dst);
      double v29 = 0.0;
    }
    else
    {
      uint64_t v30 = v241[11];
      uint64_t v31 = v241[12];
      uint64_t v32 = v241[13];
      uint64_t v33 = v241[14];
      uint64_t v34 = v241[15];
      unint64_t v242 = v241[16];
      if ((unint64_t)v241[17] >> 62 == 3)
      {
        uint64_t v37 = v241[11];
      }
      else
      {
        uint64_t v35 = v241[17];
        sub_12124(&qword_26D5D8);
        uint64_t v36 = swift_allocObject();
        uint64_t v28 = v35;
        uint64_t v37 = v36;
        *(_OWORD *)(v36 + 16) = xmmword_1FD2A0;
        *(void *)(v36 + 32) = v30;
        *(void *)(v36 + 40) = v31;
        *(void *)(v36 + 48) = v32;
        *(void *)(v36 + 56) = v33;
        unint64_t v38 = v242;
        *(void *)(v36 + 64) = v34;
        *(void *)(v36 + 72) = v38;
        *(unsigned char *)(v36 + 80) = v28 & 1;
      }
      unint64_t v226 = v28;
      sub_1244C();
      sub_1244C();
      double v232 = COERCE_DOUBLE(Array<A>.affinity.getter(v37));
      char v40 = v39;
      swift_bridgeObjectRelease();
      sub_1255C(v30, v31, v32, v33, v34, v242, v226);
      sub_124B4(v241);
      sub_124B4(__dst);
      if (v40) {
        double v29 = 0.0;
      }
      else {
        double v29 = v232;
      }
      uint64_t v9 = v216;
    }
    Swift::Int v16 = v215 + 2;
    Swift::Int v11 = v203;
    if (v215 + 2 >= v203)
    {
LABEL_81:
      if (v15 < v29) {
        goto LABEL_82;
      }
      goto LABEL_90;
    }
    while (1)
    {
      Swift::Int v205 = v16;
      memcpy(v238, (const void *)(v9 + 560 * v16), 0x229uLL);
      memcpy(__src, (const void *)(v9 + 560 * v13), 0x229uLL);
      unint64_t v41 = v238[17];
      if ((unint64_t)v238[17] >> 1 == 0xFFFFFFFF)
      {
        sub_12384(v238);
        sub_12384(__src);
        double v42 = 0.0;
        goto LABEL_57;
      }
      uint64_t v44 = v238[11];
      uint64_t v43 = v238[12];
      uint64_t v46 = v238[13];
      uint64_t v45 = v238[14];
      uint64_t v47 = v238[15];
      uint64_t v48 = v238[16];
      unint64_t v242 = v238[18];
      uint64_t v227 = v238[15];
      if ((unint64_t)v238[17] >> 62 == 3)
      {
        uint64_t v49 = *(void *)(v238[11] + 16);
        if (!v49)
        {
          uint64_t v62 = v238[15];
          uint64_t v58 = v238[16];
          sub_12430(v238[11], v238[12], v238[13], v238[14], v238[15], v238[16], v238[17]);
          sub_12384(v238);
          sub_12384(__src);
          uint64_t v57 = v43;
          sub_12430(v44, v43, v46, v45, v62, v58, v41);
          __int16 v52 = _swiftEmptyArrayStorage;
          uint64_t v59 = _swiftEmptyArrayStorage[2];
          if (v59) {
            goto LABEL_51;
          }
          goto LABEL_55;
        }
        uint64_t v50 = v238[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v50 = swift_allocObject();
        *(_OWORD *)(v50 + 16) = xmmword_1FD2A0;
        *(void *)(v50 + 32) = v44;
        *(void *)(v50 + 40) = v43;
        *(void *)(v50 + 48) = v46;
        *(void *)(v50 + 56) = v45;
        *(void *)(v50 + 64) = v47;
        *(void *)(v50 + 72) = v48;
        uint64_t v49 = 1;
        *(unsigned char *)(v50 + 80) = v41 & 1;
      }
      unint64_t v233 = v41;
      sub_12430(v44, v43, v46, v45, v47, v48, v41);
      sub_12384(v238);
      sub_12384(__src);
      uint64_t v221 = v43;
      uint64_t v217 = v48;
      sub_12430(v44, v43, v46, v45, v47, v48, v41);
      swift_bridgeObjectRetain();
      uint64_t v51 = (double *)(v50 + 80);
      __int16 v52 = _swiftEmptyArrayStorage;
      do
      {
        if ((*(unsigned char *)v51 & 1) == 0)
        {
          double v53 = *(v51 - 2);
          double v54 = exp2(-*(v51 - 1) / *(v51 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            __int16 v52 = sub_41BAC(0, v52[2] + 1, 1, v52);
          }
          unint64_t v56 = v52[2];
          unint64_t v55 = v52[3];
          if (v56 >= v55 >> 1) {
            __int16 v52 = sub_41BAC((void *)(v55 > 1), v56 + 1, 1, v52);
          }
          v52[2] = v56 + 1;
          *(double *)&v52[v56 + 4] = v53 * v54;
        }
        v51 += 7;
        --v49;
      }
      while (v49);
      swift_bridgeObjectRelease();
      uint64_t v57 = v221;
      uint64_t v58 = v217;
      unint64_t v41 = v233;
      uint64_t v59 = v52[2];
      if (v59)
      {
LABEL_51:
        uint64_t v60 = (double *)(v52 + 4);
        double v42 = 0.0;
        do
        {
          double v61 = *v60++;
          double v42 = v42 + v61;
          --v59;
        }
        while (v59);
        swift_bridgeObjectRelease();
        goto LABEL_56;
      }
LABEL_55:
      swift_bridgeObjectRelease();
      double v42 = 0.0;
LABEL_56:
      swift_bridgeObjectRelease();
      sub_1255C(v44, v57, v46, v45, v227, v58, v41);
      uint64_t v9 = v216;
LABEL_57:
      unint64_t v63 = __src[17];
      double v64 = 0.0;
      if ((unint64_t)__src[17] >> 1 == 0xFFFFFFFF) {
        goto LABEL_77;
      }
      uint64_t v65 = __src[11];
      uint64_t v66 = __src[12];
      uint64_t v67 = __src[13];
      uint64_t v68 = __src[14];
      uint64_t v69 = __src[15];
      uint64_t v70 = __src[16];
      unint64_t v242 = __src[18];
      uint64_t v222 = __src[15];
      uint64_t v228 = __src[14];
      if ((unint64_t)__src[17] >> 62 == 3)
      {
        uint64_t v71 = *(void *)(__src[11] + 16);
        if (!v71)
        {
          uint64_t v82 = __src[14];
          sub_12430(__src[11], __src[12], __src[13], __src[14], __src[15], __src[16], __src[17]);
          sub_12430(v65, v66, v67, v82, v69, v70, v63);
          uint64_t v74 = _swiftEmptyArrayStorage;
          uint64_t v79 = _swiftEmptyArrayStorage[2];
          if (v79) {
            goto LABEL_71;
          }
          goto LABEL_75;
        }
        uint64_t v72 = __src[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v72 = swift_allocObject();
        *(_OWORD *)(v72 + 16) = xmmword_1FD2A0;
        *(void *)(v72 + 32) = v65;
        *(void *)(v72 + 40) = v66;
        *(void *)(v72 + 48) = v67;
        *(void *)(v72 + 56) = v68;
        *(void *)(v72 + 64) = v69;
        *(void *)(v72 + 72) = v70;
        uint64_t v71 = 1;
        *(unsigned char *)(v72 + 80) = v63 & 1;
      }
      unint64_t v234 = v63;
      sub_12430(v65, v66, v67, v68, v69, v70, v63);
      uint64_t v220 = v66;
      sub_12430(v65, v66, v67, v68, v69, v70, v63);
      swift_bridgeObjectRetain();
      char v73 = (double *)(v72 + 80);
      uint64_t v74 = _swiftEmptyArrayStorage;
      do
      {
        if ((*(unsigned char *)v73 & 1) == 0)
        {
          double v75 = *(v73 - 2);
          double v76 = exp2(-*(v73 - 1) / *(v73 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v74 = sub_41BAC(0, v74[2] + 1, 1, v74);
          }
          unint64_t v78 = v74[2];
          unint64_t v77 = v74[3];
          if (v78 >= v77 >> 1) {
            uint64_t v74 = sub_41BAC((void *)(v77 > 1), v78 + 1, 1, v74);
          }
          v74[2] = v78 + 1;
          *(double *)&v74[v78 + 4] = v75 * v76;
        }
        v73 += 7;
        --v71;
      }
      while (v71);
      swift_bridgeObjectRelease();
      uint64_t v66 = v220;
      unint64_t v63 = v234;
      uint64_t v79 = v74[2];
      if (v79)
      {
LABEL_71:
        int v80 = (double *)(v74 + 4);
        double v64 = 0.0;
        do
        {
          double v81 = *v80++;
          double v64 = v64 + v81;
          --v79;
        }
        while (v79);
        swift_bridgeObjectRelease();
        goto LABEL_76;
      }
LABEL_75:
      swift_bridgeObjectRelease();
      double v64 = 0.0;
LABEL_76:
      swift_bridgeObjectRelease();
      sub_1255C(v65, v66, v67, v228, v222, v70, v63);
      uint64_t v9 = v216;
LABEL_77:
      sub_124B4(__src);
      sub_124B4(v238);
      if (v15 < v29 == v42 >= v64)
      {
        Swift::Int v11 = v203;
        Swift::Int v16 = v205;
        goto LABEL_81;
      }
      Swift::Int v11 = v203;
      if (v205 == v201)
      {
        Swift::Int v16 = v203;
        if (v15 >= v29) {
          goto LABEL_90;
        }
LABEL_82:
        if (v16 < v215) {
          goto LABEL_234;
        }
        if (v215 < v16)
        {
          unint64_t v83 = (char *)(v197 + 560 * v16);
          Swift::Int v84 = v16;
          Swift::Int v85 = v215;
          uint64_t v86 = (char *)(v9 + 560 * v215);
          do
          {
            if (v85 != --v84)
            {
              if (!v9) {
                goto LABEL_239;
              }
              Swift::Int v87 = v16;
              memcpy(__src, v86, 0x229uLL);
              memmove(v86, v83, 0x230uLL);
              memcpy(v83, __src, 0x229uLL);
              Swift::Int v11 = v203;
              Swift::Int v16 = v87;
            }
            ++v85;
            v83 -= 560;
            v86 += 560;
          }
          while (v85 < v84);
        }
LABEL_90:
        if (v16 < v11)
        {
          if (__OFSUB__(v16, v215)) {
            goto LABEL_232;
          }
          if (v16 - v215 < (uint64_t)v199)
          {
            uint64_t v88 = &v199[v215];
            if (__OFADD__(v215, v199)) {
              goto LABEL_235;
            }
            if ((uint64_t)v88 >= v11) {
              uint64_t v88 = (char *)v11;
            }
            if ((uint64_t)v88 >= v215)
            {
              Swift::Int v202 = v88;
              if ((char *)v16 == v88) {
                goto LABEL_148;
              }
              while (2)
              {
                Swift::Int v206 = v16;
                Swift::Int v89 = v16;
LABEL_101:
                unint64_t v90 = (char *)(v9 + 560 * v89);
                memcpy(__dst, v90, 0x229uLL);
                uint64_t v237 = v90 - 560;
                memcpy(v241, v90 - 560, 0x229uLL);
                unint64_t v91 = __dst[17];
                if ((unint64_t)__dst[17] >> 1 == 0xFFFFFFFF)
                {
                  sub_12384(__dst);
                  sub_12384(v241);
                  double v92 = 0.0;
                  goto LABEL_122;
                }
                uint64_t v93 = __dst[11];
                uint64_t v94 = __dst[12];
                uint64_t v95 = __dst[13];
                uint64_t v96 = __dst[14];
                uint64_t v97 = __dst[15];
                uint64_t v98 = __dst[16];
                unint64_t v242 = __dst[16];
                uint64_t v235 = __dst[11];
                uint64_t v218 = __dst[12];
                uint64_t v211 = __dst[14];
                uint64_t v213 = __dst[13];
                if ((unint64_t)__dst[17] >> 62 != 3)
                {
                  Swift::Int v223 = v89;
                  uint64_t v229 = (char *)(v9 + 560 * v89);
                  sub_12124(&qword_26D5D8);
                  uint64_t v102 = swift_allocObject();
                  uint64_t v93 = v235;
                  uint64_t v98 = v242;
                  uint64_t v100 = v102;
                  *(_OWORD *)(v102 + 16) = xmmword_1FD2A0;
                  *(void *)(v102 + 32) = v235;
                  *(void *)(v102 + 40) = v94;
                  *(void *)(v102 + 48) = v95;
                  *(void *)(v102 + 56) = v96;
                  *(void *)(v102 + 64) = v97;
                  *(void *)(v102 + 72) = v98;
                  uint64_t v101 = v97;
                  uint64_t v99 = 1;
                  *(unsigned char *)(v102 + 80) = v91 & 1;
                  goto LABEL_107;
                }
                uint64_t v99 = *(void *)(__dst[11] + 16);
                if (v99)
                {
                  Swift::Int v223 = v89;
                  uint64_t v229 = (char *)(v9 + 560 * v89);
                  uint64_t v100 = __dst[11];
                  uint64_t v101 = __dst[15];
LABEL_107:
                  sub_12430(v93, v94, v95, v96, v101, v98, v91);
                  sub_12384(__dst);
                  sub_12384(v241);
                  uint64_t v209 = v101;
                  sub_12430(v235, v94, v95, v96, v101, v242, v91);
                  swift_bridgeObjectRetain();
                  unsigned int v103 = (double *)(v100 + 80);
                  uint64_t v104 = _swiftEmptyArrayStorage;
                  do
                  {
                    if ((*(unsigned char *)v103 & 1) == 0)
                    {
                      double v105 = *(v103 - 2);
                      double v106 = exp2(-*(v103 - 1) / *(v103 - 3));
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        uint64_t v104 = sub_41BAC(0, v104[2] + 1, 1, v104);
                      }
                      unint64_t v108 = v104[2];
                      unint64_t v107 = v104[3];
                      if (v108 >= v107 >> 1) {
                        uint64_t v104 = sub_41BAC((void *)(v107 > 1), v108 + 1, 1, v104);
                      }
                      v104[2] = v108 + 1;
                      *(double *)&v104[v108 + 4] = v105 * v106;
                    }
                    v103 += 7;
                    --v99;
                  }
                  while (v99);
                  swift_bridgeObjectRelease();
                  Swift::Int v89 = v223;
                  unint64_t v90 = v229;
                  uint64_t v109 = v209;
                  uint64_t v110 = v104[2];
                  if (v110)
                  {
LABEL_116:
                    int v111 = (double *)(v104 + 4);
                    double v92 = 0.0;
                    do
                    {
                      double v112 = *v111++;
                      double v92 = v92 + v112;
                      --v110;
                    }
                    while (v110);
                    swift_bridgeObjectRelease();
                    goto LABEL_121;
                  }
                }
                else
                {
                  uint64_t v113 = __dst[12];
                  uint64_t v109 = __dst[15];
                  sub_12430(__dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17]);
                  sub_12384(__dst);
                  sub_12384(v241);
                  sub_12430(v235, v113, v95, v96, v109, v242, v91);
                  uint64_t v104 = _swiftEmptyArrayStorage;
                  uint64_t v110 = _swiftEmptyArrayStorage[2];
                  if (v110) {
                    goto LABEL_116;
                  }
                }
                swift_bridgeObjectRelease();
                double v92 = 0.0;
LABEL_121:
                swift_bridgeObjectRelease();
                sub_1255C(v235, v218, v213, v211, v109, v242, v91);
                uint64_t v9 = v216;
LABEL_122:
                unint64_t v242 = v241[17];
                if ((unint64_t)v241[17] >> 1 == 0xFFFFFFFF)
                {
                  sub_124B4(v241);
                  sub_124B4(__dst);
                  if (v92 >= 0.0) {
                    goto LABEL_99;
                  }
                  goto LABEL_144;
                }
                uint64_t v114 = v241[11];
                uint64_t v115 = v241[12];
                uint64_t v116 = v241[13];
                uint64_t v117 = v241[14];
                uint64_t v118 = v241[15];
                uint64_t v119 = v241[16];
                uint64_t v219 = v241[16];
                uint64_t v236 = v241[11];
                uint64_t v212 = v241[13];
                uint64_t v214 = v241[12];
                uint64_t v210 = v241[14];
                if (v242 >> 62 != 3)
                {
                  Swift::Int v224 = v89;
                  uint64_t v230 = v90;
                  sub_12124(&qword_26D5D8);
                  uint64_t v123 = swift_allocObject();
                  uint64_t v114 = v236;
                  uint64_t v119 = v219;
                  uint64_t v121 = v123;
                  *(_OWORD *)(v123 + 16) = xmmword_1FD2A0;
                  *(void *)(v123 + 32) = v236;
                  *(void *)(v123 + 40) = v115;
                  *(void *)(v123 + 48) = v116;
                  *(void *)(v123 + 56) = v117;
                  *(void *)(v123 + 64) = v118;
                  *(void *)(v123 + 72) = v219;
                  uint64_t v122 = v118;
                  uint64_t v120 = 1;
                  *(unsigned char *)(v123 + 80) = v242 & 1;
                  goto LABEL_129;
                }
                uint64_t v120 = *(void *)(v241[11] + 16);
                if (v120)
                {
                  Swift::Int v224 = v89;
                  uint64_t v230 = v90;
                  uint64_t v121 = v241[11];
                  uint64_t v122 = v241[15];
LABEL_129:
                  sub_12430(v114, v115, v116, v117, v122, v119, v242);
                  uint64_t v208 = v122;
                  sub_12430(v236, v115, v116, v117, v122, v119, v242);
                  swift_bridgeObjectRetain();
                  long long v124 = (double *)(v121 + 80);
                  long long v125 = _swiftEmptyArrayStorage;
                  do
                  {
                    if ((*(unsigned char *)v124 & 1) == 0)
                    {
                      double v126 = *(v124 - 2);
                      double v127 = exp2(-*(v124 - 1) / *(v124 - 3));
                      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                        long long v125 = sub_41BAC(0, v125[2] + 1, 1, v125);
                      }
                      unint64_t v129 = v125[2];
                      unint64_t v128 = v125[3];
                      if (v129 >= v128 >> 1) {
                        long long v125 = sub_41BAC((void *)(v128 > 1), v129 + 1, 1, v125);
                      }
                      v125[2] = v129 + 1;
                      *(double *)&v125[v129 + 4] = v126 * v127;
                    }
                    v124 += 7;
                    --v120;
                  }
                  while (v120);
                  swift_bridgeObjectRelease();
                  Swift::Int v89 = v224;
                  unint64_t v90 = v230;
                  uint64_t v130 = v208;
                  uint64_t v131 = v125[2];
                  if (v131)
                  {
LABEL_138:
                    long long v132 = (double *)(v125 + 4);
                    double v133 = 0.0;
                    do
                    {
                      double v134 = *v132++;
                      double v133 = v133 + v134;
                      --v131;
                    }
                    while (v131);
                    swift_bridgeObjectRelease();
LABEL_143:
                    swift_bridgeObjectRelease();
                    sub_1255C(v236, v214, v212, v210, v130, v219, v242);
                    sub_124B4(v241);
                    sub_124B4(__dst);
                    uint64_t v9 = v216;
                    if (v92 >= v133) {
                      goto LABEL_99;
                    }
LABEL_144:
                    if (!v9) {
                      goto LABEL_237;
                    }
                    --v89;
                    memcpy(__src, v90, 0x229uLL);
                    memcpy(v90, v237, 0x230uLL);
                    memcpy(v237, __src, 0x229uLL);
                    if (v89 == v215)
                    {
LABEL_99:
                      Swift::Int v16 = v206 + 1;
                      if ((char *)(v206 + 1) == v202)
                      {
                        Swift::Int v16 = (Swift::Int)v202;
                        goto LABEL_148;
                      }
                      continue;
                    }
                    goto LABEL_101;
                  }
                }
                else
                {
                  uint64_t v135 = v241[12];
                  uint64_t v130 = v241[15];
                  unint64_t v136 = v242;
                  sub_12430(v241[11], v241[12], v241[13], v241[14], v241[15], v241[16], v242);
                  sub_12430(v236, v135, v116, v117, v130, v219, v136);
                  long long v125 = _swiftEmptyArrayStorage;
                  uint64_t v131 = _swiftEmptyArrayStorage[2];
                  if (v131) {
                    goto LABEL_138;
                  }
                }
                break;
              }
              swift_bridgeObjectRelease();
              double v133 = 0.0;
              goto LABEL_143;
            }
LABEL_236:
            __break(1u);
LABEL_237:
            __break(1u);
LABEL_238:
            __break(1u);
LABEL_239:
            __break(1u);
LABEL_240:
            __break(1u);
LABEL_241:
            sub_1FC210();
            __break(1u);
            JUMPOUT(0x1AAF74);
          }
        }
LABEL_148:
        if (v16 < v215) {
          goto LABEL_227;
        }
        Swift::Int v207 = v16;
        if (swift_isUniquelyReferenced_nonNull_native()) {
          unint64_t v10 = v200;
        }
        else {
          unint64_t v10 = sub_7004C(0, *((void *)v200 + 2) + 1, 1, v200);
        }
        unint64_t v138 = *((void *)v10 + 2);
        unint64_t v137 = *((void *)v10 + 3);
        unint64_t v12 = v138 + 1;
        uint64_t v139 = v215;
        if (v138 >= v137 >> 1)
        {
          long long v188 = sub_7004C((char *)(v137 > 1), v138 + 1, 1, v10);
          uint64_t v139 = v215;
          unint64_t v10 = v188;
        }
        *((void *)v10 + 2) = v12;
        uint64_t v140 = v10 + 32;
        uint64_t v141 = &v10[16 * v138 + 32];
        *(void *)uint64_t v141 = v139;
        *((void *)v141 + 1) = v207;
        if (v138)
        {
          while (2)
          {
            unint64_t v142 = v12 - 1;
            if (v12 >= 4)
            {
              char v147 = &v140[16 * v12];
              uint64_t v148 = *((void *)v147 - 8);
              uint64_t v149 = *((void *)v147 - 7);
              BOOL v153 = __OFSUB__(v149, v148);
              uint64_t v150 = v149 - v148;
              if (v153) {
                goto LABEL_216;
              }
              uint64_t v152 = *((void *)v147 - 6);
              uint64_t v151 = *((void *)v147 - 5);
              BOOL v153 = __OFSUB__(v151, v152);
              uint64_t v145 = v151 - v152;
              char v146 = v153;
              if (v153) {
                goto LABEL_217;
              }
              unint64_t v154 = v12 - 2;
              long long v155 = &v140[16 * v12 - 32];
              uint64_t v157 = *(void *)v155;
              uint64_t v156 = *((void *)v155 + 1);
              BOOL v153 = __OFSUB__(v156, v157);
              uint64_t v158 = v156 - v157;
              if (v153) {
                goto LABEL_219;
              }
              BOOL v153 = __OFADD__(v145, v158);
              uint64_t v159 = v145 + v158;
              if (v153) {
                goto LABEL_222;
              }
              if (v159 >= v150)
              {
                char v177 = &v140[16 * v142];
                uint64_t v179 = *(void *)v177;
                uint64_t v178 = *((void *)v177 + 1);
                BOOL v153 = __OFSUB__(v178, v179);
                uint64_t v180 = v178 - v179;
                if (v153) {
                  goto LABEL_226;
                }
                BOOL v170 = v145 < v180;
              }
              else
              {
LABEL_167:
                if (v146) {
                  goto LABEL_218;
                }
                unint64_t v154 = v12 - 2;
                uint64_t v160 = &v140[16 * v12 - 32];
                uint64_t v162 = *(void *)v160;
                uint64_t v161 = *((void *)v160 + 1);
                BOOL v163 = __OFSUB__(v161, v162);
                uint64_t v164 = v161 - v162;
                char v165 = v163;
                if (v163) {
                  goto LABEL_221;
                }
                uint64_t v166 = &v140[16 * v142];
                uint64_t v168 = *(void *)v166;
                uint64_t v167 = *((void *)v166 + 1);
                BOOL v153 = __OFSUB__(v167, v168);
                uint64_t v169 = v167 - v168;
                if (v153) {
                  goto LABEL_224;
                }
                if (__OFADD__(v164, v169)) {
                  goto LABEL_225;
                }
                if (v164 + v169 < v145) {
                  goto LABEL_179;
                }
                BOOL v170 = v145 < v169;
              }
              if (v170) {
                unint64_t v142 = v154;
              }
            }
            else
            {
              if (v12 == 3)
              {
                uint64_t v144 = *((void *)v10 + 4);
                uint64_t v143 = *((void *)v10 + 5);
                BOOL v153 = __OFSUB__(v143, v144);
                uint64_t v145 = v143 - v144;
                char v146 = v153;
                goto LABEL_167;
              }
              uint64_t v171 = *((void *)v10 + 4);
              uint64_t v172 = *((void *)v10 + 5);
              BOOL v153 = __OFSUB__(v172, v171);
              uint64_t v164 = v172 - v171;
              char v165 = v153;
LABEL_179:
              if (v165) {
                goto LABEL_220;
              }
              double v173 = &v140[16 * v142];
              uint64_t v175 = *(void *)v173;
              uint64_t v174 = *((void *)v173 + 1);
              BOOL v153 = __OFSUB__(v174, v175);
              uint64_t v176 = v174 - v175;
              if (v153) {
                goto LABEL_223;
              }
              if (v176 < v164) {
                goto LABEL_14;
              }
            }
            unint64_t v181 = v142 - 1;
            if (v142 - 1 >= v12)
            {
              __break(1u);
LABEL_213:
              __break(1u);
LABEL_214:
              __break(1u);
LABEL_215:
              __break(1u);
LABEL_216:
              __break(1u);
LABEL_217:
              __break(1u);
LABEL_218:
              __break(1u);
LABEL_219:
              __break(1u);
LABEL_220:
              __break(1u);
LABEL_221:
              __break(1u);
LABEL_222:
              __break(1u);
LABEL_223:
              __break(1u);
LABEL_224:
              __break(1u);
LABEL_225:
              __break(1u);
LABEL_226:
              __break(1u);
LABEL_227:
              __break(1u);
LABEL_228:
              __break(1u);
LABEL_229:
              __break(1u);
LABEL_230:
              __break(1u);
LABEL_231:
              __break(1u);
LABEL_232:
              __break(1u);
LABEL_233:
              __break(1u);
LABEL_234:
              __break(1u);
LABEL_235:
              __break(1u);
              goto LABEL_236;
            }
            if (!v9) {
              goto LABEL_238;
            }
            double v182 = v10;
            char v183 = &v140[16 * v181];
            uint64_t v184 = *(void *)v183;
            uint64_t v185 = &v140[16 * v142];
            uint64_t v186 = *((void *)v185 + 1);
            sub_1AB678((char *)(v9 + 560 * *(void *)v183), (char *)(v9 + 560 * *(void *)v185), (char *)(v9 + 560 * v186), v204);
            if (v1) {
              goto LABEL_210;
            }
            if (v186 < v184) {
              goto LABEL_213;
            }
            if (v142 > *((void *)v182 + 2)) {
              goto LABEL_214;
            }
            *(void *)char v183 = v184;
            *(void *)&v140[16 * v181 + 8] = v186;
            unint64_t v187 = *((void *)v182 + 2);
            if (v142 >= v187) {
              goto LABEL_215;
            }
            unint64_t v12 = v187 - 1;
            memmove(&v140[16 * v142], v185 + 16, 16 * (v187 - 1 - v142));
            unint64_t v10 = v182;
            *((void *)v182 + 2) = v187 - 1;
            if (v187 <= 2) {
              goto LABEL_14;
            }
            continue;
          }
        }
        unint64_t v12 = 1;
LABEL_14:
        Swift::Int v11 = v203;
        Swift::Int v8 = v207;
        if (v207 >= v203)
        {
          uint64_t v2 = v196;
          if (v12 < 2)
          {
LABEL_210:
            swift_bridgeObjectRelease();
            v198[2] = 0;
            return (char *)swift_bridgeObjectRelease();
          }
LABEL_197:
          uint64_t v189 = *v2;
          while (1)
          {
            unint64_t v190 = v12 - 2;
            if (v12 < 2) {
              goto LABEL_228;
            }
            if (!v189) {
              goto LABEL_240;
            }
            long long v191 = v10;
            uint64_t v192 = *(void *)&v10[16 * v190 + 32];
            uint64_t v193 = *(void *)&v10[16 * v12 + 24];
            sub_1AB678((char *)(v189 + 560 * v192), (char *)(v189 + 560 * *(void *)&v10[16 * v12 + 16]), (char *)(v189 + 560 * v193), v204);
            if (v1) {
              goto LABEL_210;
            }
            if (v193 < v192) {
              goto LABEL_229;
            }
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              long long v191 = sub_70B24((uint64_t)v191);
            }
            if (v190 >= *((void *)v191 + 2)) {
              goto LABEL_230;
            }
            double v194 = &v191[16 * v190 + 32];
            *(void *)double v194 = v192;
            *((void *)v194 + 1) = v193;
            unint64_t v195 = *((void *)v191 + 2);
            if (v12 > v195) {
              goto LABEL_231;
            }
            memmove(&v191[16 * v12 + 16], &v191[16 * v12 + 32], 16 * (v195 - v12));
            unint64_t v10 = v191;
            *((void *)v191 + 2) = v195 - 1;
            unint64_t v12 = v195 - 1;
            if (v195 <= 2) {
              goto LABEL_210;
            }
          }
        }
        goto LABEL_15;
      }
      Swift::Int v13 = v205;
      Swift::Int v16 = v205 + 1;
    }
  }
  if (v3 < 0) {
    goto LABEL_233;
  }
  if (v3) {
    return (char *)sub_1AAF94(0, (char *)v3, (unsigned char *)&dword_0 + 1, v2);
  }
  return result;
}

void *sub_1AAF94(void *result, char *a2, char *a3, uint64_t *a4)
{
  double v61 = result;
  if (a3 != a2)
  {
    uint64_t v4 = *a4;
    uint64_t v60 = *a4;
LABEL_5:
    uint64_t v59 = a3;
    uint64_t v5 = a3;
    while (1)
    {
      memcpy(__dst, (const void *)(v4 + 560 * (void)v5), 0x229uLL);
      __src = (char *)(v4 + 560 * (void)v5);
      memcpy(v79, __src - 560, 0x229uLL);
      unint64_t v6 = __dst[17];
      double v75 = __src - 560;
      double v76 = v5;
      if ((unint64_t)__dst[17] >> 1 == 0xFFFFFFFF)
      {
        sub_12384(__dst);
        sub_12384(v79);
        double v7 = 0.0;
        goto LABEL_27;
      }
      uint64_t v8 = __dst[11];
      uint64_t v9 = __dst[12];
      uint64_t v10 = __dst[13];
      uint64_t v11 = __dst[14];
      uint64_t v12 = __dst[15];
      uint64_t v13 = __dst[16];
      uint64_t v65 = __dst[15];
      uint64_t v67 = __dst[14];
      uint64_t v70 = __dst[11];
      uint64_t v72 = __dst[16];
      if ((unint64_t)__dst[17] >> 62 == 3)
      {
        uint64_t v14 = *(void *)(__dst[11] + 16);
        if (!v14)
        {
          uint64_t v24 = __dst[13];
          uint64_t v28 = __dst[14];
          uint64_t v29 = __dst[15];
          uint64_t v30 = __dst[16];
          uint64_t v31 = __dst[11];
          sub_12430(__dst[11], __dst[12], __dst[13], __dst[14], __dst[15], __dst[16], __dst[17]);
          sub_12384(__dst);
          sub_12384(v79);
          sub_12430(v31, v9, v24, v28, v29, v30, v6);
          uint64_t v19 = _swiftEmptyArrayStorage;
          uint64_t v25 = _swiftEmptyArrayStorage[2];
          if (v25) {
            goto LABEL_21;
          }
          goto LABEL_25;
        }
        uint64_t v15 = __dst[11];
        uint64_t v16 = __dst[13];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v17 = swift_allocObject();
        uint64_t v8 = v70;
        uint64_t v13 = v72;
        uint64_t v12 = v65;
        uint64_t v11 = v67;
        uint64_t v15 = v17;
        *(_OWORD *)(v17 + 16) = xmmword_1FD2A0;
        *(void *)(v17 + 32) = v70;
        *(void *)(v17 + 40) = v9;
        *(void *)(v17 + 48) = v10;
        *(void *)(v17 + 56) = v67;
        *(void *)(v17 + 64) = v65;
        *(void *)(v17 + 72) = v72;
        uint64_t v16 = v10;
        uint64_t v14 = 1;
        *(unsigned char *)(v17 + 80) = v6 & 1;
      }
      sub_12430(v8, v9, v16, v11, v12, v13, v6);
      sub_12384(__dst);
      sub_12384(v79);
      uint64_t v62 = v16;
      uint64_t v63 = v9;
      sub_12430(v70, v9, v16, v11, v12, v72, v6);
      swift_bridgeObjectRetain();
      uint64_t v18 = (double *)(v15 + 80);
      uint64_t v19 = _swiftEmptyArrayStorage;
      do
      {
        if ((*(unsigned char *)v18 & 1) == 0)
        {
          double v20 = *(v18 - 2);
          double v21 = exp2(-*(v18 - 1) / *(v18 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v19 = sub_41BAC(0, v19[2] + 1, 1, v19);
          }
          unint64_t v23 = v19[2];
          unint64_t v22 = v19[3];
          if (v23 >= v22 >> 1) {
            uint64_t v19 = sub_41BAC((void *)(v22 > 1), v23 + 1, 1, v19);
          }
          v19[2] = v23 + 1;
          *(double *)&v19[v23 + 4] = v20 * v21;
        }
        v18 += 7;
        --v14;
      }
      while (v14);
      swift_bridgeObjectRelease();
      uint64_t v24 = v62;
      uint64_t v9 = v63;
      uint64_t v25 = v19[2];
      if (v25)
      {
LABEL_21:
        char v26 = (double *)(v19 + 4);
        double v7 = 0.0;
        do
        {
          double v27 = *v26++;
          double v7 = v7 + v27;
          --v25;
        }
        while (v25);
        swift_bridgeObjectRelease();
        goto LABEL_26;
      }
LABEL_25:
      swift_bridgeObjectRelease();
      double v7 = 0.0;
LABEL_26:
      swift_bridgeObjectRelease();
      sub_1255C(v70, v9, v24, v67, v65, v72, v6);
      uint64_t v4 = v60;
LABEL_27:
      unint64_t v32 = v79[17];
      if ((unint64_t)v79[17] >> 1 == 0xFFFFFFFF)
      {
        sub_124B4(v79);
        uint64_t result = sub_124B4(__dst);
        if (v7 >= 0.0) {
          goto LABEL_4;
        }
        goto LABEL_49;
      }
      uint64_t v33 = v79[11];
      uint64_t v34 = v79[12];
      uint64_t v35 = v79[13];
      uint64_t v36 = v79[14];
      uint64_t v37 = v79[15];
      uint64_t v38 = v79[16];
      unint64_t v71 = v79[17];
      uint64_t v73 = v79[14];
      uint64_t v68 = v79[15];
      uint64_t v69 = v79[16];
      uint64_t v64 = v79[11];
      uint64_t v66 = v79[12];
      if ((unint64_t)v79[17] >> 62 == 3)
      {
        uint64_t v39 = *(void *)(v79[11] + 16);
        if (!v39)
        {
          uint64_t v56 = v79[12];
          uint64_t v51 = v79[13];
          unint64_t v57 = v79[17];
          sub_12430(v79[11], v79[12], v79[13], v79[14], v79[15], v79[16], v79[17]);
          sub_12430(v33, v56, v51, v73, v37, v69, v57);
          uint64_t v46 = _swiftEmptyArrayStorage;
          uint64_t v5 = v76;
          uint64_t v52 = _swiftEmptyArrayStorage[2];
          if (!v52) {
            goto LABEL_47;
          }
          goto LABEL_43;
        }
        uint64_t v40 = v79[11];
        uint64_t v41 = v79[13];
      }
      else
      {
        uint64_t v42 = v79[12];
        sub_12124(&qword_26D5D8);
        uint64_t v43 = swift_allocObject();
        uint64_t v34 = v42;
        uint64_t v38 = v69;
        unint64_t v32 = v71;
        uint64_t v37 = v68;
        uint64_t v36 = v73;
        uint64_t v40 = v43;
        *(_OWORD *)(v43 + 16) = xmmword_1FD2A0;
        *(void *)(v43 + 32) = v33;
        *(void *)(v43 + 40) = v34;
        *(void *)(v43 + 48) = v35;
        *(void *)(v43 + 56) = v73;
        *(void *)(v43 + 64) = v68;
        *(void *)(v43 + 72) = v69;
        uint64_t v41 = v35;
        uint64_t v39 = 1;
        *(unsigned char *)(v43 + 80) = v71 & 1;
      }
      uint64_t v44 = v34;
      sub_12430(v33, v34, v41, v36, v37, v38, v32);
      sub_12430(v33, v44, v41, v73, v37, v38, v71);
      swift_bridgeObjectRetain();
      uint64_t v45 = (double *)(v40 + 80);
      uint64_t v46 = _swiftEmptyArrayStorage;
      uint64_t v5 = v76;
      do
      {
        if ((*(unsigned char *)v45 & 1) == 0)
        {
          double v47 = *(v45 - 2);
          double v48 = exp2(-*(v45 - 1) / *(v45 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v46 = sub_41BAC(0, v46[2] + 1, 1, v46);
          }
          unint64_t v50 = v46[2];
          unint64_t v49 = v46[3];
          if (v50 >= v49 >> 1) {
            uint64_t v46 = sub_41BAC((void *)(v49 > 1), v50 + 1, 1, v46);
          }
          v46[2] = v50 + 1;
          *(double *)&v46[v50 + 4] = v47 * v48;
        }
        v45 += 7;
        --v39;
      }
      while (v39);
      swift_bridgeObjectRelease();
      uint64_t v51 = v41;
      uint64_t v4 = v60;
      uint64_t v52 = v46[2];
      if (!v52)
      {
LABEL_47:
        swift_bridgeObjectRelease();
        double v54 = 0.0;
        goto LABEL_48;
      }
LABEL_43:
      double v53 = (double *)(v46 + 4);
      double v54 = 0.0;
      do
      {
        double v55 = *v53++;
        double v54 = v54 + v55;
        --v52;
      }
      while (v52);
      swift_bridgeObjectRelease();
LABEL_48:
      swift_bridgeObjectRelease();
      sub_1255C(v64, v66, v51, v73, v68, v69, v71);
      sub_124B4(v79);
      uint64_t result = sub_124B4(__dst);
      if (v7 >= v54) {
        goto LABEL_4;
      }
LABEL_49:
      if (!v4)
      {
        __break(1u);
        return result;
      }
      uint64_t v5 = (char *)v5 - 1;
      memcpy(v77, __src, sizeof(v77));
      memcpy(__src, v75, 0x230uLL);
      uint64_t result = memcpy(v75, v77, 0x229uLL);
      if (v5 == v61)
      {
LABEL_4:
        a3 = v59 + 1;
        if (v59 + 1 == a2) {
          return result;
        }
        goto LABEL_5;
      }
    }
  }
  return result;
}

uint64_t sub_1AB678(char *__src, char *a2, char *a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a3;
  unint64_t v6 = a2;
  double v7 = __src;
  int64_t v8 = a2 - __src;
  int64_t v9 = (a2 - __src) / 560;
  uint64_t v10 = a3 - a2;
  uint64_t v11 = (a3 - a2) / 560;
  char v146 = __dst;
  char v147 = __src;
  if (v9 >= v11)
  {
    if (v10 < -559) {
      goto LABEL_127;
    }
    uint64_t v58 = 560 * v11;
    if (__dst != a2 || &a2[v58] <= __dst) {
      memmove(__dst, a2, 560 * v11);
    }
    uint64_t v59 = &v4[v58];
    uint64_t v145 = v59;
    char v147 = v6;
    if (v7 >= v6 || v10 < 560)
    {
LABEL_126:
      sub_7034C((void **)&v147, &v146, &v145);
      return 1;
    }
    unint64_t v136 = v4;
    unint64_t v138 = v7;
    while (1)
    {
      unint64_t v134 = (unint64_t)v59;
      __srcc = v59 - 560;
      memcpy(__dsta, v59 - 560, 0x229uLL);
      uint64_t v60 = v6 - 560;
      memcpy(v144, v6 - 560, 0x229uLL);
      unint64_t v61 = __dsta[17];
      uint64_t v140 = v5;
      unint64_t v142 = v6;
      double v133 = v6 - 560;
      if ((unint64_t)__dsta[17] >> 1 == 0xFFFFFFFF)
      {
        sub_12384(__dsta);
        sub_12384(v144);
        double v62 = 0.0;
        goto LABEL_93;
      }
      uint64_t v63 = __dsta[11];
      uint64_t v64 = __dsta[12];
      uint64_t v66 = __dsta[13];
      uint64_t v65 = __dsta[14];
      uint64_t v68 = __dsta[15];
      uint64_t v67 = __dsta[16];
      uint64_t v129 = __dsta[13];
      uint64_t v119 = __dsta[14];
      uint64_t v116 = __dsta[16];
      if ((unint64_t)__dsta[17] >> 62 != 3) {
        break;
      }
      uint64_t v69 = *(void *)(__dsta[11] + 16);
      if (v69)
      {
        uint64_t v70 = __dsta[11];
        goto LABEL_78;
      }
      uint64_t v107 = __dsta[12];
      uint64_t v108 = __dsta[14];
      uint64_t v109 = __dsta[16];
      sub_12430(__dsta[11], __dsta[12], __dsta[13], __dsta[14], __dsta[15], __dsta[16], __dsta[17]);
      sub_12384(__dsta);
      sub_12384(v144);
      uint64_t v80 = v107;
      sub_12430(v63, v107, v66, v108, v68, v109, v61);
      double v75 = _swiftEmptyArrayStorage;
LABEL_87:
      uint64_t v81 = v75[2];
      uint64_t v60 = v133;
      if (v81)
      {
        uint64_t v82 = (double *)(v75 + 4);
        double v62 = 0.0;
        do
        {
          double v83 = *v82++;
          double v62 = v62 + v83;
          --v81;
        }
        while (v81);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        double v62 = 0.0;
      }
      swift_bridgeObjectRelease();
      sub_1255C(v63, v80, v129, v119, v68, v116, v61);
      uint64_t v4 = v136;
      uint64_t v5 = v140;
      unint64_t v6 = v142;
LABEL_93:
      Swift::Int v84 = v5 - 560;
      unint64_t v85 = v144[17];
      if ((unint64_t)v144[17] >> 1 == 0xFFFFFFFF)
      {
        sub_124B4(v144);
        sub_124B4(__dsta);
        if (v62 >= 0.0) {
          goto LABEL_95;
        }
        goto LABEL_120;
      }
      uint64_t v115 = v5 - 560;
      uint64_t v86 = v144[11];
      uint64_t v87 = v144[12];
      uint64_t v88 = v144[13];
      uint64_t v89 = v144[14];
      uint64_t v90 = v144[15];
      uint64_t v91 = v144[16];
      uint64_t v132 = v144[16];
      uint64_t v120 = v144[15];
      uint64_t v123 = v144[14];
      uint64_t v117 = v144[12];
      if ((unint64_t)v144[17] >> 62 == 3)
      {
        uint64_t v92 = *(void *)(v144[11] + 16);
        if (!v92)
        {
          uint64_t v110 = v144[14];
          uint64_t v111 = v144[16];
          sub_12430(v144[11], v144[12], v144[13], v144[14], v144[15], v144[16], v144[17]);
          uint64_t v102 = v117;
          sub_12430(v86, v117, v88, v110, v90, v111, v85);
          uint64_t v97 = _swiftEmptyArrayStorage;
          goto LABEL_114;
        }
        uint64_t v93 = v144[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v94 = swift_allocObject();
        uint64_t v91 = v132;
        uint64_t v90 = v120;
        uint64_t v89 = v123;
        uint64_t v93 = v94;
        *(_OWORD *)(v94 + 16) = xmmword_1FD2A0;
        *(void *)(v94 + 32) = v86;
        *(void *)(v94 + 40) = v87;
        *(void *)(v94 + 48) = v88;
        *(void *)(v94 + 56) = v123;
        *(void *)(v94 + 64) = v120;
        *(void *)(v94 + 72) = v132;
        uint64_t v92 = 1;
        *(unsigned char *)(v94 + 80) = v85 & 1;
      }
      uint64_t v95 = v89;
      sub_12430(v86, v87, v88, v89, v90, v91, v85);
      uint64_t v113 = v88;
      sub_12430(v86, v87, v88, v95, v90, v132, v85);
      swift_bridgeObjectRetain();
      uint64_t v96 = (double *)(v93 + 80);
      uint64_t v97 = _swiftEmptyArrayStorage;
      do
      {
        if ((*(unsigned char *)v96 & 1) == 0)
        {
          double v98 = *(v96 - 2);
          double v99 = exp2(-*(v96 - 1) / *(v96 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v97 = sub_41BAC(0, v97[2] + 1, 1, v97);
          }
          unint64_t v101 = v97[2];
          unint64_t v100 = v97[3];
          if (v101 >= v100 >> 1) {
            uint64_t v97 = sub_41BAC((void *)(v100 > 1), v101 + 1, 1, v97);
          }
          v97[2] = v101 + 1;
          *(double *)&v97[v101 + 4] = v98 * v99;
        }
        v96 += 7;
        --v92;
      }
      while (v92);
      swift_bridgeObjectRelease();
      uint64_t v102 = v117;
      uint64_t v88 = v113;
LABEL_114:
      uint64_t v103 = v97[2];
      uint64_t v4 = v136;
      if (v103)
      {
        uint64_t v104 = (double *)(v97 + 4);
        double v105 = 0.0;
        do
        {
          double v106 = *v104++;
          double v105 = v105 + v106;
          --v103;
        }
        while (v103);
        swift_bridgeObjectRelease();
      }
      else
      {
        swift_bridgeObjectRelease();
        double v105 = 0.0;
      }
      swift_bridgeObjectRelease();
      sub_1255C(v86, v102, v88, v123, v120, v132, v85);
      sub_124B4(v144);
      sub_124B4(__dsta);
      uint64_t v5 = v140;
      unint64_t v6 = v142;
      uint64_t v60 = v133;
      Swift::Int v84 = v115;
      if (v62 >= v105)
      {
LABEL_95:
        uint64_t v59 = __srcc;
        uint64_t v145 = __srcc;
        if ((unint64_t)v5 < v134 || (unint64_t)v84 >= v134 || v5 != (char *)v134) {
          memmove(v84, __srcc, 0x230uLL);
        }
        uint64_t v60 = v6;
        if (__srcc <= v4) {
          goto LABEL_126;
        }
        goto LABEL_71;
      }
LABEL_120:
      if (v5 != v6 || v84 >= v6) {
        memmove(v84, v60, 0x230uLL);
      }
      char v147 = v60;
      uint64_t v59 = (char *)v134;
      if (v134 <= (unint64_t)v4) {
        goto LABEL_126;
      }
LABEL_71:
      unint64_t v6 = v60;
      uint64_t v5 = v84;
      if (v60 <= v138) {
        goto LABEL_126;
      }
    }
    sub_12124(&qword_26D5D8);
    uint64_t v71 = swift_allocObject();
    uint64_t v67 = v116;
    uint64_t v65 = v119;
    uint64_t v66 = v129;
    uint64_t v70 = v71;
    *(_OWORD *)(v71 + 16) = xmmword_1FD2A0;
    *(void *)(v71 + 32) = v63;
    *(void *)(v71 + 40) = v64;
    *(void *)(v71 + 48) = v129;
    *(void *)(v71 + 56) = v119;
    *(void *)(v71 + 64) = v68;
    *(void *)(v71 + 72) = v116;
    uint64_t v69 = 1;
    *(unsigned char *)(v71 + 80) = v61 & 1;
LABEL_78:
    uint64_t v72 = v65;
    uint64_t v73 = v67;
    sub_12430(v63, v64, v66, v65, v68, v67, v61);
    sub_12384(__dsta);
    sub_12384(v144);
    uint64_t v114 = v64;
    sub_12430(v63, v64, v129, v72, v68, v73, v61);
    swift_bridgeObjectRetain();
    uint64_t v74 = (double *)(v70 + 80);
    double v75 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v74 & 1) == 0)
      {
        double v76 = *(v74 - 2);
        double v77 = exp2(-*(v74 - 1) / *(v74 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          double v75 = sub_41BAC(0, v75[2] + 1, 1, v75);
        }
        unint64_t v79 = v75[2];
        unint64_t v78 = v75[3];
        if (v79 >= v78 >> 1) {
          double v75 = sub_41BAC((void *)(v78 > 1), v79 + 1, 1, v75);
        }
        v75[2] = v79 + 1;
        *(double *)&v75[v79 + 4] = v76 * v77;
      }
      v74 += 7;
      --v69;
    }
    while (v69);
    swift_bridgeObjectRelease();
    uint64_t v80 = v114;
    goto LABEL_87;
  }
  if (v8 >= -559)
  {
    size_t v12 = 560 * v9;
    if (__dst != __src || &__src[v12] <= __dst) {
      memmove(__dst, __src, v12);
    }
    uint64_t v118 = &v4[v12];
    uint64_t v145 = &v4[v12];
    if (v6 < v5 && v8 >= 560)
    {
      uint64_t v139 = v5;
      while (1)
      {
        memcpy(__dsta, v6, 0x229uLL);
        memcpy(v144, v4, 0x229uLL);
        unint64_t v13 = __dsta[17];
        uint64_t v135 = v4;
        unint64_t v137 = v7;
        uint64_t v141 = v6;
        if ((unint64_t)__dsta[17] >> 1 == 0xFFFFFFFF)
        {
          sub_12384(__dsta);
          sub_12384(v144);
          double v14 = 0.0;
          goto LABEL_30;
        }
        uint64_t v16 = __dsta[11];
        uint64_t v15 = __dsta[12];
        uint64_t v17 = __dsta[13];
        uint64_t v18 = __dsta[14];
        uint64_t v19 = __dsta[15];
        uint64_t v20 = __dsta[16];
        __srca = (void *)__dsta[14];
        uint64_t v127 = __dsta[12];
        uint64_t v121 = __dsta[15];
        if ((unint64_t)__dsta[17] >> 62 != 3) {
          break;
        }
        uint64_t v21 = *(void *)(__dsta[11] + 16);
        if (v21)
        {
          uint64_t v22 = __dsta[11];
          goto LABEL_15;
        }
        uint64_t v55 = __dsta[14];
        sub_12430(__dsta[11], __dsta[12], __dsta[13], __dsta[14], __dsta[15], __dsta[16], __dsta[17]);
        sub_12384(__dsta);
        sub_12384(v144);
        sub_12430(v16, v15, v17, v55, v19, v20, v13);
        uint64_t v24 = _swiftEmptyArrayStorage;
LABEL_24:
        uint64_t v29 = v24[2];
        if (v29)
        {
          uint64_t v30 = (double *)(v24 + 4);
          double v14 = 0.0;
          do
          {
            double v31 = *v30++;
            double v14 = v14 + v31;
            --v29;
          }
          while (v29);
          swift_bridgeObjectRelease();
        }
        else
        {
          swift_bridgeObjectRelease();
          double v14 = 0.0;
        }
        swift_bridgeObjectRelease();
        sub_1255C(v16, v127, v17, (uint64_t)__srca, v121, v20, v13);
        uint64_t v4 = v135;
        double v7 = v137;
        uint64_t v5 = v139;
        unint64_t v6 = v141;
LABEL_30:
        unint64_t v32 = v144[17];
        if ((unint64_t)v144[17] >> 1 == 0xFFFFFFFF)
        {
          sub_124B4(v144);
          sub_124B4(__dsta);
          if (v14 >= 0.0) {
            goto LABEL_32;
          }
          goto LABEL_55;
        }
        uint64_t v34 = v144[11];
        uint64_t v35 = v144[12];
        uint64_t v36 = v144[13];
        uint64_t v37 = v144[14];
        uint64_t v38 = v144[15];
        uint64_t v39 = v144[16];
        uint64_t v131 = v144[12];
        __srcb = (void *)v144[14];
        uint64_t v128 = v144[13];
        uint64_t v122 = v144[15];
        if ((unint64_t)v144[17] >> 62 == 3)
        {
          uint64_t v40 = *(void *)(v144[11] + 16);
          if (!v40)
          {
            uint64_t v56 = v144[13];
            uint64_t v57 = v144[15];
            sub_12430(v144[11], v144[12], v144[13], v144[14], v144[15], v144[16], v144[17]);
            sub_12430(v34, v35, v56, v37, v57, v39, v32);
            uint64_t v46 = _swiftEmptyArrayStorage;
            uint64_t v51 = _swiftEmptyArrayStorage[2];
            if (!v51) {
              goto LABEL_53;
            }
            goto LABEL_48;
          }
          uint64_t v41 = v144[11];
        }
        else
        {
          sub_12124(&qword_26D5D8);
          uint64_t v42 = swift_allocObject();
          uint64_t v38 = v122;
          uint64_t v37 = (uint64_t)__srcb;
          uint64_t v36 = v128;
          uint64_t v35 = v131;
          uint64_t v41 = v42;
          *(_OWORD *)(v42 + 16) = xmmword_1FD2A0;
          *(void *)(v42 + 32) = v34;
          *(void *)(v42 + 40) = v131;
          *(void *)(v42 + 48) = v128;
          *(void *)(v42 + 56) = __srcb;
          *(void *)(v42 + 64) = v122;
          *(void *)(v42 + 72) = v39;
          uint64_t v40 = 1;
          *(unsigned char *)(v42 + 80) = v32 & 1;
        }
        uint64_t v43 = v36;
        uint64_t v44 = v38;
        sub_12430(v34, v35, v36, v37, v38, v39, v32);
        sub_12430(v34, v35, v43, v37, v44, v39, v32);
        swift_bridgeObjectRetain();
        uint64_t v45 = (double *)(v41 + 80);
        uint64_t v46 = _swiftEmptyArrayStorage;
        do
        {
          if ((*(unsigned char *)v45 & 1) == 0)
          {
            double v47 = *(v45 - 2);
            double v48 = exp2(-*(v45 - 1) / *(v45 - 3));
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v46 = sub_41BAC(0, v46[2] + 1, 1, v46);
            }
            unint64_t v50 = v46[2];
            unint64_t v49 = v46[3];
            if (v50 >= v49 >> 1) {
              uint64_t v46 = sub_41BAC((void *)(v49 > 1), v50 + 1, 1, v46);
            }
            v46[2] = v50 + 1;
            *(double *)&v46[v50 + 4] = v47 * v48;
          }
          v45 += 7;
          --v40;
        }
        while (v40);
        swift_bridgeObjectRelease();
        uint64_t v4 = v135;
        uint64_t v51 = v46[2];
        if (!v51)
        {
LABEL_53:
          swift_bridgeObjectRelease();
          double v53 = 0.0;
          goto LABEL_54;
        }
LABEL_48:
        uint64_t v52 = (double *)(v46 + 4);
        double v53 = 0.0;
        do
        {
          double v54 = *v52++;
          double v53 = v53 + v54;
          --v51;
        }
        while (v51);
        swift_bridgeObjectRelease();
LABEL_54:
        swift_bridgeObjectRelease();
        sub_1255C(v34, v131, v128, (uint64_t)__srcb, v122, v39, v32);
        sub_124B4(v144);
        sub_124B4(__dsta);
        double v7 = v137;
        uint64_t v5 = v139;
        unint64_t v6 = v141;
        if (v14 >= v53)
        {
LABEL_32:
          if (v7 != v4) {
            memmove(v7, v4, 0x230uLL);
          }
          v4 += 560;
          char v146 = v4;
          uint64_t v33 = v6;
          goto LABEL_59;
        }
LABEL_55:
        uint64_t v33 = v6 + 560;
        if (v7 < v6 || v7 >= v33 || v7 != v6) {
          memmove(v7, v6, 0x230uLL);
        }
LABEL_59:
        v7 += 560;
        if (v4 >= v118 || v33 >= v5)
        {
          char v147 = v7;
          goto LABEL_126;
        }
        unint64_t v6 = v33;
      }
      sub_12124(&qword_26D5D8);
      uint64_t v22 = swift_allocObject();
      *(_OWORD *)(v22 + 16) = xmmword_1FD2A0;
      *(void *)(v22 + 32) = v16;
      *(void *)(v22 + 40) = v15;
      *(void *)(v22 + 48) = v17;
      *(void *)(v22 + 56) = v18;
      *(void *)(v22 + 64) = v19;
      *(void *)(v22 + 72) = v20;
      uint64_t v21 = 1;
      *(unsigned char *)(v22 + 80) = v13 & 1;
LABEL_15:
      unint64_t v130 = v13;
      sub_12430(v16, v15, v17, v18, v19, v20, v13);
      sub_12384(__dsta);
      sub_12384(v144);
      sub_12430(v16, v15, v17, v18, v19, v20, v13);
      swift_bridgeObjectRetain();
      unint64_t v23 = (double *)(v22 + 80);
      uint64_t v24 = _swiftEmptyArrayStorage;
      do
      {
        if ((*(unsigned char *)v23 & 1) == 0)
        {
          double v25 = *(v23 - 2);
          double v26 = exp2(-*(v23 - 1) / *(v23 - 3));
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v24 = sub_41BAC(0, v24[2] + 1, 1, v24);
          }
          unint64_t v28 = v24[2];
          unint64_t v27 = v24[3];
          if (v28 >= v27 >> 1) {
            uint64_t v24 = sub_41BAC((void *)(v27 > 1), v28 + 1, 1, v24);
          }
          v24[2] = v28 + 1;
          *(double *)&v24[v28 + 4] = v25 * v26;
        }
        v23 += 7;
        --v21;
      }
      while (v21);
      swift_bridgeObjectRelease();
      unint64_t v13 = v130;
      goto LABEL_24;
    }
    goto LABEL_126;
  }
LABEL_127:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_1AC4FC(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  sub_46948(0, v2, 0);
  if (v2)
  {
    swift_bridgeObjectRetain();
    Swift::Int v3 = (void *)(a1 + 72);
    do
    {
      unint64_t v4 = *(v3 - 5);
      uint64_t v13 = *(v3 - 4);
      __int8 v12 = *((unsigned char *)v3 - 24);
      uint64_t v5 = *(v3 - 2);
      uint64_t v6 = *(v3 - 1);
      uint64_t v7 = *v3;
      unint64_t v9 = _swiftEmptyArrayStorage[2];
      unint64_t v8 = _swiftEmptyArrayStorage[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v9 >= v8 >> 1) {
        sub_46948(v8 > 1, v9 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v9 + 1;
      uint64_t v10 = (int64x2_t *)&_swiftEmptyArrayStorage[7 * v9];
      v10[2] = vdupq_n_s64(v4);
      v10[3].i64[0] = v13;
      v10[3].i8[8] = v12;
      v10[4].i64[0] = v5;
      v10[4].i64[1] = v6;
      v10[5].i64[0] = v7;
      v3 += 6;
      --v2;
    }
    while (v2);
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

Swift::Int sub_1AC634(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_12473C(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1B1D34(v5);
  *a1 = v2;
  return result;
}

uint64_t sub_1AC6A0()
{
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  qword_2A5C48 = result;
  return result;
}

uint64_t sub_1AC708()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5C50);
  sub_6DBC8(v0, (uint64_t)qword_2A5C50);
  if (qword_26C3A8 != -1) {
    swift_once();
  }
  id v1 = (id)qword_2A5C48;
  return sub_1FB440();
}

uint64_t sub_1AC794(uint64_t a1, const void *a2)
{
  v3[451] = v2;
  v3[450] = a1;
  uint64_t v5 = type metadata accessor for SeedBasedRecommendationRequest(0);
  v3[452] = v5;
  v3[453] = *(void *)(v5 - 8);
  v3[454] = swift_task_alloc();
  uint64_t v6 = sub_1FB110();
  v3[455] = v6;
  v3[456] = *(void *)(v6 - 8);
  v3[457] = swift_task_alloc();
  v3[458] = swift_task_alloc();
  v3[459] = swift_task_alloc();
  v3[460] = swift_task_alloc();
  v3[461] = swift_task_alloc();
  memcpy(v3 + 2, a2, 0x460uLL);
  return _swift_task_switch(sub_1AC908, 0, 0);
}

uint64_t sub_1AC908()
{
  uint64_t v11 = v0;
  uint64_t v1 = v0[450];
  sub_1AE39C(v1, v0[461]);
  uint64_t v2 = _swiftEmptyDictionarySingleton;
  uint64_t v10 = _swiftEmptyDictionarySingleton;
  uint64_t v3 = *(void *)(v1 + 16);
  v0[462] = v3;
  if (v3)
  {
    uint64_t v4 = v0[453];
    uint64_t v5 = v0[450] + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));
    uint64_t v6 = *(void *)(v4 + 72);
    swift_bridgeObjectRetain();
    do
    {
      sub_1B07DC((uint64_t *)&v10, v5);
      v5 += v6;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v2 = v10;
  }
  v0[463] = v2;
  memcpy(v0 + 142, v0 + 2, 0x460uLL);
  uint64_t v7 = (void *)swift_task_alloc();
  v0[464] = v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1ACA84;
  uint64_t v8 = v0[450];
  return sub_1AE880((uint64_t)(v0 + 424), v8, (uint64_t)(v0 + 142));
}

uint64_t sub_1ACA84()
{
  *(void *)(*(void *)v1 + 3720) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1AE194;
  }
  else
  {
    uint64_t v2 = sub_1ACBA0;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1ACBA0()
{
  uint64_t v80 = v0;
  uint64_t v1 = *(void *)(v0 + 3392);
  *(void *)(v0 + 3728) = v1;
  uint64_t v2 = *(void *)(v0 + 3400);
  *(void *)(v0 + 3736) = v2;
  uint64_t v3 = *(void *)(v0 + 3408);
  *(void *)(v0 + 3744) = v3;
  uint64_t v4 = *(void *)(v0 + 3416);
  *(void *)(v0 + 3752) = v4;
  uint64_t v5 = *(void *)(v0 + 3424);
  *(void *)(v0 + 3760) = v5;
  uint64_t v6 = *(void *)(v0 + 3432);
  *(void *)(v0 + 3768) = v6;
  uint64_t v7 = *(void *)(v0 + 3440);
  *(void *)(v0 + 3776) = v7;
  uint64_t v8 = *(void *)(v0 + 3448);
  *(void *)(v0 + 3784) = v8;
  if (v2 == 1)
  {
    swift_bridgeObjectRelease();
    if (qword_26C3B0 != -1) {
      swift_once();
    }
    uint64_t v9 = *(void *)(v0 + 3688);
    uint64_t v10 = *(void *)(v0 + 3656);
    uint64_t v11 = *(void *)(v0 + 3648);
    uint64_t v12 = *(void *)(v0 + 3640);
    uint64_t v13 = sub_1FB430();
    sub_6DBC8(v13, (uint64_t)qword_2A5C50);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v11 + 16))(v10, v9, v12);
    double v14 = sub_1FB410();
    os_log_type_t v15 = sub_1FBDA0();
    BOOL v16 = os_log_type_enabled(v14, v15);
    uint64_t v17 = *(void *)(v0 + 3656);
    uint64_t v18 = *(void *)(v0 + 3648);
    uint64_t v19 = *(void *)(v0 + 3640);
    if (v16)
    {
      uint64_t v20 = (uint8_t *)swift_slowAlloc();
      v79[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v20 = 136315138;
      sub_1B3B60((unint64_t *)&qword_26D7B8);
      uint64_t v21 = sub_1FC580();
      *(void *)(v0 + 3560) = sub_D5890(v21, v22, v79);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v23(v17, v19);
      _os_log_impl(&dword_0, v14, v15, "Unable to construct server recommendation request for %s", v20, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      unint64_t v23 = *(void (**)(uint64_t, uint64_t))(v18 + 8);
      v23(*(void *)(v0 + 3656), *(void *)(v0 + 3640));
    }

    uint64_t v29 = *(void *)(v0 + 3688);
    uint64_t v30 = *(void *)(v0 + 3640);
    unint64_t v31 = sub_16136C((uint64_t)_swiftEmptyArrayStorage);
    v23(v29, v30);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v32 = *(uint64_t (**)(unint64_t))(v0 + 8);
    return v32(v31);
  }
  else
  {
    uint64_t v24 = (_OWORD *)(v0 + 2624);
    double v76 = (_OWORD *)(v0 + 2864);
    uint64_t v25 = *(void *)(v0 + 3608);
    *(void *)(v0 + 3328) = v1;
    *(void *)(v0 + 3336) = v2;
    *(void *)(v0 + 3344) = v3;
    *(void *)(v0 + 3352) = v4;
    *(void *)(v0 + 3360) = v5;
    *(void *)(v0 + 3368) = v6;
    *(void *)(v0 + 3376) = v7;
    *(void *)(v0 + 3384) = v8;
    unint64_t v26 = *(void *)(v25 + 48);
    if (*(unsigned char *)(v25 + 64))
    {
      unint64_t v27 = 0x8000000000219AD0;
      unint64_t v26 = 0xD00000000000003DLL;
      switch(*(void *)(v25 + 48))
      {
        case 1u:
          unint64_t v26 = 0xD00000000000004CLL;
          unint64_t v28 = "https://public-news-qa-books-personalization-server.us-west-3d.app.apple.com";
          goto LABEL_15;
        case 2u:
          unint64_t v26 = 0xD00000000000003FLL;
          unint64_t v28 = "https://staging-books-personalization-server.newsapps.apple.com";
LABEL_15:
          unint64_t v27 = (unint64_t)(v28 - 32) | 0x8000000000000000;
          break;
        case 3u:
          unint64_t v27 = 0x8000000000219A10;
          unint64_t v26 = 0xD00000000000002ELL;
          break;
        default:
          break;
      }
    }
    else
    {
      unint64_t v27 = *(void *)(v25 + 56);
      swift_bridgeObjectRetain();
    }
    unint64_t v78 = (_OWORD *)(v0 + 3328);
    uint64_t v34 = *(void *)(v25 + 16);
    uint64_t v35 = *(void *)(v25 + 24);
    uint64_t v36 = v25 + 72;
    uint64_t v37 = *(void *)(v25 + 32);
    uint64_t v38 = *(void *)(v25 + 40);
    sub_51B70(v36, v0 + 3520);
    *(void *)(v0 + 2776) = v26;
    *(void *)(v0 + 2784) = v27;
    *(void *)(v0 + 2792) = v34;
    *(void *)(v0 + 2800) = v35;
    *(void *)(v0 + 2808) = v37;
    *(void *)(v0 + 2816) = v38;
    sub_51B70(v0 + 3520, v0 + 2824);
    v79[0] = v34;
    v79[1] = v35;
    v79[2] = v37;
    v79[3] = v38;
    sub_52948(v34);
    sub_52948(v37);
    sub_52948(v34);
    sub_52948(v37);
    ClientConverter.init(configuration:)(v79, (uint64_t *)(v0 + 3104));
    sub_1264C(v0 + 3520);
    long long v39 = *(_OWORD *)(v0 + 3200);
    long long v40 = *(_OWORD *)(v0 + 3216);
    *(_OWORD *)(v0 + 2720) = v39;
    *(_OWORD *)(v0 + 2736) = v40;
    *(_OWORD *)(v0 + 2752) = *(_OWORD *)(v0 + 3232);
    *(void *)(v0 + 2768) = *(void *)(v0 + 3248);
    long long v41 = *(_OWORD *)(v0 + 3136);
    long long v42 = *(_OWORD *)(v0 + 3152);
    *(_OWORD *)(v0 + 2656) = v41;
    *(_OWORD *)(v0 + 2672) = v42;
    long long v43 = *(_OWORD *)(v0 + 3184);
    *(_OWORD *)(v0 + 2688) = *(_OWORD *)(v0 + 3168);
    *(_OWORD *)(v0 + 2704) = v43;
    long long v44 = *(_OWORD *)(v0 + 3120);
    _OWORD *v24 = *(_OWORD *)(v0 + 3104);
    *(_OWORD *)(v0 + 2640) = v44;
    long long v45 = *(_OWORD *)(v0 + 2800);
    long long v46 = *(_OWORD *)(v0 + 2832);
    long long v47 = *(_OWORD *)(v0 + 2848);
    *(_OWORD *)(v0 + 3056) = *(_OWORD *)(v0 + 2816);
    *(_OWORD *)(v0 + 3072) = v46;
    *(_OWORD *)(v0 + 3088) = v47;
    long long v48 = *(_OWORD *)(v0 + 2736);
    long long v49 = *(_OWORD *)(v0 + 2752);
    *(_OWORD *)(v0 + 2960) = v39;
    *(_OWORD *)(v0 + 2976) = v48;
    long long v50 = *(_OWORD *)(v0 + 2768);
    long long v51 = *(_OWORD *)(v0 + 2784);
    *(_OWORD *)(v0 + 2992) = v49;
    *(_OWORD *)(v0 + 3008) = v50;
    *(_OWORD *)(v0 + 3024) = v51;
    *(_OWORD *)(v0 + 3040) = v45;
    long long v52 = *(_OWORD *)(v0 + 2672);
    long long v53 = *(_OWORD *)(v0 + 2688);
    *(_OWORD *)(v0 + 2896) = v41;
    *(_OWORD *)(v0 + 2912) = v52;
    long long v54 = *(_OWORD *)(v0 + 2704);
    *(_OWORD *)(v0 + 2928) = v53;
    *(_OWORD *)(v0 + 2944) = v54;
    long long v55 = *(_OWORD *)(v0 + 2640);
    *double v76 = *v24;
    *(_OWORD *)(v0 + 2880) = v55;
    if (qword_26C3B0 != -1) {
      swift_once();
    }
    uint64_t v56 = *(void *)(v0 + 3688);
    uint64_t v57 = *(void *)(v0 + 3680);
    uint64_t v58 = *(void *)(v0 + 3648);
    uint64_t v59 = *(void *)(v0 + 3640);
    uint64_t v60 = sub_1FB430();
    *(void *)(v0 + 3792) = sub_6DBC8(v60, (uint64_t)qword_2A5C50);
    unint64_t v61 = *(void (**)(uint64_t, uint64_t, uint64_t))(v58 + 16);
    *(void *)(v0 + 3800) = v61;
    *(void *)(v0 + 3808) = (v58 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
    v61(v57, v56, v59);
    double v62 = sub_1FB410();
    os_log_type_t v63 = sub_1FBDC0();
    BOOL v64 = os_log_type_enabled(v62, v63);
    uint64_t v65 = *(void *)(v0 + 3680);
    uint64_t v66 = *(void *)(v0 + 3648);
    uint64_t v67 = *(void *)(v0 + 3640);
    if (v64)
    {
      uint64_t v68 = (uint8_t *)swift_slowAlloc();
      v79[0] = swift_slowAlloc();
      *(_DWORD *)uint64_t v68 = 136446210;
      sub_1B3B60((unint64_t *)&qword_26D7B8);
      uint64_t v69 = sub_1FC580();
      *(void *)(v0 + 3592) = sub_D5890(v69, v70, v79);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v71(v65, v67);
      _os_log_impl(&dword_0, v62, v63, "fetching recommendations for %{public}s", v68, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      uint64_t v71 = *(void (**)(uint64_t, uint64_t))(v66 + 8);
      v71(*(void *)(v0 + 3680), *(void *)(v0 + 3640));
    }

    *(void *)(v0 + 3816) = v71;
    uint64_t v72 = swift_task_alloc();
    *(void *)(v0 + 3824) = v72;
    *(void *)(v72 + 16) = v76;
    *(void *)(v72 + 24) = v78;
    uint64_t v73 = swift_task_alloc();
    *(void *)(v0 + 3832) = v73;
    *(void *)(v73 + 16) = v76;
    uint64_t v74 = swift_task_alloc();
    *(void *)(v0 + 3840) = v74;
    *(void *)(v74 + 16) = v76;
    double v77 = (uint64_t (*)(uint64_t, _OWORD *, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))((char *)&dword_270828 + dword_270828);
    double v75 = (void *)swift_task_alloc();
    *(void *)(v0 + 3848) = v75;
    *double v75 = v0;
    v75[1] = sub_1AD3B0;
    return v77(v0 + 3256, v78, (uint64_t)sub_1306D4, v72, (uint64_t)&unk_270820, v73, (uint64_t)sub_130DC8, v74);
  }
}

uint64_t sub_1AD3B0()
{
  uint64_t v2 = *v1;
  (*v1)[482] = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = sub_1ADB14;
  }
  else
  {
    sub_1B1CB8(v2[466], v2[467], v2[468], v2[469], v2[470], v2[471]);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v3 = sub_1AD564;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1AD564()
{
  uint64_t v48 = v0;
  uint64_t v1 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3800);
  uint64_t v2 = *(void *)(v0 + 3688);
  uint64_t v3 = *(void *)(v0 + 3672);
  uint64_t v4 = *(void *)(v0 + 3640);
  uint64_t v5 = *(void *)(v0 + 3256);
  *(void *)(v0 + 3864) = v5;
  uint64_t v44 = *(void *)(v0 + 3264);
  *(void *)(v0 + 3872) = v44;
  uint64_t v43 = *(void *)(v0 + 3272);
  *(void *)(v0 + 3880) = v43;
  uint64_t v42 = *(void *)(v0 + 3280);
  *(void *)(v0 + 3888) = v42;
  uint64_t v41 = *(void *)(v0 + 3288);
  *(void *)(v0 + 3896) = v41;
  uint64_t v40 = *(void *)(v0 + 3296);
  *(void *)(v0 + 3904) = v40;
  uint64_t v39 = *(void *)(v0 + 3304);
  *(void *)(v0 + 3912) = v39;
  uint64_t v45 = *(void *)(v0 + 3312);
  *(void *)(v0 + 3920) = v45;
  uint64_t v6 = *(unsigned __int8 *)(v0 + 3320);
  v1(v3, v2, v4);
  uint64_t v7 = sub_1FB410();
  os_log_type_t v8 = sub_1FBDC0();
  uint64_t v46 = v6;
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v37 = *(void (**)(uint64_t, uint64_t))(v0 + 3816);
    uint64_t v38 = v5;
    uint64_t v9 = *(void *)(v0 + 3672);
    uint64_t v10 = *(void *)(v0 + 3640);
    uint64_t v11 = (uint8_t *)swift_slowAlloc();
    long long v47 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v11 = 136446210;
    sub_1B3B60((unint64_t *)&qword_26D7B8);
    uint64_t v12 = sub_1FC580();
    *(void *)(v0 + 3584) = sub_D5890(v12, v13, (uint64_t *)&v47);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    uint64_t v14 = v10;
    uint64_t v5 = v38;
    v37(v9, v14);
    _os_log_impl(&dword_0, v7, v8, "fetched recommendations for %{public}s", v11, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v6 = v46;
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 3816))(*(void *)(v0 + 3672), *(void *)(v0 + 3640));
  }

  switch(v6)
  {
    case 1:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v29 = v5;
      *(unsigned char *)(v29 + 8) = 0;
      goto LABEL_16;
    case 2:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v30 = v5;
      char v31 = 1;
      goto LABEL_15;
    case 3:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v30 = v5;
      char v31 = 2;
LABEL_15:
      *(unsigned char *)(v30 + 8) = v31;
LABEL_16:
      swift_bridgeObjectRetain();
      goto LABEL_18;
    case 4:
      sub_1290DC();
      swift_allocError();
      *(void *)uint64_t v32 = v5;
      *(unsigned char *)(v32 + 8) = 3;
LABEL_18:
      uint64_t v33 = *(void (**)(uint64_t, uint64_t))(v0 + 3816);
      uint64_t v34 = *(void *)(v0 + 3688);
      uint64_t v35 = *(void *)(v0 + 3640);
      swift_willThrow();
      swift_bridgeObjectRelease();
      sub_12B058(v5, v44, v43, v42, v41, v40, v39, v45, v46);
      sub_1723E0(v0 + 2864);
      v33(v34, v35);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v36 = *(uint64_t (**)(void))(v0 + 8);
      uint64_t result = v36();
      break;
    default:
      uint64_t v15 = *(void *)(v0 + 3696);
      BOOL v16 = _swiftEmptyArrayStorage;
      long long v47 = _swiftEmptyArrayStorage;
      if (v15)
      {
        uint64_t v17 = *(void *)(v0 + 3624);
        uint64_t v18 = *(void *)(v0 + 3616);
        uint64_t v19 = *(void *)(v0 + 3600)
            + ((*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80));
        uint64_t v20 = *(void *)(v17 + 72);
        swift_bridgeObjectRetain();
        uint64_t v21 = 0;
        do
        {
          uint64_t v22 = *(void *)(v0 + 3696);
          uint64_t v23 = *(void *)(v0 + 3632);
          ++v21;
          sub_A0EE0(v19, v23);
          uint64_t v24 = *(void *)(v23 + *(int *)(v18 + 20));
          swift_bridgeObjectRetain();
          sub_1B493C(v23, type metadata accessor for SeedBasedRecommendationRequest);
          sub_A93B0(v24);
          v19 += v20;
        }
        while (v21 != v22);
        swift_bridgeObjectRelease();
        BOOL v16 = v47;
      }
      uint64_t v25 = sub_511A4((uint64_t)v16);
      *(void *)(v0 + 3928) = v25;
      swift_bridgeObjectRelease();
      *(void *)(v0 + 3456) = v5;
      *(void *)(v0 + 3464) = v44;
      *(void *)(v0 + 3472) = v43;
      *(void *)(v0 + 3480) = v42;
      *(void *)(v0 + 3488) = v41;
      *(void *)(v0 + 3496) = v40;
      *(void *)(v0 + 3504) = v39;
      *(void *)(v0 + 3512) = v45;
      memcpy((void *)(v0 + 2256), (const void *)(v0 + 104), 0x16BuLL);
      sub_8CFA4(v0 + 104);
      unint64_t v26 = (void *)swift_task_alloc();
      *(void *)(v0 + 3936) = v26;
      void *v26 = v0;
      v26[1] = sub_1ADC54;
      uint64_t v27 = *(void *)(v0 + 3704);
      uint64_t result = sub_1AF460(v0 + 3456, v25, v27, (void *)(v0 + 2256));
      break;
  }
  return result;
}

uint64_t sub_1ADB14()
{
  uint64_t v1 = (void (*)(uint64_t, uint64_t))v0[477];
  uint64_t v10 = v0[470];
  uint64_t v11 = v0[471];
  uint64_t v2 = v0[469];
  uint64_t v3 = v0[468];
  uint64_t v4 = v0[467];
  uint64_t v5 = v0[466];
  uint64_t v6 = v0[461];
  uint64_t v7 = v0[455];
  swift_bridgeObjectRelease();
  sub_1723E0((uint64_t)(v0 + 358));
  v1(v6, v7);
  sub_1B1CB8(v5, v4, v3, v2, v10, v11);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  os_log_type_t v8 = (uint64_t (*)(void))v0[1];
  return v8();
}

uint64_t sub_1ADC54(uint64_t a1)
{
  uint64_t v3 = (void *)*v2;
  v3[493] = a1;
  v3[494] = v1;
  swift_task_dealloc();
  if (v1)
  {
    sub_8D5A4((uint64_t)(v3 + 13));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1AE260;
  }
  else
  {
    uint64_t v13 = v3[490];
    uint64_t v5 = v3[489];
    uint64_t v6 = v3[488];
    uint64_t v7 = v3[487];
    uint64_t v8 = v3[486];
    uint64_t v9 = v3[485];
    uint64_t v10 = v3[484];
    uint64_t v11 = v3[483];
    sub_8D5A4((uint64_t)(v3 + 13));
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_12B058(v11, v10, v9, v8, v7, v6, v5, v13, 0);
    uint64_t v4 = sub_1ADE18;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1ADE18()
{
  uint64_t v24 = v0;
  (*(void (**)(void, void, void))(v0 + 3800))(*(void *)(v0 + 3664), *(void *)(v0 + 3688), *(void *)(v0 + 3640));
  swift_bridgeObjectRetain_n();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBD90();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = *(void (**)(uint64_t, uint64_t))(v0 + 3816);
    uint64_t v20 = v3;
    uint64_t v22 = *(void *)(v0 + 3688);
    os_log_type_t type = v2;
    uint64_t v4 = *(void *)(v0 + 3664);
    uint64_t v5 = *(void *)(v0 + 3640);
    uint64_t v6 = swift_slowAlloc();
    uint64_t v23 = swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 136446466;
    sub_1B3B60((unint64_t *)&qword_26D7B8);
    uint64_t v7 = sub_1FC580();
    *(void *)(v0 + 3568) = sub_D5890(v7, v8, &v23);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    v3(v4, v5);
    *(_WORD *)(v6 + 12) = 2080;
    swift_bridgeObjectRetain();
    sub_12124(&qword_26D960);
    sub_1B3B60(&qword_26C568);
    uint64_t v9 = v5;
    uint64_t v10 = sub_1FB6F0();
    unint64_t v12 = v11;
    swift_bridgeObjectRelease();
    *(void *)(v0 + 3576) = sub_D5890(v10, v12, &v23);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease_n();
    _os_log_impl(&dword_0, v1, type, "for %{public}s, returning result %s", (uint8_t *)v6, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    sub_1723E0(v0 + 2864);
    v20(v22, v9);
  }
  else
  {
    uint64_t v13 = *(void (**)(uint64_t, uint64_t))(v0 + 3816);
    uint64_t v14 = *(void *)(v0 + 3688);
    uint64_t v15 = *(void *)(v0 + 3664);
    uint64_t v16 = *(void *)(v0 + 3640);

    swift_bridgeObjectRelease_n();
    v13(v15, v16);
    sub_1723E0(v0 + 2864);
    v13(v14, v16);
  }
  uint64_t v17 = *(void *)(v0 + 3944);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v18 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v18(v17);
}

uint64_t sub_1AE194()
{
  (*(void (**)(void, void))(v0[456] + 8))(v0[461], v0[455]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1AE260()
{
  uint64_t v12 = v0[489];
  uint64_t v13 = v0[490];
  uint64_t v11 = v0[488];
  uint64_t v1 = v0[487];
  uint64_t v2 = v0[486];
  uint64_t v3 = v0[485];
  uint64_t v4 = v0[484];
  uint64_t v5 = v0[483];
  uint64_t v6 = (void (*)(uint64_t, uint64_t))v0[477];
  uint64_t v7 = v0[461];
  uint64_t v8 = v0[455];
  sub_1723E0((uint64_t)(v0 + 358));
  v6(v7, v8);
  sub_12B058(v5, v4, v3, v2, v1, v11, v12, v13, 0);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

void sub_1AE39C(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = type metadata accessor for SeedBasedRecommendationRequest(0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)&v35 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1FB110();
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v35 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  int64_t v12 = *(void *)(a1 + 16);
  if (v12 == 1)
  {
    uint64_t v13 = a1 + ((*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
    uint64_t v14 = *(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16);
    v14(a2, v13, v8);
  }
  else
  {
    uint64_t v40 = v9;
    sub_1FB100();
    if (qword_26C3B0 != -1) {
      swift_once();
    }
    uint64_t v15 = sub_1FB430();
    sub_6DBC8(v15, (uint64_t)qword_2A5C50);
    (*(void (**)(char *, uint64_t, uint64_t))(v40 + 16))(v11, a2, v8);
    swift_bridgeObjectRetain_n();
    uint64_t v16 = sub_1FB410();
    int v17 = sub_1FBDC0();
    if (os_log_type_enabled(v16, (os_log_type_t)v17))
    {
      int v39 = v17;
      uint64_t v18 = swift_slowAlloc();
      uint64_t v38 = swift_slowAlloc();
      uint64_t v42 = v38;
      *(_DWORD *)uint64_t v18 = 136315394;
      uint64_t v19 = sub_1FB0F0();
      uint64_t v41 = (void *)sub_D5890(v19, v20, &v42);
      sub_1FBED0();
      swift_bridgeObjectRelease();
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);
      uint64_t v40 = v18;
      *(_WORD *)(v18 + 12) = 2080;
      uint64_t v21 = _swiftEmptyArrayStorage;
      if (v12)
      {
        uint64_t v36 = v16;
        uint64_t v41 = _swiftEmptyArrayStorage;
        sub_46588(0, v12, 0);
        uint64_t v22 = *(unsigned __int8 *)(v5 + 80);
        uint64_t v37 = a1;
        uint64_t v23 = a1 + ((v22 + 32) & ~v22);
        uint64_t v24 = *(void *)(v5 + 72);
        uint64_t v21 = v41;
        do
        {
          sub_A0EE0(v23, (uint64_t)v7);
          uint64_t v25 = sub_1FB0F0();
          uint64_t v27 = v26;
          sub_1B493C((uint64_t)v7, type metadata accessor for SeedBasedRecommendationRequest);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
          {
            sub_46588(0, v21[2] + 1, 1);
            uint64_t v21 = v41;
          }
          unint64_t v29 = v21[2];
          unint64_t v28 = v21[3];
          if (v29 >= v28 >> 1)
          {
            sub_46588(v28 > 1, v29 + 1, 1);
            uint64_t v21 = v41;
          }
          v21[2] = v29 + 1;
          uint64_t v30 = &v21[2 * v29];
          v30[4] = v25;
          v30[5] = v27;
          v23 += v24;
          --v12;
        }
        while (v12);
        uint64_t v16 = v36;
      }
      char v31 = (uint8_t *)v40;
      uint64_t v41 = v21;
      sub_12124(&qword_26C6D8);
      sub_948A0();
      uint64_t v32 = sub_1FB7B0();
      unint64_t v34 = v33;
      swift_bridgeObjectRelease();
      uint64_t v41 = (void *)sub_D5890(v32, v34, &v42);
      sub_1FBED0();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl(&dword_0, v16, (os_log_type_t)v39, "Creating overall UUID %s for subrequests %s", v31, 0x16u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      (*(void (**)(char *, uint64_t))(v40 + 8))(v11, v8);

      swift_bridgeObjectRelease_n();
    }
  }
}

uint64_t sub_1AE880(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(void *)(v4 + 16) = a1;
  uint64_t v6 = sub_1FB110();
  *(void *)(v4 + 40) = v6;
  *(void *)(v4 + 48) = *(void *)(v6 - 8);
  *(void *)(v4 + 56) = swift_task_alloc();
  uint64_t v7 = type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v4 + 64) = v7;
  *(void *)(v4 + 72) = *(void *)(v7 - 8);
  *(void *)(v4 + 80) = swift_task_alloc();
  *(void *)(v4 + 88) = swift_task_alloc();
  *(_OWORD *)(v4 + 96) = *(_OWORD *)(a3 + 368);
  uint64_t v8 = *(void *)(a3 + 464);
  *(void *)(v4 + 112) = *(void *)(a3 + 416);
  *(void *)(v4 + 120) = v8;
  return _swift_task_switch(sub_1AE9C8, 0, 0);
}

uint64_t sub_1AE9C8()
{
  uint64_t v110 = v0;
  uint64_t v1 = v0[3];
  uint64_t v95 = *(void *)(v1 + 16);
  if (!v95)
  {
    double v75 = (_OWORD *)v0[2];
    *double v75 = xmmword_202690;
    v75[1] = 0u;
    v75[2] = 0u;
    v75[3] = 0u;
    goto LABEL_109;
  }
  uint64_t v2 = v0[15];
  uint64_t v4 = (int *)v0[8];
  uint64_t v3 = v0[9];
  uint64_t v97 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
  sub_A0EE0(v97, v0[11]);
  uint64_t v96 = *(void *)(v3 + 72);
  uint64_t v93 = (uint64_t *)(v2 + 32);
  uint64_t v94 = v2;
  swift_bridgeObjectRetain();
  uint64_t v5 = 0;
  double v98 = _swiftEmptyArrayStorage;
  unint64_t v101 = v4;
  uint64_t v102 = v0;
  do
  {
    uint64_t v100 = v5;
    sub_A0EE0(v97 + v5 * v96, v0[10]);
    uint64_t v6 = swift_bridgeObjectRetain();
    uint64_t v7 = sub_1B39FC(v6);
    uint64_t v8 = v7[2];
    if (v8)
    {
      sub_12124(&qword_26D3C8);
      uint64_t v9 = (char *)swift_allocObject();
      size_t v10 = j__malloc_size(v9);
      *((void *)v9 + 2) = v8;
      *((void *)v9 + 3) = 2 * ((uint64_t)(v10 - 32) / 560);
      uint64_t v11 = sub_4EEFC(&v107, v9 + 32, v8, (uint64_t)v7);
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t result = sub_1226C();
      if (v11 != (void *)v8) {
        goto LABEL_128;
      }
      swift_release();
      uint64_t v4 = v101;
      uint64_t v0 = v102;
    }
    else
    {
      uint64_t v9 = (char *)_swiftEmptyArrayStorage;
    }
    uint64_t v107 = v9;
    sub_1AC634((uint64_t *)&v107);
    uint64_t v13 = v0[10];
    uint64_t result = swift_release();
    uint64_t v14 = *(void *)(v13 + v4[13]);
    if (!v14) {
      goto LABEL_127;
    }
    uint64_t v15 = *(void *)(v13 + v4[14]);
    if (v15 == 0x8000000000000000 && v14 == -1) {
      goto LABEL_129;
    }
    int v17 = v107;
    uint64_t v18 = v15 / v14;
    if (v0[12] >= v18) {
      uint64_t v19 = v18;
    }
    else {
      uint64_t v19 = v0[12];
    }
    uint64_t v99 = v14;
    if (v19)
    {
      int64_t v20 = 0;
      int64_t v21 = 0;
      int64_t v22 = *((void *)v107 + 2);
      while (1)
      {
        BOOL v23 = v22 >= v21;
        if (v19 > 0) {
          BOOL v23 = v21 >= v22;
        }
        if (v23) {
          break;
        }
        BOOL v24 = __OFADD__(v21, v19);
        v21 += v19;
        if (v24) {
          int64_t v21 = (v21 >> 63) ^ 0x8000000000000000;
        }
        BOOL v24 = __OFADD__(v20++, 1);
        if (v24)
        {
          __break(1u);
          goto LABEL_116;
        }
      }
      uint64_t v107 = (char *)_swiftEmptyArrayStorage;
      uint64_t result = sub_466F8(0, v20, 0);
      uint64_t v25 = v107;
      uint64_t v105 = v19;
      if (v20)
      {
        int64_t v26 = 0;
        uint64_t v27 = v17;
        uint64_t v103 = v17 + 32;
        while (1)
        {
          BOOL v28 = v22 >= v26;
          if (v19 > 0) {
            BOOL v28 = v26 >= v22;
          }
          if (v28) {
            break;
          }
          if (__OFADD__(v26, v19)) {
            int64_t v29 = ((v26 + v19) >> 63) ^ 0x8000000000000000;
          }
          else {
            int64_t v29 = v26 + v19;
          }
          if (__OFADD__(v26, v19)) {
            goto LABEL_118;
          }
          if (v22 >= v26 + v19) {
            int64_t v30 = v26 + v19;
          }
          else {
            int64_t v30 = v22;
          }
          if (v30 < v26) {
            goto LABEL_119;
          }
          if (v26 < 0) {
            goto LABEL_120;
          }
          unint64_t v31 = *((void *)v27 + 2);
          if (v31 < v26 || (uint64_t)v31 < v30) {
            goto LABEL_121;
          }
          uint64_t v107 = v25;
          unint64_t v33 = *((void *)v25 + 2);
          unint64_t v32 = *((void *)v25 + 3);
          uint64_t result = swift_retain();
          if (v33 >= v32 >> 1)
          {
            uint64_t result = sub_466F8(v32 > 1, v33 + 1, 1);
            uint64_t v25 = v107;
          }
          *((void *)v25 + 2) = v33 + 1;
          unint64_t v34 = &v25[32 * v33];
          uint64_t v19 = v105;
          *((void *)v34 + 4) = v27;
          *((void *)v34 + 5) = v103;
          *((void *)v34 + 6) = v26;
          *((void *)v34 + 7) = (2 * v30) | 1;
          int64_t v26 = v29;
          if (!--v20) {
            goto LABEL_51;
          }
        }
        __break(1u);
LABEL_118:
        __break(1u);
LABEL_119:
        __break(1u);
LABEL_120:
        __break(1u);
LABEL_121:
        __break(1u);
LABEL_122:
        __break(1u);
LABEL_123:
        __break(1u);
LABEL_124:
        __break(1u);
LABEL_125:
        __break(1u);
LABEL_126:
        __break(1u);
LABEL_127:
        __break(1u);
LABEL_128:
        __break(1u);
LABEL_129:
        __break(1u);
LABEL_130:
        __break(1u);
LABEL_131:
        __break(1u);
LABEL_132:
        __break(1u);
LABEL_133:
        __break(1u);
LABEL_134:
        __break(1u);
        return result;
      }
      int64_t v29 = 0;
      uint64_t v27 = v17;
LABEL_51:
      BOOL v35 = v22 >= v29;
      if (v19 > 0) {
        BOOL v35 = v29 >= v22;
      }
      if (!v35)
      {
        do
        {
          int64_t v58 = __OFADD__(v29, v19) ? ((v29 + v19) >> 63) ^ 0x8000000000000000 : v29 + v19;
          if (__OFADD__(v29, v19)) {
            goto LABEL_122;
          }
          if (v22 >= v29 + v19) {
            int64_t v59 = v29 + v19;
          }
          else {
            int64_t v59 = v22;
          }
          if (v59 < v29) {
            goto LABEL_123;
          }
          if (v29 < 0) {
            goto LABEL_124;
          }
          unint64_t v60 = *((void *)v27 + 2);
          if (v60 < v29 || (uint64_t)v60 < v59) {
            goto LABEL_125;
          }
          uint64_t v107 = v25;
          unint64_t v63 = *((void *)v25 + 2);
          unint64_t v62 = *((void *)v25 + 3);
          uint64_t result = swift_retain();
          if (v63 >= v62 >> 1)
          {
            uint64_t result = sub_466F8(v62 > 1, v63 + 1, 1);
            uint64_t v25 = v107;
          }
          *((void *)v25 + 2) = v63 + 1;
          BOOL v64 = &v25[32 * v63];
          *((void *)v64 + 4) = v27;
          *((void *)v64 + 5) = v27 + 32;
          *((void *)v64 + 6) = v29;
          *((void *)v64 + 7) = (2 * v59) | 1;
          BOOL v65 = v22 >= v58;
          uint64_t v19 = v105;
          if (v105 > 0) {
            BOOL v65 = v58 >= v22;
          }
          int64_t v29 = v58;
        }
        while (!v65);
      }
      swift_release();
      uint64_t v4 = v101;
      uint64_t v0 = v102;
      if (!*((void *)v25 + 2))
      {
LABEL_3:
        swift_bridgeObjectRelease();
LABEL_4:
        sub_1B493C(v0[10], type metadata accessor for SeedBasedRecommendationRequest);
        goto LABEL_5;
      }
    }
    else
    {
      sub_12124(&qword_26D4E8);
      uint64_t v25 = (char *)swift_allocObject();
      *((_OWORD *)v25 + 1) = xmmword_1FD2A0;
      *((void *)v25 + 4) = _swiftEmptyArrayStorage;
      *((void *)v25 + 5) = &_swiftEmptyArrayStorage[4];
      *((_OWORD *)v25 + 3) = xmmword_202690;
      swift_release();
      if (!*((void *)v25 + 2)) {
        goto LABEL_3;
      }
    }
    uint64_t v37 = *((void *)v25 + 4);
    uint64_t v36 = *((void *)v25 + 5);
    uint64_t v38 = *((void *)v25 + 6);
    unint64_t v39 = *((void *)v25 + 7);
    swift_unknownObjectRetain();
    swift_bridgeObjectRelease();
    unint64_t v40 = v39 >> 1;
    unint64_t v106 = v39 >> 1;
    if ((v39 & 1) == 0)
    {
      swift_unknownObjectRetain();
LABEL_57:
      uint64_t v41 = sub_4ABF0(v37, v36, v38, v39);
      goto LABEL_64;
    }
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v42 = (void *)swift_dynamicCastClass();
    if (!v42)
    {
      swift_unknownObjectRelease();
      uint64_t v42 = _swiftEmptyArrayStorage;
    }
    uint64_t v43 = v42[2];
    uint64_t result = swift_release();
    if (__OFSUB__(v40, v38)) {
      goto LABEL_134;
    }
    if (v43 != v40 - v38)
    {
      swift_unknownObjectRelease();
      goto LABEL_57;
    }
    uint64_t v41 = (void *)swift_dynamicCastClass();
    if (!v41)
    {
      swift_unknownObjectRelease();
      uint64_t v41 = _swiftEmptyArrayStorage;
    }
LABEL_64:
    uint64_t v44 = v0[13];
    uint64_t v45 = v0[10];
    swift_unknownObjectRelease();
    char v46 = *(unsigned char *)(v45 + v4[11]);
    long long v47 = v4;
    uint64_t v48 = *(unsigned __int8 *)(v45 + v4[8]);
    v109[0] = v48;
    sub_1B057C((uint64_t)v41, v46, v109, v44, 0, &v107);
    swift_release();
    uint64_t v49 = v108;
    uint64_t v8 = v0[10];
    if (v108)
    {
      char v50 = (char)v107;
      if ((*(unsigned char *)(v8 + v47[9]) & 1) == 0)
      {
        int64_t v51 = *(void *)(v94 + 16);
        if (v51)
        {
          char v104 = (char)v107;
          uint64_t v107 = (char *)_swiftEmptyArrayStorage;
          swift_bridgeObjectRetain();
          uint64_t result = sub_46894(0, v51, 0);
          long long v52 = v107;
          long long v53 = v93;
          while (1)
          {
            uint64_t v55 = *v53++;
            uint64_t v54 = v55;
            if (v55 < 0) {
              goto LABEL_126;
            }
            uint64_t v107 = v52;
            unint64_t v57 = *((void *)v52 + 2);
            unint64_t v56 = *((void *)v52 + 3);
            if (v57 >= v56 >> 1)
            {
              uint64_t result = sub_46894(v56 > 1, v57 + 1, 1);
              long long v52 = v107;
            }
            *((void *)v52 + 2) = v57 + 1;
            *(void *)&v52[8 * v57 + 32] = v54;
            if (!--v51)
            {
              swift_bridgeObjectRelease();
              uint64_t v8 = v102[10];
              char v50 = v104;
              goto LABEL_94;
            }
          }
        }
      }
      long long v52 = (char *)_swiftEmptyArrayStorage;
LABEL_94:
      sub_12124(&qword_273110);
      uint64_t v66 = swift_allocObject();
      *(_OWORD *)(v66 + 16) = xmmword_1FD2A0;
      *(void *)(v66 + 32) = 0;
      *(void *)(v66 + 40) = v48;
      uint64_t v67 = *(void *)(v8 + v101[10]) & 2;
      if ((*(void *)(v8 + v101[10]) & 1) == 0)
      {
        if (!v67)
        {
LABEL_116:
          uint64_t v91 = v102[11];
          sub_1290DC();
          swift_allocError();
          *(void *)uint64_t v92 = 0;
          *(unsigned char *)(v92 + 8) = 7;
          swift_willThrow();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_unknownObjectRelease();
          sub_1B493C(v8, type metadata accessor for SeedBasedRecommendationRequest);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_1B493C(v91, type metadata accessor for SeedBasedRecommendationRequest);
          swift_task_dealloc();
          swift_task_dealloc();
          swift_task_dealloc();
          double v76 = (uint64_t (*)(void))v102[1];
          goto LABEL_110;
        }
        uint64_t v67 = 1;
      }
      uint64_t result = (uint64_t)sub_1CA150(v102[14]);
      int64_t v68 = v106 - v38;
      if (__OFSUB__(v106, v38)) {
        goto LABEL_130;
      }
      uint64_t v69 = v99 * v68;
      if ((unsigned __int128)(v99 * (__int128)v68) >> 64 != (v99 * v68) >> 63) {
        goto LABEL_131;
      }
      if (v69 < (uint64_t)0xFFFFFFFF80000000) {
        goto LABEL_132;
      }
      if (v69 > 0x7FFFFFFF) {
        goto LABEL_133;
      }
      uint64_t v70 = result;
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v71 = v98;
      }
      else {
        uint64_t v71 = sub_42260(0, v98[2] + 1, 1, v98);
      }
      unint64_t v73 = v71[2];
      unint64_t v72 = v71[3];
      if (v73 >= v72 >> 1) {
        uint64_t v71 = sub_42260((void *)(v72 > 1), v73 + 1, 1, v71);
      }
      v71[2] = v73 + 1;
      double v98 = v71;
      uint64_t v74 = &v71[10 * v73];
      *((unsigned char *)v74 + 32) = v50 & 1;
      v74[5] = v49;
      v74[6] = v66;
      v74[7] = v52;
      v74[8] = 0;
      v74[9] = v67;
      v74[10] = 0;
      *((unsigned char *)v74 + 88) = 0;
      v74[12] = v70;
      *((_DWORD *)v74 + 26) = v69;
      swift_unknownObjectRelease();
      uint64_t v4 = v101;
      uint64_t v0 = v102;
      goto LABEL_4;
    }
    sub_1B493C(v8, type metadata accessor for SeedBasedRecommendationRequest);
    swift_unknownObjectRelease();
    uint64_t v0 = v102;
    uint64_t v4 = v47;
LABEL_5:
    uint64_t v5 = v100 + 1;
  }
  while (v100 + 1 != v95);
  swift_bridgeObjectRelease();
  uint64_t v77 = v0[11];
  if (v98[2])
  {
    uint64_t v79 = v0[7];
    uint64_t v78 = v0[8];
    uint64_t v82 = v0 + 5;
    uint64_t v80 = v0[5];
    uint64_t v81 = v82[1];
    double v83 = (uint64_t *)v102[2];
    Swift::Int v84 = (uint64_t *)(v77 + *(int *)(v78 + 28));
    uint64_t v86 = *v84;
    uint64_t v85 = v84[1];
    swift_bridgeObjectRetain();
    sub_1FB100();
    uint64_t v87 = sub_1FB0F0();
    uint64_t v89 = v88;
    (*(void (**)(uint64_t, uint64_t))(v81 + 8))(v79, v80);
    sub_1B493C(v77, type metadata accessor for SeedBasedRecommendationRequest);
    *double v83 = v87;
    v83[1] = v89;
    v83[2] = 0;
    v83[3] = 0;
    v83[4] = v86;
    v83[5] = v85;
    v83[6] = (uint64_t)v98;
    v83[7] = 0;
    uint64_t v0 = v102;
  }
  else
  {
    uint64_t v90 = (_OWORD *)v0[2];
    swift_bridgeObjectRelease();
    sub_1B493C(v77, type metadata accessor for SeedBasedRecommendationRequest);
    *uint64_t v90 = xmmword_202690;
    v90[1] = 0u;
    v90[2] = 0u;
    v90[3] = 0u;
  }
LABEL_109:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v76 = (uint64_t (*)(void))v0[1];
LABEL_110:
  return v76();
}

uint64_t sub_1AF460(uint64_t a1, uint64_t a2, uint64_t a3, void *__src)
{
  *(void *)(v5 + 664) = v4;
  *(void *)(v5 + 656) = a3;
  *(void *)(v5 + 648) = a2;
  *(void *)(v5 + 672) = *(void *)a1;
  long long v6 = *(_OWORD *)(a1 + 24);
  *(_OWORD *)(v5 + 680) = *(_OWORD *)(a1 + 8);
  *(_OWORD *)(v5 + 696) = v6;
  *(_OWORD *)(v5 + 712) = *(_OWORD *)(a1 + 40);
  *(void *)(v5 + 728) = *(void *)(a1 + 56);
  memcpy((void *)(v5 + 16), __src, 0x16BuLL);
  return _swift_task_switch(sub_1AF508, 0, 0);
}

int64_t sub_1AF508()
{
  *(void *)(v0 + 736) = sub_129750();
  *(void *)(v0 + 744) = sub_1CA2A8();
  *(void *)(v0 + 752) = sub_1CA60C();
  unint64_t v32 = sub_1CA840();
  *(void *)(v0 + 760) = sub_1CAAF8();
  *(void *)(v0 + 768) = sub_1CB2E4();
  uint64_t v1 = sub_1CB5B4()[2];
  if (!v1)
  {
LABEL_29:
    *(void *)(v0 + 776) = _swiftEmptyDictionarySingleton;
    uint64_t v28 = *(void *)(v0 + 728);
    uint64_t v29 = *(void *)(v0 + 720);
    long long v33 = *(_OWORD *)(v0 + 688);
    long long v34 = *(_OWORD *)(v0 + 704);
    long long v31 = *(_OWORD *)(v0 + 672);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 536) = v31;
    *(_OWORD *)(v0 + 552) = v33;
    *(_OWORD *)(v0 + 568) = v34;
    *(void *)(v0 + 584) = v29;
    *(void *)(v0 + 592) = v28;
    int64_t v30 = (void *)swift_task_alloc();
    *(void *)(v0 + 784) = v30;
    *int64_t v30 = v0;
    v30[1] = sub_1AFA00;
    return sub_1B0C14((uint64_t *)(v0 + 536));
  }
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 48);
  uint64_t v3 = v32;
  while (1)
  {
    if (!v3[2]) {
      goto LABEL_5;
    }
    uint64_t v6 = *(v2 - 2);
    uint64_t v5 = *(v2 - 1);
    uint64_t v7 = *v2;
    uint64_t v8 = sub_56168(v6);
    if ((v9 & 1) == 0) {
      goto LABEL_5;
    }
    char v10 = *(unsigned char *)(v3[7] + v8);
    if (_swiftEmptyDictionarySingleton[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v11 = sub_4C69C(v10);
      int64_t v12 = _swiftEmptyArrayStorage;
      if ((v13 & 1) == 0) {
        goto LABEL_13;
      }
      int64_t v12 = *(void **)(_swiftEmptyDictionarySingleton[7] + 8 * v11);
    }
    else
    {
      int64_t v12 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
LABEL_13:
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int64_t v12 = sub_42490(0, v12[2] + 1, 1, v12);
    }
    unint64_t v15 = v12[2];
    unint64_t v14 = v12[3];
    if (v15 >= v14 >> 1) {
      int64_t v12 = sub_42490((void *)(v14 > 1), v15 + 1, 1, v12);
    }
    v12[2] = v15 + 1;
    uint64_t v16 = &v12[3 * v15];
    v16[4] = v6;
    v16[5] = v5;
    v16[6] = v7;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v19 = sub_4C69C(v10);
    uint64_t v20 = _swiftEmptyDictionarySingleton[2];
    BOOL v21 = (v18 & 1) == 0;
    int64_t result = v20 + v21;
    if (__OFADD__(v20, v21))
    {
      __break(1u);
LABEL_36:
      __break(1u);
      return result;
    }
    char v23 = v18;
    if (_swiftEmptyDictionarySingleton[3] < result) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if ((v18 & 1) == 0) {
        goto LABEL_24;
      }
    }
    else
    {
      int64_t result = (int64_t)sub_123BEC();
      if ((v23 & 1) == 0)
      {
LABEL_24:
        _swiftEmptyDictionarySingleton[(v19 >> 6) + 8] |= 1 << v19;
        *(unsigned char *)(_swiftEmptyDictionarySingleton[6] + v19) = v10;
        *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v19) = v12;
        uint64_t v25 = _swiftEmptyDictionarySingleton[2];
        BOOL v26 = __OFADD__(v25, 1);
        uint64_t v27 = v25 + 1;
        if (v26) {
          goto LABEL_36;
        }
        _swiftEmptyDictionarySingleton[2] = v27;
        goto LABEL_4;
      }
    }
LABEL_3:
    uint64_t v4 = _swiftEmptyDictionarySingleton[7];
    swift_bridgeObjectRelease();
    *(void *)(v4 + 8 * v19) = v12;
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v3 = v32;
LABEL_5:
    v2 += 3;
    if (!--v1)
    {
      swift_bridgeObjectRelease();
      goto LABEL_29;
    }
  }
  sub_11E290(result, isUniquelyReferenced_nonNull_native);
  int64_t result = sub_4C69C(v10);
  if ((v23 & 1) == (v24 & 1))
  {
    unint64_t v19 = result;
    if ((v23 & 1) == 0) {
      goto LABEL_24;
    }
    goto LABEL_3;
  }
  return sub_1FC770();
}

uint64_t sub_1AFA00()
{
  *(void *)(*(void *)v1 + 792) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1B0210;
  }
  else
  {
    uint64_t v2 = sub_1AFB68;
  }
  return _swift_task_switch(v2, 0, 0);
}

void sub_1AFB68()
{
  uint64_t v92 = v0;
  int64_t v1 = 0;
  uint64_t v73 = (uint64_t)(v0 + 2);
  uint64_t v2 = (uint64_t)(v0 + 48);
  uint64_t v3 = v0 + 75;
  uint64_t v4 = v0 + 78;
  uint64_t v5 = v0[97];
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v70 = v5 + 64;
  uint64_t v72 = v5;
  uint64_t v7 = -1;
  uint64_t v8 = -1 << *(unsigned char *)(v72 + 32);
  if (-v8 < 64) {
    uint64_t v7 = ~(-1 << -(char)v8);
  }
  unint64_t v9 = v7 & v6;
  int64_t v71 = (unint64_t)(63 - v8) >> 6;
  uint64_t v10 = v0[99];
  unint64_t v11 = _swiftEmptyDictionarySingleton;
  while (1)
  {
    if (v9)
    {
      uint64_t v74 = (v9 - 1) & v9;
      unint64_t v12 = __clz(__rbit64(v9)) | (v1 << 6);
      goto LABEL_22;
    }
    int64_t v13 = v1 + 1;
    if (__OFADD__(v1, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      return;
    }
    if (v13 >= v71) {
      goto LABEL_37;
    }
    unint64_t v14 = *(void *)(v70 + 8 * v13);
    ++v1;
    if (!v14)
    {
      int64_t v1 = v13 + 1;
      if (v13 + 1 >= v71) {
        goto LABEL_37;
      }
      unint64_t v14 = *(void *)(v70 + 8 * v1);
      if (!v14)
      {
        int64_t v1 = v13 + 2;
        if (v13 + 2 >= v71) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v70 + 8 * v1);
        if (!v14) {
          break;
        }
      }
    }
LABEL_21:
    uint64_t v74 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v1 << 6);
LABEL_22:
    uint64_t v80 = (uint64_t)v11;
    int64_t v75 = v1;
    char v79 = *(unsigned char *)(*(void *)(v72 + 48) + v12);
    uint64_t v16 = *(void *)(*(void *)(v72 + 56) + 8 * v12);
    *uint64_t v4 = _swiftEmptyDictionarySingleton;
    uint64_t v17 = *(void *)(v16 + 16);
    if (v17)
    {
      swift_bridgeObjectRetain_n();
      char v18 = (uint64_t *)(v16 + 48);
      unint64_t v19 = (void **)v4;
      do
      {
        uint64_t v20 = *(v18 - 2);
        uint64_t v21 = *(v18 - 1);
        uint64_t v22 = *v18;
        v18 += 3;
        v0[75] = v20;
        v0[76] = v21;
        v0[77] = v22;
        sub_12124(&qword_26D3C0);
        uint64_t v23 = swift_allocObject();
        *(_OWORD *)(v23 + 16) = xmmword_1FD2A0;
        *(void *)(v23 + 32) = v22;
        uint64_t v24 = sub_BDF88(v23);
        swift_setDeallocating();
        swift_deallocClassInstance();
        uint64_t v25 = swift_task_alloc();
        *(void *)(v25 + 16) = v19;
        *(void *)(v25 + 24) = v3;
        swift_bridgeObjectRetain();
        sub_6188(sub_1B41A4, v25, v24);
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_task_dealloc();
        --v17;
      }
      while (v17);
      swift_bridgeObjectRelease();
      BOOL v26 = *v19;
      uint64_t v2 = (uint64_t)(v0 + 48);
    }
    else
    {
      swift_bridgeObjectRetain();
      BOOL v26 = _swiftEmptyDictionarySingleton;
    }
    uint64_t v27 = v0[96];
    uint64_t v28 = v0[94];
    uint64_t v77 = v0[93];
    uint64_t v78 = v0[95];
    uint64_t v76 = v0[92];
    uint64_t v29 = v0[81];
    uint64_t v30 = sub_18FA24((uint64_t)v26);
    swift_bridgeObjectRelease();
    *(void *)&long long v82 = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRetain();
    sub_8CFA4(v73);
    sub_19AF30(v29, v30, v73, (uint64_t *)&v82, v79);
    sub_8D5A4(v73);
    swift_bridgeObjectRelease_n();
    uint64_t v31 = swift_bridgeObjectRetain();
    unint64_t v32 = sub_4B70C(v31);
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRetain();
    long long v33 = sub_1B3BA4((uint64_t)v32, v28);
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v34 = sub_1B3D44((uint64_t)v33, v76, v77, v78, v27);
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    unint64_t v11 = (void *)v80;
    uint64_t v81 = (void *)v80;
    uint64_t v35 = v34[2];
    if (v35)
    {
      swift_bridgeObjectRetain();
      long long v36 = *((_OWORD *)v34 + 3);
      *(_OWORD *)uint64_t v2 = *((_OWORD *)v34 + 2);
      *(_OWORD *)(v2 + 16) = v36;
      long long v37 = *((_OWORD *)v34 + 4);
      long long v38 = *((_OWORD *)v34 + 5);
      long long v39 = *((_OWORD *)v34 + 7);
      *(_OWORD *)(v2 + 64) = *((_OWORD *)v34 + 6);
      *(_OWORD *)(v2 + 80) = v39;
      *(_OWORD *)(v2 + 32) = v37;
      *(_OWORD *)(v2 + 48) = v38;
      long long v40 = *((_OWORD *)v34 + 8);
      long long v41 = *((_OWORD *)v34 + 9);
      long long v42 = *((_OWORD *)v34 + 10);
      *(unsigned char *)(v2 + 144) = *((unsigned char *)v34 + 176);
      *(_OWORD *)(v2 + 112) = v41;
      *(_OWORD *)(v2 + 128) = v42;
      *(_OWORD *)(v2 + 96) = v40;
      uint64_t v43 = v0[82];
      long long v44 = *((_OWORD *)v34 + 9);
      long long v88 = *((_OWORD *)v34 + 8);
      long long v89 = v44;
      long long v90 = *((_OWORD *)v34 + 10);
      char v91 = *((unsigned char *)v34 + 176);
      long long v45 = *((_OWORD *)v34 + 5);
      long long v84 = *((_OWORD *)v34 + 4);
      long long v85 = v45;
      long long v46 = *((_OWORD *)v34 + 7);
      long long v86 = *((_OWORD *)v34 + 6);
      long long v87 = v46;
      long long v47 = *((_OWORD *)v34 + 3);
      long long v82 = *((_OWORD *)v34 + 2);
      long long v83 = v47;
      sub_54834(v2);
      sub_1B1324((uint64_t *)&v81, &v82, v43);
      uint64_t v3 = v0 + 75;
      if (v10)
      {
        swift_bridgeObjectRelease();
        sub_7A018(v2);
        swift_bridgeObjectRelease();
        return;
      }
      sub_7A018(v2);
      if (v35 != 1)
      {
        long long v48 = *(_OWORD *)(v34 + 25);
        *(_OWORD *)uint64_t v2 = *(_OWORD *)(v34 + 23);
        *(_OWORD *)(v2 + 16) = v48;
        long long v49 = *(_OWORD *)(v34 + 27);
        long long v50 = *(_OWORD *)(v34 + 29);
        long long v51 = *(_OWORD *)(v34 + 33);
        *(_OWORD *)(v2 + 64) = *(_OWORD *)(v34 + 31);
        *(_OWORD *)(v2 + 80) = v51;
        *(_OWORD *)(v2 + 32) = v49;
        *(_OWORD *)(v2 + 48) = v50;
        long long v52 = *(_OWORD *)(v34 + 35);
        long long v53 = *(_OWORD *)(v34 + 37);
        long long v54 = *(_OWORD *)(v34 + 39);
        *(unsigned char *)(v2 + 144) = *((unsigned char *)v34 + 328);
        *(_OWORD *)(v2 + 112) = v53;
        *(_OWORD *)(v2 + 128) = v54;
        *(_OWORD *)(v2 + 96) = v52;
        uint64_t v55 = v34 + 42;
        for (uint64_t i = v35 - 2; ; --i)
        {
          uint64_t v57 = v0[82];
          long long v58 = *(_OWORD *)(v2 + 112);
          long long v88 = *(_OWORD *)(v2 + 96);
          long long v89 = v58;
          long long v90 = *(_OWORD *)(v2 + 128);
          char v91 = *(unsigned char *)(v2 + 144);
          long long v59 = *(_OWORD *)(v2 + 48);
          long long v84 = *(_OWORD *)(v2 + 32);
          long long v85 = v59;
          long long v60 = *(_OWORD *)(v2 + 80);
          long long v86 = *(_OWORD *)(v2 + 64);
          long long v87 = v60;
          long long v61 = *(_OWORD *)(v2 + 16);
          long long v82 = *(_OWORD *)v2;
          long long v83 = v61;
          sub_54834(v2);
          sub_1B1324((uint64_t *)&v81, &v82, v57);
          sub_7A018(v2);
          if (!i) {
            break;
          }
          long long v62 = *((_OWORD *)v55 + 1);
          *(_OWORD *)uint64_t v2 = *(_OWORD *)v55;
          *(_OWORD *)(v2 + 16) = v62;
          long long v63 = *((_OWORD *)v55 + 2);
          long long v64 = *((_OWORD *)v55 + 3);
          long long v65 = *((_OWORD *)v55 + 5);
          *(_OWORD *)(v2 + 64) = *((_OWORD *)v55 + 4);
          *(_OWORD *)(v2 + 80) = v65;
          *(_OWORD *)(v2 + 32) = v63;
          *(_OWORD *)(v2 + 48) = v64;
          long long v66 = *((_OWORD *)v55 + 6);
          long long v67 = *((_OWORD *)v55 + 7);
          long long v68 = *((_OWORD *)v55 + 8);
          *(unsigned char *)(v2 + 144) = *((unsigned char *)v55 + 144);
          *(_OWORD *)(v2 + 112) = v67;
          *(_OWORD *)(v2 + 128) = v68;
          *(_OWORD *)(v2 + 96) = v66;
          v55 += 19;
        }
      }
      swift_bridgeObjectRelease_n();
      uint64_t v10 = 0;
      unint64_t v11 = v81;
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v3 = v0 + 75;
    }
    unint64_t v9 = v74;
    int64_t v1 = v75;
    uint64_t v4 = v0 + 78;
  }
  int64_t v15 = v13 + 3;
  if (v15 < v71)
  {
    unint64_t v14 = *(void *)(v70 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v1 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          goto LABEL_41;
        }
        if (v1 >= v71) {
          goto LABEL_37;
        }
        unint64_t v14 = *(void *)(v70 + 8 * v1);
        ++v15;
        if (v14) {
          goto LABEL_21;
        }
      }
    }
    int64_t v1 = v15;
    goto LABEL_21;
  }
LABEL_37:
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v69 = (void (*)(void *))v0[1];
  v69(v11);
}

uint64_t sub_1B0210()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

BOOL sub_1B0228(void *a1, void *a2)
{
  unint64_t v2 = a2[17];
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v34 = a1[11];
  uint64_t v29 = a1[13];
  uint64_t v30 = a1[12];
  uint64_t v28 = a1[14];
  unint64_t v33 = a1[17];
  uint64_t v27 = a1[15];
  uint64_t v3 = a2[11];
  uint64_t v4 = a2[12];
  uint64_t v5 = a2[13];
  uint64_t v6 = a2[14];
  uint64_t v8 = a2[15];
  uint64_t v7 = a2[16];
  uint64_t v24 = a1[16];
  if (v2 >> 62 == 3)
  {
    uint64_t v9 = a2[11];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    *(void *)(v9 + 48) = v5;
    *(void *)(v9 + 56) = v6;
    *(void *)(v9 + 64) = v8;
    *(void *)(v9 + 72) = v7;
    *(unsigned char *)(v9 + 80) = v2 & 1;
  }
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  uint64_t v13 = v8;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  uint64_t v16 = v12;
  sub_1244C();
  sub_1244C();
  double v26 = COERCE_DOUBLE(Array<A>.affinity.getter(v9));
  char v25 = v17;
  swift_bridgeObjectRelease();
  sub_1255C(v3, v14, v15, v16, v13, v7, v2);
  if (v33 >> 1 == 0xFFFFFFFF)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x1B055CLL);
  }
  if (v33 >> 62 == 3)
  {
    uint64_t v18 = v34;
    uint64_t v19 = v24;
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1FD2A0;
    *(void *)(v18 + 32) = v34;
    *(void *)(v18 + 40) = v30;
    *(void *)(v18 + 48) = v29;
    *(void *)(v18 + 56) = v28;
    uint64_t v19 = v24;
    *(void *)(v18 + 64) = v27;
    *(void *)(v18 + 72) = v24;
    *(unsigned char *)(v18 + 80) = v33 & 1;
  }
  if (v25) {
    double v20 = 0.0;
  }
  else {
    double v20 = v26;
  }
  sub_1244C();
  sub_1244C();
  uint64_t v32 = Array<A>.affinity.getter(v18);
  char v31 = v21;
  swift_bridgeObjectRelease();
  sub_1255C(v34, v30, v29, v28, v27, v19, v33);
  double v22 = *(double *)&v32;
  if (v31) {
    double v22 = 0.0;
  }
  return v20 < v22;
}

uint64_t sub_1B057C@<X0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, uint64_t a4@<X3>, char a5@<W4>, void *a6@<X8>)
{
  char v6 = a5;
  uint64_t v7 = a6;
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v9 = _swiftEmptyArrayStorage;
  if (v8)
  {
    char v11 = *a3;
    swift_bridgeObjectRetain();
    uint64_t v12 = 32;
    uint64_t v13 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v14 = v9;
      uint64_t v15 = *(void *)(a1 + v12);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        uint64_t v13 = sub_41CBC(0, v13[2] + 1, 1, v13);
      }
      unint64_t v17 = v13[2];
      unint64_t v16 = v13[3];
      if (v17 >= v16 >> 1) {
        uint64_t v13 = sub_41CBC((void *)(v16 > 1), v17 + 1, 1, v13);
      }
      v13[2] = v17 + 1;
      uint64_t v18 = &v13[10 * v17];
      v18[4] = v15;
      *((unsigned char *)v18 + 40) = v11;
      v18[6] = 0;
      *((unsigned char *)v18 + 56) = 1;
      v18[8] = 0;
      *((unsigned char *)v18 + 72) = -1;
      uint64_t v9 = v14;
      v18[10] = v14;
      v18[11] = 0;
      v18[12] = 0;
      v18[13] = 0x3FF0000000000000;
      v12 += 560;
      --v8;
    }
    while (v8);
    swift_bridgeObjectRelease();
    uint64_t v7 = a6;
    char v6 = a5;
    uint64_t v19 = v13[2];
    if (v19) {
      goto LABEL_9;
    }
  }
  else
  {
    uint64_t v13 = _swiftEmptyArrayStorage;
    uint64_t v19 = _swiftEmptyArrayStorage[2];
    if (v19)
    {
LABEL_9:
      uint64_t result = swift_bridgeObjectRetain();
      char v21 = (double *)(v13 + 13);
      double v22 = _swiftEmptyArrayStorage;
      char v23 = v6 & 1;
      while (1)
      {
        double v26 = *v21;
        if (*v21 >= 0.0 && v26 <= 1.0)
        {
          uint64_t v28 = *((void *)v21 - 9);
          if (v28 < 0)
          {
            __break(1u);
            return result;
          }
          uint64_t result = swift_isUniquelyReferenced_nonNull_native();
          if ((result & 1) == 0)
          {
            uint64_t result = (uint64_t)sub_42150(0, v22[2] + 1, 1, v22);
            double v22 = (void *)result;
          }
          unint64_t v30 = v22[2];
          unint64_t v29 = v22[3];
          if (v30 >= v29 >> 1)
          {
            uint64_t result = (uint64_t)sub_42150((void *)(v29 > 1), v30 + 1, 1, v22);
            double v22 = (void *)result;
          }
          void v22[2] = v30 + 1;
          uint64_t v24 = (float *)&v22[4 * v30];
          *((void *)v24 + 4) = v28;
          float v25 = v26;
          v24[10] = v25;
          *((void *)v24 + 6) = a4;
          *((unsigned char *)v24 + 56) = v23;
        }
        v21 += 10;
        if (!--v19)
        {
          swift_bridgeObjectRelease();
          goto LABEL_24;
        }
      }
    }
  }
  double v22 = _swiftEmptyArrayStorage;
LABEL_24:
  uint64_t result = swift_bridgeObjectRelease();
  if (v22[2])
  {
    uint64_t v31 = a2 & 1;
  }
  else
  {
    uint64_t result = swift_bridgeObjectRelease();
    uint64_t v31 = 0;
    double v22 = 0;
  }
  *uint64_t v7 = v31;
  v7[1] = v22;
  return result;
}

uint64_t sub_1B07DC(uint64_t *a1, uint64_t a2)
{
  uint64_t v57 = sub_1FB110();
  uint64_t v4 = *(void (***)(char *, uint64_t, uint64_t))(v57 - 8);
  uint64_t v5 = __chkstk_darwin(v57);
  unint64_t v56 = (char *)&v50 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v55 = (uint64_t)&v50 - v7;
  uint64_t v8 = *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 20);
  uint64_t v58 = a2;
  uint64_t v9 = *(void *)(a2 + v8);
  int64_t v10 = *(void *)(v9 + 16);
  char v11 = _swiftEmptyArrayStorage;
  if (!v10)
  {
LABEL_11:
    uint64_t v54 = v11[2];
    if (!v54) {
      return swift_bridgeObjectRelease();
    }
    uint64_t v23 = 0;
    long long v51 = (void (**)(uint64_t, uint64_t))(v4 + 1);
    long long v52 = v4 + 2;
    while (1)
    {
      float v25 = v11;
      uint64_t v26 = v11[v23 + 4];
      uint64_t v27 = *a1;
      if (*(void *)(*a1 + 16) && (uint64_t v28 = sub_56168(v26), (v29 & 1) != 0))
      {
        long long v60 = *(void **)(*(void *)(v27 + 56) + 8 * v28);
        swift_bridgeObjectRetain();
      }
      else
      {
        long long v60 = _swiftEmptySetSingleton;
      }
      uint64_t v31 = v56;
      uint64_t v30 = v57;
      (*v52)(v56, v58, v57);
      uint64_t v32 = v55;
      sub_8B0C(v55, v31);
      (*v51)(v32, v30);
      unint64_t v33 = v60;
      char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      long long v59 = (void *)*a1;
      uint64_t v35 = v59;
      *a1 = 0x8000000000000000;
      unint64_t v37 = sub_56168(v26);
      uint64_t v38 = v35[2];
      BOOL v39 = (v36 & 1) == 0;
      uint64_t v40 = v38 + v39;
      if (__OFADD__(v38, v39)) {
        goto LABEL_34;
      }
      char v41 = v36;
      if (v35[3] >= v40)
      {
        if (isUniquelyReferenced_nonNull_native)
        {
          long long v44 = v59;
          if (v36) {
            goto LABEL_13;
          }
        }
        else
        {
          sub_123A44();
          long long v44 = v59;
          if (v41) {
            goto LABEL_13;
          }
        }
      }
      else
      {
        sub_11DFD0(v40, isUniquelyReferenced_nonNull_native);
        uint64_t v42 = sub_56168(v26);
        if ((v41 & 1) != (v43 & 1)) {
          goto LABEL_36;
        }
        unint64_t v37 = v42;
        long long v44 = v59;
        if (v41)
        {
LABEL_13:
          uint64_t v24 = v44[7];
          swift_bridgeObjectRelease();
          *(void *)(v24 + 8 * v37) = v33;
          goto LABEL_14;
        }
      }
      v44[(v37 >> 6) + 8] |= 1 << v37;
      uint64_t v45 = 8 * v37;
      *(void *)(v44[6] + v45) = v26;
      *(void *)(v44[7] + v45) = v33;
      uint64_t v46 = v44[2];
      BOOL v47 = __OFADD__(v46, 1);
      uint64_t v48 = v46 + 1;
      if (v47) {
        goto LABEL_35;
      }
      _OWORD v44[2] = v48;
LABEL_14:
      ++v23;
      *a1 = (uint64_t)v44;
      swift_bridgeObjectRelease();
      char v11 = v25;
      if (v54 == v23) {
        return swift_bridgeObjectRelease();
      }
    }
  }
  long long v52 = v4;
  long long v60 = _swiftEmptyArrayStorage;
  swift_bridgeObjectRetain();
  sub_46538(0, v10, 0);
  char v11 = v60;
  uint64_t v12 = sub_14D538(v9);
  uint64_t v14 = v13;
  char v16 = v15 & 1;
  long long v53 = a1;
  uint64_t v54 = v9 + 56;
  while ((v12 & 0x8000000000000000) == 0 && v12 < 1 << *(unsigned char *)(v9 + 32))
  {
    if (((*(void *)(v54 + (((unint64_t)v12 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v12) & 1) == 0) {
      goto LABEL_32;
    }
    if (*(_DWORD *)(v9 + 36) != v14) {
      goto LABEL_33;
    }
    uint64_t v17 = *(void *)(*(void *)(v9 + 48) + 560 * v12);
    long long v60 = v11;
    unint64_t v19 = v11[2];
    unint64_t v18 = v11[3];
    if (v19 >= v18 >> 1)
    {
      sub_46538(v18 > 1, v19 + 1, 1);
      char v11 = v60;
    }
    long long v11[2] = v19 + 1;
    v11[v19 + 4] = v17;
    uint64_t v20 = sub_14D5DC(v12, v14, v16 & 1, v9);
    uint64_t v12 = v20;
    uint64_t v14 = v21;
    char v16 = v22 & 1;
    --v10;
    a1 = v53;
    if (!v10)
    {
      sub_55F94(v20, v21, v22 & 1);
      swift_bridgeObjectRelease();
      uint64_t v4 = v52;
      goto LABEL_11;
    }
  }
  __break(1u);
LABEL_32:
  __break(1u);
LABEL_33:
  __break(1u);
LABEL_34:
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_1B0C14(uint64_t *a1)
{
  uint64_t v3 = *a1;
  *(void *)(v2 + 24) = v1;
  *(void *)(v2 + 32) = v3;
  *(_OWORD *)(v2 + 40) = *(_OWORD *)(a1 + 1);
  *(_OWORD *)(v2 + 56) = *(_OWORD *)(a1 + 3);
  *(_OWORD *)(v2 + 72) = *(_OWORD *)(a1 + 5);
  *(void *)(v2 + 88) = a1[7];
  return _swift_task_switch(sub_1B0C58, 0, 0);
}

uint64_t sub_1B0C58()
{
  float v25 = v0;
  uint64_t v2 = v0[10];
  uint64_t v1 = v0[11];
  uint64_t v4 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v5 = v0[6];
  uint64_t v6 = v0[7];
  uint64_t v8 = v0[4];
  uint64_t v7 = v0[5];
  char v22 = sub_1CBB6C();
  uint64_t v21 = sub_1CB2E4();
  v24[0] = v8;
  v24[1] = v7;
  v24[2] = v5;
  v24[3] = v6;
  v24[4] = v4;
  v24[5] = v3;
  v24[6] = v2;
  v24[7] = v1;
  uint64_t v9 = sub_1CBDC0();
  uint64_t v10 = swift_task_alloc();
  *(void *)(v10 + 16) = v21;
  *(void *)(v10 + 24) = v9;
  uint64_t v11 = sub_1B3F54((uint64_t)v22, (void *(*)(long long *__return_ptr, void, double))sub_1B43F0);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v12 = sub_1AC4FC(v11);
  if (v12[2])
  {
    sub_12124(&qword_2703E8);
    uint64_t v13 = (void *)sub_1FC2A0();
  }
  else
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
  }
  v24[0] = v13;
  sub_1B41C0((uint64_t)v12, 1, v24);
  uint64_t v14 = (void *)v0[3];
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v15 = v24[0];
  v0[12] = v24[0];
  char v16 = v14 + 15;
  uint64_t v17 = v14[18];
  uint64_t v18 = v14[19];
  sub_5D64(v16, v17);
  uint64_t v23 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v18 + 8) + **(int **)(v18 + 8));
  unint64_t v19 = (void *)swift_task_alloc();
  v0[13] = v19;
  *unint64_t v19 = v0;
  v19[1] = sub_1B0EF0;
  return v23(v15, v17, v18);
}

uint64_t sub_1B0EF0()
{
  *(void *)(*(void *)v1 + 112) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1B1068;
  }
  else {
    uint64_t v2 = sub_1B1004;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1B1004()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1B1068()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

double sub_1B10CC@<D0>(uint64_t *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v10 = *a1;
  char v35 = *((unsigned char *)a1 + 8);
  uint64_t v34 = a1[2];
  char v33 = *((unsigned char *)a1 + 24);
  uint64_t v11 = a1[4];
  char v12 = *((unsigned char *)a1 + 40);
  uint64_t v13 = a1[8];
  uint64_t v31 = a1[7];
  uint64_t v32 = a1[6];
  uint64_t v14 = a1[9];
  uint64_t v36 = *a1;
  if (!*(void *)(a2 + 16))
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
    if (*(void *)(a3 + 16)) {
      goto LABEL_10;
    }
LABEL_5:
    unint64_t v19 = _swiftEmptyArrayStorage;
    if (*(void *)(a4 + 16)) {
      goto LABEL_14;
    }
    goto LABEL_6;
  }
  uint64_t v16 = sub_56168(v10);
  if (v17)
  {
    uint64_t v18 = *(void **)(*(void *)(a2 + 56) + 8 * v16);
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v18 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v36;
  if (!*(void *)(a3 + 16)) {
    goto LABEL_5;
  }
LABEL_10:
  uint64_t v20 = sub_56168(v10);
  if (v21)
  {
    unint64_t v19 = *(void **)(*(void *)(a3 + 56) + 8 * v20);
    swift_bridgeObjectRetain();
  }
  else
  {
    unint64_t v19 = _swiftEmptyArrayStorage;
  }
  uint64_t v10 = v36;
  if (*(void *)(a4 + 16))
  {
LABEL_14:
    uint64_t v22 = sub_56168(v10);
    if (v23)
    {
      uint64_t v30 = *(void **)(*(void *)(a4 + 56) + 8 * v22);
      swift_bridgeObjectRetain();
    }
    else
    {
      uint64_t v30 = _swiftEmptySetSingleton;
    }
    uint64_t v10 = v36;
    if (!*(void *)(a5 + 16)) {
      goto LABEL_20;
    }
    goto LABEL_18;
  }
LABEL_6:
  uint64_t v30 = _swiftEmptySetSingleton;
  if (!*(void *)(a5 + 16)) {
    goto LABEL_20;
  }
LABEL_18:
  uint64_t v24 = sub_56168(v10);
  if ((v25 & 1) == 0)
  {
LABEL_20:
    uint64_t v26 = _swiftEmptySetSingleton;
    goto LABEL_21;
  }
  uint64_t v26 = *(void **)(*(void *)(a5 + 56) + 8 * v24);
  swift_bridgeObjectRetain();
LABEL_21:
  sub_5480C(v11, v12);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v27 = sub_50A6C((uint64_t)v18);
  swift_bridgeObjectRelease();
  uint64_t v28 = sub_50A6C((uint64_t)v19);
  swift_bridgeObjectRelease();
  *(void *)a6 = v36;
  *(unsigned char *)(a6 + 8) = v35;
  *(void *)(a6 + 16) = v34;
  *(unsigned char *)(a6 + 24) = v33;
  *(void *)(a6 + 32) = v11;
  *(unsigned char *)(a6 + 40) = v12;
  *(void *)(a6 + 48) = v32;
  *(void *)(a6 + 56) = v31;
  *(void *)(a6 + 64) = v13;
  *(void *)(a6 + 72) = v14;
  *(void *)(a6 + 80) = v27;
  *(void *)(a6 + 88) = v28;
  *(void *)(a6 + 96) = v30;
  *(void *)(a6 + 104) = v26;
  *(void *)(a6 + 112) = 0;
  *(void *)(a6 + 120) = 0;
  *(void *)&double result = 2;
  *(_OWORD *)(a6 + 128) = xmmword_202AA0;
  *(unsigned char *)(a6 + 144) = 0;
  return result;
}

uint64_t sub_1B1324(uint64_t *a1, long long *a2, uint64_t a3)
{
  uint64_t v7 = sub_1FB110();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v74 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v100 = (char *)&v74 - v12;
  uint64_t v13 = sub_12124(&qword_273108);
  uint64_t result = __chkstk_darwin(v13 - 8);
  long long v88 = (char *)&v74 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v16 = a2[7];
  long long v96 = a2[6];
  long long v97 = v16;
  long long v98 = a2[8];
  char v99 = *((unsigned char *)a2 + 144);
  long long v17 = a2[3];
  long long v92 = a2[2];
  long long v93 = v17;
  long long v18 = a2[5];
  long long v94 = a2[4];
  long long v95 = v18;
  long long v19 = a2[1];
  long long v90 = *a2;
  long long v91 = v19;
  uint64_t v20 = v94;
  if (!(void)v94) {
    return result;
  }
  uint64_t result = sub_12274(v94);
  if (v22) {
    goto LABEL_57;
  }
  if (*(_DWORD *)(v20 + 36) != v21)
  {
    __break(1u);
LABEL_53:
    __break(1u);
LABEL_54:
    __break(1u);
LABEL_55:
    __break(1u);
LABEL_56:
    __break(1u);
LABEL_57:
    __break(1u);
LABEL_58:
    uint64_t result = sub_1FC770();
    __break(1u);
    return result;
  }
  if (result != 1 << *(unsigned char *)(v20 + 32))
  {
    uint64_t result = (uint64_t)sub_11CE4(&v89);
    if (*(void *)(v20 + 16))
    {
      uint64_t result = sub_4C744((char)v89);
      if (v23)
      {
        uint64_t v24 = *(void *)(*(void *)(v20 + 56) + 8 * result);
        if (*(void *)(v24 + 16))
        {
          if (*(void *)(a3 + 16))
          {
            uint64_t result = sub_56168(*(void *)(v24 + 32));
            if (v25)
            {
              uint64_t v26 = *(void *)(*(void *)(a3 + 56) + 8 * result);
              uint64_t v27 = *(void *)(v26 + 56);
              uint64_t v75 = v26 + 56;
              uint64_t v28 = 1 << *(unsigned char *)(v26 + 32);
              uint64_t v29 = -1;
              if (v28 < 64) {
                uint64_t v29 = ~(-1 << v28);
              }
              unint64_t v30 = v29 & v27;
              int64_t v76 = (unint64_t)(v28 + 63) >> 6;
              uint64_t v87 = v8 + 16;
              long long v82 = (void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56);
              uint64_t v81 = v8 + 48;
              uint64_t v80 = (void (**)(char *, char *, uint64_t))(v8 + 32);
              uint64_t v78 = (void (**)(uint64_t, uint64_t))(v8 + 8);
              uint64_t v83 = v26;
              swift_bridgeObjectRetain();
              int64_t v31 = 0;
              uint64_t v77 = v3;
              uint64_t v79 = v8;
              long long v86 = v11;
              uint64_t v32 = v88;
              while (1)
              {
                if (v30)
                {
                  uint64_t v85 = (v30 - 1) & v30;
                  unint64_t v36 = __clz(__rbit64(v30)) | (v31 << 6);
                }
                else
                {
                  int64_t v37 = v31 + 1;
                  if (__OFADD__(v31, 1)) {
                    goto LABEL_55;
                  }
                  if (v37 >= v76)
                  {
LABEL_49:
                    (*v82)(v32, 1, 1, v7);
                    return swift_release();
                  }
                  unint64_t v38 = *(void *)(v75 + 8 * v37);
                  ++v31;
                  if (!v38)
                  {
                    int64_t v31 = v37 + 1;
                    if (v37 + 1 >= v76) {
                      goto LABEL_49;
                    }
                    unint64_t v38 = *(void *)(v75 + 8 * v31);
                    if (!v38)
                    {
                      int64_t v31 = v37 + 2;
                      if (v37 + 2 >= v76) {
                        goto LABEL_49;
                      }
                      unint64_t v38 = *(void *)(v75 + 8 * v31);
                      if (!v38)
                      {
                        int64_t v39 = v37 + 3;
                        if (v39 >= v76) {
                          goto LABEL_49;
                        }
                        unint64_t v38 = *(void *)(v75 + 8 * v39);
                        if (!v38)
                        {
                          while (1)
                          {
                            int64_t v31 = v39 + 1;
                            if (__OFADD__(v39, 1)) {
                              goto LABEL_56;
                            }
                            if (v31 >= v76) {
                              goto LABEL_49;
                            }
                            unint64_t v38 = *(void *)(v75 + 8 * v31);
                            ++v39;
                            if (v38) {
                              goto LABEL_30;
                            }
                          }
                        }
                        int64_t v31 = v39;
                      }
                    }
                  }
LABEL_30:
                  uint64_t v85 = (v38 - 1) & v38;
                  unint64_t v36 = __clz(__rbit64(v38)) + (v31 << 6);
                }
                uint64_t v40 = *(void *)(v8 + 72);
                char v41 = *(void (**)(char *, unint64_t, uint64_t))(v8 + 16);
                v41(v32, *(void *)(v83 + 48) + v40 * v36, v7);
                (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v32, 0, 1, v7);
                if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v32, 1, v7) == 1) {
                  return swift_release();
                }
                int64_t v84 = v31;
                uint64_t v42 = (uint64_t)v100;
                (*v80)(v100, v32, v7);
                uint64_t v43 = *a1;
                if (*(void *)(*a1 + 16))
                {
                  unint64_t v44 = sub_4C9C4(v42);
                  uint64_t v45 = _swiftEmptyArrayStorage;
                  if (v46)
                  {
                    uint64_t v45 = *(void **)(*(void *)(v43 + 56) + 8 * v44);
                    swift_bridgeObjectRetain();
                  }
                }
                else
                {
                  uint64_t v45 = _swiftEmptyArrayStorage;
                }
                sub_54834((uint64_t)&v90);
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v45 = sub_41DE0(0, v45[2] + 1, 1, v45);
                }
                unint64_t v48 = v45[2];
                unint64_t v47 = v45[3];
                if (v48 >= v47 >> 1) {
                  uint64_t v45 = sub_41DE0((void *)(v47 > 1), v48 + 1, 1, v45);
                }
                v45[2] = v48 + 1;
                long long v49 = &v45[19 * v48];
                long long v50 = v91;
                *((_OWORD *)v49 + 2) = v90;
                *((_OWORD *)v49 + 3) = v50;
                long long v51 = v92;
                long long v52 = v93;
                long long v53 = v95;
                *((_OWORD *)v49 + 6) = v94;
                *((_OWORD *)v49 + 7) = v53;
                *((_OWORD *)v49 + 4) = v51;
                *((_OWORD *)v49 + 5) = v52;
                long long v54 = v96;
                long long v55 = v97;
                long long v56 = v98;
                *((unsigned char *)v49 + 176) = v99;
                *((_OWORD *)v49 + 9) = v55;
                *((_OWORD *)v49 + 10) = v56;
                *((_OWORD *)v49 + 8) = v54;
                uint64_t v57 = (uint64_t)v86;
                v41(v86, v42, v7);
                int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                long long v89 = (void *)*a1;
                long long v59 = v89;
                long long v60 = a1;
                *a1 = 0x8000000000000000;
                unint64_t v62 = sub_4C9C4(v57);
                uint64_t v63 = v59[2];
                BOOL v64 = (v61 & 1) == 0;
                uint64_t v65 = v63 + v64;
                if (__OFADD__(v63, v64)) {
                  goto LABEL_53;
                }
                char v66 = v61;
                if (v59[3] >= v65)
                {
                  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
                    sub_1212EC();
                  }
                }
                else
                {
                  sub_118B9C(v65, isUniquelyReferenced_nonNull_native);
                  unint64_t v67 = sub_4C9C4((uint64_t)v86);
                  if ((v66 & 1) != (v68 & 1)) {
                    goto LABEL_58;
                  }
                  unint64_t v62 = v67;
                }
                uint64_t v69 = v89;
                if (v66)
                {
                  uint64_t v33 = v89[7];
                  swift_bridgeObjectRelease();
                  *(void *)(v33 + 8 * v62) = v45;
                  a1 = v60;
                  uint64_t v34 = (uint64_t)v86;
                }
                else
                {
                  v89[(v62 >> 6) + 8] |= 1 << v62;
                  unint64_t v70 = v69[6] + v62 * v40;
                  uint64_t v34 = (uint64_t)v86;
                  v41((char *)v70, (unint64_t)v86, v7);
                  *(void *)(v69[7] + 8 * v62) = v45;
                  uint64_t v71 = v69[2];
                  BOOL v72 = __OFADD__(v71, 1);
                  uint64_t v73 = v71 + 1;
                  if (v72) {
                    goto LABEL_54;
                  }
                  v69[2] = v73;
                  a1 = v60;
                }
                uint64_t v32 = v88;
                unint64_t v30 = v85;
                *a1 = (uint64_t)v69;
                swift_bridgeObjectRelease();
                char v35 = *v78;
                (*v78)(v34, v7);
                v35((uint64_t)v100, v7);
                uint64_t v8 = v79;
                int64_t v31 = v84;
              }
            }
          }
        }
      }
    }
  }
  return result;
}

double sub_1B1A9C@<D0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>, double a5@<D0>)
{
  if (*(void *)(a2 + 16)
    && (uint64_t v10 = sub_56168(a1), (v11 & 1) != 0)
    && *(void *)(a3 + 16)
    && (uint64_t v12 = *(void *)(*(void *)(a2 + 56) + 8 * v10), v13 = sub_56168(a1), (v14 & 1) != 0))
  {
    uint64_t v15 = (uint64_t *)(*(void *)(a3 + 56) + 16 * v13);
    uint64_t v16 = *v15;
    uint64_t v17 = v15[1];
    *(void *)a4 = a1;
    *(double *)(a4 + 8) = a5;
    *(void *)(a4 + 16) = 0;
    *(void *)(a4 + 24) = v12;
    *(void *)(a4 + 32) = v16;
    *(void *)(a4 + 40) = v17;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    double result = 0.0;
    *(_OWORD *)(a4 + 16) = 0u;
    *(_OWORD *)(a4 + 32) = 0u;
    *(_OWORD *)a4 = 0u;
  }
  return result;
}

uint64_t sub_1B1B70()
{
  uint64_t v1 = *(void *)(v0 + 32);
  sub_52958(*(void *)(v0 + 16));
  sub_52958(v1);
  sub_B8190(*(void *)(v0 + 48), *(void *)(v0 + 56), *(unsigned char *)(v0 + 64));
  sub_1264C(v0 + 72);
  swift_release();
  sub_1264C(v0 + 120);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2()
{
  return self;
}

uint64_t sub_1B1C10(uint64_t a1, const void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_B06F4;
  return sub_1AC794(a1, a2);
}

void sub_1B1CB8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  if (a2 != 1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_12A24C(a5, a6);
  }
}

Swift::Int sub_1B1D34(uint64_t *a1)
{
  Swift::Int v3 = a1[1];
  Swift::Int result = sub_1FC570(v3);
  if (result >= v3)
  {
    if (v3 < 0) {
      goto LABEL_210;
    }
    if (v3) {
      return sub_5D8DC(0, v3, 1, a1);
    }
    return result;
  }
  Swift::Int v196 = result;
  if (v3 >= 0) {
    uint64_t v5 = v3;
  }
  else {
    uint64_t v5 = v3 + 1;
  }
  if (v3 < -1) {
    goto LABEL_222;
  }
  Swift::Int v200 = v3;
  double v194 = a1;
  if (v3 < 2)
  {
    Swift::Int v201 = (char *)&_swiftEmptyArrayStorage[4];
    unint64_t v195 = _swiftEmptyArrayStorage;
    if (v3 != 1)
    {
      unint64_t v135 = _swiftEmptyArrayStorage[2];
      uint64_t v10 = (char *)_swiftEmptyArrayStorage;
LABEL_175:
      if (v135 >= 2)
      {
        uint64_t v186 = *v194;
        do
        {
          unint64_t v187 = v135 - 2;
          if (v135 < 2) {
            goto LABEL_204;
          }
          if (!v186) {
            goto LABEL_221;
          }
          long long v188 = v10;
          uint64_t v189 = *(void *)&v10[16 * v187 + 32];
          uint64_t v190 = *(void *)&v10[16 * v135 + 24];
          sub_1B30B4((char *)(v186 + 560 * v189), (char *)(v186 + 560 * *(void *)&v10[16 * v135 + 16]), v186 + 560 * v190, v201);
          if (v1) {
            break;
          }
          if (v190 < v189) {
            goto LABEL_206;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            long long v188 = sub_70B24((uint64_t)v188);
          }
          if (v187 >= *((void *)v188 + 2)) {
            goto LABEL_207;
          }
          long long v191 = &v188[16 * v187 + 32];
          *(void *)long long v191 = v189;
          *((void *)v191 + 1) = v190;
          unint64_t v192 = *((void *)v188 + 2);
          if (v135 > v192) {
            goto LABEL_208;
          }
          memmove(&v188[16 * v135 + 16], &v188[16 * v135 + 32], 16 * (v192 - v135));
          uint64_t v10 = v188;
          *((void *)v188 + 2) = v192 - 1;
          unint64_t v135 = v192 - 1;
        }
        while (v192 > 2);
      }
LABEL_186:
      swift_bridgeObjectRelease();
      v195[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v6 = v5 >> 1;
    uint64_t v7 = sub_1FBB40();
    *(void *)(v7 + 16) = v6;
    unint64_t v195 = (void *)v7;
    Swift::Int v201 = (char *)(v7 + 32);
  }
  Swift::Int v8 = 0;
  uint64_t v9 = *a1;
  Swift::Int v198 = v3 - 1;
  uint64_t v193 = *a1 - 560;
  uint64_t v10 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v11 = v3;
  uint64_t v206 = *a1;
  while (1)
  {
    uint64_t v197 = v10;
    Swift::Int v12 = v8 + 1;
    Swift::Int v205 = v8;
    if (v8 + 1 >= v11)
    {
      Swift::Int v14 = v8 + 1;
      goto LABEL_69;
    }
    Swift::Int v13 = v8;
    memcpy(__dst, (const void *)(v9 + 560 * v12), 0x229uLL);
    memcpy(__src, (const void *)(v9 + 560 * v12), 0x229uLL);
    memcpy(v237, (const void *)(v9 + 560 * v13), 0x229uLL);
    memcpy(v234, (const void *)(v9 + 560 * v13), 0x229uLL);
    sub_12384(__dst);
    sub_12384(v237);
    BOOL v207 = sub_1B0228(__src, v234);
    if (v1)
    {
      sub_124B4(v237);
      sub_124B4(__dst);
      goto LABEL_186;
    }
    sub_124B4(v237);
    sub_124B4(__dst);
    Swift::Int v14 = v13 + 2;
    Swift::Int v11 = v200;
    if (v13 + 2 < v200) {
      break;
    }
LABEL_59:
    if (v207) {
      goto LABEL_60;
    }
LABEL_69:
    if (v14 < v11)
    {
      if (__OFSUB__(v14, v205)) {
        goto LABEL_209;
      }
      if (v14 - v205 < v196)
      {
        Swift::Int v73 = v205 + v196;
        if (__OFADD__(v205, v196)) {
          goto LABEL_211;
        }
        if (v73 >= v11) {
          Swift::Int v73 = v11;
        }
        if (v73 < v205)
        {
LABEL_212:
          __break(1u);
          goto LABEL_213;
        }
        Swift::Int v199 = v73;
        if (v14 != v73)
        {
LABEL_79:
          Swift::Int v203 = v14;
          Swift::Int v74 = v14;
          while (1)
          {
            uint64_t v75 = (char *)(v9 + 560 * v74);
            memcpy(__dst, v75, 0x229uLL);
            memcpy(v237, v75 - 560, 0x229uLL);
            unint64_t v76 = v237[17];
            if ((unint64_t)v237[17] >> 1 == 0xFFFFFFFF) {
              goto LABEL_214;
            }
            uint64_t v77 = v237[11];
            uint64_t v78 = v237[13];
            uint64_t v79 = v237[14];
            uint64_t v80 = v237[15];
            uint64_t v81 = v237[16];
            uint64_t v219 = v237[15];
            uint64_t v221 = v237[14];
            Swift::Int v215 = v74;
            uint64_t v217 = v237[16];
            uint64_t v210 = v75 - 560;
            uint64_t v212 = v75;
            if ((unint64_t)v237[17] >> 62 == 3)
            {
              uint64_t v82 = *(void *)(v237[11] + 16);
              if (!v82)
              {
                uint64_t v92 = v237[11];
                uint64_t v99 = v237[12];
                uint64_t v94 = v237[13];
                uint64_t v100 = v237[16];
                sub_12430(v237[11], v237[12], v237[13], v237[14], v237[15], v237[16], v237[17]);
                uint64_t v101 = v100;
                uint64_t v93 = v99;
                sub_12430(v92, v99, v94, v221, v80, v101, v76);
                sub_12384(__dst);
                sub_12384(v237);
                uint64_t v87 = _swiftEmptyArrayStorage;
                uint64_t v95 = _swiftEmptyArrayStorage[2];
                if (!v95) {
                  goto LABEL_98;
                }
                goto LABEL_94;
              }
              uint64_t v83 = v237[11];
              uint64_t v84 = v237[13];
              uint64_t v85 = v237[12];
            }
            else
            {
              uint64_t v85 = v237[12];
              sub_12124(&qword_26D5D8);
              uint64_t v81 = v217;
              uint64_t v80 = v219;
              uint64_t v79 = v221;
              uint64_t v83 = swift_allocObject();
              *(_OWORD *)(v83 + 16) = xmmword_1FD2A0;
              *(void *)(v83 + 32) = v77;
              *(void *)(v83 + 40) = v85;
              *(void *)(v83 + 48) = v78;
              *(void *)(v83 + 56) = v221;
              *(void *)(v83 + 64) = v219;
              *(void *)(v83 + 72) = v217;
              uint64_t v84 = v78;
              uint64_t v82 = 1;
              *(unsigned char *)(v83 + 80) = v76 & 1;
            }
            sub_12430(v77, v85, v84, v79, v80, v81, v76);
            uint64_t v230 = v77;
            uint64_t v226 = v84;
            sub_12430(v77, v85, v84, v79, v80, v81, v76);
            sub_12384(__dst);
            sub_12384(v237);
            swift_bridgeObjectRetain();
            long long v86 = (double *)(v83 + 80);
            uint64_t v87 = _swiftEmptyArrayStorage;
            do
            {
              if ((*(unsigned char *)v86 & 1) == 0)
              {
                double v88 = *(v86 - 2);
                double v89 = exp2(-*(v86 - 1) / *(v86 - 3));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v87 = sub_41BAC(0, v87[2] + 1, 1, v87);
                }
                unint64_t v91 = v87[2];
                unint64_t v90 = v87[3];
                if (v91 >= v90 >> 1) {
                  uint64_t v87 = sub_41BAC((void *)(v90 > 1), v91 + 1, 1, v87);
                }
                v87[2] = v91 + 1;
                *(double *)&v87[v91 + 4] = v88 * v89;
              }
              v86 += 7;
              --v82;
            }
            while (v82);
            swift_bridgeObjectRelease();
            uint64_t v93 = v85;
            uint64_t v92 = v230;
            uint64_t v94 = v226;
            uint64_t v95 = v87[2];
            if (!v95)
            {
LABEL_98:
              swift_bridgeObjectRelease();
              double v97 = 0.0;
              goto LABEL_99;
            }
LABEL_94:
            long long v96 = (double *)(v87 + 4);
            double v97 = 0.0;
            do
            {
              double v98 = *v96++;
              double v97 = v97 + v98;
              --v95;
            }
            while (v95);
            swift_bridgeObjectRelease();
LABEL_99:
            swift_bridgeObjectRelease();
            uint64_t v102 = __dst[11];
            uint64_t v103 = __dst[12];
            uint64_t v224 = __dst[13];
            uint64_t v227 = __dst[14];
            uint64_t v104 = __dst[16];
            unint64_t v105 = __dst[17];
            uint64_t v231 = __dst[15];
            sub_1255C(v92, v93, v94, v221, v219, v217, v76);
            if (v105 >> 1 == 0xFFFFFFFF) {
              goto LABEL_215;
            }
            uint64_t v214 = v103;
            if (v105 >> 62 == 3)
            {
              uint64_t v106 = *(void *)(v102 + 16);
              if (!v106)
              {
                uint64_t v127 = v227;
                uint64_t v126 = v224;
                uint64_t v128 = v231;
                sub_12430(v102, v103, v224, v227, v231, v104, v105);
                sub_12430(v102, v103, v224, v227, v231, v104, v105);
                uint64_t v121 = _swiftEmptyArrayStorage;
                uint64_t v129 = _swiftEmptyArrayStorage[2];
                if (v129) {
                  goto LABEL_113;
                }
                goto LABEL_117;
              }
              uint64_t v107 = v102;
              uint64_t v109 = v224;
              uint64_t v108 = v227;
              uint64_t v110 = v103;
              uint64_t v111 = v102;
              unint64_t v112 = v105;
              uint64_t v113 = v104;
              uint64_t v114 = v231;
            }
            else
            {
              sub_12124(&qword_26D5D8);
              uint64_t v107 = swift_allocObject();
              *(_OWORD *)(v107 + 16) = xmmword_1FD2A0;
              *(void *)(v107 + 32) = v102;
              *(void *)(v107 + 40) = v103;
              uint64_t v109 = v224;
              uint64_t v108 = v227;
              *(void *)(v107 + 48) = v224;
              *(void *)(v107 + 56) = v227;
              uint64_t v110 = v103;
              uint64_t v111 = v102;
              unint64_t v112 = v105;
              uint64_t v113 = v104;
              uint64_t v114 = v231;
              *(void *)(v107 + 64) = v231;
              *(void *)(v107 + 72) = v104;
              uint64_t v106 = 1;
              *(unsigned char *)(v107 + 80) = v105 & 1;
            }
            uint64_t v115 = v111;
            uint64_t v116 = v110;
            uint64_t v117 = v114;
            uint64_t v208 = v113;
            unint64_t v118 = v112;
            sub_12430(v111, v110, v109, v108, v117, v113, v112);
            uint64_t v119 = v116;
            uint64_t v104 = v208;
            unint64_t v222 = v118;
            sub_12430(v115, v119, v109, v108, v231, v208, v118);
            swift_bridgeObjectRetain();
            uint64_t v120 = (double *)(v107 + 80);
            uint64_t v121 = _swiftEmptyArrayStorage;
            do
            {
              if ((*(unsigned char *)v120 & 1) == 0)
              {
                double v122 = *(v120 - 2);
                double v123 = exp2(-*(v120 - 1) / *(v120 - 3));
                if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
                  uint64_t v121 = sub_41BAC(0, v121[2] + 1, 1, v121);
                }
                unint64_t v125 = v121[2];
                unint64_t v124 = v121[3];
                if (v125 >= v124 >> 1) {
                  uint64_t v121 = sub_41BAC((void *)(v124 > 1), v125 + 1, 1, v121);
                }
                v121[2] = v125 + 1;
                *(double *)&v121[v125 + 4] = v122 * v123;
              }
              v120 += 7;
              --v106;
            }
            while (v106);
            swift_bridgeObjectRelease();
            uint64_t v102 = v115;
            uint64_t v126 = v224;
            uint64_t v127 = v227;
            uint64_t v128 = v231;
            unint64_t v105 = v222;
            uint64_t v129 = v121[2];
            if (v129)
            {
LABEL_113:
              unint64_t v130 = (double *)(v121 + 4);
              double v131 = 0.0;
              do
              {
                double v132 = *v130++;
                double v131 = v131 + v132;
                --v129;
              }
              while (v129);
              swift_bridgeObjectRelease();
              goto LABEL_118;
            }
LABEL_117:
            swift_bridgeObjectRelease();
            double v131 = 0.0;
LABEL_118:
            swift_bridgeObjectRelease();
            sub_1255C(v102, v214, v126, v127, v128, v104, v105);
            sub_124B4(v237);
            sub_124B4(__dst);
            uint64_t v9 = v206;
            if (v97 >= v131) {
              goto LABEL_78;
            }
            if (!v206) {
              goto LABEL_216;
            }
            Swift::Int v74 = v215 - 1;
            memcpy(__src, v212, 0x229uLL);
            memcpy(v212, v210, 0x230uLL);
            memcpy(v210, __src, 0x229uLL);
            if (v215 - 1 == v205)
            {
LABEL_78:
              Swift::Int v14 = v203 + 1;
              if (v203 + 1 == v199)
              {
                Swift::Int v14 = v199;
                break;
              }
              goto LABEL_79;
            }
          }
        }
      }
    }
    if (v14 < v205) {
      goto LABEL_205;
    }
    Swift::Int v204 = v14;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      uint64_t v10 = v197;
    }
    else {
      uint64_t v10 = sub_7004C(0, *((void *)v197 + 2) + 1, 1, v197);
    }
    unint64_t v134 = *((void *)v10 + 2);
    unint64_t v133 = *((void *)v10 + 3);
    unint64_t v135 = v134 + 1;
    Swift::Int v136 = v205;
    if (v134 >= v133 >> 1)
    {
      uint64_t v185 = sub_7004C((char *)(v133 > 1), v134 + 1, 1, v10);
      Swift::Int v136 = v205;
      uint64_t v10 = v185;
    }
    *((void *)v10 + 2) = v135;
    unint64_t v137 = v10 + 32;
    unint64_t v138 = &v10[16 * v134 + 32];
    *(void *)unint64_t v138 = v136;
    *((void *)v138 + 1) = v204;
    if (v134)
    {
      while (1)
      {
        unint64_t v139 = v135 - 1;
        if (v135 >= 4)
        {
          uint64_t v144 = &v137[16 * v135];
          uint64_t v145 = *((void *)v144 - 8);
          uint64_t v146 = *((void *)v144 - 7);
          BOOL v150 = __OFSUB__(v146, v145);
          uint64_t v147 = v146 - v145;
          if (v150) {
            goto LABEL_193;
          }
          uint64_t v149 = *((void *)v144 - 6);
          uint64_t v148 = *((void *)v144 - 5);
          BOOL v150 = __OFSUB__(v148, v149);
          uint64_t v142 = v148 - v149;
          char v143 = v150;
          if (v150) {
            goto LABEL_194;
          }
          unint64_t v151 = v135 - 2;
          uint64_t v152 = &v137[16 * v135 - 32];
          uint64_t v154 = *(void *)v152;
          uint64_t v153 = *((void *)v152 + 1);
          BOOL v150 = __OFSUB__(v153, v154);
          uint64_t v155 = v153 - v154;
          if (v150) {
            goto LABEL_196;
          }
          BOOL v150 = __OFADD__(v142, v155);
          uint64_t v156 = v142 + v155;
          if (v150) {
            goto LABEL_199;
          }
          if (v156 >= v147)
          {
            uint64_t v174 = &v137[16 * v139];
            uint64_t v176 = *(void *)v174;
            uint64_t v175 = *((void *)v174 + 1);
            BOOL v150 = __OFSUB__(v175, v176);
            uint64_t v177 = v175 - v176;
            if (v150) {
              goto LABEL_203;
            }
            BOOL v167 = v142 < v177;
            goto LABEL_160;
          }
        }
        else
        {
          if (v135 != 3)
          {
            uint64_t v168 = *((void *)v10 + 4);
            uint64_t v169 = *((void *)v10 + 5);
            BOOL v150 = __OFSUB__(v169, v168);
            uint64_t v161 = v169 - v168;
            char v162 = v150;
            goto LABEL_154;
          }
          uint64_t v141 = *((void *)v10 + 4);
          uint64_t v140 = *((void *)v10 + 5);
          BOOL v150 = __OFSUB__(v140, v141);
          uint64_t v142 = v140 - v141;
          char v143 = v150;
        }
        if (v143) {
          goto LABEL_195;
        }
        unint64_t v151 = v135 - 2;
        uint64_t v157 = &v137[16 * v135 - 32];
        uint64_t v159 = *(void *)v157;
        uint64_t v158 = *((void *)v157 + 1);
        BOOL v160 = __OFSUB__(v158, v159);
        uint64_t v161 = v158 - v159;
        char v162 = v160;
        if (v160) {
          goto LABEL_198;
        }
        BOOL v163 = &v137[16 * v139];
        uint64_t v165 = *(void *)v163;
        uint64_t v164 = *((void *)v163 + 1);
        BOOL v150 = __OFSUB__(v164, v165);
        uint64_t v166 = v164 - v165;
        if (v150) {
          goto LABEL_201;
        }
        if (__OFADD__(v161, v166)) {
          goto LABEL_202;
        }
        if (v161 + v166 >= v142)
        {
          BOOL v167 = v142 < v166;
LABEL_160:
          if (v167) {
            unint64_t v139 = v151;
          }
          goto LABEL_162;
        }
LABEL_154:
        if (v162) {
          goto LABEL_197;
        }
        BOOL v170 = &v137[16 * v139];
        uint64_t v172 = *(void *)v170;
        uint64_t v171 = *((void *)v170 + 1);
        BOOL v150 = __OFSUB__(v171, v172);
        uint64_t v173 = v171 - v172;
        if (v150) {
          goto LABEL_200;
        }
        if (v173 < v161) {
          goto LABEL_171;
        }
LABEL_162:
        unint64_t v178 = v139 - 1;
        if (v139 - 1 >= v135)
        {
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
LABEL_195:
          __break(1u);
LABEL_196:
          __break(1u);
LABEL_197:
          __break(1u);
LABEL_198:
          __break(1u);
LABEL_199:
          __break(1u);
LABEL_200:
          __break(1u);
LABEL_201:
          __break(1u);
LABEL_202:
          __break(1u);
LABEL_203:
          __break(1u);
LABEL_204:
          __break(1u);
LABEL_205:
          __break(1u);
LABEL_206:
          __break(1u);
LABEL_207:
          __break(1u);
LABEL_208:
          __break(1u);
LABEL_209:
          __break(1u);
LABEL_210:
          __break(1u);
LABEL_211:
          __break(1u);
          goto LABEL_212;
        }
        if (!v9) {
          goto LABEL_217;
        }
        uint64_t v179 = v10;
        uint64_t v180 = &v137[16 * v178];
        uint64_t v181 = *(void *)v180;
        double v182 = &v137[16 * v139];
        uint64_t v183 = *((void *)v182 + 1);
        sub_1B30B4((char *)(v9 + 560 * *(void *)v180), (char *)(v9 + 560 * *(void *)v182), v9 + 560 * v183, v201);
        if (v1) {
          goto LABEL_186;
        }
        if (v183 < v181) {
          goto LABEL_190;
        }
        if (v139 > *((void *)v179 + 2)) {
          goto LABEL_191;
        }
        *(void *)uint64_t v180 = v181;
        *(void *)&v137[16 * v178 + 8] = v183;
        unint64_t v184 = *((void *)v179 + 2);
        if (v139 >= v184) {
          goto LABEL_192;
        }
        unint64_t v135 = v184 - 1;
        memmove(&v137[16 * v139], v182 + 16, 16 * (v184 - 1 - v139));
        uint64_t v10 = v179;
        *((void *)v179 + 2) = v184 - 1;
        if (v184 <= 2) {
          goto LABEL_171;
        }
      }
    }
    unint64_t v135 = 1;
LABEL_171:
    Swift::Int v11 = v200;
    Swift::Int v8 = v204;
    if (v204 >= v200) {
      goto LABEL_175;
    }
  }
  while (1)
  {
    Swift::Int v202 = v14;
    memcpy(v234, (const void *)(v9 + 560 * v14), 0x229uLL);
    memcpy(__src, (const void *)(v9 + 560 * v12), 0x229uLL);
    unint64_t v15 = __src[17];
    if ((unint64_t)__src[17] >> 1 == 0xFFFFFFFF) {
      goto LABEL_218;
    }
    uint64_t v16 = __src[11];
    uint64_t v17 = __src[12];
    uint64_t v18 = __src[13];
    uint64_t v19 = __src[14];
    uint64_t v20 = __src[15];
    uint64_t v21 = __src[16];
    uint64_t v232 = __src[16];
    uint64_t v218 = __src[13];
    uint64_t v220 = __src[15];
    uint64_t v216 = __src[12];
    if ((unint64_t)__src[17] >> 62 == 3)
    {
      uint64_t v22 = *(void *)(__src[11] + 16);
      if (!v22)
      {
        uint64_t v36 = __src[13];
        uint64_t v31 = __src[14];
        uint64_t v37 = __src[16];
        sub_12430(__src[11], __src[12], __src[13], __src[14], __src[15], __src[16], __src[17]);
        sub_12430(v16, v17, v36, v31, v20, v37, v15);
        sub_12384(v234);
        sub_12384(__src);
        uint64_t v26 = _swiftEmptyArrayStorage;
        uint64_t v32 = _swiftEmptyArrayStorage[2];
        if (!v32) {
          goto LABEL_34;
        }
        goto LABEL_30;
      }
      uint64_t v23 = __src[11];
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v24 = swift_allocObject();
      uint64_t v21 = v232;
      uint64_t v20 = v220;
      uint64_t v23 = v24;
      *(_OWORD *)(v24 + 16) = xmmword_1FD2A0;
      *(void *)(v24 + 32) = v16;
      *(void *)(v24 + 40) = v17;
      *(void *)(v24 + 48) = v18;
      *(void *)(v24 + 56) = v19;
      *(void *)(v24 + 64) = v220;
      *(void *)(v24 + 72) = v232;
      uint64_t v22 = 1;
      *(unsigned char *)(v24 + 80) = v15 & 1;
    }
    sub_12430(v16, v17, v18, v19, v20, v21, v15);
    uint64_t v228 = v19;
    sub_12430(v16, v17, v18, v19, v20, v232, v15);
    sub_12384(v234);
    sub_12384(__src);
    swift_bridgeObjectRetain();
    char v25 = (double *)(v23 + 80);
    uint64_t v26 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v25 & 1) == 0)
      {
        double v27 = *(v25 - 2);
        double v28 = exp2(-*(v25 - 1) / *(v25 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v26 = sub_41BAC(0, v26[2] + 1, 1, v26);
        }
        unint64_t v30 = v26[2];
        unint64_t v29 = v26[3];
        if (v30 >= v29 >> 1) {
          uint64_t v26 = sub_41BAC((void *)(v29 > 1), v30 + 1, 1, v26);
        }
        v26[2] = v30 + 1;
        *(double *)&v26[v30 + 4] = v27 * v28;
      }
      v25 += 7;
      --v22;
    }
    while (v22);
    swift_bridgeObjectRelease();
    uint64_t v31 = v228;
    uint64_t v32 = v26[2];
    if (!v32)
    {
LABEL_34:
      swift_bridgeObjectRelease();
      double v34 = 0.0;
      goto LABEL_35;
    }
LABEL_30:
    uint64_t v33 = (double *)(v26 + 4);
    double v34 = 0.0;
    do
    {
      double v35 = *v33++;
      double v34 = v34 + v35;
      --v32;
    }
    while (v32);
    swift_bridgeObjectRelease();
LABEL_35:
    swift_bridgeObjectRelease();
    uint64_t v39 = v234[11];
    uint64_t v38 = v234[12];
    uint64_t v225 = v234[13];
    uint64_t v229 = v234[14];
    uint64_t v40 = v234[16];
    uint64_t v223 = v234[15];
    unint64_t v41 = v234[17];
    sub_1255C(v16, v216, v218, v31, v220, v232, v15);
    if (v41 >> 1 == 0xFFFFFFFF) {
      goto LABEL_219;
    }
    uint64_t v213 = v38;
    if (v41 >> 62 == 3)
    {
      uint64_t v42 = v38;
      uint64_t v43 = *(void *)(v39 + 16);
      uint64_t v44 = v225;
      if (!v43)
      {
        uint64_t v62 = v229;
        uint64_t v63 = v223;
        sub_12430(v39, v42, v225, v229, v223, v40, v41);
        sub_12430(v39, v42, v225, v229, v223, v40, v41);
        uint64_t v57 = _swiftEmptyArrayStorage;
        uint64_t v64 = _swiftEmptyArrayStorage[2];
        if (!v64) {
          goto LABEL_53;
        }
        goto LABEL_49;
      }
      uint64_t v45 = v39;
      uint64_t v46 = v229;
      uint64_t v47 = v40;
      uint64_t v48 = v39;
      unint64_t v49 = v41;
      uint64_t v50 = v223;
      uint64_t v51 = v225;
    }
    else
    {
      sub_12124(&qword_26D5D8);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = xmmword_1FD2A0;
      *(void *)(v45 + 32) = v39;
      *(void *)(v45 + 40) = v38;
      uint64_t v51 = v225;
      uint64_t v46 = v229;
      *(void *)(v45 + 48) = v225;
      *(void *)(v45 + 56) = v229;
      uint64_t v47 = v40;
      uint64_t v48 = v39;
      unint64_t v49 = v41;
      uint64_t v50 = v223;
      *(void *)(v45 + 64) = v223;
      *(void *)(v45 + 72) = v40;
      uint64_t v43 = 1;
      *(unsigned char *)(v45 + 80) = v41 & 1;
      uint64_t v42 = v38;
    }
    uint64_t v52 = v48;
    uint64_t v53 = v46;
    uint64_t v209 = (void *)v49;
    uint64_t v211 = (void *)v47;
    sub_12430(v48, v42, v51, v46, v50, v47, v49);
    uint64_t v233 = v52;
    uint64_t v54 = v52;
    uint64_t v55 = v53;
    unint64_t v41 = (unint64_t)v209;
    uint64_t v40 = (uint64_t)v211;
    sub_12430(v54, v42, v51, v55, v50, (uint64_t)v211, (unint64_t)v209);
    swift_bridgeObjectRetain();
    long long v56 = (double *)(v45 + 80);
    uint64_t v57 = _swiftEmptyArrayStorage;
    do
    {
      if ((*(unsigned char *)v56 & 1) == 0)
      {
        double v58 = *(v56 - 2);
        double v59 = exp2(-*(v56 - 1) / *(v56 - 3));
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v57 = sub_41BAC(0, v57[2] + 1, 1, v57);
        }
        unint64_t v61 = v57[2];
        unint64_t v60 = v57[3];
        if (v61 >= v60 >> 1) {
          uint64_t v57 = sub_41BAC((void *)(v60 > 1), v61 + 1, 1, v57);
        }
        v57[2] = v61 + 1;
        *(double *)&v57[v61 + 4] = v58 * v59;
      }
      v56 += 7;
      --v43;
    }
    while (v43);
    swift_bridgeObjectRelease();
    uint64_t v44 = v225;
    uint64_t v62 = v229;
    uint64_t v63 = v223;
    uint64_t v39 = v233;
    uint64_t v64 = v57[2];
    if (!v64)
    {
LABEL_53:
      swift_bridgeObjectRelease();
      double v66 = 0.0;
      goto LABEL_54;
    }
LABEL_49:
    uint64_t v65 = (double *)(v57 + 4);
    double v66 = 0.0;
    do
    {
      double v67 = *v65++;
      double v66 = v66 + v67;
      --v64;
    }
    while (v64);
    swift_bridgeObjectRelease();
LABEL_54:
    swift_bridgeObjectRelease();
    sub_1255C(v39, v213, v44, v62, v63, v40, v41);
    sub_124B4(__src);
    sub_124B4(v234);
    if (((v207 ^ (v34 >= v66)) & 1) == 0)
    {
      Swift::Int v11 = v200;
      uint64_t v9 = v206;
      Swift::Int v14 = v202;
      goto LABEL_59;
    }
    Swift::Int v11 = v200;
    uint64_t v9 = v206;
    if (v202 == v198) {
      break;
    }
    Swift::Int v12 = v202;
    Swift::Int v14 = v202 + 1;
  }
  Swift::Int v14 = v200;
  if (!v207) {
    goto LABEL_69;
  }
LABEL_60:
  if (v14 >= v205)
  {
    if (v205 < v14)
    {
      char v68 = (char *)(v193 + 560 * v14);
      Swift::Int v69 = v14;
      Swift::Int v70 = v205;
      uint64_t v71 = (char *)(v9 + 560 * v205);
      while (1)
      {
        if (v70 != --v69)
        {
          if (!v9) {
            goto LABEL_220;
          }
          Swift::Int v72 = v14;
          memcpy(__src, v71, 0x229uLL);
          memmove(v71, v68, 0x230uLL);
          memcpy(v68, __src, 0x229uLL);
          Swift::Int v11 = v200;
          Swift::Int v14 = v72;
        }
        ++v70;
        v68 -= 560;
        v71 += 560;
        if (v70 >= v69) {
          goto LABEL_69;
        }
      }
    }
    goto LABEL_69;
  }
LABEL_213:
  __break(1u);
LABEL_214:
  __break(1u);
LABEL_215:
  __break(1u);
LABEL_216:
  __break(1u);
LABEL_217:
  __break(1u);
LABEL_218:
  __break(1u);
LABEL_219:
  __break(1u);
LABEL_220:
  __break(1u);
LABEL_221:
  __break(1u);
LABEL_222:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_1B30B4(char *__src, char *a2, unint64_t a3, char *__dst)
{
  uint64_t v4 = __dst;
  uint64_t v5 = a2;
  uint64_t v6 = __src;
  int64_t v7 = a2 - __src;
  int64_t v8 = (a2 - __src) / 560;
  uint64_t v9 = a3 - (void)a2;
  uint64_t v10 = (uint64_t)(a3 - (void)a2) / 560;
  double v97 = __src;
  long long v96 = __dst;
  if (v8 >= v10)
  {
    if (v9 < -559) {
      goto LABEL_74;
    }
    uint64_t v38 = 560 * v10;
    if (__dst != a2 || &a2[v38] <= __dst) {
      memmove(__dst, a2, 560 * v10);
    }
    uint64_t v39 = &v4[v38];
    uint64_t v95 = &v4[v38];
    double v97 = v5;
    if (v6 >= v5 || v9 < 560) {
      goto LABEL_69;
    }
    double v88 = v4;
    uint64_t v40 = (char *)(a3 - 560);
    unint64_t v90 = v6;
    while (1)
    {
      memcpy(__dsta, v39 - 560, 0x229uLL);
      Swift::Int v73 = v5 - 560;
      memcpy(v94, v5 - 560, 0x229uLL);
      unint64_t v41 = v94[17];
      if (v94[17] >> 1 == 0xFFFFFFFFLL) {
        goto LABEL_72;
      }
      uint64_t v75 = v40 + 560;
      uint64_t v77 = v40;
      uint64_t v42 = v94[11];
      uint64_t v43 = v94[12];
      uint64_t v44 = v94[13];
      uint64_t v45 = (void *)v94[14];
      uint64_t v46 = v94[15];
      uint64_t v47 = v94[16];
      Swift::Int v72 = v39 - 560;
      uint64_t v92 = v5;
      unint64_t v78 = (unint64_t)v39;
      if (v94[17] >> 62 == 3)
      {
        uint64_t v51 = v94[11];
      }
      else
      {
        uint64_t v48 = v94[15];
        unint64_t v49 = v94[17];
        sub_12124(&qword_26D5D8);
        uint64_t v50 = swift_allocObject();
        unint64_t v41 = v49;
        uint64_t v46 = v48;
        uint64_t v51 = v50;
        *(_OWORD *)(v50 + 16) = xmmword_1FD2A0;
        *(void *)(v50 + 32) = v42;
        *(void *)(v50 + 40) = v43;
        *(void *)(v50 + 48) = v44;
        *(void *)(v50 + 56) = v45;
        *(void *)(v50 + 64) = v46;
        *(void *)(v50 + 72) = v47;
        *(unsigned char *)(v50 + 80) = v49 & 1;
      }
      uint64_t v52 = v43;
      uint64_t v53 = v43;
      uint64_t v54 = (uint64_t)v45;
      __srcb = v45;
      uint64_t v55 = v46;
      unint64_t v56 = v41;
      sub_12430(v42, v53, v44, v54, v46, v47, v41);
      sub_12430(v42, v52, v44, (uint64_t)__srcb, v55, v47, v56);
      sub_12384(__dsta);
      sub_12384(v94);
      double v84 = COERCE_DOUBLE(Array<A>.affinity.getter(v51));
      char v81 = v57;
      swift_bridgeObjectRelease();
      sub_1255C(v42, v52, v44, (uint64_t)__srcb, v55, v47, v56);
      if (v81) {
        double v58 = 0.0;
      }
      else {
        double v58 = v84;
      }
      unint64_t v59 = __dsta[17];
      if (__dsta[17] >> 1 == 0xFFFFFFFFLL)
      {
LABEL_73:
        __break(1u);
        goto LABEL_74;
      }
      uint64_t v61 = __dsta[11];
      uint64_t v60 = __dsta[12];
      uint64_t v62 = __dsta[13];
      uint64_t v63 = __dsta[14];
      uint64_t v64 = __dsta[15];
      uint64_t v65 = __dsta[16];
      if (__dsta[17] >> 62 == 3)
      {
        uint64_t v66 = __dsta[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v66 = swift_allocObject();
        *(_OWORD *)(v66 + 16) = xmmword_1FD2A0;
        *(void *)(v66 + 32) = v61;
        *(void *)(v66 + 40) = v60;
        *(void *)(v66 + 48) = v62;
        *(void *)(v66 + 56) = v63;
        *(void *)(v66 + 64) = v64;
        *(void *)(v66 + 72) = v65;
        *(unsigned char *)(v66 + 80) = v59 & 1;
      }
      sub_1244C();
      sub_1244C();
      double v85 = COERCE_DOUBLE(Array<A>.affinity.getter(v66));
      char v68 = v67;
      swift_bridgeObjectRelease();
      sub_1255C(v61, v60, v62, v63, v64, v65, v59);
      sub_124B4(v94);
      sub_124B4(__dsta);
      if (v68) {
        BOOL v69 = v58 < 0.0;
      }
      else {
        BOOL v69 = v58 < v85;
      }
      uint64_t v39 = (char *)v78;
      if (v69)
      {
        if (v75 != v92)
        {
          Swift::Int v70 = v73;
          uint64_t v5 = v73;
LABEL_63:
          memmove(v77, v70, 0x230uLL);
          goto LABEL_64;
        }
        Swift::Int v70 = v73;
        uint64_t v5 = v73;
        if (v77 >= v92) {
          goto LABEL_63;
        }
      }
      else
      {
        uint64_t v5 = v92;
        if (v75 != (char *)v78)
        {
          uint64_t v39 = v72;
          Swift::Int v70 = v72;
          goto LABEL_63;
        }
        Swift::Int v70 = v72;
        uint64_t v39 = v72;
        if ((unint64_t)v77 >= v78) {
          goto LABEL_63;
        }
      }
LABEL_64:
      if (v39 <= v88 || v5 <= v90)
      {
        uint64_t v95 = v39;
        double v97 = v5;
        goto LABEL_69;
      }
      uint64_t v40 = v77 - 560;
    }
  }
  if (v7 < -559)
  {
LABEL_74:
    sub_1FC2B0();
    __break(1u);
    JUMPOUT(0x1B39BCLL);
  }
  size_t v11 = 560 * v8;
  if (__dst != __src || &__src[v11] <= __dst) {
    memmove(__dst, __src, v11);
  }
  Swift::Int v74 = &v4[v11];
  uint64_t v95 = &v4[v11];
  if ((unint64_t)v5 < a3 && v7 >= 560)
  {
    Swift::Int v12 = v4;
    while (1)
    {
      double v89 = v6;
      unint64_t v91 = v5;
      memcpy(__dsta, v5, 0x229uLL);
      memcpy(v94, v12, 0x229uLL);
      unint64_t v13 = v94[17];
      if (v94[17] >> 1 == 0xFFFFFFFFLL)
      {
        __break(1u);
LABEL_71:
        __break(1u);
LABEL_72:
        __break(1u);
        goto LABEL_73;
      }
      uint64_t v14 = v94[11];
      uint64_t v15 = v94[12];
      uint64_t v16 = v94[13];
      uint64_t v17 = v94[14];
      uint64_t v18 = v94[15];
      uint64_t v19 = v94[16];
      uint64_t v87 = v4;
      __srca = v12;
      if (v94[17] >> 62 == 3)
      {
        uint64_t v20 = v94[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v20 = swift_allocObject();
        *(_OWORD *)(v20 + 16) = xmmword_1FD2A0;
        *(void *)(v20 + 32) = v14;
        *(void *)(v20 + 40) = v15;
        *(void *)(v20 + 48) = v16;
        *(void *)(v20 + 56) = v17;
        *(void *)(v20 + 64) = v18;
        *(void *)(v20 + 72) = v19;
        *(unsigned char *)(v20 + 80) = v13 & 1;
      }
      uint64_t v86 = v14;
      sub_12430(v14, v15, v16, v17, v18, v19, v13);
      sub_12430(v14, v15, v16, v17, v18, v19, v13);
      sub_12384(__dsta);
      sub_12384(v94);
      double v82 = COERCE_DOUBLE(Array<A>.affinity.getter(v20));
      char v22 = v21;
      swift_bridgeObjectRelease();
      sub_1255C(v86, v15, v16, v17, v18, v19, v13);
      if (v22) {
        double v23 = 0.0;
      }
      else {
        double v23 = v82;
      }
      unint64_t v24 = __dsta[17];
      if (__dsta[17] >> 1 == 0xFFFFFFFFLL) {
        goto LABEL_71;
      }
      uint64_t v26 = __dsta[11];
      uint64_t v25 = __dsta[12];
      uint64_t v27 = __dsta[13];
      uint64_t v28 = __dsta[14];
      uint64_t v29 = __dsta[15];
      uint64_t v30 = __dsta[16];
      if (__dsta[17] >> 62 == 3)
      {
        uint64_t v31 = __dsta[11];
      }
      else
      {
        sub_12124(&qword_26D5D8);
        uint64_t v31 = swift_allocObject();
        *(_OWORD *)(v31 + 16) = xmmword_1FD2A0;
        *(void *)(v31 + 32) = v26;
        *(void *)(v31 + 40) = v25;
        *(void *)(v31 + 48) = v27;
        *(void *)(v31 + 56) = v28;
        *(void *)(v31 + 64) = v29;
        *(void *)(v31 + 72) = v30;
        *(unsigned char *)(v31 + 80) = v24 & 1;
      }
      sub_1244C();
      uint64_t v32 = v26;
      sub_1244C();
      double v83 = COERCE_DOUBLE(Array<A>.affinity.getter(v31));
      uint64_t v33 = v25;
      uint64_t v34 = v32;
      LOBYTE(v32) = v35;
      swift_bridgeObjectRelease();
      sub_1255C(v34, v33, v27, v28, v29, v30, v24);
      sub_124B4(v94);
      sub_124B4(__dsta);
      BOOL v36 = (v32 & 1) != 0 ? v23 < 0.0 : v23 < v83;
      uint64_t v5 = v91;
      Swift::Int v12 = __srca;
      if (v36) {
        break;
      }
      uint64_t v4 = __srca + 560;
      uint64_t v37 = __srca;
      Swift::Int v12 = __srca + 560;
      if (v89 != __srca) {
        goto LABEL_28;
      }
LABEL_29:
      uint64_t v6 = v89 + 560;
      if (v12 >= v74)
      {
        long long v96 = v4;
        double v97 = v89 + 560;
        goto LABEL_69;
      }
      if ((unint64_t)v5 >= a3)
      {
        long long v96 = v4;
        double v97 = v89 + 560;
        goto LABEL_69;
      }
    }
    uint64_t v37 = v91;
    uint64_t v5 = v91 + 560;
    uint64_t v4 = v87;
    if (v89 == v91) {
      goto LABEL_29;
    }
LABEL_28:
    memmove(v89, v37, 0x230uLL);
    goto LABEL_29;
  }
LABEL_69:
  sub_7034C((void **)&v97, &v96, &v95);
  return 1;
}

unint64_t *sub_1B39FC(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_5ED70((unint64_t *)((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0)), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    int64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_5ED70((unint64_t *)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_1B3B60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1FB110();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1B3BA4(uint64_t a1, uint64_t a2)
{
  int64_t v3 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v3)
  {
    sub_467B8(0, v3, 0);
    uint64_t v5 = a2;
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v6 = (void *)(a1 + 104);
    do
    {
      int64_t v7 = result;
      char v22 = *((unsigned char *)v6 - 64);
      uint64_t v8 = *(v6 - 5);
      char v9 = *((unsigned char *)v6 - 32);
      uint64_t v10 = *(v6 - 3);
      uint64_t v11 = *(v6 - 1);
      uint64_t v12 = *v6;
      uint64_t v23 = *(v6 - 9);
      uint64_t v24 = *(v6 - 2);
      if (*(void *)(v5 + 16) && (uint64_t v13 = sub_56168(*(v6 - 9)), (v14 & 1) != 0))
      {
        char v21 = 0;
        uint64_t v20 = *(void *)(*(void *)(v5 + 56) + 8 * v13);
      }
      else
      {
        uint64_t v20 = 0;
        char v21 = 1;
      }
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_5480C(v8, v9);
      uint64_t result = v7;
      char v15 = v9;
      unint64_t v17 = v7[2];
      unint64_t v16 = v7[3];
      if (v17 >= v16 >> 1)
      {
        sub_467B8(v16 > 1, v17 + 1, 1);
        uint64_t v5 = a2;
        uint64_t result = v7;
      }
      result[2] = v17 + 1;
      uint64_t v18 = &result[10 * v17];
      v18[4] = v23;
      *((unsigned char *)v18 + 40) = v22;
      v18[6] = v20;
      *((unsigned char *)v18 + 56) = v21;
      v18[8] = v8;
      *((unsigned char *)v18 + 72) = v15;
      v18[10] = v10;
      v18[11] = v24;
      v18[12] = v11;
      v18[13] = v12;
      v6 += 10;
      --v3;
    }
    while (v3);
  }
  return result;
}

void *sub_1B3D44(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v6 = v5;
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v50 = _swiftEmptyArrayStorage;
    sub_467D8(0, v7, 0);
    uint64_t v8 = _swiftEmptyArrayStorage;
    uint64_t v11 = (char *)(a1 + 56);
    while (1)
    {
      char v12 = *(v11 - 16);
      uint64_t v13 = *((void *)v11 - 1);
      char v14 = *v11;
      uint64_t v15 = *((void *)v11 + 1);
      char v16 = v11[16];
      uint64_t v18 = *((void *)v11 + 3);
      uint64_t v17 = *((void *)v11 + 4);
      uint64_t v19 = *((void *)v11 + 5);
      uint64_t v20 = *((void *)v11 + 6);
      uint64_t v38 = *((void *)v11 - 3);
      char v39 = v12;
      uint64_t v40 = v13;
      char v41 = v14;
      uint64_t v42 = v15;
      char v43 = v16;
      uint64_t v44 = v18;
      uint64_t v45 = v17;
      uint64_t v46 = v19;
      uint64_t v47 = v20;
      sub_5480C(v15, v16);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      sub_1B10CC(&v38, a2, a3, a4, a5, (uint64_t)v48);
      if (v6) {
        break;
      }
      uint64_t v6 = 0;
      sub_54820(v15, v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      long long v32 = v48[4];
      long long v33 = v48[5];
      long long v31 = v48[3];
      long long v29 = v48[1];
      long long v30 = v48[2];
      long long v35 = v48[7];
      long long v36 = v48[8];
      long long v34 = v48[6];
      char v37 = v49;
      unint64_t v22 = v8[2];
      unint64_t v21 = v8[3];
      long long v28 = v48[0];
      uint64_t v50 = v8;
      if (v22 >= v21 >> 1)
      {
        sub_467D8(v21 > 1, v22 + 1, 1);
        uint64_t v8 = v50;
      }
      v11 += 80;
      v8[2] = v22 + 1;
      uint64_t v23 = &v8[19 * v22];
      *((_OWORD *)v23 + 2) = v28;
      *((_OWORD *)v23 + 3) = v29;
      *((_OWORD *)v23 + 6) = v32;
      *((_OWORD *)v23 + 7) = v33;
      *((_OWORD *)v23 + 4) = v30;
      *((_OWORD *)v23 + 5) = v31;
      *((unsigned char *)v23 + 176) = v37;
      *((_OWORD *)v23 + 9) = v35;
      *((_OWORD *)v23 + 10) = v36;
      *((_OWORD *)v23 + 8) = v34;
      if (!--v7) {
        return v8;
      }
    }
    sub_54820(v15, v16);
    swift_release();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  return v8;
}

uint64_t sub_1B3F54(uint64_t a1, void *(*a2)(long long *__return_ptr, void, double))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  uint64_t v11 = _swiftEmptyArrayStorage;
  if (!v7) {
    goto LABEL_7;
  }
LABEL_4:
  unint64_t v12 = __clz(__rbit64(v7));
  v7 &= v7 - 1;
  for (unint64_t i = v12 | (v10 << 6); ; unint64_t i = __clz(__rbit64(v16)) + (v10 << 6))
  {
    uint64_t result = (uint64_t)a2(&v26, *(void *)(*(void *)(a1 + 48) + 8 * i), *(double *)(*(void *)(a1 + 56) + 8 * i));
    uint64_t v14 = v28;
    if (v28)
    {
      long long v24 = v26;
      uint64_t v30 = v27;
      long long v25 = v29;
      uint64_t result = swift_isUniquelyReferenced_nonNull_native();
      if ((result & 1) == 0)
      {
        uint64_t result = (uint64_t)sub_425B8(0, v11[2] + 1, 1, v11);
        uint64_t v11 = (void *)result;
      }
      uint64_t v18 = v11;
      unint64_t v19 = v11[2];
      uint64_t v20 = v18;
      unint64_t v21 = v18[3];
      unint64_t v22 = v19 + 1;
      if (v19 >= v21 >> 1)
      {
        uint64_t result = (uint64_t)sub_425B8((void *)(v21 > 1), v19 + 1, 1, v20);
        unint64_t v22 = v19 + 1;
        uint64_t v20 = (void *)result;
      }
      v20[2] = v22;
      uint64_t v23 = &v20[6 * v19];
      uint64_t v11 = v20;
      *((_OWORD *)v23 + 2) = v24;
      *((unsigned char *)v23 + 48) = v30 & 1;
      v23[7] = v14;
      *((_OWORD *)v23 + 4) = v25;
      if (v7) {
        goto LABEL_4;
      }
    }
    else if (v7)
    {
      goto LABEL_4;
    }
LABEL_7:
    int64_t v15 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_31;
    }
    if (v15 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v15);
    ++v10;
    if (!v16)
    {
      int64_t v10 = v15 + 1;
      if (v15 + 1 >= v8) {
        goto LABEL_29;
      }
      unint64_t v16 = *(void *)(v4 + 8 * v10);
      if (!v16)
      {
        int64_t v10 = v15 + 2;
        if (v15 + 2 >= v8) {
          goto LABEL_29;
        }
        unint64_t v16 = *(void *)(v4 + 8 * v10);
        if (!v16)
        {
          int64_t v10 = v15 + 3;
          if (v15 + 3 >= v8) {
            goto LABEL_29;
          }
          unint64_t v16 = *(void *)(v4 + 8 * v10);
          if (!v16) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v16 - 1) & v16;
  }
  int64_t v17 = v15 + 4;
  if (v17 >= v8)
  {
LABEL_29:
    swift_release();
    return (uint64_t)v11;
  }
  unint64_t v16 = *(void *)(v4 + 8 * v17);
  if (v16)
  {
    int64_t v10 = v17;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v10 >= v8) {
      goto LABEL_29;
    }
    unint64_t v16 = *(void *)(v4 + 8 * v10);
    ++v17;
    if (v16) {
      goto LABEL_22;
    }
  }
LABEL_31:
  __break(1u);
  return result;
}

uint64_t sub_1B41A4(uint64_t *a1)
{
  return sub_199AB8(a1, *(void ***)(v1 + 16), *(uint64_t **)(v1 + 24));
}

uint64_t sub_1B41C0(uint64_t a1, char a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 16);
  swift_bridgeObjectRetain();
  if (v4)
  {
    uint64_t v5 = (void *)(a1 + 80);
    do
    {
      uint64_t v14 = *(v5 - 6);
      uint64_t v13 = *(v5 - 5);
      uint64_t v15 = *(v5 - 4);
      char v16 = *((unsigned char *)v5 - 24);
      uint64_t v17 = *(v5 - 2);
      uint64_t v18 = *(v5 - 1);
      uint64_t v19 = *v5;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (!v17) {
        break;
      }
      uint64_t v36 = v18;
      char v38 = v16;
      uint64_t v40 = v13;
      uint64_t v41 = v4;
      uint64_t v20 = (void *)*a3;
      unint64_t v22 = sub_56168(v14);
      uint64_t v23 = v20[2];
      BOOL v24 = (v21 & 1) == 0;
      uint64_t v25 = v23 + v24;
      if (__OFADD__(v23, v24))
      {
        __break(1u);
LABEL_17:
        __break(1u);
LABEL_18:
        uint64_t result = sub_1FC770();
        __break(1u);
        return result;
      }
      char v26 = v21;
      if (v20[3] >= v25)
      {
        if ((a2 & 1) == 0) {
          sub_121A6C();
        }
      }
      else
      {
        sub_1197DC(v25, a2 & 1);
        uint64_t v27 = sub_56168(v14);
        if ((v26 & 1) != (v28 & 1)) {
          goto LABEL_18;
        }
        unint64_t v22 = v27;
      }
      long long v29 = (void *)*a3;
      if (v26)
      {
        uint64_t v6 = 48 * v22;
        uint64_t v7 = v29[7] + 48 * v22;
        uint64_t v8 = *(void *)v7;
        uint64_t v9 = *(void *)(v7 + 8);
        char v39 = *(unsigned char *)(v7 + 16);
        uint64_t v10 = *(void *)(v7 + 24);
        uint64_t v37 = *(void *)(v7 + 32);
        uint64_t v11 = *(void *)(v7 + 40);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v12 = v29[7] + v6;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v12 = v8;
        *(void *)(v12 + 8) = v9;
        *(unsigned char *)(v12 + 16) = v39;
        *(void *)(v12 + 24) = v10;
        *(void *)(v12 + 32) = v37;
        *(void *)(v12 + 40) = v11;
      }
      else
      {
        v29[(v22 >> 6) + 8] |= 1 << v22;
        *(void *)(v29[6] + 8 * v22) = v14;
        uint64_t v30 = v29[7] + 48 * v22;
        *(void *)uint64_t v30 = v40;
        *(void *)(v30 + 8) = v15;
        *(unsigned char *)(v30 + 16) = v38;
        *(void *)(v30 + 24) = v17;
        *(void *)(v30 + 32) = v36;
        *(void *)(v30 + 40) = v19;
        uint64_t v31 = v29[2];
        BOOL v32 = __OFADD__(v31, 1);
        uint64_t v33 = v31 + 1;
        if (v32) {
          goto LABEL_17;
        }
        v29[2] = v33;
      }
      v5 += 7;
      a2 = 1;
      --v4;
    }
    while (v41 != 1);
  }
  return swift_bridgeObjectRelease();
}

double sub_1B43F0@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>)
{
  return sub_1B1A9C(a1, *(void *)(v3 + 16), *(void *)(v3 + 24), a2, a3);
}

uint64_t *sub_1B43F8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v7 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v7 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v6 = *(void *)(a3 - 8);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        swift_storeEnumTagMultiPayload();
        break;
      case 7u:
        uint64_t v9 = sub_1FB110();
        (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v9 - 8) + 16))(a1, a2, v9);
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(v6 + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B4598(uint64_t a1)
{
  uint64_t result = swift_getEnumCaseMultiPayload();
  switch((int)result)
  {
    case 0:
    case 1:
    case 2:
      uint64_t result = swift_bridgeObjectRelease();
      break;
    case 7:
      uint64_t v3 = sub_1FB110();
      uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8);
      uint64_t result = v4(a1, v3);
      break;
    default:
      return result;
  }
  return result;
}

void *sub_1B4678(void *a1, void *a2, uint64_t a3)
{
  switch(swift_getEnumCaseMultiPayload())
  {
    case 0u:
    case 1u:
    case 2u:
      *a1 = *a2;
      swift_bridgeObjectRetain();
      goto LABEL_5;
    case 7u:
      uint64_t v6 = sub_1FB110();
      (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_5:
      swift_storeEnumTagMultiPayload();
      break;
    default:
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
      break;
  }
  return a1;
}

void *sub_1B47C8(void *a1, void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B493C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2.Errors);
    switch(swift_getEnumCaseMultiPayload())
    {
      case 0u:
      case 1u:
      case 2u:
        *a1 = *a2;
        swift_bridgeObjectRetain();
        goto LABEL_6;
      case 7u:
        uint64_t v6 = sub_1FB110();
        (*(void (**)(void *, void *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
LABEL_6:
        swift_storeEnumTagMultiPayload();
        break;
      default:
        memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
        break;
    }
  }
  return a1;
}

uint64_t sub_1B493C(uint64_t a1, uint64_t (*a2)(void))
{
  uint64_t v3 = a2(0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v3 - 8) + 8))(a1, v3);
  return a1;
}

uint64_t type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2.Errors()
{
  uint64_t result = qword_273188;
  if (!qword_273188) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void *sub_1B49E8(void *a1, const void *a2, uint64_t a3)
{
  if (swift_getEnumCaseMultiPayload() == 7)
  {
    uint64_t v6 = sub_1FB110();
    (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    swift_storeEnumTagMultiPayload();
  }
  else
  {
    memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
  }
  return a1;
}

void *sub_1B4AA0(void *a1, const void *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    sub_1B493C((uint64_t)a1, (uint64_t (*)(void))type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2.Errors);
    if (swift_getEnumCaseMultiPayload() == 7)
    {
      uint64_t v6 = sub_1FB110();
      (*(void (**)(void *, const void *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
      swift_storeEnumTagMultiPayload();
    }
    else
    {
      memcpy(a1, a2, *(void *)(*(void *)(a3 - 8) + 64));
    }
  }
  return a1;
}

uint64_t sub_1B4B7C()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataMultiPayload();
    return 0;
  }
  return result;
}

uint64_t sub_1B4C2C@<X0>(long long *a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X3>, uint64_t a4@<X8>)
{
  sub_37C30(a1, a4);
  uint64_t v7 = type metadata accessor for AccessManager.RequirementEntry();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 - 8) + 32))(a4 + *(int *)(v7 + 52), a2, a3);
}

uint64_t AccessManager.register(requirement:for:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 80);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v15 - v7;
  uint64_t v10 = *(void *)(v9 + 88);
  *(void *)&long long v16 = v5;
  *((void *)&v16 + 1) = v5;
  uint64_t v17 = v10;
  uint64_t v18 = v10;
  uint64_t v11 = type metadata accessor for AccessManager.RequirementEntry();
  __chkstk_darwin(v11);
  uint64_t v13 = (char *)&v15 - v12;
  sub_51B70(a1, (uint64_t)&v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v6 + 16))(v8, a2, v5);
  sub_1B4C2C(&v16, (uint64_t)v8, v5, (uint64_t)v13);
  swift_beginAccess();
  sub_1FBBA0();
  sub_1FBB70();
  return swift_endAccess();
}

uint64_t type metadata accessor for AccessManager.RequirementEntry()
{
  return swift_getGenericMetadata();
}

uint64_t AggregateFlattener.deinit()
{
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t dispatch thunk of AccessRequirementType.isSatisfied()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_57490;
  return v7(a1, a2);
}

uint64_t sub_1B4FB0()
{
  return swift_initClassMetadata2();
}

uint64_t type metadata accessor for AccessManager()
{
  return sub_187654();
}

uint64_t method lookup function for AccessManager(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AccessManager);
}

uint64_t sub_1B5028(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 24);
}

uint64_t sub_1B5030()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initEnumMetadataSinglePayload();
    return 0;
  }
  return result;
}

uint64_t *sub_1B50AC(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  if (*(_DWORD *)(v6 + 84)) {
    size_t v7 = *(void *)(v6 + 64);
  }
  else {
    size_t v7 = *(void *)(v6 + 64) + 1;
  }
  uint64_t v8 = *(_DWORD *)(v6 + 80);
  if (v8 > 7 || (*(_DWORD *)(v6 + 80) & 0x100000) != 0 || v7 > 0x18)
  {
    uint64_t v11 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v11 + ((v8 + 16) & ~v8));
    swift_retain();
  }
  else if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

uint64_t sub_1B51E8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 24);
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(a1, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(a1, v3);
  }
  return result;
}

void *sub_1B52AC(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 16))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1B53A4(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 16))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 24))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

void *sub_1B5510(void *a1, const void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v6 + 48))(a2, 1, v5))
  {
    if (*(_DWORD *)(v6 + 84)) {
      size_t v7 = *(void *)(v6 + 64);
    }
    else {
      size_t v7 = *(void *)(v6 + 64) + 1;
    }
    memcpy(a1, a2, v7);
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v6 + 32))(a1, a2, v5);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
  }
  return a1;
}

void *sub_1B5608(void *a1, void *a2, uint64_t a3)
{
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  size_t v7 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v6 + 48);
  int v8 = v7(a1, 1, v5);
  int v9 = v7(a2, 1, v5);
  if (v8)
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 32))(a1, a2, v5);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v6 + 56))(a1, 0, 1, v5);
      return a1;
    }
    int v10 = *(_DWORD *)(v6 + 84);
    size_t v11 = *(void *)(v6 + 64);
  }
  else
  {
    if (!v9)
    {
      (*(void (**)(void *, void *, uint64_t))(v6 + 40))(a1, a2, v5);
      return a1;
    }
    uint64_t v13 = *(void (**)(void *, uint64_t))(v6 + 8);
    uint64_t v12 = v6 + 8;
    v13(a1, v5);
    int v10 = *(_DWORD *)(v12 + 76);
    size_t v11 = *(void *)(v12 + 56);
  }
  if (v10) {
    size_t v14 = v11;
  }
  else {
    size_t v14 = v11 + 1;
  }
  memcpy(a1, a2, v14);
  return a1;
}

uint64_t sub_1B5774(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  unsigned int v6 = v5 - 1;
  if (!v5) {
    unsigned int v6 = 0;
  }
  uint64_t v7 = *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  if (!v5) {
    ++v7;
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v6;
  if (a2 > v6)
  {
    char v9 = 8 * v7;
    if (v7 > 3) {
      goto LABEL_8;
    }
    unsigned int v11 = ((v8 + ~(-1 << v9)) >> v9) + 1;
    if (HIWORD(v11))
    {
      int v10 = *(_DWORD *)((char *)a1 + v7);
      if (v10) {
        goto LABEL_15;
      }
    }
    else
    {
      if (v11 <= 0xFF)
      {
        if (v11 < 2) {
          goto LABEL_25;
        }
LABEL_8:
        int v10 = *((unsigned __int8 *)a1 + v7);
        if (!*((unsigned char *)a1 + v7)) {
          goto LABEL_25;
        }
LABEL_15:
        int v12 = (v10 - 1) << v9;
        if (v7 > 3) {
          int v12 = 0;
        }
        if (v7)
        {
          if (v7 <= 3) {
            int v13 = v7;
          }
          else {
            int v13 = 4;
          }
          switch(v13)
          {
            case 2:
              int v14 = *a1;
              break;
            case 3:
              int v14 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
              break;
            case 4:
              int v14 = *(_DWORD *)a1;
              break;
            default:
              int v14 = *(unsigned __int8 *)a1;
              break;
          }
        }
        else
        {
          int v14 = 0;
        }
        return v6 + (v14 | v12) + 1;
      }
      int v10 = *(unsigned __int16 *)((char *)a1 + v7);
      if (*(unsigned __int16 *)((char *)a1 + v7)) {
        goto LABEL_15;
      }
    }
  }
LABEL_25:
  if (v5 < 2) {
    return 0;
  }
  unsigned int v16 = (*(uint64_t (**)(void))(v4 + 48))();
  if (v16 >= 2) {
    return v16 - 1;
  }
  else {
    return 0;
  }
}

void sub_1B5914(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  int v6 = 0;
  uint64_t v7 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v8 = *(_DWORD *)(v7 + 84);
  unsigned int v9 = v8 - 1;
  if (v8)
  {
    size_t v10 = *(void *)(v7 + 64);
  }
  else
  {
    unsigned int v9 = 0;
    size_t v10 = *(void *)(v7 + 64) + 1;
  }
  BOOL v11 = a3 >= v9;
  unsigned int v12 = a3 - v9;
  if (v12 == 0 || !v11)
  {
LABEL_13:
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  if (v10 > 3)
  {
    int v6 = 1;
    if (v9 < a2) {
      goto LABEL_14;
    }
    goto LABEL_21;
  }
  unsigned int v13 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
  if (!HIWORD(v13))
  {
    if (v13 >= 0x100) {
      int v6 = 2;
    }
    else {
      int v6 = v13 > 1;
    }
    goto LABEL_13;
  }
  int v6 = 4;
  if (v9 < a2)
  {
LABEL_14:
    unsigned int v14 = ~v9 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v16 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v16;
          a1[2] = BYTE2(v16);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v16;
        }
        else
        {
          *a1 = v16;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v6)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_39;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
LABEL_21:
  switch(v6)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_26;
    case 3:
LABEL_39:
      __break(1u);
      JUMPOUT(0x1B5B50);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_25;
    default:
LABEL_25:
      if (a2)
      {
LABEL_26:
        if (v8 >= 2)
        {
          uint64_t v17 = *(void (**)(void))(v7 + 56);
          v17();
        }
      }
      return;
  }
}

uint64_t sub_1B5B78(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(uint64_t, uint64_t))(*(void *)(*(void *)(a2 + 24) - 8) + 48))(a1, 1);
}

uint64_t sub_1B5BA8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(*(void *)(a3 + 24) - 8) + 56))(a1, a2, 1);
}

uint64_t type metadata accessor for AccessManager.Result()
{
  return sub_187654();
}

uint64_t sub_1B5BF0()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

void *sub_1B5C8C(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = (void *)a1;
  uint64_t v5 = *(void *)(a3 + 24);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(_DWORD *)(v6 + 80);
  if (v7 > 7
    || (*(_DWORD *)(v6 + 80) & 0x100000) != 0
    || ((v7 + 40) & (unint64_t)~v7) + *(void *)(v6 + 64) > 0x18)
  {
    uint64_t v10 = *a2;
    *uint64_t v4 = *a2;
    uint64_t v4 = (void *)(v10 + ((v7 & 0xF8 ^ 0x1F8) & (v7 + 16)));
    swift_retain();
  }
  else
  {
    long long v11 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v11;
    (**(void (***)(uint64_t, uint64_t *))(v11 - 8))(a1, a2);
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v6 + 16))(((unint64_t)v4 + v7 + 40) & ~v7, ((unint64_t)a2 + v7 + 40) & ~v7, v5);
  }
  return v4;
}

uint64_t sub_1B5DC4(uint64_t a1, uint64_t a2)
{
  sub_1264C(a1);
  uint64_t v4 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = (a1 + *(unsigned __int8 *)(v4 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

uint64_t sub_1B5E34(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 16))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t *sub_1B5EE0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_531C8(a1, a2);
  uint64_t v6 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v6 + 24))(((unint64_t)a1 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80), ((unint64_t)a2 + *(unsigned __int8 *)(v6 + 80) + 40) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80));
  return a1;
}

uint64_t sub_1B5F5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v5 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v5 + 32))((*(unsigned __int8 *)(v5 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80), (*(unsigned __int8 *)(v5 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));
  return a1;
}

uint64_t sub_1B5FD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_1264C(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  uint64_t v7 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v7 + 40))((*(unsigned __int8 *)(v7 + 80) + 40 + a1) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80), (*(unsigned __int8 *)(v7 + 80) + 40 + a2) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80));
  return a1;
}

uint64_t sub_1B6060(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 24) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 40) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 24) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((unint64_t)a1 + v6 + 40) & ~v6);
      }
      unint64_t v15 = *((void *)a1 + 3);
      if (v15 >= 0xFFFFFFFF) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_1B6200(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 24) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 40) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 24) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x1B646CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v18 = (unint64_t)&a1[v9 + 40] & ~v9;
          uint64_t v19 = *(void (**)(unint64_t))(v6 + 56);
          v19(v18);
        }
        else if ((a2 & 0x80000000) != 0)
        {
          *(_OWORD *)(a1 + 8) = 0u;
          *(_OWORD *)(a1 + 24) = 0u;
          *(void *)a1 = a2 ^ 0x80000000;
        }
        else
        {
          *((void *)a1 + 3) = a2 - 1;
        }
      }
      return;
  }
}

uint64_t sub_1B6494(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FBC60();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))(a1, 1, v6) != 1)
  {
    sub_1FBC50();
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(a1, v6);
    if (!*(void *)(a3 + 16)) {
      goto LABEL_5;
    }
    goto LABEL_3;
  }
  sub_989E0(a1);
  if (*(void *)(a3 + 16))
  {
LABEL_3:
    swift_getObjectType();
    swift_unknownObjectRetain();
    sub_1FBBD0();
    swift_unknownObjectRelease();
  }
LABEL_5:
  uint64_t v8 = swift_allocObject();
  *(void *)(v8 + 16) = a2;
  *(void *)(v8 + 24) = a3;
  return swift_task_create();
}

uint64_t sub_1B6638()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_273348);
  sub_6DBC8(v0, (uint64_t)qword_273348);
  return sub_1FB420();
}

uint64_t static Logger.historyServiceStress.getter@<X0>(uint64_t a1@<X8>)
{
  if (qword_26C3B8 != -1) {
    swift_once();
  }
  uint64_t v2 = sub_1FB430();
  uint64_t v3 = sub_6DBC8(v2, (uint64_t)qword_273348);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v2 - 8) + 16);

  return v4(a1, v3, v2);
}

Swift::Void __swiftcall BookHistoryServiceStressTest.fetchBookHistoryForStressTesting()()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_12124(&qword_26D908);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1FBC60();
  uint64_t v6 = *(void *)(v5 - 8);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
  uint64_t v7 = (void *)swift_allocObject();
  uint64_t v7[2] = 0;
  v7[3] = 0;
  v7[4] = v1;
  int v8 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5);
  swift_retain();
  if (v8 == 1)
  {
    sub_989E0((uint64_t)v4);
    uint64_t v9 = 0;
    uint64_t v10 = 0;
  }
  else
  {
    sub_1FBC50();
    (*(void (**)(char *, uint64_t))(v6 + 8))(v4, v5);
    if (v7[2])
    {
      swift_getObjectType();
      swift_unknownObjectRetain();
      uint64_t v9 = sub_1FBBD0();
      uint64_t v10 = v11;
      swift_unknownObjectRelease();
    }
    else
    {
      uint64_t v9 = 0;
      uint64_t v10 = 0;
    }
  }
  uint64_t v12 = swift_allocObject();
  *(void *)(v12 + 16) = &unk_273368;
  *(void *)(v12 + 24) = v7;
  if (v10 | v9)
  {
    v13[0] = 0;
    v13[1] = 0;
    v13[2] = v9;
    v13[3] = v10;
  }
  swift_task_create();
  swift_release();
}

uint64_t sub_1B699C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[428] = a4;
  uint64_t v5 = sub_1FB0E0();
  v4[429] = v5;
  v4[430] = *(void *)(v5 - 8);
  v4[431] = swift_task_alloc();
  v4[432] = swift_task_alloc();
  v4[433] = swift_task_alloc();
  return _swift_task_switch(sub_1B6A78, 0, 0);
}

uint64_t sub_1B6A78()
{
  if (qword_26C3B8 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1FB430();
  v0[434] = sub_6DBC8(v1, (uint64_t)qword_273348);
  uint64_t v2 = sub_1FB410();
  os_log_type_t v3 = sub_1FBDC0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl(&dword_0, v2, v3, "Beginning to fetch book histories", v4, 2u);
    swift_slowDealloc();
  }
  uint64_t v5 = (void *)v0[428];

  uint64_t v6 = v5 + 7;
  uint64_t v7 = v5[10];
  uint64_t v8 = v5[11];
  sub_5D64(v6, v7);
  uint64_t v11 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v8 + 16) + **(int **)(v8 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  v0[435] = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1B6C48;
  return v11(v0 + 2, v7, v8);
}

uint64_t sub_1B6C48()
{
  *(void *)(*(void *)v1 + 3488) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1B71CC;
  }
  else {
    uint64_t v2 = sub_1B6D5C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1B6D5C()
{
  uint64_t v1 = (void *)v0[428];
  memcpy(v0 + 282, v0 + 2, 0x460uLL);
  sub_1FB0D0();
  uint64_t v2 = v1 + 2;
  uint64_t v3 = v1[5];
  uint64_t v4 = v1[6];
  sub_5D64(v2, v3);
  uint64_t v5 = sub_507C4((uint64_t)&off_2528E8);
  v0[437] = v5;
  memcpy(v0 + 142, v0 + 282, 0x460uLL);
  uint64_t v6 = (void *)swift_task_alloc();
  v0[438] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1B6E74;
  return BookHistoryServiceType.fetchBookHistory(for:limit:configuration:)(v5, 0x7FFFFFFFFFFFFFFFLL, v0 + 142, v3, v4);
}

uint64_t sub_1B6E74()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 3512) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    uint64_t v3 = sub_1B73CC;
  }
  else
  {
    swift_bridgeObjectRelease();
    sub_11D3C(v2 + 2256);
    uint64_t v3 = sub_1B6FCC;
  }
  return _swift_task_switch(v3, 0, 0);
}

uint64_t sub_1B6FCC()
{
  (*(void (**)(void, void, void))(v0[430] + 16))(v0[432], v0[433], v0[429]);
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDC0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v15 = v0[432];
    uint64_t v3 = v0[431];
    uint64_t v4 = v0[430];
    uint64_t v5 = v0[429];
    uint64_t v6 = (uint8_t *)swift_slowAlloc();
    *(_DWORD *)uint64_t v6 = 134217984;
    sub_1FB0D0();
    sub_1FB040();
    uint64_t v8 = v7;
    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v4 + 8);
    v9(v3, v5);
    v0[427] = v8;
    sub_1FBED0();
    v9(v15, v5);
    _os_log_impl(&dword_0, v1, v2, "Finished fetching book histories.  Total time=%f", v6, 0xCu);
    swift_slowDealloc();
  }
  else
  {
    uint64_t v10 = v0[432];
    uint64_t v11 = v0[430];
    uint64_t v12 = v0[429];

    uint64_t v9 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v9(v10, v12);
  }
  v9(v0[433], v0[429]);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  int v13 = (uint64_t (*)(void))v0[1];
  return v13();
}

uint64_t sub_1B71CC()
{
  uint64_t v9 = v0;
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDA0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_1FC780();
    *(void *)(v0 + 3400) = sub_D5890(v4, v5, &v8);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Error fetching book history: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_1B73CC()
{
  uint64_t v9 = v0;
  (*(void (**)(void, void))(v0[430] + 8))(v0[433], v0[429]);
  sub_11D3C((uint64_t)(v0 + 282));
  swift_errorRetain();
  swift_errorRetain();
  uint64_t v1 = sub_1FB410();
  os_log_type_t v2 = sub_1FBDA0();
  if (os_log_type_enabled(v1, v2))
  {
    uint64_t v3 = (uint8_t *)swift_slowAlloc();
    uint64_t v8 = swift_slowAlloc();
    *(_DWORD *)uint64_t v3 = 136315138;
    swift_getErrorValue();
    uint64_t v4 = sub_1FC780();
    v0[425] = sub_D5890(v4, v5, &v8);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    swift_errorRelease();
    _os_log_impl(&dword_0, v1, v2, "Error fetching book history: %s", v3, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_errorRelease();
  }
  else
  {
    swift_errorRelease();
    swift_errorRelease();
    swift_errorRelease();
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v6 = (uint64_t (*)(void))v0[1];
  return v6();
}

uint64_t sub_1B75F4()
{
  swift_unknownObjectRelease();
  swift_release();

  return _swift_deallocObject(v0, 40, 7);
}

uint64_t sub_1B7634(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  *uint64_t v7 = v2;
  v7[1] = sub_5958;
  return sub_1B699C(a1, v4, v5, v6);
}

uint64_t BookHistoryServiceStressTest.deinit()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  return v0;
}

void sub_1B7710()
{
}

uint64_t sub_1B7734(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_98BD4;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_273370 + dword_273370);
  return v6(a1, v4);
}

uint64_t dispatch thunk of BookHistoryServiceStressTestType.fetchBookHistoryForStressTesting()(uint64_t a1, uint64_t a2)
{
  return (*(uint64_t (**)(void))(a2 + 8))();
}

uint64_t type metadata accessor for BookHistoryServiceStressTest()
{
  return self;
}

uint64_t method lookup function for BookHistoryServiceStressTest(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookHistoryServiceStressTest);
}

uint64_t sub_1B783C()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1B7874(uint64_t a1)
{
  uint64_t v4 = *(int **)(v1 + 16);
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_5958;
  uint64_t v6 = (uint64_t (*)(uint64_t, int *))((char *)&dword_273370 + dword_273370);
  return v6(a1, v4);
}

uint64_t FrameworkAssembly.assemblies.getter()
{
  return swift_bridgeObjectRetain();
}

id FrameworkAssembly.init()()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v2 = OBJC_IVAR___BPAssembly_assemblies;
  sub_12124(&qword_273438);
  uint64_t v3 = swift_allocObject();
  *(_OWORD *)(v3 + 16) = xmmword_212DB0;
  uint64_t v4 = type metadata accessor for Assembly();
  uint64_t v5 = swift_allocObject();
  *(void *)(v3 + 56) = v4;
  *(void *)(v3 + 64) = sub_1B7CA8(&qword_273440, (void (*)(uint64_t))type metadata accessor for Assembly);
  *(void *)(v3 + 32) = v5;
  uint64_t v6 = type metadata accessor for AuthorRecommendationServiceAssembly();
  uint64_t v7 = swift_allocObject();
  *(void *)(v3 + 96) = v6;
  *(void *)(v3 + 104) = sub_1B7CA8(&qword_273448, (void (*)(uint64_t))type metadata accessor for AuthorRecommendationServiceAssembly);
  *(void *)(v3 + 72) = v7;
  uint64_t v8 = type metadata accessor for CollectionServiceAssembly();
  uint64_t v9 = swift_allocObject();
  *(void *)(v3 + 136) = v8;
  *(void *)(v3 + 144) = sub_1B7CA8(&qword_273450, (void (*)(uint64_t))type metadata accessor for CollectionServiceAssembly);
  *(void *)(v3 + 112) = v9;
  uint64_t v10 = type metadata accessor for GenreRecommendationServiceAssembly();
  uint64_t v11 = swift_allocObject();
  *(void *)(v3 + 176) = v10;
  *(void *)(v3 + 184) = sub_1B7CA8(&qword_273458, (void (*)(uint64_t))type metadata accessor for GenreRecommendationServiceAssembly);
  *(void *)(v3 + 152) = v11;
  uint64_t v12 = type metadata accessor for MediaTypeRecommendationServiceAssembly();
  uint64_t v13 = swift_allocObject();
  *(void *)(v3 + 216) = v12;
  *(void *)(v3 + 224) = sub_1B7CA8(&qword_273460, (void (*)(uint64_t))type metadata accessor for MediaTypeRecommendationServiceAssembly);
  *(void *)(v3 + 192) = v13;
  uint64_t v14 = type metadata accessor for MediaTypesRecommendationServiceAssembly();
  uint64_t v15 = swift_allocObject();
  *(void *)(v3 + 256) = v14;
  *(void *)(v3 + 264) = sub_1B7CA8(&qword_273468, (void (*)(uint64_t))type metadata accessor for MediaTypesRecommendationServiceAssembly);
  *(void *)(v3 + 232) = v15;
  uint64_t v16 = type metadata accessor for ScorerAssembly();
  uint64_t v17 = swift_allocObject();
  *(void *)(v3 + 296) = v16;
  *(void *)(v3 + 304) = sub_1B7CA8(&qword_273470, (void (*)(uint64_t))type metadata accessor for ScorerAssembly);
  *(void *)(v3 + 272) = v17;
  uint64_t v18 = type metadata accessor for TabiAssembly();
  uint64_t v19 = swift_allocObject();
  *(void *)(v3 + 336) = v18;
  *(void *)(v3 + 344) = sub_1B7CA8(&qword_273478, (void (*)(uint64_t))type metadata accessor for TabiAssembly);
  *(void *)(v3 + 312) = v19;
  *(void *)&v0[v2] = v3;
  v21.receiver = v0;
  v21.super_class = ObjectType;
  return [super init];
}

uint64_t sub_1B7CA8(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1B7D24()
{
  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for FrameworkAssembly()
{
  return self;
}

BooksPersonalization::SeedBasedRecommendationSource_optional __swiftcall SeedBasedRecommendationSource.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2573E8;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

_UNKNOWN **static SeedBasedRecommendationSource.allCases.getter()
{
  return &off_257450;
}

unint64_t sub_1B7DC8()
{
  unint64_t result = qword_2734A8;
  if (!qword_2734A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2734A8);
  }
  return result;
}

BooksPersonalization::SeedBasedRecommendationSource_optional sub_1B7E1C(Swift::String *a1)
{
  return SeedBasedRecommendationSource.init(rawValue:)(*a1);
}

unint64_t sub_1B7E2C()
{
  unint64_t result = qword_2734B0;
  if (!qword_2734B0)
  {
    sub_121C4(&qword_2734B8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2734B0);
  }
  return result;
}

void sub_1B7E88(void *a1@<X8>)
{
  *a1 = &off_257478;
}

unint64_t sub_1B7E9C()
{
  unint64_t result = qword_2734C0;
  if (!qword_2734C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2734C0);
  }
  return result;
}

ValueMetadata *type metadata accessor for SeedBasedRecommendationSource()
{
  return &type metadata for SeedBasedRecommendationSource;
}

uint64_t sub_1B7F04@<X0>(unsigned __int8 *a1@<X0>, uint64_t a2@<X8>)
{
  unsigned __int8 v4 = *a1;
  swift_beginAccess();
  uint64_t v5 = *(void *)(v2 + 16);
  if (*(void *)(v5 + 16) && (unint64_t v6 = sub_4CE54(v4), (v7 & 1) != 0))
  {
    sub_51B70(*(void *)(v5 + 56) + 40 * v6, (uint64_t)v10);
    sub_37C30(v10, a2);
    return swift_endAccess();
  }
  else
  {
    swift_endAccess();
    sub_1B7FF0();
    swift_allocError();
    *uint64_t v9 = v4;
    return swift_willThrow();
  }
}

uint64_t type metadata accessor for SeedBasedRecommendationServiceResolver()
{
  return self;
}

unint64_t sub_1B7FF0()
{
  unint64_t result = qword_273568;
  if (!qword_273568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273568);
  }
  return result;
}

unsigned char *_s20BooksPersonalization29SeedBasedRecommendationSourceOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1B8110);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for SeedBasedRecommendationServiceResolver.Errors()
{
  return &type metadata for SeedBasedRecommendationServiceResolver.Errors;
}

Swift::Int sub_1B8148(void **a1)
{
  uint64_t v2 = *(void *)(sub_12124(&qword_26D530) - 8);
  int v3 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    int v3 = (void *)sub_124714(v3);
  }
  uint64_t v4 = v3[2];
  v6[0] = (uint64_t)v3 + ((*(unsigned __int8 *)(v2 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80));
  v6[1] = v4;
  Swift::Int result = sub_1B8738(v6);
  *a1 = v3;
  return result;
}

uint64_t sub_1B81F4(uint64_t a1)
{
  v2[8] = a1;
  v2[9] = v1;
  sub_12124(&qword_273620);
  v2[10] = swift_task_alloc();
  return _swift_task_switch(sub_1B8288, 0, 0);
}

uint64_t sub_1B8288()
{
  uint64_t v30 = v0;
  uint64_t v1 = (void *)v0[9];
  uint64_t v2 = swift_bridgeObjectRetain();
  int v3 = sub_135D04(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = v1 + 2;
  uint64_t v5 = v1[5];
  uint64_t v6 = v1[6];
  sub_5D64(v4, v5);
  char v7 = *(void (**)(Swift::Int (*)(uint64_t), void, void *, ValueMetadata *, unint64_t, uint64_t, uint64_t))(v6 + 8);
  unint64_t v8 = sub_55738();
  v7(sub_1B85B0, 0, v3, &type metadata for Book.MediaType, v8, v5, v6);
  uint64_t v9 = swift_bridgeObjectRetain();
  uint64_t v10 = sub_4A970(v9);
  swift_bridgeObjectRelease();
  long long v29 = v10;
  sub_1B8148(&v29);
  swift_bridgeObjectRelease();
  uint64_t v11 = v29;
  uint64_t v12 = v29[2];
  uint64_t v13 = v0[10];
  if (v12)
  {
    uint64_t v14 = v12 - 1;
    uint64_t v15 = sub_12124(&qword_26D530);
    uint64_t v16 = *(void *)(v15 - 8);
    sub_1B86D0((uint64_t)v11+ ((*(unsigned __int8 *)(v16 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v16 + 80))+ *(void *)(v16 + 72) * v14, v13);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v16 + 56))(v13, 0, 1, v15);
  }
  else
  {
    uint64_t v17 = sub_12124(&qword_26D530);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 56))(v13, 1, 1, v17);
  }
  uint64_t v18 = v0[10];
  swift_release();
  uint64_t v19 = sub_12124(&qword_26D530);
  int v20 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 48))(v18, 1, v19);
  objc_super v21 = (char *)v0[10];
  if (v20 == 1)
  {
    swift_bridgeObjectRelease();
    sub_55F38((uint64_t)v21, &qword_273620);
    unint64_t v22 = _swiftEmptyArrayStorage;
  }
  else
  {
    char v23 = *v21;
    sub_1111A8((uint64_t)&v21[*(int *)(v19 + 48)]);
    sub_12124(&qword_273628);
    uint64_t inited = swift_initStackObject();
    *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
    *(unsigned char *)(inited + 32) = v23;
    uint64_t v25 = sub_511A4((uint64_t)v3);
    swift_bridgeObjectRelease();
    *(void *)(inited + 40) = v25;
    unint64_t v22 = (void *)inited;
  }
  unint64_t v26 = sub_160B74((uint64_t)v22);
  swift_task_dealloc();
  uint64_t v27 = (uint64_t (*)(unint64_t))v0[1];
  return v27(v26);
}

Swift::Int sub_1B85B0(uint64_t a1)
{
  char v1 = *(unsigned char *)(a1 + 8);
  sub_12124(&qword_26C510);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_1FD2A0;
  *(unsigned char *)(inited + 32) = v1;
  Swift::Int v3 = sub_BD5F4(inited);
  swift_setDeallocating();
  return v3;
}

uint64_t type metadata accessor for SingleJointMediaTypeRecommendationService()
{
  return self;
}

uint64_t sub_1B8638(uint64_t a1)
{
  Swift::Int v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *Swift::Int v3 = v1;
  v3[1] = sub_B06F4;
  return sub_1B81F4(a1);
}

uint64_t sub_1B86D0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

Swift::Int sub_1B8738(uint64_t *a1)
{
  uint64_t v156 = sub_12124(&qword_26D530);
  uint64_t v145 = *(void *)(v156 - 8);
  uint64_t v3 = __chkstk_darwin(v156);
  uint64_t v142 = (uint64_t)&v138 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v157 = (uint64_t)&v138 - v6;
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v154 = (char *)&v138 - v8;
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v153 = (char *)&v138 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v152 = (char *)&v138 - v12;
  __chkstk_darwin(v11);
  unint64_t v151 = (char *)&v138 - v13;
  Swift::Int v14 = a1[1];
  Swift::Int result = sub_1FC570(v14);
  if (result >= v14)
  {
    if (v14 < 0) {
      goto LABEL_138;
    }
    if (v14) {
      return sub_1B9264(0, v14, 1, a1);
    }
    return result;
  }
  if (v14 >= 0) {
    uint64_t v16 = v14;
  }
  else {
    uint64_t v16 = v14 + 1;
  }
  if (v14 < -1) {
    goto LABEL_146;
  }
  uint64_t v155 = a1;
  Swift::Int v140 = result;
  uint64_t v146 = v1;
  if (v14 < 2)
  {
    int v20 = (char *)_swiftEmptyArrayStorage;
    unint64_t v144 = (unint64_t)_swiftEmptyArrayStorage
         + ((*(unsigned __int8 *)(v145 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v145 + 80));
    unint64_t v139 = _swiftEmptyArrayStorage;
    if (v14 != 1)
    {
      unint64_t v22 = _swiftEmptyArrayStorage[2];
LABEL_104:
      if (v22 >= 2)
      {
        uint64_t v131 = *v155;
        do
        {
          unint64_t v132 = v22 - 2;
          if (v22 < 2) {
            goto LABEL_133;
          }
          if (!v131) {
            goto LABEL_145;
          }
          uint64_t v133 = *(void *)&v20[16 * v132 + 32];
          uint64_t v134 = *(void *)&v20[16 * v22 + 24];
          uint64_t v135 = v146;
          sub_1B9570(v131 + *(void *)(v145 + 72) * v133, v131 + *(void *)(v145 + 72) * *(void *)&v20[16 * v22 + 16], v131 + *(void *)(v145 + 72) * v134, v144);
          uint64_t v146 = v135;
          if (v135) {
            break;
          }
          if (v134 < v133) {
            goto LABEL_134;
          }
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            int v20 = sub_70B24((uint64_t)v20);
          }
          if (v132 >= *((void *)v20 + 2)) {
            goto LABEL_135;
          }
          Swift::Int v136 = &v20[16 * v132 + 32];
          *(void *)Swift::Int v136 = v133;
          *((void *)v136 + 1) = v134;
          unint64_t v137 = *((void *)v20 + 2);
          if (v22 > v137) {
            goto LABEL_136;
          }
          memmove(&v20[16 * v22 + 16], &v20[16 * v22 + 32], 16 * (v137 - v22));
          *((void *)v20 + 2) = v137 - 1;
          unint64_t v22 = v137 - 1;
        }
        while (v137 > 2);
      }
LABEL_115:
      swift_bridgeObjectRelease();
      v139[2] = 0;
      return swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v17 = v16 >> 1;
    uint64_t v18 = sub_1FBB40();
    *(void *)(v18 + 16) = v17;
    uint64_t v19 = *(unsigned __int8 *)(v145 + 80);
    unint64_t v139 = (void *)v18;
    unint64_t v144 = v18 + ((v19 + 32) & ~v19);
  }
  Swift::Int v21 = 0;
  int v20 = (char *)_swiftEmptyArrayStorage;
  while (1)
  {
    Swift::Int v23 = v21;
    Swift::Int v24 = v21 + 1;
    if (v21 + 1 >= v14)
    {
      ++v21;
      char v49 = v155;
    }
    else
    {
      uint64_t v25 = *v155;
      Swift::Int v26 = *(void *)(v145 + 72);
      uint64_t v27 = *v155 + v26 * v24;
      Swift::Int v143 = v21;
      char v28 = v151;
      sub_1B86D0(v27, (uint64_t)v151);
      long long v29 = v152;
      sub_1B86D0(v25 + v26 * v143, (uint64_t)v152);
      uint64_t v30 = v156;
      uint64_t v31 = *(int *)(v156 + 48);
      BOOL v32 = (double *)&v153[v31];
      *uint64_t v153 = *v28;
      sub_557E0((uint64_t)&v28[v31], (uint64_t)v32);
      double v33 = *v32;
      sub_1111A8((uint64_t)v32);
      uint64_t v34 = *(int *)(v30 + 48);
      long long v35 = (double *)&v154[v34];
      *uint64_t v154 = *v29;
      sub_557E0((uint64_t)&v29[v34], (uint64_t)v35);
      double v36 = *v35;
      sub_1111A8((uint64_t)v35);
      sub_55F38((uint64_t)v29, &qword_26D530);
      uint64_t v37 = (uint64_t)v28;
      Swift::Int v23 = v143;
      sub_55F38(v37, &qword_26D530);
      Swift::Int v21 = v23 + 2;
      uint64_t v147 = v25;
      Swift::Int v150 = v26;
      if (v23 + 2 < v14)
      {
        uint64_t v38 = v25;
        Swift::Int v148 = v26 * v21;
        Swift::Int v149 = v26 * v24;
        while (1)
        {
          Swift::Int v39 = v14;
          uint64_t v40 = v151;
          sub_1B86D0(v38 + v148, (uint64_t)v151);
          uint64_t v41 = v152;
          sub_1B86D0(v38 + v149, (uint64_t)v152);
          uint64_t v42 = v156;
          uint64_t v43 = *(int *)(v156 + 48);
          uint64_t v44 = (double *)&v153[v43];
          *uint64_t v153 = *v40;
          sub_557E0((uint64_t)&v40[v43], (uint64_t)v44);
          double v45 = *v44;
          sub_1111A8((uint64_t)v44);
          uint64_t v46 = *(int *)(v42 + 48);
          uint64_t v47 = (double *)&v154[v46];
          *uint64_t v154 = *v41;
          sub_557E0((uint64_t)&v41[v46], (uint64_t)v47);
          double v48 = *v47;
          sub_1111A8((uint64_t)v47);
          sub_55F38((uint64_t)v41, &qword_26D530);
          sub_55F38((uint64_t)v40, &qword_26D530);
          if (v33 < v36 == v45 >= v48) {
            break;
          }
          ++v21;
          Swift::Int v26 = v150;
          v38 += v150;
          Swift::Int v14 = v39;
          if (v39 == v21)
          {
            Swift::Int v21 = v39;
            Swift::Int v23 = v143;
            goto LABEL_23;
          }
        }
        Swift::Int v14 = v39;
        Swift::Int v23 = v143;
        Swift::Int v26 = v150;
      }
LABEL_23:
      char v49 = v155;
      if (v33 < v36)
      {
        if (v21 < v23) {
          goto LABEL_139;
        }
        if (v23 < v21)
        {
          Swift::Int v149 = v14;
          unint64_t v138 = v20;
          uint64_t v50 = 0;
          Swift::Int v51 = v23;
          uint64_t v52 = v26 * (v21 - 1);
          Swift::Int v53 = v21 * v26;
          Swift::Int v54 = v51;
          uint64_t v55 = v51 * v26;
          do
          {
            if (v54 != v21 + v50 - 1)
            {
              uint64_t v56 = v147;
              if (!v147) {
                goto LABEL_144;
              }
              unint64_t v57 = v147 + v55;
              uint64_t v58 = v147 + v52;
              sub_1B9B0C(v147 + v55, v142);
              if (v55 < v52 || v57 >= v56 + v53)
              {
                swift_arrayInitWithTakeFrontToBack();
                Swift::Int v26 = v150;
              }
              else
              {
                Swift::Int v26 = v150;
                if (v55 != v52) {
                  swift_arrayInitWithTakeBackToFront();
                }
              }
              sub_1B9B0C(v142, v58);
              char v49 = v155;
            }
            ++v54;
            --v50;
            v52 -= v26;
            v53 -= v26;
            v55 += v26;
          }
          while (v54 < v21 + v50);
          int v20 = v138;
          Swift::Int v14 = v149;
          Swift::Int v23 = v143;
        }
      }
    }
    if (v21 < v14)
    {
      if (__OFSUB__(v21, v23)) {
        goto LABEL_137;
      }
      if (v21 - v23 < v140) {
        break;
      }
    }
LABEL_55:
    if (v21 < v23) {
      goto LABEL_132;
    }
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      int v20 = sub_7004C(0, *((void *)v20 + 2) + 1, 1, v20);
    }
    unint64_t v80 = *((void *)v20 + 2);
    unint64_t v79 = *((void *)v20 + 3);
    unint64_t v22 = v80 + 1;
    if (v80 >= v79 >> 1) {
      int v20 = sub_7004C((char *)(v79 > 1), v80 + 1, 1, v20);
    }
    *((void *)v20 + 2) = v22;
    char v81 = v20 + 32;
    double v82 = &v20[16 * v80 + 32];
    *(void *)double v82 = v23;
    *((void *)v82 + 1) = v21;
    if (v80)
    {
      while (1)
      {
        unint64_t v83 = v22 - 1;
        if (v22 >= 4)
        {
          double v88 = &v81[16 * v22];
          uint64_t v89 = *((void *)v88 - 8);
          uint64_t v90 = *((void *)v88 - 7);
          BOOL v94 = __OFSUB__(v90, v89);
          uint64_t v91 = v90 - v89;
          if (v94) {
            goto LABEL_121;
          }
          uint64_t v93 = *((void *)v88 - 6);
          uint64_t v92 = *((void *)v88 - 5);
          BOOL v94 = __OFSUB__(v92, v93);
          uint64_t v86 = v92 - v93;
          char v87 = v94;
          if (v94) {
            goto LABEL_122;
          }
          unint64_t v95 = v22 - 2;
          long long v96 = &v81[16 * v22 - 32];
          uint64_t v98 = *(void *)v96;
          uint64_t v97 = *((void *)v96 + 1);
          BOOL v94 = __OFSUB__(v97, v98);
          uint64_t v99 = v97 - v98;
          if (v94) {
            goto LABEL_124;
          }
          BOOL v94 = __OFADD__(v86, v99);
          uint64_t v100 = v86 + v99;
          if (v94) {
            goto LABEL_127;
          }
          if (v100 >= v91)
          {
            unint64_t v118 = &v81[16 * v83];
            uint64_t v120 = *(void *)v118;
            uint64_t v119 = *((void *)v118 + 1);
            BOOL v94 = __OFSUB__(v119, v120);
            uint64_t v121 = v119 - v120;
            if (v94) {
              goto LABEL_131;
            }
            BOOL v111 = v86 < v121;
            goto LABEL_92;
          }
        }
        else
        {
          if (v22 != 3)
          {
            uint64_t v112 = *((void *)v20 + 4);
            uint64_t v113 = *((void *)v20 + 5);
            BOOL v94 = __OFSUB__(v113, v112);
            uint64_t v105 = v113 - v112;
            char v106 = v94;
            goto LABEL_86;
          }
          uint64_t v85 = *((void *)v20 + 4);
          uint64_t v84 = *((void *)v20 + 5);
          BOOL v94 = __OFSUB__(v84, v85);
          uint64_t v86 = v84 - v85;
          char v87 = v94;
        }
        if (v87) {
          goto LABEL_123;
        }
        unint64_t v95 = v22 - 2;
        uint64_t v101 = &v81[16 * v22 - 32];
        uint64_t v103 = *(void *)v101;
        uint64_t v102 = *((void *)v101 + 1);
        BOOL v104 = __OFSUB__(v102, v103);
        uint64_t v105 = v102 - v103;
        char v106 = v104;
        if (v104) {
          goto LABEL_126;
        }
        uint64_t v107 = &v81[16 * v83];
        uint64_t v109 = *(void *)v107;
        uint64_t v108 = *((void *)v107 + 1);
        BOOL v94 = __OFSUB__(v108, v109);
        uint64_t v110 = v108 - v109;
        if (v94) {
          goto LABEL_129;
        }
        if (__OFADD__(v105, v110)) {
          goto LABEL_130;
        }
        if (v105 + v110 >= v86)
        {
          BOOL v111 = v86 < v110;
LABEL_92:
          if (v111) {
            unint64_t v83 = v95;
          }
          goto LABEL_94;
        }
LABEL_86:
        if (v106) {
          goto LABEL_125;
        }
        uint64_t v114 = &v81[16 * v83];
        uint64_t v116 = *(void *)v114;
        uint64_t v115 = *((void *)v114 + 1);
        BOOL v94 = __OFSUB__(v115, v116);
        uint64_t v117 = v115 - v116;
        if (v94) {
          goto LABEL_128;
        }
        if (v117 < v105) {
          goto LABEL_14;
        }
LABEL_94:
        Swift::Int v122 = v21;
        unint64_t v123 = v83 - 1;
        if (v83 - 1 >= v22)
        {
          __break(1u);
LABEL_118:
          __break(1u);
LABEL_119:
          __break(1u);
LABEL_120:
          __break(1u);
LABEL_121:
          __break(1u);
LABEL_122:
          __break(1u);
LABEL_123:
          __break(1u);
LABEL_124:
          __break(1u);
LABEL_125:
          __break(1u);
LABEL_126:
          __break(1u);
LABEL_127:
          __break(1u);
LABEL_128:
          __break(1u);
LABEL_129:
          __break(1u);
LABEL_130:
          __break(1u);
LABEL_131:
          __break(1u);
LABEL_132:
          __break(1u);
LABEL_133:
          __break(1u);
LABEL_134:
          __break(1u);
LABEL_135:
          __break(1u);
LABEL_136:
          __break(1u);
LABEL_137:
          __break(1u);
LABEL_138:
          __break(1u);
LABEL_139:
          __break(1u);
LABEL_140:
          __break(1u);
          goto LABEL_141;
        }
        if (!*v155) {
          goto LABEL_143;
        }
        unint64_t v124 = v20;
        unint64_t v125 = &v81[16 * v123];
        uint64_t v126 = *(void *)v125;
        uint64_t v127 = &v81[16 * v83];
        uint64_t v128 = *((void *)v127 + 1);
        uint64_t v129 = v146;
        sub_1B9570(*v155 + *(void *)(v145 + 72) * *(void *)v125, *v155 + *(void *)(v145 + 72) * *(void *)v127, *v155 + *(void *)(v145 + 72) * v128, v144);
        uint64_t v146 = v129;
        if (v129) {
          goto LABEL_115;
        }
        if (v128 < v126) {
          goto LABEL_118;
        }
        if (v83 > *((void *)v124 + 2)) {
          goto LABEL_119;
        }
        *(void *)unint64_t v125 = v126;
        *(void *)&v81[16 * v123 + 8] = v128;
        unint64_t v130 = *((void *)v124 + 2);
        if (v83 >= v130) {
          goto LABEL_120;
        }
        int v20 = v124;
        unint64_t v22 = v130 - 1;
        memmove(&v81[16 * v83], v127 + 16, 16 * (v130 - 1 - v83));
        *((void *)v124 + 2) = v130 - 1;
        BOOL v111 = v130 > 2;
        Swift::Int v21 = v122;
        if (!v111) {
          goto LABEL_14;
        }
      }
    }
    unint64_t v22 = 1;
LABEL_14:
    Swift::Int v14 = v155[1];
    if (v21 >= v14) {
      goto LABEL_104;
    }
  }
  if (__OFADD__(v23, v140)) {
    goto LABEL_140;
  }
  if (v23 + v140 >= v14) {
    Swift::Int v59 = v14;
  }
  else {
    Swift::Int v59 = v23 + v140;
  }
  if (v59 >= v23)
  {
    if (v21 != v59)
    {
      unint64_t v138 = v20;
      uint64_t v60 = *(void *)(v145 + 72);
      uint64_t v61 = v60 * (v21 - 1);
      uint64_t v147 = v60;
      Swift::Int v62 = v21 * v60;
      Swift::Int v143 = v23;
      Swift::Int v141 = v59;
      do
      {
        uint64_t v64 = 0;
        Swift::Int v65 = v23;
        Swift::Int v149 = v61;
        Swift::Int v150 = v21;
        Swift::Int v148 = v62;
        while (1)
        {
          uint64_t v66 = *v49;
          char v67 = v151;
          sub_1B86D0(v62 + v64 + *v49, (uint64_t)v151);
          uint64_t v68 = v61 + v64 + v66;
          BOOL v69 = v152;
          sub_1B86D0(v68, (uint64_t)v152);
          uint64_t v70 = v156;
          uint64_t v71 = *(int *)(v156 + 48);
          Swift::Int v72 = (double *)&v153[v71];
          *uint64_t v153 = *v67;
          sub_557E0((uint64_t)&v67[v71], (uint64_t)v72);
          double v73 = *v72;
          sub_1111A8((uint64_t)v72);
          uint64_t v74 = *(int *)(v70 + 48);
          uint64_t v75 = (double *)&v154[v74];
          *uint64_t v154 = *v69;
          sub_557E0((uint64_t)&v69[v74], (uint64_t)v75);
          double v76 = *v75;
          sub_1111A8((uint64_t)v75);
          sub_55F38((uint64_t)v69, &qword_26D530);
          sub_55F38((uint64_t)v67, &qword_26D530);
          if (v73 >= v76) {
            break;
          }
          uint64_t v77 = *v49;
          if (!*v49) {
            goto LABEL_142;
          }
          Swift::Int v62 = v148;
          uint64_t v61 = v149;
          uint64_t v78 = v77 + v149 + v64;
          sub_1B9B0C(v77 + v148 + v64, v157);
          swift_arrayInitWithTakeFrontToBack();
          sub_1B9B0C(v157, v78);
          v64 -= v147;
          ++v65;
          Swift::Int v63 = v150;
          char v49 = v155;
          if (v150 == v65) {
            goto LABEL_48;
          }
        }
        uint64_t v61 = v149;
        Swift::Int v63 = v150;
        Swift::Int v62 = v148;
LABEL_48:
        Swift::Int v21 = v63 + 1;
        v61 += v147;
        v62 += v147;
        Swift::Int v23 = v143;
      }
      while (v21 != v141);
      Swift::Int v21 = v141;
      int v20 = v138;
    }
    goto LABEL_55;
  }
LABEL_141:
  __break(1u);
LABEL_142:
  __break(1u);
LABEL_143:
  __break(1u);
LABEL_144:
  __break(1u);
LABEL_145:
  __break(1u);
LABEL_146:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_1B9264(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v36 = a1;
  uint64_t v41 = sub_12124(&qword_26D530);
  uint64_t v7 = __chkstk_darwin(v41);
  uint64_t v42 = (uint64_t)&v34 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v38 = (char *)&v34 - v10;
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v37 = (char *)&v34 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v34 - v14;
  uint64_t result = __chkstk_darwin(v13);
  uint64_t v19 = (char *)&v34 - v18;
  uint64_t v40 = a3;
  uint64_t v35 = a2;
  if (a3 != a2)
  {
    uint64_t v20 = *(void *)(v17 + 72);
    uint64_t v44 = v20 * (v40 - 1);
    uint64_t v39 = v20;
    uint64_t v43 = v20 * v40;
LABEL_5:
    uint64_t v21 = 0;
    uint64_t v22 = v36;
    while (1)
    {
      uint64_t v23 = *a4;
      sub_1B86D0(v43 + v21 + *a4, (uint64_t)v19);
      sub_1B86D0(v44 + v21 + v23, (uint64_t)v15);
      uint64_t v24 = v41;
      uint64_t v25 = *(int *)(v41 + 48);
      Swift::Int v26 = (double *)&v37[v25];
      unsigned char *v37 = *v19;
      sub_557E0((uint64_t)&v19[v25], (uint64_t)v26);
      double v27 = *v26;
      sub_1111A8((uint64_t)v26);
      uint64_t v28 = *(int *)(v24 + 48);
      long long v29 = (double *)&v38[v28];
      unsigned char *v38 = *v15;
      sub_557E0((uint64_t)&v15[v28], (uint64_t)v29);
      double v30 = *v29;
      sub_1111A8((uint64_t)v29);
      sub_55F38((uint64_t)v15, &qword_26D530);
      uint64_t result = sub_55F38((uint64_t)v19, &qword_26D530);
      if (v27 >= v30)
      {
LABEL_4:
        v44 += v39;
        v43 += v39;
        if (++v40 == v35) {
          return result;
        }
        goto LABEL_5;
      }
      uint64_t v31 = *a4;
      if (!*a4) {
        break;
      }
      BOOL v32 = a4;
      uint64_t v33 = v31 + v44 + v21;
      sub_1B9B0C(v31 + v43 + v21, v42);
      swift_arrayInitWithTakeFrontToBack();
      uint64_t result = sub_1B9B0C(v42, v33);
      v21 -= v39;
      ++v22;
      a4 = v32;
      if (v40 == v22) {
        goto LABEL_4;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1B9570(unint64_t a1, unint64_t a2, unint64_t a3, unint64_t a4)
{
  uint64_t v60 = sub_12124(&qword_26D530);
  uint64_t v8 = __chkstk_darwin(v60);
  uint64_t v10 = (char *)&v55 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = __chkstk_darwin(v8);
  Swift::Int v59 = (char *)&v55 - v12;
  uint64_t v13 = __chkstk_darwin(v11);
  uint64_t v15 = (char *)&v55 - v14;
  __chkstk_darwin(v13);
  uint64_t v17 = (char *)&v55 - v16;
  uint64_t v19 = *(void *)(v18 + 72);
  if (!v19)
  {
    __break(1u);
LABEL_61:
    __break(1u);
LABEL_62:
    __break(1u);
    goto LABEL_63;
  }
  unint64_t v20 = a1;
  if (a2 - a1 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_61;
  }
  int64_t v21 = a3 - a2;
  if (a3 - a2 == 0x8000000000000000 && v19 == -1) {
    goto LABEL_62;
  }
  uint64_t v22 = (uint64_t)(a2 - a1) / v19;
  unint64_t v63 = a1;
  unint64_t v62 = a4;
  uint64_t v23 = v21 / v19;
  if (v22 >= v21 / v19)
  {
    if ((v23 & 0x8000000000000000) == 0)
    {
      unint64_t v57 = a1;
      uint64_t v25 = v23 * v19;
      if (a4 < a2 || a2 + v25 <= a4)
      {
        swift_arrayInitWithTakeFrontToBack();
      }
      else if (a4 != a2)
      {
        swift_arrayInitWithTakeBackToFront();
      }
      unint64_t v56 = a4;
      unint64_t v39 = a4 + v25;
      unint64_t v61 = a4 + v25;
      unint64_t v63 = a2;
      if (v25 >= 1 && v57 < a2)
      {
        uint64_t v41 = -v19;
        do
        {
          unint64_t v58 = a3 + v41;
          sub_1B86D0(v39 + v41, (uint64_t)v17);
          unint64_t v42 = a2 + v41;
          sub_1B86D0(a2 + v41, (uint64_t)v15);
          unint64_t v43 = a3;
          uint64_t v44 = v15;
          double v45 = v10;
          uint64_t v46 = v60;
          uint64_t v47 = *(int *)(v60 + 48);
          double v48 = (double *)&v59[v47];
          *Swift::Int v59 = *v17;
          sub_557E0((uint64_t)&v17[v47], (uint64_t)v48);
          double v49 = *v48;
          sub_1111A8((uint64_t)v48);
          uint64_t v50 = *(int *)(v46 + 48);
          uint64_t v10 = v45;
          uint64_t v15 = v44;
          Swift::Int v51 = (double *)&v10[v50];
          *uint64_t v10 = *v44;
          sub_557E0((uint64_t)&v44[v50], (uint64_t)&v10[v50]);
          double v52 = *v51;
          sub_1111A8((uint64_t)v51);
          sub_55F38((uint64_t)v44, &qword_26D530);
          sub_55F38((uint64_t)v17, &qword_26D530);
          if (v49 >= v52)
          {
            unint64_t v53 = v61;
            v61 += v41;
            a3 = v58;
            if (v43 < v53 || v58 >= v53)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != v53)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            unint64_t v42 = a2;
          }
          else
          {
            a3 = v58;
            if (v43 < a2 || v58 >= a2)
            {
              swift_arrayInitWithTakeFrontToBack();
            }
            else if (v43 != a2)
            {
              swift_arrayInitWithTakeBackToFront();
            }
            v63 += v41;
          }
          unint64_t v39 = v61;
          if (v61 <= v56) {
            break;
          }
          a2 = v42;
        }
        while (v42 > v57);
      }
      goto LABEL_59;
    }
  }
  else if ((v22 & 0x8000000000000000) == 0)
  {
    uint64_t v24 = v22 * v19;
    if (a4 < v20 || v20 + v24 <= a4)
    {
      swift_arrayInitWithTakeFrontToBack();
    }
    else if (a4 != v20)
    {
      swift_arrayInitWithTakeBackToFront();
    }
    uint64_t v26 = a4;
    unint64_t v27 = a4 + v24;
    unint64_t v61 = v27;
    if (v24 >= 1 && a2 < a3)
    {
      do
      {
        sub_1B86D0(a2, (uint64_t)v17);
        sub_1B86D0(v26, (uint64_t)v15);
        uint64_t v29 = v60;
        uint64_t v30 = *(int *)(v60 + 48);
        uint64_t v31 = (double *)&v59[v30];
        *Swift::Int v59 = *v17;
        sub_557E0((uint64_t)&v17[v30], (uint64_t)v31);
        double v32 = *v31;
        sub_1111A8((uint64_t)v31);
        uint64_t v33 = *(int *)(v29 + 48);
        uint64_t v34 = (double *)&v10[v33];
        *uint64_t v10 = *v15;
        sub_557E0((uint64_t)&v15[v33], (uint64_t)&v10[v33]);
        double v35 = *v34;
        sub_1111A8((uint64_t)v34);
        sub_55F38((uint64_t)v15, &qword_26D530);
        sub_55F38((uint64_t)v17, &qword_26D530);
        unint64_t v36 = v63;
        if (v32 >= v35)
        {
          unint64_t v38 = v62 + v19;
          if (v63 < v62 || v63 >= v38)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v63 != v62)
          {
            swift_arrayInitWithTakeBackToFront();
          }
          unint64_t v62 = v38;
          unint64_t v37 = a2;
        }
        else
        {
          unint64_t v37 = a2 + v19;
          if (v63 < a2 || v63 >= v37)
          {
            swift_arrayInitWithTakeFrontToBack();
          }
          else if (v63 == a2)
          {
            unint64_t v36 = a2;
          }
          else
          {
            swift_arrayInitWithTakeBackToFront();
          }
        }
        unint64_t v63 = v36 + v19;
        if (v62 >= v27) {
          break;
        }
        uint64_t v26 = v62;
        a2 = v37;
      }
      while (v37 < a3);
    }
LABEL_59:
    sub_70208(&v63, &v62, (uint64_t *)&v61);
    return 1;
  }
LABEL_63:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_1B9B0C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D530);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

ValueMetadata *type metadata accessor for BooksBySuggestedAuthorsOptions()
{
  return &type metadata for BooksBySuggestedAuthorsOptions;
}

uint64_t dispatch thunk of BooksBySuggestedAuthorsServiceType.fetchBooks(with:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t StoreBookRating.timestamp.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v3 = v1 + *(int *)(type metadata accessor for StoreBookRating() + 24);

  return sub_1B9D20(v3, a1);
}

uint64_t type metadata accessor for StoreBookRating()
{
  uint64_t result = qword_273698;
  if (!qword_273698) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1B9D20(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26D638);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t StoreBookRating.init(storeID:rating:timestamp:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(void *)a5 = a1;
  *(void *)(a5 + 8) = a2;
  *(unsigned char *)(a5 + 16) = a3 & 1;
  uint64_t v6 = a5 + *(int *)(type metadata accessor for StoreBookRating() + 24);

  return sub_178518(a4, v6);
}

void StoreBookRating.hash(into:)()
{
  uint64_t v1 = sub_1FB0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26D638);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FC820(*(void *)v0);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt64 v8 = *(void *)(v0 + 8);
    sub_1FC800(1u);
    if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v8;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
  uint64_t v10 = type metadata accessor for StoreBookRating();
  sub_1B9D20(v0 + *(int *)(v10 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1FC800(1u);
    sub_1BB51C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1FB7A0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
}

Swift::Int StoreBookRating.hashValue.getter()
{
  uint64_t v1 = sub_1FB0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26D638);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FC7E0();
  sub_1FC820(*(void *)v0);
  if (*(unsigned char *)(v0 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt64 v8 = *(void *)(v0 + 8);
    sub_1FC800(1u);
    if ((v8 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v9 = v8;
    }
    else {
      Swift::UInt64 v9 = 0;
    }
    sub_1FC820(v9);
  }
  uint64_t v10 = type metadata accessor for StoreBookRating();
  sub_1B9D20(v0 + *(int *)(v10 + 24), (uint64_t)v7);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v2 + 48))(v7, 1, v1) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v2 + 32))(v4, v7, v1);
    sub_1FC800(1u);
    sub_1BB51C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1FB7A0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
  }
  return sub_1FC830();
}

void sub_1BA214(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26D638);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FC820(*(void *)v2);
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt64 v11 = *(void *)(v2 + 8);
    sub_1FC800(1u);
    if ((v11 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v12 = v11;
    }
    else {
      Swift::UInt64 v12 = 0;
    }
    sub_1FC820(v12);
  }
  sub_1B9D20(v2 + *(int *)(a2 + 24), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1FC800(1u);
    sub_1BB51C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1FB7A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
}

Swift::Int sub_1BA41C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26D638);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FC7E0();
  sub_1FC820(*(void *)v2);
  if (*(unsigned char *)(v2 + 16) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    Swift::UInt64 v11 = *(void *)(v2 + 8);
    sub_1FC800(1u);
    if ((v11 & 0x7FFFFFFFFFFFFFFFLL) != 0) {
      Swift::UInt64 v12 = v11;
    }
    else {
      Swift::UInt64 v12 = 0;
    }
    sub_1FC820(v12);
  }
  sub_1B9D20(v2 + *(int *)(a2 + 24), (uint64_t)v10);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v5 + 48))(v10, 1, v4) == 1)
  {
    sub_1FC800(0);
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v5 + 32))(v7, v10, v4);
    sub_1FC800(1u);
    sub_1BB51C(&qword_26D400, (void (*)(uint64_t))&type metadata accessor for Date);
    sub_1FB7A0();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  }
  return sub_1FC830();
}

BOOL _s20BooksPersonalization15StoreBookRatingV2eeoiySbAC_ACtFZ_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FB0E0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v33 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_2723C0);
  __chkstk_darwin(v8);
  uint64_t v10 = (char *)&v33 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26D638);
  uint64_t v12 = __chkstk_darwin(v11 - 8);
  uint64_t v14 = (char *)&v33 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = __chkstk_darwin(v12);
  uint64_t v17 = (char *)&v33 - v16;
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v33 - v18;
  if (*(void *)a1 != *(void *)a2) {
    return 0;
  }
  char v20 = *(unsigned char *)(a2 + 16);
  if (*(unsigned char *)(a1 + 16))
  {
    if (!*(unsigned char *)(a2 + 16)) {
      return 0;
    }
  }
  else
  {
    if (*(double *)(a1 + 8) != *(double *)(a2 + 8)) {
      char v20 = 1;
    }
    if (v20) {
      return 0;
    }
  }
  uint64_t v34 = v7;
  uint64_t v21 = v4;
  uint64_t v22 = v5;
  uint64_t v23 = type metadata accessor for StoreBookRating();
  sub_1B9D20(a1 + *(int *)(v23 + 24), (uint64_t)v19);
  uint64_t v24 = *(int *)(v23 + 24);
  uint64_t v25 = v22;
  uint64_t v26 = v21;
  sub_1B9D20(a2 + v24, (uint64_t)v17);
  uint64_t v27 = (uint64_t)&v10[*(int *)(v8 + 48)];
  sub_1B9D20((uint64_t)v19, (uint64_t)v10);
  sub_1B9D20((uint64_t)v17, v27);
  uint64_t v28 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v25 + 48);
  if (v28((uint64_t)v10, 1, v21) == 1)
  {
    sub_55F38((uint64_t)v17, &qword_26D638);
    sub_55F38((uint64_t)v19, &qword_26D638);
    if (v28(v27, 1, v21) == 1)
    {
      sub_55F38((uint64_t)v10, &qword_26D638);
      return 1;
    }
    goto LABEL_13;
  }
  sub_1B9D20((uint64_t)v10, (uint64_t)v14);
  if (v28(v27, 1, v21) == 1)
  {
    sub_55F38((uint64_t)v17, &qword_26D638);
    sub_55F38((uint64_t)v19, &qword_26D638);
    (*(void (**)(char *, uint64_t))(v25 + 8))(v14, v21);
LABEL_13:
    sub_55F38((uint64_t)v10, &qword_2723C0);
    return 0;
  }
  uint64_t v29 = v34;
  (*(void (**)(char *, uint64_t, uint64_t))(v25 + 32))(v34, v27, v26);
  sub_1BB51C(&qword_26D408, (void (*)(uint64_t))&type metadata accessor for Date);
  char v30 = sub_1FB7D0();
  uint64_t v31 = *(void (**)(char *, uint64_t))(v25 + 8);
  v31(v29, v26);
  sub_55F38((uint64_t)v17, &qword_26D638);
  sub_55F38((uint64_t)v19, &qword_26D638);
  v31(v14, v26);
  sub_55F38((uint64_t)v10, &qword_26D638);
  return (v30 & 1) != 0;
}

uint64_t sub_1BAA40()
{
  return sub_1BB51C(&qword_273638, (void (*)(uint64_t))type metadata accessor for StoreBookRating);
}

void *initializeBufferWithCopyOfBuffer for StoreBookRating(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = (void *)a1;
  int v4 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v4 & 0x20000) != 0)
  {
    uint64_t v12 = *a2;
    *uint64_t v3 = *a2;
    uint64_t v3 = (void *)(v12 + ((v4 + 16) & ~(unint64_t)v4));
    swift_retain();
  }
  else
  {
    uint64_t v5 = a2[1];
    *(void *)a1 = *a2;
    *(void *)(a1 + 8) = v5;
    *(unsigned char *)(a1 + 16) = *((unsigned char *)a2 + 16);
    uint64_t v6 = *(int *)(a3 + 24);
    uint64_t v7 = (void *)(a1 + v6);
    uint64_t v8 = (char *)a2 + v6;
    uint64_t v9 = sub_1FB0E0();
    uint64_t v10 = *(void *)(v9 - 8);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9))
    {
      uint64_t v11 = sub_12124(&qword_26D638);
      memcpy(v7, v8, *(void *)(*(void *)(v11 - 8) + 64));
    }
    else
    {
      (*(void (**)(void *, char *, uint64_t))(v10 + 16))(v7, v8, v9);
      (*(void (**)(void *, void, uint64_t, uint64_t))(v10 + 56))(v7, 0, 1, v9);
    }
  }
  return v3;
}

uint64_t destroy for StoreBookRating(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = a1 + *(int *)(a2 + 24);
  uint64_t v3 = sub_1FB0E0();
  uint64_t v6 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v6 + 48))(v2, 1, v3);
  if (!result)
  {
    uint64_t v5 = *(uint64_t (**)(uint64_t, uint64_t))(v6 + 8);
    return v5(v2, v3);
  }
  return result;
}

uint64_t initializeWithCopy for StoreBookRating(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_12124(&qword_26D638);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 16))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithCopy for StoreBookRating(uint64_t a1, uint64_t a2, uint64_t a3)
{
  *(void *)a1 = *(void *)a2;
  uint64_t v4 = *(void *)(a2 + 8);
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 24))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_12124(&qword_26D638);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 16))(v6, v7, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t initializeWithTake for StoreBookRating(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (const void *)(a2 + v5);
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  if ((*(unsigned int (**)(const void *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8))
  {
    uint64_t v10 = sub_12124(&qword_26D638);
    memcpy(v6, v7, *(void *)(*(void *)(v10 - 8) + 64));
  }
  else
  {
    (*(void (**)(void *, const void *, uint64_t))(v9 + 32))(v6, v7, v8);
    (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  }
  return a1;
}

uint64_t assignWithTake for StoreBookRating(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v5 = *(int *)(a3 + 24);
  uint64_t v6 = (void *)(a1 + v5);
  uint64_t v7 = (void *)(a2 + v5);
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  uint64_t v10 = *(uint64_t (**)(void *, uint64_t, uint64_t))(v9 + 48);
  int v11 = v10(v6, 1, v8);
  int v12 = v10(v7, 1, v8);
  if (!v11)
  {
    if (!v12)
    {
      (*(void (**)(void *, void *, uint64_t))(v9 + 40))(v6, v7, v8);
      return a1;
    }
    (*(void (**)(void *, uint64_t))(v9 + 8))(v6, v8);
    goto LABEL_6;
  }
  if (v12)
  {
LABEL_6:
    uint64_t v13 = sub_12124(&qword_26D638);
    memcpy(v6, v7, *(void *)(*(void *)(v13 - 8) + 64));
    return a1;
  }
  (*(void (**)(void *, void *, uint64_t))(v9 + 32))(v6, v7, v8);
  (*(void (**)(void *, void, uint64_t, uint64_t))(v9 + 56))(v6, 0, 1, v8);
  return a1;
}

uint64_t getEnumTagSinglePayload for StoreBookRating(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1BB21C);
}

uint64_t sub_1BB21C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = a1 + *(int *)(a3 + 24);
  uint64_t v5 = sub_12124(&qword_26D638);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48);

  return v6(v4, a2, v5);
}

uint64_t storeEnumTagSinglePayload for StoreBookRating(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1BB2A4);
}

uint64_t sub_1BB2A4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = a1 + *(int *)(a4 + 24);
  uint64_t v6 = sub_12124(&qword_26D638);
  uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);

  return v7(v5, a2, a2, v6);
}

void sub_1BB31C()
{
  sub_1BB3C0();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1BB3C0()
{
  if (!qword_272340)
  {
    sub_1FB0E0();
    unint64_t v0 = sub_1FBEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_272340);
    }
  }
}

uint64_t dispatch thunk of StoreBookRatingsServiceType.fetchStoreRatings(storeIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t sub_1BB51C(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_1BB564(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v23 = *(void *)(a1 + 16);
  sub_46538(0, v1, 0);
  uint64_t result = (void *)sub_73C3C(a1);
  uint64_t v5 = (uint64_t)result;
  uint64_t v6 = v23;
  uint64_t v7 = 0;
  uint64_t v8 = a1 + 64;
  uint64_t v9 = a1 + 88;
  while ((v5 & 0x8000000000000000) == 0 && v5 < 1 << *(unsigned char *)(a1 + 32))
  {
    unint64_t v11 = (unint64_t)v5 >> 6;
    if ((*(void *)(v8 + 8 * ((unint64_t)v5 >> 6)) & (1 << v5)) == 0) {
      goto LABEL_25;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_26;
    }
    uint64_t v12 = *(void *)(*(void *)(a1 + 56) + 384 * v5);
    unint64_t v14 = _swiftEmptyArrayStorage[2];
    unint64_t v13 = _swiftEmptyArrayStorage[3];
    if (v14 >= v13 >> 1)
    {
      uint64_t v21 = v8;
      uint64_t v22 = v4;
      uint64_t v20 = v9;
      uint64_t result = (void *)sub_46538(v13 > 1, v14 + 1, 1);
      uint64_t v9 = v20;
      uint64_t v8 = v21;
      uint64_t v4 = v22;
      uint64_t v6 = v23;
    }
    _swiftEmptyArrayStorage[2] = v14 + 1;
    _swiftEmptyArrayStorage[v14 + 4] = v12;
    int64_t v10 = 1 << *(unsigned char *)(a1 + 32);
    if (v5 >= v10) {
      goto LABEL_27;
    }
    uint64_t v15 = *(void *)(v8 + 8 * v11);
    if ((v15 & (1 << v5)) == 0) {
      goto LABEL_28;
    }
    if (*(_DWORD *)(a1 + 36) != v4) {
      goto LABEL_29;
    }
    unint64_t v16 = v15 & (-2 << (v5 & 0x3F));
    if (v16)
    {
      int64_t v10 = __clz(__rbit64(v16)) | v5 & 0xFFFFFFFFFFFFFFC0;
    }
    else
    {
      unint64_t v17 = v11 + 1;
      unint64_t v18 = (unint64_t)(v10 + 63) >> 6;
      if (v11 + 1 < v18)
      {
        unint64_t v19 = *(void *)(v8 + 8 * v17);
        if (!v19)
        {
          unint64_t v17 = v11 + 2;
          if (v11 + 2 >= v18) {
            goto LABEL_4;
          }
          unint64_t v19 = *(void *)(v8 + 8 * v17);
          if (!v19)
          {
            while (v18 - 3 != v11)
            {
              unint64_t v19 = *(void *)(v9 + 8 * v11++);
              if (v19)
              {
                unint64_t v17 = v11 + 2;
                goto LABEL_17;
              }
            }
            goto LABEL_4;
          }
        }
LABEL_17:
        int64_t v10 = __clz(__rbit64(v19)) + (v17 << 6);
      }
    }
LABEL_4:
    ++v7;
    uint64_t v5 = v10;
    if (v7 == v6) {
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  __break(1u);
  return result;
}

uint64_t sub_1BB780(void *__src, uint64_t a2)
{
  v3[331] = v2;
  v3[330] = a2;
  v3[329] = __src;
  memcpy(v3 + 2, __src, 0x460uLL);
  return _swift_task_switch(sub_1BB800, 0, 0);
}

uint64_t sub_1BB800()
{
  int64_t v1 = *(void **)(v0 + 2648);
  memcpy((void *)(v0 + 2256), (const void *)(v0 + 104), 0x16BuLL);
  uint64_t v2 = v1 + 2;
  uint64_t v4 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v2, v4);
  if (qword_26C3E0 != -1) {
    swift_once();
  }
  uint64_t v5 = qword_274188;
  memcpy((void *)(v0 + 1136), *(const void **)(v0 + 2632), 0x460uLL);
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v0 + 2656) = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1BB92C;
  uint64_t v7 = *(void *)(v0 + 2640);
  return BookHistoryServiceType.fetchBookHistory(for:limit:configuration:)(v5, v7, (void *)(v0 + 1136), v4, v3);
}

uint64_t sub_1BB92C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2664) = a1;
  *(void *)(v3 + 2672) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1BBDB4;
  }
  else {
    uint64_t v4 = sub_1BBA44;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1BBA44()
{
  uint64_t v1 = (void *)v0[331];
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  sub_5D64(v1 + 7, v2);
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1BB564(v4);
  v0[335] = v5;
  swift_bridgeObjectRelease();
  uint64_t v8 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v6 = (void *)swift_task_alloc();
  v0[336] = v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1BBB8C;
  return v8(v5, v2, v3);
}

uint64_t sub_1BBB8C(uint64_t a1)
{
  uint64_t v4 = (void *)*v2;
  v4[337] = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = (uint64_t (*)(void))v4[1];
    return v5();
  }
  else
  {
    swift_bridgeObjectRelease();
    v4[338] = a1;
    return _swift_task_switch(sub_1BBCF0, 0, 0);
  }
}

uint64_t sub_1BBCF0()
{
  uint64_t v1 = v0[338];
  uint64_t v2 = v0[333];
  swift_bridgeObjectRetain();
  sub_8CFA4((uint64_t)(v0 + 13));
  uint64_t v3 = sub_1BC3FC(v2, v1, v0 + 282);
  sub_8D5A4((uint64_t)(v0 + 13));
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  uint64_t v4 = (uint64_t (*)(void *))v0[1];
  return v4(v3);
}

uint64_t sub_1BBDB4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BookHistory.seedBook(using:metadata:configuration:)@<X0>(void *__src@<X2>, uint64_t a2@<X0>, unsigned __int8 *a3@<X1>, uint64_t a4@<X8>)
{
  int v49 = *a3;
  uint64_t v7 = *((void *)a3 + 1);
  uint64_t v50 = *((void *)a3 + 2);
  uint64_t v51 = v7;
  uint64_t v48 = *((void *)a3 + 3);
  int v47 = a3[32];
  uint64_t v8 = *((void *)a3 + 5);
  uint64_t v9 = *((void *)a3 + 6);
  uint64_t v10 = *((void *)a3 + 7);
  uint64_t v11 = *((void *)a3 + 8);
  int v12 = a3[72];
  memcpy(v70, __src, sizeof(v70));
  memcpy(v69, v4, 0x179uLL);
  memcpy(v68, v4, 0x179uLL);
  BookHistory.pruned(to:)(a2, (uint64_t)v52);
  sub_55844((uint64_t)v52, (uint64_t)v71, &qword_26C518);
  sub_55844((uint64_t)v71, (uint64_t)v72, &qword_26C518);
  if (sub_125F0((uint64_t)v72) == 1) {
    goto LABEL_3;
  }
  uint64_t v40 = v4;
  int v41 = v12;
  uint64_t v42 = v11;
  uint64_t v43 = v10;
  uint64_t v44 = v9;
  uint64_t v45 = v8;
  memcpy(v68, v72, 0x179uLL);
  memcpy(v52, v70, 0x16BuLL);
  BookHistory.internalAffinitySource(with:)(v52, (uint64_t)v64);
  if (v65 >> 1 == 0xFFFFFFFF)
  {
LABEL_3:
    sub_AE3D0(v68);
    uint64_t v14 = a4;
  }
  else
  {
    uint64_t v35 = a4;
    *((void *)&v39 + 1) = &v30;
    uint64_t v15 = v64[0];
    uint64_t v16 = v64[1];
    uint64_t v17 = v64[2];
    uint64_t v18 = v64[3];
    uint64_t v32 = v64[4];
    uint64_t v19 = v64[5];
    uint64_t v46 = v66;
    uint64_t v20 = v67;
    unint64_t v21 = v65;
    __chkstk_darwin(v13);
    sub_12124(&qword_271920);
    sub_169338();
    uint64_t v22 = sub_1FBAF0();
    uint64_t v31 = 0;
    uint64_t v33 = v69[0];
    uint64_t v34 = v22;
    memcpy(v63, v40, 0x179uLL);
    AuthorRecommendationSource.id.getter(v63);
    uint64_t v53 = v15;
    uint64_t v54 = v16;
    uint64_t v55 = v17;
    uint64_t v56 = v18;
    uint64_t v23 = v32;
    uint64_t v57 = v32;
    uint64_t v58 = v19;
    unint64_t v59 = v21;
    uint64_t v60 = v46;
    unint64_t v61 = v20;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v40 = v20;
    uint64_t v38 = v15;
    *(void *)&long long v39 = v16;
    *((void *)&v39 + 1) = v17;
    uint64_t v36 = v19;
    uint64_t v37 = v18;
    uint64_t v24 = v23;
    sub_12430(v15, v16, v17, v18, v23, v19, v21);
    uint64_t v25 = v31;
    sub_161E30(v62);
    if (v25)
    {
      swift_errorRelease();
      uint64_t v27 = v36;
      uint64_t v26 = v37;
      sub_1255C(v38, v39, *((uint64_t *)&v39 + 1), v37, v23, v36, v21);
      char v28 = 12;
    }
    else
    {
      uint64_t v27 = v36;
      uint64_t v26 = v37;
      sub_1255C(v38, v39, *((uint64_t *)&v39 + 1), v37, v23, v36, v21);
      char v28 = v62[0];
    }
    *(void *)&v52[0] = v33;
    BYTE8(v52[0]) = v49;
    *(void *)&v52[1] = v51;
    *((void *)&v52[1] + 1) = v50;
    *(void *)&v52[2] = v48;
    BYTE8(v52[2]) = v47;
    *(void *)&v52[3] = v45;
    *((void *)&v52[3] + 1) = v44;
    *(void *)&v52[4] = v43;
    *((void *)&v52[4] + 1) = v42;
    LOBYTE(v52[5]) = v41;
    *((void *)&v52[5] + 1) = v38;
    v52[6] = v39;
    *(void *)&v52[7] = v26;
    *((void *)&v52[7] + 1) = v24;
    *(void *)&v52[8] = v27;
    *((void *)&v52[8] + 1) = v21;
    *(void *)&v52[9] = v46;
    *((void *)&v52[9] + 1) = v40;
    sub_55844((uint64_t)v63, (uint64_t)&v52[10], &qword_26C518);
    *(void *)&v52[34] = v34;
    BYTE8(v52[34]) = v28;
    memcpy(v68, v52, 0x229uLL);
    AuthorRecommendationSource.id.getter(v68);
    uint64_t v14 = v35;
  }
  return sub_55844((uint64_t)v68, v14, &qword_26EB40);
}

uint64_t sub_1BC1DC(const void *a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_B06F4;
  v7[331] = v6;
  v7[330] = a2;
  v7[329] = a1;
  memcpy(v7 + 2, a1, 0x460uLL);
  return _swift_task_switch(sub_1BB800, 0, 0);
}

void *sub_1BC2B4@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  return sub_1BCCFC(a1, a2);
}

uint64_t dispatch thunk of SeedBookServiceType.fetchSeedBooks(with:limit:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t type metadata accessor for BookHistorySeedBookService()
{
  return self;
}

void *sub_1BC3FC(uint64_t a1, uint64_t a2, const void *a3)
{
  uint64_t v3 = a2;
  uint64_t v4 = a1;
  uint64_t v84 = _swiftEmptyDictionarySingleton;
  uint64_t v128 = _swiftEmptyDictionarySingleton;
  uint64_t v5 = a1 + 64;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  if (-v6 < 64) {
    uint64_t v7 = ~(-1 << -(char)v6);
  }
  else {
    uint64_t v7 = -1;
  }
  unint64_t v8 = v7 & *(void *)(a1 + 64);
  uint64_t v83 = -1 << *(unsigned char *)(a1 + 32);
  int64_t v9 = (unint64_t)(63 - v6) >> 6;
  char v87 = &v117[20];
  int64_t v10 = 0;
  long long v85 = xmmword_1FD2A0;
  uint64_t v86 = a1 + 64;
  uint64_t v91 = a3;
  uint64_t v101 = a2;
  uint64_t v102 = swift_bridgeObjectRetain();
  int64_t v100 = v9;
  while (v8)
  {
    unint64_t v11 = __clz(__rbit64(v8));
    v8 &= v8 - 1;
    unint64_t v12 = v11 | (v10 << 6);
LABEL_21:
    uint64_t v16 = *(void *)(v4 + 56);
    uint64_t v115 = *(void *)(*(void *)(v4 + 48) + 8 * v12);
    uint64_t v17 = (const void *)(v16 + 384 * v12);
    memcpy(v127, v17, 0x179uLL);
    memcpy(v126, v17, sizeof(v126));
    if (*(void *)(v3 + 16))
    {
      int64_t v116 = v10;
      uint64_t v18 = v127[0];
      uint64_t v19 = sub_56168(v127[0]);
      if (v20)
      {
        unint64_t v21 = (unsigned __int8 *)(*(void *)(v3 + 56) + 80 * v19);
        int v22 = *v21;
        uint64_t v23 = *((void *)v21 + 1);
        uint64_t v24 = *((void *)v21 + 2);
        unint64_t v113 = *((void *)v21 + 3);
        LODWORD(v112) = v21[32];
        uint64_t v25 = *((void *)v21 + 5);
        uint64_t v110 = *((void *)v21 + 6);
        uint64_t v111 = v25;
        uint64_t v26 = *((void *)v21 + 7);
        uint64_t v108 = *((void *)v21 + 8);
        uint64_t v109 = v26;
        int v107 = v21[72];
        uint64_t v27 = qword_26C3E0;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (v27 != -1) {
          swift_once();
        }
        memcpy(v123, v127, 0x179uLL);
        BookHistory.pruned(to:)(qword_274188, (uint64_t)v117);
        sub_55844((uint64_t)v117, (uint64_t)v124, &qword_26C518);
        sub_55844((uint64_t)v124, (uint64_t)v125, &qword_26C518);
        if (sub_125F0((uint64_t)v125) == 1
          || (int v97 = v22,
              memcpy(v117, v125, 0x179uLL),
              memcpy(v123, v91, 0x16BuLL),
              BookHistory.internalAffinitySource(with:)(v123, (uint64_t)v119),
              v120 >> 1 == 0xFFFFFFFF))
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          uint64_t v3 = v101;
          uint64_t v4 = v102;
          int64_t v9 = v100;
          int64_t v10 = v116;
        }
        else
        {
          uint64_t v89 = v18;
          long long v96 = &v83;
          uint64_t v93 = v24;
          uint64_t v94 = v23;
          uint64_t v29 = v119[0];
          uint64_t v30 = v119[1];
          uint64_t v31 = v119[2];
          uint64_t v103 = v119[3];
          unint64_t v104 = v120;
          uint64_t v114 = v119[4];
          uint64_t v105 = v119[5];
          uint64_t v106 = v121;
          uint64_t v32 = v122;
          __chkstk_darwin(v28);
          sub_12124(&qword_271920);
          sub_169338();
          uint64_t v33 = v92;
          uint64_t v90 = sub_1FBAF0();
          uint64_t v92 = v33;
          memcpy(v123, v126, 0x179uLL);
          AuthorRecommendationSource.id.getter(v123);
          v117[70] = v29;
          v117[71] = v30;
          v117[72] = v31;
          uint64_t v34 = v103;
          v117[73] = v103;
          uint64_t v35 = v114;
          v117[74] = v114;
          uint64_t v36 = v105;
          v117[75] = v105;
          v117[76] = v104;
          v117[77] = v106;
          v117[78] = v32;
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          uint64_t v95 = v32;
          uint64_t v98 = v30;
          uint64_t v99 = v29;
          uint64_t v37 = v31;
          unint64_t v38 = v104;
          long long v96 = (uint64_t *)v37;
          sub_12430(v29, v30, v37, v34, v35, v36, v104);
          uint64_t v39 = v92;
          sub_161E30((char *)&v118);
          if (v39)
          {
            swift_errorRelease();
            uint64_t v40 = v98;
            uint64_t v41 = v103;
            sub_1255C(v99, v98, (uint64_t)v96, v103, v114, v105, v38);
            uint64_t v42 = v93;
            swift_bridgeObjectRelease();
            uint64_t v43 = v94;
            swift_bridgeObjectRelease();
            int v88 = 12;
            uint64_t v44 = v40;
            unint64_t v45 = v113;
            char v46 = v112;
            uint64_t v48 = v110;
            uint64_t v47 = v111;
            uint64_t v50 = v108;
            uint64_t v49 = v109;
            char v51 = v107;
            uint64_t v52 = v43;
          }
          else
          {
            uint64_t v53 = v98;
            uint64_t v41 = v103;
            sub_1255C(v99, v98, (uint64_t)v96, v103, v114, v105, v38);
            uint64_t v42 = v93;
            swift_bridgeObjectRelease();
            uint64_t v52 = v94;
            swift_bridgeObjectRelease();
            int v88 = v118;
            uint64_t v44 = v53;
            unint64_t v45 = v113;
            char v46 = v112;
            uint64_t v48 = v110;
            uint64_t v47 = v111;
            uint64_t v50 = v108;
            uint64_t v49 = v109;
            char v51 = v107;
          }
          v117[0] = v89;
          LOBYTE(v117[1]) = v97;
          v117[2] = v52;
          v117[3] = v42;
          v117[4] = v45;
          LOBYTE(v117[5]) = v46;
          v117[6] = v47;
          v117[7] = v48;
          v117[8] = v49;
          v117[9] = v50;
          LOBYTE(v117[10]) = v51;
          uint64_t v54 = v99;
          v117[11] = v99;
          v117[12] = v44;
          uint64_t v55 = (uint64_t)v96;
          v117[13] = v96;
          v117[14] = v41;
          uint64_t v56 = v105;
          v117[15] = v114;
          v117[16] = v105;
          v117[17] = v38;
          v117[18] = v106;
          v117[19] = v95;
          sub_55844((uint64_t)v123, (uint64_t)v87, &qword_26C518);
          v117[68] = v90;
          LOBYTE(v117[69]) = v88;
          unint64_t v57 = v38 >> 62;
          uint64_t v58 = v54;
          unint64_t v113 = v8;
          uint64_t v92 = 0;
          if (v57 == 3)
          {
            uint64_t v59 = v54;
          }
          else
          {
            sub_12124(&qword_26D5D8);
            uint64_t v59 = swift_allocObject();
            *(_OWORD *)(v59 + 16) = v85;
            uint64_t v60 = v98;
            *(void *)(v59 + 32) = v58;
            *(void *)(v59 + 40) = v60;
            uint64_t v62 = v103;
            char v61 = v104;
            *(void *)(v59 + 48) = v55;
            *(void *)(v59 + 56) = v62;
            *(void *)(v59 + 64) = v114;
            *(void *)(v59 + 72) = v56;
            *(unsigned char *)(v59 + 80) = v61 & 1;
          }
          uint64_t v63 = v55;
          sub_1244C();
          unint64_t v65 = v104;
          uint64_t v64 = v105;
          sub_1244C();
          uint64_t v112 = Array<A>.affinity.getter(v59);
          char v67 = v66;
          swift_bridgeObjectRelease();
          sub_1255C(v99, v98, v63, v103, v114, v64, v65);
          if (v67)
          {
            sub_124B4(v117);
            int64_t v9 = v100;
            uint64_t v3 = v101;
            int64_t v10 = v116;
            uint64_t v5 = v86;
            uint64_t v4 = v102;
            unint64_t v8 = v113;
          }
          else
          {
            unint64_t v8 = v113;
            uint64_t v3 = v101;
            uint64_t v4 = v102;
            if ((v112 & 0x7FFFFFFFFFFFFFFFLL) != 0)
            {
              uint64_t v68 = v84;
              unint64_t v69 = v84[2];
              int64_t v10 = v116;
              int64_t v9 = v100;
              if (v84[3] <= v69)
              {
                sub_116AFC(v69 + 1, 1);
                uint64_t v68 = v128;
              }
              uint64_t v70 = v68;
              uint64_t v71 = sub_1FC7D0();
              Swift::Int v72 = v70 + 8;
              uint64_t v84 = v70;
              uint64_t v73 = -1 << *((unsigned char *)v70 + 32);
              unint64_t v74 = v71 & ~v73;
              unint64_t v75 = v74 >> 6;
              uint64_t v5 = v86;
              if (((-1 << v74) & ~v70[(v74 >> 6) + 8]) != 0)
              {
                unint64_t v76 = __clz(__rbit64((-1 << v74) & ~v70[(v74 >> 6) + 8])) | v74 & 0x7FFFFFFFFFFFFFC0;
              }
              else
              {
                char v77 = 0;
                unint64_t v78 = (unint64_t)(63 - v73) >> 6;
                do
                {
                  if (++v75 == v78 && (v77 & 1) != 0) {
                    goto LABEL_58;
                  }
                  BOOL v79 = v75 == v78;
                  if (v75 == v78) {
                    unint64_t v75 = 0;
                  }
                  v77 |= v79;
                  uint64_t v80 = v72[v75];
                }
                while (v80 == -1);
                unint64_t v76 = __clz(__rbit64(~v80)) + (v75 << 6);
              }
              *(void *)((char *)v72 + ((v76 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v76;
              char v81 = v84;
              *(void *)(v84[6] + 8 * v76) = v115;
              memcpy((void *)(v81[7] + 560 * v76), v117, 0x229uLL);
              ++v81[2];
            }
            else
            {
              sub_124B4(v117);
              int64_t v10 = v116;
              uint64_t v5 = v86;
              int64_t v9 = v100;
            }
          }
        }
      }
      else
      {
        int64_t v10 = v116;
      }
    }
  }
  int64_t v13 = v10 + 1;
  if (__OFADD__(v10, 1))
  {
    __break(1u);
    goto LABEL_57;
  }
  if (v13 >= v9) {
    goto LABEL_55;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v13);
  if (v14)
  {
LABEL_20:
    unint64_t v8 = (v14 - 1) & v14;
    unint64_t v12 = __clz(__rbit64(v14)) + (v13 << 6);
    int64_t v10 = v13;
    goto LABEL_21;
  }
  int64_t v15 = v10 + 2;
  if (v10 + 2 >= v9) {
    goto LABEL_55;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v15 = v10 + 3;
  if (v10 + 3 >= v9) {
    goto LABEL_55;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14) {
    goto LABEL_19;
  }
  int64_t v15 = v10 + 4;
  if (v10 + 4 >= v9) {
    goto LABEL_55;
  }
  unint64_t v14 = *(void *)(v5 + 8 * v15);
  if (v14)
  {
LABEL_19:
    int64_t v13 = v15;
    goto LABEL_20;
  }
  int64_t v15 = v10 + 5;
  if (v10 + 5 < v9)
  {
    unint64_t v14 = *(void *)(v5 + 8 * v15);
    if (!v14)
    {
      while (1)
      {
        int64_t v13 = v15 + 1;
        if (__OFADD__(v15, 1)) {
          break;
        }
        if (v13 >= v9) {
          goto LABEL_55;
        }
        unint64_t v14 = *(void *)(v5 + 8 * v13);
        ++v15;
        if (v14) {
          goto LABEL_20;
        }
      }
LABEL_57:
      __break(1u);
LABEL_58:
      __break(1u);
      JUMPOUT(0x1BCCECLL);
    }
    goto LABEL_19;
  }
LABEL_55:
  sub_1226C();
  return v84;
}

void *sub_1BCCFC@<X0>(char *a1@<X0>, void *a2@<X8>)
{
  uint64_t v4 = *(const void **)(v2 + 16);
  uint64_t v5 = *(const void **)(v2 + 24);
  char v6 = *a1;
  memcpy(__dst, v4, sizeof(__dst));
  char v10 = v6;
  memcpy(v8, v5, 0x16BuLL);
  uint64_t result = BookHistory.affinityInfos(for:with:)(&v10, v8);
  *a2 = result;
  return result;
}

uint64_t sub_1BCD78(uint64_t a1, uint64_t *a2)
{
  uint64_t v43 = a2;
  uint64_t v3 = sub_12124(&qword_2737A8);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v32 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v6 - 8);
  unint64_t v8 = (char *)&v32 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1FAF80();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v42 = (char *)&v32 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t result = __chkstk_darwin(v11);
  uint64_t v48 = (char *)&v32 - v14;
  uint64_t v49 = _swiftEmptyArrayStorage;
  uint64_t v41 = *(void *)(a1 + 16);
  if (v41)
  {
    unint64_t v15 = 0;
    uint64_t v37 = v8;
    uint64_t v38 = v10 + 48;
    uint64_t v47 = (void (**)(char *, char *, uint64_t))(v10 + 32);
    uint64_t v33 = a1;
    uint64_t v34 = (uint64_t (**)(char *, uint64_t))(v10 + 8);
    uint64_t v39 = v10 + 56;
    uint64_t v40 = v10 + 16;
    unint64_t v32 = (v10 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    uint64_t v44 = v5;
    uint64_t v45 = v9;
    while (v15 < *(void *)(a1 + 16))
    {
      unint64_t v16 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
      uint64_t v17 = *(void *)(v10 + 72);
      (*(void (**)(char *, unint64_t, uint64_t))(v10 + 16))(v8, a1 + v16 + v17 * v15, v9);
      uint64_t v36 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
      v36(v8, 0, 1, v9);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1) {
        goto LABEL_20;
      }
      char v46 = *v47;
      v46(v48, v8, v9);
      uint64_t v18 = sub_1FAEF0();
      uint64_t v20 = *v43;
      if (*(void *)(*v43 + 16))
      {
        unint64_t v21 = sub_4C328(v18, v19);
        if (v22)
        {
          unint64_t v23 = v21;
          uint64_t v35 = *(void *)(v20 + 56);
          uint64_t v24 = type metadata accessor for TabiPackage();
          uint64_t v25 = *(void *)(v24 - 8);
          uint64_t v26 = v35 + *(void *)(v25 + 72) * v23;
          uint64_t v5 = v44;
          sub_1C2048(v26, (uint64_t)v44);
          (*(void (**)(char *, void, uint64_t, uint64_t))(v25 + 56))(v5, 0, 1, v24);
          a1 = v33;
        }
        else
        {
          uint64_t v24 = type metadata accessor for TabiPackage();
          uint64_t v5 = v44;
          (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v44, 1, 1, v24);
        }
      }
      else
      {
        uint64_t v24 = type metadata accessor for TabiPackage();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56))(v5, 1, 1, v24);
      }
      swift_bridgeObjectRelease();
      type metadata accessor for TabiPackage();
      int v27 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(*(void *)(v24 - 8) + 48))(v5, 1, v24);
      sub_55F38((uint64_t)v5, &qword_2737A8);
      if (v27 == 1)
      {
        v46(v42, v48, v45);
        uint64_t v28 = v49;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
        {
          sub_46B6C(0, v28[2] + 1, 1);
          uint64_t v28 = v49;
        }
        unint64_t v30 = v28[2];
        unint64_t v29 = v28[3];
        if (v30 >= v29 >> 1)
        {
          sub_46B6C(v29 > 1, v30 + 1, 1);
          uint64_t v28 = v49;
        }
        v28[2] = v30 + 1;
        unint64_t v31 = (unint64_t)v28 + v16 + v30 * v17;
        uint64_t v9 = v45;
        uint64_t result = ((uint64_t (*)(unint64_t, char *, uint64_t))v46)(v31, v42, v45);
        uint64_t v49 = v28;
        unint64_t v8 = v37;
        uint64_t v5 = v44;
      }
      else
      {
        uint64_t v9 = v45;
        uint64_t result = (*v34)(v48, v45);
        unint64_t v8 = v37;
      }
      if (v41 == ++v15)
      {
        v36(v8, 1, 1, v9);
        goto LABEL_20;
      }
    }
    __break(1u);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56))(v8, 1, 1, v9);
LABEL_20:
    swift_bridgeObjectRelease();
    sub_55F38((uint64_t)v8, &qword_26E7A8);
    return (uint64_t)v49;
  }
  return result;
}

uint64_t static TabiPackageService.resourcesContentDirectory.getter()
{
  return sub_1BD304();
}

uint64_t static TabiPackageService.modelsContentDirectory.getter()
{
  return sub_1BD304();
}

uint64_t sub_1BD304()
{
  uint64_t v0 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v6 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1BD53C((uint64_t)v2);
  uint64_t v3 = sub_1FAF80();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    sub_1FAF10();
    return (*(uint64_t (**)(char *, uint64_t))(v4 + 8))(v2, v3);
  }
  return result;
}

uint64_t TabiPackage.fileURL.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_5606C(v1, a1, &qword_26E7A8);
}

uint64_t TabiPackage.fileURL.setter(uint64_t a1)
{
  return sub_1BD6A8(a1, v1);
}

uint64_t TabiPackage.id.getter()
{
  uint64_t v1 = *(void *)(v0 + *(int *)(type metadata accessor for TabiPackage() + 20));
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t TabiPackage.id.setter(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)(v2 + *(int *)(type metadata accessor for TabiPackage() + 20));
  uint64_t result = swift_bridgeObjectRelease();
  *uint64_t v5 = a1;
  v5[1] = a2;
  return result;
}

uint64_t (*TabiPackage.id.modify())(void)
{
  return AuthorRecommendationSource.id.getter;
}

uint64_t sub_1BD528@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = (void *)(v2 + *(int *)(a1 + 20));
  uint64_t v4 = v3[1];
  *a2 = *v3;
  a2[1] = v4;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1BD53C@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self defaultManager];
  id v10 = 0;
  id v3 = [v2 URLForDirectory:9 inDomain:1 appropriateForURL:0 create:1 error:&v10];

  id v4 = v10;
  if (v3)
  {
    sub_1FAF30();
    id v5 = v4;

    uint64_t v6 = sub_1FAF80();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(a1, 0, 1, v6);
  }
  else
  {
    id v8 = v10;
    sub_1FAEB0();

    swift_willThrow();
    swift_errorRelease();
    uint64_t v9 = sub_1FAF80();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(a1, 1, 1, v9);
  }
}

uint64_t sub_1BD6A8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_26E7A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t type metadata accessor for TabiPackage()
{
  uint64_t result = qword_273830;
  if (!qword_273830) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t TabiPackageService.fetchTabiPackages(for:)(uint64_t a1)
{
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v1;
  return _swift_task_switch(sub_1BD77C, 0, 0);
}

uint64_t sub_1BD77C()
{
  uint64_t v1 = sub_12124(&qword_2737A8);
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  v2[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v3 = sub_12124(&qword_2737C0);
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1BD890;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v1, v3, 0, 0, &unk_2737B8, v2, v1);
}

uint64_t sub_1BD890()
{
  *(void *)(*(void *)v1 + 56) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1BD9AC;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_96910;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1BD9AC()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1BDA10(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[159] = a4;
  v4[158] = a3;
  v4[157] = a2;
  v4[156] = a1;
  uint64_t v5 = sub_12124(&qword_2737A8);
  v4[160] = v5;
  v4[161] = *(void *)(v5 - 8);
  v4[162] = swift_task_alloc();
  uint64_t v6 = type metadata accessor for TabiPackage();
  v4[163] = v6;
  v4[164] = *(void *)(v6 - 8);
  v4[165] = swift_task_alloc();
  v4[166] = swift_task_alloc();
  sub_12124(&qword_26D908);
  v4[167] = swift_task_alloc();
  v4[168] = swift_task_alloc();
  sub_12124(&qword_273A78);
  v4[169] = swift_task_alloc();
  uint64_t v7 = sub_12124(&qword_273A80);
  v4[170] = v7;
  v4[171] = *(void *)(v7 - 8);
  v4[172] = swift_task_alloc();
  sub_12124(&qword_26E7A8);
  v4[173] = swift_task_alloc();
  v4[174] = swift_task_alloc();
  uint64_t v8 = sub_1FAF80();
  v4[175] = v8;
  uint64_t v9 = *(void *)(v8 - 8);
  v4[176] = v9;
  v4[177] = *(void *)(v9 + 64);
  v4[178] = swift_task_alloc();
  v4[179] = swift_task_alloc();
  v4[180] = swift_task_alloc();
  v4[181] = swift_task_alloc();
  v4[182] = swift_task_alloc();
  v4[183] = swift_task_alloc();
  return _swift_task_switch(sub_1BDD2C, 0, 0);
}

uint64_t sub_1BDD2C()
{
  int64_t v100 = v0;
  v0[151] = _swiftEmptyDictionarySingleton;
  id v1 = [self sharedSession];
  v0[184] = v1;
  id v2 = [self defaultManager];
  v0[185] = v2;
  v0[150] = 0;
  id v3 = [v2 URLForDirectory:13 inDomain:1 appropriateForURL:0 create:1 error:v0 + 150];
  uint64_t v4 = (void *)v0[150];
  uint64_t v98 = v0;
  if (!v3)
  {
    id v28 = v4;
    sub_1FAEB0();

    swift_willThrow();
    goto LABEL_39;
  }
  uint64_t v5 = v3;
  sub_1FAF30();
  id v6 = v4;

  sub_1FAF10();
  sub_1FAF50();
  NSString v7 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  unsigned __int8 v8 = [v2 fileExistsAtPath:v7];

  if ((v8 & 1) == 0)
  {
    sub_1FAF00(v9);
    uint64_t v11 = v10;
    v0[149] = 0;
    unsigned int v12 = [v2 createDirectoryAtURL:v10 withIntermediateDirectories:1 attributes:0 error:v0 + 149];

    int64_t v13 = (void *)v0[149];
    if (!v12)
    {
      uint64_t v74 = v0[183];
      uint64_t v75 = v0[182];
      uint64_t v76 = v0[176];
      char v77 = v1;
      uint64_t v78 = v98[175];
      id v79 = v13;
      sub_1FAEB0();

      swift_willThrow();
      uint64_t v80 = *(void (**)(uint64_t, uint64_t))(v76 + 8);
      v80(v75, v78);
      v80(v74, v78);
      goto LABEL_39;
    }
    id v14 = v13;
  }
  uint64_t v89 = v1;
  uint64_t v15 = v0[176];
  uint64_t v16 = v98[175];
  uint64_t v17 = v98[174];
  uint64_t v18 = *(void **)(v98[158] + 16);
  uint64_t v19 = v18[5];
  uint64_t v20 = v18[6];
  sub_5D64(v18 + 2, v19);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v20 + 8))(__src, v19, v20);
  memcpy(v98 + 2, __src, 0x460uLL);
  sub_8D0E4((uint64_t)(v98 + 88));
  sub_11D3C((uint64_t)(v98 + 2));
  swift_bridgeObjectRetain();
  sub_1C1964((uint64_t)(v98 + 88));
  unint64_t v21 = v98;
  sub_1FAF60();
  swift_bridgeObjectRelease();
  char v22 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v15 + 48);
  v98[186] = v22;
  v98[187] = (v15 + 48) & 0xFFFFFFFFFFFFLL | 0x60F0000000000000;
  if (v22(v17, 1, v16) == 1)
  {
    uint64_t v23 = v98[183];
    uint64_t v24 = v98[182];
    uint64_t v25 = v98[176];
    uint64_t v26 = v98[175];
    sub_55F38(v98[174], &qword_26E7A8);
    sub_1C1CAC();
    swift_allocError();
    swift_willThrow();

    int v27 = *(void (**)(uint64_t, uint64_t))(v25 + 8);
    v27(v24, v26);
    v27(v23, v26);
LABEL_39:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    char v81 = (uint64_t (*)(void))v98[1];
    return v81();
  }
  uint64_t v29 = v98[181];
  uint64_t v30 = v98[177];
  uint64_t v31 = v98[176];
  uint64_t v32 = v98[175];
  uint64_t v33 = v98[174];
  uint64_t v34 = v98[159];
  uint64_t v35 = *(void (**)(uint64_t, uint64_t, uint64_t))(v31 + 32);
  v98[188] = v35;
  v98[189] = (v31 + 32) & 0xFFFFFFFFFFFFLL | 0x48D8000000000000;
  uint64_t v86 = v35;
  v35(v29, v33, v32);
  uint64_t v83 = v34 + 56;
  uint64_t v36 = -1;
  uint64_t v37 = -1 << *(unsigned char *)(v34 + 32);
  if (-v37 < 64) {
    uint64_t v36 = ~(-1 << -(char)v37);
  }
  unint64_t v38 = v36 & *(void *)(v34 + 56);
  uint64_t v87 = v34;
  uint64_t v88 = v31;
  int64_t v84 = (unint64_t)(63 - v37) >> 6;
  uint64_t v85 = v30 + 7;
  swift_bridgeObjectRetain();
  int64_t v39 = 0;
  while (1)
  {
    if (v38)
    {
      uint64_t v96 = (v38 - 1) & v38;
      int64_t v97 = v39;
      unint64_t v41 = __clz(__rbit64(v38)) | (v39 << 6);
      goto LABEL_28;
    }
    int64_t v42 = v39 + 1;
    if (__OFADD__(v39, 1))
    {
      __break(1u);
      goto LABEL_43;
    }
    if (v42 >= v84) {
      goto LABEL_35;
    }
    unint64_t v43 = *(void *)(v83 + 8 * v42);
    int64_t v44 = v39 + 1;
    if (!v43)
    {
      int64_t v44 = v39 + 2;
      if (v39 + 2 >= v84) {
        goto LABEL_35;
      }
      unint64_t v43 = *(void *)(v83 + 8 * v44);
      if (!v43)
      {
        int64_t v44 = v39 + 3;
        if (v39 + 3 >= v84) {
          goto LABEL_35;
        }
        unint64_t v43 = *(void *)(v83 + 8 * v44);
        if (!v43) {
          break;
        }
      }
    }
LABEL_27:
    uint64_t v96 = (v43 - 1) & v43;
    int64_t v97 = v44;
    unint64_t v41 = __clz(__rbit64(v43)) + (v44 << 6);
LABEL_28:
    uint64_t v46 = v21[182];
    uint64_t v47 = v21[181];
    uint64_t v48 = v21[180];
    uint64_t v49 = v21[179];
    uint64_t v90 = v49;
    uint64_t v50 = v21[175];
    uint64_t v51 = v21[168];
    uint64_t v52 = (uint64_t *)(*(void *)(v87 + 48) + 16 * v41);
    uint64_t v94 = *v52;
    uint64_t v95 = v21[167];
    uint64_t v92 = v51;
    uint64_t v93 = v52[1];
    uint64_t v53 = sub_1FBC60();
    uint64_t v91 = *(void *)(v53 - 8);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v91 + 56))(v51, 1, 1, v53);
    uint64_t v54 = *(void (**)(uint64_t, uint64_t, uint64_t))(v88 + 16);
    v54(v48, v46, v50);
    v54(v49, v47, v50);
    uint64_t v55 = *(unsigned __int8 *)(v88 + 80);
    uint64_t v56 = (v55 + 32) & ~v55;
    unint64_t v57 = (v56 + v85) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v58 = (v55 + v57 + 16) & ~v55;
    unint64_t v59 = (v58 + v85) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v60 = swift_allocObject();
    *(void *)(v60 + 16) = 0;
    char v61 = (void *)(v60 + 16);
    *(void *)(v60 + 24) = 0;
    v86(v60 + v56, v48, v50);
    uint64_t v62 = (void *)(v60 + v57);
    void *v62 = v94;
    v62[1] = v93;
    uint64_t v63 = v60 + v58;
    unint64_t v21 = v98;
    v86(v63, v90, v50);
    *(void *)(v60 + v59) = v89;
    sub_5606C(v92, v95, &qword_26D908);
    LODWORD(v48) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v91 + 48))(v95, 1, v53);
    swift_bridgeObjectRetain();
    id v64 = v89;
    uint64_t v65 = v98[167];
    if (v48 == 1)
    {
      sub_55F38(v98[167], &qword_26D908);
      if (*v61) {
        goto LABEL_30;
      }
    }
    else
    {
      sub_1FBC50();
      (*(void (**)(uint64_t, uint64_t))(v91 + 8))(v65, v53);
      if (*v61)
      {
LABEL_30:
        swift_getObjectType();
        swift_unknownObjectRetain();
        uint64_t v66 = sub_1FBBD0();
        uint64_t v68 = v67;
        swift_unknownObjectRelease();
        goto LABEL_33;
      }
    }
    uint64_t v66 = 0;
    uint64_t v68 = 0;
LABEL_33:
    unint64_t v38 = v96;
    uint64_t v69 = *(void *)v98[157];
    uint64_t v70 = v68 | v66;
    if (v68 | v66)
    {
      uint64_t v70 = (uint64_t)(v98 + 142);
      v98[142] = 0;
      v98[143] = 0;
      v98[144] = v66;
      v98[145] = v68;
    }
    int64_t v39 = v97;
    uint64_t v40 = v98[168];
    v98[146] = 1;
    v98[147] = v70;
    v98[148] = v69;
    swift_task_create();
    swift_release();
    sub_55F38(v40, &qword_26D908);
  }
  uint64_t v45 = v39 + 4;
  if (v39 + 4 < v84)
  {
    unint64_t v43 = *(void *)(v83 + 8 * v45);
    if (!v43)
    {
      while (1)
      {
        int64_t v44 = v45 + 1;
        if (__OFADD__(v45, 1)) {
          break;
        }
        if (v44 >= v84) {
          goto LABEL_35;
        }
        unint64_t v43 = *(void *)(v83 + 8 * v44);
        ++v45;
        if (v43) {
          goto LABEL_27;
        }
      }
LABEL_43:
      __break(1u);
    }
    int64_t v44 = v39 + 4;
    goto LABEL_27;
  }
LABEL_35:
  swift_release();
  sub_12124(&qword_26D670);
  sub_1FBC80();
  v21[190] = v21[151];
  uint64_t v71 = (void *)swift_task_alloc();
  v21[191] = v71;
  *uint64_t v71 = v21;
  v71[1] = sub_1BE7D8;
  uint64_t v72 = v21[170];
  uint64_t v73 = v21[169];
  return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v73, 0, 0, v72, v21 + 152);
}

uint64_t sub_1BE7D8()
{
  *(void *)(*(void *)v1 + 1536) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1BF258;
  }
  else {
    id v2 = sub_1BE918;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1BE918()
{
  uint64_t v1 = *(void *)(v0 + 1352);
  if ((*(unsigned int (**)(uint64_t, uint64_t, void))(*(void *)(v0 + 1288) + 48))(v1, 1, *(void *)(v0 + 1280)) != 1)
  {
    uint64_t v32 = *(void *)(v0 + 1312);
    uint64_t v33 = *(void *)(v0 + 1304);
    uint64_t v34 = *(void *)(v0 + 1296);
    sub_1C1F7C(v1, v34);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48))(v34, 1, v33) == 1)
    {
      sub_55F38(*(void *)(v0 + 1296), &qword_2737A8);
      uint64_t v35 = *(void **)(v0 + 1520);
LABEL_34:
      *(void *)(v0 + 1520) = v35;
      uint64_t v87 = (void *)swift_task_alloc();
      *(void *)(v0 + 1528) = v87;
      *uint64_t v87 = v0;
      v87[1] = sub_1BE7D8;
      uint64_t v88 = *(void *)(v0 + 1360);
      uint64_t v89 = *(void *)(v0 + 1352);
      return _sScg8IteratorV4next9isolationxSgScA_pSgYi_tYaq_YKF(v89, 0, 0, v88, v0 + 1216);
    }
    uint64_t v36 = *(void *)(v0 + 1520);
    uint64_t v37 = *(void *)(v0 + 1328);
    uint64_t v38 = *(void *)(v0 + 1320);
    uint64_t v39 = *(void *)(v0 + 1304);
    sub_1C1FE4(*(void *)(v0 + 1296), v37);
    uint64_t v40 = (uint64_t *)(v37 + *(int *)(v39 + 20));
    uint64_t v42 = *v40;
    uint64_t v41 = v40[1];
    sub_1C2048(v37, v38);
    swift_bridgeObjectRetain();
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    *(void *)(v0 + 1240) = v36;
    *(void *)(v0 + 1208) = 0x8000000000000000;
    unint64_t v45 = sub_4C328(v42, v41);
    uint64_t v46 = *(void *)(v36 + 16);
    BOOL v47 = (v44 & 1) == 0;
    uint64_t v48 = v46 + v47;
    if (__OFADD__(v46, v47))
    {
      __break(1u);
    }
    else
    {
      char v49 = v44;
      if (*(void *)(*(void *)(v0 + 1520) + 24) >= v48)
      {
        if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
          sub_123DB4();
        }
      }
      else
      {
        sub_11E900(v48, isUniquelyReferenced_nonNull_native);
        unint64_t v50 = sub_4C328(v42, v41);
        if ((v49 & 1) != (v51 & 1))
        {
          return sub_1FC770();
        }
        unint64_t v45 = v50;
      }
      uint64_t v35 = *(void **)(v0 + 1240);
      uint64_t v80 = *(void *)(v0 + 1320);
      uint64_t v81 = *(void *)(v0 + 1312);
      if (v49)
      {
        sub_1C2108(v80, v35[7] + *(void *)(v81 + 72) * v45);
LABEL_33:
        uint64_t v86 = *(void *)(v0 + 1328);
        *(void *)(v0 + 1208) = v35;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        sub_1C20AC(v86);
        goto LABEL_34;
      }
      v35[(v45 >> 6) + 8] |= 1 << v45;
      double v82 = (uint64_t *)(v35[6] + 16 * v45);
      *double v82 = v42;
      v82[1] = v41;
      sub_1C1FE4(v80, v35[7] + *(void *)(v81 + 72) * v45);
      uint64_t v83 = v35[2];
      BOOL v84 = __OFADD__(v83, 1);
      uint64_t v85 = v83 + 1;
      if (!v84)
      {
        v35[2] = v85;
        swift_bridgeObjectRetain();
        goto LABEL_33;
      }
    }
    __break(1u);
  }
  id v2 = *(void **)(v0 + 1480);
  (*(void (**)(void, void))(*(void *)(v0 + 1368) + 8))(*(void *)(v0 + 1376), *(void *)(v0 + 1360));
  sub_1FAF00(v3);
  uint64_t v5 = v4;
  sub_12124(&qword_273AA0);
  uint64_t v6 = swift_allocObject();
  *(_OWORD *)(v6 + 16) = xmmword_1FD2A0;
  *(void *)(v6 + 32) = NSURLIsDirectoryKey;
  type metadata accessor for URLResourceKey(0);
  NSString v7 = NSURLIsDirectoryKey;
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  *(void *)(v0 + 1224) = 0;
  id v9 = [v2 contentsOfDirectoryAtURL:v5 includingPropertiesForKeys:isa options:0 error:v0 + 1224];

  id v10 = *(void **)(v0 + 1224);
  if (v9)
  {
    uint64_t v11 = sub_1FBAC0();
    id v12 = v10;

    uint64_t v13 = sub_1BCD78(v11, (uint64_t *)(v0 + 1208));
    uint64_t v14 = *(void *)(v13 + 16);
    uint64_t v15 = *(void *)(v0 + 1408);
    if (v14)
    {
      unint64_t v16 = v13 + ((*(unsigned __int8 *)(v15 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v15 + 80));
      uint64_t v90 = *(void *)(v15 + 72);
      uint64_t v91 = *(void (**)(uint64_t, unint64_t, uint64_t))(v15 + 16);
      uint64_t v17 = (void (**)(uint64_t, void, uint64_t, uint64_t))(v15 + 56);
      uint64_t v18 = (void (**)(uint64_t, uint64_t))(v15 + 8);
      while (1)
      {
        uint64_t v19 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v0 + 1488);
        uint64_t v20 = *(void *)(v0 + 1400);
        uint64_t v21 = *(void *)(v0 + 1384);
        v91(v21, v16, v20);
        char v22 = *v17;
        (*v17)(v21, 0, 1, v20);
        if (v19(v21, 1, v20) == 1) {
          break;
        }
        uint64_t v23 = *(void **)(v0 + 1480);
        (*(void (**)(void, void, void))(v0 + 1504))(*(void *)(v0 + 1424), *(void *)(v0 + 1384), *(void *)(v0 + 1400));
        sub_1FAF00(v24);
        uint64_t v26 = v25;
        *(void *)(v0 + 1232) = 0;
        LODWORD(v23) = [v23 removeItemAtURL:v25 error:v0 + 1232];

        int v27 = *(void **)(v0 + 1232);
        if (!v23)
        {
          uint64_t v72 = *(void **)(v0 + 1480);
          uint64_t v73 = *(void **)(v0 + 1472);
          uint64_t v92 = *(void *)(v0 + 1464);
          uint64_t v74 = *(void *)(v0 + 1456);
          uint64_t v75 = *(void *)(v0 + 1448);
          uint64_t v76 = *(void *)(v0 + 1424);
          uint64_t v77 = *(void *)(v0 + 1400);
          id v78 = v27;
          sub_1FAEB0();

          swift_willThrow();
          id v79 = *v18;
          (*v18)(v76, v77);

          swift_bridgeObjectRelease();
          v79(v75, v77);
          v79(v74, v77);
          v79(v92, v77);
          goto LABEL_24;
        }
        uint64_t v28 = *(void *)(v0 + 1424);
        uint64_t v29 = *(void *)(v0 + 1400);
        uint64_t v30 = *v18;
        id v31 = v27;
        v30(v28, v29);
        v16 += v90;
        if (!--v14) {
          goto LABEL_21;
        }
      }
    }
    else
    {
      char v22 = *(void (**)(void, uint64_t, uint64_t, void))(v15 + 56);
LABEL_21:
      v22(*(void *)(v0 + 1384), 1, 1, *(void *)(v0 + 1400));
    }
    uint64_t v62 = *(void **)(v0 + 1480);
    uint64_t v63 = *(void **)(v0 + 1472);
    uint64_t v64 = *(void *)(v0 + 1464);
    uint64_t v65 = *(void *)(v0 + 1456);
    uint64_t v66 = *(void *)(v0 + 1448);
    uint64_t v67 = *(void *)(v0 + 1408);
    uint64_t v68 = *(void *)(v0 + 1400);
    uint64_t v69 = *(void **)(v0 + 1248);
    swift_bridgeObjectRelease();

    uint64_t v70 = *(void (**)(uint64_t, uint64_t))(v67 + 8);
    v70(v66, v68);
    v70(v65, v68);
    v70(v64, v68);
    *uint64_t v69 = *(void *)(v0 + 1208);
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
  }
  else
  {
    uint64_t v53 = *(void **)(v0 + 1480);
    uint64_t v54 = *(void **)(v0 + 1472);
    uint64_t v55 = *(void *)(v0 + 1464);
    uint64_t v56 = *(void *)(v0 + 1456);
    uint64_t v57 = *(void *)(v0 + 1448);
    uint64_t v58 = *(void *)(v0 + 1408);
    uint64_t v59 = *(void *)(v0 + 1400);
    id v60 = v10;
    sub_1FAEB0();

    swift_willThrow();
    char v61 = *(void (**)(uint64_t, uint64_t))(v58 + 8);
    v61(v57, v59);
    v61(v56, v59);
    v61(v55, v59);
LABEL_24:
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v71 = *(uint64_t (**)(void))(v0 + 8);
  }
  return v71();
}

uint64_t sub_1BF258()
{
  uint64_t v1 = *(void **)(v0 + 1472);
  uint64_t v2 = *(void *)(v0 + 1464);
  uint64_t v3 = *(void *)(v0 + 1456);
  uint64_t v4 = *(void *)(v0 + 1448);
  uint64_t v5 = *(void *)(v0 + 1408);
  uint64_t v6 = *(void *)(v0 + 1400);
  uint64_t v7 = *(void *)(v0 + 1376);
  uint64_t v8 = *(void *)(v0 + 1368);
  uint64_t v9 = *(void *)(v0 + 1360);

  (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
  id v10 = *(void (**)(uint64_t, uint64_t))(v5 + 8);
  v10(v4, v6);
  v10(v3, v6);
  v10(v2, v6);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = *(uint64_t (**)(void))(v0 + 8);
  return v11();
}

uint64_t sub_1BF454(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = *(void *)(v2 + 16);
  uint64_t v6 = *(void *)(v2 + 24);
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v8;
  *uint64_t v8 = v3;
  v8[1] = sub_98BD4;
  return sub_1BDA10(a1, a2, v7, v6);
}

uint64_t sub_1BF508(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[7] = a7;
  v8[8] = a8;
  v8[5] = a5;
  v8[6] = a6;
  v8[3] = a1;
  v8[4] = a4;
  uint64_t v9 = sub_1FABD0();
  v8[9] = v9;
  v8[10] = *(void *)(v9 - 8);
  v8[11] = swift_task_alloc();
  uint64_t v10 = sub_1FAF80();
  v8[12] = v10;
  v8[13] = *(void *)(v10 - 8);
  v8[14] = swift_task_alloc();
  v8[15] = swift_task_alloc();
  unsigned char v8[16] = swift_task_alloc();
  v8[17] = swift_task_alloc();
  return _swift_task_switch(sub_1BF680, 0, 0);
}

uint64_t sub_1BF680()
{
  sub_1FAF10();
  uint64_t v1 = self;
  v0[18] = v1;
  id v2 = [v1 defaultManager];
  sub_1FAF50();
  NSString v3 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  unsigned int v4 = [v2 fileExistsAtPath:v3];

  if (v4)
  {
    uint64_t v5 = v0[12];
    uint64_t v6 = v0[13];
    uint64_t v8 = v0[5];
    uint64_t v7 = v0[6];
    uint64_t v9 = v0[3];
    (*(void (**)(uint64_t, void, uint64_t))(v6 + 32))(v9, v0[17], v5);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v6 + 56))(v9, 0, 1, v5);
    uint64_t v10 = type metadata accessor for TabiPackage();
    uint64_t v11 = (void *)(v9 + *(int *)(v10 + 20));
    *uint64_t v11 = v8;
    v11[1] = v7;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
    swift_bridgeObjectRetain();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v12 = (uint64_t (*)(void))v0[1];
    return v12();
  }
  else
  {
    uint64_t v14 = v0[16];
    uint64_t v16 = v0[13];
    uint64_t v15 = v0[14];
    uint64_t v17 = v0[12];
    sub_1FAF10();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v16 + 16))(v15, v14, v17);
    sub_1FAB80();
    uint64_t v18 = (void *)swift_task_alloc();
    v0[19] = v18;
    *uint64_t v18 = v0;
    v18[1] = sub_1BF960;
    uint64_t v19 = v0[15];
    uint64_t v20 = v0[11];
    return NSURLSession.download(for:delegate:)(v19, v20, 0);
  }
}

uint64_t sub_1BF960(void *a1)
{
  unsigned int v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 160) = v1;
  swift_task_dealloc();
  uint64_t v5 = v4[11];
  uint64_t v6 = v4[10];
  uint64_t v7 = v4[9];
  if (v1)
  {
    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_1BFE24;
  }
  else
  {

    (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v5, v7);
    uint64_t v8 = sub_1BFB2C;
  }
  return _swift_task_switch(v8, 0, 0);
}

uint64_t sub_1BFB2C()
{
  id v1 = [*(id *)(v0 + 144) defaultManager];
  sub_1FAF00(v2);
  unsigned int v4 = v3;
  sub_1FAF00(v5);
  uint64_t v7 = v6;
  *(void *)(v0 + 16) = 0;
  unsigned int v8 = [v1 moveItemAtURL:v4 toURL:v6 error:v0 + 16];

  uint64_t v9 = *(void **)(v0 + 16);
  uint64_t v10 = *(void *)(v0 + 136);
  uint64_t v11 = *(void *)(v0 + 128);
  uint64_t v12 = *(void *)(v0 + 120);
  uint64_t v14 = *(void *)(v0 + 96);
  uint64_t v13 = *(void *)(v0 + 104);
  if (v8)
  {
    uint64_t v25 = *(void *)(v0 + 40);
    uint64_t v26 = *(void *)(v0 + 48);
    uint64_t v15 = *(void *)(v0 + 24);
    uint64_t v16 = *(void *)(v0 + 136);
    uint64_t v17 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    id v18 = v9;
    v17(v12, v14);
    v17(v11, v14);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v13 + 32))(v15, v16, v14);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56))(v15, 0, 1, v14);
    uint64_t v19 = type metadata accessor for TabiPackage();
    uint64_t v20 = (void *)(v15 + *(int *)(v19 + 20));
    *uint64_t v20 = v25;
    v20[1] = v26;
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v15, 0, 1, v19);
    swift_bridgeObjectRetain();
  }
  else
  {
    id v22 = v9;
    sub_1FAEB0();

    swift_willThrow();
    uint64_t v23 = *(void (**)(uint64_t, uint64_t))(v13 + 8);
    v23(v12, v14);
    v23(v11, v14);
    v23(v10, v14);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v21 = *(uint64_t (**)(void))(v0 + 8);
  return v21();
}

uint64_t sub_1BFE24()
{
  uint64_t v1 = v0[17];
  uint64_t v2 = v0[12];
  NSString v3 = *(void (**)(uint64_t, uint64_t))(v0[13] + 8);
  v3(v0[16], v2);
  v3(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  unsigned int v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t TabiPackageService.deinit()
{
  swift_release();
  return v0;
}

uint64_t TabiPackageService.__deallocating_deinit()
{
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_1BFF74()
{
  return sub_1C0000((unint64_t *)&unk_2737C8);
}

void *sub_1BFFA8()
{
  return &protocol witness table for String;
}

void *sub_1BFFB4()
{
  return &protocol witness table for String;
}

void *sub_1BFFC0()
{
  return &protocol witness table for String;
}

uint64_t sub_1BFFCC()
{
  return sub_1C0000((unint64_t *)&qword_272B30);
}

uint64_t sub_1C0000(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for TabiPackage();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1C0044()
{
  return sub_1FB4B0();
}

uint64_t sub_1C005C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 24) = a1;
  *(void *)(v2 + 32) = v3;
  return _swift_task_switch(sub_1C0080, 0, 0);
}

uint64_t sub_1C0080()
{
  uint64_t v1 = sub_12124(&qword_2737A8);
  uint64_t v2 = (int8x16_t *)swift_task_alloc();
  *(void *)(v0 + 40) = v2;
  v2[1] = vextq_s8(*(int8x16_t *)(v0 + 24), *(int8x16_t *)(v0 + 24), 8uLL);
  uint64_t v3 = sub_12124(&qword_2737C0);
  unsigned int v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 48) = v4;
  *unsigned int v4 = v0;
  v4[1] = sub_1BD890;
  return withThrowingTaskGroup<A, B>(of:returning:isolation:body:)(v0 + 16, v1, v3, 0, 0, &unk_273A70, v2, v1);
}

uint64_t *initializeBufferWithCopyOfBuffer for TabiPackage(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v10 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v10 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FAF80();
    uint64_t v8 = *(void *)(v7 - 8);
    if ((*(unsigned int (**)(uint64_t *, uint64_t, uint64_t))(v8 + 48))(a2, 1, v7))
    {
      uint64_t v9 = sub_12124(&qword_26E7A8);
      memcpy(a1, a2, *(void *)(*(void *)(v9 - 8) + 64));
    }
    else
    {
      (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(a1, a2, v7);
      (*(void (**)(uint64_t *, void, uint64_t, uint64_t))(v8 + 56))(a1, 0, 1, v7);
    }
    uint64_t v11 = *(int *)(a3 + 20);
    uint64_t v12 = (uint64_t *)((char *)a1 + v11);
    uint64_t v13 = (uint64_t *)((char *)a2 + v11);
    uint64_t v14 = v13[1];
    *uint64_t v12 = *v13;
    v12[1] = v14;
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t destroy for TabiPackage(uint64_t a1)
{
  uint64_t v2 = sub_1FAF80();
  uint64_t v3 = *(void *)(v2 - 8);
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(a1, 1, v2)) {
    (*(void (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
  }

  return swift_bridgeObjectRelease();
}

char *initializeWithCopy for TabiPackage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1FAF80();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_12124(&qword_26E7A8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  uint64_t v9 = *(int *)(a3 + 20);
  uint64_t v10 = &a1[v9];
  uint64_t v11 = &a2[v9];
  uint64_t v12 = *((void *)v11 + 1);
  *(void *)uint64_t v10 = *(void *)v11;
  *((void *)v10 + 1) = v12;
  swift_bridgeObjectRetain();
  return a1;
}

char *assignWithCopy for TabiPackage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1FAF80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 24))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_12124(&qword_26E7A8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  *(void *)uint64_t v13 = *(void *)v14;
  *((void *)v13 + 1) = *((void *)v14 + 1);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

char *initializeWithTake for TabiPackage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1FAF80();
  uint64_t v7 = *(void *)(v6 - 8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(a2, 1, v6))
  {
    uint64_t v8 = sub_12124(&qword_26E7A8);
    memcpy(a1, a2, *(void *)(*(void *)(v8 - 8) + 64));
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
  }
  *(_OWORD *)&a1[*(int *)(a3 + 20)] = *(_OWORD *)&a2[*(int *)(a3 + 20)];
  return a1;
}

char *assignWithTake for TabiPackage(char *a1, char *a2, uint64_t a3)
{
  uint64_t v6 = sub_1FAF80();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v7 + 48);
  int v9 = v8(a1, 1, v6);
  int v10 = v8(a2, 1, v6);
  if (!v9)
  {
    if (!v10)
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 40))(a1, a2, v6);
      goto LABEL_7;
    }
    (*(void (**)(char *, uint64_t))(v7 + 8))(a1, v6);
    goto LABEL_6;
  }
  if (v10)
  {
LABEL_6:
    uint64_t v11 = sub_12124(&qword_26E7A8);
    memcpy(a1, a2, *(void *)(*(void *)(v11 - 8) + 64));
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v7 + 32))(a1, a2, v6);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v7 + 56))(a1, 0, 1, v6);
LABEL_7:
  uint64_t v12 = *(int *)(a3 + 20);
  uint64_t v13 = &a1[v12];
  uint64_t v14 = &a2[v12];
  uint64_t v16 = *(void *)v14;
  uint64_t v15 = *((void *)v14 + 1);
  *(void *)uint64_t v13 = v16;
  *((void *)v13 + 1) = v15;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for TabiPackage(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C09A0);
}

uint64_t sub_1C09A0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_12124(&qword_26E7A8);
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 8);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t storeEnumTagSinglePayload for TabiPackage(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C0A7C);
}

uint64_t sub_1C0A7C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_12124(&qword_26E7A8);
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 8) = (a2 - 1);
  }
  return result;
}

void sub_1C0B40()
{
  sub_1C0BD4();
  if (v0 <= 0x3F) {
    swift_initStructMetadata();
  }
}

void sub_1C0BD4()
{
  if (!qword_273840)
  {
    sub_1FAF80();
    unint64_t v0 = sub_1FBEB0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_273840);
    }
  }
}

uint64_t type metadata accessor for TabiPackageService()
{
  return self;
}

uint64_t method lookup function for TabiPackageService(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for TabiPackageService);
}

uint64_t type metadata accessor for TabiConfigurationManager()
{
  return self;
}

void *sub_1C0C8C@<X0>(void *a1@<X8>)
{
  uint64_t v3 = *(void *)(*(void *)v1 + 40);
  uint64_t v4 = *(void *)(*(void *)v1 + 48);
  sub_5D64((void *)(*(void *)v1 + 16), v3);
  (*(void (**)(void *__return_ptr, uint64_t, uint64_t))(v4 + 8))(v6, v3, v4);
  sub_8D0E4((uint64_t)v7);
  sub_11D3C((uint64_t)v6);
  return memcpy(a1, v7, 0x1B0uLL);
}

uint64_t sub_1C0D38(uint64_t a1)
{
  *(void *)(v2 + 2256) = a1;
  *(void *)(v2 + 2264) = *v1;
  return _swift_task_switch(sub_1C0D60, 0, 0);
}

uint64_t sub_1C0D60()
{
  uint64_t v1 = *(void **)(v0 + 2264);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 2272) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1C0E7C;
  return v6(v0 + 16, v2, v3);
}

uint64_t sub_1C0E7C()
{
  *(void *)(*(void *)v1 + 2280) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1129E4;
  }
  else {
    uint64_t v2 = sub_1C0F90;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1C0F90()
{
  uint64_t v1 = (void *)v0[282];
  memcpy(v0 + 142, v0 + 2, 0x460uLL);
  sub_8D0E4((uint64_t)(v0 + 228));
  sub_11D3C((uint64_t)(v0 + 142));
  memcpy(v1, v0 + 228, 0x1B0uLL);
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1C1030(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = *(void *)(*(void *)v2 + 40);
  uint64_t v6 = *(void *)(*(void *)v2 + 48);
  sub_5D64((void *)(*(void *)v2 + 16), v5);
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = a1;
  *(void *)(v7 + 24) = a2;
  uint64_t v8 = *(void (**)(uint64_t (*)(uint64_t), uint64_t, uint64_t, uint64_t))(v6 + 24);
  swift_retain();
  v8(sub_1C18F4, v7, v5, v6);

  return swift_release();
}

uint64_t sub_1C10F0()
{
  sub_5D64((void *)(v0 + 16), *(void *)(v0 + 40));
  sub_12124(&qword_272DE0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    sub_5D64((void *)(v0 + 16), *(void *)(v0 + 40));
    sub_12124(&qword_272DE8);
    uint64_t result = sub_1FB260();
    if (v5)
    {
      uint64_t v2 = sub_37C30(&v4, (uint64_t)v6);
      __chkstk_darwin(v2);
      sub_12124(&qword_273A58);
      swift_allocObject();
      uint64_t v3 = sub_1FB360();
      swift_release();
      sub_1264C((uint64_t)v6);
      return v3;
    }
  }
  else
  {
    __break(1u);
  }
  __break(1u);
  return result;
}

uint64_t sub_1C1238(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v12 = sub_12124(&qword_26D908);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v19 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = swift_allocObject();
  *(void *)(v15 + 16) = a1;
  *(void *)(v15 + 24) = a2;
  uint64_t v16 = sub_1FBC60();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56))(v14, 1, 1, v16);
  sub_51B70(a6, (uint64_t)v20);
  uint64_t v17 = (void *)swift_allocObject();
  v17[2] = 0;
  v17[3] = 0;
  v17[4] = a5;
  sub_37C30(v20, (uint64_t)(v17 + 5));
  v17[10] = sub_1C1B34;
  v17[11] = v15;
  v17[12] = a3;
  v17[13] = a4;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1B6494((uint64_t)v14, (uint64_t)&unk_273A68, (uint64_t)v17);
  return swift_release();
}

uint64_t sub_1C13BC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[5] = a8;
  v8[6] = v12;
  v8[3] = a6;
  v8[4] = a7;
  v8[2] = a5;
  uint64_t v9 = (void *)swift_task_alloc();
  v8[7] = v9;
  *uint64_t v9 = v8;
  v9[1] = sub_1C1464;
  return ((uint64_t (*)(void))WorkService.startup())();
}

uint64_t sub_1C1464()
{
  swift_task_dealloc();
  return _swift_task_switch(sub_1C1560, 0, 0);
}

uint64_t sub_1C1560()
{
  sub_5D64(*(void **)(v0 + 16), *(void *)(*(void *)(v0 + 16) + 24));
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 64) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_1C1600;
  return sub_A2120(1);
}

uint64_t sub_1C1600()
{
  *(void *)(*(void *)v1 + 72) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1C1784;
  }
  else
  {
    swift_release();
    uint64_t v2 = sub_1C1720;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1C1720()
{
  (*(void (**)(void))(v0 + 24))();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C1784()
{
  (*(void (**)(void))(v0 + 40))(*(void *)(v0 + 72));
  swift_errorRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t type metadata accessor for BooksTabiWorkServiceStartupTask()
{
  return self;
}

uint64_t sub_1C1820@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = enum case for StartupTaskExecutionPhase.afterLaunching(_:);
  uint64_t v3 = sub_1FB330();
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 104);

  return v4(a1, v2, v3);
}

uint64_t sub_1C1894()
{
  return sub_1C10F0();
}

uint64_t sub_1C18BC()
{
  swift_release();

  return _swift_deallocObject(v0, 32, 7);
}

uint64_t sub_1C18F4(uint64_t a1)
{
  uint64_t v2 = *(void (**)(unsigned char *))(v1 + 16);
  uint64_t v3 = (const void *)(a1 + 688);
  memcpy(__dst, (const void *)(a1 + 688), sizeof(__dst));
  memcpy(v5, v3, sizeof(v5));
  sub_8D0E4((uint64_t)__dst);
  v2(v5);
  return sub_1C1964((uint64_t)__dst);
}

uint64_t sub_1C1964(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 56);
  uint64_t v23 = *(void *)(a1 + 48);
  uint64_t v20 = *(void *)(a1 + 72);
  uint64_t v21 = *(void *)(a1 + 64);
  uint64_t v18 = *(void *)(a1 + 88);
  uint64_t v19 = *(void *)(a1 + 80);
  uint64_t v16 = *(void *)(a1 + 104);
  uint64_t v17 = *(void *)(a1 + 96);
  long long v10 = *(_OWORD *)(a1 + 128);
  long long v11 = *(_OWORD *)(a1 + 112);
  long long v8 = *(_OWORD *)(a1 + 160);
  long long v9 = *(_OWORD *)(a1 + 144);
  long long v6 = *(_OWORD *)(a1 + 192);
  long long v7 = *(_OWORD *)(a1 + 176);
  long long v5 = *(_OWORD *)(a1 + 208);
  uint64_t v2 = *(void *)(a1 + 232);
  uint64_t v3 = *(void *)(a1 + 240);
  uint64_t v14 = *(void *)(a1 + 288);
  uint64_t v15 = *(void *)(a1 + 280);
  uint64_t v12 = *(void *)(a1 + 304);
  uint64_t v13 = *(void *)(a1 + 296);
  uint64_t v26 = *(void *)(a1 + 368);
  uint64_t v27 = *(void *)(a1 + 360);
  uint64_t v24 = *(void *)(a1 + 384);
  uint64_t v25 = *(void *)(a1 + 376);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_11FF4(v23, v22, v21, v20, v19, v18, v17, v16, v11, *((uint64_t *)&v11 + 1), v10, *((uint64_t *)&v10 + 1), v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6,
    *((uint64_t *)&v6 + 1),
    v5,
    *((uint64_t *)&v5 + 1));
  sub_12040(v2, v3);
  sub_12090(v15, v14, v13, v12);
  swift_bridgeObjectRelease();
  sub_120D4(v27, v26, v25, v24);
  return a1;
}

uint64_t sub_1C1B2C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return sub_1C1238(a1, a2, a3, a4, *(void *)(v4 + 16), *(void *)(v4 + 24));
}

uint64_t sub_1C1B34()
{
  return (*(uint64_t (**)(void))(v0 + 16))();
}

uint64_t sub_1C1B5C()
{
  swift_unknownObjectRelease();
  swift_release();
  sub_1264C(v0 + 40);
  swift_release();
  swift_release();

  return _swift_deallocObject(v0, 112, 7);
}

uint64_t sub_1C1BB4()
{
  uint64_t v2 = swift_task_alloc();
  long long v3 = *(_OWORD *)(v0 + 80);
  long long v4 = *(_OWORD *)(v0 + 96);
  *(void *)(v1 + 16) = v2;
  *(void *)uint64_t v2 = v1;
  *(void *)(v2 + 8) = sub_5958;
  *(_OWORD *)(v2 + 40) = v4;
  *(_OWORD *)(v2 + 24) = v3;
  *(void *)(v2 + 16) = v0 + 40;
  long long v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 56) = v5;
  *long long v5 = v2;
  v5[1] = sub_1C1464;
  return ((uint64_t (*)(void))WorkService.startup())();
}

unint64_t sub_1C1CAC()
{
  unint64_t result = qword_273A88;
  if (!qword_273A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_273A88);
  }
  return result;
}

uint64_t sub_1C1D00()
{
  uint64_t v1 = sub_1FAF80();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  uint64_t v5 = v3 | 7;
  uint64_t v6 = *(void *)(v2 + 64) + 7;
  unint64_t v7 = (v3 + ((v6 + v4) & 0xFFFFFFFFFFFFFFF8) + 16) & ~v3;
  unint64_t v8 = (v6 + v7) & 0xFFFFFFFFFFFFFFF8;
  swift_unknownObjectRelease();
  unint64_t v9 = v0 + v4;
  long long v10 = *(void (**)(unint64_t, uint64_t))(v2 + 8);
  v10(v9, v1);
  swift_bridgeObjectRelease();
  v10(v0 + v7, v1);

  return _swift_deallocObject(v0, v8 + 8, v5);
}

uint64_t sub_1C1E24(uint64_t a1)
{
  uint64_t v4 = *(void *)(sub_1FAF80() - 8);
  uint64_t v5 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v6 = (v5 + 32) & ~v5;
  uint64_t v7 = *(void *)(v4 + 64) + 7;
  unint64_t v8 = (v6 + v7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v9 = (v5 + v8 + 16) & ~v5;
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = v1 + v6;
  uint64_t v13 = *(void *)(v1 + v8);
  uint64_t v14 = *(void *)(v1 + v8 + 8);
  uint64_t v15 = v1 + v9;
  uint64_t v16 = *(void *)(v1 + ((v9 + v7) & 0xFFFFFFFFFFFFFFF8));
  uint64_t v17 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v17;
  void *v17 = v2;
  v17[1] = sub_5958;
  return sub_1BF508(a1, v10, v11, v12, v13, v14, v15, v16);
}

uint64_t sub_1C1F7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_2737A8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C1FE4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TabiPackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C2048(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TabiPackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C20AC(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for TabiPackage();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1C2108(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for TabiPackage();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for TabiPackageService.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C2208);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiPackageService.Errors()
{
  return &type metadata for TabiPackageService.Errors;
}

unint64_t sub_1C2244()
{
  unint64_t result = qword_273AA8;
  if (!qword_273AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273AA8);
  }
  return result;
}

unint64_t MediaTypeRecommendationServiceError.description.getter()
{
  uint64_t v1 = *v0;
  sub_1FC050(32);
  swift_bridgeObjectRelease();
  v2._countAndFlagsBits = 0xD00000000000002FLL;
  int v3 = (void *)0x8000000000217F40;
  switch(v1)
  {
    case 1:
      v2._countAndFlagsBits = 0xD000000000000021;
      unsigned int v4 = "not signed into a paid storefront";
      goto LABEL_5;
    case 2:
      int v3 = (void *)0x8000000000217EF0;
      v2._countAndFlagsBits = 0xD000000000000016;
      break;
    case 3:
      v2._countAndFlagsBits = 0xD00000000000005ALL;
      unsigned int v4 = "user has recommendation switch at Account Settings > Personalized Recommendations disabled";
LABEL_5:
      int v3 = (void *)((unint64_t)(v4 - 32) | 0x8000000000000000);
      break;
    default:
      break;
  }
  v2._object = v3;
  sub_1FB8F0(v2);
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

unsigned char *storeEnumTagSinglePayload for MediaTypeRecommendationServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *unint64_t result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C247CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for MediaTypeRecommendationServiceError()
{
  return &type metadata for MediaTypeRecommendationServiceError;
}

uint64_t dispatch thunk of MediaTypeRecommendationServiceType.fetchRecommendedMediaType()(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_98BD4;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of MediaTypeRecommendationServiceType.fetchRecommendedMediaType(from:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 16) + **(int **)(a5 + 16));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_5958;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t dispatch thunk of MediaTypeRecommendationSubserviceType.fetchRecommendedMediaType(with:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_98BD4;
  return v11(a1, a2, a3, a4);
}

void *initializeBufferWithCopyOfBuffer for MangaYouMightLikeOptions(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for MangaYouMightLikeOptions(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

void *assignWithTake for MangaYouMightLikeOptions(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  a1[1] = a2[1];
  return a1;
}

ValueMetadata *type metadata accessor for MangaYouMightLikeOptions()
{
  return &type metadata for MangaYouMightLikeOptions;
}

uint64_t dispatch thunk of MangaYouMightLikeServiceType.fetchBooks(with:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

BooksPersonalization::StoreBookTaste_optional __swiftcall StoreBookTaste.init(rawValue:)(Swift::Int rawValue)
{
  char v2 = 3;
  if ((unint64_t)rawValue < 3) {
    char v2 = rawValue;
  }
  *uint64_t v1 = v2;
  return (BooksPersonalization::StoreBookTaste_optional)rawValue;
}

BooksPersonalization::StoreBookTaste_optional sub_1C29E0(Swift::Int *a1)
{
  return StoreBookTaste.init(rawValue:)(*a1);
}

void sub_1C29E8(void *a1@<X8>)
{
  *a1 = *v1;
}

BooksPersonalization::StoreBookTasteInfo __swiftcall StoreBookTasteInfo.init(taste:explicitlyDeclined:)(BooksPersonalization::StoreBookTaste taste, Swift::Bool explicitlyDeclined)
{
  *char v2 = *(unsigned char *)taste;
  v2[1] = explicitlyDeclined;
  result.taste = taste;
  return result;
}

unint64_t sub_1C2A08()
{
  unint64_t result = qword_273AD0;
  if (!qword_273AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273AD0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for StoreBookTaste(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2B28);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreBookTaste()
{
  return &type metadata for StoreBookTaste;
}

uint64_t getEnumTagSinglePayload for StoreBookTasteInfo(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *((unsigned __int8 *)a1 + 1);
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for StoreBookTasteInfo(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C2CD0);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)(result + 1) = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for StoreBookTasteInfo()
{
  return &type metadata for StoreBookTasteInfo;
}

uint64_t dispatch thunk of StoreBookTastesServiceType.fetchStoreTastes(storeIDs:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  BOOL v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *BOOL v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

unint64_t sub_1C2E0C(char a1)
{
  unint64_t result = 0x65726E654778616DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6F6874754178616DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000023;
      break;
    case 3:
      unint64_t result = 0xD00000000000001ALL;
      break;
    case 4:
      unint64_t result = 0xD00000000000001FLL;
      break;
    case 5:
      unint64_t result = 0xD00000000000001DLL;
      break;
    default:
      return result;
  }
  return result;
}

unint64_t sub_1C2EF8()
{
  return sub_1C2E0C(*v0);
}

uint64_t sub_1C2F00@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1C3A58(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1C2F28(uint64_t a1)
{
  unint64_t v2 = sub_1C31DC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1C2F64(uint64_t a1)
{
  unint64_t v2 = sub_1C31DC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t TabiConfiguration.SeedBookRecommendationConfiguration.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_273AE0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  BOOL v7 = (char *)v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  v16[6] = v1[2];
  v16[7] = v8;
  uint64_t v9 = v1[3];
  uint64_t v10 = v1[4];
  v16[4] = v1[5];
  v16[5] = v9;
  v16[1] = v1[6];
  v16[2] = v1[7];
  v16[3] = v10;
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  sub_5D64(v12, v11);
  sub_1C31DC();
  sub_1FC870();
  char v22 = 0;
  sub_1FC520();
  if (!v2)
  {
    char v21 = 1;
    sub_1FC520();
    char v20 = 2;
    sub_1FC4E0();
    char v19 = 3;
    sub_1FC4E0();
    char v18 = 4;
    sub_1FC4E0();
    char v17 = 5;
    sub_1FC520();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

unint64_t sub_1C31DC()
{
  unint64_t result = qword_273AE8;
  if (!qword_273AE8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273AE8);
  }
  return result;
}

uint64_t TabiConfiguration.SeedBookRecommendationConfiguration.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_273AF0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1C31DC();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  char v32 = 0;
  uint64_t v9 = sub_1FC3E0();
  char v31 = 1;
  uint64_t v10 = sub_1FC3E0();
  char v30 = 2;
  uint64_t v11 = sub_1FC3A0();
  uint64_t v13 = v12;
  uint64_t v25 = v11;
  char v29 = 3;
  swift_bridgeObjectRetain();
  uint64_t v26 = v13;
  uint64_t v22 = sub_1FC3A0();
  char v28 = 4;
  uint64_t v24 = v14;
  swift_bridgeObjectRetain();
  uint64_t v23 = 0;
  uint64_t v21 = sub_1FC3A0();
  char v27 = 5;
  uint64_t v23 = v15;
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1FC3E0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  *a2 = v9;
  a2[1] = v10;
  uint64_t v17 = v26;
  a2[2] = v25;
  a2[3] = v17;
  uint64_t v18 = v23;
  uint64_t v19 = v24;
  a2[4] = v22;
  a2[5] = v19;
  a2[6] = v21;
  a2[7] = v18;
  a2[8] = v16;
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1C35B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return TabiConfiguration.SeedBookRecommendationConfiguration.init(from:)(a1, a2);
}

uint64_t sub_1C35D0(void *a1)
{
  return TabiConfiguration.SeedBookRecommendationConfiguration.encode(to:)(a1);
}

uint64_t _s11descr251E29O35SeedBookRecommendationConfigurationVwxx()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t _s11descr251E29O35SeedBookRecommendationConfigurationVwcp(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *_s11descr251E29O35SeedBookRecommendationConfigurationVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  a1[7] = a2[7];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[8] = a2[8];
  return a1;
}

uint64_t _s11descr251E29O35SeedBookRecommendationConfigurationVwta(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v6;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t _s11descr251E29O35SeedBookRecommendationConfigurationVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s11descr251E29O35SeedBookRecommendationConfigurationVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for TabiConfiguration.SeedBookRecommendationConfiguration()
{
  return &type metadata for TabiConfiguration.SeedBookRecommendationConfiguration;
}

unsigned char *_s11descr251E29O35SeedBookRecommendationConfigurationV10CodingKeysOwst(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *unint64_t result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1C3918);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *_s11descr251E29O35SeedBookRecommendationConfigurationV10CodingKeysOMa()
{
  return &_s11descr251E29O35SeedBookRecommendationConfigurationV10CodingKeysON;
}

unint64_t sub_1C3954()
{
  unint64_t result = qword_273AF8;
  if (!qword_273AF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273AF8);
  }
  return result;
}

unint64_t sub_1C39AC()
{
  unint64_t result = qword_273B00;
  if (!qword_273B00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273B00);
  }
  return result;
}

unint64_t sub_1C3A04()
{
  unint64_t result = qword_273B08;
  if (!qword_273B08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273B08);
  }
  return result;
}

uint64_t sub_1C3A58(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x65726E654778616DLL && a2 == 0xEB00000000734449;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6874754178616DLL && a2 == 0xEC00000073444972 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000023 && a2 == 0x800000000021A600 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x80000000002191F0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD00000000000001FLL && a2 == 0x800000000021A630 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD00000000000001DLL && a2 == 0x800000000021A650)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1C3CE8()
{
  uint64_t v0 = sub_1FAD40();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v2 = __chkstk_darwin(v0);
  unsigned int v4 = (char *)&v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_7D408(v2, qword_273B10);
  sub_6DBC8(v0, (uint64_t)qword_273B10);
  sub_1FAD30();
  sub_1FACF0();
  sub_1FAD20();
  uint64_t v5 = *(void (**)(char *, uint64_t))(v1 + 8);
  v5(v4, v0);
  sub_1FAD10();
  sub_1FAD20();
  v5(v4, v0);
  sub_1FAD00();
  sub_1FAD20();
  return ((uint64_t (*)(char *, uint64_t))v5)(v4, v0);
}

uint64_t StringOperationFlattener.deinit()
{
  return v0;
}

Swift::String __swiftcall AggregateFlattener.flatten(string:)(Swift::String string)
{
  object = string._object;
  uint64_t countAndFlagsBits = string._countAndFlagsBits;
  uint64_t v4 = *(void *)(v1 + 16);
  uint64_t v5 = *(void *)(v4 + 16);
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    swift_bridgeObjectRetain_n();
    swift_bridgeObjectRetain();
    do
    {
      uint64_t v7 = object;
      sub_51B70(v6, (uint64_t)v14);
      uint64_t v8 = v15;
      uint64_t v9 = v16;
      sub_5D64(v14, v15);
      uint64_t countAndFlagsBits = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v9 + 8))(countAndFlagsBits, v7, v8, v9);
      object = v10;
      sub_1264C((uint64_t)v14);
      swift_bridgeObjectRelease();
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRetain();
  }
  uint64_t v11 = countAndFlagsBits;
  uint64_t v12 = object;
  result._object = v12;
  result._uint64_t countAndFlagsBits = v11;
  return result;
}

uint64_t sub_1C3F28(uint64_t a1, uint64_t a2)
{
  return AggregateFlattener.flatten(string:)(*(Swift::String *)&a1)._countAndFlagsBits;
}

uint64_t _s20BooksPersonalization24StringOperationFlattenerC7flatten6stringS2S_tF_0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1FAD40();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = a1;
  uint64_t v15 = a2;
  if (qword_26C3C0 != -1) {
    swift_once();
  }
  uint64_t v8 = sub_6DBC8(v4, (uint64_t)qword_273B10);
  (*(void (**)(char *, uint64_t, uint64_t))(v5 + 16))(v7, v8, v4);
  sub_51438();
  sub_1FBEF0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  NSString v10 = sub_1FB7E0();
  id v11 = -[objc_class componentsJoinedByString:](isa, "componentsJoinedByString:", v10, v14, v15);

  sub_1FB810();
  uint64_t v12 = sub_1FB890();
  swift_bridgeObjectRelease();
  return v12;
}

uint64_t dispatch thunk of StringFlatteningServiceType.flatten(string:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return (*(uint64_t (**)(void))(a4 + 8))();
}

uint64_t type metadata accessor for StringOperationFlattener()
{
  return self;
}

uint64_t method lookup function for StringOperationFlattener(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for StringOperationFlattener);
}

uint64_t type metadata accessor for AggregateFlattener()
{
  return self;
}

uint64_t method lookup function for AggregateFlattener(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for AggregateFlattener);
}

uint64_t *sub_1C41B4(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v15 = *a2;
    *a1 = *a2;
    a1 = (uint64_t *)(v15 + ((v5 + 16) & ~(unint64_t)v5));
    swift_retain();
  }
  else
  {
    uint64_t v7 = sub_1FB110();
    (*(void (**)(uint64_t *, uint64_t *, uint64_t))(*(void *)(v7 - 8) + 16))(a1, a2, v7);
    uint64_t v8 = *(int *)(a3 + 20);
    uint64_t v9 = (char *)a1 + v8;
    NSString v10 = (char *)a2 + v8;
    uint64_t v11 = *((void *)v10 + 1);
    *(void *)uint64_t v9 = *(void *)v10;
    *((void *)v9 + 1) = v11;
    uint64_t v12 = *((void *)v10 + 3);
    *((void *)v9 + 2) = *((void *)v10 + 2);
    *((void *)v9 + 3) = v12;
    v9[32] = v10[32];
    v9[33] = v10[33];
    *((void *)v9 + 5) = *((void *)v10 + 5);
    v9[48] = v10[48];
    uint64_t v14 = *((void *)v10 + 7);
    uint64_t v13 = *((void *)v10 + 8);
    *((void *)v9 + 7) = v14;
    *((void *)v9 + 8) = v13;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  return a1;
}

uint64_t sub_1C42CC(uint64_t a1)
{
  uint64_t v2 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1C4354(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(unsigned char *)(v8 + 33) = *(unsigned char *)(v9 + 33);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  uint64_t v13 = *(void *)(v9 + 56);
  uint64_t v12 = *(void *)(v9 + 64);
  *(void *)(v8 + 56) = v13;
  *(void *)(v8 + 64) = v12;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1C441C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 24))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = *(void *)(v9 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = *(void *)(v9 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(unsigned char *)(v8 + 33) = *(unsigned char *)(v9 + 33);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  return a1;
}

uint64_t sub_1C4518(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  long long v10 = *(_OWORD *)(v9 + 48);
  *(_OWORD *)(v8 + 32) = *(_OWORD *)(v9 + 32);
  *(_OWORD *)(v8 + 48) = v10;
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  long long v11 = *(_OWORD *)(v9 + 16);
  *(_OWORD *)uint64_t v8 = *(_OWORD *)v9;
  *(_OWORD *)(v8 + 16) = v11;
  return a1;
}

uint64_t sub_1C45AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 40))(a1, a2, v6);
  uint64_t v7 = *(int *)(a3 + 20);
  uint64_t v8 = a1 + v7;
  uint64_t v9 = a2 + v7;
  uint64_t v10 = *(void *)(v9 + 8);
  *(void *)uint64_t v8 = *(void *)v9;
  *(void *)(v8 + 8) = v10;
  swift_bridgeObjectRelease();
  uint64_t v11 = *(void *)(v9 + 24);
  *(void *)(v8 + 16) = *(void *)(v9 + 16);
  *(void *)(v8 + 24) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(v8 + 32) = *(unsigned char *)(v9 + 32);
  *(unsigned char *)(v8 + 33) = *(unsigned char *)(v9 + 33);
  *(void *)(v8 + 40) = *(void *)(v9 + 40);
  *(unsigned char *)(v8 + 48) = *(unsigned char *)(v9 + 48);
  *(void *)(v8 + 56) = *(void *)(v9 + 56);
  swift_bridgeObjectRelease();
  *(void *)(v8 + 64) = *(void *)(v9 + 64);
  return a1;
}

uint64_t sub_1C4680(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1C4694);
}

uint64_t sub_1C4694(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20) + 24);
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1C4758(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1C476C);
}

uint64_t sub_1C476C(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FB110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20) + 24) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for BookSuggestionsWork()
{
  uint64_t result = qword_273CB8;
  if (!qword_273CB8) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1C4878()
{
  uint64_t result = sub_1FB110();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t sub_1C490C()
{
  return sub_1C4FAC(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
}

void *sub_1C4954(uint64_t a1, uint64_t a2)
{
  unint64_t v4 = *(void *)(a1 + 16);
  unint64_t v5 = *(void *)(a2 + 16);
  if (v5 >= v4) {
    int64_t v6 = *(void *)(a1 + 16);
  }
  else {
    int64_t v6 = *(void *)(a2 + 16);
  }
  sub_46560(0, v6, 0);
  int64_t v7 = v6;
  int64_t v31 = v5;
  unint64_t v32 = v4;
  uint64_t v34 = a1;
  if (v6)
  {
    uint64_t v8 = (uint64_t *)(a1 + 32);
    uint64_t v9 = (uint64_t *)(a2 + 32);
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v11 = a2;
    while (v4)
    {
      if (!v5) {
        goto LABEL_26;
      }
      uint64_t v12 = *v8;
      uint64_t v13 = *v9;
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      unint64_t v14 = _swiftEmptyArrayStorage[3];
      if (v15 >= v14 >> 1)
      {
        uint64_t v29 = v11;
        uint64_t result = (void *)sub_46560(v14 > 1, v15 + 1, 1);
        uint64_t v11 = v29;
      }
      _swiftEmptyArrayStorage[2] = v15 + 1;
      uint64_t v16 = &_swiftEmptyArrayStorage[2 * v15];
      --v5;
      v16[4] = v12;
      v16[5] = v13;
      --v4;
      ++v9;
      ++v8;
      if (!--v6) {
        goto LABEL_13;
      }
    }
    __break(1u);
LABEL_26:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t result = (void *)swift_bridgeObjectRetain();
    uint64_t v11 = a2;
LABEL_13:
    if (v32 <= v31)
    {
LABEL_24:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
    uint64_t v17 = 0;
    if (v7 <= v31) {
      int64_t v18 = v31;
    }
    else {
      int64_t v18 = v7;
    }
    int64_t v19 = v18 - v7;
    unint64_t v20 = v32 - v7;
    uint64_t v21 = 8 * v7 + 32;
    uint64_t v22 = v34 + v21;
    uint64_t v23 = v11 + v21;
    while (v20 != v17)
    {
      if (v31 - v7 == v17) {
        goto LABEL_24;
      }
      if (v19 == v17) {
        goto LABEL_28;
      }
      uint64_t v24 = *(void *)(v22 + 8 * v17);
      uint64_t v25 = *(void *)(v23 + 8 * v17);
      unint64_t v27 = _swiftEmptyArrayStorage[2];
      unint64_t v26 = _swiftEmptyArrayStorage[3];
      if (v27 >= v26 >> 1)
      {
        uint64_t v30 = v11;
        uint64_t v33 = v19;
        uint64_t result = (void *)sub_46560(v26 > 1, v27 + 1, 1);
        int64_t v19 = v33;
        uint64_t v11 = v30;
      }
      _swiftEmptyArrayStorage[2] = v27 + 1;
      char v28 = &_swiftEmptyArrayStorage[2 * v27];
      v28[4] = v24;
      v28[5] = v25;
      if (v20 == ++v17) {
        goto LABEL_24;
      }
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
  return result;
}

uint64_t sub_1C4B80@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = a1[38];
  if (v3)
  {
    uint64_t v5 = a1[40];
    uint64_t v24 = a1[39];
    uint64_t v25 = a1[37];
    uint64_t v6 = qword_26C380;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v6 != -1) {
      swift_once();
    }
    id v7 = (id)qword_272B60;
    sub_1FBD90();
    sub_12124(&qword_26D7F0);
    uint64_t v8 = swift_allocObject();
    *(_OWORD *)(v8 + 16) = xmmword_2026C0;
    sub_1FB110();
    sub_1C4FAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
    uint64_t v9 = sub_1FC580();
    uint64_t v11 = v10;
    *(void *)(v8 + 56) = &type metadata for String;
    unint64_t v12 = sub_5FD80();
    *(void *)(v8 + 32) = v9;
    *(void *)(v8 + 40) = v11;
    *(void *)(v8 + 96) = &type metadata for String;
    *(void *)(v8 + 104) = v12;
    *(void *)(v8 + 64) = v12;
    *(void *)(v8 + 72) = v25;
    *(void *)(v8 + 80) = v3;
    *(void *)(v8 + 136) = &type metadata for String;
    *(void *)(v8 + 144) = v12;
    *(void *)(v8 + 112) = v24;
    *(void *)(v8 + 120) = v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1FB400();

    swift_bridgeObjectRelease();
    uint64_t v13 = (long long *)(v2 + *(int *)(type metadata accessor for BookSuggestionsWork() + 20));
    uint64_t v14 = *((void *)v13 + 2);
    uint64_t v15 = *((void *)v13 + 3);
    char v16 = *((unsigned char *)v13 + 32);
    char v17 = *((unsigned char *)v13 + 33);
    uint64_t v18 = *((void *)v13 + 5);
    char v19 = *((unsigned char *)v13 + 48);
    uint64_t v20 = *((void *)v13 + 7);
    uint64_t v21 = *((void *)v13 + 8);
    long long v26 = *v13;
    uint64_t v27 = v14;
    uint64_t v28 = v15;
    char v29 = v16;
    char v30 = v17;
    uint64_t v31 = v18;
    char v32 = v19;
    uint64_t v33 = v20;
    uint64_t v34 = v21;
    sub_1C52F4((uint64_t)&v26);
    sub_12124(&qword_26D370);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_2055D0;
    *(void *)(v22 + 32) = v25;
    *(void *)(v22 + 40) = v3;
    *(void *)(v22 + 48) = v24;
    *(void *)(v22 + 56) = v5;
    sub_1FB660();
    swift_allocObject();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1FB650();
    *a2 = result;
    a2[1] = v25;
    a2[2] = v3;
    a2[3] = v24;
    a2[4] = v5;
  }
  else
  {
    sub_1C5CEC();
    swift_allocError();
    return swift_willThrow();
  }
  return result;
}

unint64_t sub_1C4E24()
{
  return 0xD000000000000010;
}

double sub_1C4E40@<D0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  sub_1C4B80(a1, (uint64_t *)v6);
  if (!v2)
  {
    double result = *(double *)v6;
    long long v5 = v6[1];
    *(_OWORD *)a2 = v6[0];
    *(_OWORD *)(a2 + 16) = v5;
    *(void *)(a2 + 32) = v7;
  }
  return result;
}

void *sub_1C4E88@<X0>(void *a1@<X8>)
{
  double result = sub_1C5AE8();
  if (!v1) {
    *a1 = result;
  }
  return result;
}

uint64_t sub_1C4EC4(uint64_t a1)
{
  uint64_t result = sub_1C4FAC((unint64_t *)&qword_26EF30, (void (*)(uint64_t))type metadata accessor for BookSuggestionsWork);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1C4F1C()
{
  return sub_1C4FAC(&qword_273CF0, (void (*)(uint64_t))type metadata accessor for BookSuggestionsWork);
}

uint64_t sub_1C4F64()
{
  return sub_1C4FAC((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1C4FAC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1C4FF8()
{
  unint64_t result = qword_273CF8;
  if (!qword_273CF8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273CF8);
  }
  return result;
}

uint64_t sub_1C504C(uint64_t result, int a2, uint64_t a3, uint64_t a4)
{
  if (result < 0 || 1 << *(unsigned char *)(a4 + 32) <= result)
  {
    __break(1u);
    goto LABEL_7;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)result >> 6) + 56) >> result) & 1) == 0)
  {
LABEL_7:
    __break(1u);
    goto LABEL_8;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    return *(void *)(*(void *)(a4 + 48) + 8 * result);
  }
LABEL_8:
  __break(1u);
  return result;
}

void sub_1C509C(uint64_t a1, int a2, char a3, uint64_t a4)
{
  unint64_t v6 = a1;
  if ((a4 & 0xC000000000000001) != 0)
  {
    if (a3)
    {
      sub_1FBFE0();
      type metadata accessor for CachedPersonalizationBookMetadataAuthor();
      swift_unknownObjectRetain();
      swift_dynamicCast();
      swift_unknownObjectRelease();
      return;
    }
    goto LABEL_24;
  }
  if (a3) {
    goto LABEL_10;
  }
  if (a1 < 0 || 1 << *(unsigned char *)(a4 + 32) <= a1)
  {
    __break(1u);
    goto LABEL_21;
  }
  if (((*(void *)(a4 + 8 * ((unint64_t)a1 >> 6) + 56) >> a1) & 1) == 0)
  {
LABEL_21:
    __break(1u);
    goto LABEL_22;
  }
  if (*(_DWORD *)(a4 + 36) == a2) {
    goto LABEL_17;
  }
  __break(1u);
LABEL_10:
  if (sub_1FBFB0() != *(_DWORD *)(a4 + 36))
  {
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  sub_1FBFC0();
  type metadata accessor for CachedPersonalizationBookMetadataAuthor();
  swift_unknownObjectRetain();
  swift_dynamicCast();
  unint64_t v4 = v16;
  swift_unknownObjectRelease();
  Swift::Int v7 = sub_1FBE70(*(void *)(a4 + 40));
  uint64_t v8 = -1 << *(unsigned char *)(a4 + 32);
  unint64_t v6 = v7 & ~v8;
  if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0)
  {
LABEL_23:

    __break(1u);
LABEL_24:
    __break(1u);
    return;
  }
  id v9 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
  char v10 = sub_1FBE80();

  if ((v10 & 1) == 0)
  {
    uint64_t v11 = ~v8;
    do
    {
      unint64_t v6 = (v6 + 1) & v11;
      if (((*(void *)(a4 + 56 + ((v6 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v6) & 1) == 0) {
        goto LABEL_23;
      }
      id v12 = *(id *)(*(void *)(a4 + 48) + 8 * v6);
      char v13 = sub_1FBE80();
    }
    while ((v13 & 1) == 0);
  }

LABEL_17:
  uint64_t v14 = *(void **)(*(void *)(a4 + 48) + 8 * v6);

  id v15 = v14;
}

uint64_t sub_1C52F4(uint64_t a1)
{
  uint64_t v69 = sub_1FB5F0();
  uint64_t v71 = *(void *)(v69 - 8);
  uint64_t v2 = __chkstk_darwin(v69);
  unint64_t v4 = (char *)&v56 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  unint64_t v6 = (char *)&v56 - v5;
  LODWORD(v68) = *(unsigned __int8 *)(a1 + 33);
  uint64_t v72 = *(void *)(a1 + 40);
  LODWORD(v58) = *(unsigned __int8 *)(a1 + 48);
  uint64_t v59 = *(void *)(a1 + 56);
  uint64_t v57 = *(void *)(a1 + 64);
  sub_12124(&qword_26D800);
  uint64_t v7 = sub_12124(&qword_26D808);
  uint64_t v8 = *(void *)(*(void *)(v7 - 8) + 72);
  unint64_t v9 = (*(unsigned __int8 *)(*(void *)(v7 - 8) + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v7 - 8) + 80);
  uint64_t v10 = swift_allocObject();
  *(_OWORD *)(v10 + 16) = xmmword_2026B0;
  uint64_t v56 = v10;
  uint64_t v11 = (void *)(v10 + v9);
  uint64_t v12 = v10 + v9 + *(int *)(v7 + 48);
  *uint64_t v11 = 0xD000000000000019;
  v11[1] = 0x800000000021A750;
  sub_125B0C(v12);
  char v13 = (void *)((char *)v11 + v8);
  *char v13 = 0xD000000000000019;
  v13[1] = 0x800000000021A770;
  uint64_t v14 = *(int *)(v7 + 48);
  uint64_t v65 = v7;
  sub_125B0C((uint64_t)v11 + v8 + v14);
  swift_bridgeObjectRelease();
  uint64_t v63 = 2 * v8;
  id v15 = (void *)((char *)v11 + 2 * v8);
  *id v15 = 0xD000000000000020;
  v15[1] = 0x800000000021A790;
  uint64_t v16 = sub_12124(&qword_26D378);
  uint64_t v17 = swift_allocObject();
  long long v70 = xmmword_1FD2A0;
  *(_OWORD *)(v17 + 16) = xmmword_1FD2A0;
  *(_DWORD *)(v17 + 32) = v68;
  uint64_t v18 = v4;
  sub_1FB5E0();
  swift_bridgeObjectRetain();
  sub_1FB5D0();
  sub_1FB540();
  uint64_t v19 = v71;
  uint64_t v20 = *(void (**)(char *, char *, uint64_t))(v71 + 16);
  uint64_t v21 = v69;
  uint64_t v67 = v71 + 16;
  char v61 = v20;
  v20(v18, v6, v69);
  id v60 = v18;
  sub_1FB520();
  uint64_t v22 = *(void (**)(char *, uint64_t))(v19 + 8);
  uint64_t v62 = v6;
  uint64_t v66 = v22;
  uint64_t v71 = v19 + 8;
  v22(v6, v21);
  swift_bridgeObjectRelease();
  uint64_t v68 = v11;
  uint64_t v23 = (void *)((char *)v11 + v63 + v8);
  void *v23 = 0xD00000000000001CLL;
  v23[1] = 0x800000000021A7C0;
  uint64_t v63 = v16;
  uint64_t v64 = v8;
  uint64_t result = swift_allocObject();
  uint64_t v25 = v72;
  *(_OWORD *)(result + 16) = v70;
  if (v25 < (uint64_t)0xFFFFFFFF80000000)
  {
LABEL_20:
    __break(1u);
    goto LABEL_21;
  }
  if (v25 > 0x7FFFFFFF)
  {
LABEL_21:
    __break(1u);
LABEL_22:
    __break(1u);
    goto LABEL_23;
  }
  *(_DWORD *)(result + 32) = v25;
  long long v26 = v62;
  sub_1FB5E0();
  swift_bridgeObjectRetain();
  sub_1FB5D0();
  sub_1FB540();
  uint64_t v28 = v60;
  uint64_t v27 = v61;
  uint64_t v29 = v69;
  v61(v60, v26, v69);
  sub_1FB520();
  v66(v26, v29);
  swift_bridgeObjectRelease();
  uint64_t v30 = v64;
  uint64_t v72 = 4 * v64;
  uint64_t v31 = (void *)((char *)v68 + 4 * v64);
  void *v31 = 0xD00000000000001FLL;
  v31[1] = 0x800000000021A7E0;
  uint64_t v32 = swift_allocObject();
  *(_OWORD *)(v32 + 16) = v70;
  *(_DWORD *)(v32 + 32) = v58;
  sub_1FB5E0();
  swift_bridgeObjectRetain();
  sub_1FB5D0();
  sub_1FB540();
  v27(v28, v26, v29);
  sub_1FB520();
  v66(v26, v29);
  swift_bridgeObjectRelease();
  uint64_t v33 = (void *)((char *)v68 + v72 + v30);
  *uint64_t v33 = 0xD000000000000020;
  v33[1] = 0x800000000021A800;
  uint64_t v34 = v59;
  int64_t v35 = *(void *)(v59 + 16);
  uint64_t v36 = _swiftEmptyArrayStorage;
  if (v35)
  {
    uint64_t v58 = v33;
    uint64_t v74 = _swiftEmptyArrayStorage;
    swift_bridgeObjectRetain();
    sub_46588(0, v35, 0);
    uint64_t v36 = v74;
    uint64_t result = sub_14D538(v34);
    uint64_t v37 = result;
    uint64_t v39 = v38;
    char v41 = v40 & 1;
    uint64_t v72 = v34 + 56;
    while ((v37 & 0x8000000000000000) == 0 && v37 < 1 << *(unsigned char *)(v34 + 32))
    {
      if (((*(void *)(v72 + (((unint64_t)v37 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v37) & 1) == 0) {
        goto LABEL_18;
      }
      if (*(_DWORD *)(v34 + 36) != v39) {
        goto LABEL_19;
      }
      uint64_t v73 = *(void *)(*(void *)(v34 + 48) + 8 * v37);
      uint64_t v42 = sub_1FC580();
      uint64_t v44 = v43;
      uint64_t v74 = v36;
      unint64_t v46 = v36[2];
      unint64_t v45 = v36[3];
      if (v46 >= v45 >> 1)
      {
        sub_46588(v45 > 1, v46 + 1, 1);
        uint64_t v36 = v74;
      }
      v36[2] = v46 + 1;
      BOOL v47 = &v36[2 * v46];
      v47[4] = v42;
      v47[5] = v44;
      uint64_t result = sub_14D5DC(v37, v39, v41 & 1, v34);
      uint64_t v37 = result;
      uint64_t v39 = v48;
      char v41 = v49 & 1;
      if (!--v35)
      {
        sub_55F94(result, v48, v49 & 1);
        swift_bridgeObjectRelease();
        uint64_t v28 = v60;
        uint64_t v50 = v65;
        uint64_t v33 = v58;
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    __break(1u);
    goto LABEL_20;
  }
  uint64_t v50 = v65;
LABEL_14:
  static Com_Apple_News_Algorithms_Proto_Model_Feature.fromStrings(_:)((uint64_t)v36, (uint64_t)v33 + *(int *)(v50 + 48));
  swift_bridgeObjectRelease();
  char v51 = (void *)((char *)v68 + 6 * v64);
  *char v51 = 0xD000000000000026;
  v51[1] = 0x800000000021A830;
  uint64_t result = swift_allocObject();
  *(_OWORD *)(result + 16) = v70;
  if (v57 < (uint64_t)0xFFFFFFFF80000000) {
    goto LABEL_22;
  }
  if (v57 <= 0x7FFFFFFF)
  {
    *(_DWORD *)(result + 32) = v57;
    uint64_t v52 = v62;
    sub_1FB5E0();
    swift_bridgeObjectRetain();
    sub_1FB5D0();
    sub_1FB540();
    uint64_t v53 = v69;
    v61(v28, v52, v69);
    sub_1FB520();
    v66(v52, v53);
    swift_bridgeObjectRelease();
    unint64_t v54 = sub_160CB0(v56);
    sub_1E52C4(v54);
    sub_1FB690();
    swift_allocObject();
    uint64_t v55 = sub_1FB670();
    swift_bridgeObjectRelease();
    return v55;
  }
LABEL_23:
  __break(1u);
  return result;
}

void *sub_1C5AE8()
{
  uint64_t v0 = sub_1E4E94();
  if (!v0)
  {
    if (qword_26C380 == -1) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  uint64_t v1 = v0;
  uint64_t v2 = sub_1E4B04();
  if (!v2)
  {
    swift_bridgeObjectRelease();
    if (qword_26C380 == -1) {
      goto LABEL_10;
    }
    goto LABEL_12;
  }
  if (v2[2] != *(void *)(v1 + 16))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (qword_26C380 == -1)
    {
LABEL_10:
      id v4 = (id)qword_272B60;
      sub_1FBDA0();
      uint64_t v3 = _swiftEmptyArrayStorage;
      sub_1FB400();

      return v3;
    }
LABEL_12:
    swift_once();
    goto LABEL_10;
  }
  uint64_t v3 = sub_1C4954(v1, (uint64_t)v2);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v3;
}

unint64_t sub_1C5CEC()
{
  unint64_t result = qword_273D00;
  if (!qword_273D00)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273D00);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for BookSuggestionsWork.Errors(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *unint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)unint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)unint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *unint64_t result = 0;
      break;
    case 2:
      *(_WORD *)unint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1C5DDCLL);
    case 4:
      *(_DWORD *)unint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookSuggestionsWork.Errors()
{
  return &type metadata for BookSuggestionsWork.Errors;
}

uint64_t destroy for BookSuggestionsWork.Context()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for BookSuggestionsWork.Context(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  a1[4] = a2[4];
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for BookSuggestionsWork.Context(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  a1[4] = a2[4];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for BookSuggestionsWork.Context(void *a1, void *a2)
{
  *a1 = *a2;
  swift_release();
  uint64_t v4 = a2[2];
  a1[1] = a2[1];
  a1[2] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[4];
  a1[3] = a2[3];
  a1[4] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookSuggestionsWork.Context(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookSuggestionsWork.Context(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 40) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 40) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookSuggestionsWork.Context()
{
  return &type metadata for BookSuggestionsWork.Context;
}

unint64_t sub_1C6034()
{
  unint64_t result = qword_273D08;
  if (!qword_273D08)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273D08);
  }
  return result;
}

uint64_t sub_1C6088(uint64_t a1)
{
  uint64_t v50 = sub_12124(&qword_272968);
  uint64_t v2 = __chkstk_darwin(v50);
  char v49 = (char *)&v44 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v48 = (char *)&v44 - v5;
  __chkstk_darwin(v4);
  BOOL v47 = (char *)&v44 - v6;
  uint64_t v7 = *(void *)(a1 + 64);
  uint64_t v45 = a1 + 64;
  uint64_t v8 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v9 = -1;
  if (v8 < 64) {
    uint64_t v9 = ~(-1 << v8);
  }
  unint64_t v10 = v9 & v7;
  int64_t v46 = (unint64_t)(v8 + 63) >> 6;
  uint64_t v51 = a1;
  swift_bridgeObjectRetain();
  int64_t v11 = 0;
  uint64_t v12 = _swiftEmptyArrayStorage;
  uint64_t v13 = (uint64_t)v48;
  while (1)
  {
    unint64_t v54 = v12;
    if (v10)
    {
      uint64_t v52 = (v10 - 1) & v10;
      int64_t v53 = v11;
      unint64_t v14 = __clz(__rbit64(v10)) | (v11 << 6);
    }
    else
    {
      int64_t v15 = v11 + 1;
      if (__OFADD__(v11, 1)) {
        goto LABEL_47;
      }
      if (v15 >= v46)
      {
LABEL_42:
        swift_release();
        return (uint64_t)v12;
      }
      unint64_t v16 = *(void *)(v45 + 8 * v15);
      int64_t v17 = v11 + 1;
      if (!v16)
      {
        int64_t v17 = v11 + 2;
        if (v11 + 2 >= v46) {
          goto LABEL_42;
        }
        unint64_t v16 = *(void *)(v45 + 8 * v17);
        if (!v16)
        {
          int64_t v17 = v11 + 3;
          if (v11 + 3 >= v46) {
            goto LABEL_42;
          }
          unint64_t v16 = *(void *)(v45 + 8 * v17);
          if (!v16)
          {
            int64_t v17 = v11 + 4;
            if (v11 + 4 >= v46) {
              goto LABEL_42;
            }
            unint64_t v16 = *(void *)(v45 + 8 * v17);
            if (!v16)
            {
              uint64_t v18 = v11 + 5;
              if (v11 + 5 >= v46) {
                goto LABEL_42;
              }
              unint64_t v16 = *(void *)(v45 + 8 * v18);
              if (!v16)
              {
                while (1)
                {
                  int64_t v17 = v18 + 1;
                  if (__OFADD__(v18, 1)) {
                    goto LABEL_48;
                  }
                  if (v17 >= v46) {
                    goto LABEL_42;
                  }
                  unint64_t v16 = *(void *)(v45 + 8 * v17);
                  ++v18;
                  if (v16) {
                    goto LABEL_23;
                  }
                }
              }
              int64_t v17 = v11 + 5;
            }
          }
        }
      }
LABEL_23:
      uint64_t v52 = (v16 - 1) & v16;
      int64_t v53 = v17;
      unint64_t v14 = __clz(__rbit64(v16)) + (v17 << 6);
    }
    uint64_t v19 = v51;
    uint64_t v20 = *(void *)(v51 + 48);
    uint64_t v21 = sub_1FB110();
    uint64_t v22 = *(void *)(v21 - 8);
    uint64_t v23 = v22;
    uint64_t v24 = *(void (**)(char *, unint64_t, uint64_t))(v22 + 16);
    uint64_t v25 = (uint64_t)v47;
    v24(v47, v20 + *(void *)(v22 + 72) * v14, v21);
    uint64_t v26 = *(void *)(*(void *)(v19 + 56) + 8 * v14);
    uint64_t v27 = v50;
    *(void *)(v25 + *(int *)(v50 + 48)) = v26;
    sub_1C9D7C(v25, v13);
    uint64_t v28 = *(int *)(v27 + 48);
    uint64_t v29 = v49;
    v24(v49, v13, v21);
    uint64_t v30 = *(void *)(v13 + v28);
    *(void *)&v29[v28] = v30;
    uint64_t v31 = *(void (**)(char *, uint64_t))(v23 + 8);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    v31(v29, v21);
    sub_55F38(v13, &qword_272968);
    uint64_t v32 = *(void *)(v30 + 16);
    uint64_t v12 = v54;
    int64_t v33 = v54[2];
    int64_t v34 = v33 + v32;
    if (__OFADD__(v33, v32)) {
      break;
    }
    int isUniquelyReferenced_nonNull_native = (void *)swift_isUniquelyReferenced_nonNull_native();
    if (isUniquelyReferenced_nonNull_native && v34 <= v12[3] >> 1)
    {
      if (!*(void *)(v30 + 16)) {
        goto LABEL_4;
      }
    }
    else
    {
      if (v33 <= v34) {
        int64_t v36 = v33 + v32;
      }
      else {
        int64_t v36 = v33;
      }
      uint64_t v12 = sub_41DE0(isUniquelyReferenced_nonNull_native, v36, 1, v12);
      if (!*(void *)(v30 + 16))
      {
LABEL_4:
        if (v32) {
          goto LABEL_44;
        }
        goto LABEL_5;
      }
    }
    uint64_t v37 = v12[2];
    if ((v12[3] >> 1) - v37 < v32) {
      goto LABEL_45;
    }
    unint64_t v38 = (unint64_t)&v12[19 * v37 + 4];
    if (v30 + 32 < v38 + 152 * v32 && v38 < v30 + 32 + 152 * v32) {
      goto LABEL_49;
    }
    swift_arrayInitWithCopy();
    if (v32)
    {
      uint64_t v40 = v12[2];
      BOOL v41 = __OFADD__(v40, v32);
      uint64_t v42 = v40 + v32;
      if (v41) {
        goto LABEL_46;
      }
      v12[2] = v42;
    }
LABEL_5:
    swift_bridgeObjectRelease();
    unint64_t v10 = v52;
    int64_t v11 = v53;
  }
  __break(1u);
LABEL_44:
  __break(1u);
LABEL_45:
  __break(1u);
LABEL_46:
  __break(1u);
LABEL_47:
  __break(1u);
LABEL_48:
  __break(1u);
LABEL_49:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

uint64_t sub_1C6514(uint64_t a1)
{
  uint64_t v2 = sub_12124(&qword_26D958);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v37 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_12124(&qword_26D938);
  uint64_t v5 = __chkstk_darwin(v45);
  uint64_t v40 = (char *)v37 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  BOOL v41 = (char *)v37 - v8;
  uint64_t v42 = _swiftEmptyDictionarySingleton;
  BOOL v47 = _swiftEmptyDictionarySingleton;
  uint64_t v9 = *(void *)(a1 + 64);
  uint64_t v44 = a1 + 64;
  uint64_t v10 = -1 << *(unsigned char *)(a1 + 32);
  if (-v10 < 64) {
    uint64_t v11 = ~(-1 << -(char)v10);
  }
  else {
    uint64_t v11 = -1;
  }
  unint64_t v12 = v11 & v9;
  v37[1] = -1 << *(unsigned char *)(a1 + 32);
  int64_t v43 = (unint64_t)(63 - v10) >> 6;
  uint64_t v13 = (unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48);
  uint64_t v38 = v7;
  uint64_t v39 = (void (**)(char *, char *, uint64_t))(v7 + 32);
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v15 = 0;
  if (!v12) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v16 = __clz(__rbit64(v12));
  v12 &= v12 - 1;
  unint64_t v17 = v16 | (v15 << 6);
  while (1)
  {
    uint64_t v18 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
    uint64_t v46 = *(void *)(*(void *)(a1 + 56) + 8 * v17);
    swift_bridgeObjectRetain_n();
    sub_12124(&qword_26D960);
    sub_52CC0(&qword_26D968, &qword_26D960);
    sub_1FB3D0();
    if ((*v13)(v4, 1, v45) == 1)
    {
      swift_bridgeObjectRelease();
      uint64_t result = sub_55F38((uint64_t)v4, &qword_26D958);
      if (v12) {
        goto LABEL_5;
      }
    }
    else
    {
      uint64_t v23 = *v39;
      (*v39)(v41, v4, v45);
      v23(v40, v41, v45);
      uint64_t v24 = v23;
      uint64_t v25 = v42;
      unint64_t v26 = v42[2];
      if (v42[3] <= v26)
      {
        sub_117664(v26 + 1, 1);
        uint64_t v25 = v47;
      }
      uint64_t result = sub_1FC7D0();
      uint64_t v27 = v25 + 8;
      uint64_t v42 = v25;
      uint64_t v28 = -1 << *((unsigned char *)v25 + 32);
      unint64_t v29 = result & ~v28;
      unint64_t v30 = v29 >> 6;
      if (((-1 << v29) & ~v25[(v29 >> 6) + 8]) == 0)
      {
        char v32 = 0;
        unint64_t v33 = (unint64_t)(63 - v28) >> 6;
        while (++v30 != v33 || (v32 & 1) == 0)
        {
          BOOL v34 = v30 == v33;
          if (v30 == v33) {
            unint64_t v30 = 0;
          }
          v32 |= v34;
          uint64_t v35 = v27[v30];
          if (v35 != -1)
          {
            unint64_t v31 = __clz(__rbit64(~v35)) + (v30 << 6);
            goto LABEL_36;
          }
        }
        goto LABEL_40;
      }
      unint64_t v31 = __clz(__rbit64((-1 << v29) & ~v25[(v29 >> 6) + 8])) | v29 & 0x7FFFFFFFFFFFFFC0;
LABEL_36:
      *(void *)((char *)v27 + ((v31 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v31;
      int64_t v36 = v42;
      *(void *)(v42[6] + 8 * v31) = v18;
      v24((char *)(v36[7] + *(void *)(v38 + 72) * v31), v40, v45);
      ++v36[2];
      uint64_t result = swift_bridgeObjectRelease();
      if (v12) {
        goto LABEL_5;
      }
    }
LABEL_8:
    int64_t v19 = v15 + 1;
    if (__OFADD__(v15, 1))
    {
      __break(1u);
LABEL_40:
      __break(1u);
      goto LABEL_41;
    }
    if (v19 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v19);
    int64_t v21 = v15 + 1;
    if (!v20)
    {
      int64_t v21 = v15 + 2;
      if (v15 + 2 >= v43) {
        goto LABEL_38;
      }
      unint64_t v20 = *(void *)(v44 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v15 + 3;
        if (v15 + 3 >= v43) {
          goto LABEL_38;
        }
        unint64_t v20 = *(void *)(v44 + 8 * v21);
        if (!v20)
        {
          int64_t v21 = v15 + 4;
          if (v15 + 4 >= v43) {
            goto LABEL_38;
          }
          unint64_t v20 = *(void *)(v44 + 8 * v21);
          if (!v20) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v12 = (v20 - 1) & v20;
    unint64_t v17 = __clz(__rbit64(v20)) + (v21 << 6);
    int64_t v15 = v21;
  }
  int64_t v22 = v15 + 5;
  if (v15 + 5 >= v43)
  {
LABEL_38:
    sub_1226C();
    return (uint64_t)v42;
  }
  unint64_t v20 = *(void *)(v44 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v15 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v43) {
      goto LABEL_38;
    }
    unint64_t v20 = *(void *)(v44 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_23;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

uint64_t sub_1C69E8(uint64_t a1, const void *a2)
{
  v3[349] = v2;
  v3[348] = a2;
  v3[347] = a1;
  memcpy(v3 + 167, a2, 0x460uLL);
  return _swift_task_switch(sub_1C6A64, 0, 0);
}

uint64_t sub_1C6A64()
{
  uint64_t v1 = *(void *)(v0 + 2792);
  uint64_t v2 = *(const void **)(v0 + 2784);
  uint64_t v3 = *(void *)(v0 + 2776);
  uint64_t v4 = sub_1C77FC(*(unsigned char *)(v0 + 1960) & 1, v3);
  uint64_t v5 = (void *)swift_allocObject();
  *(void *)(v0 + 2800) = v5;
  uint64_t v5[2] = v1;
  v5[3] = v3;
  memcpy(v5 + 4, v2, 0x460uLL);
  swift_retain();
  swift_bridgeObjectRetain();
  sub_A1310(v0 + 1336);
  swift_retain();
  *(void *)(v0 + 2808) = sub_121C4(&qword_26E5E0);
  swift_asyncLet_begin();
  uint64_t v6 = (void *)swift_allocObject();
  *(void *)(v0 + 2816) = v6;
  _OWORD v6[2] = v1;
  v6[3] = v4;
  memcpy(v6 + 4, (const void *)(v0 + 1336), 0x460uLL);
  swift_retain();
  sub_A1310(v0 + 1336);
  swift_retain();
  swift_asyncLet_begin();
  return _swift_asyncLet_get_throwing(v0 + 656, v0 + 2768, sub_1C6C2C, v0 + 1296);
}

uint64_t sub_1C6C2C()
{
  v1[353] = v0;
  if (v0)
  {
    return _swift_asyncLet_finish(v1 + 82, v1 + 346, sub_1C7344, v1 + 162);
  }
  else
  {
    v1[354] = v1[346];
    swift_bridgeObjectRetain();
    return _swift_asyncLet_get_throwing(v1 + 2, v1 + 345, sub_1C6CF8, v1 + 162);
  }
}

uint64_t sub_1C6CF8()
{
  *(void *)(v1 + 2840) = v0;
  if (v0) {
    uint64_t v2 = sub_1C7470;
  }
  else {
    uint64_t v2 = sub_1C6D2C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1C6D2C()
{
  uint64_t v1 = (void **)(v0 + 1296);
  uint64_t v2 = swift_bridgeObjectRetain();
  uint64_t v3 = sub_1C6088(v2);
  swift_bridgeObjectRelease();
  uint64_t v4 = _swiftEmptyDictionarySingleton;
  *(void *)(v0 + 1296) = _swiftEmptyDictionarySingleton;
  uint64_t v5 = *(void *)(v3 + 16);
  if (v5)
  {
    uint64_t v6 = (_OWORD *)(v0 + 2456);
    uint64_t v7 = (_OWORD *)(v0 + 2608);
    swift_bridgeObjectRetain();
    uint64_t v8 = v5 - 1;
    for (uint64_t i = 32; ; i += 152)
    {
      long long v10 = *(_OWORD *)(v3 + i + 16);
      *uint64_t v7 = *(_OWORD *)(v3 + i);
      *(_OWORD *)(v0 + 2624) = v10;
      long long v11 = *(_OWORD *)(v3 + i + 32);
      long long v12 = *(_OWORD *)(v3 + i + 48);
      long long v13 = *(_OWORD *)(v3 + i + 80);
      *(_OWORD *)(v0 + 2672) = *(_OWORD *)(v3 + i + 64);
      *(_OWORD *)(v0 + 2688) = v13;
      *(_OWORD *)(v0 + 2640) = v11;
      *(_OWORD *)(v0 + 2656) = v12;
      long long v14 = *(_OWORD *)(v3 + i + 96);
      long long v15 = *(_OWORD *)(v3 + i + 112);
      long long v16 = *(_OWORD *)(v3 + i + 128);
      char v17 = *(unsigned char *)(v3 + i + 144);
      *(unsigned char *)(v0 + 2752) = v17;
      *(_OWORD *)(v0 + 2720) = v15;
      *(_OWORD *)(v0 + 2736) = v16;
      *(_OWORD *)(v0 + 2704) = v14;
      long long v18 = *(_OWORD *)(v0 + 2624);
      *uint64_t v6 = *v7;
      *(_OWORD *)(v0 + 2472) = v18;
      long long v19 = *(_OWORD *)(v0 + 2688);
      *(_OWORD *)(v0 + 2520) = *(_OWORD *)(v0 + 2672);
      *(_OWORD *)(v0 + 2536) = v19;
      long long v20 = *(_OWORD *)(v0 + 2656);
      *(_OWORD *)(v0 + 2488) = *(_OWORD *)(v0 + 2640);
      *(_OWORD *)(v0 + 2504) = v20;
      *(unsigned char *)(v0 + 2600) = v17;
      long long v21 = *(_OWORD *)(v0 + 2736);
      long long v22 = *(_OWORD *)(v0 + 2704);
      *(_OWORD *)(v0 + 2568) = *(_OWORD *)(v0 + 2720);
      *(_OWORD *)(v0 + 2584) = v21;
      *(_OWORD *)(v0 + 2552) = v22;
      sub_54834(v0 + 2608);
      uint64_t v23 = sub_1C80A4(v0 + 2456);
      uint64_t v24 = swift_task_alloc();
      *(void *)(v24 + 16) = v1;
      *(void *)(v24 + 24) = v6;
      sub_6188(sub_1C8F90, v24, v23);
      swift_bridgeObjectRelease();
      sub_7A018(v0 + 2608);
      swift_task_dealloc();
      if (!v8) {
        break;
      }
      --v8;
    }
    swift_bridgeObjectRelease();
    uint64_t v4 = *v1;
  }
  uint64_t v25 = *(void *)(v0 + 2832);
  uint64_t v26 = *(void *)(v0 + 2792);
  uint64_t v27 = sub_1C6514((uint64_t)v4);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_retain();
  sub_A1310(v0 + 1336);
  swift_bridgeObjectRetain();
  *(void *)(v0 + 2848) = sub_1C8FEC(v25, v27, v26, v0 + 1336);
  sub_11D3C(v0 + 1336);
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_bridgeObjectRelease();
  sub_12124(&qword_273DF0);
  uint64_t v28 = swift_allocObject();
  *(void *)(v0 + 2856) = v28;
  *(_OWORD *)(v28 + 16) = xmmword_2055D0;
  return _swift_asyncLet_get_throwing(v0 + 16, v0 + 2760, sub_1C6F8C, v0 + 1296);
}

uint64_t sub_1C6F8C()
{
  *(void *)(v1 + 2864) = v0;
  if (v0)
  {
    swift_release();
    uint64_t v2 = sub_1C761C;
  }
  else
  {
    uint64_t v2 = sub_1C700C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1C700C()
{
  long long v16 = v0;
  uint64_t v1 = v0[357];
  uint64_t v2 = v0[356];
  uint64_t v3 = v0[347];
  *(void *)(v1 + 32) = v0[345];
  *(void *)(v1 + 40) = v2;
  v15[0] = _swiftEmptyDictionarySingleton;
  uint64_t v4 = *(void *)(v3 + 16);
  if (v4)
  {
    uint64_t v5 = v0[347];
    uint64_t v6 = *(void *)(type metadata accessor for SeedBasedRecommendationRequest(0) - 8);
    unint64_t v7 = (*(unsigned __int8 *)(v6 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);
    uint64_t v8 = *(void *)(v6 + 72);
    uint64_t v9 = v0[358];
    uint64_t v10 = v0[357];
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_1C81C8(v15, v5 + v7, v10);
    if (v9)
    {
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
    }
    uint64_t v13 = v4 - 1;
    if (v4 != 1)
    {
      uint64_t v14 = v5 + v8 + v7;
      do
      {
        sub_1C81C8(v15, v14, v0[357]);
        v14 += v8;
        --v13;
      }
      while (v13);
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    long long v12 = (void *)v15[0];
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    long long v12 = _swiftEmptyDictionarySingleton;
  }
  v0[359] = sub_1C8944((uint64_t)v12);
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 82, v0 + 346, sub_1C7214, v0 + 162);
}

uint64_t sub_1C7214()
{
  return _swift_task_switch(sub_1C7230, 0, 0);
}

uint64_t sub_1C7230()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v0 + 2760, sub_1C72B0, v0 + 656);
}

uint64_t sub_1C72B0()
{
  return _swift_task_switch(sub_1C72CC, 0, 0);
}

uint64_t sub_1C72CC()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(uint64_t))(v0 + 8);
  uint64_t v2 = *(void *)(v0 + 2872);
  return v1(v2);
}

uint64_t sub_1C7344()
{
  return _swift_task_switch(sub_1C7360, 0, 0);
}

uint64_t sub_1C7360()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v0 + 2760, sub_1C73E0, v0 + 656);
}

uint64_t sub_1C73E0()
{
  return _swift_task_switch(sub_1C73FC, 0, 0);
}

uint64_t sub_1C73FC()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C7470()
{
  swift_bridgeObjectRelease();
  return _swift_asyncLet_finish(v0 + 656, v0 + 2768, sub_1C74F0, v0 + 1296);
}

uint64_t sub_1C74F0()
{
  return _swift_task_switch(sub_1C750C, 0, 0);
}

uint64_t sub_1C750C()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v0 + 2760, sub_1C758C, v0 + 656);
}

uint64_t sub_1C758C()
{
  return _swift_task_switch(sub_1C75A8, 0, 0);
}

uint64_t sub_1C75A8()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1C761C()
{
  swift_setDeallocating();
  swift_arrayDestroy();
  swift_deallocClassInstance();
  return _swift_asyncLet_finish(v0 + 656, v0 + 2768, sub_1C76D0, v0 + 1296);
}

uint64_t sub_1C76D0()
{
  return _swift_task_switch(sub_1C76EC, 0, 0);
}

uint64_t sub_1C76EC()
{
  swift_release();
  return _swift_asyncLet_finish(v0 + 16, v0 + 2760, sub_1C776C, v0 + 656);
}

uint64_t sub_1C776C()
{
  return _swift_task_switch(sub_1C7788, 0, 0);
}

uint64_t sub_1C7788()
{
  swift_release_n();
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

void *sub_1C77FC(char a1, uint64_t a2)
{
  uint64_t v47 = sub_1FB110();
  uint64_t v4 = *(void *)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v46 = (char *)&v41 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = (int *)type metadata accessor for SeedBasedRecommendationRequest(0);
  uint64_t v7 = *((void *)v6 - 1);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v41 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  long long v12 = (char *)&v41 - v11;
  if ((a1 & 1) == 0) {
    return _swiftEmptyArrayStorage;
  }
  int64_t v13 = *(void *)(a2 + 16);
  uint64_t v14 = _swiftEmptyArrayStorage;
  if (v13)
  {
    char v49 = _swiftEmptyArrayStorage;
    sub_468BC(0, v13, 0);
    unint64_t v45 = (*(unsigned __int8 *)(v7 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v15 = a2 + v45;
    uint64_t v16 = *(void *)(v7 + 72);
    int64_t v43 = (void (**)(char *, char *, uint64_t))(v4 + 16);
    uint64_t v44 = v16;
    uint64_t v42 = (void (**)(char *, uint64_t))(v4 + 8);
    do
    {
      int64_t v48 = v13;
      sub_A0EE0(v15, (uint64_t)v10);
      uint64_t v17 = *v43;
      long long v19 = v46;
      uint64_t v18 = v47;
      (*v43)(v46, v10, v47);
      uint64_t v20 = swift_bridgeObjectRetain();
      uint64_t v21 = sub_1C8CB0(v20);
      v17(v12, v19, v18);
      long long v22 = &v10[v6[6]];
      uint64_t v24 = *(void *)v22;
      uint64_t v23 = *((void *)v22 + 1);
      uint64_t v25 = &v10[v6[7]];
      char v26 = v10[v6[8]];
      char v27 = v10[v6[9]];
      uint64_t v28 = *(void *)&v10[v6[10]];
      uint64_t v29 = *(void *)v25;
      uint64_t v30 = *((void *)v25 + 1);
      LOBYTE(v25) = v10[v6[11]];
      uint64_t v31 = *(void *)&v10[v6[13]];
      uint64_t v32 = *(void *)&v10[v6[14]];
      *(void *)&v12[v6[5]] = v21;
      unint64_t v33 = &v12[v6[6]];
      *(void *)unint64_t v33 = v24;
      *((void *)v33 + 1) = v23;
      BOOL v34 = &v12[v6[7]];
      *(void *)BOOL v34 = v29;
      *((void *)v34 + 1) = v30;
      v12[v6[8]] = v26;
      v12[v6[9]] = v27;
      *(void *)&v12[v6[10]] = v28;
      v12[v6[11]] = (char)v25;
      *(void *)&v12[v6[12]] = _swiftEmptySetSingleton;
      *(void *)&v12[v6[13]] = v31;
      *(void *)&v12[v6[14]] = v32;
      uint64_t v35 = *v42;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      v35(v19, v18);
      sub_19B62C((uint64_t)v10);
      uint64_t v14 = v49;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_468BC(0, v14[2] + 1, 1);
        uint64_t v14 = v49;
      }
      unint64_t v37 = v14[2];
      unint64_t v36 = v14[3];
      int64_t v38 = v48;
      if (v37 >= v36 >> 1)
      {
        sub_468BC(v36 > 1, v37 + 1, 1);
        uint64_t v14 = v49;
      }
      v14[2] = v37 + 1;
      uint64_t v39 = v44;
      sub_A1178((uint64_t)v12, (uint64_t)v14 + v45 + v37 * v44);
      v15 += v39;
      int64_t v13 = v38 - 1;
    }
    while (v13);
  }
  return v14;
}

uint64_t sub_1C7B70(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[145] = a4;
  v4[144] = a3;
  v4[143] = a2;
  v4[142] = a1;
  return _swift_task_switch(sub_1C7B9C, 0, 0);
}

uint64_t sub_1C7B9C()
{
  uint64_t v1 = (const void *)v0[145];
  uint64_t v2 = (void *)v0[143];
  uint64_t v3 = v2[5];
  uint64_t v4 = v2[6];
  sub_5D64(v2 + 2, v3);
  memcpy(v0 + 2, v1, 0x460uLL);
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[146] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C7CD0;
  uint64_t v6 = v0[144];
  return v8(v6, v0 + 2, v3, v4);
}

uint64_t sub_1C7CD0(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1C9DE8;
  }
  else
  {
    *(void *)(v4 + 1184) = a1;
    uint64_t v5 = sub_1C9DE4;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1C7DF8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[145] = a4;
  v4[144] = a3;
  v4[143] = a2;
  v4[142] = a1;
  return _swift_task_switch(sub_1C7E24, 0, 0);
}

uint64_t sub_1C7E24()
{
  uint64_t v1 = (const void *)v0[145];
  uint64_t v2 = (void *)v0[143];
  uint64_t v3 = v2[10];
  uint64_t v4 = v2[11];
  sub_5D64(v2 + 7, v3);
  memcpy(v0 + 2, v1, 0x460uLL);
  uint64_t v8 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t))(*(void *)(v4 + 8) + **(int **)(v4 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  v0[146] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1C7F58;
  uint64_t v6 = v0[144];
  return v8(v6, v0 + 2, v3, v4);
}

uint64_t sub_1C7F58(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 1176) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_5D4C;
  }
  else
  {
    *(void *)(v4 + 1184) = a1;
    uint64_t v5 = sub_1C8080;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1C8080()
{
  **(void **)(v0 + 1136) = *(void *)(v0 + 1184);
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1C80A4(uint64_t result)
{
  if (*(void *)(result + 64))
  {
    uint64_t v1 = swift_bridgeObjectRetain();
    uint64_t v2 = sub_A4318(v1);
    swift_bridgeObjectRelease();
    int64_t v3 = v2[2];
    if (v3)
    {
      sub_46538(0, v3, 0);
      unint64_t v4 = _swiftEmptyArrayStorage[2];
      uint64_t v5 = 4;
      do
      {
        uint64_t v6 = v2[v5];
        unint64_t v7 = _swiftEmptyArrayStorage[3];
        if (v4 >= v7 >> 1) {
          sub_46538(v7 > 1, v4 + 1, 1);
        }
        _swiftEmptyArrayStorage[2] = v4 + 1;
        _swiftEmptyArrayStorage[v4 + 4] = v6;
        v5 += 70;
        ++v4;
        --v3;
      }
      while (v3);
    }
    swift_bridgeObjectRelease();
    uint64_t v8 = sub_50A6C((uint64_t)_swiftEmptyArrayStorage);
    swift_bridgeObjectRelease();
    return v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1C81C8(void *a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v47 = (uint64_t)&v40 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v10 = *(void (**)(void))(v7 + 16);
  uint64_t v44 = (char *)&v40 - v11;
  unint64_t v45 = v10;
  uint64_t v46 = v7 + 16;
  v10();
  uint64_t v12 = *(void *)(a3 + 16);
  if (!v12)
  {
    int64_t v13 = 0;
    uint64_t v15 = (uint64_t)v44;
LABEL_20:
    (*(void (**)(uint64_t, uint64_t))(v7 + 8))(v15, v6);
    return sub_52958((uint64_t)v13);
  }
  uint64_t v40 = v3;
  uint64_t v41 = v7;
  uint64_t v42 = (void (**)(uint64_t, uint64_t))(v7 + 8);
  swift_bridgeObjectRetain();
  int64_t v13 = 0;
  uint64_t v14 = 0;
  uint64_t v15 = (uint64_t)v44;
  uint64_t v43 = v12;
  while (1)
  {
    uint64_t v16 = *(void *)(a3 + 8 * v14 + 32);
    if (!*(void *)(v16 + 16)) {
      goto LABEL_4;
    }
    swift_bridgeObjectRetain();
    unint64_t v17 = sub_4C9C4(v15);
    if ((v18 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      goto LABEL_4;
    }
    uint64_t v19 = a3;
    uint64_t v20 = *(void *)(*(void *)(v16 + 56) + 8 * v17);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v21 = (uint64_t)v13;
    uint64_t v22 = v47;
    uint64_t v23 = v6;
    ((void (*)(uint64_t, uint64_t, uint64_t))v45)(v47, v15, v6);
    sub_52958(v21);
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    int64_t v48 = (void *)*a1;
    uint64_t v25 = v48;
    *a1 = 0x8000000000000000;
    unint64_t v27 = sub_4C9C4(v22);
    uint64_t v28 = v25[2];
    BOOL v29 = (v26 & 1) == 0;
    uint64_t v30 = v28 + v29;
    if (__OFADD__(v28, v29)) {
      break;
    }
    char v31 = v26;
    if (v25[3] >= v30)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0)
      {
        sub_1212EC();
        uint64_t v25 = v48;
      }
    }
    else
    {
      sub_118B9C(v30, isUniquelyReferenced_nonNull_native);
      uint64_t v25 = v48;
      unint64_t v32 = sub_4C9C4(v47);
      if ((v31 & 1) != (v33 & 1)) {
        goto LABEL_23;
      }
      unint64_t v27 = v32;
    }
    uint64_t v6 = v23;
    *a1 = v25;
    swift_bridgeObjectRelease();
    BOOL v34 = (void *)*a1;
    if (v31)
    {
      swift_bridgeObjectRetain();
    }
    else
    {
      v34[(v27 >> 6) + 8] |= 1 << v27;
      unint64_t v35 = v34[6] + *(void *)(v41 + 72) * v27;
      swift_bridgeObjectRetain();
      ((void (*)(unint64_t, uint64_t, uint64_t))v45)(v35, v47, v23);
      *(void *)(v34[7] + 8 * v27) = _swiftEmptyArrayStorage;
      uint64_t v36 = v34[2];
      BOOL v37 = __OFADD__(v36, 1);
      uint64_t v38 = v36 + 1;
      if (v37) {
        goto LABEL_22;
      }
      void v34[2] = v38;
    }
    swift_bridgeObjectRelease();
    sub_A9D3C(v20);
    (*v42)(v47, v23);
    int64_t v13 = sub_E31E8;
    a3 = v19;
    uint64_t v12 = v43;
    uint64_t v15 = (uint64_t)v44;
LABEL_4:
    if (v12 == ++v14)
    {
      swift_bridgeObjectRelease();
      uint64_t v7 = v41;
      goto LABEL_20;
    }
  }
  __break(1u);
LABEL_22:
  __break(1u);
LABEL_23:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_1C8560@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  if (*(void *)(result + 64)) {
    *a2 = *(void *)(result + 56);
  }
  else {
    __break(1u);
  }
  return result;
}

uint64_t type metadata accessor for CombinedSeedBasedRecommendationService()
{
  return self;
}

uint64_t sub_1C859C(uint64_t a1, const void *a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_B06F4;
  v7[349] = v6;
  v7[348] = a2;
  v7[347] = a1;
  memcpy(v7 + 167, a2, 0x460uLL);
  return _swift_task_switch(sub_1C6A64, 0, 0);
}

uint64_t sub_1C8678(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_98BD4;
  *(void *)(v4 + 1160) = v1 + 32;
  *(_OWORD *)(v4 + 1144) = v5;
  *(void *)(v4 + 1136) = a1;
  return _swift_task_switch(sub_1C7B9C, 0, 0);
}

uint64_t sub_1C8744()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v0[117])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[120])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (v0[128])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (v0[138])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }

  return _swift_deallocObject(v0, 1152, 7);
}

uint64_t sub_1C887C(uint64_t a1)
{
  uint64_t v4 = swift_task_alloc();
  long long v5 = *(_OWORD *)(v1 + 16);
  *(void *)(v2 + 16) = v4;
  *(void *)uint64_t v4 = v2;
  *(void *)(v4 + 8) = sub_5958;
  *(void *)(v4 + 1160) = v1 + 32;
  *(_OWORD *)(v4 + 1144) = v5;
  *(void *)(v4 + 1136) = a1;
  return _swift_task_switch(sub_1C7E24, 0, 0);
}

uint64_t sub_1C8944(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v38 = sub_1FB110();
  uint64_t v4 = *(void *)(v38 - 8);
  __chkstk_darwin(v38);
  unint64_t v35 = (char *)&v29 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_2703F0);
  uint64_t result = sub_1FC280();
  uint64_t v7 = result;
  int64_t v8 = 0;
  uint64_t v39 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = a1 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v30 = v10;
  int64_t v31 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v33 = result + 64;
  uint64_t v34 = v4 + 16;
  uint64_t v36 = result;
  uint64_t v37 = v4;
  uint64_t v32 = v4 + 32;
  uint64_t v15 = v4;
  uint64_t v16 = v35;
  uint64_t v17 = v38;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  int64_t v41 = v8;
  uint64_t v42 = v2;
  uint64_t v40 = (v14 - 1) & v14;
  for (unint64_t i = __clz(__rbit64(v14)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v21)) + (v20 << 6))
  {
    uint64_t v23 = v39;
    unint64_t v24 = *(void *)(v15 + 72) * i;
    (*(void (**)(char *, unint64_t, uint64_t))(v15 + 16))(v16, *(void *)(v39 + 48) + v24, v17);
    uint64_t v43 = *(void *)(*(void *)(v23 + 56) + 8 * i);
    swift_bridgeObjectRetain();
    sub_12124(&qword_26D960);
    sub_52CC0(&qword_273DF8, &qword_26D960);
    uint64_t v25 = v42;
    uint64_t v26 = sub_1FB990();
    uint64_t v2 = v25;
    swift_bridgeObjectRelease();
    *(void *)(v33 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v7 = v36;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v15 + 32))(*(void *)(v36 + 48) + v24, v16, v17);
    *(void *)(*(void *)(v7 + 56) + 8 * i) = v26;
    uint64_t v27 = *(void *)(v7 + 16);
    BOOL v19 = __OFADD__(v27, 1);
    uint64_t v28 = v27 + 1;
    if (v19)
    {
      __break(1u);
LABEL_25:
      __break(1u);
      goto LABEL_26;
    }
    *(void *)(v7 + 16) = v28;
    unint64_t v14 = v40;
    int64_t v8 = v41;
    if (v40) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v19 = __OFADD__(v8, 1);
    int64_t v20 = v8 + 1;
    if (v19) {
      goto LABEL_25;
    }
    if (v20 >= v31) {
      return v7;
    }
    unint64_t v21 = *(void *)(v30 + 8 * v20);
    if (!v21) {
      break;
    }
LABEL_15:
    int64_t v41 = v20;
    uint64_t v42 = v2;
    uint64_t v40 = (v21 - 1) & v21;
  }
  int64_t v22 = v20 + 1;
  if (v20 + 1 >= v31) {
    return v7;
  }
  unint64_t v21 = *(void *)(v30 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v20 + 2;
  if (v20 + 2 >= v31) {
    return v7;
  }
  unint64_t v21 = *(void *)(v30 + 8 * v22);
  if (v21) {
    goto LABEL_14;
  }
  int64_t v22 = v20 + 3;
  if (v20 + 3 >= v31) {
    return v7;
  }
  unint64_t v21 = *(void *)(v30 + 8 * v22);
  if (v21)
  {
LABEL_14:
    int64_t v20 = v22;
    goto LABEL_15;
  }
  while (1)
  {
    int64_t v20 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v20 >= v31) {
      return v7;
    }
    unint64_t v21 = *(void *)(v30 + 8 * v20);
    ++v22;
    if (v21) {
      goto LABEL_15;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C8CB0(uint64_t isStackAllocationSafe)
{
  uint64_t v2 = isStackAllocationSafe;
  char v3 = *(unsigned char *)(isStackAllocationSafe + 32);
  unint64_t v4 = (unint64_t)((1 << v3) + 63) >> 6;
  size_t v5 = 8 * v4;
  if ((v3 & 0x3Fu) <= 0xD
    || (isStackAllocationSafe = swift_stdlib_isStackAllocationSafe(), (isStackAllocationSafe & 1) != 0))
  {
    __chkstk_darwin(isStackAllocationSafe);
    bzero((char *)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v5);
    uint64_t v6 = sub_1C8E14((uint64_t)&v9 - ((v5 + 15) & 0x3FFFFFFFFFFFFFF0), v4, v2);
    swift_release();
    if (v1) {
      swift_willThrow();
    }
  }
  else
  {
    uint64_t v7 = (void *)swift_slowAlloc();
    bzero(v7, v5);
    uint64_t v6 = sub_1C8E14((uint64_t)v7, v4, v2);
    swift_release();
    swift_slowDealloc();
  }
  return v6;
}

uint64_t sub_1C8E14(uint64_t result, uint64_t a2, uint64_t a3)
{
  size_t v5 = (unint64_t *)result;
  uint64_t v6 = 0;
  int64_t v7 = 0;
  uint64_t v8 = a3 + 56;
  uint64_t v9 = 1 << *(unsigned char *)(a3 + 32);
  uint64_t v10 = -1;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  unint64_t v11 = v10 & *(void *)(a3 + 56);
  int64_t v12 = (unint64_t)(v9 + 63) >> 6;
  while (1)
  {
    if (v11)
    {
      unint64_t v13 = __clz(__rbit64(v11));
      v11 &= v11 - 1;
      unint64_t v14 = v13 | (v7 << 6);
      goto LABEL_5;
    }
    int64_t v15 = v7 + 1;
    if (__OFADD__(v7, 1))
    {
      __break(1u);
      goto LABEL_26;
    }
    if (v15 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v15);
    ++v7;
    if (!v16)
    {
      int64_t v7 = v15 + 1;
      if (v15 + 1 >= v12) {
        goto LABEL_24;
      }
      unint64_t v16 = *(void *)(v8 + 8 * v7);
      if (!v16)
      {
        int64_t v7 = v15 + 2;
        if (v15 + 2 >= v12) {
          goto LABEL_24;
        }
        unint64_t v16 = *(void *)(v8 + 8 * v7);
        if (!v16) {
          break;
        }
      }
    }
LABEL_20:
    unint64_t v11 = (v16 - 1) & v16;
    unint64_t v14 = __clz(__rbit64(v16)) + (v7 << 6);
LABEL_5:
    if (*(unsigned char *)(*(void *)(a3 + 48) + 560 * v14 + 64))
    {
      *(void *)(result + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
      if (__OFADD__(v6++, 1))
      {
        __break(1u);
LABEL_24:
        swift_retain();
        return sub_105740(v5, a2, v6, a3);
      }
    }
  }
  int64_t v17 = v15 + 3;
  if (v17 >= v12) {
    goto LABEL_24;
  }
  unint64_t v16 = *(void *)(v8 + 8 * v17);
  if (v16)
  {
    int64_t v7 = v17;
    goto LABEL_20;
  }
  while (1)
  {
    int64_t v7 = v17 + 1;
    if (__OFADD__(v17, 1)) {
      break;
    }
    if (v7 >= v12) {
      goto LABEL_24;
    }
    unint64_t v16 = *(void *)(v8 + 8 * v7);
    ++v17;
    if (v16) {
      goto LABEL_20;
    }
  }
LABEL_26:
  __break(1u);
  return result;
}

uint64_t sub_1C8F90(uint64_t *a1)
{
  uint64_t v2 = *(void ***)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *a1;
  long long v5 = *(_OWORD *)(v3 + 112);
  v10[6] = *(_OWORD *)(v3 + 96);
  v10[7] = v5;
  v10[8] = *(_OWORD *)(v3 + 128);
  char v11 = *(unsigned char *)(v3 + 144);
  long long v6 = *(_OWORD *)(v3 + 48);
  long long v10[2] = *(_OWORD *)(v3 + 32);
  v10[3] = v6;
  long long v7 = *(_OWORD *)(v3 + 80);
  v10[4] = *(_OWORD *)(v3 + 64);
  v10[5] = v7;
  long long v8 = *(_OWORD *)(v3 + 16);
  v10[0] = *(_OWORD *)v3;
  v10[1] = v8;
  return sub_6D30C(v4, v2, (uint64_t)v10);
}

uint64_t sub_1C8FEC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v149 = a4;
  uint64_t v147 = a3;
  uint64_t v169 = a2;
  uint64_t v140 = sub_12124(&qword_270BF8);
  uint64_t v5 = *(void *)(v140 - 8);
  uint64_t v6 = __chkstk_darwin(v140);
  unint64_t v139 = (char *)&v128 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  Swift::Int v148 = (char *)&v128 - v8;
  uint64_t v9 = sub_12124(&qword_26D958);
  __chkstk_darwin(v9 - 8);
  uint64_t v154 = (char *)&v128 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v164 = sub_12124(&qword_26D938);
  uint64_t v11 = *(void *)(v164 - 8);
  __chkstk_darwin(v164);
  unint64_t v151 = (char *)&v128 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1FB110();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = __chkstk_darwin(v13);
  int64_t v17 = (char *)&v128 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  unint64_t v144 = (char *)&v128 - v18;
  sub_12124(&qword_2703F0);
  uint64_t result = sub_1FC280();
  int64_t v20 = 0;
  uint64_t v145 = v14;
  uint64_t v146 = a1;
  uint64_t v23 = *(void *)(a1 + 64);
  uint64_t v22 = a1 + 64;
  uint64_t v21 = v23;
  uint64_t v24 = 1 << *(unsigned char *)(v22 - 32);
  uint64_t v25 = -1;
  if (v24 < 64) {
    uint64_t v25 = ~(-1 << v24);
  }
  unint64_t v26 = v25 & v21;
  uint64_t v132 = v22;
  int64_t v133 = (unint64_t)(v24 + 63) >> 6;
  uint64_t v143 = v14 + 16;
  uint64_t v161 = v14 + 32;
  uint64_t v128 = v11 + 16;
  uint64_t v129 = v11;
  uint64_t v152 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v11 + 48);
  uint64_t v153 = (void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v11 + 56);
  unint64_t v137 = (void (**)(char *, char *, uint64_t))(v5 + 16);
  unint64_t v138 = (void (**)(char *, uint64_t, uint64_t))(v11 + 32);
  uint64_t v134 = (void (**)(char *, uint64_t))(v5 + 8);
  uint64_t v135 = (void (**)(char *, uint64_t))(v11 + 8);
  uint64_t v27 = v17;
  uint64_t v141 = result + 64;
  long long v136 = xmmword_1FD2A0;
  uint64_t v142 = (void *)result;
  unint64_t v130 = v17;
  uint64_t v131 = v13;
  if (!v26) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v156 = (v26 - 1) & v26;
  int64_t v157 = v20;
  for (unint64_t i = __clz(__rbit64(v26)) | (v20 << 6); ; unint64_t i = __clz(__rbit64(v31)) + (v30 << 6))
  {
    uint64_t v34 = v145;
    uint64_t v33 = v146;
    uint64_t v35 = *(void *)(v146 + 48);
    unint64_t v159 = *(void *)(v145 + 72) * i;
    uint64_t v36 = v144;
    (*(void (**)(char *, unint64_t, uint64_t))(v145 + 16))(v144, v35 + v159, v13);
    uint64_t v37 = *(void *)(v33 + 56);
    unint64_t v160 = i;
    uint64_t v38 = *(void *)(v37 + 8 * i);
    uint64_t v39 = *(void (**)(char *, char *, uint64_t))(v34 + 32);
    v39(v27, v36, v13);
    uint64_t v40 = *(void *)(v38 + 16);
    uint64_t v158 = (uint64_t (*)(unint64_t, char *, uint64_t))v39;
    if (v40)
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_retain();
      uint64_t result = sub_A1310(v149);
      long long v41 = *(_OWORD *)(v38 + 144);
      long long v194 = *(_OWORD *)(v38 + 128);
      long long v195 = v41;
      long long v196 = *(_OWORD *)(v38 + 160);
      unsigned __int8 v197 = *(unsigned char *)(v38 + 176);
      long long v42 = *(_OWORD *)(v38 + 80);
      long long v190 = *(_OWORD *)(v38 + 64);
      long long v191 = v42;
      long long v43 = *(_OWORD *)(v38 + 112);
      long long v192 = *(_OWORD *)(v38 + 96);
      long long v193 = v43;
      long long v44 = *(_OWORD *)(v38 + 32);
      long long v45 = *(_OWORD *)(v38 + 48);
      uint64_t v150 = v38;
      long long v188 = v44;
      long long v189 = v45;
      uint64_t v46 = v192;
      if (!(void)v192) {
        goto LABEL_84;
      }
      uint64_t v198 = v150 + 32;
      uint64_t v47 = v191;
      int v48 = BYTE8(v190);
      uint64_t v49 = v190;
      int v50 = BYTE8(v189);
      uint64_t v51 = v189;
      BOOL v167 = _swiftEmptyArrayStorage;
      uint64_t v52 = 1;
      int v53 = BYTE8(v188);
      uint64_t v163 = v40;
      while (1)
      {
        if (!*(void *)(v46 + 16)) {
          goto LABEL_49;
        }
        int v176 = v53;
        int v177 = v50;
        uint64_t v178 = v51;
        uint64_t v179 = v49;
        int v180 = v48;
        uint64_t v181 = v47;
        uint64_t v175 = v188;
        sub_54834((uint64_t)&v188);
        unint64_t v54 = sub_4C744(0);
        if ((v55 & 1) == 0) {
          goto LABEL_48;
        }
        uint64_t v56 = *(void *)(*(void *)(v46 + 56) + 8 * v54);
        if (!*(void *)(v56 + 16)) {
          goto LABEL_48;
        }
        memcpy(v187, (const void *)(v56 + 32), 0x229uLL);
        uint64_t v57 = v187[17];
        if ((unint64_t)v187[17] >> 1 == 0xFFFFFFFF) {
          goto LABEL_48;
        }
        uint64_t v58 = v187[11];
        uint64_t v60 = v187[12];
        uint64_t v59 = v187[13];
        uint64_t v62 = v187[14];
        uint64_t v61 = v187[15];
        uint64_t v63 = v187[16];
        uint64_t v172 = v187[14];
        uint64_t v173 = v187[18];
        uint64_t v174 = v187[19];
        uint64_t v170 = v187[15];
        uint64_t v171 = v187[16];
        uint64_t v168 = v187[11];
        uint64_t v165 = v187[13];
        uint64_t v166 = v187[12];
        if ((unint64_t)v187[17] >> 62 == 3)
        {
          uint64_t v64 = *(void *)(v187[11] + 16);
          if (!v64)
          {
            uint64_t v82 = v187[13];
            uint64_t v83 = v187[15];
            unint64_t v77 = v187[17];
            sub_12430(v187[11], v187[12], v187[13], v187[14], v187[15], v187[16], v187[17]);
            sub_12430(v168, v60, v82, v172, v83, v171, v77);
            sub_12384(v187);
            uint64_t v72 = _swiftEmptyArrayStorage;
            uint64_t v78 = _swiftEmptyArrayStorage[2];
            if (v78) {
              goto LABEL_36;
            }
            goto LABEL_40;
          }
          uint64_t v65 = v187[11];
          unint64_t v66 = v187[17];
        }
        else
        {
          sub_12124(&qword_26D5D8);
          uint64_t v67 = swift_allocObject();
          uint64_t v61 = v170;
          uint64_t v63 = v171;
          uint64_t v62 = v172;
          uint64_t v65 = v67;
          *(_OWORD *)(v67 + 16) = v136;
          *(void *)(v67 + 32) = v58;
          *(void *)(v67 + 40) = v60;
          *(void *)(v67 + 48) = v59;
          *(void *)(v67 + 56) = v62;
          *(void *)(v67 + 64) = v61;
          *(void *)(v67 + 72) = v63;
          char v68 = v57 & 1;
          unint64_t v66 = v57;
          uint64_t v64 = 1;
          *(unsigned char *)(v67 + 80) = v68;
        }
        uint64_t v69 = v62;
        unint64_t v70 = v66;
        sub_12430(v58, v60, v59, v69, v61, v63, v66);
        unint64_t v162 = v70;
        sub_12430(v58, v60, v59, v172, v170, v171, v70);
        sub_12384(v187);
        swift_bridgeObjectRetain();
        uint64_t v71 = (double *)(v65 + 80);
        uint64_t v72 = _swiftEmptyArrayStorage;
        do
        {
          if ((*(unsigned char *)v71 & 1) == 0)
          {
            double v73 = *(v71 - 2);
            double v74 = exp2(-*(v71 - 1) / *(v71 - 3));
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              uint64_t v72 = sub_41BAC(0, v72[2] + 1, 1, v72);
            }
            unint64_t v76 = v72[2];
            unint64_t v75 = v72[3];
            if (v76 >= v75 >> 1) {
              uint64_t v72 = sub_41BAC((void *)(v75 > 1), v76 + 1, 1, v72);
            }
            v72[2] = v76 + 1;
            *(double *)&v72[v76 + 4] = v73 * v74;
          }
          v71 += 7;
          --v64;
        }
        while (v64);
        swift_bridgeObjectRelease();
        unint64_t v77 = v162;
        uint64_t v78 = v72[2];
        if (v78)
        {
LABEL_36:
          id v79 = (double *)(v72 + 4);
          double v80 = 0.0;
          do
          {
            double v81 = *v79++;
            double v80 = v80 + v81;
            --v78;
          }
          while (v78);
          swift_bridgeObjectRelease();
          goto LABEL_41;
        }
LABEL_40:
        swift_bridgeObjectRelease();
        double v80 = 0.0;
LABEL_41:
        swift_bridgeObjectRelease();
        sub_1255C(v168, v166, v165, v172, v170, v171, v77);
        if (*(void *)(v169 + 16))
        {
          uint64_t v84 = sub_56168(v187[0]);
          uint64_t v85 = (uint64_t)v154;
          uint64_t v40 = v163;
          if (v86)
          {
            (*(void (**)(char *, uint64_t, uint64_t))(v129 + 16))(v154, *(void *)(v169 + 56) + *(void *)(v129 + 72) * v84, v164);
            uint64_t v87 = 0;
          }
          else
          {
            uint64_t v87 = 1;
          }
        }
        else
        {
          uint64_t v87 = 1;
          uint64_t v85 = (uint64_t)v154;
          uint64_t v40 = v163;
        }
        uint64_t v88 = v164;
        (*v153)(v85, v87, 1, v164);
        sub_124B4(v187);
        if ((*v152)(v85, 1, v88) == 1)
        {
          sub_55F38(v85, &qword_26D958);
LABEL_48:
          uint64_t result = sub_7A018((uint64_t)&v188);
LABEL_49:
          if (v52 == v40) {
            goto LABEL_68;
          }
          goto LABEL_50;
        }
        (*v138)(v151, v85, v88);
        int64_t v97 = v148;
        uint64_t v98 = v155;
        sub_1FB370();
        uint64_t v155 = v98;
        uint64_t v99 = v140;
        (*v137)(v139, v97, v140);
        sub_52CC0(&qword_270C00, &qword_270BF8);
        sub_1FB980();
        uint64_t result = v185;
        unint64_t v100 = *(void *)(v185 + 16);
        if (v186 == v100)
        {
          swift_bridgeObjectRelease();
          (*v134)(v97, v99);
          double v101 = 0.0;
        }
        else
        {
          if (v186 >= v100) {
            goto LABEL_80;
          }
          double v102 = *(double *)(v185 + 8 * v186 + 32);
          if (v186 + 1 != v100)
          {
            if (v186 + 1 >= v100) {
              goto LABEL_82;
            }
            unint64_t v103 = v100 + ~v186;
            unint64_t v104 = v100 - v186 - 2;
            uint64_t v105 = (double *)(v185 + 8 * v186 + 40);
            unint64_t v106 = v103;
            while (v103 > v104)
            {
              double v107 = *v105++;
              double v108 = v107;
              if (v102 < v107) {
                double v102 = v108;
              }
              if (!--v106) {
                goto LABEL_62;
              }
            }
            __break(1u);
            goto LABEL_79;
          }
LABEL_62:
          swift_bridgeObjectRelease();
          double v109 = *(double *)(v149 + 432);
          (*v134)(v148, v99);
          double v101 = fmin(v102 * v109, 1.0);
        }
        uint64_t v110 = v167;
        long long v111 = v193;
        long long v112 = v194;
        uint64_t v172 = *((void *)&v195 + 1);
        uint64_t v173 = v195;
        uint64_t v170 = *((void *)&v196 + 1);
        uint64_t v171 = v196;
        LODWORD(v168) = v197;
        (*v135)(v151, v164);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_5480C(v179, v180);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        sub_7A018((uint64_t)&v188);
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v174 = v112;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_41DE0(0, v110[2] + 1, 1, v110);
          uint64_t v110 = (void *)result;
        }
        unint64_t v114 = v110[2];
        unint64_t v113 = v110[3];
        BOOL v167 = v110;
        if (v114 >= v113 >> 1)
        {
          uint64_t result = (uint64_t)sub_41DE0((void *)(v113 > 1), v114 + 1, 1, v167);
          BOOL v167 = (void *)result;
        }
        char v115 = v176 & 1;
        char v184 = v177 & 1;
        int64_t v116 = v167;
        v167[2] = *((void *)&v111 + 1) + 1;
        uint64_t v117 = &v116[19 * *((void *)&v111 + 1)];
        v117[4] = v175;
        *((unsigned char *)v117 + 40) = v115;
        int v118 = *(_DWORD *)((char *)&v185 + 3);
        *(_DWORD *)((char *)v117 + 41) = v185;
        *((_DWORD *)v117 + 11) = v118;
        v117[6] = v178;
        *((unsigned char *)v117 + 56) = v184;
        int v119 = *(_DWORD *)v183;
        *((_DWORD *)v117 + 15) = *(_DWORD *)&v183[3];
        *(_DWORD *)((char *)v117 + 57) = v119;
        v117[8] = v179;
        *((unsigned char *)v117 + 72) = v180;
        int v120 = *(_DWORD *)v182;
        *((_DWORD *)v117 + 19) = *(_DWORD *)&v182[3];
        *(_DWORD *)((char *)v117 + 73) = v120;
        v117[10] = v181;
        *((double *)v117 + 11) = v101;
        v117[12] = v46;
        *((double *)v117 + 13) = v80 * v101;
        *((_OWORD *)v117 + 7) = v111;
        v117[16] = v174;
        v117[17] = *((void *)&v112 + 1);
        uint64_t v121 = v172;
        v117[18] = v173;
        v117[19] = v121;
        uint64_t v122 = v170;
        v117[20] = v171;
        v117[21] = v122;
        *((unsigned char *)v117 + 176) = v168;
        uint64_t v40 = v163;
        if (v52 == v163)
        {
LABEL_68:
          sub_11D3C(v149);
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_release();
          uint64_t v27 = v130;
          uint64_t v13 = v131;
          unint64_t v123 = v167;
          goto LABEL_70;
        }
LABEL_50:
        uint64_t v89 = (long long *)(v198 + 152 * v52);
        long long v90 = v89[1];
        long long v188 = *v89;
        long long v189 = v90;
        long long v91 = v89[2];
        long long v92 = v89[3];
        long long v93 = v89[5];
        long long v192 = v89[4];
        long long v193 = v93;
        long long v190 = v91;
        long long v191 = v92;
        long long v94 = v89[6];
        long long v95 = v89[7];
        long long v96 = v89[8];
        unsigned __int8 v197 = *((unsigned char *)v89 + 144);
        long long v195 = v95;
        long long v196 = v96;
        long long v194 = v94;
        ++v52;
        int v53 = BYTE8(v188);
        uint64_t v51 = v189;
        int v50 = BYTE8(v189);
        uint64_t v49 = v190;
        int v48 = BYTE8(v190);
        uint64_t v47 = v191;
        uint64_t v46 = v192;
        if (!(void)v192) {
          goto LABEL_84;
        }
      }
    }
    unint64_t v123 = _swiftEmptyArrayStorage;
LABEL_70:
    unint64_t v124 = v160;
    unint64_t v125 = v142;
    *(void *)(v141 + ((v160 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v160;
    uint64_t result = v158(v125[6] + v159, v27, v13);
    *(void *)(v125[7] + 8 * v124) = v123;
    uint64_t v126 = v125[2];
    BOOL v29 = __OFADD__(v126, 1);
    uint64_t v127 = v126 + 1;
    if (v29) {
      break;
    }
    uint64_t result = (uint64_t)v125;
    v125[2] = v127;
    unint64_t v26 = v156;
    int64_t v20 = v157;
    if (v156) {
      goto LABEL_4;
    }
LABEL_5:
    BOOL v29 = __OFADD__(v20, 1);
    int64_t v30 = v20 + 1;
    if (v29) {
      goto LABEL_81;
    }
    if (v30 >= v133) {
      return result;
    }
    unint64_t v31 = *(void *)(v132 + 8 * v30);
    if (!v31)
    {
      int64_t v32 = v30 + 1;
      if (v30 + 1 >= v133) {
        return result;
      }
      unint64_t v31 = *(void *)(v132 + 8 * v32);
      if (!v31)
      {
        int64_t v32 = v30 + 2;
        if (v30 + 2 >= v133) {
          return result;
        }
        unint64_t v31 = *(void *)(v132 + 8 * v32);
        if (!v31)
        {
          int64_t v32 = v30 + 3;
          if (v30 + 3 >= v133) {
            return result;
          }
          unint64_t v31 = *(void *)(v132 + 8 * v32);
          if (!v31)
          {
            while (1)
            {
              int64_t v30 = v32 + 1;
              if (__OFADD__(v32, 1)) {
                goto LABEL_83;
              }
              if (v30 >= v133) {
                return result;
              }
              unint64_t v31 = *(void *)(v132 + 8 * v30);
              ++v32;
              if (v31) {
                goto LABEL_15;
              }
            }
          }
        }
      }
      int64_t v30 = v32;
    }
LABEL_15:
    uint64_t v156 = (v31 - 1) & v31;
    int64_t v157 = v30;
  }
LABEL_79:
  __break(1u);
LABEL_80:
  __break(1u);
LABEL_81:
  __break(1u);
LABEL_82:
  __break(1u);
LABEL_83:
  __break(1u);
LABEL_84:
  __break(1u);
  return result;
}

uint64_t sub_1C9D7C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_272968);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1C9DEC(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  while (1)
  {
    if (v5)
    {
      unint64_t v9 = __clz(__rbit64(v5));
      v5 &= v5 - 1;
      unint64_t v10 = v9 | (v8 << 6);
      goto LABEL_23;
    }
    int64_t v11 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v11 >= v6) {
      goto LABEL_39;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v11);
    int64_t v13 = v8 + 1;
    if (!v12)
    {
      int64_t v13 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_39;
      }
      unint64_t v12 = *(void *)(v2 + 8 * v13);
      if (!v12)
      {
        int64_t v13 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_39;
        }
        unint64_t v12 = *(void *)(v2 + 8 * v13);
        if (!v12)
        {
          int64_t v13 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_39;
          }
          unint64_t v12 = *(void *)(v2 + 8 * v13);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v5 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v13 << 6);
    int64_t v8 = v13;
LABEL_23:
    uint64_t v15 = *(void *)(a1 + 56) + 8 * v10;
    if ((*(unsigned char *)(v15 + 4) & 1) == 0)
    {
      float v16 = *(float *)v15;
      if (*(float *)v15 != 0.0)
      {
        long long v17 = *(_OWORD *)(*(void *)(a1 + 48) + 16 * v10);
        unint64_t v18 = _swiftEmptyDictionarySingleton[2];
        unint64_t v19 = *(void *)(*(void *)(a1 + 48) + 16 * v10 + 8);
        long long v30 = v17;
        if (_swiftEmptyDictionarySingleton[3] <= v18)
        {
          uint64_t v20 = v18 + 1;
          sub_2F5CC(v17, *((unint64_t *)&v17 + 1));
          sub_11ECE0(v20, 1);
        }
        else
        {
          sub_2F5CC(v17, *((unint64_t *)&v17 + 1));
        }
        sub_1FC7E0();
        sub_2F5CC(v30, v19);
        sub_1FB8C0();
        swift_bridgeObjectRelease();
        uint64_t result = sub_1FC830();
        uint64_t v21 = &_swiftEmptyDictionarySingleton[8];
        uint64_t v22 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
        unint64_t v23 = result & ~v22;
        unint64_t v24 = v23 >> 6;
        if (((-1 << v23) & ~_swiftEmptyDictionarySingleton[(v23 >> 6) + 8]) == 0)
        {
          char v26 = 0;
          unint64_t v27 = (unint64_t)(63 - v22) >> 6;
          while (++v24 != v27 || (v26 & 1) == 0)
          {
            BOOL v28 = v24 == v27;
            if (v24 == v27) {
              unint64_t v24 = 0;
            }
            v26 |= v28;
            uint64_t v29 = v21[v24];
            if (v29 != -1)
            {
              unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
              goto LABEL_38;
            }
          }
          goto LABEL_41;
        }
        unint64_t v25 = __clz(__rbit64((-1 << v23) & ~_swiftEmptyDictionarySingleton[(v23 >> 6) + 8])) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_38:
        *(void *)((char *)v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
        *(_OWORD *)(_swiftEmptyDictionarySingleton[6] + 16 * v25) = v30;
        *(double *)(_swiftEmptyDictionarySingleton[7] + 8 * v25) = v16;
        ++_swiftEmptyDictionarySingleton[2];
      }
    }
  }
  int64_t v14 = v8 + 5;
  if (v8 + 5 >= v6)
  {
LABEL_39:
    sub_1226C();
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  unint64_t v12 = *(void *)(v2 + 8 * v14);
  if (v12)
  {
    int64_t v13 = v8 + 5;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v13 = v14 + 1;
    if (__OFADD__(v14, 1)) {
      break;
    }
    if (v13 >= v6) {
      goto LABEL_39;
    }
    unint64_t v12 = *(void *)(v2 + 8 * v13);
    ++v14;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

void *sub_1CA150(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return _swiftEmptyArrayStorage;
  }
  sub_46928(0, v1, 0);
  uint64_t result = (void *)sub_14D538(a1);
  uint64_t v4 = (uint64_t)result;
  uint64_t v6 = v5;
  char v8 = v7 & 1;
  while ((v4 & 0x8000000000000000) == 0 && v4 < 1 << *(unsigned char *)(a1 + 32))
  {
    if (((*(void *)(a1 + 56 + (((unint64_t)v4 >> 3) & 0x1FFFFFFFFFFFFFF8)) >> v4) & 1) == 0) {
      goto LABEL_13;
    }
    if (*(_DWORD *)(a1 + 36) != v6) {
      goto LABEL_14;
    }
    uint64_t v9 = *(unsigned __int8 *)(*(void *)(a1 + 48) + v4);
    unint64_t v11 = _swiftEmptyArrayStorage[2];
    unint64_t v10 = _swiftEmptyArrayStorage[3];
    if (v11 >= v10 >> 1) {
      sub_46928(v10 > 1, v11 + 1, 1);
    }
    _swiftEmptyArrayStorage[2] = v11 + 1;
    unint64_t v12 = &_swiftEmptyArrayStorage[2 * v11];
    v12[4] = 0;
    v12[5] = v9;
    uint64_t result = (void *)sub_14D5DC(v4, v6, v8 & 1, a1);
    uint64_t v4 = (uint64_t)result;
    uint64_t v6 = v13;
    char v8 = v14 & 1;
    if (!--v1)
    {
      sub_55F94((uint64_t)result, v13, v14 & 1);
      return _swiftEmptyArrayStorage;
    }
  }
  __break(1u);
LABEL_13:
  __break(1u);
LABEL_14:
  __break(1u);
  return result;
}

void *sub_1CA2A8()
{
  uint64_t v1 = *(void *)(v0 + 56);
  if (!v1)
  {
    return (void *)sub_16B8EC(_swiftEmptyArrayStorage);
  }
  uint64_t v31 = *(void *)(v1 + 16);
  if (!v31) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v30 = v1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v2 = 0;
  while (1)
  {
    uint64_t v4 = (uint64_t *)(v30 + 16 * v2);
    uint64_t v5 = *v4;
    if (*v4 < 0) {
      break;
    }
    uint64_t v6 = v4[1];
    int64_t v7 = *(void *)(v6 + 16);
    if (v7)
    {
      swift_bridgeObjectRetain_n();
      sub_46538(0, v7, 0);
      uint64_t v32 = v6;
      uint64_t v8 = *(void *)(v6 + 32);
      if (v8 < 0) {
        break;
      }
      unint64_t v10 = _swiftEmptyArrayStorage[2];
      unint64_t v9 = _swiftEmptyArrayStorage[3];
      if (v10 >= v9 >> 1) {
        sub_46538(v9 > 1, v10 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v10 + 1;
      _swiftEmptyArrayStorage[v10 + 4] = v8;
      int64_t v11 = v7 - 1;
      if (v7 != 1)
      {
        unint64_t v25 = v10 + 5;
        char v26 = (uint64_t *)(v32 + 40);
        while (v11)
        {
          uint64_t v27 = *v26;
          if (*v26 < 0) {
            goto LABEL_40;
          }
          unint64_t v28 = _swiftEmptyArrayStorage[3];
          if (v25 - 4 >= v28 >> 1) {
            sub_46538(v28 > 1, v25 - 3, 1);
          }
          _swiftEmptyArrayStorage[2] = v25 - 3;
          _swiftEmptyArrayStorage[v25++] = v27;
          ++v26;
          if (!--v11) {
            goto LABEL_12;
          }
        }
        __break(1u);
LABEL_38:
        __break(1u);
LABEL_39:
        __break(1u);
        break;
      }
LABEL_12:
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRetain();
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v14 = sub_56168(v5);
    uint64_t v15 = _swiftEmptyDictionarySingleton[2];
    BOOL v16 = (v13 & 1) == 0;
    uint64_t v17 = v15 + v16;
    if (__OFADD__(v15, v16)) {
      goto LABEL_38;
    }
    char v18 = v13;
    if (_swiftEmptyDictionarySingleton[3] >= v17)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if (v13) {
          goto LABEL_4;
        }
      }
      else
      {
        sub_12074C();
        if (v18) {
          goto LABEL_4;
        }
      }
    }
    else
    {
      sub_117318(v17, isUniquelyReferenced_nonNull_native);
      uint64_t v19 = sub_56168(v5);
      if ((v18 & 1) != (v20 & 1)) {
        goto LABEL_41;
      }
      unint64_t v14 = v19;
      if (v18)
      {
LABEL_4:
        uint64_t v3 = _swiftEmptyDictionarySingleton[7];
        swift_bridgeObjectRelease();
        *(void *)(v3 + 8 * v14) = _swiftEmptyArrayStorage;
        goto LABEL_5;
      }
    }
    _swiftEmptyDictionarySingleton[(v14 >> 6) + 8] |= 1 << v14;
    uint64_t v21 = 8 * v14;
    *(void *)(_swiftEmptyDictionarySingleton[6] + v21) = v5;
    *(void *)(_swiftEmptyDictionarySingleton[7] + v21) = _swiftEmptyArrayStorage;
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_39;
    }
    _swiftEmptyDictionarySingleton[2] = v24;
LABEL_5:
    ++v2;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v2 == v31)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
LABEL_40:
  sub_1FC210();
  __break(1u);
LABEL_41:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

void *sub_1CA60C()
{
  uint64_t v1 = *(void *)(v0 + 24);
  if (!v1)
  {
    return (void *)sub_16B8F8((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return _swiftEmptyDictionarySingleton;
  }
  swift_bridgeObjectRetain();
  for (unint64_t i = (unsigned char *)(v1 + 56); ; i += 48)
  {
    if (*(i - 16) & 1) != 0 || (*i) {
      goto LABEL_6;
    }
    uint64_t v4 = *((void *)i - 3);
    if (v4 < 0) {
      goto LABEL_29;
    }
    uint64_t v5 = *((void *)i - 1);
    if (v5 < 0) {
      goto LABEL_29;
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v8 = sub_56168(v4);
    uint64_t v9 = _swiftEmptyDictionarySingleton[2];
    BOOL v10 = (v7 & 1) == 0;
    uint64_t v11 = v9 + v10;
    if (__OFADD__(v9, v10)) {
      break;
    }
    char v12 = v7;
    if (_swiftEmptyDictionarySingleton[3] >= v11)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v7 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_120598();
        if ((v12 & 1) == 0) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_116FE4(v11, isUniquelyReferenced_nonNull_native);
      uint64_t v13 = sub_56168(v4);
      if ((v12 & 1) != (v14 & 1)) {
        goto LABEL_30;
      }
      unint64_t v8 = v13;
      if ((v12 & 1) == 0)
      {
LABEL_18:
        _swiftEmptyDictionarySingleton[(v8 >> 6) + 8] |= 1 << v8;
        uint64_t v15 = 8 * v8;
        *(void *)(_swiftEmptyDictionarySingleton[6] + v15) = v4;
        *(void *)(_swiftEmptyDictionarySingleton[7] + v15) = v5;
        uint64_t v16 = _swiftEmptyDictionarySingleton[2];
        BOOL v17 = __OFADD__(v16, 1);
        uint64_t v18 = v16 + 1;
        if (v17) {
          goto LABEL_28;
        }
        _swiftEmptyDictionarySingleton[2] = v18;
        goto LABEL_5;
      }
    }
    *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v8) = v5;
LABEL_5:
    swift_bridgeObjectRelease();
LABEL_6:
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  sub_1FC210();
  __break(1u);
LABEL_30:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

void *sub_1CA840()
{
  uint64_t v1 = *(void *)(v0 + 32);
  if (!v1)
  {
    return (void *)sub_16B814((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return _swiftEmptyDictionarySingleton;
  }
  for (unint64_t i = (unint64_t *)(swift_bridgeObjectRetain() + 56); ; i += 4)
  {
    if (*(unsigned char *)(i - 2)) {
      goto LABEL_6;
    }
    unint64_t v4 = *i;
    if (*i == 2) {
      goto LABEL_6;
    }
    uint64_t v5 = *(i - 3);
    if (v5 < 0) {
      goto LABEL_36;
    }
    uint64_t v6 = *(i - 1);
    if (v4)
    {
      if (v4 != 1)
      {
        uint64_t v17 = sub_56168(*(i - 3));
        if ((v18 & 1) == 0) {
          goto LABEL_6;
        }
        unint64_t v19 = v17;
        sub_2E638(v6, v4);
        if (!swift_isUniquelyReferenced_nonNull_native()) {
          sub_121584();
        }
        sub_14C840(v19, (uint64_t)_swiftEmptyDictionarySingleton);
        goto LABEL_5;
      }
      char v7 = 1;
    }
    else
    {
      char v7 = 0;
    }
    sub_2E638(*(i - 1), *i);
    sub_2E638(v6, v4);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v10 = sub_56168(v5);
    uint64_t v11 = _swiftEmptyDictionarySingleton[2];
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (_swiftEmptyDictionarySingleton[3] >= v13)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_25;
        }
      }
      else
      {
        sub_121584();
        if ((v14 & 1) == 0) {
          goto LABEL_25;
        }
      }
    }
    else
    {
      sub_118FC0(v13, isUniquelyReferenced_nonNull_native);
      uint64_t v15 = sub_56168(v5);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_37;
      }
      unint64_t v10 = v15;
      if ((v14 & 1) == 0)
      {
LABEL_25:
        _swiftEmptyDictionarySingleton[(v10 >> 6) + 8] |= 1 << v10;
        *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v10) = v5;
        *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v10) = v7;
        uint64_t v20 = _swiftEmptyDictionarySingleton[2];
        BOOL v21 = __OFADD__(v20, 1);
        uint64_t v22 = v20 + 1;
        if (v21) {
          goto LABEL_35;
        }
        _swiftEmptyDictionarySingleton[2] = v22;
        goto LABEL_5;
      }
    }
    *(unsigned char *)(_swiftEmptyDictionarySingleton[7] + v10) = v7;
LABEL_5:
    swift_bridgeObjectRelease();
    sub_379B0(v6, v4);
LABEL_6:
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
  __break(1u);
LABEL_35:
  __break(1u);
LABEL_36:
  sub_1FC210();
  __break(1u);
LABEL_37:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_1CAAF8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *(void *)(*v0 + 16);
  if (v2)
  {
    swift_bridgeObjectRetain();
    for (uint64_t i = 0; i != v2; ++i)
    {
      if (*(void *)(v1 + 8 * i + 32))
      {
        uint64_t v4 = swift_bridgeObjectRetain();
        sub_A9BE8(v4);
      }
    }
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = _swiftEmptyArrayStorage[2];
  if (!v5)
  {
    uint64_t v52 = _swiftEmptyDictionarySingleton;
LABEL_75:
    swift_bridgeObjectRelease();
    return (uint64_t)v52;
  }
  swift_bridgeObjectRetain();
  uint64_t v6 = 0;
  char v7 = _swiftEmptyDictionarySingleton;
  uint64_t v54 = v5;
  while (1)
  {
    unint64_t v8 = (float *)&_swiftEmptyArrayStorage[8 * v6 + 4];
    uint64_t v55 = *((void *)v8 + 2);
    uint64_t v56 = v7;
    float v9 = v8[11];
    char v10 = *((unsigned char *)v8 + 48);
    if (((_BYTE)v8[10] & 1) != 0 || v8[9] <= 0.0)
    {
      swift_bridgeObjectRetain();
      goto LABEL_18;
    }
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    Swift::Int v11 = sub_1FC830();
    uint64_t v12 = ~(-1 << LOBYTE(_swiftEmptySetSingleton[4]));
    for (unint64_t j = v11 & v12;
          ((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((j >> 3) & 0xFFFFFFFFFFFFFF8)) >> j) & 1) != 0;
          unint64_t j = (j + 1) & v12)
    {
      if ((*(unsigned char *)(_swiftEmptySetSingleton[6] + j) & 1) == 0)
      {
        swift_bridgeObjectRelease();
LABEL_63:
        char v7 = v56;
        goto LABEL_18;
      }
      char v14 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      if (v14) {
        goto LABEL_63;
      }
    }
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v24 = _swiftEmptySetSingleton[2];
    if (_swiftEmptySetSingleton[3] > v24)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_E1B4();
      }
      goto LABEL_71;
    }
    uint64_t v26 = v24 + 1;
    if (isUniquelyReferenced_nonNull_native) {
      sub_A0F8(v26);
    }
    else {
      sub_FD04(v26);
    }
    sub_1FC7E0();
    sub_1FB8C0();
    Swift::Int v46 = sub_1FC830();
    uint64_t v47 = -1 << LOBYTE(_swiftEmptySetSingleton[4]);
    unint64_t j = v46 & ~v47;
    if ((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((j >> 3) & 0xFFFFFFFFFFFFFF8)) >> j)) {
      break;
    }
LABEL_70:
    uint64_t v5 = v54;
LABEL_71:
    *(void *)((char *)&_swiftEmptySetSingleton[7] + ((j >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << j;
    *(unsigned char *)(_swiftEmptySetSingleton[6] + j) = 0;
    uint64_t v50 = _swiftEmptySetSingleton[2];
    BOOL v32 = __OFADD__(v50, 1);
    uint64_t v51 = v50 + 1;
    char v7 = v56;
    if (v32) {
      goto LABEL_79;
    }
    _swiftEmptySetSingleton[2] = v51;
    swift_bridgeObjectRelease();
LABEL_18:
    if (v9 <= 0.0) {
      char v15 = 1;
    }
    else {
      char v15 = v10;
    }
    if (v15) {
      goto LABEL_38;
    }
    sub_1FC7E0();
    swift_bridgeObjectRetain();
    sub_1FB8C0();
    Swift::Int v16 = sub_1FC830();
    uint64_t v17 = -1 << LOBYTE(_swiftEmptySetSingleton[4]);
    unint64_t v18 = v16 & ~v17;
    if ((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
    {
      uint64_t v19 = ~v17;
      while (*(unsigned char *)(_swiftEmptySetSingleton[6] + v18) != 1)
      {
        char v20 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        if (v20) {
          goto LABEL_37;
        }
        unint64_t v18 = (v18 + 1) & v19;
        if (((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
          goto LABEL_27;
        }
      }
      swift_bridgeObjectRelease();
LABEL_37:
      swift_bridgeObjectRelease();
      char v7 = v56;
LABEL_38:
      if (!_swiftEmptySetSingleton[2]) {
        goto LABEL_9;
      }
LABEL_51:
      if (v55 < 0) {
        goto LABEL_82;
      }
      char v34 = swift_isUniquelyReferenced_nonNull_native();
      unint64_t v36 = sub_56168(v55);
      uint64_t v37 = v56[2];
      BOOL v38 = (v35 & 1) == 0;
      uint64_t v39 = v37 + v38;
      if (__OFADD__(v37, v38))
      {
        __break(1u);
LABEL_77:
        __break(1u);
LABEL_78:
        __break(1u);
LABEL_79:
        __break(1u);
        goto LABEL_80;
      }
      char v40 = v35;
      if (v56[3] >= v39)
      {
        if ((v34 & 1) == 0) {
          sub_121714();
        }
      }
      else
      {
        sub_119260(v39, v34);
        uint64_t v41 = sub_56168(v55);
        if ((v40 & 1) != (v42 & 1)) {
          goto LABEL_83;
        }
        unint64_t v36 = v41;
      }
      char v7 = v56;
      if (v40)
      {
        uint64_t v43 = v56[7];
        swift_bridgeObjectRelease();
        *(void *)(v43 + 8 * v36) = _swiftEmptySetSingleton;
        char v7 = v56;
      }
      else
      {
        v56[(v36 >> 6) + 8] |= 1 << v36;
        *(void *)(v56[6] + 8 * v36) = v55;
        *(void *)(v56[7] + 8 * v36) = _swiftEmptySetSingleton;
        uint64_t v44 = v56[2];
        BOOL v32 = __OFADD__(v44, 1);
        uint64_t v45 = v44 + 1;
        if (v32) {
          goto LABEL_77;
        }
        void v56[2] = v45;
      }
      goto LABEL_9;
    }
LABEL_27:
    swift_bridgeObjectRelease();
    int v21 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v22 = _swiftEmptySetSingleton[2];
    if (_swiftEmptySetSingleton[3] <= v22)
    {
      uint64_t v25 = v22 + 1;
      if (v21) {
        sub_A0F8(v25);
      }
      else {
        sub_FD04(v25);
      }
      sub_1FC7E0();
      sub_1FB8C0();
      Swift::Int v27 = sub_1FC830();
      uint64_t v28 = -1 << LOBYTE(_swiftEmptySetSingleton[4]);
      unint64_t v18 = v27 & ~v28;
      if ((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18))
      {
        uint64_t v29 = ~v28;
        while (*(unsigned char *)(_swiftEmptySetSingleton[6] + v18) != 1)
        {
          char v30 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          if (v30) {
            goto LABEL_81;
          }
          unint64_t v18 = (v18 + 1) & v29;
          if (((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) >> v18) & 1) == 0) {
            goto LABEL_48;
          }
        }
        goto LABEL_80;
      }
LABEL_48:
      char v7 = v56;
    }
    else
    {
      char v7 = v56;
      if ((v21 & 1) == 0)
      {
        sub_E1B4();
        char v7 = v56;
      }
    }
    *(void *)((char *)&_swiftEmptySetSingleton[7] + ((v18 >> 3) & 0xFFFFFFFFFFFFFF8)) |= 1 << v18;
    *(unsigned char *)(_swiftEmptySetSingleton[6] + v18) = 1;
    uint64_t v31 = _swiftEmptySetSingleton[2];
    BOOL v32 = __OFADD__(v31, 1);
    uint64_t v33 = v31 + 1;
    if (v32) {
      goto LABEL_78;
    }
    _swiftEmptySetSingleton[2] = v33;
    swift_bridgeObjectRelease();
    if (_swiftEmptySetSingleton[2]) {
      goto LABEL_51;
    }
LABEL_9:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (++v6 == v5)
    {
      uint64_t v52 = v7;
      swift_bridgeObjectRelease();
      goto LABEL_75;
    }
  }
  uint64_t v48 = ~v47;
  while ((*(unsigned char *)(_swiftEmptySetSingleton[6] + j) & 1) != 0)
  {
    char v49 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v49) {
      goto LABEL_81;
    }
    unint64_t j = (j + 1) & v48;
    if (((*(void *)((char *)&_swiftEmptySetSingleton[7] + ((j >> 3) & 0xFFFFFFFFFFFFFF8)) >> j) & 1) == 0) {
      goto LABEL_70;
    }
  }
LABEL_80:
  swift_bridgeObjectRelease();
LABEL_81:
  sub_1FC760();
  __break(1u);
LABEL_82:
  sub_1FC210();
  __break(1u);
LABEL_83:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

void *sub_1CB2E4()
{
  uint64_t v1 = *(void *)(v0 + 8);
  if (!v1)
  {
    return (void *)sub_16B9D0(_swiftEmptyArrayStorage);
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return _swiftEmptyDictionarySingleton;
  }
  uint64_t v3 = v1 + 32;
  swift_bridgeObjectRetain();
  uint64_t v4 = 0;
  uint64_t v5 = _swiftEmptyDictionarySingleton;
  uint64_t v29 = v2;
  while (1)
  {
    char v7 = (uint64_t *)(v3 + 24 * v4);
    if (v7[1]) {
      goto LABEL_6;
    }
    uint64_t v8 = v7[2];
    if (!v8) {
      goto LABEL_6;
    }
    uint64_t v9 = *v7;
    if (*v7 < 0) {
      goto LABEL_32;
    }
    swift_bridgeObjectRetain_n();
    uint64_t v10 = sub_1FBCD0();
    uint64_t v31 = v10;
    uint64_t v11 = *(void *)(v8 + 16);
    if (v11)
    {
      uint64_t v12 = (Swift::Int *)(v8 + 40);
      do
      {
        Swift::Int v13 = *(v12 - 1);
        Swift::Int v14 = *v12;
        swift_bridgeObjectRetain();
        sub_7094((Swift::Int *)&v30, v13, v14);
        swift_bridgeObjectRelease();
        v12 += 2;
        --v11;
      }
      while (v11);
      swift_bridgeObjectRelease();
      uint64_t v15 = v31;
    }
    else
    {
      uint64_t v15 = v10;
      swift_bridgeObjectRelease();
    }
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char v30 = v5;
    unint64_t v18 = sub_56168(v9);
    uint64_t v19 = v5[2];
    BOOL v20 = (v17 & 1) == 0;
    uint64_t v21 = v19 + v20;
    if (__OFADD__(v19, v20)) {
      break;
    }
    char v22 = v17;
    if (v5[3] >= v21)
    {
      if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
        sub_121720();
      }
    }
    else
    {
      sub_11926C(v21, isUniquelyReferenced_nonNull_native);
      uint64_t v23 = sub_56168(v9);
      if ((v22 & 1) != (v24 & 1)) {
        goto LABEL_33;
      }
      unint64_t v18 = v23;
    }
    uint64_t v5 = v30;
    if (v22)
    {
      uint64_t v6 = v30[7];
      swift_bridgeObjectRelease();
      *(void *)(v6 + 8 * v18) = v15;
    }
    else
    {
      v30[(v18 >> 6) + 8] |= 1 << v18;
      *(void *)(v5[6] + 8 * v18) = v9;
      *(void *)(v5[7] + 8 * v18) = v15;
      uint64_t v25 = v5[2];
      BOOL v26 = __OFADD__(v25, 1);
      uint64_t v27 = v25 + 1;
      if (v26) {
        goto LABEL_31;
      }
      uint64_t v5[2] = v27;
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = v29;
LABEL_6:
    if (++v4 == v2)
    {
      swift_bridgeObjectRelease();
      return v5;
    }
  }
  __break(1u);
LABEL_31:
  __break(1u);
LABEL_32:
  sub_1FC210();
  __break(1u);
LABEL_33:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

void *sub_1CB5B4()
{
  uint64_t v2 = v1;
  uint64_t v41 = *(void *)(*(void *)v0 + 16);
  if (v41)
  {
    uint64_t v40 = *(void *)v0 + 32;
    swift_bridgeObjectRetain_n();
    uint64_t v3 = 0;
    uint64_t v4 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v5 = *(void *)(v40 + 8 * v3);
      if (!v5)
      {
        type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2.Errors();
        sub_1CC010();
        swift_allocError();
        swift_storeEnumTagMultiPayload();
        swift_willThrow();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease_n();
        return v4;
      }
      uint64_t v42 = v3;
      uint64_t v43 = v4;
      uint64_t v6 = *(void *)(v5 + 16);
      if (v6) {
        break;
      }
      swift_bridgeObjectRetain();
      uint64_t v45 = _swiftEmptyArrayStorage;
LABEL_25:
      uint64_t v28 = v45[2];
      uint64_t v4 = v43;
      int64_t v29 = v43[2];
      int64_t v30 = v29 + v28;
      if (__OFADD__(v29, v28))
      {
        __break(1u);
LABEL_47:
        __break(1u);
LABEL_48:
        __break(1u);
LABEL_49:
        __break(1u);
        goto LABEL_50;
      }
      uint64_t isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
      if ((isUniquelyReferenced_nonNull_native & 1) == 0 || v30 > v43[3] >> 1)
      {
        if (v29 <= v30) {
          int64_t v32 = v29 + v28;
        }
        else {
          int64_t v32 = v29;
        }
        uint64_t v4 = sub_42490((void *)isUniquelyReferenced_nonNull_native, v32, 1, v43);
      }
      if (v45[2])
      {
        uint64_t v33 = v4[2];
        if ((v4[3] >> 1) - v33 < v28) {
          goto LABEL_48;
        }
        unint64_t v34 = (unint64_t)&v4[3 * v33 + 4];
        if ((unint64_t)(v45 + 4) < v34 + 24 * v28 && v34 < (unint64_t)&v45[3 * v28 + 4]) {
          goto LABEL_51;
        }
        swift_arrayInitWithCopy();
        if (v28)
        {
          uint64_t v36 = v4[2];
          BOOL v37 = __OFADD__(v36, v28);
          uint64_t v38 = v36 + v28;
          if (v37) {
            goto LABEL_49;
          }
          v4[2] = v38;
        }
      }
      else if (v28)
      {
        goto LABEL_47;
      }
      uint64_t v3 = v42 + 1;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if (v42 + 1 == v41)
      {
        swift_bridgeObjectRelease_n();
        return v4;
      }
    }
    uint64_t v7 = swift_bridgeObjectRetain() + 88;
    uint64_t v45 = _swiftEmptyArrayStorage;
    while (1)
    {
      uint64_t v8 = *(void *)(v7 - 40);
      if (v8 < 0) {
        break;
      }
      uint64_t v9 = *(void *)v7;
      if (*(void *)(*(void *)v7 + 16) && *(unsigned char *)(v9 + 40) != 1)
      {
        int v17 = *(_DWORD *)(v7 - 20);
        char v18 = *(unsigned char *)(v7 - 16);
        int v19 = *(_DWORD *)(v7 - 12);
        uint64_t v44 = v2;
        char v20 = *(unsigned char *)(v7 - 8);
        uint64_t v21 = *(void *)(v9 + 32);
        sub_12124(&qword_273E08);
        uint64_t inited = swift_initStackObject();
        *(_OWORD *)(inited + 16) = xmmword_2055D0;
        *(void *)(inited + 32) = 0;
        *(void *)(inited + 40) = 0;
        *(_DWORD *)(inited + 48) = v17;
        *(unsigned char *)(inited + 52) = v18;
        *(_OWORD *)(inited + 56) = xmmword_202690;
        *(_DWORD *)(inited + 72) = v19;
        *(unsigned char *)(inited + 76) = v20;
        unint64_t v23 = sub_161A04(inited);
        uint64_t v24 = sub_1C9DEC(v23);
        uint64_t v2 = v44;
        swift_bridgeObjectRelease();
        if (v21 < 0) {
          break;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v45 = sub_42490(0, v45[2] + 1, 1, v45);
        }
        unint64_t v26 = v45[2];
        unint64_t v25 = v45[3];
        if (v26 >= v25 >> 1) {
          uint64_t v45 = sub_42490((void *)(v25 > 1), v26 + 1, 1, v45);
        }
        v45[2] = v26 + 1;
        uint64_t v27 = &v45[3 * v26];
        v27[4] = v8;
        v27[5] = v24;
        v27[6] = v21;
      }
      else
      {
        sub_1290DC();
        swift_allocError();
        *(void *)uint64_t v10 = v8;
        *(unsigned char *)(v10 + 8) = 6;
        swift_willThrow();
        if (qword_26C3D8 != -1) {
          swift_once();
        }
        uint64_t v11 = sub_1FB430();
        sub_6DBC8(v11, (uint64_t)qword_2A5C70);
        swift_errorRetain();
        swift_errorRetain();
        swift_bridgeObjectRetain();
        uint64_t v12 = sub_1FB410();
        os_log_type_t v13 = sub_1FBDB0();
        if (os_log_type_enabled(v12, v13))
        {
          uint64_t v14 = swift_slowAlloc();
          uint64_t v15 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v14 = 134218242;
          *(void *)(v14 + 4) = v8;
          swift_bridgeObjectRelease();
          *(_WORD *)(v14 + 12) = 2112;
          swift_errorRetain();
          uint64_t v16 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v14 + 14) = v16;
          *uint64_t v15 = v16;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl(&dword_0, v12, v13, "failed to create recommended book for %lld with error %@", (uint8_t *)v14, 0x16u);
          sub_12124(&qword_26F4F8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_bridgeObjectRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v2 = 0;
      }
      v7 += 64;
      if (!--v6) {
        goto LABEL_25;
      }
    }
LABEL_50:
    sub_1FC210();
    __break(1u);
LABEL_51:
    uint64_t result = (void *)sub_1FC2B0();
    __break(1u);
  }
  else
  {
    return _swiftEmptyArrayStorage;
  }
  return result;
}

void *sub_1CBB6C()
{
  uint64_t v1 = *(void *)(v0 + 48);
  if (!v1)
  {
    return (void *)sub_16B9DC((uint64_t)_swiftEmptyArrayStorage);
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return _swiftEmptyDictionarySingleton;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (uint64_t *)(v1 + 48); ; i += 3)
  {
    if (*(unsigned char *)(i - 1)) {
      goto LABEL_6;
    }
    uint64_t v4 = *i;
    if (!*i || !*(void *)(v4 + 16)) {
      goto LABEL_6;
    }
    uint64_t v5 = *(i - 2);
    if (v5 < 0) {
      goto LABEL_29;
    }
    uint64_t v6 = *(void *)(v4 + 32);
    swift_bridgeObjectRetain();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v9 = sub_56168(v5);
    uint64_t v10 = _swiftEmptyDictionarySingleton[2];
    BOOL v11 = (v8 & 1) == 0;
    uint64_t v12 = v10 + v11;
    if (__OFADD__(v10, v11)) {
      break;
    }
    char v13 = v8;
    if (_swiftEmptyDictionarySingleton[3] >= v12)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v8 & 1) == 0) {
          goto LABEL_18;
        }
      }
      else
      {
        sub_12172C();
        if ((v13 & 1) == 0) {
          goto LABEL_18;
        }
      }
    }
    else
    {
      sub_119278(v12, isUniquelyReferenced_nonNull_native);
      uint64_t v14 = sub_56168(v5);
      if ((v13 & 1) != (v15 & 1)) {
        goto LABEL_30;
      }
      unint64_t v9 = v14;
      if ((v13 & 1) == 0)
      {
LABEL_18:
        _swiftEmptyDictionarySingleton[(v9 >> 6) + 8] |= 1 << v9;
        uint64_t v16 = 8 * v9;
        *(void *)(_swiftEmptyDictionarySingleton[6] + v16) = v5;
        *(void *)(_swiftEmptyDictionarySingleton[7] + v16) = v6;
        uint64_t v17 = _swiftEmptyDictionarySingleton[2];
        BOOL v18 = __OFADD__(v17, 1);
        uint64_t v19 = v17 + 1;
        if (v18) {
          goto LABEL_28;
        }
        _swiftEmptyDictionarySingleton[2] = v19;
        goto LABEL_5;
      }
    }
    *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v9) = v6;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
  __break(1u);
LABEL_28:
  __break(1u);
LABEL_29:
  sub_1FC210();
  __break(1u);
LABEL_30:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

void *sub_1CBDC0()
{
  uint64_t v1 = *(void *)(v0 + 16);
  if (!v1)
  {
    return (void *)sub_16BAB8(_swiftEmptyArrayStorage);
  }
  uint64_t v2 = *(void *)(v1 + 16);
  if (!v2) {
    return _swiftEmptyDictionarySingleton;
  }
  swift_bridgeObjectRetain();
  for (uint64_t i = (uint64_t *)(v1 + 56); ; i += 4)
  {
    if (*(unsigned char *)(i - 2)) {
      goto LABEL_6;
    }
    uint64_t v5 = *i;
    if (!*i) {
      goto LABEL_6;
    }
    uint64_t v6 = *(i - 3);
    if (v6 < 0) {
      goto LABEL_28;
    }
    uint64_t v7 = *(i - 1);
    swift_bridgeObjectRetain_n();
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v10 = sub_56168(v6);
    uint64_t v11 = _swiftEmptyDictionarySingleton[2];
    BOOL v12 = (v9 & 1) == 0;
    uint64_t v13 = v11 + v12;
    if (__OFADD__(v11, v12)) {
      break;
    }
    char v14 = v9;
    if (_swiftEmptyDictionarySingleton[3] >= v13)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        if ((v9 & 1) == 0) {
          goto LABEL_17;
        }
      }
      else
      {
        sub_1218BC();
        if ((v14 & 1) == 0) {
          goto LABEL_17;
        }
      }
    }
    else
    {
      sub_119524(v13, isUniquelyReferenced_nonNull_native);
      uint64_t v15 = sub_56168(v6);
      if ((v14 & 1) != (v16 & 1)) {
        goto LABEL_29;
      }
      unint64_t v10 = v15;
      if ((v14 & 1) == 0)
      {
LABEL_17:
        _swiftEmptyDictionarySingleton[(v10 >> 6) + 8] |= 1 << v10;
        *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v10) = v6;
        uint64_t v17 = (void *)(_swiftEmptyDictionarySingleton[7] + 16 * v10);
        void *v17 = v7;
        v17[1] = v5;
        uint64_t v18 = _swiftEmptyDictionarySingleton[2];
        BOOL v19 = __OFADD__(v18, 1);
        uint64_t v20 = v18 + 1;
        if (v19) {
          goto LABEL_27;
        }
        _swiftEmptyDictionarySingleton[2] = v20;
        goto LABEL_5;
      }
    }
    uint64_t v4 = (void *)(_swiftEmptyDictionarySingleton[7] + 16 * v10);
    swift_bridgeObjectRelease();
    *uint64_t v4 = v7;
    v4[1] = v5;
LABEL_5:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
LABEL_6:
    if (!--v2)
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyDictionarySingleton;
    }
  }
  __break(1u);
LABEL_27:
  __break(1u);
LABEL_28:
  sub_1FC210();
  __break(1u);
LABEL_29:
  uint64_t result = (void *)sub_1FC770();
  __break(1u);
  return result;
}

unint64_t sub_1CC010()
{
  unint64_t result = qword_273E00;
  if (!qword_273E00)
  {
    type metadata accessor for BooksBackEndSeedBasedRecommendationServiceV2.Errors();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_273E00);
  }
  return result;
}

uint64_t type metadata accessor for IdentityBookScorer()
{
  return self;
}

uint64_t sub_1CC08C(uint64_t a1)
{
  uint64_t v3 = *(uint64_t (**)(uint64_t))(v1 + 8);
  swift_bridgeObjectRetain();
  return sub_1CC118(v3, v1, a1);
}

uint64_t sub_1CC118(uint64_t (*a1)(uint64_t), uint64_t a2, uint64_t a3)
{
  return a1(a3);
}

uint64_t dispatch thunk of BooksByAuthorsServiceType.fetchBooks(by:for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  char v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *char v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1CC238@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, (uint64_t (*)(void))type metadata accessor for DelegatingCollectionService, (uint64_t)&off_2636B0, a2);
}

uint64_t sub_1CC258@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, (uint64_t (*)(void))type metadata accessor for SeedBasedRecommendationServiceResolver, (uint64_t)&off_263B00, a2);
}

uint64_t sub_1CC278@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, type metadata accessor for InternalCollectionRecommendationService, (uint64_t)&off_260548, a2);
}

uint64_t sub_1CC298@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, type metadata accessor for InternalCollectionRecommendationService, (uint64_t)&off_260538, a2);
}

uint64_t sub_1CC2B8@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, (uint64_t (*)(void))type metadata accessor for DefaultBookClusteringService, (uint64_t)&off_265580, a2);
}

uint64_t sub_1CC2D8(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E928);
  uint64_t result = sub_1FB260();
  if (v16)
  {
    uint64_t v2 = sub_51B20((uint64_t)v15, v16);
    __chkstk_darwin(v2);
    uint64_t v4 = (void *)((char *)v14 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v5 + 16))(v4);
    uint64_t v6 = *v4;
    uint64_t v7 = type metadata accessor for BooksBackendDiversifier();
    void v14[3] = v7;
    v14[4] = &off_25C3E8;
    v14[0] = v6;
    type metadata accessor for DefaultBookClusteringService();
    char v8 = (void *)swift_allocObject();
    uint64_t v9 = sub_51B20((uint64_t)v14, v7);
    __chkstk_darwin(v9);
    uint64_t v11 = (void *)((char *)v14 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
    (*(void (**)(uint64_t *))(v12 + 16))(v11);
    uint64_t v13 = *v11;
    v8[5] = v7;
    v8[6] = &off_25C3E8;
    v8[2] = v13;
    sub_1264C((uint64_t)v14);
    sub_1264C((uint64_t)v15);
    return (uint64_t)v8;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CC4D8(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26E290);
  uint64_t result = sub_1FB260();
  if (v4)
  {
    type metadata accessor for AllCollectionTypesFillingClusteringService();
    uint64_t v2 = swift_allocObject();
    sub_37C30(&v3, v2 + 16);
    return v2;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CC568()
{
  type metadata accessor for SeedBasedRecommendationServiceResolver();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = _swiftEmptyDictionarySingleton;
  return result;
}

void *sub_1CC59C(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_2706A0);
  uint64_t result = (void *)sub_1FB250();
  if (result)
  {
    uint64_t v2 = result;
    type metadata accessor for DelegatingCollectionService();
    uint64_t result = (void *)swift_allocObject();
    result[4] = _swiftEmptyDictionarySingleton;
    result[5] = _swiftEmptyDictionarySingleton;
    result[6] = _swiftEmptyDictionarySingleton;
    result[7] = _swiftEmptyDictionarySingleton;
    result[8] = _swiftEmptyDictionarySingleton;
    result[2] = v2;
    result[3] = _swiftEmptyDictionarySingleton;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CC624@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, (uint64_t (*)(void))type metadata accessor for SeedBasedMoreFromYourAuthorsService, (uint64_t)&off_25EE48, a2);
}

uint64_t sub_1CC644(void *a1)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D138);
  uint64_t result = sub_1FB260();
  if (!v9)
  {
    __break(1u);
    goto LABEL_6;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_273FA0);
  uint64_t result = sub_1FB260();
  if (!v7)
  {
LABEL_6:
    __break(1u);
    goto LABEL_7;
  }
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D140);
  uint64_t result = sub_1FB260();
  if (v5)
  {
    type metadata accessor for SeedBasedMoreFromYourAuthorsService();
    uint64_t v3 = swift_allocObject();
    sub_37C30(&v8, v3 + 16);
    sub_37C30(&v6, v3 + 56);
    sub_37C30(&v4, v3 + 96);
    return v3;
  }
LABEL_7:
  __break(1u);
  return result;
}

uint64_t sub_1CC770@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return sub_1CC790(a1, (uint64_t (*)(void))type metadata accessor for SeedBasedSuggestionsService, (uint64_t)&off_264320, a2);
}

uint64_t sub_1CC790@<X0>(void *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X2>, uint64_t *a4@<X8>)
{
  sub_5D64(a1, a1[3]);
  uint64_t v7 = a2(0);
  uint64_t result = sub_1FB250();
  if (result)
  {
    a4[3] = v7;
    a4[4] = a3;
    *a4 = result;
  }
  else
  {
    __break(1u);
  }
  return result;
}

uint64_t sub_1CC814(void *a1)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = sub_1FB7E0();
  unsigned int v4 = [v2 BOOLForKey:v3];

  sub_5D64(a1, a1[3]);
  if (v4)
  {
    uint64_t v5 = type metadata accessor for AllCollectionTypesFillingClusteringService();
    uint64_t result = sub_1FB250();
    if (!result)
    {
LABEL_23:
      __break(1u);
      goto LABEL_24;
    }
    v34[3] = v5;
    v34[4] = &off_25A4D0;
    v34[0] = result;
LABEL_6:
    sub_51B70((uint64_t)v34, (uint64_t)&v32);
    sub_5D64(a1, a1[3]);
    sub_12124(&qword_26E4C0);
    uint64_t result = sub_1FB260();
    if (v31)
    {
      sub_5D64(a1, a1[3]);
      type metadata accessor for DelegatingMediaTypesRecommendationService();
      uint64_t result = sub_1FB250();
      if (result)
      {
        uint64_t v7 = result;
        sub_5D64(a1, a1[3]);
        sub_12124(&qword_26E4B8);
        uint64_t result = sub_1FB260();
        if (v29)
        {
          sub_5D64(a1, a1[3]);
          sub_12124(&qword_26E290);
          uint64_t result = sub_1FB260();
          if (v27)
          {
            sub_5D64(a1, a1[3]);
            sub_12124(&qword_273F90);
            uint64_t result = sub_1FB260();
            if (v25)
            {
              sub_5D64(a1, a1[3]);
              sub_12124(&qword_26E9A8);
              uint64_t result = sub_1FB260();
              if (v23)
              {
                sub_5D64(a1, a1[3]);
                sub_12124(&qword_26D140);
                uint64_t result = sub_1FB260();
                if (v21)
                {
                  sub_5D64(a1, a1[3]);
                  sub_12124(&qword_2706C0);
                  uint64_t result = sub_1FB260();
                  if (v19)
                  {
                    uint64_t v8 = sub_51B20((uint64_t)v22, v23);
                    __chkstk_darwin(v8);
                    uint64_t v10 = (uint64_t *)&v18[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
                    (*(void (**)(uint64_t *))(v11 + 16))(v10);
                    uint64_t v12 = sub_51B20((uint64_t)v18, v19);
                    __chkstk_darwin(v12);
                    char v14 = (uint64_t **)&v18[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
                    (*(void (**)(uint64_t **))(v15 + 16))(v14);
                    uint64_t v16 = sub_1CE254(&v32, &v30, v7, &v28, &v26, &v24, *v10, &v20, *v14);
                    sub_1264C((uint64_t)v18);
                    sub_1264C((uint64_t)v22);
                    sub_1264C((uint64_t)v34);
                    return v16;
                  }
                  goto LABEL_22;
                }
LABEL_21:
                __break(1u);
LABEL_22:
                __break(1u);
                goto LABEL_23;
              }
LABEL_20:
              __break(1u);
              goto LABEL_21;
            }
LABEL_19:
            __break(1u);
            goto LABEL_20;
          }
LABEL_18:
          __break(1u);
          goto LABEL_19;
        }
LABEL_17:
        __break(1u);
        goto LABEL_18;
      }
    }
    else
    {
      __break(1u);
    }
    __break(1u);
    goto LABEL_17;
  }
  sub_12124(&qword_273F60);
  uint64_t result = sub_1FB260();
  if (v33)
  {
    sub_37C30(&v32, (uint64_t)v34);
    goto LABEL_6;
  }
LABEL_24:
  __break(1u);
  return result;
}

uint64_t sub_1CCCD8@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  _OWORD v6[2] = a1;
  NSString v3 = sub_38B10((void (*)(long long *__return_ptr, char *))sub_1CEF64, (uint64_t)v6, (uint64_t)&off_2574A0);
  uint64_t v4 = type metadata accessor for FallingBackSuggestionsService();
  uint64_t result = swift_allocObject();
  *(void *)(result + 16) = v3;
  a2[3] = v4;
  a2[4] = (uint64_t)&off_263750;
  *a2 = result;
  return result;
}

uint64_t sub_1CCD68@<X0>(void *a1@<X1>, uint64_t a2@<X8>)
{
  sub_5D64(a1, a1[3]);
  sub_12124(&qword_26D390);
  sub_1FB240();
  swift_bridgeObjectRelease();
  if (!v5)
  {
    __break(1u);
    JUMPOUT(0x1CCEACLL);
  }
  return sub_37C30(&v4, a2);
}

uint64_t sub_1CCEC0(uint64_t a1, void *a2)
{
  sub_12124(&qword_26E930);
  unint64_t v4 = 0;
  uint64_t v5 = (void *)(a1 + 16);
  while (v4 < 3)
  {
    unsigned __int8 v8 = *((unsigned char *)&off_2574C8 + v4++ + 32);
    sub_5D64(a2, a2[3]);
    sub_1FB240();
    swift_bridgeObjectRelease();
    if (!v25) {
      goto LABEL_21;
    }
    sub_37C30(&v24, (uint64_t)v26);
    swift_beginAccess();
    sub_51B70((uint64_t)v26, (uint64_t)&v24);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = (void *)*v5;
    uint64_t v23 = (void *)*v5;
    *uint64_t v5 = 0x8000000000000000;
    unint64_t v12 = sub_4CE54(v8);
    uint64_t v13 = v10[2];
    BOOL v14 = (v11 & 1) == 0;
    uint64_t v15 = v13 + v14;
    if (__OFADD__(v13, v14)) {
      goto LABEL_19;
    }
    char v16 = v11;
    if (v10[3] >= v15)
    {
      if (isUniquelyReferenced_nonNull_native)
      {
        uint64_t v19 = v23;
        if (v11) {
          goto LABEL_2;
        }
      }
      else
      {
        sub_123D94();
        uint64_t v19 = v23;
        if (v16) {
          goto LABEL_2;
        }
      }
    }
    else
    {
      sub_11E5C8(v15, isUniquelyReferenced_nonNull_native);
      unint64_t v17 = sub_4CE54(v8);
      if ((v16 & 1) != (v18 & 1)) {
        goto LABEL_22;
      }
      unint64_t v12 = v17;
      uint64_t v19 = v23;
      if (v16)
      {
LABEL_2:
        uint64_t v6 = v19[7] + 40 * v12;
        sub_1264C(v6);
        sub_37C30(&v24, v6);
        goto LABEL_3;
      }
    }
    v19[(v12 >> 6) + 8] |= 1 << v12;
    *(unsigned char *)(v19[6] + v12) = v8;
    sub_37C30(&v24, v19[7] + 40 * v12);
    uint64_t v20 = v19[2];
    BOOL v21 = __OFADD__(v20, 1);
    uint64_t v22 = v20 + 1;
    if (v21) {
      goto LABEL_20;
    }
    v19[2] = v22;
LABEL_3:
    *uint64_t v5 = v19;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = sub_1264C((uint64_t)v26);
    if (v4 == 3) {
      return result;
    }
  }
  __break(1u);
LABEL_19:
  __break(1u);
LABEL_20:
  __break(1u);
LABEL_21:
  __break(1u);
LABEL_22:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

uint64_t sub_1CD13C(void *a1, void *a2)
{
  sub_12124(&qword_273F70);
  unint64_t v4 = a1 + 3;
  uint64_t v5 = a2[3];
  sub_5D64(a2, v5);
  sub_1FB240();
  swift_bridgeObjectRelease();
  if (!v100)
  {
LABEL_96:
    __break(1u);
    goto LABEL_97;
  }
  sub_37C30(&v99, (uint64_t)v101);
  swift_beginAccess();
  sub_51B70((uint64_t)v101, (uint64_t)&v99);
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v7 = (void *)*v4;
  long long v96 = (void *)*v4;
  *unint64_t v4 = 0x8000000000000000;
  unint64_t v9 = sub_4CF40(1u);
  uint64_t v10 = v7[2];
  BOOL v11 = (v8 & 1) == 0;
  uint64_t v12 = v10 + v11;
  if (__OFADD__(v10, v11))
  {
    __break(1u);
LABEL_11:
    sub_123984();
    uint64_t v15 = v96;
    if (v5) {
      goto LABEL_9;
    }
    goto LABEL_12;
  }
  LOBYTE(v5) = v8;
  if (v7[3] < v12)
  {
    sub_11DB40(v12, isUniquelyReferenced_nonNull_native);
    unint64_t v13 = sub_4CF40(1u);
    if ((v5 & 1) != (v14 & 1)) {
      goto LABEL_100;
    }
    unint64_t v9 = v13;
    uint64_t v15 = v96;
    if ((v5 & 1) == 0) {
      goto LABEL_12;
    }
LABEL_9:
    uint64_t v16 = v15[7] + 40 * v9;
    sub_1264C(v16);
    sub_37C30(&v99, v16);
    goto LABEL_14;
  }
  if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
    goto LABEL_11;
  }
  uint64_t v15 = v96;
  if (v8) {
    goto LABEL_9;
  }
LABEL_12:
  v15[(v9 >> 6) + 8] |= 1 << v9;
  *(unsigned char *)(v15[6] + v9) = 1;
  sub_37C30(&v99, v15[7] + 40 * v9);
  uint64_t v17 = v15[2];
  BOOL v18 = __OFADD__(v17, 1);
  uint64_t v19 = v17 + 1;
  if (v18)
  {
LABEL_24:
    __break(1u);
LABEL_25:
    sub_1239A4();
    uint64_t v29 = v96;
    if (v5) {
      goto LABEL_22;
    }
    goto LABEL_26;
  }
  void v15[2] = v19;
LABEL_14:
  a1[3] = v15;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1264C((uint64_t)v101);
  sub_12124(&qword_273F78);
  uint64_t v20 = a1 + 4;
  uint64_t v5 = a2[3];
  sub_5D64(a2, v5);
  sub_1FB240();
  swift_bridgeObjectRelease();
  if (!v100)
  {
LABEL_97:
    __break(1u);
    goto LABEL_98;
  }
  sub_37C30(&v99, (uint64_t)v101);
  swift_beginAccess();
  sub_51B70((uint64_t)v101, (uint64_t)&v99);
  char v21 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v22 = (void *)*v20;
  long long v96 = (void *)*v20;
  *uint64_t v20 = 0x8000000000000000;
  unint64_t v9 = sub_4CF40(1u);
  uint64_t v24 = v22[2];
  BOOL v25 = (v23 & 1) == 0;
  uint64_t v26 = v24 + v25;
  if (__OFADD__(v24, v25))
  {
    __break(1u);
    goto LABEL_24;
  }
  LOBYTE(v5) = v23;
  if (v22[3] < v26)
  {
    sub_11DB60(v26, v21);
    unint64_t v27 = sub_4CF40(1u);
    if ((v5 & 1) != (v28 & 1)) {
      goto LABEL_100;
    }
    unint64_t v9 = v27;
    uint64_t v29 = v96;
    if ((v5 & 1) == 0) {
      goto LABEL_26;
    }
LABEL_22:
    uint64_t v30 = v29[7] + 40 * v9;
    sub_1264C(v30);
    sub_37C30(&v99, v30);
    goto LABEL_28;
  }
  if ((v21 & 1) == 0) {
    goto LABEL_25;
  }
  uint64_t v29 = v96;
  if (v23) {
    goto LABEL_22;
  }
LABEL_26:
  v29[(v9 >> 6) + 8] |= 1 << v9;
  *(unsigned char *)(v29[6] + v9) = 1;
  sub_37C30(&v99, v29[7] + 40 * v9);
  uint64_t v31 = v29[2];
  BOOL v18 = __OFADD__(v31, 1);
  uint64_t v32 = v31 + 1;
  if (v18)
  {
LABEL_38:
    __break(1u);
LABEL_39:
    sub_1239C4();
    uint64_t v42 = v96;
    if (v5) {
      goto LABEL_36;
    }
    goto LABEL_40;
  }
  v29[2] = v32;
LABEL_28:
  a1[4] = v29;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1264C((uint64_t)v101);
  sub_12124(&qword_273F80);
  uint64_t v33 = a1 + 5;
  uint64_t v5 = a2[3];
  sub_5D64(a2, v5);
  sub_1FB240();
  swift_bridgeObjectRelease();
  if (!v100)
  {
LABEL_98:
    __break(1u);
    goto LABEL_99;
  }
  sub_37C30(&v99, (uint64_t)v101);
  swift_beginAccess();
  sub_51B70((uint64_t)v101, (uint64_t)&v99);
  char v34 = swift_isUniquelyReferenced_nonNull_native();
  char v35 = (void *)*v33;
  long long v96 = (void *)*v33;
  *uint64_t v33 = 0x8000000000000000;
  unint64_t v9 = sub_4CF40(1u);
  uint64_t v37 = v35[2];
  BOOL v38 = (v36 & 1) == 0;
  uint64_t v39 = v37 + v38;
  if (__OFADD__(v37, v38))
  {
    __break(1u);
    goto LABEL_38;
  }
  LOBYTE(v5) = v36;
  if (v35[3] < v39)
  {
    sub_11DF50(v39, v34);
    unint64_t v40 = sub_4CF40(1u);
    if ((v5 & 1) == (v41 & 1))
    {
      unint64_t v9 = v40;
      uint64_t v42 = v96;
      if ((v5 & 1) == 0) {
        goto LABEL_40;
      }
LABEL_36:
      uint64_t v43 = v42[7] + 40 * v9;
      sub_1264C(v43);
      sub_37C30(&v99, v43);
      goto LABEL_42;
    }
LABEL_100:
    sub_1FC770();
    __break(1u);
    JUMPOUT(0x1CE040);
  }
  if ((v34 & 1) == 0) {
    goto LABEL_39;
  }
  uint64_t v42 = v96;
  if (v36) {
    goto LABEL_36;
  }
LABEL_40:
  v42[(v9 >> 6) + 8] |= 1 << v9;
  *(unsigned char *)(v42[6] + v9) = 1;
  sub_37C30(&v99, v42[7] + 40 * v9);
  uint64_t v44 = v42[2];
  BOOL v18 = __OFADD__(v44, 1);
  uint64_t v45 = v44 + 1;
  if (v18)
  {
LABEL_52:
    __break(1u);
    goto LABEL_53;
  }
  v42[2] = v45;
LABEL_42:
  a1[5] = v42;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1264C((uint64_t)v101);
  sub_12124(&qword_273F88);
  Swift::Int v46 = a1 + 6;
  uint64_t v5 = a2[3];
  sub_5D64(a2, v5);
  sub_1FB240();
  swift_bridgeObjectRelease();
  if (!v100)
  {
LABEL_99:
    __break(1u);
    goto LABEL_100;
  }
  sub_37C30(&v99, (uint64_t)v101);
  swift_beginAccess();
  sub_51B70((uint64_t)v101, (uint64_t)&v99);
  char v47 = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v48 = (void *)*v46;
  long long v96 = (void *)*v46;
  *Swift::Int v46 = 0x8000000000000000;
  unint64_t v9 = sub_4CF40(1u);
  uint64_t v50 = v48[2];
  BOOL v51 = (v49 & 1) == 0;
  uint64_t v52 = v50 + v51;
  if (__OFADD__(v50, v51))
  {
    __break(1u);
    goto LABEL_52;
  }
  LOBYTE(v5) = v49;
  if (v48[3] >= v52)
  {
    if (v47)
    {
      uint64_t v55 = v96;
      if (v49) {
        goto LABEL_50;
      }
LABEL_54:
      v55[(v9 >> 6) + 8] |= 1 << v9;
      *(unsigned char *)(v55[6] + v9) = 1;
      sub_37C30(&v99, v55[7] + 40 * v9);
      uint64_t v57 = v55[2];
      BOOL v18 = __OFADD__(v57, 1);
      uint64_t v58 = v57 + 1;
      if (v18) {
        goto LABEL_93;
      }
      v55[2] = v58;
      goto LABEL_56;
    }
LABEL_53:
    sub_1239E4();
    uint64_t v55 = v96;
    if (v5) {
      goto LABEL_50;
    }
    goto LABEL_54;
  }
  sub_11DF70(v52, v47);
  unint64_t v53 = sub_4CF40(1u);
  if ((v5 & 1) != (v54 & 1)) {
    goto LABEL_100;
  }
  unint64_t v9 = v53;
  uint64_t v55 = v96;
  if ((v5 & 1) == 0) {
    goto LABEL_54;
  }
LABEL_50:
  uint64_t v56 = v55[7] + 40 * v9;
  sub_1264C(v56);
  sub_37C30(&v99, v56);
LABEL_56:
  a1[6] = v55;
  swift_bridgeObjectRelease();
  swift_endAccess();
  sub_1264C((uint64_t)v101);
  sub_12124(&qword_273F68);
  char v59 = 0;
  uint64_t v60 = 0;
  uint64_t v61 = a1 + 7;
  do
  {
    char v63 = v59;
    unsigned __int8 v64 = *((unsigned char *)&off_257590 + v60 + 32);
    sub_5D64(a2, a2[3]);
    sub_1FB240();
    swift_bridgeObjectRelease();
    if (!v100) {
      goto LABEL_94;
    }
    sub_37C30(&v99, (uint64_t)v101);
    swift_beginAccess();
    sub_51B70((uint64_t)v101, (uint64_t)&v99);
    char v65 = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v66 = (void *)*v61;
    int64_t v97 = (void *)*v61;
    *uint64_t v61 = 0x8000000000000000;
    unint64_t v68 = sub_4CF40(v64);
    uint64_t v69 = v66[2];
    BOOL v70 = (v67 & 1) == 0;
    uint64_t v71 = v69 + v70;
    if (__OFADD__(v69, v70))
    {
      __break(1u);
LABEL_89:
      __break(1u);
LABEL_90:
      __break(1u);
LABEL_91:
      __break(1u);
LABEL_92:
      __break(1u);
LABEL_93:
      __break(1u);
LABEL_94:
      __break(1u);
LABEL_95:
      __break(1u);
      goto LABEL_96;
    }
    char v72 = v67;
    if (v66[3] >= v71)
    {
      if (v65)
      {
        unint64_t v75 = v97;
        if (v67) {
          goto LABEL_57;
        }
      }
      else
      {
        sub_123A04();
        unint64_t v75 = v97;
        if (v72) {
          goto LABEL_57;
        }
      }
    }
    else
    {
      sub_11DF90(v71, v65);
      unint64_t v73 = sub_4CF40(v64);
      if ((v72 & 1) != (v74 & 1)) {
        goto LABEL_100;
      }
      unint64_t v68 = v73;
      unint64_t v75 = v97;
      if (v72)
      {
LABEL_57:
        uint64_t v62 = v75[7] + 40 * v68;
        sub_1264C(v62);
        sub_37C30(&v99, v62);
        goto LABEL_58;
      }
    }
    v75[(v68 >> 6) + 8] |= 1 << v68;
    *(unsigned char *)(v75[6] + v68) = v64;
    sub_37C30(&v99, v75[7] + 40 * v68);
    uint64_t v76 = v75[2];
    BOOL v18 = __OFADD__(v76, 1);
    uint64_t v77 = v76 + 1;
    if (v18) {
      goto LABEL_91;
    }
    v75[2] = v77;
LABEL_58:
    *uint64_t v61 = v75;
    swift_bridgeObjectRelease();
    swift_endAccess();
    sub_1264C((uint64_t)v101);
    char v59 = 1;
    uint64_t v60 = 1;
  }
  while ((v63 & 1) == 0);
  sub_12124(&qword_26D390);
  unint64_t v78 = 0;
  id v79 = a1 + 8;
  do
  {
    if (v78 >= 4) {
      goto LABEL_89;
    }
    unsigned __int8 v82 = *((unsigned char *)&off_2575B8 + v78++ + 32);
    sub_5D64(a2, a2[3]);
    sub_1FB240();
    swift_bridgeObjectRelease();
    if (!v100) {
      goto LABEL_95;
    }
    sub_37C30(&v99, (uint64_t)v101);
    swift_beginAccess();
    sub_51B70((uint64_t)v101, (uint64_t)&v99);
    char v83 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v84 = (void *)*v79;
    uint64_t v98 = (void *)*v79;
    *id v79 = 0x8000000000000000;
    unint64_t v86 = sub_4CF40(v82);
    uint64_t v87 = v84[2];
    BOOL v88 = (v85 & 1) == 0;
    uint64_t v89 = v87 + v88;
    if (__OFADD__(v87, v88)) {
      goto LABEL_90;
    }
    char v90 = v85;
    if (v84[3] >= v89)
    {
      if (v83)
      {
        long long v93 = v98;
        if (v85) {
          goto LABEL_72;
        }
      }
      else
      {
        sub_123A24();
        long long v93 = v98;
        if (v90) {
          goto LABEL_72;
        }
      }
    }
    else
    {
      sub_11DFB0(v89, v83);
      unint64_t v91 = sub_4CF40(v82);
      if ((v90 & 1) != (v92 & 1)) {
        goto LABEL_100;
      }
      unint64_t v86 = v91;
      long long v93 = v98;
      if (v90)
      {
LABEL_72:
        uint64_t v80 = v93[7] + 40 * v86;
        sub_1264C(v80);
        sub_37C30(&v99, v80);
        goto LABEL_73;
      }
    }
    v93[(v86 >> 6) + 8] |= 1 << v86;
    *(unsigned char *)(v93[6] + v86) = v82;
    sub_37C30(&v99, v93[7] + 40 * v86);
    uint64_t v94 = v93[2];
    BOOL v18 = __OFADD__(v94, 1);
    uint64_t v95 = v94 + 1;
    if (v18) {
      goto LABEL_92;
    }
    v93[2] = v95;
LABEL_73:
    *id v79 = v93;
    swift_bridgeObjectRelease();
    swift_endAccess();
    uint64_t result = sub_1264C((uint64_t)v101);
  }
  while (v78 != 4);
  return result;
}

uint64_t type metadata accessor for CollectionServiceAssembly()
{
  return self;
}

uint64_t sub_1CE0E0(long long *a1, long long *a2, uint64_t a3, long long *a4, long long *a5, long long *a6, uint64_t a7, long long *a8, uint64_t a9, uint64_t a10)
{
  uint64_t v23 = type metadata accessor for SeedBasedRecommendationServiceResolver();
  uint64_t v24 = &off_263B00;
  *(void *)&long long v22 = a7;
  uint64_t v20 = type metadata accessor for DelegatingCollectionService();
  char v21 = &off_2636B0;
  *(void *)&long long v19 = a9;
  sub_12124(&qword_273F98);
  sub_1FB880();
  sub_1FB420();
  sub_37C30(a1, a10 + 56);
  sub_37C30(a2, a10 + 16);
  *(void *)(a10 + 96) = a3;
  sub_37C30(a4, a10 + 104);
  sub_37C30(a5, a10 + 144);
  sub_37C30(a6, a10 + 184);
  sub_37C30(&v22, a10 + 224);
  sub_37C30(a8, a10 + 264);
  sub_37C30(&v19, a10 + 304);
  return a10;
}

uint64_t sub_1CE254(long long *a1, long long *a2, uint64_t a3, long long *a4, long long *a5, long long *a6, uint64_t a7, long long *a8, uint64_t *a9)
{
  uint64_t v29 = a8;
  uint64_t v16 = *a9;
  uint64_t v34 = type metadata accessor for SeedBasedRecommendationServiceResolver();
  char v35 = &off_263B00;
  v33[0] = a7;
  uint64_t v31 = v16;
  uint64_t v32 = &off_2636B0;
  v30[0] = a9;
  type metadata accessor for InternalCollectionRecommendationService(0);
  uint64_t v17 = swift_allocObject();
  uint64_t v18 = sub_51B20((uint64_t)v33, v34);
  __chkstk_darwin(v18);
  uint64_t v20 = (uint64_t *)((char *)&v28 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v21 + 16))(v20);
  uint64_t v22 = sub_51B20((uint64_t)v30, v31);
  __chkstk_darwin(v22);
  uint64_t v24 = (uint64_t *)((char *)&v28 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0));
  (*(void (**)(uint64_t *))(v25 + 16))(v24);
  uint64_t v26 = sub_1CE0E0(a1, a2, a3, a4, a5, a6, *v20, v29, *v24, v17);
  sub_1264C((uint64_t)v30);
  sub_1264C((uint64_t)v33);
  return v26;
}

uint64_t sub_1CE49C(uint64_t a1)
{
  uint64_t v2 = sub_1FB270();
  uint64_t v27 = *(void *)(v2 - 8);
  uint64_t v28 = v2;
  __chkstk_darwin(v2);
  uint64_t v26 = (char *)v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1FB350();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB280();
  sub_12124(&qword_2706C0);
  sub_1FB310();
  swift_release();
  uint64_t v8 = enum case for Scope.singleton(_:);
  unint64_t v9 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 104);
  v9(v7, enum case for Scope.singleton(_:), v4);
  sub_1FB230();
  swift_release();
  swift_release();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v5 + 8);
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_26E9A8);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_273F50);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB280();
  sub_12124(&qword_273F58);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  sub_12124(&qword_273F60);
  sub_1FB310();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  type metadata accessor for DefaultBookClusteringService();
  sub_1FB300();
  swift_release();
  uint64_t v29 = v9;
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  type metadata accessor for AllCollectionTypesFillingClusteringService();
  sub_1FB300();
  swift_release();
  v9(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  uint64_t v25 = type metadata accessor for SeedBasedRecommendationServiceResolver();
  sub_1FB300();
  swift_release();
  v29(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  uint64_t v24 = type metadata accessor for DelegatingCollectionService();
  sub_1FB300();
  swift_release();
  BOOL v11 = v29;
  v29(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  sub_12124(&qword_273F68);
  sub_1FB310();
  swift_release();
  unsigned int v21 = v8;
  v11(v7, v8, v4);
  uint64_t v22 = v5 + 104;
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  type metadata accessor for SeedBasedMoreFromYourAuthorsService();
  sub_1FB300();
  swift_release();
  v11(v7, v8, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v20[1] = v5 + 8;
  v10(v7, v4);
  sub_1FB290();
  uint64_t v23 = sub_12124(&qword_26D390);
  sub_1FB310();
  swift_release();
  uint64_t v12 = v21;
  v11(v7, v21, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB290();
  type metadata accessor for InternalCollectionRecommendationService(0);
  sub_1FB300();
  swift_release();
  v11(v7, v12, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  v20[0] = a1;
  sub_1FB290();
  sub_1FB310();
  swift_release();
  v11(v7, v12, v4);
  sub_1FB230();
  swift_release();
  swift_release();
  v10(v7, v4);
  sub_1FB2A0();
  sub_5D64(v30, v31);
  uint64_t v13 = enum case for CallbackScope.any(_:);
  uint64_t v15 = v26;
  uint64_t v14 = v27;
  uint64_t v16 = *(void (**)(char *, uint64_t, uint64_t))(v27 + 104);
  uint64_t v17 = v28;
  v16(v26, enum case for CallbackScope.any(_:), v28);
  sub_1FB320();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v14 + 8);
  v18(v15, v17);
  sub_1264C((uint64_t)v30);
  sub_1FB2A0();
  sub_5D64(v30, v31);
  v16(v15, v13, v17);
  sub_1FB320();
  v18(v15, v17);
  return sub_1264C((uint64_t)v30);
}

uint64_t sub_1CEF64@<X0>(uint64_t a1@<X8>)
{
  return sub_1CCD68(*(void **)(v1 + 16), a1);
}

uint64_t type metadata accessor for ExperimentIDsMiddleware()
{
  return self;
}

uint64_t sub_1CEFA8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  BOOL v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))((char *)&dword_274050 + dword_274050);
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v9;
  *unint64_t v9 = v5;
  v9[1] = sub_B2AB4;
  return v11(a1, a4, a5);
}

uint64_t sub_1CF070(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[4] = a3;
  v4[5] = v3;
  v4[2] = a1;
  v4[3] = a2;
  uint64_t v5 = sub_1FABD0();
  v4[6] = v5;
  v4[7] = *(void *)(v5 - 8);
  v4[8] = swift_task_alloc();
  return _swift_task_switch(sub_1CF134, 0, 0);
}

uint64_t sub_1CF134()
{
  uint64_t v1 = *(void **)(v0 + 40);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 72) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1CF238;
  return v6(v2, v3);
}

uint64_t sub_1CF238(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (void *)*v3;
  v4[10] = a1;
  v4[11] = a2;
  v4[12] = v2;
  swift_task_dealloc();
  if (v2) {
    uint64_t v5 = sub_1CF47C;
  }
  else {
    uint64_t v5 = sub_1CF350;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1CF350()
{
  object = v0[5].value._object;
  (*((void (**)(uint64_t, uint64_t, uint64_t))v0[3].value._object + 2))(v0[4].value._countAndFlagsBits, v0[1].value._countAndFlagsBits, v0[3].value._countAndFlagsBits);
  if (object)
  {
    v7._object = (void *)0x80000000002193A0;
    v7._uint64_t countAndFlagsBits = 0xD00000000000001BLL;
    sub_1FABC0(v0[5], v7);
    swift_bridgeObjectRelease();
  }
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)v0[1].value._object + *(int *)v0[1].value._object);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[6].value._object = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1CF58C;
  uint64_t countAndFlagsBits = v0[4].value._countAndFlagsBits;
  return v5(countAndFlagsBits);
}

uint64_t sub_1CF47C()
{
  uint64_t v2 = v0[7];
  uint64_t v1 = v0[8];
  uint64_t v3 = v0[6];
  uint64_t v4 = v0[2];
  swift_errorRelease();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v2 + 16))(v1, v4, v3);
  uint64_t v8 = (uint64_t (*)(uint64_t))(v0[3] + *(int *)v0[3]);
  uint64_t v5 = (void *)swift_task_alloc();
  v0[13] = v5;
  *uint64_t v5 = v0;
  v5[1] = sub_1CF58C;
  uint64_t v6 = v0[8];
  return v8(v6);
}

uint64_t sub_1CF58C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v8 = *(void **)v4;
  *(void *)(*(void *)v4 + 112) = v3;
  swift_task_dealloc();
  if (v3)
  {
    uint64_t v9 = sub_1CF750;
  }
  else
  {
    v8[15] = a3;
    unsigned char v8[16] = a2;
    v8[17] = a1;
    uint64_t v9 = sub_1CF6C8;
  }
  return _swift_task_switch(v9, 0, 0);
}

uint64_t sub_1CF6C8()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))v0[1];
  uint64_t v3 = v0[16];
  uint64_t v2 = v0[17];
  uint64_t v4 = v0[15];
  return v1(v2, v3, v4);
}

uint64_t sub_1CF750()
{
  (*(void (**)(void, void))(v0[7] + 8))(v0[8], v0[6]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void *sub_1CF7D0(uint64_t a1)
{
  int64_t v2 = *(void *)(a1 + 16);
  uint64_t result = _swiftEmptyArrayStorage;
  if (v2)
  {
    sub_46538(0, v2, 0);
    uint64_t result = _swiftEmptyArrayStorage;
    uint64_t v4 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v6 = *v4;
      v4 += 13;
      uint64_t v5 = v6;
      uint64_t v9 = result;
      unint64_t v8 = result[2];
      unint64_t v7 = result[3];
      if (v8 >= v7 >> 1)
      {
        sub_46538(v7 > 1, v8 + 1, 1);
        uint64_t result = v9;
      }
      result[2] = v8 + 1;
      result[v8 + 4] = v5;
      --v2;
    }
    while (v2);
  }
  return result;
}

uint64_t sub_1CF890(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = a1 + 56;
  uint64_t v7 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v8 = -1;
  if (v7 < 64) {
    uint64_t v8 = ~(-1 << v7);
  }
  unint64_t v9 = v8 & *(void *)(a1 + 56);
  int64_t v10 = (unint64_t)(v7 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v12 = 0;
  uint64_t v13 = _swiftEmptyArrayStorage;
  while (1)
  {
    if (v9)
    {
      unint64_t v14 = __clz(__rbit64(v9));
      v9 &= v9 - 1;
      unint64_t v15 = v14 | (v12 << 6);
      goto LABEL_19;
    }
    if (__OFADD__(v12++, 1))
    {
      __break(1u);
      goto LABEL_32;
    }
    if (v12 >= v10) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    if (!v17) {
      break;
    }
LABEL_18:
    unint64_t v9 = (v17 - 1) & v17;
    unint64_t v15 = __clz(__rbit64(v17)) + (v12 << 6);
LABEL_19:
    uint64_t v19 = *a2;
    if (*(void *)(*a2 + 16))
    {
      uint64_t result = sub_56168(*(void *)(*(void *)(a1 + 48) + 8 * v15));
      if (v20)
      {
        unsigned int v21 = (uint64_t *)(*(void *)(v19 + 56) + 16 * result);
        uint64_t v22 = v21[1];
        uint64_t v27 = *v21;
        swift_bridgeObjectRetain();
        uint64_t result = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v28 = v3;
        if ((result & 1) == 0)
        {
          uint64_t result = (uint64_t)sub_41864(0, v13[2] + 1, 1, v13);
          uint64_t v13 = (void *)result;
        }
        unint64_t v24 = v13[2];
        unint64_t v23 = v13[3];
        uint64_t v25 = v13;
        if (v24 >= v23 >> 1)
        {
          uint64_t result = (uint64_t)sub_41864((void *)(v23 > 1), v24 + 1, 1, v13);
          uint64_t v25 = (void *)result;
        }
        v25[2] = v24 + 1;
        uint64_t v13 = v25;
        uint64_t v26 = &v25[2 * v24];
        v26[4] = v27;
        v26[5] = v22;
        uint64_t v3 = v28;
      }
    }
  }
  int64_t v18 = v12 + 1;
  if (v12 + 1 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v12 + 2;
  if (v12 + 2 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v12 + 3;
  if (v12 + 3 >= v10) {
    goto LABEL_30;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17) {
    goto LABEL_17;
  }
  int64_t v18 = v12 + 4;
  if (v12 + 4 >= v10)
  {
LABEL_30:
    swift_release();
    return (uint64_t)v13;
  }
  unint64_t v17 = *(void *)(v6 + 8 * v18);
  if (v17)
  {
LABEL_17:
    int64_t v12 = v18;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v12 = v18 + 1;
    if (__OFADD__(v18, 1)) {
      break;
    }
    if (v12 >= v10) {
      goto LABEL_30;
    }
    unint64_t v17 = *(void *)(v6 + 8 * v12);
    ++v18;
    if (v17) {
      goto LABEL_18;
    }
  }
LABEL_32:
  __break(1u);
  return result;
}

uint64_t sub_1CFAA4(uint64_t a1)
{
  uint64_t v2 = a1 + 64;
  uint64_t v3 = -1 << *(unsigned char *)(a1 + 32);
  if (-v3 < 64) {
    uint64_t v4 = ~(-1 << -(char)v3);
  }
  else {
    uint64_t v4 = -1;
  }
  unint64_t v5 = v4 & *(void *)(a1 + 64);
  int64_t v6 = (unint64_t)(63 - v3) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v8 = 0;
  if (!v5) {
    goto LABEL_8;
  }
LABEL_5:
  unint64_t v9 = __clz(__rbit64(v5));
  v5 &= v5 - 1;
  unint64_t v10 = v9 | (v8 << 6);
  while (1)
  {
    uint64_t v11 = *(void *)(a1 + 56) + 48 * v10;
    uint64_t v12 = *(void *)(v11 + 40);
    if (v12)
    {
      unint64_t v17 = _swiftEmptyDictionarySingleton[2];
      uint64_t v32 = *(void *)(*(void *)(a1 + 48) + 8 * v10);
      uint64_t v31 = *(void *)(v11 + 32);
      if (_swiftEmptyDictionarySingleton[3] <= v17)
      {
        uint64_t v19 = v17 + 1;
        swift_bridgeObjectRetain_n();
        swift_bridgeObjectRetain();
        uint64_t v20 = v19;
        uint64_t v18 = v32;
        sub_119524(v20, 1);
      }
      else
      {
        swift_bridgeObjectRetain_n();
        uint64_t v18 = v32;
        swift_bridgeObjectRetain();
      }
      uint64_t result = sub_1FC7D0();
      unsigned int v21 = &_swiftEmptyDictionarySingleton[8];
      uint64_t v22 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
      unint64_t v23 = result & ~v22;
      unint64_t v24 = v23 >> 6;
      if (((-1 << v23) & ~_swiftEmptyDictionarySingleton[(v23 >> 6) + 8]) == 0)
      {
        char v26 = 0;
        unint64_t v27 = (unint64_t)(63 - v22) >> 6;
        while (++v24 != v27 || (v26 & 1) == 0)
        {
          BOOL v28 = v24 == v27;
          if (v24 == v27) {
            unint64_t v24 = 0;
          }
          v26 |= v28;
          uint64_t v29 = v21[v24];
          if (v29 != -1)
          {
            unint64_t v25 = __clz(__rbit64(~v29)) + (v24 << 6);
            goto LABEL_37;
          }
        }
        goto LABEL_41;
      }
      unint64_t v25 = __clz(__rbit64((-1 << v23) & ~_swiftEmptyDictionarySingleton[(v23 >> 6) + 8])) | v23 & 0x7FFFFFFFFFFFFFC0;
LABEL_37:
      *(void *)((char *)v21 + ((v25 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v25;
      *(void *)(_swiftEmptyDictionarySingleton[6] + 8 * v25) = v18;
      uint64_t v30 = (void *)(_swiftEmptyDictionarySingleton[7] + 16 * v25);
      *uint64_t v30 = v31;
      v30[1] = v12;
      ++_swiftEmptyDictionarySingleton[2];
      swift_bridgeObjectRelease();
      uint64_t result = swift_bridgeObjectRelease();
      if (v5) {
        goto LABEL_5;
      }
    }
    else if (v5)
    {
      goto LABEL_5;
    }
LABEL_8:
    int64_t v13 = v8 + 1;
    if (__OFADD__(v8, 1))
    {
      __break(1u);
LABEL_41:
      __break(1u);
      goto LABEL_42;
    }
    if (v13 >= v6) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v13);
    int64_t v15 = v8 + 1;
    if (!v14)
    {
      int64_t v15 = v8 + 2;
      if (v8 + 2 >= v6) {
        goto LABEL_39;
      }
      unint64_t v14 = *(void *)(v2 + 8 * v15);
      if (!v14)
      {
        int64_t v15 = v8 + 3;
        if (v8 + 3 >= v6) {
          goto LABEL_39;
        }
        unint64_t v14 = *(void *)(v2 + 8 * v15);
        if (!v14)
        {
          int64_t v15 = v8 + 4;
          if (v8 + 4 >= v6) {
            goto LABEL_39;
          }
          unint64_t v14 = *(void *)(v2 + 8 * v15);
          if (!v14) {
            break;
          }
        }
      }
    }
LABEL_23:
    unint64_t v5 = (v14 - 1) & v14;
    unint64_t v10 = __clz(__rbit64(v14)) + (v15 << 6);
    int64_t v8 = v15;
  }
  int64_t v16 = v8 + 5;
  if (v8 + 5 >= v6)
  {
LABEL_39:
    sub_1226C();
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  unint64_t v14 = *(void *)(v2 + 8 * v16);
  if (v14)
  {
    int64_t v15 = v8 + 5;
    goto LABEL_23;
  }
  while (1)
  {
    int64_t v15 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v15 >= v6) {
      goto LABEL_39;
    }
    unint64_t v14 = *(void *)(v2 + 8 * v15);
    ++v16;
    if (v14) {
      goto LABEL_23;
    }
  }
LABEL_42:
  __break(1u);
  return result;
}

uint64_t sub_1CFDBC()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_274058);
  sub_6DBC8(v0, (uint64_t)qword_274058);
  return sub_1FB420();
}

uint64_t PostHydrationFilteringCandidateMetadata.artworkURL.getter()
{
  uint64_t v1 = *(void *)(v0 + 56);
  swift_bridgeObjectRetain();
  return v1;
}

uint64_t PostHydrationFilteringCandidateMetadata.seriesSequenceNumber.getter()
{
  return *(void *)(v0 + 72);
}

__n128 PostHydrationFilteringCandidateMetadata.init(title:author:locale:isPreorder:artworkURL:seriesSequenceNumber:)@<Q0>(unint64_t a1@<X0>, unint64_t a2@<X1>, unint64_t a3@<X2>, unint64_t a4@<X3>, unint64_t a5@<X4>, unint64_t a6@<X5>, unsigned __int8 a7@<W6>, unint64_t a8@<X7>, __n128 *a9@<X8>, __n128 a10, unint64_t a11, unsigned __int32 a12, char a13)
{
  __n128 result = a10;
  a9->n128_u64[0] = a1;
  a9->n128_u64[1] = a2;
  a9[1].n128_u64[0] = a3;
  a9[1].n128_u64[1] = a4;
  a9[2].n128_u64[0] = a5;
  a9[2].n128_u64[1] = a6;
  a9[3].n128_u8[0] = a7;
  a9[3].n128_u64[1] = a8;
  a9[4] = a10;
  a9[5].n128_u64[0] = a11;
  a9[5].n128_u32[2] = a12;
  a9[5].n128_u8[12] = a13 & 1;
  return result;
}

uint64_t PostHydrationFilteringCandidateMetadata.debugDescription.getter()
{
  uint64_t v1 = *(void *)v0;
  uint64_t v2 = *(void **)(v0 + 8);
  uint64_t v3 = *(void *)(v0 + 16);
  uint64_t v4 = *(void **)(v0 + 24);
  uint64_t v5 = *(void *)(v0 + 32);
  int64_t v6 = *(void **)(v0 + 40);
  int v7 = *(unsigned __int8 *)(v0 + 48);
  char v8 = *(unsigned char *)(v0 + 92);
  uint64_t v13 = 34;
  unint64_t v14 = 0xE100000000000000;
  swift_bridgeObjectRetain();
  v15._uint64_t countAndFlagsBits = v1;
  v15._object = v2;
  sub_1FB8F0(v15);
  swift_bridgeObjectRelease();
  v16._uint64_t countAndFlagsBits = 0x2079622022;
  v16._object = (void *)0xE500000000000000;
  sub_1FB8F0(v16);
  swift_bridgeObjectRetain();
  v17._uint64_t countAndFlagsBits = v3;
  v17._object = v4;
  sub_1FB8F0(v17);
  swift_bridgeObjectRelease();
  v18._uint64_t countAndFlagsBits = 46;
  v18._object = (void *)0xE100000000000000;
  sub_1FB8F0(v18);
  if (v6)
  {
    strcpy((char *)&v12, " locale=");
    BYTE1(v12._object) = 0;
    WORD1(v12._object) = 0;
    HIDWORD(v12._object) = -402653184;
    v19._uint64_t countAndFlagsBits = v5;
    v19._object = v6;
    sub_1FB8F0(v19);
    sub_1FB8F0(v12);
    swift_bridgeObjectRelease();
  }
  strcpy((char *)&v12, " isPreorder=");
  BYTE5(v12._object) = 0;
  HIWORD(v12._object) = -5120;
  if (v7) {
    v9._uint64_t countAndFlagsBits = 1702195828;
  }
  else {
    v9._uint64_t countAndFlagsBits = 0x65736C6166;
  }
  if (v7) {
    unint64_t v10 = (void *)0xE400000000000000;
  }
  else {
    unint64_t v10 = (void *)0xE500000000000000;
  }
  v9._object = v10;
  sub_1FB8F0(v9);
  swift_bridgeObjectRelease();
  sub_1FB8F0(v12);
  swift_bridgeObjectRelease();
  if ((v8 & 1) == 0)
  {
    sub_1FC050(24);
    swift_bridgeObjectRelease();
    v20._uint64_t countAndFlagsBits = sub_1FBE90();
    sub_1FB8F0(v20);
    swift_bridgeObjectRelease();
    v21._uint64_t countAndFlagsBits = 0xD000000000000016;
    v21._object = (void *)0x800000000021A9F0;
    sub_1FB8F0(v21);
    swift_bridgeObjectRelease();
  }
  return v13;
}

void *sub_1D00D8()
{
  if (*(void *)(v0 + 224))
  {
    uint64_t v1 = *(void **)(v0 + 224);
  }
  else
  {
    uint64_t v1 = sub_1D0134();
    *(void *)(v0 + 224) = v1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRetain();
  return v1;
}

void *sub_1D0134()
{
  uint64_t v26 = sub_1FB170();
  uint64_t v0 = *(void *)(v26 - 8);
  __chkstk_darwin(v26);
  uint64_t v2 = (char *)&v21 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_12124(&qword_274170);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v21 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v25 = sub_1FB190();
  uint64_t v6 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  char v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *(void *)(sub_1FB150() + 16);
  if (v9)
  {
    unint64_t v23 = (void (**)(char *, uint64_t))(v6 + 8);
    unint64_t v24 = (void (**)(char *, uint64_t))(v0 + 8);
    uint64_t v21 = swift_bridgeObjectRetain();
    uint64_t v10 = v21 + 40;
    uint64_t v11 = _swiftEmptyArrayStorage;
    do
    {
      swift_bridgeObjectRetain_n();
      sub_1FB120();
      sub_1FB180();
      sub_1FB160();
      (*v24)(v2, v26);
      uint64_t v12 = sub_1FB140();
      uint64_t v13 = *(void *)(v12 - 8);
      if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v13 + 48))(v5, 1, v12) == 1)
      {
        (*v23)(v8, v25);
        sub_55F38((uint64_t)v5, &qword_274170);
        swift_bridgeObjectRelease();
      }
      else
      {
        uint64_t v14 = sub_1FB130();
        uint64_t v22 = v15;
        (*v23)(v8, v25);
        (*(void (**)(char *, uint64_t))(v13 + 8))(v5, v12);
        swift_bridgeObjectRelease();
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v11 = sub_41864(0, v11[2] + 1, 1, v11);
        }
        unint64_t v17 = v11[2];
        unint64_t v16 = v11[3];
        if (v17 >= v16 >> 1) {
          uint64_t v11 = sub_41864((void *)(v16 > 1), v17 + 1, 1, v11);
        }
        long long v11[2] = v17 + 1;
        Swift::String v18 = &v11[2 * v17];
        uint64_t v19 = v22;
        v18[4] = v14;
        v18[5] = v19;
      }
      v10 += 16;
      --v9;
    }
    while (v9);
    swift_bridgeObjectRelease_n();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v11;
}

uint64_t BookRecommendationPostHydrationFilteringService.deinit()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);
  sub_1264C(v0 + 136);
  sub_1264C(v0 + 176);
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t BookRecommendationPostHydrationFilteringService.__deallocating_deinit()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);
  sub_1264C(v0 + 136);
  sub_1264C(v0 + 176);
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t BookRecommendationPostHydrationFilteringService.storeIDsOfDuplicateAssets(fromCandidates:collectionType:)(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_274078 + dword_274078);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_B06F4;
  return v5(a1);
}

uint64_t sub_1D0604(uint64_t a1)
{
  uint64_t v5 = (uint64_t (*)(uint64_t))((char *)&dword_274078 + dword_274078);
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  *uint64_t v3 = v1;
  v3[1] = sub_DB910;
  return v5(a1);
}

uint64_t sub_1D06B4(uint64_t a1)
{
  v2[298] = v1;
  v2[297] = a1;
  sub_12124(&qword_274160);
  v2[299] = swift_task_alloc();
  uint64_t v3 = sub_12124(&qword_274168);
  v2[300] = v3;
  v2[301] = *(void *)(v3 - 8);
  v2[302] = swift_task_alloc();
  uint64_t v4 = sub_1FB170();
  v2[303] = v4;
  v2[304] = *(void *)(v4 - 8);
  v2[305] = swift_task_alloc();
  uint64_t v5 = sub_1FB190();
  v2[306] = v5;
  v2[307] = *(void *)(v5 - 8);
  v2[308] = swift_task_alloc();
  sub_12124(&qword_274170);
  v2[309] = swift_task_alloc();
  v2[310] = type metadata accessor for PersonalizationMetadataRequest();
  v2[311] = swift_task_alloc();
  sub_12124(&qword_274178);
  v2[312] = swift_task_alloc();
  v2[313] = swift_task_alloc();
  v2[314] = swift_task_alloc();
  return _swift_task_switch(sub_1D0910, 0, 0);
}

uint64_t sub_1D0910()
{
  uint64_t v1 = *(void **)(v0 + 2384);
  uint64_t v2 = v1[10];
  uint64_t v3 = v1[11];
  sub_5D64(v1 + 7, v2);
  uint64_t v6 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(v3 + 24) + **(int **)(v3 + 24));
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 2520) = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1D0A14;
  return v6(v2, v3);
}

uint64_t sub_1D0A14(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 2528) = a1;
  swift_task_dealloc();
  if (v1)
  {
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v4 = *(uint64_t (**)(void))(v3 + 8);
    return v4();
  }
  else
  {
    return _swift_task_switch(sub_1D0BE0, 0, 0);
  }
}

uint64_t sub_1D0BE0()
{
  uint64_t v1 = *(void *)(v0[316] + 16);
  if (!v1)
  {
LABEL_26:
    v0[317] = _swiftEmptyDictionarySingleton;
    uint64_t v31 = v0[314];
    uint64_t v32 = v0[301];
    uint64_t v33 = v0[300];
    uint64_t v34 = (void *)v0[298];
    char v35 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v32 + 56);
    v0[318] = v35;
    v0[319] = (v32 + 56) & 0xFFFFFFFFFFFFLL | 0xA0D1000000000000;
    v35(v31, 1, 1, v33);
    char v36 = v34 + 2;
    uint64_t v37 = v34[5];
    uint64_t v38 = v34[6];
    sub_5D64(v36, v37);
    uint64_t v45 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v38 + 16) + **(int **)(v38 + 16));
    uint64_t v39 = (void *)swift_task_alloc();
    v0[320] = v39;
    void *v39 = v0;
    v39[1] = sub_1D1044;
    return v45(v0 + 2, v37, v38);
  }
  char v41 = (void *)v0[298];
  uint64_t v2 = (uint64_t *)(swift_bridgeObjectRetain() + 64);
  while (1)
  {
    uint64_t v4 = *(v2 - 3);
    uint64_t v44 = *(v2 - 4);
    uint64_t v5 = *(v2 - 2);
    uint64_t v42 = v1;
    uint64_t v43 = *(v2 - 1);
    uint64_t v6 = *v2;
    uint64_t v8 = v41[15];
    uint64_t v7 = v41[16];
    sub_5D64(v41 + 12, v8);
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v7 + 8);
    swift_bridgeObjectRetain();
    uint64_t v46 = v6;
    swift_bridgeObjectRetain();
    uint64_t v10 = v9(v4, v5, v8, v7);
    uint64_t v12 = v11;
    if (_swiftEmptyDictionarySingleton[2])
    {
      swift_bridgeObjectRetain();
      unint64_t v13 = sub_4C328(v10, v12);
      uint64_t v14 = _swiftEmptyArrayStorage;
      if (v15)
      {
        uint64_t v14 = *(void **)(_swiftEmptyDictionarySingleton[7] + 8 * v13);
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
      uint64_t v14 = sub_43BBC(0, v14[2] + 1, 1, v14);
    }
    unint64_t v17 = v14[2];
    unint64_t v16 = v14[3];
    if (v17 >= v16 >> 1) {
      uint64_t v14 = sub_43BBC((void *)(v16 > 1), v17 + 1, 1, v14);
    }
    v14[2] = v17 + 1;
    Swift::String v18 = &v14[5 * v17];
    v18[4] = v44;
    v18[5] = v4;
    v18[6] = v5;
    v18[7] = v43;
    v18[8] = v46;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    unint64_t v21 = sub_4C328(v10, v12);
    uint64_t v22 = _swiftEmptyDictionarySingleton[2];
    BOOL v23 = (v20 & 1) == 0;
    uint64_t result = v22 + v23;
    if (__OFADD__(v22, v23))
    {
      __break(1u);
LABEL_33:
      __break(1u);
      return result;
    }
    char v25 = v20;
    if (_swiftEmptyDictionarySingleton[3] < result) {
      break;
    }
    if (isUniquelyReferenced_nonNull_native)
    {
      if (v20) {
        goto LABEL_3;
      }
    }
    else
    {
      uint64_t result = (uint64_t)sub_124038();
      if (v25)
      {
LABEL_3:
        uint64_t v3 = _swiftEmptyDictionarySingleton[7];
        swift_bridgeObjectRelease();
        *(void *)(v3 + 8 * v21) = v14;
        goto LABEL_4;
      }
    }
LABEL_21:
    _swiftEmptyDictionarySingleton[(v21 >> 6) + 8] |= 1 << v21;
    unint64_t v27 = (uint64_t *)(_swiftEmptyDictionarySingleton[6] + 16 * v21);
    *unint64_t v27 = v10;
    v27[1] = v12;
    *(void *)(_swiftEmptyDictionarySingleton[7] + 8 * v21) = v14;
    uint64_t v28 = _swiftEmptyDictionarySingleton[2];
    BOOL v29 = __OFADD__(v28, 1);
    uint64_t v30 = v28 + 1;
    if (v29) {
      goto LABEL_33;
    }
    _swiftEmptyDictionarySingleton[2] = v30;
    swift_bridgeObjectRetain();
LABEL_4:
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    v2 += 5;
    uint64_t v1 = v42 - 1;
    if (v42 == 1)
    {
      uint64_t v0 = v40;
      swift_bridgeObjectRelease();
      goto LABEL_26;
    }
  }
  sub_11F068(result, isUniquelyReferenced_nonNull_native);
  uint64_t result = sub_4C328(v10, v12);
  if ((v25 & 1) == (v26 & 1))
  {
    unint64_t v21 = result;
    if (v25) {
      goto LABEL_3;
    }
    goto LABEL_21;
  }
  return sub_1FC770();
}

uint64_t sub_1D1044()
{
  *(void *)(*(void *)v1 + 2568) = v0;
  swift_task_dealloc();
  if (v0)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1D5AA0;
  }
  else
  {
    uint64_t v2 = sub_1D116C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1D116C()
{
  uint64_t v223 = v0;
  memcpy((void *)(v0 + 1136), (const void *)(v0 + 16), 0x460uLL);
  unint64_t v1 = *(void *)(v0 + 1216);
  uint64_t v2 = HIBYTE(v1) & 0xF;
  if ((v1 & 0x2000000000000000) == 0) {
    uint64_t v2 = *(void *)(v0 + 1208) & 0xFFFFFFFFFFFFLL;
  }
  uint64_t v3 = *(void *)(v0 + 2568);
  if (v2)
  {
    swift_bridgeObjectRetain();
    sub_1FB3F0();
    uint64_t v4 = *(void *)(v0 + 2512);
    if (v3)
    {
      sub_55F38(*(void *)(v0 + 2512), &qword_274178);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_11D3C(v0 + 1136);
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
      return v5();
    }
    uint64_t v7 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v0 + 2544);
    uint64_t v8 = *(void *)(v0 + 2504);
    uint64_t v9 = *(void *)(v0 + 2400);
    sub_55F38(v4, &qword_274178);
    v7(v8, 0, 1, v9);
    sub_1D60E0(v8, v4);
    uint64_t v3 = 0;
  }
  sub_11D3C(v0 + 1136);
  if (*(unsigned char *)(v0 + 1800) == 1)
  {
    *(void *)(v0 + 2256) = _swiftEmptyDictionarySingleton;
LABEL_13:
    uint64_t v11 = *(void *)(v0 + 2528);
    int64_t v12 = *(void *)(v11 + 16);
    if (v12)
    {
      v222[0]._uint64_t countAndFlagsBits = (uint64_t)_swiftEmptyArrayStorage;
      sub_46538(0, v12, 0);
      uint64_t countAndFlagsBits = _swiftEmptyArrayStorage;
      uint64_t v14 = (uint64_t *)(v11 + 32);
      unint64_t v15 = _swiftEmptyArrayStorage[2];
      do
      {
        uint64_t v17 = *v14;
        v14 += 5;
        uint64_t v16 = v17;
        v222[0]._uint64_t countAndFlagsBits = (uint64_t)countAndFlagsBits;
        unint64_t v18 = countAndFlagsBits[3];
        if (v15 >= v18 >> 1)
        {
          sub_46538(v18 > 1, v15 + 1, 1);
          uint64_t countAndFlagsBits = (void *)v222[0]._countAndFlagsBits;
        }
        countAndFlagsBits[2] = v15 + 1;
        countAndFlagsBits[v15++ + 4] = v16;
        --v12;
      }
      while (v12);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t countAndFlagsBits = _swiftEmptyArrayStorage;
    }
    uint64_t v19 = *(void *)(v0 + 2488);
    uint64_t v20 = *(void *)(v0 + 2480);
    unint64_t v21 = *(void **)(v0 + 2384);
    uint64_t v22 = *(void *)(v0 + 2376);
    *(void *)(v0 + 2576) = sub_50A6C((uint64_t)countAndFlagsBits);
    swift_bridgeObjectRelease();
    sub_1FB100();
    BOOL v23 = sub_1CF7D0(v22);
    uint64_t v24 = sub_50A6C((uint64_t)v23);
    swift_bridgeObjectRelease();
    uint64_t v25 = swift_bridgeObjectRetain();
    *(void *)(v19 + *(int *)(v20 + 20)) = sub_1EF3EC(v25, v24);
    uint64_t v26 = v21[25];
    uint64_t v27 = v21[26];
    sub_5D64(v21 + 22, v26);
    uint64_t v219 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v27 + 8) + **(int **)(v27 + 8));
    uint64_t v28 = (void *)swift_task_alloc();
    *(void *)(v0 + 2584) = v28;
    void *v28 = v0;
    v28[1] = sub_1D3558;
    uint64_t v29 = *(void *)(v0 + 2488);
    return v219(v29, v26, v27);
  }
  int v10 = *(unsigned __int8 *)(*(void *)(v0 + 2384) + 216);
  *(void *)(v0 + 2256) = _swiftEmptyDictionarySingleton;
  if (v10 == 1) {
    goto LABEL_13;
  }
  uint64_t v185 = (uint64_t *)(v0 + 2312);
  swift_bridgeObjectRelease();
  uint64_t v30 = *(void *)(v0 + 2376);
  uint64_t v195 = v0;
  uint64_t v199 = *(void *)(v30 + 16);
  if (v199)
  {
    uint64_t v194 = v3;
    long long v191 = (uint64_t *)(v0 + 2256);
    uint64_t v183 = (uint64_t *)(v0 + 2336);
    char v184 = (uint64_t *)(v0 + 2320);
    unint64_t v187 = (uint64_t *)(v0 + 2344);
    long long v188 = (uint64_t *)(v0 + 2328);
    unint64_t v186 = (uint64_t *)(v0 + 2352);
    uint64_t v202 = *(void *)(v0 + 2536);
    uint64_t v31 = *(void **)(v0 + 2384);
    uint64_t v198 = v31 + 12;
    uint64_t v217 = v31;
    uint64_t v221 = v31 + 17;
    uint64_t v32 = *(void *)(v0 + 2408);
    long long v189 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 2432) + 8);
    long long v190 = (void (**)(uint64_t, uint64_t))(*(void *)(v0 + 2456) + 8);
    long long v196 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v32 + 48);
    uint64_t v197 = v30 + 32;
    long long v192 = (void (**)(uint64_t, uint64_t))(v32 + 8);
    long long v193 = (void (**)(void, void, void))(v32 + 32);
    swift_bridgeObjectRetain();
    uint64_t v33 = 0;
    uint64_t v34 = _swiftEmptyDictionarySingleton;
    Swift::Int v200 = _swiftEmptyDictionarySingleton;
    while (1)
    {
      uint64_t v35 = v197 + 104 * v33;
      uint64_t v37 = *(void *)v35;
      uint64_t v36 = *(void *)(v35 + 8);
      uint64_t v38 = *(void **)(v35 + 16);
      uint64_t v218 = *(void *)(v35 + 24);
      uint64_t v39 = *(void *)(v35 + 32);
      uint64_t v205 = *(void *)(v35 + 40);
      uint64_t v40 = *(void *)(v35 + 48);
      int v203 = *(unsigned __int8 *)(v35 + 56);
      uint64_t v211 = *(void *)(v35 + 72);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v220 = v39;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v41 = v217[15];
      uint64_t v42 = v217[16];
      sub_5D64(v198, v41);
      uint64_t v201 = v36;
      uint64_t v43 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v42 + 8))(v36, v38, v41, v42);
      uint64_t v45 = v44;
      uint64_t v209 = v43;
      uint64_t v210 = v37;
      uint64_t v212 = v44;
      uint64_t v207 = v33;
      uint64_t v208 = v38;
      if (!*(void *)(v202 + 16)) {
        goto LABEL_42;
      }
      swift_bridgeObjectRetain();
      unint64_t v46 = sub_4C328(v43, v45);
      if (v47) {
        break;
      }
      swift_bridgeObjectRelease();
      if (!v40) {
        goto LABEL_77;
      }
LABEL_43:
      uint64_t v64 = v34[2];
      swift_bridgeObjectRetain();
      uint64_t v213 = (uint64_t)v34;
      if (v64)
      {
        swift_bridgeObjectRetain();
        unint64_t v65 = sub_4C328(v205, v40);
        if (v66)
        {
          char v67 = (uint64_t *)(v34[7] + 16 * v65);
          uint64_t v68 = *v67;
          uint64_t v69 = (void *)v67[1];
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease_n();
          goto LABEL_53;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v70 = *(void *)(v0 + 2472);
      uint64_t v71 = *(void *)(v0 + 2464);
      uint64_t v72 = *(void *)(v0 + 2448);
      uint64_t v73 = *(void *)(v0 + 2440);
      uint64_t v74 = *(void *)(v0 + 2424);
      swift_bridgeObjectRetain();
      sub_1FB120();
      sub_1FB180();
      (*v190)(v71, v72);
      sub_1FB160();
      (*v189)(v73, v74);
      uint64_t v75 = sub_1FB140();
      uint64_t v76 = *(void *)(v75 - 8);
      int v77 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v76 + 48))(v70, 1, v75);
      uint64_t v78 = *(void *)(v0 + 2472);
      if (v77 != 1)
      {
        uint64_t v68 = sub_1FB130();
        uint64_t v69 = v83;
        (*(void (**)(uint64_t, uint64_t))(v76 + 8))(v78, v75);
        swift_bridgeObjectRetain();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v222[0]._uint64_t countAndFlagsBits = v213;
        sub_7185C(v68, (uint64_t)v69, v205, v40, isUniquelyReferenced_nonNull_native);
        uint64_t v213 = v222[0]._countAndFlagsBits;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v33 = v207;
        uint64_t v38 = v208;
        uint64_t v43 = v209;
        uint64_t v37 = v210;
LABEL_53:
        char v85 = sub_1D00D8();
        unint64_t v86 = v85;
        unint64_t v87 = v85[2];
        if (!v87) {
          goto LABEL_60;
        }
        BOOL v88 = v85[4] == v68 && v85[5] == (void)v69;
        if (!v88 && (sub_1FC5F0() & 1) == 0)
        {
          if (v87 == 1)
          {
LABEL_60:
            uint64_t v89 = v33;
            goto LABEL_61;
          }
          BOOL v95 = v86[6] == v68 && v86[7] == (void)v69;
          if (!v95 && (sub_1FC5F0() & 1) == 0)
          {
            if (v87 != 2)
            {
              uint64_t v132 = (uint64_t)(v86 + 9);
              uint64_t v173 = 2;
              while (1)
              {
                uint64_t v174 = v173 + 1;
                if (__OFADD__(v173, 1)) {
                  goto LABEL_168;
                }
                BOOL v175 = *(void *)(v132 - 8) == v68 && *(void *)v132 == (void)v69;
                if (v175 || (sub_1FC5F0() & 1) != 0)
                {
                  swift_bridgeObjectRelease();
                  swift_bridgeObjectRelease();
                  uint64_t v0 = v195;
                  uint64_t v34 = (void *)v213;
                  uint64_t v33 = v207;
                  uint64_t v38 = v208;
                  goto LABEL_63;
                }
                ++v173;
                v132 += 16;
                BOOL v62 = v174 == v87;
                uint64_t v0 = v195;
                uint64_t v89 = v207;
                uint64_t v38 = v208;
                uint64_t v37 = v210;
                if (v62) {
                  goto LABEL_61;
                }
              }
            }
            uint64_t v89 = v33;
LABEL_61:
            swift_bridgeObjectRelease();
            v222[0]._uint64_t countAndFlagsBits = 0;
            v222[0]._object = (void *)0xE000000000000000;
            v225._uint64_t countAndFlagsBits = 0;
            v225._object = (void *)0xE000000000000000;
            sub_1FB8F0(v225);
            swift_bridgeObjectRelease();
            *unint64_t v187 = v37;
            v226._uint64_t countAndFlagsBits = sub_1FC580();
            sub_1FB8F0(v226);
            swift_bridgeObjectRelease();
            v227._uint64_t countAndFlagsBits = 40;
            v227._object = (void *)0xE100000000000000;
            sub_1FB8F0(v227);
            v228._uint64_t countAndFlagsBits = v68;
            v228._object = v69;
            sub_1FB8F0(v228);
            swift_bridgeObjectRelease();
            v229._uint64_t countAndFlagsBits = 41;
            v229._object = (void *)0xE100000000000000;
            sub_1FB8F0(v229);
            sub_1FB8F0(v222[0]);
            swift_bridgeObjectRelease();
            sub_73A4(&v222[0]._countAndFlagsBits, v37);
            uint64_t v45 = v212;
            uint64_t v34 = (void *)v213;
            uint64_t v33 = v89;
LABEL_64:
            uint64_t v43 = v209;
            goto LABEL_77;
          }
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v45 = v212;
        uint64_t v34 = (void *)v213;
        goto LABEL_77;
      }
      sub_55F38(*(void *)(v0 + 2472), &qword_274170);
      uint64_t v34 = (void *)v213;
      swift_bridgeObjectRetain();
      unint64_t v79 = sub_4C328(v205, v40);
      char v81 = v80;
      swift_bridgeObjectRelease();
      if ((v81 & 1) == 0)
      {
        swift_bridgeObjectRelease();
        uint64_t v33 = v207;
        uint64_t v38 = v208;
LABEL_63:
        uint64_t v37 = v210;
        uint64_t v45 = v212;
        goto LABEL_64;
      }
      char v82 = swift_isUniquelyReferenced_nonNull_native();
      v222[0]._uint64_t countAndFlagsBits = v213;
      uint64_t v33 = v207;
      uint64_t v38 = v208;
      uint64_t v37 = v210;
      uint64_t v45 = v212;
      if ((v82 & 1) == 0)
      {
        sub_1241F0();
        uint64_t v34 = (void *)v222[0]._countAndFlagsBits;
      }
      swift_bridgeObjectRelease();
      sub_14D360(v79, (uint64_t)v34);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v43 = v209;
LABEL_77:
      uint64_t v96 = *(void *)(v0 + 2496);
      uint64_t v97 = *(void *)(v0 + 2400);
      sub_1D6148(*(void *)(v0 + 2512), v96);
      if ((*v196)(v96, 1, v97) == 1)
      {
        sub_55F38(*(void *)(v0 + 2496), &qword_274178);
        if (v203)
        {
          v222[0]._uint64_t countAndFlagsBits = 0;
          v222[0]._object = (void *)0xE000000000000000;
          v236._uint64_t countAndFlagsBits = 0;
          v236._object = (void *)0xE000000000000000;
          sub_1FB8F0(v236);
          swift_bridgeObjectRelease();
          *long long v188 = v37;
          v237._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v237);
          swift_bridgeObjectRelease();
          v238._uint64_t countAndFlagsBits = 0x6564726F65727028;
          v238._object = (void *)0xEA00000000002972;
          sub_1FB8F0(v238);
          sub_1FB8F0(v222[0]);
          swift_bridgeObjectRelease();
          sub_73A4(&v222[0]._countAndFlagsBits, v37);
        }
      }
      else
      {
        (*v193)(*(void *)(v0 + 2416), *(void *)(v0 + 2496), *(void *)(v0 + 2400));
        if (!v211)
        {
          (*v192)(*(void *)(v0 + 2416), *(void *)(v0 + 2400));
LABEL_93:
          uint64_t v38 = v208;
          uint64_t v43 = v209;
          goto LABEL_94;
        }
        swift_bridgeObjectRetain();
        sub_1FB3E0();
        if (!v194)
        {
          uint64_t v104 = *(void *)(v0 + 2392);
          swift_bridgeObjectRelease();
          uint64_t v105 = sub_12124(&qword_274180);
          int v106 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v105 - 8) + 48))(v104, 1, v105);
          uint64_t v107 = *(void *)(v0 + 2416);
          uint64_t v108 = *(void *)(v0 + 2400);
          uint64_t v109 = *(void *)(v0 + 2392);
          if (v106 == 1)
          {
            (*v192)(*(void *)(v0 + 2416), *(void *)(v0 + 2400));
            sub_55F38(v109, &qword_274160);
            uint64_t v194 = 0;
            uint64_t v37 = v210;
          }
          else
          {
            v222[0]._uint64_t countAndFlagsBits = 0;
            v222[0]._object = (void *)0xE000000000000000;
            v239._uint64_t countAndFlagsBits = 0;
            v239._object = (void *)0xE000000000000000;
            sub_1FB8F0(v239);
            swift_bridgeObjectRelease();
            uint64_t v37 = v210;
            *uint64_t v183 = v210;
            v240._uint64_t countAndFlagsBits = sub_1FC580();
            sub_1FB8F0(v240);
            swift_bridgeObjectRelease();
            v241._uint64_t countAndFlagsBits = 0x29786567657228;
            v241._object = (void *)0xE700000000000000;
            sub_1FB8F0(v241);
            sub_1FB8F0(v222[0]);
            swift_bridgeObjectRelease();
            sub_73A4(&v222[0]._countAndFlagsBits, v210);
            (*v192)(v107, v108);
            sub_55F38(v109, &qword_274160);
            uint64_t v194 = 0;
          }
          uint64_t v45 = v212;
          goto LABEL_93;
        }
        swift_bridgeObjectRelease();
        if (qword_26C3C8 != -1) {
          swift_once();
        }
        uint64_t v98 = sub_1FB430();
        sub_6DBC8(v98, (uint64_t)qword_274058);
        swift_errorRetain();
        swift_errorRetain();
        long long v99 = sub_1FB410();
        os_log_type_t v100 = sub_1FBDC0();
        uint64_t v38 = v208;
        if (os_log_type_enabled(v99, v100))
        {
          uint64_t v101 = swift_slowAlloc();
          double v102 = (void *)swift_slowAlloc();
          *(_DWORD *)uint64_t v101 = 138412290;
          swift_errorRetain();
          uint64_t v103 = _swift_stdlib_bridgeErrorToNSError();
          *(void *)(v101 + 4) = v103;
          *double v102 = v103;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl(&dword_0, v99, v100, "Error matching artwork URL against regex: %@", (uint8_t *)v101, 0xCu);
          sub_12124(&qword_26F4F8);
          swift_arrayDestroy();
          uint64_t v45 = v212;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {

          swift_errorRelease();
          swift_errorRelease();
        }
        uint64_t v43 = v209;
        uint64_t v110 = *(void *)(v0 + 2416);
        uint64_t v111 = *(void *)(v0 + 2400);
        swift_errorRelease();
        (*v192)(v110, v111);
        uint64_t v194 = 0;
        uint64_t v37 = v210;
        uint64_t v33 = v207;
      }
LABEL_94:
      if (sub_395FC(v37, (uint64_t)_swiftEmptySetSingleton)) {
        goto LABEL_95;
      }
      long long v112 = v200;
      if (v200[2])
      {
        swift_bridgeObjectRetain();
        unint64_t v113 = sub_4C328(v43, v45);
        if (v114)
        {
          char v115 = *(void **)(v200[7] + 8 * v113);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v214 = v34;
          if (v115[2])
          {
            uint64_t v216 = v115[2];
            swift_bridgeObjectRetain();
            uint64_t v206 = v115;
            int64_t v116 = v115 + 8;
            while (1)
            {
              uint64_t v118 = *(v116 - 1);
              uint64_t v117 = *v116;
              uint64_t v119 = v217[20];
              uint64_t v120 = v217[21];
              sub_5D64(v221, v119);
              uint64_t v121 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v120 + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v122 = v121(v118, v117, v119, v120);
              uint64_t v124 = v123;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v125 = v217[20];
              uint64_t v126 = v217[21];
              sub_5D64(v221, v125);
              if (v122 == (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v126 + 8))(v218, v220, v125, v126)&& v124 == v127)
              {
                break;
              }
              char v129 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v129) {
                goto LABEL_129;
              }
              v116 += 5;
              if (!--v216)
              {
                char v115 = v206;
                swift_bridgeObjectRelease();
                uint64_t v0 = v195;
                uint64_t v45 = v212;
                uint64_t v34 = v214;
                uint64_t v33 = v207;
                uint64_t v38 = v208;
                uint64_t v43 = v209;
                uint64_t v37 = v210;
                goto LABEL_133;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_129:
            swift_bridgeObjectRelease();
            v249._uint64_t countAndFlagsBits = 0;
            v249._object = (void *)0xE000000000000000;
            sub_1FB8F0(v249);
            swift_bridgeObjectRelease();
            uint64_t v37 = v210;
            *char v184 = v210;
            v250._uint64_t countAndFlagsBits = sub_1FC580();
            sub_1FB8F0(v250);
            swift_bridgeObjectRelease();
            v251._uint64_t countAndFlagsBits = 8744;
            v251._object = (void *)0xE200000000000000;
            sub_1FB8F0(v251);
            uint64_t v38 = v208;
            uint64_t v0 = v195;
            uint64_t v34 = v214;
            uint64_t v33 = v207;
            uint64_t v43 = v209;
            if (sub_1FB8D0() < 21)
            {
              swift_bridgeObjectRetain();
              v163._uint64_t countAndFlagsBits = v201;
              object = v208;
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_51EA0(20);
              swift_bridgeObjectRelease();
              uint64_t v160 = sub_1FB8A0();
              unint64_t v162 = v161;
              swift_bridgeObjectRelease();
              v222[0]._uint64_t countAndFlagsBits = v160;
              v222[0]._object = v162;
              v252._uint64_t countAndFlagsBits = 10911970;
              v252._object = (void *)0xA300000000000000;
              sub_1FB8F0(v252);
              v163._uint64_t countAndFlagsBits = v222[0]._countAndFlagsBits;
              object = v222[0]._object;
            }
            v163._object = object;
            sub_1FB8F0(v163);
            swift_bridgeObjectRelease();
            v253._uint64_t countAndFlagsBits = 10530;
            v253._object = (void *)0xE200000000000000;
            sub_1FB8F0(v253);
            v254._uint64_t countAndFlagsBits = 0;
            v254._object = (void *)0xE000000000000000;
            sub_1FB8F0(v254);
            swift_bridgeObjectRelease();
            sub_73A4(&v222[0]._countAndFlagsBits, v210);
            uint64_t v45 = v212;
            char v115 = v206;
          }
LABEL_133:
          if (!sub_395FC(v37, (uint64_t)_swiftEmptySetSingleton))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              char v115 = sub_43BBC(0, v115[2] + 1, 1, v115);
            }
            unint64_t v166 = v115[2];
            unint64_t v165 = v115[3];
            BOOL v167 = v115;
            uint64_t v168 = v200;
            if (v166 >= v165 >> 1)
            {
              int v176 = sub_43BBC((void *)(v165 > 1), v166 + 1, 1, v115);
              uint64_t v168 = v200;
              BOOL v167 = v176;
            }
            uint64_t v169 = (uint64_t)v167;
            v167[2] = v166 + 1;
            uint64_t v170 = &v167[5 * v166];
            v170[4] = v37;
            v170[5] = v43;
            v170[6] = v45;
            v170[7] = v218;
            v170[8] = v220;
            uint64_t v171 = (uint64_t)v168;
            char v172 = swift_isUniquelyReferenced_nonNull_native();
            v222[0]._uint64_t countAndFlagsBits = v171;
            sub_7171C(v169, v43, v45, v172);
            Swift::Int v200 = (void *)v222[0]._countAndFlagsBits;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v34 = v214;
            goto LABEL_119;
          }
          swift_bridgeObjectRelease();
LABEL_95:
          swift_bridgeObjectRelease();
          goto LABEL_119;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v0 = v33;
      unint64_t v130 = v34;
      unint64_t v87 = (unint64_t)v38;
      sub_12124(&qword_26D5C8);
      uint64_t v131 = v43;
      uint64_t v132 = swift_allocObject();
      *(_OWORD *)(v132 + 16) = xmmword_1FD2A0;
      *(void *)(v132 + 32) = v37;
      *(void *)(v132 + 40) = v131;
      *(void *)(v132 + 48) = v45;
      *(void *)(v132 + 56) = v218;
      *(void *)(v132 + 64) = v220;
      swift_bridgeObjectRetain();
      uint64_t v133 = v131;
      swift_bridgeObjectRetain();
      char v134 = swift_isUniquelyReferenced_nonNull_native();
      v222[0]._uint64_t countAndFlagsBits = (uint64_t)v200;
      unint64_t v136 = sub_4C328(v131, v45);
      uint64_t v137 = v200[2];
      BOOL v138 = (v135 & 1) == 0;
      uint64_t v139 = v137 + v138;
      if (__OFADD__(v137, v138))
      {
        __break(1u);
LABEL_167:
        __break(1u);
LABEL_168:
        __break(1u);
        swift_once();
        uint64_t v177 = sub_1FB430();
        sub_6DBC8(v177, (uint64_t)qword_274058);
        swift_bridgeObjectRetain();
        uint64_t v178 = sub_1FB410();
        os_log_type_t v179 = sub_1FBDC0();
        if (os_log_type_enabled(v178, v179))
        {
          int v180 = (uint8_t *)swift_slowAlloc();
          v222[0]._uint64_t countAndFlagsBits = swift_slowAlloc();
          *(_DWORD *)int v180 = 136315138;
          swift_bridgeObjectRetain();
          *(void *)(v195 + 2304) = sub_D5890(v132, v87, &v222[0]._countAndFlagsBits);
          uint64_t v0 = v195;
          sub_1FBED0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v178, v179, "Similar titles in library: %s", v180, 0xCu);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        goto LABEL_160;
      }
      char v140 = v135;
      if (v200[3] >= v139)
      {
        if ((v134 & 1) == 0)
        {
          sub_124038();
          long long v112 = (void *)v222[0]._countAndFlagsBits;
        }
      }
      else
      {
        sub_11F068(v139, v134);
        uint64_t v141 = v222[0]._countAndFlagsBits;
        unint64_t v142 = sub_4C328(v131, v212);
        if ((v140 & 1) != (v143 & 1))
        {
          return sub_1FC770();
        }
        unint64_t v136 = v142;
        long long v112 = (void *)v141;
        uint64_t v133 = v131;
      }
      uint64_t v34 = v130;
      uint64_t v38 = (void *)v87;
      uint64_t v33 = v0;
      Swift::Int v200 = v112;
      if (v140)
      {
        uint64_t v144 = v112[7];
        swift_bridgeObjectRelease();
        *(void *)(v144 + 8 * v136) = v132;
        uint64_t v0 = v195;
      }
      else
      {
        v112[(v136 >> 6) + 8] |= 1 << v136;
        uint64_t v145 = (uint64_t *)(v112[6] + 16 * v136);
        *uint64_t v145 = v133;
        v145[1] = v212;
        *(void *)(v112[7] + 8 * v136) = v132;
        uint64_t v146 = v112[2];
        BOOL v147 = __OFADD__(v146, 1);
        uint64_t v148 = v146 + 1;
        uint64_t v0 = v195;
        if (v147) {
          goto LABEL_167;
        }
        v112[2] = v148;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v37 = v210;
LABEL_119:
      if (!sub_395FC(v37, (uint64_t)_swiftEmptySetSingleton)
        && (uint64_t v149 = *v191, *(void *)(*v191 + 16))
        && (uint64_t v150 = sub_56168(v37), (v151 & 1) != 0))
      {
        uint64_t v152 = (uint64_t *)(*(void *)(v149 + 56) + 16 * v150);
        uint64_t v154 = *v152;
        uint64_t v153 = v152[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v155 = sub_396C8(v154, v153, (uint64_t)_swiftEmptySetSingleton);
        swift_bridgeObjectRelease();
        if (v155)
        {
          swift_bridgeObjectRelease();
          sub_73A4(&v222[0]._countAndFlagsBits, v37);
          v242._uint64_t countAndFlagsBits = 0;
          v242._object = (void *)0xE000000000000000;
          sub_1FB8F0(v242);
          swift_bridgeObjectRelease();
          *uint64_t v185 = v37;
          v243._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v243);
          swift_bridgeObjectRelease();
          v244._uint64_t countAndFlagsBits = 8744;
          v244._object = (void *)0xE200000000000000;
          sub_1FB8F0(v244);
          uint64_t v156 = v201;
          if (sub_1FB8D0() < 21)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_51EA0(20);
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            uint64_t v157 = sub_1FB8A0();
            unint64_t v159 = v158;
            swift_bridgeObjectRelease();
            v222[0]._uint64_t countAndFlagsBits = v157;
            v222[0]._object = v159;
            v245._uint64_t countAndFlagsBits = 10911970;
            v245._object = (void *)0xA300000000000000;
            sub_1FB8F0(v245);
            uint64_t v156 = v222[0]._countAndFlagsBits;
            uint64_t v38 = v222[0]._object;
          }
          v246._uint64_t countAndFlagsBits = v156;
          v246._object = v38;
          sub_1FB8F0(v246);
          swift_bridgeObjectRelease();
          v247._uint64_t countAndFlagsBits = 10530;
          v247._object = (void *)0xE200000000000000;
          sub_1FB8F0(v247);
          v248._uint64_t countAndFlagsBits = 0;
          v248._object = (void *)0xE000000000000000;
          sub_1FB8F0(v248);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_7094(&v222[0]._countAndFlagsBits, v154, v153);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      if (++v33 == v199) {
        goto LABEL_155;
      }
    }
    uint64_t v48 = *(void *)(*(void *)(v202 + 56) + 8 * v46);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
    uint64_t v49 = *(void *)(v48 + 16);
    if (v49)
    {
      uint64_t v204 = v40;
      uint64_t v50 = (uint64_t *)(v48 + 64);
      while (1)
      {
        uint64_t v215 = v49;
        uint64_t v51 = *(v50 - 1);
        uint64_t v52 = *v50;
        uint64_t v54 = v217[20];
        uint64_t v53 = v217[21];
        sub_5D64(v221, v54);
        uint64_t v55 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v53 + 8);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v56 = v55(v51, v52, v54, v53);
        uint64_t v58 = v57;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        uint64_t v59 = v217[20];
        uint64_t v60 = v217[21];
        sub_5D64(v221, v59);
        BOOL v62 = v56 == (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v60 + 8))(v218, v220, v59, v60)
           && v58 == v61;
        if (v62) {
          break;
        }
        char v63 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v63) {
          goto LABEL_66;
        }
        v50 += 5;
        uint64_t v49 = v215 - 1;
        if (v215 == 1)
        {
          swift_bridgeObjectRelease();
          uint64_t v0 = v195;
          uint64_t v45 = v212;
          uint64_t v33 = v207;
          uint64_t v38 = v208;
          uint64_t v40 = v204;
          uint64_t v37 = v210;
          if (v204) {
            goto LABEL_43;
          }
          goto LABEL_77;
        }
      }
      swift_bridgeObjectRelease_n();
LABEL_66:
      swift_bridgeObjectRelease();
      v230._uint64_t countAndFlagsBits = 0;
      v230._object = (void *)0xE000000000000000;
      sub_1FB8F0(v230);
      swift_bridgeObjectRelease();
      uint64_t v37 = v210;
      *unint64_t v186 = v210;
      v231._uint64_t countAndFlagsBits = sub_1FC580();
      sub_1FB8F0(v231);
      swift_bridgeObjectRelease();
      v232._uint64_t countAndFlagsBits = 8744;
      v232._object = (void *)0xE200000000000000;
      sub_1FB8F0(v232);
      uint64_t v38 = v208;
      if (sub_1FB8D0() < 21)
      {
        swift_bridgeObjectRetain();
        v93._uint64_t countAndFlagsBits = v201;
        uint64_t v94 = v208;
      }
      else
      {
        swift_bridgeObjectRetain();
        sub_51EA0(20);
        swift_bridgeObjectRelease();
        uint64_t v90 = sub_1FB8A0();
        char v92 = v91;
        swift_bridgeObjectRelease();
        v222[0]._uint64_t countAndFlagsBits = v90;
        v222[0]._object = v92;
        v233._uint64_t countAndFlagsBits = 10911970;
        v233._object = (void *)0xA300000000000000;
        sub_1FB8F0(v233);
        v93._uint64_t countAndFlagsBits = v222[0]._countAndFlagsBits;
        uint64_t v94 = v222[0]._object;
      }
      uint64_t v0 = v195;
      uint64_t v33 = v207;
      uint64_t v40 = v204;
      v93._object = v94;
      sub_1FB8F0(v93);
      swift_bridgeObjectRelease();
      v234._uint64_t countAndFlagsBits = 10530;
      v234._object = (void *)0xE200000000000000;
      sub_1FB8F0(v234);
      v235._uint64_t countAndFlagsBits = 0;
      v235._object = (void *)0xE000000000000000;
      sub_1FB8F0(v235);
      swift_bridgeObjectRelease();
      sub_73A4(&v222[0]._countAndFlagsBits, v210);
      uint64_t v45 = v212;
      if (v204) {
        goto LABEL_43;
      }
      goto LABEL_77;
    }
    swift_bridgeObjectRelease();
LABEL_42:
    if (!v40) {
      goto LABEL_77;
    }
    goto LABEL_43;
  }
  swift_bridgeObjectRetain();
LABEL_155:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_160:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v181 = *(void *)(v0 + 2512);
  swift_bridgeObjectRelease();
  sub_55F38(v181, &qword_274178);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  double v182 = *(uint64_t (**)(void *))(v0 + 8);
  return v182(_swiftEmptySetSingleton);
}

uint64_t sub_1D3558(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 2592) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1D5B94;
  }
  else
  {
    *(void *)(v4 + 2600) = a1;
    uint64_t v5 = sub_1D3690;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1D3690()
{
  uint64_t v216 = v0;
  BOOL v175 = v0 + 289;
  uint64_t v1 = v0[324];
  uint64_t v2 = v0[322];
  uint64_t v3 = v0[311];
  uint64_t v4 = sub_1CFAA4(v0[325]);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  v0[282] = v4;
  uint64_t v5 = sub_1CF890(v2, v0 + 282);
  swift_bridgeObjectRelease();
  uint64_t v180 = sub_507F8(v5);
  swift_bridgeObjectRelease();
  sub_1D61B0(v3);
  uint64_t v6 = v0[297];
  int v203 = v0;
  uint64_t v192 = *(void *)(v6 + 16);
  if (v192)
  {
    uint64_t v173 = v0 + 292;
    uint64_t v174 = v0 + 290;
    uint64_t v178 = v0 + 293;
    os_log_type_t v179 = v0 + 291;
    int v176 = v0 + 294;
    uint64_t v177 = v0 + 295;
    uint64_t v194 = v0[317];
    uint64_t v7 = (void *)v0[298];
    long long v191 = v7 + 12;
    uint64_t v209 = v7;
    uint64_t v212 = v7 + 17;
    uint64_t v8 = v0[301];
    uint64_t v181 = (void (**)(uint64_t, uint64_t))(v0[304] + 8);
    double v182 = (void (**)(uint64_t, uint64_t))(v0[307] + 8);
    long long v189 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v8 + 48);
    uint64_t v190 = v6 + 32;
    uint64_t v183 = (void (**)(uint64_t, uint64_t))(v8 + 8);
    char v184 = (void (**)(uint64_t, uint64_t, uint64_t))(v8 + 32);
    swift_bridgeObjectRetain();
    uint64_t v9 = 0;
    long long v193 = _swiftEmptyDictionarySingleton;
    uint64_t v201 = _swiftEmptyDictionarySingleton;
    uint64_t v185 = v1;
    uint64_t v10 = v1;
    uint64_t v198 = v0 + 282;
    uint64_t v11 = v0;
    while (1)
    {
      uint64_t v202 = v9;
      uint64_t v12 = v190 + 104 * v9;
      uint64_t v14 = *(void *)v12;
      uint64_t v13 = *(void *)(v12 + 8);
      unint64_t v15 = *(void **)(v12 + 16);
      uint64_t v213 = *(void *)(v12 + 24);
      uint64_t v16 = *(void *)(v12 + 32);
      uint64_t v200 = *(void *)(v12 + 40);
      uint64_t v17 = *(void *)(v12 + 48);
      int v197 = *(unsigned __int8 *)(v12 + 56);
      unint64_t v18 = *(uint64_t **)(v12 + 72);
      uint64_t v19 = *v198;
      uint64_t v195 = v13;
      uint64_t v206 = *(void *)v12;
      if (*(void *)(*v198 + 16) && (uint64_t v20 = sub_56168(v14), (v21 & 1) != 0))
      {
        uint64_t v22 = (uint64_t *)(*(void *)(v19 + 56) + 16 * v20);
        uint64_t v24 = *v22;
        uint64_t v23 = v22[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        LOBYTE(v24) = sub_396C8(v24, v23, v180);
        swift_bridgeObjectRelease();
        if (v24)
        {
          v218._uint64_t countAndFlagsBits = 0;
          v218._object = (void *)0xE000000000000000;
          sub_1FB8F0(v218);
          swift_bridgeObjectRelease();
          *uint64_t v177 = v14;
          v219._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v219);
          swift_bridgeObjectRelease();
          v220._uint64_t countAndFlagsBits = 8744;
          v220._object = (void *)0xE200000000000000;
          sub_1FB8F0(v220);
          if (sub_1FB8D0() < 21)
          {
            swift_bridgeObjectRetain();
            v28._uint64_t countAndFlagsBits = v13;
            object = v15;
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_51EA0(20);
            swift_bridgeObjectRelease();
            uint64_t v14 = v206;
            uint64_t v25 = sub_1FB8A0();
            uint64_t v27 = v26;
            swift_bridgeObjectRelease();
            v215[0]._uint64_t countAndFlagsBits = v25;
            v215[0]._object = v27;
            v221._uint64_t countAndFlagsBits = 10911970;
            v221._object = (void *)0xA300000000000000;
            sub_1FB8F0(v221);
            v28._uint64_t countAndFlagsBits = v215[0]._countAndFlagsBits;
            object = v215[0]._object;
          }
          v28._object = object;
          sub_1FB8F0(v28);
          swift_bridgeObjectRelease();
          v222._uint64_t countAndFlagsBits = 10530;
          v222._object = (void *)0xE200000000000000;
          sub_1FB8F0(v222);
          v223._uint64_t countAndFlagsBits = 0;
          v223._object = (void *)0xE000000000000000;
          sub_1FB8F0(v223);
          swift_bridgeObjectRelease();
          sub_73A4(&v215[0]._countAndFlagsBits, v14);
        }
      }
      else
      {
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
      }
      uint64_t v30 = v209[15];
      uint64_t v31 = v209[16];
      sub_5D64(v191, v30);
      uint64_t v32 = (*(uint64_t (**)(uint64_t, void *, uint64_t, uint64_t))(v31 + 8))(v13, v15, v30, v31);
      uint64_t v34 = v33;
      uint64_t v205 = v15;
      uint64_t v214 = v16;
      uint64_t v204 = v33;
      uint64_t v199 = v32;
      if (*(void *)(v194 + 16))
      {
        uint64_t v35 = v32;
        swift_bridgeObjectRetain();
        unint64_t v36 = sub_4C328(v35, v34);
        if (v37)
        {
          uint64_t v38 = *(void *)(*(void *)(v194 + 56) + 8 * v36);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          uint64_t v39 = *(void *)(v38 + 16);
          if (v39)
          {
            uint64_t v196 = v17;
            uint64_t v186 = v10;
            uint64_t v40 = (uint64_t *)(v38 + 64);
            while (1)
            {
              uint64_t v207 = v39;
              uint64_t v41 = *v40;
              uint64_t v210 = *(v40 - 1);
              uint64_t v42 = v209[20];
              uint64_t v43 = v209[21];
              sub_5D64(v212, v42);
              uint64_t v44 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v43 + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v45 = v43;
              uint64_t v16 = v214;
              uint64_t v46 = v44(v210, v41, v42, v45);
              uint64_t v48 = v47;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v49 = v209[20];
              uint64_t v50 = v209[21];
              sub_5D64(v212, v49);
              BOOL v52 = v46 == (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v50 + 8))(v213, v214, v49, v50)&& v48 == v51;
              if (v52) {
                break;
              }
              char v53 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v53) {
                goto LABEL_30;
              }
              v40 += 5;
              uint64_t v39 = v207 - 1;
              if (v207 == 1)
              {
                swift_bridgeObjectRelease();
                uint64_t v11 = v203;
                uint64_t v10 = v186;
                uint64_t v17 = v196;
                uint64_t v54 = v206;
                uint64_t v34 = v204;
                if (v196) {
                  goto LABEL_34;
                }
                goto LABEL_62;
              }
            }
            swift_bridgeObjectRelease_n();
LABEL_30:
            swift_bridgeObjectRelease();
            v224._uint64_t countAndFlagsBits = 0;
            v224._object = (void *)0xE000000000000000;
            sub_1FB8F0(v224);
            swift_bridgeObjectRelease();
            uint64_t v54 = v206;
            *int v176 = v206;
            v225._uint64_t countAndFlagsBits = sub_1FC580();
            sub_1FB8F0(v225);
            swift_bridgeObjectRelease();
            v226._uint64_t countAndFlagsBits = 8744;
            v226._object = (void *)0xE200000000000000;
            sub_1FB8F0(v226);
            uint64_t v10 = v186;
            uint64_t v17 = v196;
            if (sub_1FB8D0() < 21)
            {
              swift_bridgeObjectRetain();
              v58._uint64_t countAndFlagsBits = v195;
              uint64_t v59 = v205;
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_51EA0(20);
              swift_bridgeObjectRelease();
              uint64_t v55 = sub_1FB8A0();
              uint64_t v57 = v56;
              swift_bridgeObjectRelease();
              v215[0]._uint64_t countAndFlagsBits = v55;
              v215[0]._object = v57;
              v227._uint64_t countAndFlagsBits = 10911970;
              v227._object = (void *)0xA300000000000000;
              sub_1FB8F0(v227);
              v58._uint64_t countAndFlagsBits = v215[0]._countAndFlagsBits;
              uint64_t v59 = v215[0]._object;
            }
            uint64_t v11 = v203;
            v58._object = v59;
            sub_1FB8F0(v58);
            swift_bridgeObjectRelease();
            v228._uint64_t countAndFlagsBits = 10530;
            v228._object = (void *)0xE200000000000000;
            sub_1FB8F0(v228);
            v229._uint64_t countAndFlagsBits = 0;
            v229._object = (void *)0xE000000000000000;
            sub_1FB8F0(v229);
            swift_bridgeObjectRelease();
            sub_73A4(&v215[0]._countAndFlagsBits, v206);
            uint64_t v34 = v204;
            if (!v196) {
              goto LABEL_62;
            }
LABEL_34:
            uint64_t v60 = v201[2];
            swift_bridgeObjectRetain();
            if (v60)
            {
              swift_bridgeObjectRetain();
              unint64_t v61 = sub_4C328(v200, v17);
              if (v62)
              {
                char v63 = (uint64_t *)(v201[7] + 16 * v61);
                uint64_t v65 = *v63;
                uint64_t v64 = (void *)v63[1];
                swift_bridgeObjectRetain();
                swift_bridgeObjectRelease_n();
                goto LABEL_44;
              }
              swift_bridgeObjectRelease();
            }
            uint64_t v66 = v10;
            uint64_t v67 = v203[309];
            uint64_t v68 = v203[308];
            uint64_t v69 = v203[306];
            uint64_t v70 = v203[305];
            uint64_t v71 = v203[303];
            swift_bridgeObjectRetain();
            sub_1FB120();
            sub_1FB180();
            (*v182)(v68, v69);
            sub_1FB160();
            (*v181)(v70, v71);
            uint64_t v72 = sub_1FB140();
            uint64_t v73 = *(void *)(v72 - 8);
            int v74 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v73 + 48))(v67, 1, v72);
            uint64_t v75 = v203[309];
            if (v74 == 1)
            {
              sub_55F38(v203[309], &qword_274170);
              uint64_t countAndFlagsBits = (uint64_t)v201;
              swift_bridgeObjectRetain();
              unint64_t v77 = sub_4C328(v200, v17);
              char v79 = v78;
              swift_bridgeObjectRelease();
              if (v79)
              {
                char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
                v215[0]._uint64_t countAndFlagsBits = (uint64_t)v201;
                uint64_t v10 = v66;
                uint64_t v54 = v206;
                if ((isUniquelyReferenced_nonNull_native & 1) == 0)
                {
                  sub_1241F0();
                  uint64_t countAndFlagsBits = v215[0]._countAndFlagsBits;
                }
                swift_bridgeObjectRelease();
                uint64_t v201 = (void *)countAndFlagsBits;
                sub_14D360(v77, countAndFlagsBits);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
              }
              else
              {
                swift_bridgeObjectRelease();
                uint64_t v10 = v66;
                uint64_t v54 = v206;
              }
              uint64_t v16 = v214;
LABEL_54:
              uint64_t v34 = v204;
LABEL_61:
              uint64_t v11 = v203;
              goto LABEL_62;
            }
            uint64_t v65 = sub_1FB130();
            uint64_t v64 = v81;
            (*(void (**)(uint64_t, uint64_t))(v73 + 8))(v75, v72);
            swift_bridgeObjectRetain();
            char v82 = swift_isUniquelyReferenced_nonNull_native();
            v215[0]._uint64_t countAndFlagsBits = (uint64_t)v201;
            sub_7185C(v65, (uint64_t)v64, v200, v17, v82);
            uint64_t v201 = (void *)v215[0]._countAndFlagsBits;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = v66;
            uint64_t v34 = v204;
            uint64_t v16 = v214;
LABEL_44:
            char v83 = sub_1D00D8();
            uint64_t v84 = v83;
            uint64_t v11 = (uint64_t *)v83[2];
            if (v11)
            {
              BOOL v85 = v83[4] == v65 && v83[5] == (void)v64;
              if (!v85 && (sub_1FC5F0() & 1) == 0)
              {
                if (v11 == (uint64_t *)((char *)&dword_0 + 1)) {
                  goto LABEL_51;
                }
                BOOL v86 = v84[6] == v65 && v84[7] == (void)v64;
                if (!v86 && (sub_1FC5F0() & 1) == 0)
                {
                  if (v11 != (uint64_t *)((char *)&dword_0 + 2))
                  {
                    unint64_t v124 = (unint64_t)(v84 + 9);
                    uint64_t v121 = 2;
                    while (1)
                    {
                      uint64_t v162 = v10;
                      Swift::String v163 = (uint64_t *)(v121 + 1);
                      if (__OFADD__(v121, 1)) {
                        goto LABEL_151;
                      }
                      BOOL v164 = *(void *)(v124 - 8) == v65 && *(void *)v124 == (void)v64;
                      if (v164 || (sub_1FC5F0() & 1) != 0)
                      {
                        swift_bridgeObjectRelease();
                        swift_bridgeObjectRelease();
                        uint64_t v10 = v162;
                        uint64_t v54 = v206;
                        uint64_t v11 = v203;
                        uint64_t v34 = v204;
                        goto LABEL_62;
                      }
                      ++v121;
                      v124 += 16;
                      BOOL v52 = v163 == v11;
                      uint64_t v10 = v162;
                      if (v52) {
                        goto LABEL_51;
                      }
                    }
                  }
                  goto LABEL_51;
                }
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v54 = v206;
              goto LABEL_61;
            }
LABEL_51:
            swift_bridgeObjectRelease();
            v215[0]._uint64_t countAndFlagsBits = 0;
            v215[0]._object = (void *)0xE000000000000000;
            v230._uint64_t countAndFlagsBits = 0;
            v230._object = (void *)0xE000000000000000;
            sub_1FB8F0(v230);
            swift_bridgeObjectRelease();
            *uint64_t v178 = v206;
            v231._uint64_t countAndFlagsBits = sub_1FC580();
            sub_1FB8F0(v231);
            swift_bridgeObjectRelease();
            v232._uint64_t countAndFlagsBits = 40;
            v232._object = (void *)0xE100000000000000;
            sub_1FB8F0(v232);
            v233._uint64_t countAndFlagsBits = v65;
            uint64_t v54 = v206;
            v233._object = v64;
            sub_1FB8F0(v233);
            swift_bridgeObjectRelease();
            v234._uint64_t countAndFlagsBits = 41;
            v234._object = (void *)0xE100000000000000;
            sub_1FB8F0(v234);
            sub_1FB8F0(v215[0]);
            swift_bridgeObjectRelease();
            sub_73A4(&v215[0]._countAndFlagsBits, v206);
            goto LABEL_54;
          }
        }
        swift_bridgeObjectRelease();
        uint64_t v54 = v206;
        if (v17) {
          goto LABEL_34;
        }
      }
      else
      {
        uint64_t v54 = v206;
        if (v17) {
          goto LABEL_34;
        }
      }
LABEL_62:
      uint64_t v87 = v11[312];
      uint64_t v88 = v11[300];
      sub_1D6148(v11[314], v87);
      if ((*v189)(v87, 1, v88) == 1)
      {
        sub_55F38(v11[312], &qword_274178);
        if (v197)
        {
          v215[0]._uint64_t countAndFlagsBits = 0;
          v215[0]._object = (void *)0xE000000000000000;
          v235._uint64_t countAndFlagsBits = 0;
          v235._object = (void *)0xE000000000000000;
          sub_1FB8F0(v235);
          swift_bridgeObjectRelease();
          *os_log_type_t v179 = v54;
          v236._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v236);
          swift_bridgeObjectRelease();
          v237._uint64_t countAndFlagsBits = 0x6564726F65727028;
          v237._object = (void *)0xEA00000000002972;
          sub_1FB8F0(v237);
          sub_1FB8F0(v215[0]);
          swift_bridgeObjectRelease();
          sub_73A4(&v215[0]._countAndFlagsBits, v54);
        }
      }
      else
      {
        (*v184)(v11[302], v11[312], v11[300]);
        if (v18)
        {
          swift_bridgeObjectRetain();
          sub_1FB3E0();
          uint64_t v10 = v185;
          if (v185)
          {
            swift_bridgeObjectRelease();
            if (qword_26C3C8 != -1) {
              swift_once();
            }
            uint64_t v89 = sub_1FB430();
            sub_6DBC8(v89, (uint64_t)qword_274058);
            swift_errorRetain();
            swift_errorRetain();
            uint64_t v90 = sub_1FB410();
            os_log_type_t v91 = sub_1FBDC0();
            if (os_log_type_enabled(v90, v91))
            {
              uint64_t v92 = swift_slowAlloc();
              Swift::String v93 = (void *)swift_slowAlloc();
              *(_DWORD *)uint64_t v92 = 138412290;
              swift_errorRetain();
              uint64_t v94 = _swift_stdlib_bridgeErrorToNSError();
              *(void *)(v92 + 4) = v94;
              *Swift::String v93 = v94;
              swift_errorRelease();
              swift_errorRelease();
              _os_log_impl(&dword_0, v90, v91, "Error matching artwork URL against regex: %@", (uint8_t *)v92, 0xCu);
              sub_12124(&qword_26F4F8);
              swift_arrayDestroy();
              swift_slowDealloc();
              swift_slowDealloc();
            }
            else
            {

              swift_errorRelease();
              swift_errorRelease();
            }
            uint64_t v34 = v204;
            uint64_t v101 = v11[302];
            uint64_t v102 = v11[300];
            swift_errorRelease();
            (*v183)(v101, v102);
            uint64_t v185 = 0;
          }
          else
          {
            uint64_t v95 = v11[299];
            swift_bridgeObjectRelease();
            uint64_t v96 = sub_12124(&qword_274180);
            int v97 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v96 - 8) + 48))(v95, 1, v96);
            uint64_t v98 = v11[302];
            uint64_t v99 = v11[300];
            uint64_t v100 = v11[299];
            if (v97 == 1)
            {
              (*v183)(v11[302], v11[300]);
              sub_55F38(v100, &qword_274160);
              uint64_t v185 = 0;
              uint64_t v54 = v206;
            }
            else
            {
              v215[0]._uint64_t countAndFlagsBits = 0;
              v215[0]._object = (void *)0xE000000000000000;
              v238._uint64_t countAndFlagsBits = 0;
              v238._object = (void *)0xE000000000000000;
              sub_1FB8F0(v238);
              swift_bridgeObjectRelease();
              uint64_t v54 = v206;
              *uint64_t v173 = v206;
              v239._uint64_t countAndFlagsBits = sub_1FC580();
              sub_1FB8F0(v239);
              swift_bridgeObjectRelease();
              v240._uint64_t countAndFlagsBits = 0x29786567657228;
              v240._object = (void *)0xE700000000000000;
              sub_1FB8F0(v240);
              sub_1FB8F0(v215[0]);
              swift_bridgeObjectRelease();
              sub_73A4(&v215[0]._countAndFlagsBits, v206);
              (*v183)(v98, v99);
              sub_55F38(v100, &qword_274160);
              uint64_t v185 = 0;
            }
            uint64_t v34 = v204;
          }
        }
        else
        {
          (*v183)(v11[302], v11[300]);
        }
      }
      if (sub_395FC(v54, (uint64_t)_swiftEmptySetSingleton)) {
        goto LABEL_79;
      }
      uint64_t v103 = v193;
      if (v193[2])
      {
        swift_bridgeObjectRetain();
        unint64_t v104 = sub_4C328(v199, v34);
        if (v105)
        {
          int v106 = *(void **)(v193[7] + 8 * v104);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRelease();
          if (v106[2])
          {
            uint64_t v211 = v106[2];
            uint64_t v187 = v10;
            swift_bridgeObjectRetain();
            uint64_t v208 = v106;
            uint64_t v107 = v106 + 8;
            while (1)
            {
              uint64_t v108 = *(v107 - 1);
              uint64_t v109 = *v107;
              uint64_t v110 = v209[20];
              uint64_t v111 = v209[21];
              sub_5D64(v212, v110);
              long long v112 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v111 + 8);
              swift_bridgeObjectRetain();
              swift_bridgeObjectRetain();
              uint64_t v16 = v214;
              uint64_t v113 = v112(v108, v109, v110, v111);
              uint64_t v115 = v114;
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              uint64_t v116 = v209[20];
              uint64_t v117 = v209[21];
              sub_5D64(v212, v116);
              if (v113 == (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v117 + 8))(v213, v214, v116, v117)&& v115 == v118)
              {
                break;
              }
              char v120 = sub_1FC5F0();
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              if (v120) {
                goto LABEL_113;
              }
              v107 += 5;
              if (!--v211)
              {
                swift_bridgeObjectRelease();
                uint64_t v11 = v203;
                uint64_t v34 = v204;
                uint64_t v10 = v187;
                uint64_t v54 = v206;
                goto LABEL_117;
              }
            }
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
LABEL_113:
            swift_bridgeObjectRelease();
            v248._uint64_t countAndFlagsBits = 0;
            v248._object = (void *)0xE000000000000000;
            sub_1FB8F0(v248);
            swift_bridgeObjectRelease();
            uint64_t v54 = v206;
            *uint64_t v174 = v206;
            v249._uint64_t countAndFlagsBits = sub_1FC580();
            sub_1FB8F0(v249);
            swift_bridgeObjectRelease();
            v250._uint64_t countAndFlagsBits = 8744;
            v250._object = (void *)0xE200000000000000;
            sub_1FB8F0(v250);
            uint64_t v11 = v203;
            uint64_t v10 = v187;
            if (sub_1FB8D0() < 21)
            {
              swift_bridgeObjectRetain();
              v152._uint64_t countAndFlagsBits = v195;
              uint64_t v153 = v205;
            }
            else
            {
              swift_bridgeObjectRetain();
              sub_51EA0(20);
              swift_bridgeObjectRelease();
              uint64_t v149 = sub_1FB8A0();
              char v151 = v150;
              swift_bridgeObjectRelease();
              v215[0]._uint64_t countAndFlagsBits = v149;
              v215[0]._object = v151;
              v251._uint64_t countAndFlagsBits = 10911970;
              v251._object = (void *)0xA300000000000000;
              sub_1FB8F0(v251);
              v152._uint64_t countAndFlagsBits = v215[0]._countAndFlagsBits;
              uint64_t v153 = v215[0]._object;
            }
            uint64_t v34 = v204;
            v152._object = v153;
            sub_1FB8F0(v152);
            swift_bridgeObjectRelease();
            v252._uint64_t countAndFlagsBits = 10530;
            v252._object = (void *)0xE200000000000000;
            sub_1FB8F0(v252);
            v253._uint64_t countAndFlagsBits = 0;
            v253._object = (void *)0xE000000000000000;
            sub_1FB8F0(v253);
            swift_bridgeObjectRelease();
            sub_73A4(&v215[0]._countAndFlagsBits, v206);
            int v106 = v208;
          }
LABEL_117:
          if (!sub_395FC(v54, (uint64_t)_swiftEmptySetSingleton))
          {
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              int v106 = sub_43BBC(0, v106[2] + 1, 1, v106);
            }
            unint64_t v155 = v106[2];
            unint64_t v154 = v106[3];
            uint64_t v156 = v106;
            uint64_t v157 = v193;
            uint64_t v188 = v10;
            if (v155 >= v154 >> 1)
            {
              unint64_t v165 = sub_43BBC((void *)(v154 > 1), v155 + 1, 1, v106);
              uint64_t v157 = v193;
              uint64_t v156 = v165;
            }
            uint64_t v158 = (uint64_t)v156;
            v156[2] = v155 + 1;
            unint64_t v159 = &v156[5 * v155];
            v159[4] = v54;
            v159[5] = v199;
            v159[6] = v34;
            v159[7] = v213;
            v159[8] = v16;
            uint64_t v160 = (uint64_t)v157;
            char v161 = swift_isUniquelyReferenced_nonNull_native();
            v215[0]._uint64_t countAndFlagsBits = v160;
            sub_7171C(v158, v199, v34, v161);
            long long v193 = (void *)v215[0]._countAndFlagsBits;
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v10 = v188;
            goto LABEL_103;
          }
          swift_bridgeObjectRelease();
LABEL_79:
          swift_bridgeObjectRelease();
          goto LABEL_103;
        }
        swift_bridgeObjectRelease();
      }
      uint64_t v11 = v18;
      uint64_t v121 = v10;
      sub_12124(&qword_26D5C8);
      uint64_t v64 = (void *)swift_allocObject();
      *((_OWORD *)v64 + 1) = xmmword_1FD2A0;
      v64[4] = v54;
      v64[5] = v199;
      void v64[6] = v34;
      v64[7] = v213;
      v64[8] = v16;
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      char v122 = swift_isUniquelyReferenced_nonNull_native();
      v215[0]._uint64_t countAndFlagsBits = (uint64_t)v193;
      unint64_t v124 = sub_4C328(v199, v34);
      uint64_t v125 = v193[2];
      BOOL v126 = (v123 & 1) == 0;
      uint64_t v127 = v125 + v126;
      if (__OFADD__(v125, v126))
      {
        __break(1u);
LABEL_150:
        __break(1u);
LABEL_151:
        __break(1u);
        swift_once();
        uint64_t v166 = sub_1FB430();
        sub_6DBC8(v166, (uint64_t)qword_274058);
        swift_bridgeObjectRetain();
        BOOL v167 = sub_1FB410();
        os_log_type_t v168 = sub_1FBDC0();
        if (os_log_type_enabled(v167, v168))
        {
          uint64_t v169 = (uint8_t *)swift_slowAlloc();
          v215[0]._uint64_t countAndFlagsBits = swift_slowAlloc();
          *(_DWORD *)uint64_t v169 = 136315138;
          swift_bridgeObjectRetain();
          void *v64 = sub_D5890(v121, v124, &v215[0]._countAndFlagsBits);
          sub_1FBED0();
          swift_bridgeObjectRelease_n();
          _os_log_impl(&dword_0, v167, v168, "Similar titles in library: %s", v169, 0xCu);
          swift_arrayDestroy();
          uint64_t v11 = v203;
          swift_slowDealloc();
          swift_slowDealloc();
        }
        else
        {
          swift_bridgeObjectRelease_n();
        }

        goto LABEL_143;
      }
      char v128 = v123;
      if (v193[3] >= v127)
      {
        if ((v122 & 1) == 0)
        {
          sub_124038();
          uint64_t v103 = (void *)v215[0]._countAndFlagsBits;
        }
      }
      else
      {
        sub_11F068(v127, v122);
        uint64_t v129 = v215[0]._countAndFlagsBits;
        unint64_t v130 = sub_4C328(v199, v204);
        if ((v128 & 1) != (v131 & 1))
        {
          return sub_1FC770();
        }
        unint64_t v124 = v130;
        uint64_t v103 = (void *)v129;
      }
      uint64_t v10 = v121;
      long long v193 = v103;
      if (v128)
      {
        uint64_t v132 = v103[7];
        swift_bridgeObjectRelease();
        *(void *)(v132 + 8 * v124) = v64;
      }
      else
      {
        v103[(v124 >> 6) + 8] |= 1 << v124;
        uint64_t v133 = (uint64_t *)(v103[6] + 16 * v124);
        uint64_t v121 = (uint64_t)v205;
        *uint64_t v133 = v199;
        v133[1] = v204;
        *(void *)(v103[7] + 8 * v124) = v64;
        uint64_t v134 = v103[2];
        BOOL v135 = __OFADD__(v134, 1);
        uint64_t v136 = v134 + 1;
        if (v135) {
          goto LABEL_150;
        }
        v103[2] = v136;
        swift_bridgeObjectRetain();
      }
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v54 = v206;
      uint64_t v11 = v203;
LABEL_103:
      if (!sub_395FC(v54, (uint64_t)_swiftEmptySetSingleton)
        && (uint64_t v137 = *v198, *(void *)(*v198 + 16))
        && (uint64_t v138 = sub_56168(v54), (v139 & 1) != 0))
      {
        char v140 = (uint64_t *)(*(void *)(v137 + 56) + 16 * v138);
        uint64_t v142 = *v140;
        uint64_t v141 = v140[1];
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        char v143 = sub_396C8(v142, v141, (uint64_t)_swiftEmptySetSingleton);
        swift_bridgeObjectRelease();
        if (v143)
        {
          swift_bridgeObjectRelease();
          sub_73A4(&v215[0]._countAndFlagsBits, v54);
          v241._uint64_t countAndFlagsBits = 0;
          v241._object = (void *)0xE000000000000000;
          sub_1FB8F0(v241);
          swift_bridgeObjectRelease();
          *BOOL v175 = v54;
          v242._uint64_t countAndFlagsBits = sub_1FC580();
          sub_1FB8F0(v242);
          swift_bridgeObjectRelease();
          v243._uint64_t countAndFlagsBits = 8744;
          v243._object = (void *)0xE200000000000000;
          sub_1FB8F0(v243);
          uint64_t v144 = v195;
          uint64_t v145 = v205;
          if (sub_1FB8D0() < 21)
          {
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
          }
          else
          {
            swift_bridgeObjectRetain();
            sub_51EA0(20);
            swift_bridgeObjectRelease_n();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            swift_bridgeObjectRelease();
            uint64_t v146 = sub_1FB8A0();
            uint64_t v148 = v147;
            swift_bridgeObjectRelease();
            v215[0]._uint64_t countAndFlagsBits = v146;
            v215[0]._object = v148;
            v244._uint64_t countAndFlagsBits = 10911970;
            v244._object = (void *)0xA300000000000000;
            sub_1FB8F0(v244);
            uint64_t v144 = v215[0]._countAndFlagsBits;
            uint64_t v145 = v215[0]._object;
          }
          v245._uint64_t countAndFlagsBits = v144;
          v245._object = v145;
          sub_1FB8F0(v245);
          swift_bridgeObjectRelease();
          v246._uint64_t countAndFlagsBits = 10530;
          v246._object = (void *)0xE200000000000000;
          sub_1FB8F0(v246);
          v247._uint64_t countAndFlagsBits = 0;
          v247._object = (void *)0xE000000000000000;
          sub_1FB8F0(v247);
        }
        else
        {
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          sub_7094(&v215[0]._countAndFlagsBits, v142, v141);
        }
      }
      else
      {
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      swift_bridgeObjectRelease();
      uint64_t v9 = v202 + 1;
      if (v202 + 1 == v192) {
        goto LABEL_138;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v11 = v0;
LABEL_138:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
LABEL_143:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v170 = v11[314];
  swift_bridgeObjectRelease();
  sub_55F38(v170, &qword_274178);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v171 = (uint64_t (*)(void *))v11[1];
  return v171(_swiftEmptySetSingleton);
}

uint64_t sub_1D5AA0()
{
  sub_55F38(*(void *)(v0 + 2512), &qword_274178);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D5B94()
{
  uint64_t v1 = v0[314];
  sub_1D61B0(v0[311]);
  sub_55F38(v1, &qword_274178);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t destroy for PostHydrationFilteringCandidateMetadata()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for PostHydrationFilteringCandidateMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  uint64_t v5 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v5;
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  long long v7 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 85) = *(void *)(a2 + 85);
  *(_OWORD *)(a1 + 72) = v7;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for PostHydrationFilteringCandidateMetadata(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v4 = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 85) = *(void *)(a2 + 85);
  *(_OWORD *)(a1 + 72) = v4;
  return a1;
}

__n128 initializeWithTake for PostHydrationFilteringCandidateMetadata(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 77) = *(_OWORD *)(a2 + 77);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t assignWithTake for PostHydrationFilteringCandidateMetadata(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v6;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v7 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v7;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  *(void *)(a1 + 85) = *(void *)(a2 + 85);
  return a1;
}

uint64_t getEnumTagSinglePayload for PostHydrationFilteringCandidateMetadata(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 93)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for PostHydrationFilteringCandidateMetadata(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 92) = 0;
    *(_DWORD *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 93) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 93) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for PostHydrationFilteringCandidateMetadata()
{
  return &type metadata for PostHydrationFilteringCandidateMetadata;
}

uint64_t dispatch thunk of BookRecommendationPostHydrationFilteringServiceType.storeIDsOfDuplicateAssets(fromCandidates:collectionType:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a5 + 8) + **(int **)(a5 + 8));
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v5 + 16) = v11;
  *uint64_t v11 = v5;
  v11[1] = sub_57490;
  return v13(a1, a2, a3, a4, a5);
}

uint64_t type metadata accessor for BookRecommendationPostHydrationFilteringService()
{
  return self;
}

uint64_t method lookup function for BookRecommendationPostHydrationFilteringService(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BookRecommendationPostHydrationFilteringService);
}

uint64_t sub_1D60E0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_274178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D6148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_274178);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1D61B0(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for PersonalizationMetadataRequest();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1D620C()
{
  sub_948FC();
  uint64_t result = sub_1FBEA0();
  qword_2A5C68 = result;
  return result;
}

uint64_t sub_1D6278()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5C70);
  sub_6DBC8(v0, (uint64_t)qword_2A5C70);
  if (qword_26C3D0 != -1) {
    swift_once();
  }
  id v1 = (id)qword_2A5C68;
  return sub_1FB440();
}

uint64_t sub_1D6304(uint64_t a1, const void *a2)
{
  *(void *)(v3 + 3432) = v2;
  *(void *)(v3 + 3440) = type metadata accessor for SeedBasedRecommendationRequest(0);
  *(void *)(v3 + 3448) = swift_task_alloc();
  uint64_t v6 = sub_1FB110();
  *(void *)(v3 + 3456) = v6;
  *(void *)(v3 + 3464) = *(void *)(v6 - 8);
  *(void *)(v3 + 3472) = swift_task_alloc();
  *(void *)(v3 + 3480) = swift_task_alloc();
  uint64_t v7 = swift_task_alloc();
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v3 + 3496) = *(_OWORD *)a1;
  *(void *)(v3 + 3488) = v7;
  *(_OWORD *)(v3 + 3512) = v8;
  *(unsigned char *)(v3 + 3616) = *(unsigned char *)(a1 + 32);
  *(unsigned char *)(v3 + 3617) = *(unsigned char *)(a1 + 33);
  *(void *)(v3 + 3528) = *(void *)(a1 + 40);
  *(unsigned char *)(v3 + 3618) = *(unsigned char *)(a1 + 48);
  memcpy((void *)(v3 + 16), a2, 0x460uLL);
  return _swift_task_switch(sub_1D6470, 0, 0);
}

uint64_t sub_1D6470()
{
  uint64_t v25 = v0;
  sub_1FB100();
  if (qword_26C3D8 != -1) {
    swift_once();
  }
  uint64_t v1 = v0[436];
  uint64_t v2 = v0[435];
  uint64_t v3 = v0[433];
  uint64_t v4 = v0[432];
  uint64_t v5 = sub_1FB430();
  v0[442] = sub_6DBC8(v5, (uint64_t)qword_2A5C70);
  uint64_t v6 = *(void (**)(uint64_t, uint64_t, uint64_t))(v3 + 16);
  v0[443] = v6;
  v0[444] = (v3 + 16) & 0xFFFFFFFFFFFFLL | 0xE3BA000000000000;
  v6(v2, v1, v4);
  uint64_t v7 = sub_1FB410();
  os_log_type_t v8 = sub_1FBDC0();
  BOOL v9 = os_log_type_enabled(v7, v8);
  uint64_t v10 = v0[435];
  uint64_t v11 = v0[433];
  if (v9)
  {
    uint64_t v23 = v0[432];
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    uint64_t v24 = swift_slowAlloc();
    *(_DWORD *)uint64_t v12 = 136446210;
    uint64_t v13 = sub_1FB0F0();
    v0[428] = sub_D5890(v13, v14, &v24);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    unint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v10, v23);
    _os_log_impl(&dword_0, v7, v8, "fetching seed books for %{public}s", v12, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    unint64_t v15 = *(void (**)(uint64_t, uint64_t))(v11 + 8);
    v15(v0[435], v0[432]);
  }

  v0[445] = v15;
  uint64_t v16 = (void *)v0[429];
  uint64_t v17 = v0[55];
  uint64_t v18 = v16[15];
  uint64_t v19 = v16[16];
  sub_5D64(v16 + 12, v18);
  memcpy(v0 + 142, v0 + 2, 0x460uLL);
  uint64_t v22 = (uint64_t (*)(void *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 + 8) + **(int **)(v19 + 8));
  uint64_t v20 = (void *)swift_task_alloc();
  v0[446] = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_1D677C;
  return v22(v0 + 142, v17, v18, v19);
}

uint64_t sub_1D677C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 3576) = a1;
  *(void *)(v3 + 3584) = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1D7040;
  }
  else {
    uint64_t v4 = sub_1D6894;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1D6894()
{
  uint64_t v38 = v0;
  uint64_t v1 = (void *)(v0 + 3376);
  (*(void (**)(void, void, void))(v0 + 3544))(*(void *)(v0 + 3472), *(void *)(v0 + 3488), *(void *)(v0 + 3456));
  uint64_t v2 = sub_1FB410();
  os_log_type_t v3 = sub_1FBDC0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = *(void *)(v0 + 3472);
    uint64_t v33 = *(void *)(v0 + 3456);
    uint64_t v34 = *(void (**)(uint64_t, uint64_t))(v0 + 3560);
    uint64_t v5 = (uint8_t *)swift_slowAlloc();
    v37[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v5 = 136315138;
    uint64_t v6 = sub_1FB0F0();
    *(void *)(v0 + 3416) = sub_D5890(v6, v7, v37);
    sub_1FBED0();
    swift_bridgeObjectRelease();
    v34(v4, v33);
    _os_log_impl(&dword_0, v2, v3, "fetched seed books for %s", v5, 0xCu);
    swift_arrayDestroy();
    uint64_t v1 = (void *)(v0 + 3376);
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
    (*(void (**)(void, void))(v0 + 3560))(*(void *)(v0 + 3472), *(void *)(v0 + 3456));
  }

  uint64_t v8 = *(void *)(v0 + 3584);
  char v9 = *(unsigned char *)(v0 + 41);
  sub_5D64((void *)(*(void *)(v0 + 3432) + 56), *(void *)(*(void *)(v0 + 3432) + 80));
  LOBYTE(v37[0]) = v9;
  sub_1B7F04((unsigned __int8 *)v37, (uint64_t)v1);
  if (v8)
  {
    (*(void (**)(void, void))(v0 + 3560))(*(void *)(v0 + 3488), *(void *)(v0 + 3456));
    swift_bridgeObjectRelease();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  else
  {
    uint64_t v12 = *(void *)(v0 + 3576);
    uint64_t v26 = *(void (**)(uint64_t, uint64_t, uint64_t))(v0 + 3544);
    char v32 = *(unsigned char *)(v0 + 3618);
    uint64_t v31 = *(void *)(v0 + 3528);
    char v29 = *(unsigned char *)(v0 + 3616);
    char v30 = *(unsigned char *)(v0 + 3617);
    uint64_t v27 = *(void *)(v0 + 3512);
    uint64_t v28 = *(void *)(v0 + 3520);
    uint64_t v13 = *(void *)(v0 + 3504);
    uint64_t v14 = *(void *)(v0 + 3496);
    uint64_t v15 = *(void *)(v0 + 3488);
    uint64_t v16 = *(void *)(v0 + 3456);
    uint64_t v17 = *(void *)(v0 + 3448);
    uint64_t v18 = *(int **)(v0 + 3440);
    uint64_t v35 = *(void *)(v0 + 3400);
    uint64_t v36 = *(void *)(v0 + 3408);
    sub_5D64(v1, v35);
    uint64_t v19 = sub_390B0(v12);
    uint64_t v21 = *(void *)(v0 + 392);
    uint64_t v20 = *(void *)(v0 + 400);
    v26(v17, v15, v16);
    *(void *)(v17 + v18[5]) = v19;
    uint64_t v22 = (void *)(v17 + v18[6]);
    *uint64_t v22 = v14;
    v22[1] = v13;
    uint64_t v23 = (void *)(v17 + v18[7]);
    void *v23 = v27;
    v23[1] = v28;
    *(unsigned char *)(v17 + v18[8]) = v29;
    *(unsigned char *)(v17 + v18[9]) = v30;
    *(void *)(v17 + v18[10]) = v31;
    *(unsigned char *)(v17 + v18[11]) = v32;
    *(void *)(v17 + v18[12]) = _swiftEmptySetSingleton;
    *(void *)(v17 + v18[13]) = v21;
    *(void *)(v17 + v18[14]) = v20;
    memcpy((void *)(v0 + 2256), (const void *)(v0 + 16), 0x460uLL);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v24 = (void *)swift_task_alloc();
    *(void *)(v0 + 3592) = v24;
    void *v24 = v0;
    v24[1] = sub_1D6CC8;
    uint64_t v25 = *(void *)(v0 + 3448);
    return sub_1A832C(v25, v0 + 2256, v35, v36);
  }
}

uint64_t sub_1D6CC8(uint64_t a1)
{
  os_log_type_t v3 = *v2;
  v3[450] = a1;
  v3[451] = v1;
  swift_task_dealloc();
  sub_19B62C(v3[431]);
  if (v1) {
    uint64_t v4 = sub_1D70F0;
  }
  else {
    uint64_t v4 = sub_1D6DF0;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1D6DF0()
{
  uint64_t v26 = v0;
  uint64_t v1 = v0[450];
  int64_t v2 = *(void *)(v1 + 16);
  if (v2)
  {
    __dst[0] = _swiftEmptyArrayStorage;
    sub_467B8(0, v2, 0);
    os_log_type_t v3 = _swiftEmptyArrayStorage;
    uint64_t v4 = (void *)(v1 + 104);
    do
    {
      uint64_t v24 = *(v4 - 9);
      char v23 = *((unsigned char *)v4 - 64);
      uint64_t v22 = *(v4 - 7);
      char v21 = *((unsigned char *)v4 - 48);
      uint64_t v5 = *(v4 - 5);
      char v6 = *((unsigned char *)v4 - 32);
      uint64_t v7 = *(v4 - 3);
      uint64_t v20 = *(v4 - 2);
      uint64_t v8 = *(v4 - 1);
      uint64_t v9 = *v4;
      sub_5480C(v5, v6);
      __dst[0] = v3;
      unint64_t v10 = v3[2];
      unint64_t v11 = v3[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v10 >= v11 >> 1)
      {
        sub_467B8(v11 > 1, v10 + 1, 1);
        os_log_type_t v3 = (void *)__dst[0];
      }
      long long v3[2] = v10 + 1;
      uint64_t v12 = &v3[10 * v10];
      v12[4] = v24;
      *((unsigned char *)v12 + 40) = v23;
      v12[6] = v22;
      *((unsigned char *)v12 + 56) = v21;
      v12[8] = v5;
      *((unsigned char *)v12 + 72) = v6;
      v12[10] = v7;
      v12[11] = v20;
      v12[12] = v8;
      v12[13] = v9;
      v4 += 19;
      --v2;
    }
    while (v2);
    uint64_t v0 = v19;
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    os_log_type_t v3 = _swiftEmptyArrayStorage;
  }
  uint64_t v13 = v0[436];
  uint64_t v14 = v0[433];
  uint64_t v15 = v0[432];
  sub_1264C((uint64_t)(v0 + 422));
  memcpy(__dst, v0 + 13, 0x16BuLL);
  sub_8CFA4((uint64_t)(v0 + 13));
  uint64_t v16 = sub_A4A14(v3, __dst);
  swift_bridgeObjectRelease();
  sub_8D5A4((uint64_t)(v0 + 13));
  (*(void (**)(uint64_t, uint64_t))(v14 + 8))(v13, v15);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v17 = (uint64_t (*)(uint64_t))v0[1];
  return v17(v16);
}

uint64_t sub_1D7040()
{
  (*(void (**)(void, void))(v0 + 3560))(*(void *)(v0 + 3488), *(void *)(v0 + 3456));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1D70F0()
{
  (*(void (**)(void, void))(v0[433] + 8))(v0[436], v0[432]);
  sub_1264C((uint64_t)(v0 + 422));
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

uint64_t sub_1D71A8(uint64_t a1, const void *a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_B06F4;
  return sub_1D6304(a1, a2);
}

uint64_t sub_1D7250()
{
  uint64_t result = sub_507C4((uint64_t)&off_2528E8);
  qword_274188 = result;
  return result;
}

uint64_t static Set<>.local.getter()
{
  if (qword_26C3E0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SeedBasedSuggestionsService()
{
  return self;
}

unsigned char *MoreFromYourAuthorsOptions.init(mediaType:seedBooks:excludedStoreIDs:hydratedBooksFetchLimit:)@<X0>(unsigned char *result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X8>)
{
  *(unsigned char *)a5 = *result;
  *(void *)(a5 + 8) = a2;
  *(void *)(a5 + 16) = a3;
  *(void *)(a5 + 24) = a4;
  return result;
}

uint64_t MoreFromYourAuthorsOptions.hydratedBooksFetchLimit.getter()
{
  return *(void *)(v0 + 24);
}

uint64_t initializeWithCopy for MoreFromYourAuthorsOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  uint64_t v3 = *(void *)(a2 + 16);
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  *(void *)(a1 + 16) = v3;
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for MoreFromYourAuthorsOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

uint64_t assignWithTake for MoreFromYourAuthorsOptions(uint64_t a1, uint64_t a2)
{
  *(unsigned char *)a1 = *(unsigned char *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  return a1;
}

ValueMetadata *type metadata accessor for MoreFromYourAuthorsOptions()
{
  return &type metadata for MoreFromYourAuthorsOptions;
}

uint64_t dispatch thunk of MoreFromYourAuthorsServiceType.fetchBooks(with:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1D7538(uint64_t a1, unint64_t a2, uint64_t a3, unint64_t a4)
{
  unint64_t v8 = 0xEF54534555514552;
  uint64_t v9 = 0x5F44494C41564E49;
  uint64_t v10 = 0x5F44494C41564E49;
  unint64_t v11 = 0xEF54534555514552;
  switch(a2)
  {
    case 0uLL:
      goto LABEL_7;
    case 1uLL:
      uint64_t v10 = 0x485455415F544F4ELL;
      unint64_t v11 = 0xEE0044455A49524FLL;
      if (a4 > 3) {
        goto LABEL_11;
      }
      goto LABEL_7;
    case 2uLL:
      uint64_t v10 = 0x455F524556524553;
      unint64_t v11 = 0xEC000000524F5252;
      goto LABEL_7;
    case 3uLL:
      uint64_t v10 = 0x4E554F465F544F4ELL;
      unint64_t v11 = 0xE900000000000044;
      if (a4 > 3) {
        goto LABEL_11;
      }
      goto LABEL_7;
    default:
      uint64_t v10 = a1;
      unint64_t v11 = a2;
      if (a4 <= 3)
      {
LABEL_7:
        switch(a4)
        {
          case 0uLL:
            break;
          case 1uLL:
            unint64_t v8 = 0xEE0044455A49524FLL;
            if (v10 != 0x485455415F544F4ELL) {
              goto LABEL_18;
            }
            goto LABEL_15;
          case 2uLL:
            uint64_t v9 = 0x455F524556524553;
            unint64_t v8 = 0xEC000000524F5252;
            break;
          case 3uLL:
            unint64_t v8 = 0xE900000000000044;
            if (v10 != 0x4E554F465F544F4ELL) {
              goto LABEL_18;
            }
            goto LABEL_15;
          default:
            goto LABEL_11;
        }
        if (v10 != v9) {
          goto LABEL_18;
        }
      }
      else
      {
LABEL_11:
        unint64_t v8 = a4;
        if (v10 != a3) {
          goto LABEL_18;
        }
      }
LABEL_15:
      if (v11 == v8)
      {
        char v12 = 1;
        goto LABEL_19;
      }
LABEL_18:
      char v12 = sub_1FC5F0();
LABEL_19:
      sub_306DC(a1, a2);
      sub_306DC(a3, a4);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v12 & 1;
  }
}

uint64_t sub_1D7784(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 1701869940;
  unint64_t v3 = 0xE400000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 1701869940;
  switch(v4)
  {
    case 1:
      uint64_t v5 = 1701080931;
      break;
    case 2:
      uint64_t v5 = 0x4974736575716572;
      unint64_t v3 = 0xE900000000000064;
      break;
    case 3:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x6567617373656DLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE400000000000000;
  switch(a2)
  {
    case 1:
      if (v5 == 1701080931) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x4974736575716572;
      unint64_t v6 = 0xE900000000000064;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xE700000000000000;
      if (v5 == 0x6567617373656DLL) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D78F4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x7974696E69666661;
    }
    else {
      unint64_t v3 = 0xD000000000000015;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0x8000000000215EA0;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x7974696E69666661;
      }
      else {
        unint64_t v6 = 0xD000000000000015;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0x8000000000215EA0;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    unint64_t v3 = 0x64496B6F6F62;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x64496B6F6F62)
  {
LABEL_21:
    char v8 = sub_1FC5F0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7A08(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000656C69;
  uint64_t v3 = 0x666F725072657375;
  uint64_t v4 = a1;
  unint64_t v5 = 0x666F725072657375;
  unint64_t v6 = 0xEB00000000656C69;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x716552736B6F6F62;
      unint64_t v6 = 0xEC00000074736575;
      break;
    case 2:
      unint64_t v5 = 0x6C6F646F6874656DLL;
      unint64_t v6 = 0xED0000736569676FLL;
      break;
    case 3:
      unint64_t v6 = 0x8000000000215D80;
      unint64_t v5 = 0xD000000000000013;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEC00000074736575;
      if (v5 == 0x716552736B6F6F62) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6C6F646F6874656DLL;
      unint64_t v2 = 0xED0000736569676FLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0x8000000000215D80;
      if (v5 == 0xD000000000000013) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7BD8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x707954616964656DLL;
  uint64_t v4 = a1;
  unint64_t v5 = 0x707954616964656DLL;
  unint64_t v6 = 0xE900000000000065;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000014;
      unint64_t v6 = 0x8000000000215D60;
      break;
    case 2:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v5 = 0x65707954656C6173;
      break;
    case 3:
      unint64_t v6 = 0x8000000000215D80;
      unint64_t v5 = 0xD000000000000013;
      break;
    case 4:
      unint64_t v5 = 0x6F42746567726174;
      unint64_t v6 = 0xED00007364496B6FLL;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0x8000000000215D60;
      if (v5 == 0xD000000000000014) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v2 = 0xE800000000000000;
      if (v5 != 0x65707954656C6173) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0x8000000000215D80;
      unint64_t v3 = 0xD000000000000013;
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xED00007364496B6FLL;
      if (v5 != 0x6F42746567726174) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v3) {
        goto LABEL_16;
      }
LABEL_13:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D7DDC(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xE900000000000065;
  unint64_t v3 = 0x707954616964656DLL;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD000000000000014;
    }
    else {
      unint64_t v5 = 0x65707954656C6173;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000000215D60;
    }
    else {
      unint64_t v6 = 0xE800000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x707954616964656DLL;
  unint64_t v6 = 0xE900000000000065;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD000000000000014;
    }
    else {
      unint64_t v3 = 0x65707954656C6173;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x8000000000215D60;
    }
    else {
      unint64_t v2 = 0xE800000000000000;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D7EF8(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v4 = 0x8000000000215E20;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD000000000000019;
      unint64_t v5 = "bookIdToBisacCodesEntries";
      goto LABEL_6;
    case 2:
      unint64_t v3 = 0xD00000000000001ELL;
      unint64_t v5 = "bookIdToDeduplicationIdEntries";
      goto LABEL_6;
    case 3:
      unint64_t v4 = 0x8000000000215E60;
      unint64_t v3 = 0xD000000000000017;
      break;
    case 4:
      unint64_t v3 = 0xD000000000000018;
      unint64_t v5 = "bookIdToMediaTypeEntries";
LABEL_6:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v3 = 0x687475416B6F6F62;
      unint64_t v4 = 0xEB0000000073726FLL;
      break;
    case 6:
      unint64_t v3 = 0x626D45736B6F6F62;
      unint64_t v4 = 0xEF73676E69646465;
      break;
    case 7:
      unint64_t v3 = 0x726E65476B6F6F62;
      unint64_t v4 = 0xEA00000000007365;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xD00000000000001CLL;
  unint64_t v7 = 0x8000000000215E20;
  switch(a2)
  {
    case 1:
      unint64_t v8 = 0xD000000000000019;
      uint64_t v9 = "bookIdToBisacCodesEntries";
      goto LABEL_16;
    case 2:
      unint64_t v8 = 0xD00000000000001ELL;
      uint64_t v9 = "bookIdToDeduplicationIdEntries";
      goto LABEL_16;
    case 3:
      unint64_t v7 = 0x8000000000215E60;
      if (v3 != 0xD000000000000017) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 4:
      unint64_t v8 = 0xD000000000000018;
      uint64_t v9 = "bookIdToMediaTypeEntries";
LABEL_16:
      unint64_t v7 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      if (v3 != v8) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 5:
      unint64_t v7 = 0xEB0000000073726FLL;
      if (v3 != 0x687475416B6F6F62) {
        goto LABEL_25;
      }
      goto LABEL_22;
    case 6:
      unint64_t v6 = 0x626D45736B6F6F62;
      unint64_t v7 = 0xEF73676E69646465;
      goto LABEL_21;
    case 7:
      unint64_t v7 = 0xEA00000000007365;
      if (v3 != 0x726E65476B6F6F62) {
        goto LABEL_25;
      }
      goto LABEL_22;
    default:
LABEL_21:
      if (v3 != v6) {
        goto LABEL_25;
      }
LABEL_22:
      if (v4 == v7) {
        char v10 = 1;
      }
      else {
LABEL_25:
      }
        char v10 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v10 & 1;
  }
}

uint64_t sub_1D818C(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xEC0000006449746ELL;
  unint64_t v3 = 0x6F724665726F7473;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0xD00000000000001BLL;
    }
    else {
      unint64_t v5 = 0x6E656D7461657274;
    }
    if (v4 == 1) {
      unint64_t v6 = 0x8000000000215DF0;
    }
    else {
      unint64_t v6 = 0xEC00000073644974;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0x6F724665726F7473;
  unint64_t v6 = 0xEC0000006449746ELL;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v3 = 0xD00000000000001BLL;
    }
    else {
      unint64_t v3 = 0x6E656D7461657274;
    }
    if (v7 == 1) {
      unint64_t v2 = 0x8000000000215DF0;
    }
    else {
      unint64_t v2 = 0xEC00000073644974;
    }
  }
LABEL_15:
  if (v5 == v3 && v6 == v2) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D82C0(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x646F436361736962;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007365;
  }
  if (a2) {
    uint64_t v5 = 0x646F436361736962;
  }
  else {
    uint64_t v5 = 0x64496B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007365;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D8368(char a1, char a2)
{
  unint64_t v3 = 0xD00000000000001CLL;
  unint64_t v4 = 0x8000000000215E20;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD00000000000001ELL;
      unint64_t v4 = 0x8000000000215E40;
      break;
    case 2:
      unint64_t v4 = 0x8000000000215E60;
      unint64_t v3 = 0xD000000000000017;
      break;
    case 3:
      unint64_t v3 = 0x687475416B6F6F62;
      unint64_t v4 = 0xEB0000000073726FLL;
      break;
    case 4:
      unint64_t v3 = 0x626D45736B6F6F62;
      unint64_t v4 = 0xEF73676E69646465;
      break;
    case 5:
      unint64_t v3 = 0x726E65476B6F6F62;
      unint64_t v4 = 0xEA00000000007365;
      break;
    default:
      break;
  }
  unint64_t v5 = 0xD00000000000001CLL;
  unint64_t v6 = 0x8000000000215E20;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x8000000000215E40;
      if (v3 == 0xD00000000000001ELL) {
        goto LABEL_16;
      }
      goto LABEL_19;
    case 2:
      unint64_t v6 = 0x8000000000215E60;
      if (v3 != 0xD000000000000017) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 3:
      unint64_t v6 = 0xEB0000000073726FLL;
      if (v3 != 0x687475416B6F6F62) {
        goto LABEL_19;
      }
      goto LABEL_16;
    case 4:
      unint64_t v5 = 0x626D45736B6F6F62;
      unint64_t v6 = 0xEF73676E69646465;
      goto LABEL_15;
    case 5:
      unint64_t v6 = 0xEA00000000007365;
      if (v3 != 0x726E65476B6F6F62) {
        goto LABEL_19;
      }
      goto LABEL_16;
    default:
LABEL_15:
      if (v3 != v5) {
        goto LABEL_19;
      }
LABEL_16:
      if (v4 == v6) {
        char v7 = 1;
      }
      else {
LABEL_19:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D85AC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x707954616964656DLL;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE900000000000065;
  }
  if (a2) {
    uint64_t v5 = 0x707954616964656DLL;
  }
  else {
    uint64_t v5 = 0x64496B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000065;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D8654(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEC0000006449746ELL;
  unint64_t v3 = 0x6F724665726F7473;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6F724665726F7473;
  unint64_t v6 = 0xEC0000006449746ELL;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x666F725072657375;
      unint64_t v6 = 0xEB00000000656C69;
      break;
    case 2:
      unint64_t v6 = 0x8000000000215DF0;
      unint64_t v5 = 0xD00000000000001BLL;
      break;
    case 3:
      unint64_t v5 = 0x6E656D7461657274;
      unint64_t v6 = 0xEC00000073644974;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xEB00000000656C69;
      if (v5 == 0x666F725072657375) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v2 = 0x8000000000215DF0;
      unint64_t v3 = 0xD00000000000001BLL;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xEC00000073644974;
      if (v5 == 0x6E656D7461657274) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D881C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64496B6F6F62;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x64496B6F6F62;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x8000000000216070;
      unint64_t v5 = 0xD000000000000010;
      break;
    case 2:
      unint64_t v5 = 0x646F436361736962;
      unint64_t v3 = 0xEA00000000007365;
      break;
    case 3:
      unint64_t v5 = 0x63696C7075646564;
      unint64_t v3 = 0xEF64496E6F697461;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0x8000000000216070;
      if (v5 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x646F436361736962;
      unint64_t v6 = 0xEA00000000007365;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEF64496E6F697461;
      if (v5 == 0x63696C7075646564) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D89CC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6C6F646F6874656DLL;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xED0000736569676FLL;
  }
  if (a2) {
    uint64_t v5 = 0x6C6F646F6874656DLL;
  }
  else {
    uint64_t v5 = 0x64496B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xED0000736569676FLL;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D8A7C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6449726F68747561;
  unint64_t v3 = 0xE800000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6449726F68747561;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x64496B6F6F62;
      break;
    case 2:
      unint64_t v5 = 0x6449736569726573;
      break;
    case 3:
      unint64_t v3 = 0x8000000000215ED0;
      unint64_t v5 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v5 = 0xD000000000000019;
      unint64_t v6 = "contentSimilarityAffinity";
      goto LABEL_7;
    case 5:
      unint64_t v5 = 0xD00000000000001ELL;
      unint64_t v6 = "inferredFromAffinityForBookIds";
LABEL_7:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE800000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xE600000000000000;
      unint64_t v2 = 0x64496B6F6F62;
      break;
    case 2:
      unint64_t v2 = 0x6449736569726573;
      break;
    case 3:
      unint64_t v7 = 0x8000000000215ED0;
      unint64_t v2 = 0xD000000000000012;
      break;
    case 4:
      unint64_t v2 = 0xD000000000000019;
      char v8 = "contentSimilarityAffinity";
      goto LABEL_14;
    case 5:
      unint64_t v2 = 0xD00000000000001ELL;
      char v8 = "inferredFromAffinityForBookIds";
LABEL_14:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D8C74(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6E69646465626D65;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEA00000000007367;
  }
  if (a2) {
    uint64_t v5 = 0x6E69646465626D65;
  }
  else {
    uint64_t v5 = 0x64496B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xEA00000000007367;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D8D1C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6B6F6F4264656573;
  }
  else {
    uint64_t v3 = 0x746963696C707865;
  }
  if (v2) {
    unint64_t v4 = 0xEF6465776F6C6C41;
  }
  else {
    unint64_t v4 = 0xE900000000000073;
  }
  if (a2) {
    uint64_t v5 = 0x6B6F6F4264656573;
  }
  else {
    uint64_t v5 = 0x746963696C707865;
  }
  if (a2) {
    unint64_t v6 = 0xE900000000000073;
  }
  else {
    unint64_t v6 = 0xEF6465776F6C6C41;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D8DD4(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v3 = 0x7974696E69666661;
    }
    else {
      unint64_t v3 = 0xD00000000000001ELL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE800000000000000;
    }
    else {
      unint64_t v4 = 0x8000000000215D10;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        unint64_t v6 = 0x7974696E69666661;
      }
      else {
        unint64_t v6 = 0xD00000000000001ELL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE800000000000000;
      }
      else {
        unint64_t v7 = 0x8000000000215D10;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE600000000000000;
    unint64_t v3 = 0x64496B6F6F62;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE600000000000000;
  if (v3 != 0x64496B6F6F62)
  {
LABEL_21:
    char v8 = sub_1FC5F0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D8EE8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x696666416B6F6F62;
  }
  else {
    uint64_t v3 = 0x746963696C707865;
  }
  if (v2) {
    unint64_t v4 = 0xEF6465776F6C6C41;
  }
  else {
    unint64_t v4 = 0xEE0073656974696ELL;
  }
  if (a2) {
    uint64_t v5 = 0x696666416B6F6F62;
  }
  else {
    uint64_t v5 = 0x746963696C707865;
  }
  if (a2) {
    unint64_t v6 = 0xEE0073656974696ELL;
  }
  else {
    unint64_t v6 = 0xEF6465776F6C6C41;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D8FA8(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x73726F68747561;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xE700000000000000;
  }
  if (a2) {
    uint64_t v5 = 0x73726F68747561;
  }
  else {
    uint64_t v5 = 0x64496B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xE700000000000000;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D904C(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 0x7365726E6567;
  }
  else {
    uint64_t v2 = 0x64496B6F6F62;
  }
  if (a2) {
    uint64_t v3 = 0x7365726E6567;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1D90C4(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x8000000000215F80;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x796E65446B6F6F62;
    }
    else {
      unint64_t v5 = 0xD000000000000018;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xEC0000007473696CLL;
    }
    else {
      unint64_t v6 = 0x8000000000215FB0;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000013;
  unint64_t v6 = 0x8000000000215F80;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x796E65446B6F6F62;
    }
    else {
      unint64_t v2 = 0xD000000000000018;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xEC0000007473696CLL;
    }
    else {
      unint64_t v3 = 0x8000000000215FB0;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D91DC(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x63696C7075646564;
  }
  else {
    uint64_t v3 = 0x64496B6F6F62;
  }
  if (v2) {
    unint64_t v4 = 0xE600000000000000;
  }
  else {
    unint64_t v4 = 0xEF64496E6F697461;
  }
  if (a2) {
    uint64_t v5 = 0x63696C7075646564;
  }
  else {
    uint64_t v5 = 0x64496B6F6F62;
  }
  if (a2) {
    unint64_t v6 = 0xEF64496E6F697461;
  }
  else {
    unint64_t v6 = 0xE600000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D928C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x64496B6F6F62;
  unint64_t v3 = 0xE600000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x64496B6F6F62;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x6449736569726573;
      break;
    case 2:
      unint64_t v5 = 0x7349736569726573;
      unint64_t v3 = 0xEF6465726564724FLL;
      break;
    case 3:
      unint64_t v3 = 0x8000000000215F60;
      unint64_t v5 = 0xD000000000000010;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE600000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x6449736569726573) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v2 = 0x7349736569726573;
      unint64_t v6 = 0xEF6465726564724FLL;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0x8000000000215F60;
      if (v5 == 0xD000000000000010) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1D9438(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    uint64_t v3 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v3 = 0x6B6F6F6265;
  }
  if (v2) {
    unint64_t v4 = 0xE500000000000000;
  }
  else {
    unint64_t v4 = 0xE90000000000006BLL;
  }
  if (a2) {
    uint64_t v5 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v5 = 0x6B6F6F6265;
  }
  if (a2) {
    unint64_t v6 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v6 = 0xE500000000000000;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D94E0(char a1, char a2)
{
  if (a1) {
    uint64_t v2 = 1684627824;
  }
  else {
    uint64_t v2 = 1701147238;
  }
  if (a2) {
    uint64_t v3 = 1684627824;
  }
  else {
    uint64_t v3 = 1701147238;
  }
  if (v2 == v3) {
    char v4 = 1;
  }
  else {
    char v4 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease_n();
  return v4 & 1;
}

uint64_t sub_1D9550()
{
  uint64_t v0 = CollectionRecommendationType.rawValue.getter();
  uint64_t v2 = v1;
  if (v0 == CollectionRecommendationType.rawValue.getter() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

uint64_t sub_1D95E8(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v3 = 0x646578696DLL;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v4 = 0xE500000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v6 = 0x646578696DLL;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v7 = 0xE500000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE500000000000000;
    uint64_t v3 = 0x6B6F6F6265;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE500000000000000;
  if (v3 != 0x6B6F6F6265)
  {
LABEL_21:
    char v8 = sub_1FC5F0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1D9700(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000000002160A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x747369486B6F6F62;
      unint64_t v3 = 0xEB0000000079726FLL;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000017;
      uint64_t v6 = "onDevicePersonalization";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000021;
      uint64_t v6 = "appleMediaDiscoveryAndBookHistory";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1768055156;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000000002160A0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEB0000000079726FLL;
      if (v5 == 0x747369486B6F6F62) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      unint64_t v2 = 0xD000000000000017;
      char v8 = "onDevicePersonalization";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0xD000000000000021;
      char v8 = "appleMediaDiscoveryAndBookHistory";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 1768055156) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_17:
      }
        char v9 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1D98B0(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 1920298854;
    }
    else {
      uint64_t v2 = 1702259046;
    }
    unint64_t v3 = 0xE400000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 1920298854;
      }
      else {
        uint64_t v5 = 1702259046;
      }
      unint64_t v6 = 0xE400000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE500000000000000;
    uint64_t v2 = 0x6565726874;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE500000000000000;
  if (v2 != 0x6565726874)
  {
LABEL_15:
    char v7 = sub_1FC5F0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D99A4(char a1, char a2)
{
  unint64_t v3 = 0xD000000000000019;
  unint64_t v4 = 0x8000000000216B00;
  switch(a1)
  {
    case 1:
      unint64_t v3 = 0xD00000000000001FLL;
      uint64_t v5 = "sampleReadFractionHighWaterMark";
      goto LABEL_6;
    case 2:
      unint64_t v3 = 0xD000000000000015;
      uint64_t v5 = "wasAcquiredExternally";
      goto LABEL_6;
    case 3:
      unint64_t v3 = 0x6863727550736177;
      unint64_t v4 = 0xEC00000064657361;
      break;
    case 4:
      unint64_t v3 = 0xD00000000000001DLL;
      uint64_t v5 = "wasDownloadedViaFamilySharing";
LABEL_6:
      unint64_t v4 = (unint64_t)(v5 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v3 = 0x6C706D6153736177;
      unint64_t v4 = 0xEA00000000006465;
      break;
    case 6:
      unint64_t v6 = "wasAddedToWantToRead";
      goto LABEL_10;
    case 7:
      unint64_t v6 = "wasProductPageViewed";
LABEL_10:
      unint64_t v4 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      unint64_t v3 = 0xD000000000000014;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xD000000000000019;
  unint64_t v8 = 0x8000000000216B00;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xD00000000000001FLL;
      char v9 = "sampleReadFractionHighWaterMark";
      goto LABEL_16;
    case 2:
      unint64_t v7 = 0xD000000000000015;
      char v9 = "wasAcquiredExternally";
      goto LABEL_16;
    case 3:
      unint64_t v7 = 0x6863727550736177;
      unint64_t v8 = 0xEC00000064657361;
      break;
    case 4:
      unint64_t v7 = 0xD00000000000001DLL;
      char v9 = "wasDownloadedViaFamilySharing";
LABEL_16:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      break;
    case 5:
      unint64_t v7 = 0x6C706D6153736177;
      unint64_t v8 = 0xEA00000000006465;
      break;
    case 6:
      char v10 = "wasAddedToWantToRead";
      goto LABEL_20;
    case 7:
      char v10 = "wasProductPageViewed";
LABEL_20:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v7 = 0xD000000000000014;
      break;
    default:
      break;
  }
  if (v3 == v7 && v4 == v8) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1D9BEC(char a1, unsigned __int8 a2)
{
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v2 = 0x656E4F6C6576656CLL;
    }
    else {
      uint64_t v2 = 0x6F77546C6576656CLL;
    }
    unint64_t v3 = 0xE800000000000000;
    int v4 = a2;
    if (a2)
    {
LABEL_6:
      if (v4 == 1) {
        uint64_t v5 = 0x656E4F6C6576656CLL;
      }
      else {
        uint64_t v5 = 0x6F77546C6576656CLL;
      }
      unint64_t v6 = 0xE800000000000000;
      if (v2 != v5) {
        goto LABEL_15;
      }
      goto LABEL_13;
    }
  }
  else
  {
    unint64_t v3 = 0xE600000000000000;
    uint64_t v2 = 0x73657661656CLL;
    int v4 = a2;
    if (a2) {
      goto LABEL_6;
    }
  }
  unint64_t v6 = 0xE600000000000000;
  if (v2 != 0x73657661656CLL)
  {
LABEL_15:
    char v7 = sub_1FC5F0();
    goto LABEL_16;
  }
LABEL_13:
  if (v3 != v6) {
    goto LABEL_15;
  }
  char v7 = 1;
LABEL_16:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1D9D00(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x6E6F6973726576;
  unint64_t v3 = 0xE700000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x6E6F6973726576;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0x8000000000216BE0;
      unint64_t v5 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v5 = 0x416567616B636170;
      unint64_t v3 = 0xEF73444974657373;
      break;
    case 3:
      unint64_t v5 = 0x7475706D6F436C6DLL;
      unint64_t v3 = 0xEE007374696E5565;
      break;
    case 4:
      unint64_t v5 = 0xD00000000000001DLL;
      unint64_t v6 = "eventAggregationConfiguration";
      goto LABEL_10;
    case 5:
      unint64_t v5 = 0xD000000000000020;
      unint64_t v6 = "genreRecommendationConfiguration";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0xD00000000000001CLL;
      unint64_t v6 = "bookSuggestionsConfiguration";
      goto LABEL_10;
    case 7:
      unint64_t v5 = 0xD000000000000018;
      unint64_t v6 = "bookScoringConfiguration";
      goto LABEL_10;
    case 8:
      unint64_t v5 = 0xD000000000000023;
      unint64_t v6 = "seedBookRecommendationConfiguration";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0xE700000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0x8000000000216BE0;
      unint64_t v2 = 0xD000000000000014;
      break;
    case 2:
      unint64_t v2 = 0x416567616B636170;
      unint64_t v7 = 0xEF73444974657373;
      break;
    case 3:
      unint64_t v2 = 0x7475706D6F436C6DLL;
      unint64_t v7 = 0xEE007374696E5565;
      break;
    case 4:
      unint64_t v2 = 0xD00000000000001DLL;
      unint64_t v8 = "eventAggregationConfiguration";
      goto LABEL_20;
    case 5:
      unint64_t v2 = 0xD000000000000020;
      unint64_t v8 = "genreRecommendationConfiguration";
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0xD00000000000001CLL;
      unint64_t v8 = "bookSuggestionsConfiguration";
      goto LABEL_20;
    case 7:
      unint64_t v2 = 0xD000000000000018;
      unint64_t v8 = "bookScoringConfiguration";
      goto LABEL_20;
    case 8:
      unint64_t v2 = 0xD000000000000023;
      unint64_t v8 = "seedBookRecommendationConfiguration";
LABEL_20:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1D9F98(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000000002160A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x495041616964656DLL;
      break;
    case 2:
      unint64_t v5 = 0x747369486B6F6F62;
      unint64_t v3 = 0xEB0000000079726FLL;
      break;
    case 3:
      unint64_t v5 = 0xD000000000000022;
      unint64_t v3 = 0x80000000002161C0;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1768055156;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000000002160A0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      if (v5 == 0x495041616964656DLL) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0xEB0000000079726FLL;
      if (v5 != 0x747369486B6F6F62) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v2 = 0xD000000000000022;
      unint64_t v6 = 0x80000000002161C0;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1768055156) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DA164(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x736B6F6F62;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x736B6F6F62;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "booksBySuggestedAuthors";
      goto LABEL_8;
    case 2:
      char v7 = "booksYouMightLike";
      goto LABEL_6;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x756F59726F66;
      break;
    case 4:
      char v7 = "mangaYouMightLike";
LABEL_6:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "moreFromYourAuthors";
LABEL_8:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 6:
      unint64_t v5 = 0x6974736567677573;
      unint64_t v3 = 0xEB00000000736E6FLL;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000017;
      char v9 = "booksBySuggestedAuthors";
      goto LABEL_19;
    case 2:
      char v10 = "booksYouMightLike";
      goto LABEL_16;
    case 3:
      unint64_t v8 = 0xE600000000000000;
      if (v5 != 0x756F59726F66) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 4:
      char v10 = "mangaYouMightLike";
LABEL_16:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      if (v5 != 0xD000000000000011) {
        goto LABEL_24;
      }
      goto LABEL_21;
    case 5:
      unint64_t v2 = 0xD000000000000013;
      char v9 = "moreFromYourAuthors";
LABEL_19:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      goto LABEL_20;
    case 6:
      unint64_t v8 = 0xEB00000000736E6FLL;
      if (v5 != 0x6974736567677573) {
        goto LABEL_24;
      }
      goto LABEL_21;
    default:
LABEL_20:
      if (v5 != v2) {
        goto LABEL_24;
      }
LABEL_21:
      if (v3 == v8) {
        char v11 = 1;
      }
      else {
LABEL_24:
      }
        char v11 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v11 & 1;
  }
}

uint64_t sub_1DA388(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xEB00000000746E69;
  uint64_t v3 = 0x6F4A656C676E6973;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6F4A656C676E6973;
  unint64_t v6 = 0xEB00000000746E69;
  switch(v4)
  {
    case 1:
      unint64_t v6 = 0xE800000000000000;
      uint64_t v5 = 0x746E696F4A6C6C61;
      break;
    case 2:
      uint64_t v5 = 0x6F6A7369446C6C61;
      break;
    case 3:
      uint64_t v5 = 0x7473657265746E69;
      unint64_t v6 = 0xED00006465736142;
      break;
    default:
      break;
  }
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      if (v5 == 0x746E696F4A6C6C61) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      uint64_t v3 = 0x6F6A7369446C6C61;
      goto LABEL_9;
    case 3:
      unint64_t v2 = 0xED00006465736142;
      if (v5 == 0x7473657265746E69) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v3) {
        goto LABEL_14;
      }
LABEL_12:
      if (v6 == v2) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DA538(unsigned __int8 a1, unsigned __int8 a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000000002160A0;
  int v4 = a1;
  if (a1)
  {
    if (a1 == 1) {
      unint64_t v5 = 0x797469746E656469;
    }
    else {
      unint64_t v5 = 1768055156;
    }
    if (v4 == 1) {
      unint64_t v6 = 0xE800000000000000;
    }
    else {
      unint64_t v6 = 0xE400000000000000;
    }
    int v7 = a2;
    if (!a2) {
      goto LABEL_15;
    }
    goto LABEL_9;
  }
  unint64_t v5 = 0xD000000000000013;
  unint64_t v6 = 0x80000000002160A0;
  int v7 = a2;
  if (a2)
  {
LABEL_9:
    if (v7 == 1) {
      unint64_t v2 = 0x797469746E656469;
    }
    else {
      unint64_t v2 = 1768055156;
    }
    if (v7 == 1) {
      unint64_t v3 = 0xE800000000000000;
    }
    else {
      unint64_t v3 = 0xE400000000000000;
    }
  }
LABEL_15:
  if (v5 == v2 && v6 == v3) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DA63C(unsigned __int8 a1, unsigned __int8 a2)
{
  int v2 = a1;
  if (a1)
  {
    if (a1 == 1) {
      uint64_t v3 = 12918;
    }
    else {
      uint64_t v3 = 1768055156;
    }
    if (v2 == 1) {
      unint64_t v4 = 0xE200000000000000;
    }
    else {
      unint64_t v4 = 0xE400000000000000;
    }
    int v5 = a2;
    if (a2)
    {
LABEL_9:
      if (v5 == 1) {
        uint64_t v6 = 12918;
      }
      else {
        uint64_t v6 = 1768055156;
      }
      if (v5 == 1) {
        unint64_t v7 = 0xE200000000000000;
      }
      else {
        unint64_t v7 = 0xE400000000000000;
      }
      if (v3 != v6) {
        goto LABEL_21;
      }
      goto LABEL_19;
    }
  }
  else
  {
    unint64_t v4 = 0xE200000000000000;
    uint64_t v3 = 12662;
    int v5 = a2;
    if (a2) {
      goto LABEL_9;
    }
  }
  unint64_t v7 = 0xE200000000000000;
  if (v3 != 12662)
  {
LABEL_21:
    char v8 = sub_1FC5F0();
    goto LABEL_22;
  }
LABEL_19:
  if (v4 != v7) {
    goto LABEL_21;
  }
  char v8 = 1;
LABEL_22:
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

uint64_t sub_1DA718(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000000002160A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x747369486B6F6F62;
      unint64_t v3 = 0xEB0000000079726FLL;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000021;
      uint64_t v6 = "appleMediaDiscoveryAndBookHistory";
      goto LABEL_5;
    case 3:
      unint64_t v5 = 0xD000000000000017;
      uint64_t v6 = "onDevicePersonalization";
LABEL_5:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1768055156;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x80000000002160A0;
  switch(a2)
  {
    case 1:
      unint64_t v7 = 0xEB0000000079726FLL;
      if (v5 == 0x747369486B6F6F62) {
        goto LABEL_14;
      }
      goto LABEL_17;
    case 2:
      unint64_t v2 = 0xD000000000000021;
      char v8 = "appleMediaDiscoveryAndBookHistory";
      goto LABEL_12;
    case 3:
      unint64_t v2 = 0xD000000000000017;
      char v8 = "onDevicePersonalization";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      goto LABEL_13;
    case 4:
      unint64_t v7 = 0xE400000000000000;
      if (v5 != 1768055156) {
        goto LABEL_17;
      }
      goto LABEL_14;
    default:
LABEL_13:
      if (v5 != v2) {
        goto LABEL_17;
      }
LABEL_14:
      if (v3 == v7) {
        char v9 = 1;
      }
      else {
LABEL_17:
      }
        char v9 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v9 & 1;
  }
}

uint64_t sub_1DA8C8(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000010;
  unint64_t v3 = 0x8000000000216130;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000010;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000015;
      uint64_t v6 = "bookHistoryGenreDepth";
      goto LABEL_6;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      unint64_t v5 = 0x32656372756F73;
      break;
    case 3:
      unint64_t v5 = 0xD00000000000001FLL;
      uint64_t v6 = "combinedScorerBookHistoryWeight";
      goto LABEL_6;
    case 4:
      unint64_t v5 = 0xD00000000000001ALL;
      uint64_t v6 = "preferSaleTypeToGenreOrder";
LABEL_6:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v7 = 0x8000000000216130;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000015;
      char v8 = "bookHistoryGenreDepth";
      goto LABEL_12;
    case 2:
      unint64_t v7 = 0xE700000000000000;
      unint64_t v2 = 0x32656372756F73;
      break;
    case 3:
      unint64_t v2 = 0xD00000000000001FLL;
      char v8 = "combinedScorerBookHistoryWeight";
      goto LABEL_12;
    case 4:
      unint64_t v2 = 0xD00000000000001ALL;
      char v8 = "preferSaleTypeToGenreOrder";
LABEL_12:
      unint64_t v7 = (unint64_t)(v8 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v7) {
    char v9 = 1;
  }
  else {
    char v9 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v9 & 1;
}

uint64_t sub_1DAA5C(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0xD000000000000013;
  unint64_t v3 = 0x80000000002160A0;
  uint64_t v4 = a1;
  unint64_t v5 = 0xD000000000000013;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0x747369486B6F6F62;
      unint64_t v3 = 0xEB0000000079726FLL;
      break;
    case 2:
      unint64_t v5 = 0xD000000000000022;
      unint64_t v3 = 0x80000000002161C0;
      break;
    case 3:
      unint64_t v3 = 0xE800000000000000;
      unint64_t v5 = 0x495041616964656DLL;
      break;
    case 4:
      unint64_t v3 = 0xE400000000000000;
      unint64_t v5 = 1768055156;
      break;
    default:
      break;
  }
  unint64_t v6 = 0x80000000002160A0;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xEB0000000079726FLL;
      if (v5 == 0x747369486B6F6F62) {
        goto LABEL_13;
      }
      goto LABEL_16;
    case 2:
      unint64_t v6 = 0x80000000002161C0;
      if (v5 != 0xD000000000000022) {
        goto LABEL_16;
      }
      goto LABEL_13;
    case 3:
      unint64_t v6 = 0xE800000000000000;
      unint64_t v2 = 0x495041616964656DLL;
      goto LABEL_12;
    case 4:
      unint64_t v6 = 0xE400000000000000;
      if (v5 != 1768055156) {
        goto LABEL_16;
      }
      goto LABEL_13;
    default:
LABEL_12:
      if (v5 != v2) {
        goto LABEL_16;
      }
LABEL_13:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_16:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

uint64_t sub_1DAC24(unsigned __int8 a1, char a2)
{
  unint64_t v2 = 0x736B6F6F62;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  unint64_t v5 = 0x736B6F6F62;
  switch(v4)
  {
    case 1:
      unint64_t v5 = 0xD000000000000017;
      unint64_t v6 = "booksBySuggestedAuthors";
      goto LABEL_10;
    case 2:
      char v7 = "booksYouMightLike";
      goto LABEL_6;
    case 3:
      unint64_t v3 = 0xE600000000000000;
      unint64_t v5 = 0x756F59726F66;
      break;
    case 4:
      char v7 = "mangaYouMightLike";
LABEL_6:
      unint64_t v3 = (unint64_t)(v7 - 32) | 0x8000000000000000;
      unint64_t v5 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v5 = 0xD000000000000013;
      unint64_t v6 = "moreFromYourAuthors";
      goto LABEL_10;
    case 6:
      unint64_t v5 = 0x6974736567677573;
      unint64_t v3 = 0xEB00000000736E6FLL;
      break;
    case 7:
      unint64_t v5 = 0xD000000000000016;
      unint64_t v6 = "postHydrationFiltering";
LABEL_10:
      unint64_t v3 = (unint64_t)(v6 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  unint64_t v8 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v2 = 0xD000000000000017;
      char v9 = "booksBySuggestedAuthors";
      goto LABEL_20;
    case 2:
      char v10 = "booksYouMightLike";
      goto LABEL_16;
    case 3:
      unint64_t v8 = 0xE600000000000000;
      unint64_t v2 = 0x756F59726F66;
      break;
    case 4:
      char v10 = "mangaYouMightLike";
LABEL_16:
      unint64_t v8 = (unint64_t)(v10 - 32) | 0x8000000000000000;
      unint64_t v2 = 0xD000000000000011;
      break;
    case 5:
      unint64_t v2 = 0xD000000000000013;
      char v9 = "moreFromYourAuthors";
      goto LABEL_20;
    case 6:
      unint64_t v2 = 0x6974736567677573;
      unint64_t v8 = 0xEB00000000736E6FLL;
      break;
    case 7:
      unint64_t v2 = 0xD000000000000016;
      char v9 = "postHydrationFiltering";
LABEL_20:
      unint64_t v8 = (unint64_t)(v9 - 32) | 0x8000000000000000;
      break;
    default:
      break;
  }
  if (v5 == v2 && v3 == v8) {
    char v11 = 1;
  }
  else {
    char v11 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v11 & 1;
}

uint64_t sub_1DAE5C(char a1, char a2)
{
  BOOL v2 = (a1 & 1) == 0;
  if (a1) {
    unint64_t v3 = 0xD000000000000011;
  }
  else {
    unint64_t v3 = 0x6168637275706F63;
  }
  if (v2) {
    unint64_t v4 = 0xEA00000000006573;
  }
  else {
    unint64_t v4 = 0x8000000000216470;
  }
  if (a2) {
    unint64_t v5 = 0xD000000000000011;
  }
  else {
    unint64_t v5 = 0x6168637275706F63;
  }
  if (a2) {
    unint64_t v6 = 0x8000000000216470;
  }
  else {
    unint64_t v6 = 0xEA00000000006573;
  }
  if (v3 == v5 && v4 == v6) {
    char v7 = 1;
  }
  else {
    char v7 = sub_1FC5F0();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v7 & 1;
}

uint64_t sub_1DAF0C(unsigned __int8 a1, char a2)
{
  uint64_t v2 = 0x6C65766564;
  unint64_t v3 = 0xE500000000000000;
  uint64_t v4 = a1;
  uint64_t v5 = 0x6C65766564;
  switch(v4)
  {
    case 1:
      unint64_t v3 = 0xE200000000000000;
      uint64_t v5 = 24945;
      break;
    case 2:
      unint64_t v3 = 0xE700000000000000;
      uint64_t v5 = 0x676E6967617473;
      break;
    case 3:
      uint64_t v5 = 0x69746375646F7270;
      unint64_t v3 = 0xEA00000000006E6FLL;
      break;
    default:
      break;
  }
  unint64_t v6 = 0xE500000000000000;
  switch(a2)
  {
    case 1:
      unint64_t v6 = 0xE200000000000000;
      if (v5 == 24945) {
        goto LABEL_12;
      }
      goto LABEL_14;
    case 2:
      unint64_t v6 = 0xE700000000000000;
      uint64_t v2 = 0x676E6967617473;
      goto LABEL_9;
    case 3:
      unint64_t v6 = 0xEA00000000006E6FLL;
      if (v5 == 0x69746375646F7270) {
        goto LABEL_12;
      }
      goto LABEL_14;
    default:
LABEL_9:
      if (v5 != v2) {
        goto LABEL_14;
      }
LABEL_12:
      if (v3 == v6) {
        char v7 = 1;
      }
      else {
LABEL_14:
      }
        char v7 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return v7 & 1;
  }
}

Swift::Int sub_1DB084(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_124818(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_1DBCC4(v5);
  *a1 = v2;
  return result;
}

BOOL sub_1DB0F0(void *a1, void *a2)
{
  unint64_t v2 = a2[17];
  if (v2 >> 1 == 0xFFFFFFFF)
  {
    __break(1u);
    goto LABEL_16;
  }
  uint64_t v34 = a1[11];
  uint64_t v29 = a1[13];
  uint64_t v30 = a1[12];
  uint64_t v28 = a1[14];
  unint64_t v33 = a1[17];
  uint64_t v27 = a1[15];
  uint64_t v3 = a2[11];
  uint64_t v4 = a2[12];
  uint64_t v5 = a2[13];
  uint64_t v6 = a2[14];
  uint64_t v8 = a2[15];
  uint64_t v7 = a2[16];
  uint64_t v24 = a1[16];
  if (v2 >> 62 == 3)
  {
    uint64_t v9 = a2[11];
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v9 = swift_allocObject();
    *(_OWORD *)(v9 + 16) = xmmword_1FD2A0;
    *(void *)(v9 + 32) = v3;
    *(void *)(v9 + 40) = v4;
    *(void *)(v9 + 48) = v5;
    *(void *)(v9 + 56) = v6;
    *(void *)(v9 + 64) = v8;
    *(void *)(v9 + 72) = v7;
    *(unsigned char *)(v9 + 80) = v2 & 1;
  }
  uint64_t v10 = v4;
  uint64_t v11 = v5;
  uint64_t v12 = v6;
  uint64_t v13 = v8;
  uint64_t v14 = v10;
  uint64_t v15 = v11;
  uint64_t v16 = v12;
  sub_1244C();
  sub_1244C();
  double v26 = COERCE_DOUBLE(Array<A>.affinity.getter(v9));
  char v25 = v17;
  swift_bridgeObjectRelease();
  sub_1255C(v3, v14, v15, v16, v13, v7, v2);
  if (v33 >> 1 == 0xFFFFFFFF)
  {
LABEL_16:
    __break(1u);
    JUMPOUT(0x1DB424);
  }
  if (v33 >> 62 == 3)
  {
    uint64_t v18 = v34;
    uint64_t v19 = v24;
  }
  else
  {
    sub_12124(&qword_26D5D8);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_1FD2A0;
    *(void *)(v18 + 32) = v34;
    *(void *)(v18 + 40) = v30;
    *(void *)(v18 + 48) = v29;
    *(void *)(v18 + 56) = v28;
    uint64_t v19 = v24;
    *(void *)(v18 + 64) = v27;
    *(void *)(v18 + 72) = v24;
    *(unsigned char *)(v18 + 80) = v33 & 1;
  }
  if (v25) {
    double v20 = 0.0;
  }
  else {
    double v20 = v26;
  }
  sub_1244C();
  sub_1244C();
  uint64_t v32 = Array<A>.affinity.getter(v18);
  char v31 = v21;
  swift_bridgeObjectRelease();
  sub_1255C(v34, v30, v29, v28, v27, v19, v33);
  double v22 = *(double *)&v32;
  if (v31) {
    double v22 = 0.0;
  }
  return v20 < v22;
}

uint64_t sub_1DB444@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1DB480();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1DB480()
{
  memcpy(__dst, v0, 0x229uLL);
  uint64_t v5 = &off_2575E0;
  sub_1DB084((uint64_t *)&v5);
  uint64_t v1 = (uint64_t)v5;
  sub_12384(__dst);
  unint64_t v2 = sub_1DC950(v1, (uint64_t)__dst);
  sub_124B4(__dst);
  swift_release();
  uint64_t v5 = (_UNKNOWN **)v2;
  sub_12124(&qword_26C6D8);
  sub_948A0();
  uint64_t v3 = sub_1FB7B0();
  swift_bridgeObjectRelease();
  return v3;
}

void *sub_1DB55C@<X0>(void *__src@<X0>, uint64_t a2@<X1>, uint64_t *a3@<X2>, uint64_t a4@<X8>)
{
  memcpy(__dst, __src, 0x229uLL);
  long long v25 = *(_OWORD *)&__dst[1];
  v26[0] = *(_OWORD *)&__dst[3];
  v26[1] = *(_OWORD *)&__dst[5];
  *(_OWORD *)uint64_t v27 = *(_OWORD *)&__dst[7];
  *(_OWORD *)&v27[9] = *(_OWORD *)((char *)&__dst[8] + 1);
  int v8 = LOBYTE(__dst[1]);
  int v9 = *(unsigned __int8 *)(a2 + *(int *)(type metadata accessor for SeedBasedRecommendationRequest(0) + 32));
  if (v8) {
    uint64_t v10 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v10 = 0x6B6F6F6265;
  }
  if (v8) {
    unint64_t v11 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v11 = 0xE500000000000000;
  }
  if (v9) {
    uint64_t v12 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v12 = 0x6B6F6F6265;
  }
  if (v9) {
    unint64_t v13 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v13 = 0xE500000000000000;
  }
  if (v10 == v12 && v11 == v13)
  {
    swift_bridgeObjectRelease_n();
    goto LABEL_21;
  }
  char v15 = sub_1FC5F0();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v15)
  {
LABEL_21:
    memcpy(v23, __src, 0x229uLL);
    AuthorRecommendationSource.id.getter(v23);
    sub_55844((uint64_t)v23, a4, &qword_26EB40);
    return sub_12384(__dst);
  }
  sub_55844((uint64_t)v26 + 8, (uint64_t)v28, &qword_26C590);
  sub_55844((uint64_t)v28, (uint64_t)&v29, &qword_26C590);
  if (v30)
  {
    sub_AE3D0(v23);
    uint64_t v16 = v23;
  }
  else
  {
    memcpy(v23, __dst, 0x229uLL);
    v22[0] = v8 ^ 1;
    sub_1DB7C0(v29, v22, __dst[0], 0, __srca);
    memcpy(v22, __srca, 0x229uLL);
    AuthorRecommendationSource.id.getter(v22);
    uint64_t v18 = __srca[0];
    sub_12384(__srca);
    sub_12384(__dst);
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v20 = *a3;
    *a3 = 0x8000000000000000;
    sub_719B0(__dst, v18, isUniquelyReferenced_nonNull_native);
    *a3 = v20;
    swift_bridgeObjectRelease();
    sub_124B4(__srca);
    uint64_t v16 = v22;
  }
  return (void *)sub_55844((uint64_t)v16, a4, &qword_26EB40);
}

void *sub_1DB7C0@<X0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, void *a5@<X8>)
{
  char v6 = *a2;
  char v7 = *(unsigned char *)(v5 + 8);
  uint64_t v8 = *(void *)(v5 + 32);
  char v9 = *(unsigned char *)(v5 + 40);
  char v10 = a4 & 1;
  long long v39 = *(_OWORD *)(v5 + 48);
  uint64_t v11 = *(void *)(v5 + 64);
  uint64_t v12 = *(void *)(v5 + 72);
  char v13 = *(unsigned char *)(v5 + 80);
  uint64_t v32 = *(void *)(v5 + 96);
  uint64_t v33 = *(void *)(v5 + 88);
  uint64_t v30 = *(void *)(v5 + 112);
  uint64_t v31 = *(void *)(v5 + 104);
  unint64_t v14 = *(void *)(v5 + 136);
  uint64_t v45 = *(void *)(v5 + 144);
  uint64_t v46 = *(void *)(v5 + 128);
  uint64_t v28 = *(void *)(v5 + 152);
  uint64_t v29 = *(void *)(v5 + 120);
  long long v37 = *(_OWORD *)(v5 + 16);
  sub_55844(v5 + 160, (uint64_t)v57, &qword_26C518);
  uint64_t v47 = *(void *)(v5 + 544);
  __src[0] = v7;
  *(_OWORD *)&__src[8] = v37;
  *(void *)&__src[24] = v8;
  __src[32] = v9;
  *(_OWORD *)&__src[40] = v39;
  *(void *)&__src[56] = v11;
  *(void *)&__src[64] = v12;
  __src[72] = v13;
  char v49 = v6;
  Book.Metadata.copy(for:mappedAssetID:)(&v49, a3, v10, (uint64_t)v50);
  char v15 = v50[0];
  long long v42 = v51;
  uint64_t v40 = v52;
  char v38 = v53;
  long long v35 = v54;
  long long v36 = v55;
  char v34 = v56;
  if (v14 >> 1 == 0xFFFFFFFF)
  {
    uint64_t v16 = swift_bridgeObjectRetain();
    char v17 = 12;
    uint64_t v18 = v28;
    uint64_t v19 = v29;
    uint64_t v21 = v32;
    uint64_t v20 = v33;
    uint64_t v23 = v30;
    uint64_t v22 = v31;
    uint64_t v25 = v45;
    uint64_t v24 = v46;
    uint64_t v26 = v16;
  }
  else
  {
    uint64_t v21 = v32;
    uint64_t v20 = v33;
    *(void *)__src = v33;
    *(void *)&__src[8] = v32;
    uint64_t v23 = v30;
    uint64_t v22 = v31;
    *(void *)&__src[16] = v31;
    *(void *)&__src[24] = v30;
    uint64_t v18 = v28;
    uint64_t v19 = v29;
    *(void *)&__src[32] = v29;
    *(void *)&__src[40] = v46;
    *(void *)&__src[48] = v14;
    *(void *)&__src[56] = v45;
    *(void *)&__src[64] = v28;
    sub_12430(v33, v32, v31, v30, v29, v46, v14);
    sub_12430(v33, v32, v31, v30, v29, v46, v14);
    swift_bridgeObjectRetain();
    sub_161E30(&v49);
    sub_1255C(v33, v32, v31, v30, v29, v46, v14);
    char v17 = v49;
    uint64_t v24 = v46;
    uint64_t v25 = v45;
    uint64_t v26 = v47;
  }
  *(void *)__src = a1;
  __src[8] = v15;
  *(_OWORD *)&__src[16] = v42;
  *(void *)&__src[32] = v40;
  __src[40] = v38;
  *(_OWORD *)&__src[48] = v35;
  *(_OWORD *)&__src[64] = v36;
  __src[80] = v34;
  *(void *)&__src[88] = v20;
  *(void *)&__src[96] = v21;
  *(void *)&__src[104] = v22;
  *(void *)&__src[112] = v23;
  *(void *)&__src[120] = v19;
  *(void *)&__src[128] = v24;
  *(void *)&__src[136] = v14;
  *(void *)&__src[144] = v25;
  *(void *)&__src[152] = v18;
  sub_55844((uint64_t)v57, (uint64_t)&__src[160], &qword_26C518);
  *(void *)&__src[544] = v26;
  __src[552] = v17;
  return memcpy(a5, __src, 0x229uLL);
}

uint64_t Book.Metadata.copy(for:mappedAssetID:)@<X0>(unsigned char *a1@<X0>, uint64_t a2@<X1>, char a3@<W2>, uint64_t a4@<X8>)
{
  int v6 = *a1;
  char v7 = *v4;
  uint64_t v38 = *((void *)v4 + 2);
  uint64_t v39 = *((void *)v4 + 1);
  uint64_t v37 = *((void *)v4 + 3);
  char v36 = v4[32];
  uint64_t v8 = *((void *)v4 + 5);
  uint64_t v9 = *((void *)v4 + 6);
  uint64_t v11 = *((void *)v4 + 7);
  uint64_t v10 = *((void *)v4 + 8);
  char v12 = v4[72];
  uint64_t v13 = 0x6B6F6F6265;
  if (*a1) {
    uint64_t v14 = 0x6F6F626F69647561;
  }
  else {
    uint64_t v14 = 0x6B6F6F6265;
  }
  if (v6) {
    unint64_t v15 = 0xE90000000000006BLL;
  }
  else {
    unint64_t v15 = 0xE500000000000000;
  }
  if (*v4)
  {
    uint64_t v13 = 0x6F6F626F69647561;
    unint64_t v16 = 0xE90000000000006BLL;
  }
  else
  {
    unint64_t v16 = 0xE500000000000000;
  }
  if (v14 == v13 && v15 == v16)
  {
    swift_bridgeObjectRelease_n();
    uint64_t v29 = v38;
    uint64_t v28 = v39;
    uint64_t v30 = v37;
    char v31 = v36;
  }
  else
  {
    char v35 = a3 & 1;
    char v33 = v6;
    char v18 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    uint64_t v19 = 2;
    if (v12) {
      uint64_t v20 = 0;
    }
    else {
      uint64_t v20 = v8;
    }
    if (v12) {
      uint64_t v21 = 0;
    }
    else {
      uint64_t v21 = v10;
    }
    if (v12)
    {
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v19 = v11 & 1;
      uint64_t v22 = v9;
    }
    if (v11 == 2) {
      uint64_t v23 = v8;
    }
    else {
      uint64_t v23 = v20;
    }
    if (v11 == 2) {
      uint64_t v24 = v9;
    }
    else {
      uint64_t v24 = v21;
    }
    if (v11 == 2)
    {
      uint64_t v19 = v11;
      uint64_t v22 = v10;
      char v25 = v12;
    }
    else
    {
      char v25 = 0;
    }
    if ((v18 & 1) == 0) {
      char v7 = v33;
    }
    uint64_t v26 = v37;
    if (v18)
    {
      char v27 = v36;
    }
    else
    {
      uint64_t v26 = a2;
      char v27 = v35;
    }
    if ((v18 & 1) == 0)
    {
      uint64_t v8 = v23;
      uint64_t v9 = v24;
      uint64_t v11 = v19;
      uint64_t v10 = v22;
      char v12 = v25;
    }
    uint64_t v29 = v38;
    uint64_t v28 = v39;
    uint64_t v30 = v26;
    char v31 = v27;
  }
  *(unsigned char *)a4 = v7;
  *(void *)(a4 + 8) = v28;
  *(void *)(a4 + 16) = v29;
  *(void *)(a4 + 24) = v30;
  *(unsigned char *)(a4 + 32) = v31;
  *(void *)(a4 + 40) = v8;
  *(void *)(a4 + 48) = v9;
  *(void *)(a4 + 56) = v11;
  *(void *)(a4 + 64) = v10;
  *(unsigned char *)(a4 + 72) = v12;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t type metadata accessor for SeedBasedRecommendationRequestMapper()
{
  return self;
}

Swift::Int sub_1DBCC4(uint64_t *a1)
{
  uint64_t v2 = v1;
  Swift::Int v4 = a1[1];
  Swift::Int result = sub_1FC570(v4);
  if (result >= v4)
  {
    if (v4 < 0) {
      goto LABEL_192;
    }
    if (v4) {
      return sub_1DC4D4(0, v4, 1, a1);
    }
    return result;
  }
  if (v4 >= 0) {
    uint64_t v6 = v4;
  }
  else {
    uint64_t v6 = v4 + 1;
  }
  if (v4 < -1) {
    goto LABEL_200;
  }
  Swift::Int v109 = v4 - 2;
  Swift::Int v106 = result;
  Swift::Int v107 = v4;
  unint64_t v104 = a1;
  if (v4 < 2)
  {
    uint64_t v9 = _swiftEmptyArrayStorage;
    __dst = &_swiftEmptyArrayStorage[4];
    if (v4 != 1)
    {
      unint64_t v14 = _swiftEmptyArrayStorage[2];
      char v12 = (char *)_swiftEmptyArrayStorage;
      if (v14 < 2)
      {
LABEL_154:
        swift_bridgeObjectRelease();
        void v9[2] = 0;
        return swift_bridgeObjectRelease();
      }
LABEL_157:
      uint64_t v96 = *v104;
      while (1)
      {
        unint64_t v97 = v14 - 2;
        if (v14 < 2) {
          goto LABEL_187;
        }
        if (!v96) {
          goto LABEL_199;
        }
        uint64_t v98 = v12;
        uint64_t v99 = *(void *)&v12[16 * v97 + 32];
        uint64_t v100 = *(void *)&v12[16 * v14 + 24];
        sub_1DC610((unsigned char *)(v96 + v99), (unsigned char *)(v96 + *(void *)&v12[16 * v14 + 16]), v96 + v100, __dst);
        if (v2) {
          goto LABEL_154;
        }
        if (v100 < v99) {
          goto LABEL_188;
        }
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v98 = sub_70B24((uint64_t)v98);
        }
        if (v97 >= *((void *)v98 + 2)) {
          goto LABEL_189;
        }
        uint64_t v101 = &v98[16 * v97 + 32];
        *(void *)uint64_t v101 = v99;
        *((void *)v101 + 1) = v100;
        unint64_t v102 = *((void *)v98 + 2);
        if (v14 > v102) {
          goto LABEL_190;
        }
        memmove(&v98[16 * v14 + 16], &v98[16 * v14 + 32], 16 * (v102 - v14));
        char v12 = v98;
        *((void *)v98 + 2) = v102 - 1;
        unint64_t v14 = v102 - 1;
        if (v102 <= 2) {
          goto LABEL_154;
        }
      }
    }
    char v105 = _swiftEmptyArrayStorage;
    uint64_t v111 = v1;
  }
  else
  {
    uint64_t v111 = v1;
    uint64_t v7 = v6 >> 1;
    uint64_t v8 = sub_1FBB40();
    *(void *)(v8 + 16) = v7;
    char v105 = (void *)v8;
    __dst = (unsigned char *)(v8 + 32);
  }
  Swift::Int v10 = 0;
  uint64_t v11 = *a1;
  char v12 = (char *)_swiftEmptyArrayStorage;
  Swift::Int v13 = v107;
  uint64_t v112 = *a1;
  while (1)
  {
    Swift::Int v15 = v10++;
    if (v10 >= v13) {
      goto LABEL_71;
    }
    unint64_t v16 = v12;
    if (*(unsigned char *)(v11 + v10)) {
      uint64_t v17 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v17 = 0x6B6F6F6265;
    }
    if (*(unsigned char *)(v11 + v10)) {
      unint64_t v18 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v18 = 0xE500000000000000;
    }
    if (*(unsigned char *)(v11 + v15)) {
      uint64_t v19 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v19 = 0x6B6F6F6265;
    }
    if (*(unsigned char *)(v11 + v15)) {
      unint64_t v20 = 0xE90000000000006BLL;
    }
    else {
      unint64_t v20 = 0xE500000000000000;
    }
    if (v17 == v19 && v18 == v20) {
      int v22 = 0;
    }
    else {
      int v22 = sub_1FC5F0();
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    Swift::Int v10 = v15 + 2;
    Swift::Int v23 = v15;
    if (v15 + 2 >= v107) {
      goto LABEL_61;
    }
    while (1)
    {
      if (*(unsigned char *)(v112 + v23 + 2)) {
        uint64_t v25 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v25 = 0x6B6F6F6265;
      }
      if (*(unsigned char *)(v112 + v23 + 2)) {
        unint64_t v26 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v26 = 0xE500000000000000;
      }
      if (*(unsigned char *)(v112 + v23 + 1)) {
        uint64_t v27 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v27 = 0x6B6F6F6265;
      }
      if (*(unsigned char *)(v112 + v23 + 1)) {
        unint64_t v28 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v28 = 0xE500000000000000;
      }
      if (v25 == v27 && v26 == v28)
      {
        swift_bridgeObjectRelease_n();
        if (v22)
        {
          Swift::Int v10 = v23 + 2;
          char v12 = v16;
          uint64_t v11 = v112;
          goto LABEL_62;
        }
        goto LABEL_39;
      }
      int v24 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v22 ^ v24)) {
        break;
      }
LABEL_39:
      if (v109 == ++v23)
      {
        Swift::Int v10 = v107;
        goto LABEL_61;
      }
    }
    Swift::Int v10 = v23 + 2;
LABEL_61:
    char v12 = v16;
    uint64_t v11 = v112;
    if (v22)
    {
LABEL_62:
      if (v10 < v15) {
        goto LABEL_193;
      }
      if (v15 < v10)
      {
        Swift::Int v30 = v10 - 1;
        Swift::Int v31 = v15;
        do
        {
          if (v31 != v30)
          {
            if (!v11) {
              goto LABEL_198;
            }
            char v32 = *(unsigned char *)(v11 + v31);
            *(unsigned char *)(v11 + v31) = *(unsigned char *)(v11 + v30);
            *(unsigned char *)(v11 + v30) = v32;
          }
          BOOL v78 = ++v31 < v30--;
        }
        while (v78);
      }
    }
LABEL_71:
    if (v10 < v107)
    {
      if (__OFSUB__(v10, v15)) {
        goto LABEL_191;
      }
      if (v10 - v15 < v106) {
        break;
      }
    }
LABEL_105:
    if (v10 < v15) {
      goto LABEL_186;
    }
    uint64_t v45 = v12;
    if (swift_isUniquelyReferenced_nonNull_native()) {
      char v12 = v45;
    }
    else {
      char v12 = sub_7004C(0, *((void *)v45 + 2) + 1, 1, v45);
    }
    unint64_t v47 = *((void *)v12 + 2);
    unint64_t v46 = *((void *)v12 + 3);
    unint64_t v14 = v47 + 1;
    uint64_t v11 = v112;
    if (v47 >= v46 >> 1)
    {
      char v12 = sub_7004C((char *)(v46 > 1), v47 + 1, 1, v12);
      uint64_t v11 = v112;
    }
    *((void *)v12 + 2) = v14;
    uint64_t v48 = v12 + 32;
    char v49 = &v12[16 * v47 + 32];
    *(void *)char v49 = v15;
    *((void *)v49 + 1) = v10;
    if (v47)
    {
      while (1)
      {
        unint64_t v50 = v14 - 1;
        if (v14 >= 4)
        {
          long long v55 = &v48[16 * v14];
          uint64_t v56 = *((void *)v55 - 8);
          uint64_t v57 = *((void *)v55 - 7);
          BOOL v61 = __OFSUB__(v57, v56);
          uint64_t v58 = v57 - v56;
          if (v61) {
            goto LABEL_175;
          }
          uint64_t v60 = *((void *)v55 - 6);
          uint64_t v59 = *((void *)v55 - 5);
          BOOL v61 = __OFSUB__(v59, v60);
          uint64_t v53 = v59 - v60;
          char v54 = v61;
          if (v61) {
            goto LABEL_176;
          }
          unint64_t v62 = v14 - 2;
          char v63 = &v48[16 * v14 - 32];
          uint64_t v65 = *(void *)v63;
          uint64_t v64 = *((void *)v63 + 1);
          BOOL v61 = __OFSUB__(v64, v65);
          uint64_t v66 = v64 - v65;
          if (v61) {
            goto LABEL_178;
          }
          BOOL v61 = __OFADD__(v53, v66);
          uint64_t v67 = v53 + v66;
          if (v61) {
            goto LABEL_181;
          }
          if (v67 >= v58)
          {
            BOOL v85 = &v48[16 * v50];
            uint64_t v87 = *(void *)v85;
            uint64_t v86 = *((void *)v85 + 1);
            BOOL v61 = __OFSUB__(v86, v87);
            uint64_t v88 = v86 - v87;
            if (v61) {
              goto LABEL_185;
            }
            BOOL v78 = v53 < v88;
            goto LABEL_142;
          }
        }
        else
        {
          if (v14 != 3)
          {
            uint64_t v79 = *((void *)v12 + 4);
            uint64_t v80 = *((void *)v12 + 5);
            BOOL v61 = __OFSUB__(v80, v79);
            uint64_t v72 = v80 - v79;
            char v73 = v61;
            goto LABEL_136;
          }
          uint64_t v52 = *((void *)v12 + 4);
          uint64_t v51 = *((void *)v12 + 5);
          BOOL v61 = __OFSUB__(v51, v52);
          uint64_t v53 = v51 - v52;
          char v54 = v61;
        }
        if (v54) {
          goto LABEL_177;
        }
        unint64_t v62 = v14 - 2;
        uint64_t v68 = &v48[16 * v14 - 32];
        uint64_t v70 = *(void *)v68;
        uint64_t v69 = *((void *)v68 + 1);
        BOOL v71 = __OFSUB__(v69, v70);
        uint64_t v72 = v69 - v70;
        char v73 = v71;
        if (v71) {
          goto LABEL_180;
        }
        int v74 = &v48[16 * v50];
        uint64_t v76 = *(void *)v74;
        uint64_t v75 = *((void *)v74 + 1);
        BOOL v61 = __OFSUB__(v75, v76);
        uint64_t v77 = v75 - v76;
        if (v61) {
          goto LABEL_183;
        }
        if (__OFADD__(v72, v77)) {
          goto LABEL_184;
        }
        if (v72 + v77 >= v53)
        {
          BOOL v78 = v53 < v77;
LABEL_142:
          if (v78) {
            unint64_t v50 = v62;
          }
          goto LABEL_144;
        }
LABEL_136:
        if (v73) {
          goto LABEL_179;
        }
        char v81 = &v48[16 * v50];
        uint64_t v83 = *(void *)v81;
        uint64_t v82 = *((void *)v81 + 1);
        BOOL v61 = __OFSUB__(v82, v83);
        uint64_t v84 = v82 - v83;
        if (v61) {
          goto LABEL_182;
        }
        if (v84 < v72) {
          goto LABEL_15;
        }
LABEL_144:
        unint64_t v89 = v50 - 1;
        if (v50 - 1 >= v14)
        {
          __break(1u);
LABEL_172:
          __break(1u);
LABEL_173:
          __break(1u);
LABEL_174:
          __break(1u);
LABEL_175:
          __break(1u);
LABEL_176:
          __break(1u);
LABEL_177:
          __break(1u);
LABEL_178:
          __break(1u);
LABEL_179:
          __break(1u);
LABEL_180:
          __break(1u);
LABEL_181:
          __break(1u);
LABEL_182:
          __break(1u);
LABEL_183:
          __break(1u);
LABEL_184:
          __break(1u);
LABEL_185:
          __break(1u);
LABEL_186:
          __break(1u);
LABEL_187:
          __break(1u);
LABEL_188:
          __break(1u);
LABEL_189:
          __break(1u);
LABEL_190:
          __break(1u);
LABEL_191:
          __break(1u);
LABEL_192:
          __break(1u);
LABEL_193:
          __break(1u);
LABEL_194:
          __break(1u);
          goto LABEL_195;
        }
        if (!v11) {
          goto LABEL_197;
        }
        uint64_t v90 = v12;
        os_log_type_t v91 = &v48[16 * v89];
        uint64_t v92 = *(void *)v91;
        Swift::String v93 = &v48[16 * v50];
        uint64_t v94 = *((void *)v93 + 1);
        sub_1DC610((unsigned char *)(v11 + *(void *)v91), (unsigned char *)(v11 + *(void *)v93), v11 + v94, __dst);
        if (v111)
        {
          uint64_t v9 = v105;
          goto LABEL_154;
        }
        if (v94 < v92) {
          goto LABEL_172;
        }
        if (v50 > *((void *)v90 + 2)) {
          goto LABEL_173;
        }
        *(void *)os_log_type_t v91 = v92;
        *(void *)&v48[16 * v89 + 8] = v94;
        unint64_t v95 = *((void *)v90 + 2);
        if (v50 >= v95) {
          goto LABEL_174;
        }
        unint64_t v14 = v95 - 1;
        memmove(&v48[16 * v50], v93 + 16, 16 * (v95 - 1 - v50));
        char v12 = v90;
        *((void *)v90 + 2) = v95 - 1;
        uint64_t v11 = v112;
        if (v95 <= 2) {
          goto LABEL_15;
        }
      }
    }
    unint64_t v14 = 1;
LABEL_15:
    Swift::Int v13 = v107;
    if (v10 >= v107)
    {
      uint64_t v2 = v111;
      uint64_t v9 = v105;
      if (v14 < 2) {
        goto LABEL_154;
      }
      goto LABEL_157;
    }
  }
  Swift::Int v33 = v15 + v106;
  if (__OFADD__(v15, v106)) {
    goto LABEL_194;
  }
  if (v33 >= v107) {
    Swift::Int v33 = v107;
  }
  if (v33 >= v15)
  {
    if (v10 != v33)
    {
      uint64_t v108 = v15;
      uint64_t v103 = v12;
      char v34 = (char *)(v11 + v10);
      do
      {
        Swift::Int v35 = v33;
        char v36 = *(unsigned char *)(v11 + v10);
        uint64_t v37 = v108;
        uint64_t v38 = v34;
        while (1)
        {
          uint64_t v39 = (v36 & 1) != 0 ? 0x6F6F626F69647561 : 0x6B6F6F6265;
          unint64_t v40 = (v36 & 1) != 0 ? 0xE90000000000006BLL : 0xE500000000000000;
          uint64_t v41 = *(v38 - 1) ? 0x6F6F626F69647561 : 0x6B6F6F6265;
          unint64_t v42 = *(v38 - 1) ? 0xE90000000000006BLL : 0xE500000000000000;
          if (v39 == v41 && v40 == v42) {
            break;
          }
          char v44 = sub_1FC5F0();
          swift_bridgeObjectRelease();
          swift_bridgeObjectRelease();
          if ((v44 & 1) == 0) {
            goto LABEL_81;
          }
          uint64_t v11 = v112;
          if (!v112) {
            goto LABEL_196;
          }
          char v36 = *v38;
          char *v38 = *(v38 - 1);
          *(v38 - 1) = v36;
          ++v37;
          --v38;
          if (v10 == v37) {
            goto LABEL_82;
          }
        }
        swift_bridgeObjectRelease_n();
LABEL_81:
        uint64_t v11 = v112;
LABEL_82:
        ++v10;
        ++v34;
        Swift::Int v33 = v35;
      }
      while (v10 != v35);
      Swift::Int v10 = v35;
      char v12 = v103;
      Swift::Int v15 = v108;
    }
    goto LABEL_105;
  }
LABEL_195:
  __break(1u);
LABEL_196:
  __break(1u);
LABEL_197:
  __break(1u);
LABEL_198:
  __break(1u);
LABEL_199:
  __break(1u);
LABEL_200:
  Swift::Int result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_1DC4D4(uint64_t result, uint64_t a2, uint64_t a3, uint64_t *a4)
{
  uint64_t v16 = result;
  if (a3 != a2)
  {
    uint64_t v4 = a3;
    uint64_t v5 = *a4;
    uint64_t v6 = (unsigned char *)(*a4 + a3);
LABEL_6:
    char v7 = *(unsigned char *)(v5 + v4);
    uint64_t v8 = v16;
    uint64_t v17 = v6;
    while (1)
    {
      if (v7) {
        uint64_t v9 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v9 = 0x6B6F6F6265;
      }
      if (v7) {
        unint64_t v10 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v10 = 0xE500000000000000;
      }
      if (*(v6 - 1)) {
        uint64_t v11 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v11 = 0x6B6F6F6265;
      }
      if (*(v6 - 1)) {
        unint64_t v12 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v12 = 0xE500000000000000;
      }
      if (v9 == v11 && v10 == v12)
      {
        Swift::Int result = swift_bridgeObjectRelease_n();
LABEL_5:
        ++v4;
        uint64_t v6 = v17 + 1;
        if (v4 == a2) {
          return result;
        }
        goto LABEL_6;
      }
      char v14 = sub_1FC5F0();
      swift_bridgeObjectRelease();
      Swift::Int result = swift_bridgeObjectRelease();
      if ((v14 & 1) == 0) {
        goto LABEL_5;
      }
      if (!v5) {
        break;
      }
      char v7 = *v6;
      *uint64_t v6 = *(v6 - 1);
      *(v6 - 1) = v7;
      ++v8;
      --v6;
      if (v4 == v8) {
        goto LABEL_5;
      }
    }
    __break(1u);
  }
  return result;
}

uint64_t sub_1DC610(unsigned char *__src, unsigned char *a2, unint64_t a3, unsigned char *__dst)
{
  Swift::Int v31 = __src;
  uint64_t v4 = __dst;
  uint64_t v6 = a2;
  char v7 = __src;
  size_t v8 = a2 - __src;
  unint64_t v9 = a3 - (void)a2;
  Swift::Int v30 = __dst;
  if (a2 - __src >= (uint64_t)(a3 - (void)a2))
  {
    if ((v9 & 0x8000000000000000) != 0) {
      goto LABEL_73;
    }
    if (__dst != a2 || a3 <= (unint64_t)__dst) {
      memmove(__dst, a2, a3 - (void)a2);
    }
    unint64_t v18 = &v4[v9];
    uint64_t v29 = &v4[v9];
    Swift::Int v31 = v6;
    if (v7 >= v6 || (unsigned char *)a3 == v6)
    {
LABEL_72:
      sub_70A80((void **)&v31, (const void **)&v30, &v29);
      return 1;
    }
    uint64_t v19 = (unsigned char *)(a3 - 1);
    while (1)
    {
      unint64_t v20 = v19 + 1;
      if (*(v18 - 1)) {
        uint64_t v21 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v21 = 0x6B6F6F6265;
      }
      if (*(v18 - 1)) {
        unint64_t v22 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v22 = 0xE500000000000000;
      }
      if (*(v6 - 1)) {
        uint64_t v23 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v23 = 0x6B6F6F6265;
      }
      if (*(v6 - 1)) {
        unint64_t v24 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v24 = 0xE500000000000000;
      }
      if (v21 == v23 && v22 == v24)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v26 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v26)
        {
          uint64_t v27 = v6 - 1;
          if (v20 != v6 || v19 >= v6) {
            *uint64_t v19 = *v27;
          }
          Swift::Int v31 = v6 - 1;
          if (v27 <= v7) {
            goto LABEL_72;
          }
          goto LABEL_71;
        }
      }
      uint64_t v29 = v18 - 1;
      if (v20 < v18 || v19 >= v18 || v20 != v18) {
        *uint64_t v19 = *(v18 - 1);
      }
      uint64_t v27 = v6;
      --v18;
      if (v6 <= v7) {
        goto LABEL_72;
      }
LABEL_71:
      --v19;
      uint64_t v6 = v27;
      if (v18 <= v4) {
        goto LABEL_72;
      }
    }
  }
  if ((v8 & 0x8000000000000000) == 0)
  {
    if (__dst != __src || a2 <= __dst) {
      memmove(__dst, __src, v8);
    }
    unint64_t v10 = &v4[v8];
    uint64_t v29 = &v4[v8];
    if (v6 != v7 && (unint64_t)v6 < a3)
    {
      while (1)
      {
        uint64_t v11 = *v6 ? 0x6F6F626F69647561 : 0x6B6F6F6265;
        unint64_t v12 = *v6 ? 0xE90000000000006BLL : 0xE500000000000000;
        uint64_t v13 = *v4 ? 0x6F6F626F69647561 : 0x6B6F6F6265;
        unint64_t v14 = *v4 ? 0xE90000000000006BLL : 0xE500000000000000;
        if (v11 == v13 && v12 == v14) {
          break;
        }
        char v16 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if ((v16 & 1) == 0) {
          goto LABEL_30;
        }
        uint64_t v17 = v6 + 1;
        if (v7 < v6 || v7 >= v17 || v7 != v6) {
          *char v7 = *v6;
        }
LABEL_33:
        ++v7;
        if (v4 < v10)
        {
          uint64_t v6 = v17;
          if ((unint64_t)v17 < a3) {
            continue;
          }
        }
        Swift::Int v31 = v7;
        goto LABEL_72;
      }
      swift_bridgeObjectRelease_n();
LABEL_30:
      if (v7 != v4) {
        *char v7 = *v4;
      }
      Swift::Int v30 = ++v4;
      uint64_t v17 = v6;
      goto LABEL_33;
    }
    goto LABEL_72;
  }
LABEL_73:
  uint64_t result = sub_1FC2B0();
  __break(1u);
  return result;
}

void *sub_1DC950(uint64_t a1, uint64_t a2)
{
  int64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    unint64_t v5 = 0xE90000000000006BLL;
    sub_46588(0, v2, 0);
    uint64_t v6 = (unsigned char *)(a1 + 32);
    char v19 = *(unsigned char *)(a2 + 40);
    if (*(unsigned char *)(a2 + 8)) {
      uint64_t v7 = 0x6F6F626F69647561;
    }
    else {
      uint64_t v7 = 0x6B6F6F6265;
    }
    if ((*(unsigned char *)(a2 + 8) & 1) == 0) {
      unint64_t v5 = 0xE500000000000000;
    }
    uint64_t v20 = v7;
    do
    {
      if (*v6) {
        uint64_t v8 = 0x6F6F626F69647561;
      }
      else {
        uint64_t v8 = 0x6B6F6F6265;
      }
      if (*v6) {
        unint64_t v9 = 0xE90000000000006BLL;
      }
      else {
        unint64_t v9 = 0xE500000000000000;
      }
      if (v8 == v7 && v9 == v5)
      {
        swift_bridgeObjectRelease_n();
      }
      else
      {
        char v11 = sub_1FC5F0();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        if (v11 & 1) == 0 && (v19)
        {
          unint64_t v14 = 0xE400000000000000;
          uint64_t v12 = 1701736302;
          goto LABEL_23;
        }
      }
      uint64_t v12 = sub_1FC580();
      unint64_t v14 = v13;
LABEL_23:
      unint64_t v16 = _swiftEmptyArrayStorage[2];
      unint64_t v15 = _swiftEmptyArrayStorage[3];
      if (v16 >= v15 >> 1) {
        sub_46588(v15 > 1, v16 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v16 + 1;
      uint64_t v17 = &_swiftEmptyArrayStorage[2 * v16];
      v17[4] = v12;
      v17[5] = v14;
      ++v6;
      --v2;
      uint64_t v7 = v20;
    }
    while (v2);
  }
  return _swiftEmptyArrayStorage;
}

void SuggestionsOptions.mediaType.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 32);
}

uint64_t SuggestionsOptions.maxRecommendationCount.getter()
{
  return *(void *)(v0 + 64);
}

__n128 SuggestionsOptions.init(userInfo:storeInfo:mediaType:allGenresAllowed:allowedSales:explicitAllowed:excludedStoreIDs:maxRecommendationCount:)@<Q0>(__n128 *a1@<X0>, unint64_t *a2@<X1>, unsigned __int8 *a3@<X2>, unsigned __int8 a4@<W3>, unint64_t *a5@<X4>, unsigned __int8 a6@<W5>, unint64_t a7@<X6>, unint64_t a8@<X7>, __n128 *a9@<X8>)
{
  unint64_t v9 = *a2;
  unint64_t v10 = a2[1];
  unsigned __int8 v11 = *a3;
  unint64_t v12 = *a5;
  __n128 result = *a1;
  *a9 = *a1;
  a9[1].n128_u64[0] = v9;
  a9[1].n128_u64[1] = v10;
  a9[2].n128_u8[0] = v11;
  a9[2].n128_u8[1] = a4;
  a9[2].n128_u64[1] = v12;
  a9[3].n128_u8[0] = a6;
  a9[3].n128_u64[1] = a7;
  a9[4].n128_u64[0] = a8;
  return result;
}

uint64_t destroy for SuggestionsOptions()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for SuggestionsOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  uint64_t v5 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v5;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for SuggestionsOptions(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

uint64_t assignWithTake for SuggestionsOptions(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 32) = *(unsigned char *)(a2 + 32);
  *(unsigned char *)(a1 + 33) = *(unsigned char *)(a2 + 33);
  *(void *)(a1 + 40) = *(void *)(a2 + 40);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  return a1;
}

ValueMetadata *type metadata accessor for SuggestionsOptions()
{
  return &type metadata for SuggestionsOptions;
}

uint64_t dispatch thunk of SuggestionsServiceType.fetchBooks(with:configuration:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unsigned __int8 v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  unint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *unint64_t v9 = v4;
  v9[1] = sub_57490;
  return v11(a1, a2, a3, a4);
}

void sub_1DCE88(uint64_t *a1, uint64_t a2, uint64_t *a3, void *a4, char a5, double a6)
{
  uint64_t v6 = a1[1];
  if (*(void *)(v6 + 16))
  {
    uint64_t v12 = *a1;
    unint64_t v13 = sub_4CD3C(0, 0);
    if (v14)
    {
      double v15 = (*(double *)(*(void *)(v6 + 56) + 8 * v13) + *(double *)(a2 + 352)) / (*(double *)(a2 + 352) + 1.0);
      if (v15 <= 0.0)
      {
        if (qword_26C3D8 != -1) {
          swift_once();
        }
        uint64_t v44 = sub_1FB430();
        sub_6DBC8(v44, (uint64_t)qword_2A5C70);
        uint64_t v45 = sub_1FB410();
        os_log_type_t v46 = sub_1FBDA0();
        if (os_log_type_enabled(v45, v46))
        {
          unint64_t v47 = (uint8_t *)swift_slowAlloc();
          *(_DWORD *)unint64_t v47 = 134217984;
          *(void *)&long long v57 = v12;
          sub_1FBED0();
          _os_log_impl(&dword_0, v45, v46, "received negative conditional score for %llu. ignoring", v47, 0xCu);
          swift_slowDealloc();
        }
      }
      else
      {
        uint64_t v16 = *a3;
        double v17 = 0.0;
        if (*(void *)(*a3 + 16))
        {
          uint64_t v18 = sub_56168(v12);
          if (v19)
          {
            uint64_t v20 = *(void *)(v16 + 56) + 80 * v18;
            uint64_t v51 = *(unsigned __int8 *)(v20 + 8);
            uint64_t v53 = *(void *)v20;
            uint64_t v21 = *(void *)(v20 + 16);
            uint64_t v22 = *(void *)(v20 + 32);
            char v23 = *(unsigned char *)(v20 + 40);
            uint64_t v24 = *(void *)(v20 + 48);
            double v25 = *(double *)(v20 + 72);
            LOBYTE(v57) = *(unsigned char *)(v20 + 24);
            uint64_t v48 = v22;
            uint64_t v49 = v21;
            sub_5480C(v22, v23);
            swift_bridgeObjectRetain();
            swift_bridgeObjectRetain();
            if (v24)
            {
              double v17 = v25;
              sub_1DD31C(v53, v51, v49, v57, v48, v23, v24);
            }
          }
        }
        uint64_t v26 = *a3;
        if (!*(void *)(*a3 + 16)) {
          goto LABEL_12;
        }
        uint64_t v27 = sub_56168(v12);
        if ((v28 & 1) == 0) {
          goto LABEL_12;
        }
        uint64_t v29 = *(void *)(v26 + 56) + 80 * v27;
        uint64_t v52 = *(unsigned __int8 *)(v29 + 8);
        uint64_t v54 = *(void *)v29;
        uint64_t v30 = *(void *)(v29 + 32);
        char v31 = *(unsigned char *)(v29 + 40);
        uint64_t v32 = *(void *)(v29 + 48);
        uint64_t v50 = *(void *)(v29 + 16);
        unint64_t v33 = *(void *)(v29 + 64);
        LOBYTE(v57) = *(unsigned char *)(v29 + 24);
        sub_5480C(v30, v31);
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        if (!v32 || (swift_bridgeObjectRetain(), sub_1DD31C(v54, v52, v50, v57, v30, v31, v32), !v33))
        {
LABEL_12:
          unint64_t v33 = sub_160EB0((uint64_t)_swiftEmptyArrayStorage);
          swift_bridgeObjectRelease();
        }
        char v34 = _swiftEmptyArrayStorage;
        if (*(void *)(v33 + 16))
        {
          swift_bridgeObjectRetain();
          unint64_t v35 = sub_4C744(0);
          if (v36)
          {
            char v34 = *(void **)(*(void *)(v33 + 56) + 8 * v35);
            swift_bridgeObjectRetain();
          }
          swift_bridgeObjectRelease();
        }
        char v55 = a5 & 1;
        double v37 = v15 * a6;
        sub_12384(a4);
        swift_bridgeObjectRetain();
        uint64_t v38 = v34;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v38 = sub_41974(0, v34[2] + 1, 1, v34);
        }
        double v39 = v37 + v17;
        unint64_t v41 = v38[2];
        unint64_t v40 = v38[3];
        if (v41 >= v40 >> 1) {
          uint64_t v38 = sub_41974((void *)(v40 > 1), v41 + 1, 1, v38);
        }
        v38[2] = v41 + 1;
        memcpy(&v38[70 * v41 + 4], a4, 0x229uLL);
        swift_bridgeObjectRelease();
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        sub_71AE4((uint64_t)v38, 0, isUniquelyReferenced_nonNull_native);
        swift_bridgeObjectRelease();
        *(void *)&long long v57 = v12;
        BYTE8(v57) = v55;
        uint64_t v58 = 0;
        char v59 = 1;
        uint64_t v60 = 0;
        char v61 = -1;
        unint64_t v62 = _swiftEmptyArrayStorage;
        double v63 = v15;
        unint64_t v64 = v33;
        double v65 = v39;
        char v43 = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v56 = *a3;
        *a3 = 0x8000000000000000;
        sub_710C4(&v57, v12, v43);
        *a3 = v56;
        swift_bridgeObjectRelease();
      }
    }
  }
}

uint64_t type metadata accessor for BooksBackendPostScorer()
{
  return self;
}

uint64_t sub_1DD31C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, char a6, uint64_t a7)
{
  if (a7)
  {
    sub_54820(a5, a6);
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t BooksPersonalizationMetadataCache.__allocating_init(fetchService:subfolder:configurationService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = swift_allocObject();
  BooksPersonalizationMetadataCache.init(fetchService:subfolder:configurationService:)(a1, a2, a3, a4);
  return v8;
}

uint64_t sub_1DD3D8(uint64_t a1)
{
  uint64_t v1 = *(void (**)(uint64_t))(a1 + 32);
  uint64_t v2 = swift_retain();
  v1(v2);

  return swift_release();
}

uint64_t sub_1DD41C(uint64_t a1, uint64_t a2)
{
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = a2;
  sub_1E3720(a1, (uint64_t)sub_1E3968, 0, isUniquelyReferenced_nonNull_native, &v8);
  uint64_t v6 = v8;
  swift_bridgeObjectRelease();
  if (v2) {
    swift_bridgeObjectRelease();
  }
  return v6;
}

uint64_t sub_1DD4A8()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_2A5C88);
  sub_6DBC8(v0, (uint64_t)qword_2A5C88);
  return sub_1FB420();
}

void *BooksPersonalizationMetadataCache.init(fetchService:subfolder:configurationService:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v5 = v4;
  uint64_t v69 = a3;
  uint64_t v9 = *v4;
  uint64_t v67 = sub_1FBDF0();
  uint64_t v72 = *(void *)(v67 - 8);
  uint64_t v10 = __chkstk_darwin(v67);
  v64[8] = (char *)v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  unint64_t v13 = (char *)v64 - v12;
  uint64_t v75 = sub_1FAF80();
  uint64_t v74 = *(void *)(v75 - 8);
  uint64_t v14 = __chkstk_darwin(v75 - 8);
  v64[9] = (char *)v64 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  v64[7] = (char *)v64 - v17;
  uint64_t v18 = __chkstk_darwin(v16);
  uint64_t v68 = (char *)v64 - v19;
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v73 = (uint64_t)v64 - v21;
  __chkstk_darwin(v20);
  char v23 = (char *)v64 - v22;
  uint64_t v5[2] = 25;
  v5[3] = 0;
  uint64_t v24 = (void **)(v5 + 3);
  v5[10] = 0;
  double v65 = (void **)(v5 + 10);
  v5[4] = 0;
  v5[11] = 0;
  v5[12] = 0;
  v5[13] = 0x4122750000000000;
  uint64_t v71 = a1;
  sub_51B70(a1, (uint64_t)(v5 + 14));
  uint64_t v70 = a4;
  sub_51B70(a4, (uint64_t)(v5 + 5));
  uint64_t v66 = v9;
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v26 = [self bundleForClass:ObjCClassFromMetadata];
  NSString v27 = sub_1FB7E0();
  NSString v28 = sub_1FB7E0();
  id v29 = [v26 pathForResource:v27 ofType:v28];

  if (v29)
  {
    id v30 = [self fileURLWithPath:v29 isDirectory:1];

    sub_1FAF30();
    id v31 = objc_allocWithZone((Class)NSManagedObjectModel);
    sub_1FAF00(v32);
    char v34 = v33;
    id v35 = [v31 initWithContentsOfURL:v33];

    (*(void (**)(char *, uint64_t))(v74 + 8))(v23, v75);
    char v36 = *v24;
    void *v24 = v35;
  }
  double v37 = *v24;
  if (!*v24)
  {
    swift_bridgeObjectRelease();
    uint64_t v54 = (void *)v5[4];
    if (!v54) {
      goto LABEL_9;
    }
    goto LABEL_8;
  }
  id v38 = objc_allocWithZone((Class)NSPersistentStoreCoordinator);
  id v39 = v37;
  id v40 = [v38 initWithManagedObjectModel:v39];
  unint64_t v41 = (void *)v5[4];
  v5[4] = v40;
  id v42 = v40;

  uint64_t v43 = v69;
  v5[11] = a2;
  v5[12] = v43;
  swift_bridgeObjectRelease();
  uint64_t v44 = v5[11];
  unint64_t v45 = v5[12];
  swift_bridgeObjectRetain();
  uint64_t v46 = v73;
  static BooksPersonalizationMetadataCache.persistentStoreDirectory(subfolder:)(v44, v45, v73);
  swift_bridgeObjectRelease();
  uint64_t v48 = v5[11];
  unint64_t v47 = v5[12];
  swift_bridgeObjectRetain();
  static BooksPersonalizationMetadataCache.recreatePersistentStoreDirectory(subfolder:)(v48, v47);
  swift_bridgeObjectRelease();
  uint64_t v49 = v68;
  sub_1FAF10();
  sub_12124(&qword_26F258);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_2055D0;
  *(void *)(inited + 32) = sub_1FB810();
  *(void *)(inited + 40) = v51;
  *(unsigned char *)(inited + 48) = 1;
  *(void *)(inited + 56) = sub_1FB810();
  *(void *)(inited + 64) = v52;
  *(unsigned char *)(inited + 72) = 1;
  unint64_t v53 = sub_161560(inited);
  sub_1FBDE0();
  sub_C634C(v53);
  char v55 = (void *)sub_1FBE40();
  (*(void (**)(char *, uint64_t))(v72 + 8))(v13, v67);

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v56 = *(void (**)(char *, uint64_t))(v74 + 8);
  uint64_t v57 = v75;
  v56(v49, v75);
  v56((char *)v46, v57);

  uint64_t v54 = (void *)v5[4];
  if (v54)
  {
LABEL_8:
    id v58 = objc_allocWithZone((Class)NSManagedObjectContext);
    id v59 = v54;
    id v60 = [v58 initWithConcurrencyType:1];
    [v60 setUndoManager:0];
    char v61 = *v65;
    *double v65 = v60;
    id v62 = v60;

    [v62 setPersistentStoreCoordinator:v59];
  }
LABEL_9:
  sub_1264C(v70);
  sub_1264C(v71);
  return v5;
}

uint64_t static BooksPersonalizationMetadataCache.persistentStoreDirectory(subfolder:)@<X0>(uint64_t a1@<X0>, unint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v7 = sub_1FAF80();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v22 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_12124(&qword_26E7A8);
  __chkstk_darwin(v11 - 8);
  unint64_t v13 = (char *)v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v14 = [self defaultManager];
  id v15 = [v14 URLsForDirectory:13 inDomains:1];

  uint64_t v16 = sub_1FBAC0();
  uint64_t v17 = *(void *)(v16 + 16);
  if (v17)
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v8 + 16))(v13, v16+ ((*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80))+ *(void *)(v8 + 72) * (v17 - 1), v7);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v8 + 56))(v13, 0, 1, v7);
  }
  else
  {
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v8 + 56))(v13, 1, 1, v7);
  }
  swift_bridgeObjectRelease();
  uint64_t result = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v8 + 48))(v13, 1, v7);
  if (result == 1)
  {
    __break(1u);
  }
  else
  {
    uint64_t v19 = *(void (**)(uint64_t, char *, uint64_t))(v8 + 32);
    v19(a3, v13, v7);
    v22[1] = v3;
    sub_12124(&qword_274398);
    sub_1FB880();
    sub_1FAF10();
    swift_bridgeObjectRelease();
    uint64_t v20 = *(void (**)(uint64_t, uint64_t))(v8 + 8);
    v20(a3, v7);
    uint64_t result = ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v10, v7);
    if (a2)
    {
      uint64_t v21 = HIBYTE(a2) & 0xF;
      if ((a2 & 0x2000000000000000) == 0) {
        uint64_t v21 = a1 & 0xFFFFFFFFFFFFLL;
      }
      if (v21)
      {
        sub_1FAF10();
        v20(a3, v7);
        return ((uint64_t (*)(uint64_t, char *, uint64_t))v19)(a3, v10, v7);
      }
    }
  }
  return result;
}

unint64_t static BooksPersonalizationMetadataCache.persistentStoreFileName()()
{
  return 0xD000000000000010;
}

uint64_t static BooksPersonalizationMetadataCache.recreatePersistentStoreDirectory(subfolder:)(uint64_t a1, unint64_t a2)
{
  uint64_t v4 = sub_1FAF80();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v16 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  static BooksPersonalizationMetadataCache.persistentStoreDirectory(subfolder:)(a1, a2, (uint64_t)v7);
  id v8 = [self defaultManager];
  sub_1FAF00(v9);
  uint64_t v11 = v10;
  id v17 = 0;
  LODWORD(a1) = [v8 createDirectoryAtURL:v10 withIntermediateDirectories:1 attributes:0 error:&v17];

  if (a1)
  {
    uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v5 + 8);
    id v13 = v17;
    return v12(v7, v4);
  }
  else
  {
    id v15 = v17;
    sub_1FAEB0();

    swift_willThrow();
    (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
    return swift_errorRelease();
  }
}

uint64_t BooksPersonalizationMetadataCache.fetchPersonalizationMetadata(for:)(uint64_t a1)
{
  *(void *)(v2 + 104) = a1;
  *(void *)(v2 + 112) = v1;
  return _swift_task_switch(sub_1DE8F4, 0, 0);
}

uint64_t sub_1DE8F4()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = *(void **)(v1 + 80);
  v0[15] = v2;
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = (void *)swift_task_alloc();
    v0[16] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1DEAE0;
    uint64_t v6 = v0[13];
    uint64_t v5 = (void *)v0[14];
    v4[290] = v5;
    v4[289] = v3;
    v4[288] = v6;
    v4[291] = *v5;
    return _swift_task_switch(sub_1DEF00, 0, 0);
  }
  else
  {
    sub_51B70(v1 + 112, (uint64_t)(v0 + 2));
    uint64_t v7 = v0[5];
    uint64_t v8 = v0[6];
    sub_5D64(v0 + 2, v7);
    uint64_t v12 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 + 8) + **(int **)(v8 + 8));
    uint64_t v9 = (void *)swift_task_alloc();
    v0[18] = v9;
    *uint64_t v9 = v0;
    v9[1] = sub_1DEC64;
    uint64_t v10 = v0[13];
    return v12(v10, v7, v8);
  }
}

uint64_t sub_1DEAE0(uint64_t a1)
{
  id v3 = (void *)*v2;
  v3[7] = v2;
  v3[8] = a1;
  v3[9] = v1;
  v3[17] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1DEE4C;
  }
  else {
    uint64_t v4 = sub_1DEBFC;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1DEBFC()
{
  uint64_t v1 = *(void *)(v0 + 64);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1DEC64(uint64_t a1)
{
  id v3 = (void *)*v2;
  v3[10] = v2;
  v3[11] = a1;
  v3[12] = v1;
  v3[19] = v1;
  swift_task_dealloc();
  if (v1) {
    uint64_t v4 = sub_1DEDE8;
  }
  else {
    uint64_t v4 = sub_1DED80;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1DED80()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(void *)(v0 + 88);
  uint64_t v2 = *(uint64_t (**)(uint64_t))(v0 + 8);
  return v2(v1);
}

uint64_t sub_1DEDE8()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEE4C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1DEEB0(uint64_t a1, uint64_t a2)
{
  v3[290] = v2;
  v3[289] = a2;
  v3[288] = a1;
  v3[291] = *v2;
  return _swift_task_switch(sub_1DEF00, 0, 0);
}

uint64_t sub_1DEF00()
{
  sub_51B70(v0[290] + 40, (uint64_t)(v0 + 282));
  uint64_t v1 = v0[285];
  uint64_t v2 = v0[286];
  sub_5D64(v0 + 282, v1);
  uint64_t v5 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v2 + 16) + **(int **)(v2 + 16));
  uint64_t v3 = (void *)swift_task_alloc();
  v0[292] = v3;
  *uint64_t v3 = v0;
  v3[1] = sub_1DF030;
  return v5(v0 + 2, v1, v2);
}

uint64_t sub_1DF030()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1DF298;
  }
  else
  {
    uint64_t v1 = sub_1DF148;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1DF148()
{
  memcpy(&v0[71], &v0[1], 0x460uLL);
  sub_1264C((uint64_t)v0[141].i64);
  sub_11D3C((uint64_t)v0[71].i64);
  uint64_t v1 = v0[113].i64[0];
  uint64_t v2 = v0[145].i64[1];
  uint64_t v3 = v0[145].i64[0];
  uint64_t v4 = (int8x16_t *)swift_task_alloc();
  v0[146].i64[1] = (uint64_t)v4;
  v4[1] = vextq_s8(v0[144], v0[144], 8uLL);
  v4[2].i64[0] = v3;
  v4[2].i64[1] = v1;
  v4[3].i64[0] = v2;
  uint64_t v5 = (void *)swift_task_alloc();
  v0[147].i64[0] = (uint64_t)v5;
  uint64_t v6 = sub_12124(&qword_2744B8);
  *uint64_t v5 = v0;
  v5[1] = sub_1DF3CC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(&v0[143].u64[1], 0, 0, 0xD00000000000001ELL, 0x800000000021AD10, sub_1E4398, v4, v6);
}

uint64_t sub_1DF298()
{
  uint64_t v1 = v0[145].i64[0];
  sub_1264C((uint64_t)v0[141].i64);
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = v0[145].i64[1];
  uint64_t v4 = v0[145].i64[0];
  uint64_t v5 = (int8x16_t *)swift_task_alloc();
  v0[146].i64[1] = (uint64_t)v5;
  v5[1] = vextq_s8(v0[144], v0[144], 8uLL);
  v5[2].i64[0] = v4;
  v5[2].i64[1] = v2;
  v5[3].i64[0] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[147].i64[0] = (uint64_t)v6;
  uint64_t v7 = sub_12124(&qword_2744B8);
  *uint64_t v6 = v0;
  v6[1] = sub_1DF3CC;
  return withCheckedThrowingContinuation<A>(isolation:function:_:)(&v0[143].u64[1], 0, 0, 0xD00000000000001ELL, 0x800000000021AD10, sub_1E4398, v5, v7);
}

uint64_t sub_1DF3CC()
{
  *(void *)(*(void *)v1 + 2360) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v2 = sub_1DF504;
  }
  else
  {
    swift_task_dealloc();
    uint64_t v2 = sub_1DF4E8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1DF4E8()
{
  return (*(uint64_t (**)(void))(v0 + 8))(*(void *)(v0 + 2296));
}

uint64_t sub_1DF504()
{
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t BooksPersonalizationMetadataCache.cacheEntryCount()()
{
  *(void *)(v1 + 24) = v0;
  *(void *)(v1 + 32) = *v0;
  return _swift_task_switch(sub_1DF5B0, 0, 0);
}

uint64_t sub_1DF5B0()
{
  uint64_t v2 = v0[3];
  uint64_t v1 = v0[4];
  uint64_t v3 = swift_task_alloc();
  v0[5] = v3;
  *(void *)(v3 + 16) = v2;
  *(void *)(v3 + 24) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  v0[6] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_C7570;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 2, 0, 0, 0xD000000000000011, 0x80000000002183C0, sub_1E32F0, v3, &type metadata for UInt);
}

void sub_1DF6AC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_12124(&qword_26F560);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(void *)(v7 + 64);
  __chkstk_darwin(v6);
  uint64_t v9 = *(void **)(a2 + 80);
  if (v9)
  {
    (*(void (**)(char *, uint64_t, uint64_t))(v7 + 16))((char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v6);
    unint64_t v10 = (*(unsigned __int8 *)(v7 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v7 + 80);
    uint64_t v11 = swift_allocObject();
    *(void *)(v11 + 16) = v9;
    (*(void (**)(unint64_t, char *, uint64_t))(v7 + 32))(v11 + v10, (char *)aBlock - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0), v6);
    *(void *)(v11 + ((v8 + v10 + 7) & 0xFFFFFFFFFFFFFFF8)) = a3;
    aBlock[4] = sub_1E4304;
    aBlock[5] = v11;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_1DD3D8;
    aBlock[3] = &unk_2644F8;
    uint64_t v12 = _Block_copy(aBlock);
    id v13 = v9;
    swift_release();
    [v13 performBlock:v12];
    _Block_release(v12);
  }
  else
  {
    sub_1FBBF0();
  }
}

void sub_1DF8A0()
{
  type metadata accessor for CachedPersonalizationBookMetadata();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v1 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v2 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v3 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v4 = [v2 initWithEntityName:v3];

  if (sub_1FBE20() < 0)
  {
    sub_1FC210();
    __break(1u);
  }
  else
  {
    sub_12124(&qword_26F560);
    sub_1FBBF0();
  }
}

void sub_1DFAB8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, double a6)
{
  id v30 = a2;
  uint64_t v31 = a5;
  uint64_t v10 = sub_12124(&qword_2744C0);
  uint64_t v28 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  id v29 = (char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = type metadata accessor for PersonalizationMetadataRequest();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13 - 8);
  uint64_t v16 = (char *)&v28 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_172008(a3, (uint64_t)v16);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v28 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (v19 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v21 = (*(unsigned __int8 *)(v11 + 80) + v20 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  unint64_t v22 = (v12 + v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v23 = swift_allocObject();
  sub_1721D4((uint64_t)v16, v23 + v17);
  *(void *)(v23 + v18) = a4;
  *(double *)(v23 + v19) = a6;
  uint64_t v24 = v29;
  double v25 = v30;
  *(void *)(v23 + v20) = v30;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v23 + v21, v24, v28);
  *(void *)(v23 + v22) = v31;
  aBlock[4] = sub_1E4564;
  aBlock[5] = v23;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D8;
  aBlock[3] = &unk_264548;
  id v26 = _Block_copy(aBlock);
  swift_retain();
  id v27 = v25;
  swift_release();
  [v27 performBlock:v26];
  _Block_release(v26);
}

uint64_t sub_1DFD70(uint64_t a1, uint64_t a2, void *a3, uint64_t a4)
{
  uint64_t v66 = a4;
  uint64_t v69 = a2;
  uint64_t v71 = sub_12124(&qword_2744C0);
  uint64_t v62 = *(void *)(v71 - 8);
  __chkstk_darwin(v71);
  uint64_t v61 = v6;
  uint64_t v68 = (char *)v56 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = type metadata accessor for PersonalizationMetadataRequest();
  uint64_t v8 = v7 - 8;
  uint64_t v57 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v58 = v9;
  uint64_t v60 = (uint64_t)v56 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_12124(&qword_26D908);
  __chkstk_darwin(v10 - 8);
  uint64_t v67 = (uint64_t)v56 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(int *)(v8 + 28);
  uint64_t v59 = a1;
  uint64_t v13 = *(void *)(a1 + v12);
  uint64_t v73 = v13;
  type metadata accessor for CachedPersonalizationMetadataBook();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  swift_bridgeObjectRetain_n();
  uint64_t v15 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v16 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v17 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v18 = [v16 initWithEntityName:v17];

  sub_12124(&qword_26F4B8);
  uint64_t v19 = swift_allocObject();
  *(_OWORD *)(v19 + 16) = xmmword_2055D0;
  *(void *)(v19 + 56) = &type metadata for String;
  *(void *)(v19 + 32) = 0x44497465737361;
  *(void *)(v19 + 40) = 0xE700000000000000;
  *(void *)(v19 + 88) = sub_12124(&qword_26EA88);
  *(void *)(v19 + 64) = v13;
  NSString v20 = sub_1FB7E0();
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  id v22 = [self predicateWithFormat:v20 argumentArray:isa];

  sub_12124(&qword_26F5A0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_213F90;
  *(void *)(v23 + 32) = v22;
  id v64 = v22;
  *(void *)(v23 + 40) = sub_1E3D64();
  uint64_t v72 = v23;
  sub_1FBAE0();
  sub_1E4690();
  Class v24 = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  id v25 = [self andPredicateWithSubpredicates:v24];

  [v18 setPredicate:v25];
  id v65 = v18;
  double v63 = a3;
  unint64_t v26 = 0;
  unint64_t v27 = sub_1FBE30();
  unint64_t p_base_props = swift_bridgeObjectRetain();
  if (v27 >> 62)
  {
LABEL_25:
    swift_bridgeObjectRetain();
    uint64_t v29 = sub_1FC270();
  }
  else
  {
    uint64_t v29 = *(void *)((char *)&dword_10 + (v27 & 0xFFFFFFFFFFFFFF8));
    swift_bridgeObjectRetain();
  }
  unint64_t v70 = p_base_props;
  v56[1] = v26;
  if (v29)
  {
    id v30 = _swiftEmptyArrayStorage;
    uint64_t v31 = 4;
    unint64_t p_base_props = (unint64_t)&SeedBasedSuggestionsService.base_props;
    while (1)
    {
      if ((v27 & 0xC000000000000001) != 0) {
        id v32 = (id)sub_1FC090();
      }
      else {
        id v32 = *(id *)(v27 + 8 * v31);
      }
      unint64_t v33 = v32;
      uint64_t v34 = v31 - 3;
      if (__OFADD__(v31 - 4, 1))
      {
        __break(1u);
        goto LABEL_25;
      }
      unint64_t v35 = (unint64_t)[v32 assetID];
      if ((v35 & 0x8000000000000000) != 0) {
        break;
      }
      unint64_t v36 = v35;

      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        id v30 = sub_41858(0, v30[2] + 1, 1, v30);
      }
      unint64_t v26 = v30[2];
      unint64_t v37 = v30[3];
      if (v26 >= v37 >> 1) {
        id v30 = sub_41858((void *)(v37 > 1), v26 + 1, 1, v30);
      }
      v30[2] = v26 + 1;
      v30[v26 + 4] = v36;
      ++v31;
      if (v34 == v29) {
        goto LABEL_17;
      }
    }
    uint64_t result = sub_1FC210();
    __break(1u);
  }
  else
  {
    id v30 = _swiftEmptyArrayStorage;
LABEL_17:
    swift_bridgeObjectRelease_n();
    uint64_t v38 = sub_50A6C((uint64_t)v30);
    swift_bridgeObjectRelease();
    unint64_t v39 = v70;
    if (v70)
    {
      swift_retain();
      swift_bridgeObjectRetain();
      uint64_t v40 = sub_1E39C8(_swiftEmptyDictionarySingleton, v39);
      swift_bridgeObjectRelease();
      swift_release();
    }
    else
    {
      uint64_t v40 = sub_16BDD0((uint64_t)_swiftEmptyArrayStorage);
    }
    sub_10648C(v38);
    swift_bridgeObjectRelease();
    uint64_t v41 = v73;
    if (*(void *)(v73 + 16))
    {
      uint64_t v42 = sub_1FBC60();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v42 - 8) + 56))(v67, 1, 1, v42);
      uint64_t v43 = v60;
      sub_172008(v59, v60);
      uint64_t v59 = v40;
      uint64_t v44 = v62;
      (*(void (**)(char *, uint64_t, uint64_t))(v62 + 16))(v68, v66, v71);
      unint64_t v45 = (*(unsigned __int8 *)(v57 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v57 + 80);
      unint64_t v46 = (v58 + v45 + 7) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v47 = (v46 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v48 = (v47 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v49 = (v48 + 15) & 0xFFFFFFFFFFFFFFF8;
      unint64_t v50 = (*(unsigned __int8 *)(v44 + 80) + v49 + 8) & ~(unint64_t)*(unsigned __int8 *)(v44 + 80);
      uint64_t v51 = swift_allocObject();
      *(void *)(v51 + 16) = 0;
      *(void *)(v51 + 24) = 0;
      sub_1721D4(v43, v51 + v45);
      *(void *)(v51 + v46) = v41;
      uint64_t v52 = v68;
      *(void *)(v51 + v47) = v69;
      unint64_t v53 = v63;
      *(void *)(v51 + v48) = v63;
      *(void *)(v51 + v49) = v59;
      (*(void (**)(unint64_t, char *, uint64_t))(v44 + 32))(v51 + v50, v52, v71);
      swift_retain();
      id v54 = v53;
      sub_1B6494(v67, (uint64_t)&unk_2744D8, v51);

      swift_release();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v72 = v40;
      sub_1FBBF0();
    }
    return swift_bridgeObjectRelease();
  }
  return result;
}

void sub_1E06F4(void *a1@<X0>, unint64_t *a2@<X8>)
{
  uint64_t v4 = sub_1FAEC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v31 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  unint64_t v8 = (unint64_t)[a1 assetID];
  if ((v8 & 0x8000000000000000) != 0)
  {
    sub_1FC210();
    __break(1u);
  }
  else
  {
    unint64_t v9 = v8;
    id v10 = [a1 ulyssesEmbedding];
    uint64_t v11 = v10;
    if (v10)
    {
      [v10 doubleValue];
      unint64_t v13 = v12;
    }
    else
    {
      unint64_t v13 = 0;
    }
    id v14 = [a1 bisac];
    if (v14)
    {
      uint64_t v32 = v5;
      unint64_t v33 = v11;
      uint64_t v34 = a1;
      unint64_t v35 = v9;
      unint64_t v36 = a2;
      id v15 = v14;
      sub_1FBE50();
      id v31 = v15;

      sub_1E4A58(&qword_26F4A0, (void (*)(uint64_t))&type metadata accessor for NSFastEnumerationIterator);
      sub_1FBEC0();
      if (v41)
      {
        id v16 = _swiftEmptyArrayStorage;
        do
        {
          sub_560D0(&v40, v39);
          sub_560E0((uint64_t)v39, (uint64_t)v38);
          type metadata accessor for CachedPersonalizationMetadataBISAC();
          if (swift_dynamicCast()
            && (v17 = v37, id v18 = [v37 code], v17, v18))
          {
            uint64_t v19 = sub_1FB810();
            uint64_t v21 = v20;

            sub_1264C((uint64_t)v39);
            if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
              id v16 = sub_41864(0, v16[2] + 1, 1, v16);
            }
            unint64_t v23 = v16[2];
            unint64_t v22 = v16[3];
            if (v23 >= v22 >> 1) {
              id v16 = sub_41864((void *)(v22 > 1), v23 + 1, 1, v16);
            }
            v16[2] = v23 + 1;
            Class v24 = &v16[2 * v23];
            v24[4] = v19;
            v24[5] = v21;
          }
          else
          {
            sub_1264C((uint64_t)v39);
          }
          sub_1FBEC0();
        }
        while (v41);
      }
      else
      {
        id v16 = _swiftEmptyArrayStorage;
      }
      (*(void (**)(char *, uint64_t))(v32 + 8))(v7, v4);

      unint64_t v9 = v35;
      a2 = v36;
      uint64_t v11 = v33;
      a1 = v34;
    }
    else
    {
      id v16 = _swiftEmptyArrayStorage;
    }
    uint64_t v25 = sub_507F8((uint64_t)v16);
    swift_bridgeObjectRelease();
    id v26 = [a1 deduplicationID];
    if (v26)
    {
      unint64_t v27 = v26;
      uint64_t v28 = sub_1FB810();
      unint64_t v30 = v29;
    }
    else
    {
      uint64_t v28 = 0;
      unint64_t v30 = 0;
    }
    *a2 = v9;
    a2[1] = v13;
    a2[2] = v11 == 0;
    a2[3] = v25;
    a2[4] = v28;
    a2[5] = v30;
  }
}

uint64_t sub_1E0ACC(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  v8[8] = a8;
  v8[9] = v11;
  v8[6] = a6;
  v8[7] = a7;
  v8[4] = a4;
  v8[5] = a5;
  v8[10] = type metadata accessor for PersonalizationMetadataRequest();
  v8[11] = swift_task_alloc();
  return _swift_task_switch(sub_1E0B70, 0, 0);
}

uint64_t sub_1E0B70()
{
  uint64_t v2 = v0[5].i64[0];
  uint64_t v1 = v0[5].i64[1];
  uint64_t v4 = v0[2].i64[0];
  uint64_t v3 = v0[2].i64[1];
  uint64_t v5 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16))(v1, v4, v5);
  *(void *)(v1 + *(int *)(v2 + 20)) = v3;
  swift_bridgeObjectRetain();
  uint64_t v6 = (int8x16_t *)swift_task_alloc();
  v0[6].i64[0] = (uint64_t)v6;
  v6->i64[0] = (uint64_t)v0;
  v6->i64[1] = (uint64_t)sub_1E0C88;
  uint64_t v7 = v0[5].i64[1];
  void v6[4] = vextq_s8(v0[3], v0[3], 8uLL);
  v6[3].i64[1] = v7;
  return _swift_task_switch(sub_1E0F24, 0, 0);
}

uint64_t sub_1E0C88(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 104) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v5 = sub_1E0E68;
  }
  else
  {
    *(void *)(v4 + 112) = a1;
    uint64_t v5 = sub_1E0DB0;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1E0DB0()
{
  uint64_t v1 = v0[14];
  uint64_t v2 = v0[11];
  uint64_t v3 = v0[8];
  swift_bridgeObjectRetain();
  v0[3] = sub_1DD41C(v1, v3);
  sub_12124(&qword_2744C0);
  sub_1FBBF0();
  sub_1D61B0(v2);
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_1E0E68()
{
  uint64_t v1 = v0[13];
  sub_1D61B0(v0[11]);
  v0[2] = v1;
  sub_12124(&qword_2744C0);
  sub_1FBBE0();
  swift_task_dealloc();
  uint64_t v2 = (uint64_t (*)(void))v0[1];
  return v2();
}

uint64_t sub_1E0F00(uint64_t a1, uint64_t a2)
{
  v3[8] = a2;
  v3[9] = v2;
  v3[7] = a1;
  return _swift_task_switch(sub_1E0F24, 0, 0);
}

uint64_t sub_1E0F24()
{
  uint64_t v1 = v0[7];
  if (*(void *)(*(void *)(v1 + *(int *)(type metadata accessor for PersonalizationMetadataRequest() + 20)) + 16))
  {
    sub_51B70(v0[9] + 112, (uint64_t)(v0 + 2));
    uint64_t v2 = v0[5];
    uint64_t v3 = v0[6];
    sub_5D64(v0 + 2, v2);
    uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
    uint64_t v4 = (void *)swift_task_alloc();
    v0[10] = v4;
    *uint64_t v4 = v0;
    v4[1] = sub_1E10E4;
    uint64_t v5 = v0[7];
    return v9(v5, v2, v3);
  }
  else
  {
    v0[13] = _swiftEmptyDictionarySingleton;
    swift_bridgeObjectRetain();
    uint64_t v7 = (void *)swift_task_alloc();
    v0[14] = v7;
    *uint64_t v7 = v0;
    v7[1] = sub_1E1340;
    uint64_t v8 = v0[8];
    return sub_1E18A0((uint64_t)_swiftEmptyDictionarySingleton, v8);
  }
}

uint64_t sub_1E10E4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    swift_bridgeObjectRelease();
    uint64_t v5 = sub_1E1480;
  }
  else
  {
    *(void *)(v4 + 96) = a1;
    uint64_t v5 = sub_1E1214;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1E1214()
{
  uint64_t v9 = v0;
  uint64_t v2 = v0[11];
  uint64_t v1 = v0[12];
  sub_1264C((uint64_t)(v0 + 2));
  char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v8 = _swiftEmptyDictionarySingleton;
  sub_1E3720(v1, (uint64_t)sub_1E3968, 0, isUniquelyReferenced_nonNull_native, &v8);
  if (v2)
  {
    return swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v5 = (uint64_t)v8;
    swift_bridgeObjectRelease();
    v0[13] = v5;
    swift_bridgeObjectRetain();
    uint64_t v6 = (void *)swift_task_alloc();
    v0[14] = v6;
    *uint64_t v6 = v0;
    v6[1] = sub_1E1340;
    uint64_t v7 = v0[8];
    return sub_1E18A0(v5, v7);
  }
}

uint64_t sub_1E1340()
{
  *(void *)(*(void *)v1 + 120) = v0;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v0)
  {
    swift_bridgeObjectRelease();
    uint64_t v2 = sub_1E14E4;
  }
  else
  {
    uint64_t v2 = sub_C93A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1E1480()
{
  sub_1264C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E14E4()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t BooksPersonalizationMetadataCache.contribute(cachableMetadata:)(uint64_t a1)
{
  *(void *)(v2 + 16) = a1;
  *(void *)(v2 + 24) = v1;
  return _swift_task_switch(sub_1E151C, 0, 0);
}

uint64_t sub_1E151C()
{
  uint64_t v1 = *(void **)(v0[3] + 80);
  v0[4] = v1;
  if (v1)
  {
    id v2 = v1;
    uint64_t v3 = (void *)swift_task_alloc();
    v0[5] = v3;
    *uint64_t v3 = v0;
    v3[1] = sub_1E16C4;
    uint64_t v4 = v0[2];
    return sub_1E18A0(v4, (uint64_t)v2);
  }
  else
  {
    if (qword_26C3E8 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1FB430();
    sub_6DBC8(v6, (uint64_t)qword_2A5C88);
    uint64_t v7 = sub_1FB410();
    os_log_type_t v8 = sub_1FBDA0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl(&dword_0, v7, v8, "No MOC for caching personalization metadata", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_1E16C4()
{
  *(void *)(*(void *)v1 + 48) = v0;
  swift_task_dealloc();
  if (v0) {
    id v2 = sub_1E183C;
  }
  else {
    id v2 = sub_1E17D8;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1E17D8()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E183C()
{
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1E18A0(uint64_t a1, uint64_t a2)
{
  v3[290] = v2;
  v3[289] = a2;
  v3[288] = a1;
  v3[291] = *v2;
  uint64_t v4 = sub_1FB0E0();
  v3[292] = v4;
  v3[293] = *(void *)(v4 - 8);
  v3[294] = swift_task_alloc();
  return _swift_task_switch(sub_1E1990, 0, 0);
}

uint64_t sub_1E1990()
{
  uint64_t v1 = v0[290];
  sub_1FB0D0();
  sub_51B70(v1 + 40, (uint64_t)(v0 + 282));
  uint64_t v2 = v0[285];
  uint64_t v3 = v0[286];
  sub_5D64(v0 + 282, v2);
  uint64_t v6 = (uint64_t (*)(void *, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[295] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1E1AC8;
  return v6(v0 + 2, v2, v3);
}

uint64_t sub_1E1AC8()
{
  swift_task_dealloc();
  if (v0)
  {
    swift_errorRelease();
    uint64_t v1 = sub_1E1D2C;
  }
  else
  {
    uint64_t v1 = sub_1E1BE0;
  }
  return _swift_task_switch(v1, 0, 0);
}

uint64_t sub_1E1BE0()
{
  memcpy(&v0[71], &v0[1], 0x460uLL);
  sub_1264C((uint64_t)v0[141].i64);
  sub_11D3C((uint64_t)v0[71].i64);
  uint64_t v1 = v0[113].i64[0];
  uint64_t v2 = v0[147].i64[0];
  uint64_t v3 = v0[145].i64[1];
  uint64_t v4 = v0[145].i64[0];
  uint64_t v5 = (int8x16_t *)swift_task_alloc();
  v0[148].i64[0] = (uint64_t)v5;
  v5[1] = vextq_s8(v0[144], v0[144], 8uLL);
  v5[2].i64[0] = v2;
  v5[2].i64[1] = v4;
  v5[3].i64[0] = v1;
  v5[3].i64[1] = v3;
  uint64_t v6 = (void *)swift_task_alloc();
  v0[148].i64[1] = (uint64_t)v6;
  *uint64_t v6 = v0;
  v6[1] = sub_1E1E5C;
  return withCheckedContinuation<A>(isolation:function:_:)(&v0[143].u64[1], 0, 0, 0xD000000000000019, 0x800000000021ACD0, sub_1E344C, v5, &type metadata for Int);
}

uint64_t sub_1E1D2C()
{
  uint64_t v1 = v0[145].i64[0];
  sub_1264C((uint64_t)v0[141].i64);
  uint64_t v2 = *(void *)(v1 + 104);
  uint64_t v3 = v0[147].i64[0];
  uint64_t v4 = v0[145].i64[1];
  uint64_t v5 = v0[145].i64[0];
  uint64_t v6 = (int8x16_t *)swift_task_alloc();
  v0[148].i64[0] = (uint64_t)v6;
  v6[1] = vextq_s8(v0[144], v0[144], 8uLL);
  v6[2].i64[0] = v3;
  v6[2].i64[1] = v5;
  v6[3].i64[0] = v2;
  v6[3].i64[1] = v4;
  uint64_t v7 = (void *)swift_task_alloc();
  v0[148].i64[1] = (uint64_t)v7;
  *uint64_t v7 = v0;
  v7[1] = sub_1E1E5C;
  return withCheckedContinuation<A>(isolation:function:_:)(&v0[143].u64[1], 0, 0, 0xD000000000000019, 0x800000000021ACD0, sub_1E344C, v6, &type metadata for Int);
}

uint64_t sub_1E1E5C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  return _swift_task_switch(sub_1E1F74, 0, 0);
}

uint64_t sub_1E1F74()
{
  (*(void (**)(void, void))(v0[293] + 8))(v0[294], v0[292]);
  swift_task_dealloc();
  uint64_t v1 = (uint64_t (*)(void))v0[1];
  return v1();
}

void sub_1E1FF8(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, double a7)
{
  uint64_t v28 = a5;
  uint64_t v29 = a6;
  id v30 = a2;
  uint64_t v31 = a3;
  uint64_t v10 = sub_12124(&qword_26F4F0);
  uint64_t v26 = v10;
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  __chkstk_darwin(v10);
  unint64_t v27 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1FB0E0();
  uint64_t v14 = *(void *)(v13 - 8);
  uint64_t v15 = *(void *)(v14 + 64);
  __chkstk_darwin(v13);
  id v16 = (char *)&v26 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v14 + 16))(v16, a4, v13);
  (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v10);
  unint64_t v17 = (*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80);
  unint64_t v18 = (v15 + v17 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v19 = (v18 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v20 = (*(unsigned __int8 *)(v11 + 80) + v19 + 8) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
  uint64_t v21 = swift_allocObject();
  uint64_t v22 = v31;
  *(void *)(v21 + 16) = v30;
  *(void *)(v21 + 24) = v22;
  (*(void (**)(unint64_t, char *, uint64_t))(v14 + 32))(v21 + v17, v16, v13);
  unint64_t v23 = v27;
  *(void *)(v21 + v18) = v28;
  *(double *)(v21 + v19) = a7;
  (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v21 + v20, v23, v26);
  *(void *)(v21 + ((v12 + v20 + 7) & 0xFFFFFFFFFFFFFFF8)) = v29;
  aBlock[4] = sub_1E35EC;
  aBlock[5] = v21;
  aBlock[0] = _NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = sub_1DD3D8;
  aBlock[3] = &unk_2644A8;
  Class v24 = _Block_copy(aBlock);
  id v25 = v30;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_release();
  [v25 performBlock:v24];
  _Block_release(v24);
}

void sub_1E22E8(void *a1, uint64_t isUniquelyReferenced_nonNull_native)
{
  type metadata accessor for CachedPersonalizationMetadataBISAC();
  aClass = (objc_class *)swift_getObjCClassFromMetadata();
  uint64_t v4 = NSStringFromClass(aClass);
  sub_1FB810();

  id v5 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v6 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithEntityName:v6];

  uint64_t v111 = v7;
  id v122 = a1;
  unint64_t v8 = sub_1FBE30();
  if (!v8) {
    unint64_t v8 = (unint64_t)_swiftEmptyArrayStorage;
  }
  if (v8 >> 62) {
    goto LABEL_27;
  }
  uint64_t v9 = *(void *)((char *)&dword_10 + (v8 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  while (v9)
  {
    osos_log_t log = (os_log_t)(v8 & 0xC000000000000001);
    uint64_t v10 = _swiftEmptyDictionarySingleton;
    uint64_t v11 = 4;
    unint64_t v123 = v8;
    id v119 = (id)v9;
    while (1)
    {
      id v12 = oslog ? (id)sub_1FC090() : *(id *)(v8 + 8 * v11);
      uint64_t v13 = v12;
      uint64_t v14 = v11 - 3;
      if (__OFADD__(v11 - 4, 1)) {
        break;
      }
      id v15 = [v12 code];
      if (v15)
      {
        id v16 = v15;
        unint64_t v17 = v10;
        uint64_t v18 = isUniquelyReferenced_nonNull_native;
        unint64_t v8 = sub_1FB810();
        uint64_t v20 = v19;

        id v21 = v13;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        v129[0] = v17;
        unint64_t v23 = sub_4C328(v8, v20);
        uint64_t v24 = v17[2];
        BOOL v25 = (v22 & 1) == 0;
        uint64_t v26 = v24 + v25;
        if (__OFADD__(v24, v25)) {
          goto LABEL_25;
        }
        char v27 = v22;
        if (v17[3] >= v26)
        {
          if ((isUniquelyReferenced_nonNull_native & 1) == 0) {
            sub_1243AC();
          }
        }
        else
        {
          sub_11F6A8(v26, isUniquelyReferenced_nonNull_native);
          unint64_t v28 = sub_4C328(v8, v20);
          if ((v27 & 1) != (v29 & 1))
          {
LABEL_130:
            sub_1FC770();
            __break(1u);
            return;
          }
          unint64_t v23 = v28;
        }
        char isUniquelyReferenced_nonNull_native = v18;
        uint64_t v10 = v129[0];
        if (v27)
        {
          uint64_t v30 = *((void *)v129[0] + 7);

          *(void *)(v30 + 8 * v23) = v21;
        }
        else
        {
          *((void *)v129[0] + (v23 >> 6) + 8) |= 1 << v23;
          uint64_t v31 = (unint64_t *)(v10[6] + 16 * v23);
          unint64_t *v31 = v8;
          v31[1] = v20;
          *(void *)(v10[7] + 8 * v23) = v21;
          uint64_t v32 = v10[2];
          BOOL v33 = __OFADD__(v32, 1);
          uint64_t v34 = v32 + 1;
          if (v33) {
            goto LABEL_26;
          }
          long long v10[2] = v34;
          swift_bridgeObjectRetain();
        }

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        unint64_t v8 = v123;
        uint64_t v9 = (uint64_t)v119;
      }
      else
      {
      }
      ++v11;
      if (v14 == v9) {
        goto LABEL_29;
      }
    }
    __break(1u);
LABEL_25:
    __break(1u);
LABEL_26:
    __break(1u);
LABEL_27:
    swift_bridgeObjectRetain_n();
    uint64_t v9 = sub_1FC270();
    swift_bridgeObjectRelease();
  }
  uint64_t v10 = _swiftEmptyDictionarySingleton;
LABEL_29:
  swift_bridgeObjectRelease_n();
  uint64_t v117 = isUniquelyReferenced_nonNull_native + 64;
  uint64_t v35 = 1 << *(unsigned char *)(isUniquelyReferenced_nonNull_native + 32);
  if (v35 < 64) {
    uint64_t v36 = ~(-1 << v35);
  }
  else {
    uint64_t v36 = -1;
  }
  os_log_t oslogc = (os_log_t)(v36 & *(void *)(isUniquelyReferenced_nonNull_native + 64));
  int64_t v118 = (unint64_t)(v35 + 63) >> 6;
  swift_bridgeObjectRetain();
  int64_t v37 = 0;
  unint64_t v38 = (unint64_t)oslogc;
  if (!oslogc) {
    goto LABEL_34;
  }
LABEL_33:
  int64_t v124 = v37;
  os_log_t osloga = (os_log_t)((v38 - 1) & v38);
  for (unint64_t i = __clz(__rbit64(v38)) | (v37 << 6); ; unint64_t i = __clz(__rbit64(v41)) + (v40 << 6))
  {
    uint64_t v43 = *(void *)(*(void *)(isUniquelyReferenced_nonNull_native + 48) + 8 * i);
    uint64_t v44 = *(void *)(isUniquelyReferenced_nonNull_native + 56) + 48 * i;
    double v45 = *(double *)(v44 + 8);
    char v120 = *(unsigned char *)(v44 + 16);
    uint64_t v46 = *(void *)(v44 + 24);
    uint64_t v47 = *(void *)(v44 + 40);
    type metadata accessor for CachedPersonalizationMetadataBook();
    uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t v49 = NSStringFromClass(ObjCClassFromMetadata);
    if (!v49)
    {
      sub_1FB810();
      unint64_t v49 = (NSString *)sub_1FB7E0();
      swift_bridgeObjectRelease();
    }
    unint64_t v50 = self;
    id v51 = [v50 insertNewObjectForEntityForName:v49 inManagedObjectContext:v122];

    uint64_t v52 = (void *)swift_dynamicCastClass();
    if (v52)
    {
      id v114 = v50;
      if (v43 < 0) {
        goto LABEL_128;
      }
      uint64_t v57 = v52;
      [v52 setAssetID:v43];
      if (v47)
      {
        swift_bridgeObjectRetain();
        NSString v58 = sub_1FB7E0();
        swift_bridgeObjectRelease();
      }
      else
      {
        NSString v58 = 0;
      }
      [v57 setDeduplicationID:v58];

      uint64_t v110 = isUniquelyReferenced_nonNull_native;
      if (v120) {
        id v59 = 0;
      }
      else {
        id v59 = [objc_allocWithZone((Class)NSNumber) initWithDouble:v45];
      }
      [v57 setUlyssesEmbedding:v59];

      Class isa = sub_1FB060().super.isa;
      [v57 setDownloadTimestamp:isa];

      uint64_t v61 = *(void *)(v46 + 56);
      uint64_t v112 = v46 + 56;
      uint64_t v62 = 1 << *(unsigned char *)(v46 + 32);
      swift_bridgeObjectRelease();
      int64_t v63 = 0;
      if (v62 < 64) {
        uint64_t v64 = ~(-1 << v62);
      }
      else {
        uint64_t v64 = -1;
      }
      unint64_t v65 = v64 & v61;
      int64_t v116 = (unint64_t)(v62 + 63) >> 6;
      id v121 = v57;
      uint64_t v113 = v51;
      while (1)
      {
        if (v65)
        {
          unint64_t v67 = __clz(__rbit64(v65));
          v65 &= v65 - 1;
          unint64_t v68 = v67 | (v63 << 6);
        }
        else
        {
          BOOL v33 = __OFADD__(v63++, 1);
          if (v33) {
            goto LABEL_124;
          }
          if (v63 >= v116)
          {
LABEL_106:

            swift_release();
            char isUniquelyReferenced_nonNull_native = v110;
            goto LABEL_53;
          }
          unint64_t v69 = *(void *)(v112 + 8 * v63);
          if (!v69)
          {
            int64_t v70 = v63 + 1;
            if (v63 + 1 >= v116) {
              goto LABEL_106;
            }
            unint64_t v69 = *(void *)(v112 + 8 * v70);
            if (!v69)
            {
              int64_t v70 = v63 + 2;
              if (v63 + 2 >= v116) {
                goto LABEL_106;
              }
              unint64_t v69 = *(void *)(v112 + 8 * v70);
              if (!v69)
              {
                int64_t v70 = v63 + 3;
                if (v63 + 3 >= v116) {
                  goto LABEL_106;
                }
                unint64_t v69 = *(void *)(v112 + 8 * v70);
                if (!v69)
                {
                  while (1)
                  {
                    int64_t v63 = v70 + 1;
                    if (__OFADD__(v70, 1)) {
                      goto LABEL_127;
                    }
                    if (v63 >= v116) {
                      goto LABEL_106;
                    }
                    unint64_t v69 = *(void *)(v112 + 8 * v63);
                    ++v70;
                    if (v69) {
                      goto LABEL_85;
                    }
                  }
                }
              }
            }
            int64_t v63 = v70;
          }
LABEL_85:
          unint64_t v65 = (v69 - 1) & v69;
          unint64_t v68 = __clz(__rbit64(v69)) + (v63 << 6);
        }
        uint64_t v71 = (uint64_t *)(*(void *)(v46 + 48) + 16 * v68);
        uint64_t v72 = *v71;
        uint64_t v73 = v71[1];
        uint64_t v74 = v10[2];
        swift_bridgeObjectRetain();
        if (v74)
        {
          swift_bridgeObjectRetain();
          unint64_t v75 = sub_4C328(v72, v73);
          if (v76)
          {
            id v77 = *(id *)(v10[7] + 8 * v75);
            swift_bridgeObjectRelease_n();
            id v78 = v77;
            goto LABEL_72;
          }
          swift_bridgeObjectRelease();
        }
        uint64_t v79 = v10;
        uint64_t v80 = NSStringFromClass(aClass);
        if (!v80)
        {
          sub_1FB810();
          uint64_t v80 = (NSString *)sub_1FB7E0();
          swift_bridgeObjectRelease();
        }
        id v81 = [v114 insertNewObjectForEntityForName:v80 inManagedObjectContext:v122];

        uint64_t v82 = swift_dynamicCastClass();
        if (!v82)
        {
          swift_bridgeObjectRelease();

          if (qword_26C3E8 != -1) {
            goto LABEL_129;
          }
          goto LABEL_111;
        }
        id v78 = (id)v82;
        uint64_t v83 = v46;
        NSString v84 = sub_1FB7E0();
        [v78 setCode:v84];

        id v85 = v81;
        uint64_t v86 = v79;
        char v87 = swift_isUniquelyReferenced_nonNull_native();
        v129[0] = v79;
        unint64_t v89 = sub_4C328(v72, v73);
        uint64_t v90 = v86[2];
        BOOL v91 = (v88 & 1) == 0;
        uint64_t v92 = v90 + v91;
        if (__OFADD__(v90, v91))
        {
          __break(1u);
          goto LABEL_123;
        }
        char v93 = v88;
        if (v86[3] >= v92)
        {
          if ((v87 & 1) == 0) {
            sub_1243AC();
          }
        }
        else
        {
          sub_11F6A8(v92, v87);
          unint64_t v94 = sub_4C328(v72, v73);
          if ((v93 & 1) != (v95 & 1)) {
            goto LABEL_130;
          }
          unint64_t v89 = v94;
        }
        uint64_t v46 = v83;
        uint64_t v10 = v129[0];
        if (v93)
        {
          uint64_t v66 = *((void *)v129[0] + 7);

          *(void *)(v66 + 8 * v89) = v78;
        }
        else
        {
          *((void *)v129[0] + (v89 >> 6) + 8) |= 1 << v89;
          uint64_t v96 = (uint64_t *)(v10[6] + 16 * v89);
          *uint64_t v96 = v72;
          v96[1] = v73;
          *(void *)(v10[7] + 8 * v89) = v78;
          uint64_t v97 = v10[2];
          BOOL v33 = __OFADD__(v97, 1);
          uint64_t v98 = v97 + 1;
          if (v33) {
            goto LABEL_125;
          }
          long long v10[2] = v98;
          swift_bridgeObjectRetain();
        }
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        id v51 = v113;
LABEL_72:
        [v121 addBisacObject:v78];
      }
    }
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();

    if (qword_26C3E8 != -1) {
      swift_once();
    }
    uint64_t v53 = sub_1FB430();
    sub_6DBC8(v53, (uint64_t)qword_2A5C88);
    id v54 = sub_1FB410();
    os_log_type_t v55 = sub_1FBDA0();
    if (os_log_type_enabled(v54, v55))
    {
      uint64_t v56 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v56 = 0;
      _os_log_impl(&dword_0, v54, v55, "Failed to create metadata", v56, 2u);
      swift_slowDealloc();
    }

LABEL_53:
    int64_t v37 = v124;
    unint64_t v38 = (unint64_t)osloga;
    if (osloga) {
      goto LABEL_33;
    }
LABEL_34:
    BOOL v33 = __OFADD__(v37, 1);
    int64_t v40 = v37 + 1;
    if (v33)
    {
LABEL_123:
      __break(1u);
LABEL_124:
      __break(1u);
LABEL_125:
      __break(1u);
      goto LABEL_126;
    }
    if (v40 >= v118) {
      goto LABEL_107;
    }
    unint64_t v41 = *(void *)(v117 + 8 * v40);
    if (!v41) {
      break;
    }
LABEL_44:
    int64_t v124 = v40;
    os_log_t osloga = (os_log_t)((v41 - 1) & v41);
  }
  int64_t v42 = v40 + 1;
  if (v40 + 1 >= v118) {
    goto LABEL_107;
  }
  unint64_t v41 = *(void *)(v117 + 8 * v42);
  if (v41) {
    goto LABEL_43;
  }
  int64_t v42 = v40 + 2;
  if (v40 + 2 >= v118) {
    goto LABEL_107;
  }
  unint64_t v41 = *(void *)(v117 + 8 * v42);
  if (v41) {
    goto LABEL_43;
  }
  int64_t v42 = v40 + 3;
  if (v40 + 3 >= v118)
  {
LABEL_107:
    swift_release();
    sub_1E3E80(v122);
    if ([v122 hasChanges])
    {
      v129[0] = 0;
      if ([v122 save:v129])
      {
        uint64_t v99 = v129[0];
      }
      else
      {
        uint64_t v103 = v129[0];
        sub_1FAEB0();

        swift_willThrow();
        if (qword_26C3E8 != -1) {
          swift_once();
        }
        uint64_t v104 = sub_1FB430();
        sub_6DBC8(v104, (uint64_t)qword_2A5C88);
        swift_errorRetain();
        swift_errorRetain();
        char v105 = sub_1FB410();
        os_log_type_t v106 = sub_1FBDA0();
        if (os_log_type_enabled(v105, v106))
        {
          Swift::Int v107 = (uint8_t *)swift_slowAlloc();
          uint64_t v108 = (void *)swift_slowAlloc();
          *(_DWORD *)Swift::Int v107 = 138412290;
          swift_errorRetain();
          Swift::Int v109 = (void *)_swift_stdlib_bridgeErrorToNSError();
          v129[0] = v109;
          sub_1FBED0();
          *uint64_t v108 = v109;
          swift_errorRelease();
          swift_errorRelease();
          _os_log_impl(&dword_0, v105, v106, "Failed to save cache insertions %@", v107, 0xCu);
          sub_12124(&qword_26F4F8);
          swift_arrayDestroy();
          swift_slowDealloc();
          swift_slowDealloc();

          swift_errorRelease();
        }
        else
        {
          swift_errorRelease();
          swift_errorRelease();
          swift_errorRelease();
        }
      }
    }
    v129[0] = 0;
    sub_12124(&qword_26F4F0);
    sub_1FBBF0();

    swift_bridgeObjectRelease();
    return;
  }
  unint64_t v41 = *(void *)(v117 + 8 * v42);
  if (v41)
  {
LABEL_43:
    int64_t v40 = v42;
    goto LABEL_44;
  }
  while (1)
  {
    int64_t v40 = v42 + 1;
    if (__OFADD__(v42, 1)) {
      break;
    }
    if (v40 >= v118) {
      goto LABEL_107;
    }
    unint64_t v41 = *(void *)(v117 + 8 * v40);
    ++v42;
    if (v41) {
      goto LABEL_44;
    }
  }
LABEL_126:
  __break(1u);
LABEL_127:
  __break(1u);
LABEL_128:
  __break(1u);
LABEL_129:
  swift_once();
LABEL_111:
  uint64_t v100 = sub_1FB430();
  sub_6DBC8(v100, (uint64_t)qword_2A5C88);
  oslogb = sub_1FB410();
  os_log_type_t v101 = sub_1FBDA0();
  if (os_log_type_enabled(oslogb, v101))
  {
    unint64_t v102 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)unint64_t v102 = 0;
    _os_log_impl(&dword_0, oslogb, v101, "Failed to insert BISAC code object into database", v102, 2u);
    swift_slowDealloc();
  }

  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
}

id *BooksPersonalizationMetadataCache.deinit()
{
  sub_1264C((uint64_t)(v0 + 5));
  swift_bridgeObjectRelease();
  sub_1264C((uint64_t)(v0 + 14));
  return v0;
}

uint64_t BooksPersonalizationMetadataCache.__deallocating_deinit()
{
  sub_1264C((uint64_t)(v0 + 5));
  swift_bridgeObjectRelease();
  sub_1264C((uint64_t)(v0 + 14));

  return swift_deallocClassInstance();
}

uint64_t sub_1E3190(uint64_t a1)
{
  uint64_t v4 = *v1;
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  v5[1] = sub_B06F4;
  v5[13] = a1;
  v5[14] = v4;
  return _swift_task_switch(sub_1DE8F4, 0, 0);
}

uint64_t sub_1E3240(uint64_t a1)
{
  uint64_t v4 = *v1;
  id v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *id v5 = v2;
  uint64_t v5[2] = a1;
  v5[3] = v4;
  v5[1] = sub_5958;
  return _swift_task_switch(sub_1E151C, 0, 0);
}

void sub_1E32F0(uint64_t a1)
{
  sub_1DF6AC(a1, *(void *)(v1 + 16), *(void *)(v1 + 24));
}

uint64_t dispatch thunk of PersonalizationMetadataCaching.contribute(cachableMetadata:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_5958;
  return v9(a1, a2, a3);
}

uint64_t type metadata accessor for BooksPersonalizationMetadataCache()
{
  return self;
}

uint64_t method lookup function for BooksPersonalizationMetadataCache(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for BooksPersonalizationMetadataCache);
}

uint64_t dispatch thunk of BooksPersonalizationMetadataCache.__allocating_init(fetchService:subfolder:configurationService:)()
{
  return (*(uint64_t (**)(void))(v0 + 144))();
}

void sub_1E344C(uint64_t a1)
{
  sub_1E1FF8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 40), *(void *)(v1 + 56), *(double *)(v1 + 48));
}

uint64_t sub_1E3460()
{
  uint64_t v1 = sub_1FB0E0();
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 32) & ~v3;
  unint64_t v5 = (*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v6 = sub_12124(&qword_26F4F0);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned __int8 *)(v7 + 80);
  unint64_t v9 = (((v5 + 15) & 0xFFFFFFFFFFFFFFF8) + v8 + 8) & ~v8;
  uint64_t v10 = v3 | v8 | 7;
  unint64_t v11 = ((*(void *)(v7 + 64) + v9 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  swift_bridgeObjectRelease();
  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v7 + 8))(v0 + v9, v6);

  return _swift_deallocObject(v0, v11, v10);
}

void sub_1E35EC()
{
  sub_1FB0E0();
  sub_12124(&qword_26F4F0);
  uint64_t v1 = *(void **)(v0 + 16);
  uint64_t v2 = *(void *)(v0 + 24);

  sub_1E22E8(v1, v2);
}

uint64_t sub_1E3708(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v2;
  return swift_retain();
}

uint64_t sub_1E3718()
{
  return swift_release();
}

uint64_t sub_1E3720(uint64_t a1, uint64_t a2, uint64_t a3, char a4, void *a5)
{
  uint64_t v46 = a5;
  uint64_t v6 = -1 << *(unsigned char *)(a1 + 32);
  uint64_t v7 = ~v6;
  uint64_t v8 = *(void *)(a1 + 64);
  uint64_t v9 = -v6;
  uint64_t v39 = a1;
  uint64_t v40 = a1 + 64;
  if (v9 < 64) {
    uint64_t v10 = ~(-1 << v9);
  }
  else {
    uint64_t v10 = -1;
  }
  uint64_t v41 = v7;
  uint64_t v42 = 0;
  uint64_t v43 = v10 & v8;
  uint64_t v44 = a2;
  uint64_t v45 = a3;
  swift_bridgeObjectRetain();
  swift_retain();
  sub_74D58((uint64_t)v34);
  uint64_t v11 = v36;
  if (v36)
  {
    while (1)
    {
      uint64_t v15 = v34[0];
      uint64_t v14 = v34[1];
      uint64_t v16 = v34[2];
      char v17 = v35;
      uint64_t v32 = v37;
      uint64_t v33 = v38;
      uint64_t v18 = (void *)*v46;
      unint64_t v20 = sub_56168(v34[0]);
      uint64_t v21 = v18[2];
      BOOL v22 = (v19 & 1) == 0;
      uint64_t v23 = v21 + v22;
      if (__OFADD__(v21, v22)) {
        break;
      }
      char v24 = v19;
      if (v18[3] >= v23)
      {
        if ((a4 & 1) == 0) {
          sub_121A6C();
        }
      }
      else
      {
        sub_1197DC(v23, a4 & 1);
        uint64_t v25 = sub_56168(v15);
        if ((v24 & 1) != (v26 & 1)) {
          goto LABEL_19;
        }
        unint64_t v20 = v25;
      }
      char v27 = (void *)*v46;
      if (v24)
      {
        uint64_t v13 = v27[7] + 48 * v20;
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        *(void *)uint64_t v13 = v14;
        *(void *)(v13 + 8) = v16;
        *(unsigned char *)(v13 + 16) = v17;
        *(void *)(v13 + 24) = v11;
        *(void *)(v13 + 32) = v32;
        *(void *)(v13 + 40) = v33;
      }
      else
      {
        v27[(v20 >> 6) + 8] |= 1 << v20;
        *(void *)(v27[6] + 8 * v20) = v15;
        uint64_t v28 = v27[7] + 48 * v20;
        *(void *)uint64_t v28 = v14;
        *(void *)(v28 + 8) = v16;
        *(unsigned char *)(v28 + 16) = v17;
        *(void *)(v28 + 24) = v11;
        *(void *)(v28 + 32) = v32;
        *(void *)(v28 + 40) = v33;
        uint64_t v29 = v27[2];
        BOOL v30 = __OFADD__(v29, 1);
        uint64_t v31 = v29 + 1;
        if (v30) {
          goto LABEL_18;
        }
        v27[2] = v31;
      }
      sub_74D58((uint64_t)v34);
      uint64_t v11 = v36;
      a4 = 1;
      if (!v36) {
        goto LABEL_5;
      }
    }
    __break(1u);
LABEL_18:
    __break(1u);
LABEL_19:
    uint64_t result = sub_1FC770();
    __break(1u);
  }
  else
  {
LABEL_5:
    swift_release();
    swift_bridgeObjectRelease();
    sub_1226C();
    return swift_release();
  }
  return result;
}

uint64_t sub_1E3968@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  char v2 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  *(void *)(a2 + 16) = *(void *)(a1 + 16);
  *(unsigned char *)(a2 + 24) = v2;
  *(void *)(a2 + 32) = v4;
  *(void *)(a2 + 40) = v3;
  *(void *)(a2 + 48) = v5;
  *(_OWORD *)a2 = *(_OWORD *)a1;
  swift_bridgeObjectRetain();

  return swift_bridgeObjectRetain();
}

uint64_t sub_1E39C8(void *a1, unint64_t a2)
{
  unint64_t v2 = a2;
  if (a2 >> 62)
  {
LABEL_32:
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1FC270();
    if (v4) {
      goto LABEL_3;
    }
LABEL_33:
    swift_bridgeObjectRelease();
    return (uint64_t)a1;
  }
  uint64_t v4 = *(void *)((char *)&dword_10 + (a2 & 0xFFFFFFFFFFFFFF8));
  swift_bridgeObjectRetain();
  if (!v4) {
    goto LABEL_33;
  }
LABEL_3:
  unint64_t v32 = v2;
  unint64_t v33 = v2 & 0xC000000000000001;
  uint64_t v5 = 4;
  uint64_t v31 = v4;
  while (1)
  {
    if (v33) {
      id v8 = (id)sub_1FC090();
    }
    else {
      id v8 = *(id *)(v2 + 8 * v5);
    }
    uint64_t v9 = v8;
    uint64_t v7 = v5 - 3;
    if (__OFADD__(v5 - 4, 1))
    {
      __break(1u);
LABEL_30:
      __break(1u);
LABEL_31:
      __break(1u);
      goto LABEL_32;
    }
    unint64_t v10 = (unint64_t)[v8 assetID];
    if ((v10 & 0x8000000000000000) != 0) {
      break;
    }
    unint64_t v11 = v10;
    sub_1E06F4(v9, v39);
    if (!v41)
    {
      uint64_t v22 = sub_56168(v11);
      if (v23)
      {
        unint64_t v24 = v22;
        char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
        uint64_t v44 = a1;
        if ((isUniquelyReferenced_nonNull_native & 1) == 0)
        {
          sub_121A6C();
          a1 = v44;
        }
        sub_14D1B4(v24, (uint64_t)a1);

        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
        swift_bridgeObjectRelease();
      }
      else
      {
      }
      goto LABEL_6;
    }
    uint64_t v38 = v41;
    id v12 = v9;
    unint64_t v2 = v39[0];
    unint64_t v34 = v39[1];
    char v35 = v40;
    uint64_t v36 = v42;
    uint64_t v37 = v43;
    char v13 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v44 = a1;
    unint64_t v15 = sub_56168(v11);
    uint64_t v16 = a1[2];
    BOOL v17 = (v14 & 1) == 0;
    uint64_t v18 = v16 + v17;
    if (__OFADD__(v16, v17)) {
      goto LABEL_30;
    }
    char v19 = v14;
    if (a1[3] >= v18)
    {
      if (v13)
      {
        a1 = v44;
        if ((v14 & 1) == 0) {
          goto LABEL_24;
        }
      }
      else
      {
        sub_121A6C();
        a1 = v44;
        if ((v19 & 1) == 0) {
          goto LABEL_24;
        }
      }
    }
    else
    {
      sub_1197DC(v18, v13);
      uint64_t v20 = sub_56168(v11);
      if ((v19 & 1) != (v21 & 1)) {
        goto LABEL_35;
      }
      unint64_t v15 = v20;
      a1 = v44;
      if ((v19 & 1) == 0)
      {
LABEL_24:
        a1[(v15 >> 6) + 8] |= 1 << v15;
        *(void *)(a1[6] + 8 * v15) = v11;
        uint64_t v26 = a1[7] + 48 * v15;
        *(void *)uint64_t v26 = v2;
        *(void *)(v26 + 8) = v34;
        *(unsigned char *)(v26 + 16) = v35 & 1;
        *(void *)(v26 + 24) = v38;
        *(void *)(v26 + 32) = v36;
        *(void *)(v26 + 40) = v37;
        uint64_t v27 = a1[2];
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28) {
          goto LABEL_31;
        }
        a1[2] = v29;
        goto LABEL_5;
      }
    }
    uint64_t v6 = a1[7] + 48 * v15;
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(void *)uint64_t v6 = v2;
    *(void *)(v6 + 8) = v34;
    *(unsigned char *)(v6 + 16) = v35 & 1;
    *(void *)(v6 + 24) = v38;
    *(void *)(v6 + 32) = v36;
    *(void *)(v6 + 40) = v37;
LABEL_5:

    swift_bridgeObjectRelease();
    uint64_t v4 = v31;
    unint64_t v2 = v32;
    uint64_t v7 = v5 - 3;
LABEL_6:
    ++v5;
    if (v7 == v4) {
      goto LABEL_33;
    }
  }
  sub_1FC210();
  __break(1u);
LABEL_35:
  uint64_t result = sub_1FC770();
  __break(1u);
  return result;
}

id sub_1E3D64()
{
  sub_12124(&qword_26F4B8);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_2055D0;
  *(void *)(v0 + 56) = &type metadata for String;
  *(void *)(v0 + 32) = 0xD000000000000011;
  *(void *)(v0 + 40) = 0x800000000021ACF0;
  *(void *)(v0 + 88) = sub_1FB0E0();
  sub_51BD4((uint64_t *)(v0 + 64));
  sub_1FB080();
  NSString v1 = sub_1FB7E0();
  Class isa = sub_1FBAA0().super.isa;
  swift_bridgeObjectRelease();
  id v3 = [self predicateWithFormat:v1 argumentArray:isa];

  return v3;
}

uint64_t sub_1E3E80(void *a1)
{
  type metadata accessor for CachedPersonalizationMetadataBook();
  uint64_t ObjCClassFromMetadata = (objc_class *)swift_getObjCClassFromMetadata();
  id v3 = NSStringFromClass(ObjCClassFromMetadata);
  sub_1FB810();

  id v4 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v5 = sub_1FB7E0();
  swift_bridgeObjectRelease();
  id v6 = [v4 initWithEntityName:v5];

  id v7 = sub_1E3D64();
  id v8 = [self notPredicateWithSubpredicate:v7];

  [v6 setPredicate:v8];
  unint64_t v9 = sub_1FBE30();
  unint64_t v10 = v9;
  if (!(v9 >> 62))
  {
    uint64_t v11 = *(void *)((char *)&dword_10 + (v9 & 0xFFFFFFFFFFFFFF8));
    uint64_t result = swift_bridgeObjectRetain();
    if (v11) {
      goto LABEL_3;
    }
LABEL_10:

    return swift_bridgeObjectRelease_n();
  }
  swift_bridgeObjectRetain();
  uint64_t result = sub_1FC270();
  uint64_t v11 = result;
  if (!result) {
    goto LABEL_10;
  }
LABEL_3:
  if (v11 >= 1)
  {
    for (uint64_t i = 0; i != v11; ++i)
    {
      if ((v10 & 0xC000000000000001) != 0) {
        id v14 = (id)sub_1FC090();
      }
      else {
        id v14 = *(id *)(v10 + 8 * i + 32);
      }
      unint64_t v15 = v14;
      [a1 deleteObject:v14];
    }
    goto LABEL_10;
  }
  __break(1u);
  return result;
}

uint64_t sub_1E4228()
{
  uint64_t v1 = sub_12124(&qword_26F560);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v3 = *(unsigned __int8 *)(v2 + 80);
  uint64_t v4 = (v3 + 24) & ~v3;
  uint64_t v5 = v3 | 7;
  unint64_t v6 = ((*(void *)(v2 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;

  (*(void (**)(uint64_t, uint64_t))(v2 + 8))(v0 + v4, v1);

  return _swift_deallocObject(v0, v6, v5);
}

void sub_1E4304()
{
  sub_12124(&qword_26F560);

  sub_1DF8A0();
}

void sub_1E4398(uint64_t a1)
{
  sub_1DFAB8(a1, *(void **)(v1 + 16), *(void *)(v1 + 24), *(void *)(v1 + 32), *(void *)(v1 + 48), *(double *)(v1 + 40));
}

uint64_t sub_1E43AC()
{
  uint64_t v1 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 16) & ~v2;
  unint64_t v4 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = sub_12124(&qword_2744C0);
  uint64_t v6 = *(void *)(v5 - 8);
  uint64_t v7 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v8 = (v7 + v4 + 8) & ~v7;
  uint64_t v9 = v2 | v7 | 7;
  unint64_t v10 = ((*(void *)(v6 + 64) + v8 + 7) & 0xFFFFFFFFFFFFFFF8) + 8;
  uint64_t v11 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v0 + v3, v11);
  swift_bridgeObjectRelease();
  swift_release();

  (*(void (**)(uint64_t, uint64_t))(v6 + 8))(v0 + v8, v5);

  return _swift_deallocObject(v0, v10, v9);
}

uint64_t sub_1E4564()
{
  uint64_t v1 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  unint64_t v3 = (*(void *)(v1 + 64) + v2 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v4 = (((v3 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v5 = *(void *)(sub_12124(&qword_2744C0) - 8);
  uint64_t v6 = *(void *)(v0 + v3);
  uint64_t v7 = *(void **)(v0 + v4);
  uint64_t v8 = v0 + ((*(unsigned __int8 *)(v5 + 80) + v4 + 8) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80));

  return sub_1DFD70(v0 + v2, v6, v7, v8);
}

unint64_t sub_1E4690()
{
  unint64_t result = qword_2744C8;
  if (!qword_2744C8)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, &qword_2744C8);
  }
  return result;
}

uint64_t sub_1E46D0()
{
  uint64_t v1 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  uint64_t v2 = *(unsigned __int8 *)(v1 + 80);
  uint64_t v3 = (v2 + 32) & ~v2;
  unint64_t v4 = (((((*(void *)(v1 + 64) + v3 + 7) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v12 = sub_12124(&qword_2744C0);
  uint64_t v5 = *(void *)(v12 - 8);
  uint64_t v6 = *(unsigned __int8 *)(v5 + 80);
  unint64_t v7 = (v6 + ((v4 + 15) & 0xFFFFFFFFFFFFFFF8) + 8) & ~v6;
  unint64_t v11 = v7 + *(void *)(v5 + 64);
  uint64_t v8 = v2 | v6 | 7;
  swift_unknownObjectRelease();
  uint64_t v9 = sub_1FB110();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v9 - 8) + 8))(v0 + v3, v9);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();

  swift_bridgeObjectRelease();
  (*(void (**)(unint64_t, uint64_t))(v5 + 8))(v0 + v7, v12);

  return _swift_deallocObject(v0, v11, v8);
}

uint64_t sub_1E48A8(uint64_t a1)
{
  uint64_t v4 = *(void *)(type metadata accessor for PersonalizationMetadataRequest() - 8);
  unint64_t v5 = (*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  unint64_t v6 = (*(void *)(v4 + 64) + v5 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v6 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v8 = (v7 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v9 = (v8 + 15) & 0xFFFFFFFFFFFFFFF8;
  sub_12124(&qword_2744C0);
  uint64_t v10 = *(void *)(v1 + 16);
  uint64_t v11 = *(void *)(v1 + 24);
  uint64_t v12 = *(void *)(v1 + v6);
  uint64_t v13 = *(void *)(v1 + v7);
  uint64_t v14 = *(void *)(v1 + v8);
  uint64_t v15 = *(void *)(v1 + v9);
  uint64_t v16 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v16;
  void *v16 = v2;
  v16[1] = sub_5958;
  return sub_1E0ACC(a1, v10, v11, v1 + v5, v12, v13, v14, v15);
}

uint64_t sub_1E4A58(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t static Features.fromProtoFeatureMap(_:)(uint64_t a1)
{
  return sub_1FB670();
}

void *sub_1E4B04()
{
  uint64_t v0 = sub_1FB5C0();
  uint64_t v22 = *(void *)(v0 - 8);
  uint64_t v23 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v22 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1FB550();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v22 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26D7C8);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1FB640();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v22 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1FB6A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {
    sub_5EBAC((uint64_t)v9);
    return 0;
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
    sub_1FB620();
    sub_1FB500();
    (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
    uint64_t v15 = sub_1FB590();
    (*(void (**)(char *, uint64_t))(v22 + 8))(v2, v23);
    int64_t v16 = *(void *)(v15 + 16);
    if (v16)
    {
      unint64_t v24 = _swiftEmptyArrayStorage;
      sub_46728(0, v16, 0);
      uint64_t v17 = 0;
      uint64_t v14 = v24;
      unint64_t v18 = v24[2];
      do
      {
        float v19 = *(float *)(v15 + 4 * v17 + 32);
        unint64_t v24 = v14;
        unint64_t v20 = v14[3];
        if (v18 >= v20 >> 1)
        {
          sub_46728(v20 > 1, v18 + 1, 1);
          uint64_t v14 = v24;
        }
        ++v17;
        v14[2] = v18 + 1;
        *(double *)&v14[v18++ + 4] = v19;
      }
      while (v16 != v17);
      swift_bridgeObjectRelease();
    }
    else
    {
      swift_bridgeObjectRelease();
      uint64_t v14 = _swiftEmptyArrayStorage;
    }
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
  }
  return v14;
}

uint64_t sub_1E4E94()
{
  uint64_t v0 = sub_1FB610();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v2 = (char *)&v27 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1FB550();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  unint64_t v6 = (char *)&v27 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_12124(&qword_26D7C8);
  __chkstk_darwin(v7 - 8);
  unint64_t v9 = (char *)&v27 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1FB640();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v27 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v14;
  sub_1FB6A0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v15) == 1)
  {
    sub_5EBAC((uint64_t)v9);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v15);
  sub_1FB620();
  sub_1FB530();
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v3);
  uint64_t v17 = sub_1FB600();
  (*(void (**)(char *, uint64_t))(v28 + 8))(v2, v29);
  int64_t v18 = *(void *)(v17 + 16);
  float v19 = v13;
  if (!v18)
  {
    swift_bridgeObjectRelease();
    int64_t v16 = _swiftEmptyArrayStorage;
LABEL_9:
    (*(void (**)(char *, uint64_t))(v11 + 8))(v19, v15);
    return (uint64_t)v16;
  }
  uint64_t v20 = v15;
  BOOL v30 = _swiftEmptyArrayStorage;
  sub_46538(0, v18, 0);
  unint64_t v21 = *(void *)(v17 + 32);
  if ((v21 & 0x8000000000000000) == 0)
  {
    int64_t v16 = v30;
    unint64_t v23 = v30[2];
    unint64_t v22 = v30[3];
    int64_t v24 = v23 + 1;
    if (v23 >= v22 >> 1) {
      goto LABEL_19;
    }
    while (1)
    {
      v16[2] = v24;
      unint64_t v22 = (unint64_t)&v16[v23];
      *(void *)(v22 + 32) = v21;
      int64_t v24 = v18 - 1;
      if (v18 == 1) {
        break;
      }
      unint64_t v21 = v23 + 5;
      unint64_t v23 = v17 + 40;
      while (v24)
      {
        uint64_t v26 = *(void *)v23;
        if ((*(void *)v23 & 0x8000000000000000) != 0) {
          goto LABEL_20;
        }
        BOOL v30 = v16;
        unint64_t v22 = v16[3];
        int64_t v18 = v21 - 3;
        if (v21 - 4 >= v22 >> 1)
        {
          sub_46538(v22 > 1, v21 - 3, 1);
          int64_t v16 = v30;
        }
        v16[2] = v18;
        v16[v21++] = v26;
        v23 += 8;
        if (!--v24) {
          goto LABEL_7;
        }
      }
      __break(1u);
LABEL_19:
      sub_46538(v22 > 1, v24, 1);
      int64_t v16 = v30;
    }
LABEL_7:
    swift_bridgeObjectRelease();
    uint64_t v15 = v20;
    goto LABEL_9;
  }
LABEL_20:
  uint64_t result = sub_1FC210();
  __break(1u);
  return result;
}

uint64_t sub_1E52C4(uint64_t a1)
{
  uint64_t v50 = sub_1FB640();
  uint64_t v2 = *(void *)(v50 - 8);
  __chkstk_darwin(v50);
  unint64_t v48 = (char *)&v35 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v47 = sub_1FB550();
  uint64_t v4 = *(void **)(v47 - 8);
  __chkstk_darwin(v47);
  uint64_t v45 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_12124(&qword_2744E8);
  uint64_t result = sub_1FC280();
  uint64_t v7 = result;
  int64_t v8 = 0;
  uint64_t v51 = a1;
  uint64_t v11 = *(void *)(a1 + 64);
  uint64_t v10 = a1 + 64;
  uint64_t v9 = v11;
  uint64_t v12 = 1 << *(unsigned char *)(v10 - 32);
  uint64_t v13 = -1;
  if (v12 < 64) {
    uint64_t v13 = ~(-1 << v12);
  }
  unint64_t v14 = v13 & v9;
  uint64_t v36 = v10;
  int64_t v37 = (unint64_t)(v12 + 63) >> 6;
  uint64_t v43 = v4 + 2;
  uint64_t v44 = result;
  unsigned int v42 = enum case for Feature.proto(_:);
  uint64_t v46 = v4;
  uint64_t v40 = v4 + 1;
  uint64_t v41 = v2 + 104;
  uint64_t v49 = v2;
  uint64_t v38 = v2 + 32;
  uint64_t v39 = result + 64;
  uint64_t v15 = v4;
  int64_t v16 = v45;
  uint64_t v17 = v48;
  if (!v14) {
    goto LABEL_5;
  }
LABEL_4:
  uint64_t v52 = (v14 - 1) & v14;
  int64_t v53 = v8;
  for (unint64_t i = __clz(__rbit64(v14)) | (v8 << 6); ; unint64_t i = __clz(__rbit64(v20)) + (v21 << 6))
  {
    uint64_t v23 = *(void *)(v51 + 56);
    int64_t v24 = (uint64_t *)(*(void *)(v51 + 48) + 16 * i);
    uint64_t v25 = v24[1];
    uint64_t v54 = *v24;
    uint64_t v26 = (void (*)(char *, unint64_t, uint64_t))v15[2];
    uint64_t v27 = v47;
    v26(v16, v23 + v15[9] * i, v47);
    v26(v17, (unint64_t)v16, v27);
    uint64_t v29 = v49;
    uint64_t v28 = v50;
    (*(void (**)(char *, void, uint64_t))(v49 + 104))(v17, v42, v50);
    BOOL v30 = (void (*)(char *, uint64_t))v15[1];
    swift_bridgeObjectRetain();
    v30(v16, v27);
    *(void *)(v39 + ((i >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << i;
    uint64_t v7 = v44;
    uint64_t v31 = (void *)(*(void *)(v44 + 48) + 16 * i);
    void *v31 = v54;
    v31[1] = v25;
    uint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(v29 + 32))(*(void *)(v7 + 56) + *(void *)(v29 + 72) * i, v17, v28);
    uint64_t v32 = *(void *)(v7 + 16);
    BOOL v33 = __OFADD__(v32, 1);
    uint64_t v34 = v32 + 1;
    if (v33)
    {
      __break(1u);
LABEL_24:
      __break(1u);
      goto LABEL_25;
    }
    *(void *)(v7 + 16) = v34;
    unint64_t v14 = v52;
    int64_t v8 = v53;
    if (v52) {
      goto LABEL_4;
    }
LABEL_5:
    int64_t v19 = v8 + 1;
    if (__OFADD__(v8, 1)) {
      goto LABEL_24;
    }
    if (v19 >= v37) {
      return v7;
    }
    unint64_t v20 = *(void *)(v36 + 8 * v19);
    int64_t v21 = v8 + 1;
    if (!v20)
    {
      int64_t v21 = v8 + 2;
      if (v8 + 2 >= v37) {
        return v7;
      }
      unint64_t v20 = *(void *)(v36 + 8 * v21);
      if (!v20)
      {
        int64_t v21 = v8 + 3;
        if (v8 + 3 >= v37) {
          return v7;
        }
        unint64_t v20 = *(void *)(v36 + 8 * v21);
        if (!v20) {
          break;
        }
      }
    }
LABEL_18:
    uint64_t v52 = (v20 - 1) & v20;
    int64_t v53 = v21;
  }
  uint64_t v22 = v8 + 4;
  if (v8 + 4 >= v37) {
    return v7;
  }
  unint64_t v20 = *(void *)(v36 + 8 * v22);
  if (v20)
  {
    int64_t v21 = v8 + 4;
    goto LABEL_18;
  }
  while (1)
  {
    int64_t v21 = v22 + 1;
    if (__OFADD__(v22, 1)) {
      break;
    }
    if (v21 >= v37) {
      return v7;
    }
    unint64_t v20 = *(void *)(v36 + 8 * v21);
    ++v22;
    if (v20) {
      goto LABEL_18;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t Date.beginningOfDay(timeZone:)@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v93 = a1;
  uint64_t v90 = a2;
  uint64_t v4 = sub_1FB0E0();
  uint64_t v96 = *(void *)(v4 - 8);
  uint64_t v97 = v4;
  __chkstk_darwin(v4);
  char v95 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_12124(&qword_274510);
  __chkstk_darwin(v6 - 8);
  id v81 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1FAE70();
  uint64_t v82 = *(void *)(v8 - 8);
  uint64_t v83 = v8;
  uint64_t v9 = __chkstk_darwin(v8);
  uint64_t v79 = (char *)&v77 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v80 = (char *)&v77 - v11;
  uint64_t v12 = sub_1FB1F0();
  uint64_t v13 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  unint64_t v89 = (char *)&v77 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_12124(&qword_26D638);
  uint64_t v16 = __chkstk_darwin(v15 - 8);
  uint64_t v91 = (uint64_t)&v77 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = __chkstk_darwin(v16);
  id v78 = (char *)&v77 - v19;
  __chkstk_darwin(v18);
  unint64_t v94 = (char *)&v77 - v20;
  uint64_t v21 = sub_1FB220();
  uint64_t v84 = *(void *)(v21 - 8);
  uint64_t v85 = v21;
  __chkstk_darwin(v21);
  uint64_t v23 = (char *)&v77 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v24 = sub_12124(&qword_274518);
  uint64_t v25 = __chkstk_darwin(v24 - 8);
  uint64_t v27 = (char *)&v77 - ((v26 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v28 = __chkstk_darwin(v25);
  uint64_t v86 = (char *)&v77 - v29;
  uint64_t v30 = __chkstk_darwin(v28);
  uint64_t v32 = (char *)&v77 - v31;
  __chkstk_darwin(v30);
  uint64_t v34 = (char *)&v77 - v33;
  if (qword_26C3F8 != -1) {
    swift_once();
  }
  uint64_t v35 = off_274508;
  uint64_t v36 = *(void *)((char *)&dword_10 + (void)off_274508);
  uint64_t v92 = v3;
  if (v36 && (unint64_t v37 = sub_4C3E4(v93), (v38 & 1) != 0))
  {
    (*(void (**)(char *, unint64_t, uint64_t))(v13 + 16))(v34, *(void *)&stru_20.segname[(void)v35 + 16] + *(void *)(v13 + 72) * v37, v12);
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
    uint64_t v40 = v34;
    uint64_t v41 = 0;
  }
  else
  {
    uint64_t v39 = *(void (**)(uint64_t, void, uint64_t, uint64_t))(v13 + 56);
    uint64_t v40 = v34;
    uint64_t v41 = 1;
  }
  char v87 = v39;
  v39((uint64_t)v40, v41, 1, v12);
  sub_1E6934((uint64_t)v34, (uint64_t)v32);
  unsigned int v42 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v13 + 48);
  int v43 = v42(v32, 1, v12);
  sub_55F38((uint64_t)v32, &qword_274518);
  if (v43 == 1)
  {
    if (qword_26C3F0 != -1) {
      swift_once();
    }
    uint64_t v44 = sub_6DBC8(v12, (uint64_t)qword_2744F0);
    uint64_t v45 = (uint64_t)v86;
    (*(void (**)(char *, uint64_t, uint64_t))(v13 + 16))(v86, v44, v12);
    v87(v45, 0, 1, v12);
    sub_1E699C(v45, (uint64_t)v34);
    if (!v42(v34, 1, v12))
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v23, v93, v85);
      sub_1FB1D0();
    }
  }
  uint64_t v46 = (uint64_t)v94;
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v96 + 56))(v94, 1, 1, v97);
  char v88 = v34;
  sub_1E6934((uint64_t)v34, (uint64_t)v27);
  if (v42(v27, 1, v12) == 1)
  {
    sub_55F38((uint64_t)v27, &qword_274518);
    uint64_t v47 = v92;
  }
  else
  {
    unint64_t v48 = v89;
    (*(void (**)(char *, char *, uint64_t))(v13 + 32))(v89, v27, v12);
    sub_12124(&qword_274520);
    uint64_t v49 = sub_1FB1E0();
    uint64_t v50 = *(void *)(v49 - 8);
    uint64_t v51 = *(void *)(v50 + 72);
    unint64_t v52 = (*(unsigned __int8 *)(v50 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v50 + 80);
    uint64_t v53 = swift_allocObject();
    *(_OWORD *)(v53 + 16) = xmmword_2026C0;
    unint64_t v54 = v53 + v52;
    uint64_t v55 = v13;
    uint64_t v77 = v12;
    uint64_t v56 = *(void (**)(unint64_t, void, uint64_t))(v50 + 104);
    v56(v54, enum case for Calendar.Component.year(_:), v49);
    v56(v54 + v51, enum case for Calendar.Component.month(_:), v49);
    v56(v54 + 2 * v51, enum case for Calendar.Component.day(_:), v49);
    sub_BD304(v53);
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    uint64_t v57 = v80;
    uint64_t v47 = v92;
    NSString v58 = v48;
    sub_1FB1C0();
    swift_bridgeObjectRelease();
    id v59 = v86;
    uint64_t v60 = v77;
    (*(void (**)(char *, char *, uint64_t))(v55 + 16))(v86, v58, v77);
    v87((uint64_t)v59, 0, 1, v60);
    uint64_t v62 = v84;
    uint64_t v61 = v85;
    int64_t v63 = v81;
    (*(void (**)(char *, uint64_t, uint64_t))(v84 + 16))(v81, v93, v85);
    (*(void (**)(char *, void, uint64_t, uint64_t))(v62 + 56))(v63, 0, 1, v61);
    sub_1FAE40();
    sub_1FAE50();
    sub_1FAE20();
    uint64_t v64 = v79;
    uint64_t v46 = (uint64_t)v94;
    sub_1FAE60();
    uint64_t v65 = (uint64_t)v78;
    sub_1FAE30();
    uint64_t v66 = *(void (**)(char *, uint64_t))(v82 + 8);
    unint64_t v67 = v64;
    uint64_t v68 = v83;
    v66(v67, v83);
    v66(v57, v68);
    (*(void (**)(char *, uint64_t))(v55 + 8))(v89, v77);
    sub_55F38(v46, &qword_26D638);
    sub_178518(v65, v46);
  }
  uint64_t v69 = v91;
  sub_178518(v46, v91);
  uint64_t v70 = v96;
  uint64_t v71 = v97;
  (*(void (**)(char *, uint64_t, uint64_t))(v96 + 16))(v95, v47, v97);
  int v72 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v70 + 48))(v69, 1, v71);
  uint64_t v73 = (uint64_t)v88;
  if (v72 == 1)
  {
    (*(void (**)(uint64_t, char *, uint64_t))(v96 + 32))(v90, v95, v97);
    sub_55F38(v69, &qword_26D638);
  }
  else
  {
    uint64_t v74 = v96;
    uint64_t v75 = v97;
    (*(void (**)(char *, uint64_t))(v96 + 8))(v95, v97);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v74 + 32))(v90, v69, v75);
  }
  return sub_55F38(v73, &qword_274518);
}

uint64_t sub_1E60E8()
{
  uint64_t v0 = sub_1FB1A0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1FB1F0();
  sub_7D408(v4, qword_2744F0);
  sub_6DBC8(v4, (uint64_t)qword_2744F0);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for Calendar.Identifier.gregorian(_:), v0);
  sub_1FB1B0();
  return (*(uint64_t (**)(char *, uint64_t))(v1 + 8))(v3, v0);
}

int *sub_1E6208()
{
  uint64_t result = (int *)sub_1E6228();
  off_274508 = result;
  return result;
}

uint64_t sub_1E6228()
{
  uint64_t v0 = sub_12124(&qword_274510);
  uint64_t v1 = __chkstk_darwin(v0 - 8);
  uint64_t v64 = (char *)v52 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  unint64_t v67 = (char *)v52 - v3;
  uint64_t v4 = sub_12124(&qword_274518);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v60 = (char *)v52 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = __chkstk_darwin(v5);
  uint64_t v65 = (uint64_t)v52 - v8;
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v52 - v9;
  uint64_t v69 = sub_1FB220();
  uint64_t v11 = *(void *)(v69 - 8);
  uint64_t v12 = __chkstk_darwin(v69);
  uint64_t v61 = (char *)v52 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v62 = (char *)v52 - v15;
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v18 = (char *)v52 - v17;
  __chkstk_darwin(v16);
  uint64_t v19 = sub_1FB1F0();
  uint64_t v20 = *(void **)(v19 - 8);
  uint64_t v21 = __chkstk_darwin(v19);
  uint64_t v66 = (char *)v52 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = __chkstk_darwin(v21);
  int64_t v63 = (char *)v52 - v24;
  __chkstk_darwin(v23);
  uint64_t v26 = (char *)v52 - v25;
  uint64_t v71 = _swiftEmptyDictionarySingleton;
  if (qword_26C3F0 != -1) {
    swift_once();
  }
  uint64_t v27 = sub_6DBC8(v19, (uint64_t)qword_2744F0);
  uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v20[2];
  v28(v26, v27, v19);
  sub_1FB210();
  sub_1FB1D0();
  sub_1FB210();
  id v59 = v26;
  uint64_t v68 = v28;
  v28(v10, (uint64_t)v26, v19);
  uint64_t v57 = (void (*)(char *, void, uint64_t, uint64_t))v20[7];
  NSString v58 = v20 + 7;
  v57(v10, 0, 1, v19);
  uint64_t v55 = (uint64_t (*)(char *, uint64_t, uint64_t))v20[6];
  uint64_t v56 = v20 + 6;
  int v29 = v55(v10, 1, v19);
  unint64_t v54 = v20;
  if (v29 == 1)
  {
    sub_55F38((uint64_t)v10, &qword_274518);
    uint64_t v30 = v65;
    sub_1E6A04((uint64_t)v18, v65);
    uint64_t v31 = v69;
    uint64_t v53 = *(void (**)(char *, uint64_t))(v11 + 8);
    v53(v18, v69);
    sub_55F38(v30, &qword_274518);
  }
  else
  {
    uint64_t v32 = (void (*)(char *, char *, uint64_t))v20[4];
    uint64_t v33 = (uint64_t)v63;
    v32(v63, v10, v19);
    uint64_t v34 = v71;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = v34;
    sub_70B38(v33, (uint64_t)v18, isUniquelyReferenced_nonNull_native);
    uint64_t v71 = v70;
    swift_bridgeObjectRelease();
    uint64_t v31 = v69;
    uint64_t v53 = *(void (**)(char *, uint64_t))(v11 + 8);
    v53(v18, v69);
  }
  uint64_t v36 = v66;
  v68(v66, v27, v19);
  unint64_t v37 = v67;
  sub_1FB200();
  uint64_t v38 = v11;
  uint64_t v39 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v11 + 48);
  uint64_t result = v39(v37, 1, v31);
  if (result == 1)
  {
    __break(1u);
    goto LABEL_13;
  }
  v52[1] = v38;
  uint64_t v41 = *(void (**)(char *, char *, uint64_t))(v38 + 32);
  v41(v62, v37, v31);
  sub_1FB1D0();
  uint64_t v42 = v69;
  int v43 = v64;
  sub_1FB200();
  uint64_t result = v39(v43, 1, v42);
  if (result == 1)
  {
LABEL_13:
    __break(1u);
    return result;
  }
  uint64_t v44 = (uint64_t)v61;
  v41(v61, v43, v42);
  uint64_t v45 = (uint64_t)v60;
  v68(v60, (uint64_t)v36, v19);
  v57((char *)v45, 0, 1, v19);
  if (v55((char *)v45, 1, v19) == 1)
  {
    sub_55F38(v45, &qword_274518);
    uint64_t v46 = v65;
    sub_1E6A04(v44, v65);
    v53((char *)v44, v42);
    sub_55F38(v46, &qword_274518);
    uint64_t v47 = v54;
  }
  else
  {
    uint64_t v47 = v54;
    uint64_t v48 = (uint64_t)v63;
    ((void (*)(char *, uint64_t, uint64_t))v54[4])(v63, v45, v19);
    uint64_t v49 = v71;
    char v50 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v70 = v49;
    sub_70B38(v48, v44, v50);
    uint64_t v71 = v70;
    swift_bridgeObjectRelease();
    v53((char *)v44, v42);
  }
  uint64_t v51 = (void (*)(char *, uint64_t))v47[1];
  v51(v36, v19);
  v51(v59, v19);
  return (uint64_t)v71;
}

uint64_t sub_1E6934(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_274518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E699C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_12124(&qword_274518);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_1E6A04@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  swift_bridgeObjectRetain();
  unint64_t v6 = sub_4C3E4(a1);
  LOBYTE(a1) = v7;
  swift_bridgeObjectRelease();
  if (a1)
  {
    int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v9 = *v3;
    uint64_t v21 = *v3;
    *uint64_t v3 = 0x8000000000000000;
    if (!isUniquelyReferenced_nonNull_native)
    {
      sub_11FDA8();
      uint64_t v9 = v21;
    }
    uint64_t v10 = *(void *)(v9 + 48);
    uint64_t v11 = sub_1FB220();
    (*(void (**)(unint64_t, uint64_t))(*(void *)(v11 - 8) + 8))(v10 + *(void *)(*(void *)(v11 - 8) + 72) * v6, v11);
    uint64_t v12 = *(void *)(v9 + 56);
    uint64_t v13 = sub_1FB1F0();
    uint64_t v20 = *(void *)(v13 - 8);
    (*(void (**)(uint64_t, unint64_t, uint64_t))(v20 + 32))(a2, v12 + *(void *)(v20 + 72) * v6, v13);
    sub_14C348(v6, v9);
    *uint64_t v3 = v9;
    swift_bridgeObjectRelease();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v20 + 56);
    uint64_t v15 = a2;
    uint64_t v16 = 0;
    uint64_t v17 = v13;
  }
  else
  {
    uint64_t v18 = sub_1FB1F0();
    uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v18 - 8) + 56);
    uint64_t v17 = v18;
    uint64_t v15 = a2;
    uint64_t v16 = 1;
  }

  return v14(v15, v16, 1, v17);
}

uint64_t sub_1E6BD4(uint64_t a1)
{
  return sub_1E6C2C(a1, (void (*)(unint64_t, uint64_t))sub_14CD20, (void (*)(void))sub_1221E0);
}

uint64_t sub_1E6C00(uint64_t a1)
{
  return sub_1E6C2C(a1, (void (*)(unint64_t, uint64_t))sub_14CD20, (void (*)(void))sub_1221EC);
}

uint64_t sub_1E6C2C(uint64_t a1, void (*a2)(unint64_t, uint64_t), void (*a3)(void))
{
  unint64_t v6 = v3;
  swift_bridgeObjectRetain();
  unint64_t v8 = sub_4C9C4(a1);
  LOBYTE(a1) = v9;
  swift_bridgeObjectRelease();
  if ((a1 & 1) == 0) {
    return 0;
  }
  int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
  uint64_t v11 = *v6;
  uint64_t v16 = *v6;
  *unint64_t v6 = 0x8000000000000000;
  if (!isUniquelyReferenced_nonNull_native)
  {
    a3();
    uint64_t v11 = v16;
  }
  uint64_t v12 = *(void *)(v11 + 48);
  uint64_t v13 = sub_1FB110();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v13 - 8) + 8))(v12 + *(void *)(*(void *)(v13 - 8) + 72) * v8, v13);
  uint64_t v14 = *(void *)(*(void *)(v11 + 56) + 16 * v8);
  a2(v8, v11);
  *unint64_t v6 = v11;
  swift_bridgeObjectRelease();
  return v14;
}

uint64_t sub_1E6D48(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_1E6D5C);
}

uint64_t sub_1E6D5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_1FB110();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(_DWORD *)(v7 + 84) == a2)
  {
    unint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48);
    return v8(a1, a2, v6);
  }
  else
  {
    unint64_t v10 = *(void *)(a1 + *(int *)(a3 + 20));
    if (v10 >= 0xFFFFFFFF) {
      LODWORD(v10) = -1;
    }
    return (v10 + 1);
  }
}

uint64_t sub_1E6E1C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_1E6E30);
}

uint64_t sub_1E6E30(uint64_t a1, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t result = sub_1FB110();
  uint64_t v9 = *(void *)(result - 8);
  if (*(_DWORD *)(v9 + 84) == a3)
  {
    unint64_t v10 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v9 + 56);
    return v10(a1, a2, a2, result);
  }
  else
  {
    *(void *)(a1 + *(int *)(a4 + 20)) = (a2 - 1);
  }
  return result;
}

uint64_t type metadata accessor for UserEncodingWork()
{
  uint64_t result = qword_274580;
  if (!qword_274580) {
    return swift_getSingletonMetadata();
  }
  return result;
}

uint64_t sub_1E6F38()
{
  return sub_1E7244(&qword_26C568, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1E6F80(uint64_t a1)
{
  sub_A404C(a1 + 48, (uint64_t)v6);
  sub_A404C((uint64_t)v6, (uint64_t)v7);
  if (sub_A40B4((uint64_t)v7) == 1)
  {
    char v1 = 0;
LABEL_6:
    sub_1E77BC();
    uint64_t v3 = swift_allocError();
    *uint64_t v4 = v1;
    uint64_t v2 = v3;
    swift_willThrow();
    return v2;
  }
  if (!*(void *)(v8 + 16))
  {
    char v1 = 1;
    goto LABEL_6;
  }
  type metadata accessor for UserEncodingWork();
  sub_1FB660();
  swift_allocObject();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v2 = sub_1FB650();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return v2;
}

uint64_t sub_1E7098()
{
  return 0x636E652072657375;
}

uint64_t sub_1E70BC@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t result = sub_1E6F80(a1);
  if (!v2)
  {
    *a2 = result;
    a2[1] = v5;
    a2[2] = v6;
    a2[3] = v7;
  }
  return result;
}

uint64_t sub_1E70EC@<X0>(uint64_t a1@<X1>, void *a2@<X8>)
{
  swift_retain();
  uint64_t v4 = swift_bridgeObjectRetain();
  uint64_t v5 = sub_1E72E4(v4, a1);
  swift_bridgeObjectRelease();
  uint64_t result = swift_release();
  *a2 = v5;
  return result;
}

uint64_t sub_1E715C(uint64_t a1)
{
  uint64_t result = sub_1E7244((unint64_t *)&qword_2745B8, (void (*)(uint64_t))type metadata accessor for UserEncodingWork);
  *(void *)(a1 + 8) = result;
  return result;
}

uint64_t sub_1E71B4()
{
  return sub_1E7244(&qword_2745C0, (void (*)(uint64_t))type metadata accessor for UserEncodingWork);
}

uint64_t sub_1E71FC()
{
  return sub_1E7244((unint64_t *)&qword_26D7B8, (void (*)(uint64_t))&type metadata accessor for UUID);
}

uint64_t sub_1E7244(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1E7290()
{
  unint64_t result = qword_2745C8;
  if (!qword_2745C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2745C8);
  }
  return result;
}

void *sub_1E72E4(uint64_t a1, uint64_t a2)
{
  uint64_t v45 = a2;
  uint64_t v42 = sub_1FB5C0();
  uint64_t v4 = *(void *)(v42 - 8);
  __chkstk_darwin(v42);
  uint64_t v41 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v40 = sub_1FB550();
  uint64_t v6 = *(void *)(v40 - 8);
  __chkstk_darwin(v40);
  uint64_t v39 = (char *)v31 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_26D7C8);
  __chkstk_darwin(v8 - 8);
  int v43 = (char *)v31 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v44 = sub_1FB640();
  __chkstk_darwin(v44);
  uint64_t v38 = (char *)v31 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = *(void *)(a1 + 16);
  if (!v12) {
    return _swiftEmptyArrayStorage;
  }
  v31[1] = v2;
  uint64_t v13 = (unsigned int (**)(uint64_t, uint64_t, uint64_t))(v10 + 48);
  uint64_t v35 = (void (**)(char *, uint64_t))(v6 + 8);
  uint64_t v36 = (void (**)(char *, uint64_t, uint64_t))(v10 + 32);
  uint64_t v33 = (void (**)(char *, uint64_t))(v10 + 8);
  uint64_t v34 = (void (**)(char *, uint64_t))(v4 + 8);
  swift_bridgeObjectRetain();
  v31[0] = a1;
  uint64_t v14 = (uint64_t *)(a1 + 40);
  uint64_t v46 = _swiftEmptyArrayStorage;
  long long v32 = xmmword_1FD2A0;
  uint64_t v15 = (uint64_t)v43;
  unint64_t v37 = v13;
  do
  {
    uint64_t v17 = *(v14 - 1);
    uint64_t v18 = *v14;
    swift_bridgeObjectRetain();
    sub_1FB6A0();
    uint64_t v19 = v44;
    if ((*v13)(v15, 1, v44) == 1)
    {
      sub_5EBAC(v15);
      if (qword_26C378 != -1) {
        swift_once();
      }
      id v20 = (id)qword_272B58;
      sub_1FBDA0();
      sub_12124(&qword_26D7F0);
      uint64_t v21 = swift_allocObject();
      *(_OWORD *)(v21 + 16) = v32;
      *(void *)(v21 + 56) = &type metadata for String;
      *(void *)(v21 + 64) = sub_5FD80();
      *(void *)(v21 + 32) = v17;
      *(void *)(v21 + 40) = v18;
      swift_bridgeObjectRetain();
      sub_1FB400();
      swift_bridgeObjectRelease();

      swift_bridgeObjectRelease();
    }
    else
    {
      uint64_t v22 = v38;
      (*v36)(v38, v15, v19);
      uint64_t v23 = v39;
      uint64_t v24 = v19;
      sub_1FB620();
      uint64_t v25 = v41;
      sub_1FB500();
      (*v35)(v23, v40);
      uint64_t v26 = sub_1FB590();
      (*v34)(v25, v42);
      (*v33)(v22, v24);
      if (swift_isUniquelyReferenced_nonNull_native()) {
        uint64_t v27 = v46;
      }
      else {
        uint64_t v27 = sub_43CE0(0, v46[2] + 1, 1, v46);
      }
      unint64_t v29 = v27[2];
      unint64_t v28 = v27[3];
      uint64_t v15 = (uint64_t)v43;
      uint64_t v13 = v37;
      if (v29 >= v28 >> 1) {
        uint64_t v27 = sub_43CE0((void *)(v28 > 1), v29 + 1, 1, v27);
      }
      v27[2] = v29 + 1;
      uint64_t v46 = v27;
      uint64_t v16 = &v27[3 * v29];
      v16[4] = v17;
      v16[5] = v18;
      v16[6] = v26;
    }
    v14 += 2;
    --v12;
  }
  while (v12);
  swift_bridgeObjectRelease();
  return v46;
}

unint64_t sub_1E77BC()
{
  unint64_t result = qword_2745D0;
  if (!qword_2745D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2745D0);
  }
  return result;
}

unsigned char *storeEnumTagSinglePayload for UserEncodingWork.Errors(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *unint64_t result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1E78DCLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for UserEncodingWork.Errors()
{
  return &type metadata for UserEncodingWork.Errors;
}

ValueMetadata *type metadata accessor for UserEncodingWork.Context()
{
  return &type metadata for UserEncodingWork.Context;
}

unint64_t sub_1E7928()
{
  unint64_t result = qword_2745D8;
  if (!qword_2745D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2745D8);
  }
  return result;
}

uint64_t RawRepresentable<>.containerName.getter()
{
  sub_1FBA30();
  return v1;
}

void *sub_1E79A4(char a1, uint64_t a2)
{
  uint64_t v2 = a2;
  if (a1)
  {
    swift_bridgeObjectRetain();
  }
  else
  {
    uint64_t v3 = *(void *)(a2 + 16);
    if (v3)
    {
      swift_bridgeObjectRetain();
      uint64_t v4 = 0;
      uint64_t v16 = v2;
      do
      {
        uint64_t v8 = v2 + v4;
        double v9 = *(double *)(v2 + v4 + 104);
        if (v9 >= 0.0)
        {
          uint64_t v10 = *(void *)(v8 + 32);
          char v20 = *(unsigned char *)(v8 + 40);
          uint64_t v19 = *(void *)(v8 + 48);
          char v18 = *(unsigned char *)(v8 + 56);
          uint64_t v11 = *(void *)(v8 + 64);
          char v12 = *(unsigned char *)(v8 + 72);
          uint64_t v13 = *(void *)(v8 + 80);
          uint64_t v17 = *(void *)(v8 + 88);
          uint64_t v14 = *(void *)(v8 + 96);
          sub_5480C(v11, v12);
          swift_bridgeObjectRetain();
          swift_bridgeObjectRetain();
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            sub_467B8(0, _swiftEmptyArrayStorage[2] + 1, 1);
          }
          unint64_t v6 = _swiftEmptyArrayStorage[2];
          unint64_t v5 = _swiftEmptyArrayStorage[3];
          if (v6 >= v5 >> 1) {
            sub_467B8(v5 > 1, v6 + 1, 1);
          }
          _swiftEmptyArrayStorage[2] = v6 + 1;
          uint64_t v7 = &_swiftEmptyArrayStorage[10 * v6];
          v7[4] = v10;
          *((unsigned char *)v7 + 40) = v20;
          v7[6] = v19;
          *((unsigned char *)v7 + 56) = v18;
          v7[8] = v11;
          *((unsigned char *)v7 + 72) = v12;
          uint64_t v2 = v16;
          v7[10] = v13;
          v7[11] = v17;
          v7[12] = v14;
          *((double *)v7 + 13) = v9;
        }
        v4 += 80;
        --v3;
      }
      while (v3);
      swift_bridgeObjectRelease();
    }
    return _swiftEmptyArrayStorage;
  }
  return (void *)v2;
}

uint64_t Book.MediaType.rawValue.getter()
{
  if (*v0) {
    return 0x6F6F626F69647561;
  }
  else {
    return 0x6B6F6F6265;
  }
}

BooksPersonalization::Book::Rationale __swiftcall Book.Rationale.init(conditionalScore:seedBooksByMethodology:)(Swift::Double conditionalScore, Swift::OpaquePointer seedBooksByMethodology)
{
  *(Swift::Double *)uint64_t v2 = conditionalScore;
  *(Swift::OpaquePointer *)(v2 + 8) = seedBooksByMethodology;
  result.conditionalScore = conditionalScore;
  result.seedBooksByMethodology = seedBooksByMethodology;
  return result;
}

__n128 Book.init(storeID:mediaType:seriesID:sources:rationale:content:)@<Q0>(uint64_t a1@<X0>, char *a2@<X1>, uint64_t a3@<X2>, char a4@<W3>, uint64_t a5@<X4>, __n128 *a6@<X5>, uint64_t *a7@<X6>, uint64_t a8@<X8>)
{
  char v8 = *a2;
  uint64_t v9 = *a7;
  char v10 = *((unsigned char *)a7 + 8);
  *(void *)a8 = a1;
  *(unsigned char *)(a8 + 8) = v8;
  *(void *)(a8 + 16) = a3;
  *(unsigned char *)(a8 + 24) = a4 & 1;
  *(void *)(a8 + 32) = v9;
  *(unsigned char *)(a8 + 40) = v10;
  *(void *)(a8 + 48) = a5;
  __n128 result = *a6;
  *(__n128 *)(a8 + 56) = *a6;
  return result;
}

Swift::Int sub_1E7BCC(uint64_t *a1)
{
  uint64_t v2 = *a1;
  if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
    uint64_t v2 = sub_124750(v2);
  }
  uint64_t v3 = *(void *)(v2 + 16);
  v5[0] = v2 + 32;
  v5[1] = v3;
  Swift::Int result = sub_5D0B8(v5);
  *a1 = v2;
  return result;
}

_UNKNOWN **static Book.MediaType.allCases.getter()
{
  return &off_256928;
}

uint64_t sub_1E7C48@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  uint64_t v3 = *(void *)(a1 + 16);
  if (v3)
  {
    uint64_t v4 = 0;
    unint64_t v5 = (uint64_t *)(a1 + 32);
    do
    {
      uint64_t v7 = *v5++;
      uint64_t v6 = v7;
      if ((v7 & ~v4) == 0) {
        uint64_t v6 = 0;
      }
      v4 |= v6;
      --v3;
    }
    while (v3);
  }
  else
  {
    uint64_t v4 = 0;
  }
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v4;
  return result;
}

unint64_t sub_1E7CA0()
{
  if (*v0) {
    return 0xD000000000000016;
  }
  else {
    return 0xD000000000000010;
  }
}

uint64_t sub_1E7CE0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1EE58C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1E7D08(uint64_t a1)
{
  unint64_t v2 = sub_1E7F14();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E7D44(uint64_t a1)
{
  unint64_t v2 = sub_1E7F14();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Book.Rationale.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_2745E0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v10[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v8 = *(void *)(v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_1E7F14();
  sub_1FC870();
  char v12 = 0;
  sub_1FC500();
  if (!v2)
  {
    uint64_t v11 = v8;
    v10[15] = 1;
    sub_12124(&qword_2720B8);
    sub_172A7C();
    sub_1FC530();
  }
  return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1E7F14()
{
  unint64_t result = qword_2745E8;
  if (!qword_2745E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2745E8);
  }
  return result;
}

uint64_t Book.Rationale.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2745F0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v13[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_5D64(a1, a1[3]);
  sub_1E7F14();
  sub_1FC850();
  if (!v2)
  {
    char v15 = 0;
    sub_1FC3C0();
    uint64_t v10 = v9;
    sub_12124(&qword_2720B8);
    v13[15] = 1;
    sub_172E84();
    sub_1FC3F0();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    uint64_t v11 = v14;
    *a2 = v10;
    a2[1] = v11;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1E8138@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Book.Rationale.init(from:)(a1, a2);
}

uint64_t sub_1E8150(void *a1)
{
  return Book.Rationale.encode(to:)(a1);
}

BooksPersonalization::Book::MediaType_optional __swiftcall Book.MediaType.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Book::MediaType_optional)sub_20C50(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_257608, v1);
}

uint64_t sub_1E8174(char *a1, char *a2)
{
  return sub_1D9438(*a1, *a2);
}

BooksPersonalization::Book::MediaType_optional sub_1E8180(Swift::String *a1)
{
  return Book.MediaType.init(rawValue:)(*a1);
}

void sub_1E818C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6B6F6F6265;
  if (*v1) {
    uint64_t v2 = 0x6F6F626F69647561;
  }
  unint64_t v3 = 0xE500000000000000;
  if (*v1) {
    unint64_t v3 = 0xE90000000000006BLL;
  }
  *a1 = v2;
  a1[1] = v3;
}

uint64_t sub_1E81CC()
{
  return sub_1FBA60();
}

uint64_t sub_1E822C()
{
  return sub_1FBA40();
}

void sub_1E827C(void *a1@<X8>)
{
  *a1 = &off_257658;
}

Swift::Int sub_1E828C()
{
  return sub_1FC830();
}

uint64_t sub_1E8310()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1E8380()
{
  return sub_1FC830();
}

BooksPersonalization::Book::SaleType_optional __swiftcall Book.SaleType.init(rawValue:)(Swift::String rawValue)
{
  return (BooksPersonalization::Book::SaleType_optional)sub_20C50(rawValue._countAndFlagsBits, rawValue._object, (Swift::OpaquePointer)&off_257680, v1);
}

uint64_t Book.SaleType.rawValue.getter()
{
  if (*v0) {
    return 1684627824;
  }
  else {
    return 1701147238;
  }
}

BooksPersonalization::Book::SaleType_optional sub_1E8430(Swift::String *a1)
{
  return Book.SaleType.init(rawValue:)(*a1);
}

void sub_1E843C(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1701147238;
  if (*v1) {
    uint64_t v2 = 1684627824;
  }
  *a1 = v2;
  a1[1] = 0xE400000000000000;
}

uint64_t sub_1E8464()
{
  return sub_1FBA60();
}

uint64_t sub_1E84C4()
{
  return sub_1FBA40();
}

Swift::Int sub_1E8514()
{
  return sub_1FC830();
}

uint64_t sub_1E857C()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1E85C8()
{
  return sub_1FC830();
}

uint64_t sub_1E862C(char *a1, char *a2)
{
  return sub_1D94E0(*a1, *a2);
}

uint64_t sub_1E8638(uint64_t a1)
{
  unint64_t v2 = sub_1E8B50();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E8674(uint64_t a1)
{
  unint64_t v2 = sub_1E8B50();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1E86B0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1EE678(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1E86D8(uint64_t a1)
{
  unint64_t v2 = sub_1E8AFC();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E8714(uint64_t a1)
{
  unint64_t v2 = sub_1E8AFC();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t sub_1E8750(uint64_t a1)
{
  unint64_t v2 = sub_1E8C3C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E878C(uint64_t a1)
{
  unint64_t v2 = sub_1E8C3C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Book.Content.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_2745F8);
  uint64_t v20 = *(void *)(v3 - 8);
  uint64_t v21 = v3;
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v17 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_12124(&qword_274600);
  uint64_t v18 = *(void *)(v6 - 8);
  uint64_t v19 = v6;
  __chkstk_darwin(v6);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v23 = sub_12124(&qword_274608);
  uint64_t v9 = *(void *)(v23 - 8);
  __chkstk_darwin(v23);
  uint64_t v11 = (char *)&v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = *v1;
  char v12 = *((unsigned char *)v1 + 8);
  sub_5D64(a1, a1[3]);
  sub_1E8AFC();
  sub_1FC870();
  if (v12)
  {
    LOBYTE(v24) = 1;
    sub_1E8B50();
    uint64_t v13 = v23;
    sub_1FC440();
    uint64_t v24 = v22;
    sub_12124(&qword_274620);
    sub_1E8BA4();
    uint64_t v14 = v21;
    sub_1FC530();
    (*(void (**)(char *, uint64_t))(v20 + 8))(v5, v14);
  }
  else
  {
    LOBYTE(v24) = 0;
    sub_1E8C3C();
    uint64_t v13 = v23;
    sub_1FC440();
    uint64_t v24 = v22;
    sub_12124(&qword_274620);
    sub_1E8BA4();
    uint64_t v15 = v19;
    sub_1FC530();
    (*(void (**)(char *, uint64_t))(v18 + 8))(v8, v15);
  }
  return (*(uint64_t (**)(char *, uint64_t))(v9 + 8))(v11, v13);
}

unint64_t sub_1E8AFC()
{
  unint64_t result = qword_274610;
  if (!qword_274610)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274610);
  }
  return result;
}

unint64_t sub_1E8B50()
{
  unint64_t result = qword_274618;
  if (!qword_274618)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274618);
  }
  return result;
}

unint64_t sub_1E8BA4()
{
  unint64_t result = qword_274628;
  if (!qword_274628)
  {
    sub_121C4(&qword_274620);
    sub_1E9260(&qword_274630);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274628);
  }
  return result;
}

unint64_t sub_1E8C3C()
{
  unint64_t result = qword_274638;
  if (!qword_274638)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274638);
  }
  return result;
}

uint64_t Book.Content.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = sub_12124(&qword_274640);
  uint64_t v27 = *(void *)(v25 - 8);
  __chkstk_darwin(v25);
  uint64_t v4 = (char *)v23 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_274648);
  uint64_t v26 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v23 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_12124(&qword_274650);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = a1[3];
  unint64_t v28 = a1;
  sub_5D64(a1, v12);
  sub_1E8AFC();
  uint64_t v13 = v29;
  sub_1FC850();
  if (v13) {
    return sub_1264C((uint64_t)v28);
  }
  uint64_t v29 = v9;
  uint64_t v14 = sub_1FC430();
  if (*(void *)(v14 + 16) != 1)
  {
    uint64_t v17 = sub_1FC0F0();
    swift_allocError();
    uint64_t v19 = v18;
    sub_12124(&qword_26F030);
    *uint64_t v19 = &type metadata for Book.Content;
    sub_1FC300();
    sub_1FC0C0();
    (*(void (**)(void *, void, uint64_t))(*(void *)(v17 - 8) + 104))(v19, enum case for DecodingError.typeMismatch(_:), v17);
    swift_willThrow();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
    return sub_1264C((uint64_t)v28);
  }
  v23[1] = v14;
  char v15 = *(unsigned char *)(v14 + 32);
  if (v15)
  {
    LOBYTE(v30) = 1;
    sub_1E8B50();
    sub_1FC2F0();
    sub_12124(&qword_274620);
    sub_1E91C8();
    uint64_t v16 = v25;
    sub_1FC3F0();
    (*(void (**)(char *, uint64_t))(v27 + 8))(v4, v16);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v29 + 8))(v11, v8);
  }
  else
  {
    LOBYTE(v30) = 0;
    sub_1E8C3C();
    sub_1FC2F0();
    sub_12124(&qword_274620);
    sub_1E91C8();
    sub_1FC3F0();
    uint64_t v21 = v29;
    (*(void (**)(char *, uint64_t))(v26 + 8))(v7, v5);
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v21 + 8))(v11, v8);
  }
  uint64_t v22 = v24;
  void *v24 = v30;
  *((unsigned char *)v22 + 8) = v15;
  return sub_1264C((uint64_t)v28);
}

unint64_t sub_1E91C8()
{
  unint64_t result = qword_274658;
  if (!qword_274658)
  {
    sub_121C4(&qword_274620);
    sub_1E9260(&qword_274660);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274658);
  }
  return result;
}

uint64_t sub_1E9260(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1FB340();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1E92A4@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return Book.Content.init(from:)(a1, a2);
}

uint64_t sub_1E92BC(void *a1)
{
  return Book.Content.encode(to:)(a1);
}

uint64_t Book.content.getter@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 32);
  *(void *)a1 = v2;
  char v3 = *(unsigned char *)(v1 + 40);
  *(unsigned char *)(a1 + 8) = v3;
  return sub_5480C(v2, v3);
}

uint64_t Book.rationale.getter@<X0>(void *a1@<X8>)
{
  uint64_t v2 = *(void *)(v1 + 64);
  *a1 = *(void *)(v1 + 56);
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_1E92F4()
{
  uint64_t result = 0x444965726F7473;
  switch(*v0)
  {
    case 1:
      uint64_t result = 0x707954616964656DLL;
      break;
    case 2:
      uint64_t result = 0x4449736569726573;
      break;
    case 3:
      uint64_t result = 0x746E65746E6F63;
      break;
    case 4:
      uint64_t result = 0x73656372756F73;
      break;
    case 5:
      uint64_t result = 0x6C616E6F69746172;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1E93B4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1EE770(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1E93DC(uint64_t a1)
{
  unint64_t v2 = sub_1E9754();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E9418(uint64_t a1)
{
  unint64_t v2 = sub_1E9754();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t Book.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_274668);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  int v22 = *(unsigned __int8 *)(v1 + 8);
  uint64_t v19 = *(void *)(v1 + 16);
  int v18 = *(unsigned __int8 *)(v1 + 24);
  uint64_t v17 = *(void *)(v1 + 32);
  int v16 = *(unsigned __int8 *)(v1 + 40);
  uint64_t v8 = *(void *)(v1 + 48);
  uint64_t v13 = *(void *)(v1 + 56);
  uint64_t v14 = *(void *)(v1 + 64);
  uint64_t v15 = v8;
  sub_5D64(a1, a1[3]);
  sub_1E9754();
  sub_1FC870();
  LOBYTE(v20) = 0;
  sub_1FC560();
  if (!v2)
  {
    char v9 = v16;
    uint64_t v10 = v17;
    LOBYTE(v20) = v22;
    char v23 = 1;
    sub_ACF24();
    sub_1FC530();
    LOBYTE(v20) = 2;
    sub_1FC4D0();
    uint64_t v20 = v10;
    LOBYTE(v21) = v9;
    char v23 = 3;
    sub_1E97A8();
    sub_1FC4A0();
    uint64_t v20 = v15;
    char v23 = 4;
    sub_12124(&qword_26EC88);
    sub_AFCC8(&qword_26EC90, &qword_26EC88, (void (*)(void))sub_AFC20);
    sub_1FC530();
    uint64_t v20 = v13;
    uint64_t v21 = v14;
    char v23 = 5;
    sub_1E97FC();
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

unint64_t sub_1E9754()
{
  unint64_t result = qword_274670;
  if (!qword_274670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274670);
  }
  return result;
}

unint64_t sub_1E97A8()
{
  unint64_t result = qword_274678;
  if (!qword_274678)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274678);
  }
  return result;
}

unint64_t sub_1E97FC()
{
  unint64_t result = qword_274680;
  if (!qword_274680)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274680);
  }
  return result;
}

uint64_t Book.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_274688);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1E9754();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  LOBYTE(v26) = 0;
  uint64_t v9 = sub_1FC420();
  char v29 = 1;
  sub_AD020();
  sub_1FC3F0();
  int v10 = v26;
  LOBYTE(v26) = 2;
  uint64_t v11 = sub_1FC390();
  int v24 = v12;
  uint64_t v25 = v11;
  int v28 = v10;
  char v29 = 3;
  sub_1E9C4C();
  sub_1FC360();
  uint64_t v13 = v26;
  int v14 = v27;
  uint64_t v21 = sub_12124(&qword_26EC88);
  uint64_t v22 = v13;
  char v29 = 4;
  int v23 = v14;
  sub_5480C(v13, v14);
  sub_AFCC8(&qword_26ECB0, &qword_26EC88, (void (*)(void))sub_AFD34);
  sub_1FC3F0();
  uint64_t v15 = v26;
  char v29 = 5;
  sub_1E9CA0();
  swift_bridgeObjectRetain();
  sub_1FC360();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v17 = v26;
  uint64_t v16 = v27;
  uint64_t v18 = v22;
  char v19 = v23;
  sub_5480C(v22, v23);
  swift_bridgeObjectRetain();
  sub_54820(v18, v19);
  *(void *)a2 = v9;
  *(unsigned char *)(a2 + 8) = v28;
  *(void *)(a2 + 16) = v25;
  *(unsigned char *)(a2 + 24) = v24 & 1;
  *(void *)(a2 + 32) = v18;
  *(unsigned char *)(a2 + 40) = v19;
  *(void *)(a2 + 48) = v15;
  *(void *)(a2 + 56) = v17;
  *(void *)(a2 + 64) = v16;
  sub_1264C((uint64_t)a1);
  sub_54820(v18, v19);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1E9C4C()
{
  unint64_t result = qword_274690;
  if (!qword_274690)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274690);
  }
  return result;
}

unint64_t sub_1E9CA0()
{
  unint64_t result = qword_274698;
  if (!qword_274698)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274698);
  }
  return result;
}

uint64_t sub_1E9CF4@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return Book.init(from:)(a1, a2);
}

uint64_t sub_1E9D0C(void *a1)
{
  return Book.encode(to:)(a1);
}

uint64_t sub_1E9D24()
{
  return sub_1FBA70();
}

uint64_t sub_1E9D84()
{
  return sub_1FBA50();
}

uint64_t sub_1E9DD4@<X0>(uint64_t a1@<X0>, void *a2@<X8>)
{
  return sub_1E7C48(a1, a2);
}

uint64_t sub_1E9DEC()
{
  return 0x6E656D7461657274;
}

uint64_t sub_1E9E0C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x6E656D7461657274 && a2 == 0xEB00000000444974)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1E9EBC(uint64_t a1)
{
  unint64_t v2 = sub_1E9F84();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1E9EF8(uint64_t a1)
{
  unint64_t v2 = sub_1E9F84();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t UserInfo.encode(to:)(void *a1)
{
  return sub_1EA348(a1, &qword_2746A0, (void (*)(void))sub_1E9F84, (uint64_t)&type metadata for UserInfo.CodingKeys, (void (*)(uint64_t, uint64_t))&KeyedEncodingContainer.encodeIfPresent(_:forKey:));
}

unint64_t sub_1E9F84()
{
  unint64_t result = qword_2746A8;
  if (!qword_2746A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746A8);
  }
  return result;
}

uint64_t UserInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2746B0);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1E9F84();
  sub_1FC850();
  if (!v2)
  {
    uint64_t v9 = sub_1FC310();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1EA148@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return UserInfo.init(from:)(a1, a2);
}

uint64_t sub_1EA160(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1EA6C4(a1, a2, a3, &qword_2746A0, (void (*)(void))sub_1E9F84, (uint64_t)&type metadata for UserInfo.CodingKeys, (void (*)(uint64_t, uint64_t))&KeyedEncodingContainer.encodeIfPresent(_:forKey:));
}

uint64_t sub_1EA1B0()
{
  return 0x437972746E756F63;
}

uint64_t sub_1EA1D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  if (a1 == 0x437972746E756F63 && a2 == 0xEB0000000065646FLL)
  {
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = 0;
  }
  else
  {
    char v5 = sub_1FC5F0();
    uint64_t result = swift_bridgeObjectRelease();
    char v7 = v5 ^ 1;
  }
  *a3 = v7 & 1;
  return result;
}

uint64_t sub_1EA280(uint64_t a1)
{
  unint64_t v2 = sub_1EA498();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1EA2BC(uint64_t a1)
{
  unint64_t v2 = sub_1EA498();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t StoreInfo.encode(to:)(void *a1)
{
  return sub_1EA348(a1, &qword_2746B8, (void (*)(void))sub_1EA498, (uint64_t)&type metadata for StoreInfo.CodingKeys, (void (*)(uint64_t, uint64_t))&KeyedEncodingContainer.encode(_:forKey:));
}

uint64_t sub_1EA348(void *a1, uint64_t *a2, void (*a3)(void), uint64_t a4, void (*a5)(uint64_t, uint64_t))
{
  uint64_t v16 = a5;
  uint64_t v15 = a3;
  uint64_t v7 = sub_12124(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = v5[1];
  uint64_t v14 = *v5;
  sub_5D64(a1, a1[3]);
  v15();
  sub_1FC870();
  v16(v14, v11);
  return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
}

unint64_t sub_1EA498()
{
  unint64_t result = qword_2746C0;
  if (!qword_2746C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746C0);
  }
  return result;
}

uint64_t StoreInfo.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2746C8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1EA498();
  sub_1FC850();
  if (!v2)
  {
    uint64_t v9 = sub_1FC3A0();
    uint64_t v11 = v10;
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    *a2 = v9;
    a2[1] = v11;
  }
  return sub_1264C((uint64_t)a1);
}

uint64_t sub_1EA65C@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return StoreInfo.init(from:)(a1, a2);
}

uint64_t sub_1EA674(void *a1, uint64_t a2, uint64_t a3)
{
  return sub_1EA6C4(a1, a2, a3, &qword_2746B8, (void (*)(void))sub_1EA498, (uint64_t)&type metadata for StoreInfo.CodingKeys, (void (*)(uint64_t, uint64_t))&KeyedEncodingContainer.encode(_:forKey:));
}

uint64_t sub_1EA6C4(void *a1, uint64_t a2, uint64_t a3, uint64_t *a4, void (*a5)(void), uint64_t a6, void (*a7)(uint64_t, uint64_t))
{
  uint64_t v18 = a7;
  uint64_t v17 = a5;
  uint64_t v9 = sub_12124(a4);
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  int v12 = (char *)&v15 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = v7[1];
  uint64_t v16 = *v7;
  sub_5D64(a1, a1[3]);
  v17();
  sub_1FC870();
  v18(v16, v13);
  return (*(uint64_t (**)(char *, uint64_t))(v10 + 8))(v12, v9);
}

unint64_t BookRecommendationServiceError.description.getter()
{
  uint64_t v1 = *v0;
  sub_1FC050(32);
  swift_bridgeObjectRelease();
  v2._uint64_t countAndFlagsBits = 0xD00000000000002FLL;
  char v3 = (void *)0x8000000000217F40;
  switch(v1)
  {
    case 1:
      v2._uint64_t countAndFlagsBits = 0xD000000000000021;
      uint64_t v4 = "not signed into a paid storefront";
      goto LABEL_5;
    case 2:
      char v3 = (void *)0x8000000000217EF0;
      v2._uint64_t countAndFlagsBits = 0xD000000000000016;
      break;
    case 3:
      v2._uint64_t countAndFlagsBits = 0xD00000000000005ALL;
      uint64_t v4 = "user has recommendation switch at Account Settings > Personalized Recommendations disabled";
LABEL_5:
      char v3 = (void *)((unint64_t)(v4 - 32) | 0x8000000000000000);
      break;
    default:
      break;
  }
  v2._object = v3;
  sub_1FB8F0(v2);
  swift_bridgeObjectRelease();
  return 0xD00000000000001ELL;
}

uint64_t BookRecommendationRequest.collection.getter@<X0>(uint64_t *a1@<X8>)
{
  uint64_t v2 = *v1;
  uint64_t v3 = v1[1];
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v6 = v1[4];
  uint64_t v7 = v1[5];
  unint64_t v8 = v1[6];
  uint64_t v9 = v1[7];
  uint64_t v10 = v1[8];
  *a1 = *v1;
  a1[1] = v3;
  a1[2] = v4;
  a1[3] = v5;
  a1[4] = v6;
  a1[5] = v7;
  a1[6] = v8;
  a1[7] = v9;
  a1[8] = v10;
  return sub_1A3774(v2, v3, v4, v5, v6, v7, v8);
}

void BookRecommendationRequest.overrideSource.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 72);
}

void BookRecommendationRequest.overrideScorer.getter(unsigned char *a1@<X8>)
{
  *a1 = *(unsigned char *)(v1 + 73);
}

uint64_t BookRecommendationRequest.allowNegativeScores.getter()
{
  return *(unsigned __int8 *)(v0 + 74);
}

__n128 BookRecommendationRequest.init(collection:allowNegativeScores:overrideSource:overrideScorer:)@<Q0>(uint64_t a1@<X0>, char a2@<W1>, char *a3@<X2>, char *a4@<X3>, uint64_t a5@<X8>)
{
  uint64_t v5 = *(void *)(a1 + 64);
  char v6 = *a3;
  char v7 = *a4;
  long long v8 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)a5 = *(_OWORD *)a1;
  *(_OWORD *)(a5 + 16) = v8;
  __n128 result = *(__n128 *)(a1 + 32);
  long long v10 = *(_OWORD *)(a1 + 48);
  *(__n128 *)(a5 + 32) = result;
  *(_OWORD *)(a5 + 48) = v10;
  *(void *)(a5 + 64) = v5;
  *(unsigned char *)(a5 + 72) = v6;
  *(unsigned char *)(a5 + 73) = v7;
  *(unsigned char *)(a5 + 74) = a2;
  return result;
}

unint64_t sub_1EA9C4()
{
  unint64_t result = qword_2746D0;
  if (!qword_2746D0)
  {
    sub_121C4(&qword_2746D8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746D0);
  }
  return result;
}

unint64_t sub_1EAA28()
{
  unint64_t result = qword_2746E0;
  if (!qword_2746E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746E0);
  }
  return result;
}

unint64_t sub_1EAA80()
{
  unint64_t result = qword_2746E8;
  if (!qword_2746E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746E8);
  }
  return result;
}

unint64_t sub_1EAAD8()
{
  unint64_t result = qword_2746F0;
  if (!qword_2746F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746F0);
  }
  return result;
}

unint64_t sub_1EAB30()
{
  unint64_t result = qword_2746F8;
  if (!qword_2746F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2746F8);
  }
  return result;
}

unint64_t sub_1EAB88()
{
  unint64_t result = qword_274700;
  if (!qword_274700)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274700);
  }
  return result;
}

unint64_t sub_1EABE0()
{
  unint64_t result = qword_274708;
  if (!qword_274708)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274708);
  }
  return result;
}

uint64_t initializeWithCopy for Book(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (v4 == 255)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    *(unsigned char *)(a1 + 40) = v4 & 1;
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Book(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a1 + 32;
  char v6 = (uint64_t *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      uint64_t v9 = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)uint64_t v5 = v9;
    }
    else
    {
      *(void *)(a1 + 32) = *v6;
      *(unsigned char *)(a1 + 40) = v7 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 255)
  {
    sub_57194(a1 + 32);
    char v8 = *((unsigned char *)v6 + 8);
    *(void *)uint64_t v5 = *v6;
    *(unsigned char *)(v5 + 8) = v8;
  }
  else
  {
    *(void *)(a1 + 32) = *v6;
    *(unsigned char *)(a1 + 40) = v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Book(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      *(void *)(a1 + 32) = *(void *)v5;
      *(unsigned char *)(a1 + 40) = v6 & 1;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_57194(a1 + 32);
  }
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for Book(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for Book(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Book()
{
  return &type metadata for Book;
}

void *assignWithCopy for Book.Rationale(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for Book.Rationale(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Book.Rationale()
{
  return &type metadata for Book.Rationale;
}

ValueMetadata *type metadata accessor for Book.MediaType()
{
  return &type metadata for Book.MediaType;
}

ValueMetadata *type metadata accessor for Book.SaleType()
{
  return &type metadata for Book.SaleType;
}

uint64_t initializeBufferWithCopyOfBuffer for Book.Content(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for Book.Content(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for Book.Content(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = v3;
  swift_bridgeObjectRelease();
  return a1;
}

ValueMetadata *type metadata accessor for Book.Content()
{
  return &type metadata for Book.Content;
}

ValueMetadata *type metadata accessor for SaleOptions()
{
  return &type metadata for SaleOptions;
}

ValueMetadata *type metadata accessor for UserInfo()
{
  return &type metadata for UserInfo;
}

ValueMetadata *type metadata accessor for StoreInfo()
{
  return &type metadata for StoreInfo;
}

uint64_t *initializeWithCopy for Collection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  sub_1A3774(*a2, v4, v5, v6, v7, v8, v9);
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  return a1;
}

uint64_t *assignWithCopy for Collection(uint64_t *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  uint64_t v5 = a2[2];
  uint64_t v6 = a2[3];
  uint64_t v7 = a2[4];
  uint64_t v8 = a2[5];
  unint64_t v9 = a2[6];
  uint64_t v10 = a2[7];
  uint64_t v11 = a2[8];
  sub_1A3774(*a2, v4, v5, v6, v7, v8, v9);
  uint64_t v12 = *a1;
  uint64_t v13 = a1[1];
  uint64_t v14 = a1[2];
  uint64_t v15 = a1[3];
  uint64_t v16 = a1[4];
  uint64_t v17 = a1[5];
  unint64_t v18 = a1[6];
  *a1 = v3;
  a1[1] = v4;
  a1[2] = v5;
  a1[3] = v6;
  a1[4] = v7;
  a1[5] = v8;
  a1[6] = v9;
  a1[7] = v10;
  a1[8] = v11;
  sub_158F14(v12, v13, v14, v15, v16, v17, v18);
  return a1;
}

uint64_t *assignWithTake for Collection(uint64_t *a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 64);
  uint64_t v4 = *a1;
  uint64_t v6 = a1[1];
  uint64_t v5 = a1[2];
  uint64_t v7 = a1[3];
  uint64_t v8 = a1[4];
  uint64_t v9 = a1[5];
  unint64_t v10 = a1[6];
  long long v11 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *((_OWORD *)a1 + 1) = v11;
  long long v12 = *(_OWORD *)(a2 + 48);
  *((_OWORD *)a1 + 2) = *(_OWORD *)(a2 + 32);
  *((_OWORD *)a1 + 3) = v12;
  a1[8] = v3;
  sub_158F14(v4, v6, v5, v7, v8, v9, v10);
  return a1;
}

uint64_t getEnumTagSinglePayload for Collection(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 72)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 32) >> 2) & 0xFFFFFF80 | (*(void *)(a1 + 32) >> 1);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for Collection(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(_OWORD *)(a1 + 56) = 0u;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 72) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 72) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

uint64_t sub_1EB388(uint64_t a1)
{
  return *(void *)(a1 + 48) >> 61;
}

uint64_t sub_1EB394(uint64_t result)
{
  *(void *)(result + 48) &= 0x1FFFFFFFFFFFFFFFuLL;
  return result;
}

uint64_t sub_1EB3A4(uint64_t result, uint64_t a2)
{
  uint64_t v2 = *(void *)(result + 48) & 1 | (a2 << 61);
  *(void *)(result + 32) &= 0x101uLL;
  *(void *)(result + 48) = v2;
  return result;
}

ValueMetadata *type metadata accessor for Collection()
{
  return &type metadata for Collection;
}

unsigned char *storeEnumTagSinglePayload for BookRecommendationServiceError(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 3 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 3) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFD) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFC)
  {
    unsigned int v6 = ((a2 - 253) >> 8) + 1;
    *double result = a2 + 3;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1EB4A4);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 3;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookRecommendationServiceError()
{
  return &type metadata for BookRecommendationServiceError;
}

uint64_t _s20BooksPersonalization10CollectionOwxx_0(uint64_t a1)
{
  return sub_158F14(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48));
}

uint64_t initializeWithCopy for BookRecommendationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v13 = *(void *)(a2 + 64);
  sub_1A3774(*(void *)a2, v5, v6, v7, v8, v9, v10);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v13;
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(_WORD *)(a1 + 73) = *(_WORD *)(a2 + 73);
  return a1;
}

uint64_t assignWithCopy for BookRecommendationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  uint64_t v6 = *(void *)(a2 + 16);
  uint64_t v7 = *(void *)(a2 + 24);
  uint64_t v8 = *(void *)(a2 + 32);
  uint64_t v9 = *(void *)(a2 + 40);
  unint64_t v10 = *(void *)(a2 + 48);
  uint64_t v11 = *(void *)(a2 + 56);
  uint64_t v20 = *(void *)(a2 + 64);
  sub_1A3774(*(void *)a2, v5, v6, v7, v8, v9, v10);
  uint64_t v12 = *(void *)a1;
  uint64_t v13 = *(void *)(a1 + 8);
  uint64_t v14 = *(void *)(a1 + 16);
  uint64_t v15 = *(void *)(a1 + 24);
  uint64_t v16 = *(void *)(a1 + 32);
  uint64_t v17 = *(void *)(a1 + 40);
  unint64_t v18 = *(void *)(a1 + 48);
  *(void *)a1 = v4;
  *(void *)(a1 + 8) = v5;
  *(void *)(a1 + 16) = v6;
  *(void *)(a1 + 24) = v7;
  *(void *)(a1 + 32) = v8;
  *(void *)(a1 + 40) = v9;
  *(void *)(a1 + 48) = v10;
  *(void *)(a1 + 56) = v11;
  *(void *)(a1 + 64) = v20;
  sub_158F14(v12, v13, v14, v15, v16, v17, v18);
  *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
  *(unsigned char *)(a1 + 73) = *(unsigned char *)(a2 + 73);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

__n128 initializeWithTake for BookRecommendationRequest(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  __n128 result = *(__n128 *)(a2 + 16);
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 59) = *(_OWORD *)(a2 + 59);
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  *(__n128 *)(a1 + 16) = result;
  return result;
}

uint64_t assignWithTake for BookRecommendationRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 64);
  uint64_t v5 = *(void *)a1;
  uint64_t v6 = *(void *)(a1 + 8);
  uint64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = *(void *)(a1 + 24);
  uint64_t v9 = *(void *)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  unint64_t v11 = *(void *)(a1 + 48);
  long long v12 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v12;
  long long v13 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v13;
  *(void *)(a1 + 64) = v4;
  sub_158F14(v5, v6, v7, v8, v9, v10, v11);
  *(_WORD *)(a1 + 72) = *(_WORD *)(a2 + 72);
  *(unsigned char *)(a1 + 74) = *(unsigned char *)(a2 + 74);
  return a1;
}

uint64_t getEnumTagSinglePayload for BookRecommendationRequest(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 75)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unsigned int v2 = (*(void *)(a1 + 32) >> 2) & 0xFFFFFF80 | (*(void *)(a1 + 32) >> 1);
  if (v2 > 0x80000000) {
    int v3 = ~v2;
  }
  else {
    int v3 = -1;
  }
  return (v3 + 1);
}

double storeEnumTagSinglePayload for BookRecommendationRequest(uint64_t a1, int a2, int a3)
{
  if (a2 < 0)
  {
    double result = 0.0;
    *(_OWORD *)(a1 + 56) = 0u;
    *(_OWORD *)(a1 + 40) = 0u;
    *(_OWORD *)(a1 + 24) = 0u;
    *(_OWORD *)(a1 + 8) = 0u;
    *(unsigned char *)(a1 + 74) = 0;
    *(_WORD *)(a1 + 72) = 0;
    *(void *)a1 = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(a1 + 75) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      double result = 0.0;
      *(_OWORD *)a1 = 0u;
      *(_OWORD *)(a1 + 16) = 0u;
      *(void *)(a1 + 32) = (4 * -a2) & 0x3FFFFFE00 | (2 * (-a2 & 0x7FLL));
      *(_OWORD *)(a1 + 40) = 0u;
      *(_OWORD *)(a1 + 56) = 0u;
      return result;
    }
    *(unsigned char *)(a1 + 75) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookRecommendationRequest()
{
  return &type metadata for BookRecommendationRequest;
}

uint64_t dispatch thunk of BookRecommendationServiceType.fetchRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v9 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(a3 + 8) + **(int **)(a3 + 8));
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *uint64_t v7 = v3;
  v7[1] = sub_57490;
  return v9(a1, a2, a3);
}

uint64_t dispatch thunk of BookRecommendationServiceType.filter(bookIDs:features:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  unint64_t v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 16) + **(int **)(a4 + 16));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_9E870;
  return v11(a1, a2, a3, a4);
}

uint64_t sub_1EBA24()
{
  sub_1264C(v0 + 16);
  sub_1264C(v0 + 56);
  sub_1264C(v0 + 96);
  sub_1264C(v0 + 136);
  sub_1264C(v0 + 176);

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for BookRecommendationService()
{
  return self;
}

ValueMetadata *type metadata accessor for StoreInfo.CodingKeys()
{
  return &type metadata for StoreInfo.CodingKeys;
}

ValueMetadata *type metadata accessor for UserInfo.CodingKeys()
{
  return &type metadata for UserInfo.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for Book.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *double result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1EBB90);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Book.CodingKeys()
{
  return &type metadata for Book.CodingKeys;
}

ValueMetadata *type metadata accessor for Book.Content.CodingKeys()
{
  return &type metadata for Book.Content.CodingKeys;
}

ValueMetadata *type metadata accessor for Book.Content.EbookCodingKeys()
{
  return &type metadata for Book.Content.EbookCodingKeys;
}

unsigned char *_s20BooksPersonalization9StoreInfoV10CodingKeysOwst_0(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *double result = a2;
        return result;
      case 2:
        *(_WORD *)double result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)double result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *double result = 0;
      break;
    case 2:
      *(_WORD *)double result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1EBC84);
    case 4:
      *(_DWORD *)double result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for Book.Content.AudiobookCodingKeys()
{
  return &type metadata for Book.Content.AudiobookCodingKeys;
}

unsigned char *_s20BooksPersonalization4BookV9MediaTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *double result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1EBD88);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *double result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for Book.Rationale.CodingKeys()
{
  return &type metadata for Book.Rationale.CodingKeys;
}

unint64_t sub_1EBDC4()
{
  unint64_t result = qword_2747E0;
  if (!qword_2747E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2747E0);
  }
  return result;
}

unint64_t sub_1EBE1C()
{
  unint64_t result = qword_2747E8;
  if (!qword_2747E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2747E8);
  }
  return result;
}

unint64_t sub_1EBE74()
{
  unint64_t result = qword_2747F0;
  if (!qword_2747F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2747F0);
  }
  return result;
}

unint64_t sub_1EBECC()
{
  unint64_t result = qword_2747F8;
  if (!qword_2747F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2747F8);
  }
  return result;
}

unint64_t sub_1EBF24()
{
  unint64_t result = qword_274800;
  if (!qword_274800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274800);
  }
  return result;
}

unint64_t sub_1EBF7C()
{
  unint64_t result = qword_274808;
  if (!qword_274808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274808);
  }
  return result;
}

unint64_t sub_1EBFD4()
{
  unint64_t result = qword_274810;
  if (!qword_274810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274810);
  }
  return result;
}

uint64_t sub_1EC028(uint64_t a1, long long *a2)
{
  long long v4 = *a2;
  *(_OWORD *)(v3 + 4512) = a2[1];
  long long v5 = a2[3];
  *(_OWORD *)(v3 + 4528) = a2[2];
  *(_OWORD *)(v3 + 4544) = v5;
  *(void *)(v3 + 4872) = v2;
  *(void *)(v3 + 4864) = a1;
  *(_OWORD *)(v3 + 4496) = v4;
  *(_OWORD *)(v3 + 4555) = *(long long *)((char *)a2 + 59);
  return _swift_task_switch(sub_1EC074, 0, 0);
}

uint64_t sub_1EC074()
{
  uint64_t v1 = *(void **)(v0 + 4872);
  uint64_t v2 = v1[5];
  uint64_t v3 = v1[6];
  sub_5D64(v1 + 2, v2);
  unsigned int v6 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 16) + **(int **)(v3 + 16));
  long long v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 4880) = v4;
  *long long v4 = v0;
  v4[1] = sub_1EC190;
  return v6(v0 + 3376, v2, v3);
}

uint64_t sub_1EC190()
{
  *(void *)(*(void *)v1 + 4888) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1ECDFC;
  }
  else {
    uint64_t v2 = sub_1EC2A4;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1EC2A4()
{
  uint64_t v1 = *(void *)(v0 + 4872);
  memcpy((void *)(v0 + 16), (const void *)(v0 + 3376), 0x460uLL);
  sub_5D64((void *)(v1 + 56), *(void *)(v1 + 80));
  sub_158FB0(v0 + 4496, v0 + 4648);
  sub_158FB0(v0 + 4648, v0 + 4792);
  memcpy((void *)(v0 + 2256), (const void *)(v0 + 16), 0x460uLL);
  sub_55844(v0 + 4568, v0 + 4571, &qword_2748A8);
  sub_55844(v0 + 4571, v0 + 4572, &qword_2748A8);
  sub_1EEA0C((void *)(v0 + 4496), (void (*)(void, void, void, void, void, void, void, void, void))sub_1A3774);
  uint64_t v2 = (void *)swift_task_alloc();
  *(void *)(v0 + 4896) = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1EC438;
  return sub_1A13F4(v0 + 4573, v0 + 4792, v0 + 2256, (unsigned char *)(v0 + 4572));
}

uint64_t sub_1EC438(uint64_t a1)
{
  uint64_t v3 = *v2;
  uint64_t v4 = (void *)(*v2 + 4496);
  *(void *)(v3 + 4904) = a1;
  *(void *)(v3 + 4912) = v1;
  swift_task_dealloc();
  sub_1EEA0C(v4, (void (*)(void, void, void, void, void, void, void, void, void))sub_158F14);
  if (v1) {
    long long v5 = sub_1EC7BC;
  }
  else {
    long long v5 = sub_1EC590;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1EC590()
{
  uint64_t v1 = (void *)v0[609];
  uint64_t v2 = v1[25];
  uint64_t v3 = v1[26];
  sub_5D64(v1 + 22, v2);
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t, uint64_t))(*(void *)(v3 + 8) + **(int **)(v3 + 8));
  uint64_t v4 = (void *)swift_task_alloc();
  v0[615] = v4;
  *uint64_t v4 = v0;
  v4[1] = sub_1EC69C;
  uint64_t v5 = v0[613];
  return v7(v5, v2, v3);
}

uint64_t sub_1EC69C(uint64_t a1)
{
  uint64_t v3 = *v2;
  *(void *)(v3 + 4928) = a1;
  *(void *)(v3 + 4936) = v1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = sub_1ECE14;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v4 = sub_1EC820;
  }
  return _swift_task_switch(v4, 0, 0);
}

uint64_t sub_1EC7BC()
{
  sub_11D3C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1EC820()
{
  int v1 = *(unsigned __int8 *)(v0 + 4569);
  if (v1 == 3)
  {
    LOBYTE(v1) = *(unsigned char *)(v0 + 49);
    char v2 = *(unsigned char *)(v0 + 50);
    char v3 = *(unsigned char *)(v0 + 52);
    char v4 = *(unsigned char *)(v0 + 54);
    char v5 = *(unsigned char *)(v0 + 56);
    char v6 = *(unsigned char *)(v0 + 65);
    char v7 = *(unsigned char *)(v0 + 81);
    sub_158FB0(v0 + 4648, v0 + 4720);
    unint64_t v8 = *(void *)(v0 + 4768);
    switch(v8 >> 61)
    {
      case 1uLL:
        break;
      case 2uLL:
        LOBYTE(v1) = v3;
        break;
      case 3uLL:
        LOBYTE(v1) = v4;
        break;
      case 4uLL:
        LOBYTE(v1) = v5;
        break;
      case 5uLL:
        LOBYTE(v1) = v6;
        break;
      case 6uLL:
        LOBYTE(v1) = v7;
        break;
      default:
        LOBYTE(v1) = v2;
        break;
    }
    *(void *)(v0 + 4768) = v8 & 0x1FFFFFFFFFFFFFFFLL;
  }
  sub_5D64((void *)(*(void *)(v0 + 4872) + 136), *(void *)(*(void *)(v0 + 4872) + 160));
  memcpy((void *)(v0 + 1136), (const void *)(v0 + 16), 0x460uLL);
  *(unsigned char *)(v0 + 4574) = v1;
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v0 + 4944) = v9;
  *uint64_t v9 = v0;
  v9[1] = sub_1EC9C4;
  uint64_t v10 = *(void *)(v0 + 4928);
  return sub_AE734(v10, v0 + 1136, (unsigned char *)(v0 + 4574));
}

uint64_t sub_1EC9C4(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 4952) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  if (v1)
  {
    char v5 = sub_1ECD98;
  }
  else
  {
    *(void *)(v4 + 4960) = a1;
    char v5 = sub_1ECAFC;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1ECAFC()
{
  uint64_t v22 = v0;
  uint64_t v1 = *(void *)(v0 + 4960);
  uint64_t v2 = *(void *)(v0 + 4952);
  sub_1EEA0C((void *)(v0 + 4496), (void (*)(void, void, void, void, void, void, void, void, void))sub_1A3774);
  char v3 = sub_1EE0D0(v1, (void *)(v0 + 4496));
  sub_1EEA0C((void *)(v0 + 4496), (void (*)(void, void, void, void, void, void, void, void, void))sub_158F14);
  swift_bridgeObjectRelease();
  uint64_t v4 = sub_1E79A4(*(unsigned char *)(v0 + 4570), (uint64_t)v3);
  swift_bridgeObjectRelease();
  uint64_t v21 = v4;
  swift_bridgeObjectRetain();
  sub_1E7BCC((uint64_t *)&v21);
  if (v2)
  {
    return swift_release();
  }
  swift_bridgeObjectRelease();
  uint64_t v6 = (uint64_t)v21;
  sub_158FB0(v0 + 4648, v0 + 4576);
  unint64_t v7 = *(void *)(v0 + 4624);
  *(void *)(v0 + 4624) = v7 & 0x1FFFFFFFFFFFFFFFLL;
  if (v7 >> 61 == 6) {
    int64_t v8 = *(void *)(v0 + 4640);
  }
  else {
    int64_t v8 = 0x7FFFFFFFFFFFFFFFLL;
  }
  int64_t v9 = sub_3E3A8(v8, v6);
  uint64_t v11 = v10;
  uint64_t v13 = v12;
  unint64_t v15 = v14;
  if (v14)
  {
    sub_1FC730();
    swift_unknownObjectRetain_n();
    uint64_t v17 = (void *)swift_dynamicCastClass();
    if (!v17)
    {
      swift_unknownObjectRelease();
      uint64_t v17 = _swiftEmptyArrayStorage;
    }
    uint64_t v18 = v17[2];
    swift_release();
    if (__OFSUB__(v15 >> 1, v13))
    {
      __break(1u);
    }
    else if (v18 == (v15 >> 1) - v13)
    {
      uint64_t v16 = (void *)swift_dynamicCastClass();
      if (!v16)
      {
        swift_unknownObjectRelease();
        uint64_t v16 = _swiftEmptyArrayStorage;
      }
      goto LABEL_15;
    }
    swift_unknownObjectRelease();
  }
  uint64_t v16 = sub_4AFF0(v9, v11, v13, v15);
LABEL_15:
  char v19 = *(void **)(v0 + 4864);
  swift_unknownObjectRelease();
  *char v19 = v16;
  memcpy(v19 + 1, (const void *)(v0 + 16), 0x460uLL);
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_1ECD98()
{
  sub_11D3C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ECDFC()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1ECE14()
{
  swift_bridgeObjectRelease();
  sub_11D3C(v0 + 16);
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ECE84(uint64_t a1, _OWORD *a2)
{
  uint64_t v6 = *v2;
  uint64_t v7 = swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *(void *)uint64_t v7 = v3;
  long long v8 = a2[1];
  *(_OWORD *)(v7 + 4496) = *a2;
  long long v9 = a2[2];
  *(_OWORD *)(v7 + 4544) = a2[3];
  *(_OWORD *)(v7 + 4528) = v9;
  *(void *)(v7 + 8) = sub_5958;
  *(void *)(v7 + 4872) = v6;
  *(void *)(v7 + 4864) = a1;
  *(_OWORD *)(v7 + 4512) = v8;
  *(_OWORD *)(v7 + 4555) = *(_OWORD *)((char *)a2 + 59);
  return _swift_task_switch(sub_1EC074, 0, 0);
}

uint64_t sub_1ECF6C(uint64_t a1, uint64_t a2)
{
  v3[533] = v2;
  v3[532] = a2;
  v3[531] = a1;
  return _swift_task_switch(sub_1ECF94, 0, 0);
}

uint64_t sub_1ECF94()
{
  uint64_t v38 = v0;
  uint64_t v1 = *(void *)(v0 + 4256);
  memset(v16, 0, sizeof(v16));
  char v17 = 2;
  unsigned __int8 v18 = 3;
  uint64_t v22 = 0;
  long long v20 = 0u;
  long long v21 = 0u;
  int8x16_t v19 = 0u;
  sub_1EEA5C((_OWORD *)(v0 + 3488));
  sub_55844(v0 + 3488, v0 + 3120, &qword_26DDF8);
  unsigned __int8 v23 = 4;
  long long v35 = 0u;
  long long v36 = 0u;
  long long v28 = 0u;
  memset(v29, 0, sizeof(v29));
  long long v26 = 0u;
  long long v27 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  uint64_t v30 = 0;
  __int16 v31 = 0;
  uint64_t v32 = 0;
  __int16 v33 = 0;
  v34[1] = 0.0;
  void v34[2] = 0.0;
  *(void *)&v34[0] = 2;
  sub_1A60FC((_OWORD *)(v0 + 2256));
  sub_55844(v0 + 2256, v0 + 2688, &qword_26DE00);
  Configuration.init(genreRecommendationConfiguration:seedBasedRecommendationConfiguration:collectionsConfiguration:scorersConfiguration:profileGenreDenylistForGenres:profileGenreDenylistForBooks:indefiniteAuthorIDs:mediaTypeMethod:mediaTypesRecommendationServiceConfiguration:booksClusteringServiceConfiguration:ebookConfiguration:audiobookConfiguration:personalizationMetadataServiceConfiguration:tabiConfiguration:)((uint64_t)v16, &v18, (unint64_t *)&v19, v0 + 3120, 0, 0, 0, &v23, v0 + 1136, (uint64_t *)&v35, (uint64_t)&v24, (uint64_t)&v30, (uint64_t)&v32, v34, v0 + 2688);
  long long v35 = 0u;
  long long v36 = 0u;
  char v37 = 1;
  int8x16_t v19 = 0u;
  long long v20 = 0u;
  LOBYTE(v21) = 1;
  long long v25 = 0u;
  long long v26 = 0u;
  long long v24 = 0u;
  LOBYTE(v27) = 1;
  LOBYTE(v14) = 1;
  LOBYTE(v13) = 1;
  Configuration.ScorersConfiguration.BookHistoryScorerConfiguration.init(bookReadingHistoryConfiguration:sampledReadingHistoryConfiguration:declinedConfiguration:moreLikeThisWeight:moreLikeThisHalfLife:lessLikeThisWeight:lessLikeThisHalfLife:purchasedWeight:purchasedHalfLife:downloadedViaFamilySharingWeight:downloadedViaFamilySharingHalfLife:acquiredExternallyWeight:acquiredExternallyHalfLife:acquiredExternallyUnknownFinishedInterval:storeBookUnknownFinishedIntervalSincePurchase:reviewedWeight:reviewedHalfLife:sampledWeight:sampledHalfLife:wantToReadWeight:wantToReadHalfLife:productPageViewWeight:productPageViewHalfLife:diversificationPenalty:bookAffinityLimit:bookCandidateLimitPerSeedBook:bookCandidateLimit:supplementalRequestLimit:preEventCollectionAddedToWantToReadDateSpacing:preEventCollectionSampledDateSpacing:bookHistoryLimit:syntheticConditionalScoreMultiplier:conditionalScoreBias:allowCandidatesWithProductPageViews:allowCandidatesInWantToRead:allowSampledCandidates:recommendationMethodologies:)((uint64_t)&v35, &v19, (uint64_t)&v24, 0.0, 1, 0.0, 1, 0.0, v0 + 3856, 1, 0.0, 1, 0.0, 1, 0.0, 1, 0.0, 1, 0.0,
    1,
    0,
    v13,
    0,
    v14,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0,
    1,
    0.0,
    1,
    0.0,
    1,
    0,
    1,
    0.0,
    1,
    0.0);
  uint64_t v2 = _swiftEmptySetSingleton;
  *(void *)(v0 + 4240) = _swiftEmptySetSingleton;
  uint64_t v3 = *(void *)(v1 + 16);
  if (v3)
  {
    uint64_t v4 = (unint64_t *)(swift_bridgeObjectRetain() + 40);
    do
    {
      uint64_t v5 = *(v4 - 1);
      unint64_t v6 = *v4;
      swift_bridgeObjectRetain();
      sub_F8E5C(v5, v6, (char *)&v24);
      swift_bridgeObjectRelease();
      if (v24 != 18) {
        sub_7244(&v24, v24);
      }
      v4 += 2;
      --v3;
    }
    while (v3);
    swift_bridgeObjectRelease();
    uint64_t v2 = *(void **)(v0 + 4240);
  }
  *(void *)(v0 + 4272) = v2;
  uint64_t v7 = *(void **)(v0 + 4264);
  uint64_t v8 = *(void *)(v0 + 4248);
  uint64_t v9 = v7[15];
  uint64_t v10 = v7[16];
  sub_5D64(v7 + 12, v9);
  *(void *)(v0 + 4232) = v8;
  memcpy((void *)(v0 + 16), (const void *)(v0 + 1136), 0x460uLL);
  unint64_t v15 = (uint64_t (*)(uint64_t, void *, uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 + 8)
                                                                                      + **(int **)(v10 + 8));
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v11 = (void *)swift_task_alloc();
  *(void *)(v0 + 4280) = v11;
  *uint64_t v11 = v0;
  v11[1] = sub_1ED3BC;
  return v15(v0 + 4232, v2, 0x7FFFFFFFFFFFFFFFLL, v0 + 16, v9, v10);
}

uint64_t sub_1ED3BC(uint64_t a1)
{
  uint64_t v4 = *v2;
  *(void *)(*v2 + 4288) = v1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (v1)
  {
    sub_8D5A4(v4 + 3856);
    uint64_t v5 = sub_1ED724;
  }
  else
  {
    *(void *)(v4 + 4296) = a1;
    sub_11D3C(v4 + 1136);
    uint64_t v5 = sub_1ED520;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1ED520()
{
  unsigned __int8 v18 = v0;
  uint64_t v1 = v0[531];
  v0[528] = v0[537];
  uint64_t v2 = swift_task_alloc();
  *(void *)(v2 + 16) = v0 + 528;
  *(void *)(v2 + 24) = v0 + 530;
  uint64_t v3 = swift_bridgeObjectRetain();
  sub_1EE3F0(v3, (uint64_t (*)(uint64_t, unsigned char *))sub_1EEA98);
  swift_bridgeObjectRelease();
  swift_task_dealloc();
  uint64_t v4 = *(void *)(v1 + 16);
  if (v4)
  {
    uint64_t v5 = v0[528];
    unint64_t v6 = (uint64_t *)(v0[531] + 32);
    swift_bridgeObjectRetain();
    uint64_t v7 = _swiftEmptyArrayStorage;
    do
    {
      uint64_t v9 = *v6++;
      uint64_t v8 = v9;
      if (!*(void *)(v5 + 16)
        || (uint64_t v10 = sub_56168(v8), (v11 & 1) == 0)
        || (memcpy(__dst, (const void *)(*(void *)(v5 + 56) + 384 * v10), sizeof(__dst)),
            memcpy(__src, v0 + 482, 0x16BuLL),
            BookHistory.isEligibleForRecommendation(with:)(__src)))
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v7 = sub_41858(0, v7[2] + 1, 1, v7);
        }
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        if (v13 >= v12 >> 1) {
          uint64_t v7 = sub_41858((void *)(v12 > 1), v13 + 1, 1, v7);
        }
        uint64_t v7[2] = v13 + 1;
        v7[v13 + 4] = v8;
      }
      --v4;
    }
    while (v4);
    swift_bridgeObjectRelease();
  }
  else
  {
    uint64_t v7 = _swiftEmptyArrayStorage;
  }
  sub_8D5A4((uint64_t)(v0 + 482));
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v14 = (uint64_t (*)(void *))v0[1];
  return v14(v7);
}

uint64_t sub_1ED724()
{
  sub_11D3C(v0 + 1136);
  swift_bridgeObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1ED794(uint64_t a1, const void *a2, uint64_t *a3)
{
  memcpy(__dst, a2, 0x179uLL);
  uint64_t v5 = swift_bridgeObjectRetain();
  BookHistory.pruned(to:)(v5, (uint64_t)v14);
  swift_bridgeObjectRelease();
  sub_55844((uint64_t)v14, (uint64_t)v16, &qword_26C518);
  sub_55844((uint64_t)v16, (uint64_t)__dst, &qword_26C518);
  if (sub_125F0((uint64_t)__dst) == 1)
  {
    uint64_t result = sub_56168(a1);
    if ((v7 & 1) == 0) {
      return result;
    }
    unint64_t v8 = result;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v10 = *a3;
    v15[0] = *a3;
    *a3 = 0x8000000000000000;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      sub_120150();
      uint64_t v10 = v15[0];
    }
    sub_14C690(v8, v10);
    *a3 = v10;
  }
  else
  {
    sub_55844((uint64_t)v16, (uint64_t)__src, &qword_26C518);
    memcpy(v15, __src, 0x179uLL);
    char v11 = swift_isUniquelyReferenced_nonNull_native();
    uint64_t v12 = *a3;
    *a3 = 0x8000000000000000;
    sub_70D3C(v15, a1, v11);
    *a3 = v12;
  }
  return swift_bridgeObjectRelease();
}

uint64_t sub_1ED8F0(uint64_t a1)
{
  long long v3 = *(_OWORD *)(a1 + 16);
  *(_OWORD *)(v2 + 2272) = *(_OWORD *)a1;
  *(_OWORD *)(v2 + 2288) = v3;
  long long v4 = *(_OWORD *)(a1 + 48);
  *(_OWORD *)(v2 + 2304) = *(_OWORD *)(a1 + 32);
  uint64_t v5 = *v1;
  uint64_t v6 = *(void *)(a1 + 64);
  __int16 v7 = *(_WORD *)(a1 + 72);
  char v8 = *(unsigned char *)(a1 + 74);
  *(_OWORD *)(v2 + 2320) = v4;
  *(void *)(v2 + 2336) = v6;
  *(_WORD *)(v2 + 2344) = v7;
  *(unsigned char *)(v2 + 2346) = v8;
  uint64_t v9 = swift_task_alloc();
  *(void *)(v2 + 2352) = v9;
  *(void *)uint64_t v9 = v2;
  *(void *)(v9 + 8) = sub_1EDA10;
  *(void *)(v9 + 4872) = v5;
  *(void *)(v9 + 4864) = v2 + 16;
  long long v10 = *(_OWORD *)(v2 + 2288);
  long long v11 = *(_OWORD *)(v2 + 2304);
  long long v12 = *(_OWORD *)(v2 + 2320);
  *(_OWORD *)(v9 + 4555) = *(_OWORD *)(v2 + 2331);
  *(_OWORD *)(v9 + 4544) = v12;
  *(_OWORD *)(v9 + 4528) = v11;
  *(_OWORD *)(v9 + 4512) = v10;
  *(_OWORD *)(v9 + 4496) = *(_OWORD *)(v2 + 2272);
  return _swift_task_switch(sub_1EC074, 0, 0);
}

uint64_t sub_1EDA10()
{
  *(void *)(*(void *)v1 + 2360) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_1EDB24;
  }
  else {
    uint64_t v2 = sub_11295C;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_1EDB24()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_1EDB3C(uint64_t a1, uint64_t a2)
{
  uint64_t v6 = *v2;
  __int16 v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  *__int16 v7 = v3;
  v7[1] = sub_B06F4;
  v7[533] = v6;
  v7[532] = a2;
  v7[531] = a1;
  return _swift_task_switch(sub_1ECF94, 0, 0);
}

unint64_t sub_1EDC04()
{
  unint64_t result = qword_274830;
  if (!qword_274830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274830);
  }
  return result;
}

unint64_t sub_1EDC5C()
{
  unint64_t result = qword_274838;
  if (!qword_274838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274838);
  }
  return result;
}

unint64_t sub_1EDCB4()
{
  unint64_t result = qword_274840;
  if (!qword_274840)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274840);
  }
  return result;
}

unint64_t sub_1EDD0C()
{
  unint64_t result = qword_274848;
  if (!qword_274848)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274848);
  }
  return result;
}

unint64_t sub_1EDD64()
{
  unint64_t result = qword_274850;
  if (!qword_274850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274850);
  }
  return result;
}

unint64_t sub_1EDDBC()
{
  unint64_t result = qword_274858;
  if (!qword_274858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274858);
  }
  return result;
}

unint64_t sub_1EDE14()
{
  unint64_t result = qword_274860;
  if (!qword_274860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274860);
  }
  return result;
}

unint64_t sub_1EDE6C()
{
  unint64_t result = qword_274868;
  if (!qword_274868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274868);
  }
  return result;
}

unint64_t sub_1EDEC4()
{
  unint64_t result = qword_274870;
  if (!qword_274870)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274870);
  }
  return result;
}

unint64_t sub_1EDF1C()
{
  unint64_t result = qword_274878;
  if (!qword_274878)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274878);
  }
  return result;
}

unint64_t sub_1EDF74()
{
  unint64_t result = qword_274880;
  if (!qword_274880)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274880);
  }
  return result;
}

unint64_t sub_1EDFCC()
{
  unint64_t result = qword_274888;
  if (!qword_274888)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274888);
  }
  return result;
}

unint64_t sub_1EE024()
{
  unint64_t result = qword_274890;
  if (!qword_274890)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274890);
  }
  return result;
}

unint64_t sub_1EE07C()
{
  unint64_t result = qword_274898;
  if (!qword_274898)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_274898);
  }
  return result;
}

void *sub_1EE0D0(uint64_t a1, void *a2)
{
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2)
  {
    unint64_t v3 = 0;
    uint64_t v23 = a1 + 32;
    unint64_t v24 = *(void *)(a1 + 16);
    do
    {
      if (v3 <= v2) {
        unint64_t v4 = v2;
      }
      else {
        unint64_t v4 = v3;
      }
LABEL_7:
      if (v3 == v4)
      {
        __break(1u);
        JUMPOUT(0x1EE3D4);
      }
      uint64_t v5 = (uint64_t *)(v23 + 80 * v3);
      uint64_t v6 = *v5;
      char v7 = *((unsigned char *)v5 + 8);
      uint64_t v27 = v5[2];
      char v26 = *((unsigned char *)v5 + 24);
      uint64_t v8 = v5[4];
      char v9 = *((unsigned char *)v5 + 40);
      uint64_t v10 = v5[6];
      uint64_t v25 = v5[7];
      uint64_t v11 = v5[8];
      uint64_t v12 = v5[9];
      ++v3;
      sub_158FB0((uint64_t)a2, (uint64_t)v30);
      sub_158FB0((uint64_t)v30, (uint64_t)v31);
      char v28 = v7;
      switch(v32 >> 61)
      {
        case 1uLL:
        case 2uLL:
        case 3uLL:
          v32 &= 0x1FFFFFFFFFFFFFFFuLL;
          unint64_t v13 = (void *)v31[1];
          goto LABEL_13;
        case 4uLL:
          v32 &= 0x1FFFFFFFFFFFFFFFuLL;
          unint64_t v13 = (void *)v31[0];
LABEL_13:
          sub_1EEA0C(a2, (void (*)(void, void, void, void, void, void, void, void, void))sub_1A3774);
          if (!v13[2]) {
            goto LABEL_24;
          }
          goto LABEL_18;
        case 5uLL:
          v32 &= 0x1FFFFFFFFFFFFFFFuLL;
          unint64_t v13 = (void *)v31[2];
          goto LABEL_17;
        case 6uLL:
          v32 &= 0x1FFFFFFFFFFFFFFFuLL;
          unint64_t v13 = v33;
LABEL_17:
          swift_bridgeObjectRetain();
          if (v13[2]) {
            goto LABEL_18;
          }
          goto LABEL_24;
        default:
          v32 &= 0x1FFFFFFFFFFFFFFFuLL;
          unint64_t v13 = _swiftEmptySetSingleton;
          if (!_swiftEmptySetSingleton[2]) {
            goto LABEL_24;
          }
LABEL_18:
          uint64_t v14 = sub_1FC7D0();
          uint64_t v15 = -1 << *((unsigned char *)v13 + 32);
          unint64_t v16 = v14 & ~v15;
          if (((*(void *)((char *)v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0) {
            goto LABEL_24;
          }
          uint64_t v17 = v13[6];
          if (*(void *)(v17 + 8 * v16) == v6) {
            goto LABEL_6;
          }
          uint64_t v18 = ~v15;
          break;
      }
      while (1)
      {
        unint64_t v16 = (v16 + 1) & v18;
        if (((*(void *)((char *)v13 + ((v16 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v16) & 1) == 0) {
          break;
        }
        if (*(void *)(v17 + 8 * v16) == v6)
        {
LABEL_6:
          swift_bridgeObjectRelease();
          if (v3 == v24) {
            return _swiftEmptyArrayStorage;
          }
          goto LABEL_7;
        }
      }
LABEL_24:
      sub_5480C(v8, v9);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_467B8(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v20 = _swiftEmptyArrayStorage[2];
      unint64_t v19 = _swiftEmptyArrayStorage[3];
      if (v20 >= v19 >> 1) {
        sub_467B8(v19 > 1, v20 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v20 + 1;
      long long v21 = &_swiftEmptyArrayStorage[10 * v20];
      v21[4] = v6;
      *((unsigned char *)v21 + 40) = v28;
      v21[6] = v27;
      *((unsigned char *)v21 + 56) = v26;
      v21[8] = v8;
      *((unsigned char *)v21 + 72) = v9;
      v21[10] = v10;
      v21[11] = v25;
      v21[12] = v11;
      v21[13] = v12;
      unint64_t v2 = v24;
    }
    while (v3 != v24);
  }
  return _swiftEmptyArrayStorage;
}

uint64_t sub_1EE3F0(uint64_t a1, uint64_t (*a2)(uint64_t, unsigned char *))
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = 1 << *(unsigned char *)(a1 + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v10 = 0;
  while (1)
  {
    if (v7)
    {
      unint64_t v11 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v12 = v11 | (v10 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v10 + 1;
    if (__OFADD__(v10, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v10;
    if (!v15)
    {
      int64_t v10 = v14 + 1;
      if (v14 + 1 >= v8) {
        return swift_release();
      }
      unint64_t v15 = *(void *)(v4 + 8 * v10);
      if (!v15)
      {
        int64_t v10 = v14 + 2;
        if (v14 + 2 >= v8) {
          return swift_release();
        }
        unint64_t v15 = *(void *)(v4 + 8 * v10);
        if (!v15)
        {
          int64_t v10 = v14 + 3;
          if (v14 + 3 >= v8) {
            return swift_release();
          }
          unint64_t v15 = *(void *)(v4 + 8 * v10);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v12 = __clz(__rbit64(v15)) + (v10 << 6);
LABEL_5:
    uint64_t v13 = *(void *)(*(void *)(a1 + 48) + 8 * v12);
    memcpy(v17, (const void *)(*(void *)(a1 + 56) + 384 * v12), 0x179uLL);
    uint64_t result = a2(v13, v17);
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8) {
    return swift_release();
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v10 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v10 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v10 >= v8) {
      return swift_release();
    }
    unint64_t v15 = *(void *)(v4 + 8 * v10);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1EE58C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000000021ADF0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0xD000000000000016 && a2 == 0x8000000000219B10)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1EE678(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6B6F6F6265 && a2 == 0xE500000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6F6F626F69647561 && a2 == 0xE90000000000006BLL)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1EE770(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x444965726F7473 && a2 == 0xE700000000000000;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x707954616964656DLL && a2 == 0xE900000000000065 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x4449736569726573 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x746E65746E6F63 && a2 == 0xE700000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x73656372756F73 && a2 == 0xE700000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0x6C616E6F69746172 && a2 == 0xE900000000000065)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

void *sub_1EEA0C(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void))
{
  return a1;
}

double sub_1EEA5C(_OWORD *a1)
{
  double result = 0.0;
  a1[20] = 0u;
  a1[21] = 0u;
  a1[18] = 0u;
  a1[19] = 0u;
  a1[16] = 0u;
  a1[17] = 0u;
  a1[14] = 0u;
  a1[15] = 0u;
  a1[12] = 0u;
  a1[13] = 0u;
  a1[10] = 0u;
  a1[11] = 0u;
  a1[8] = 0u;
  a1[9] = 0u;
  a1[6] = 0u;
  a1[7] = 0u;
  a1[4] = 0u;
  a1[5] = 0u;
  a1[2] = 0u;
  a1[3] = 0u;
  *a1 = 0u;
  a1[1] = 0u;
  *(_OWORD *)((char *)a1 + 347) = 0u;
  return result;
}

uint64_t sub_1EEA98(uint64_t a1, const void *a2)
{
  return sub_1ED794(a1, a2, *(uint64_t **)(v2 + 16));
}

unint64_t sub_1EEAA0()
{
  unint64_t result = qword_2748B8;
  if (!qword_2748B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2748B8);
  }
  return result;
}

unint64_t sub_1EEAF4()
{
  unint64_t result = qword_2748C0;
  if (!qword_2748C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2748C0);
  }
  return result;
}

uint64_t UserEncodingService.userEncodings()()
{
  v1[3] = v0;
  uint64_t v2 = sub_1FB110();
  v1[4] = v2;
  v1[5] = *(void *)(v2 - 8);
  v1[6] = swift_task_alloc();
  v1[7] = type metadata accessor for UserEncodingWork();
  v1[8] = swift_task_alloc();
  return _swift_task_switch(sub_1EEC3C, 0, 0);
}

uint64_t sub_1EEC3C()
{
  uint64_t v1 = (void *)v0[3];
  v0[9] = v1[2];
  sub_1FB100();
  sub_5D64(v1 + 3, v1[6]);
  uint64_t v2 = (void *)swift_task_alloc();
  v0[10] = v2;
  *uint64_t v2 = v0;
  v2[1] = sub_1EECF0;
  return sub_A2120(1);
}

uint64_t sub_1EECF0(uint64_t a1)
{
  uint64_t v4 = *(void **)v2;
  *(void *)(*(void *)v2 + 88) = v1;
  swift_task_dealloc();
  if (v1)
  {
    (*(void (**)(void, void))(v4[5] + 8))(v4[6], v4[4]);
    char v5 = sub_1EEF8C;
  }
  else
  {
    v4[12] = a1;
    char v5 = sub_1EEE2C;
  }
  return _swift_task_switch(v5, 0, 0);
}

uint64_t sub_1EEE2C()
{
  uint64_t v1 = v0[11];
  uint64_t v2 = v0[12];
  uint64_t v3 = v0[8];
  uint64_t v4 = v0[7];
  (*(void (**)(uint64_t, void, void))(v0[5] + 32))(v3, v0[6], v0[4]);
  *(void *)(v3 + *(int *)(v4 + 20)) = v2;
  sub_12124(&qword_2748D0);
  sub_1EEFFC();
  sub_1FB460();
  uint64_t v5 = v0[8];
  if (v1)
  {
    sub_1EF054(v5);
    swift_task_dealloc();
    swift_task_dealloc();
    char v6 = (uint64_t (*)(void))v0[1];
    return v6();
  }
  else
  {
    sub_1EF054(v5);
    uint64_t v8 = v0[2];
    swift_task_dealloc();
    swift_task_dealloc();
    char v9 = (uint64_t (*)(uint64_t))v0[1];
    return v9(v8);
  }
}

uint64_t sub_1EEF8C()
{
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

unint64_t sub_1EEFFC()
{
  unint64_t result = qword_2745B8;
  if (!qword_2745B8)
  {
    type metadata accessor for UserEncodingWork();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2745B8);
  }
  return result;
}

uint64_t sub_1EF054(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for UserEncodingWork();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_1EF0B0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  *uint64_t v1 = v0;
  v1[1] = sub_B06F4;
  return UserEncodingService.userEncodings()();
}

uint64_t dispatch thunk of UserEncodingServiceType.userEncodings()(uint64_t a1, uint64_t a2)
{
  uint64_t v7 = (uint64_t (*)(uint64_t, uint64_t))(*(void *)(a2 + 8) + **(int **)(a2 + 8));
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  *uint64_t v5 = v2;
  v5[1] = sub_57490;
  return v7(a1, a2);
}

uint64_t type metadata accessor for UserEncodingService()
{
  return self;
}

uint64_t method lookup function for UserEncodingService(uint64_t a1, uint64_t a2)
{
  return _swift_lookUpClassMethod(a1, a2, &nominal type descriptor for UserEncodingService);
}

uint64_t sub_1EF26C(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v18 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v14 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v14 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v14);
    ++v3;
    if (!v15)
    {
      int64_t v3 = v14 + 1;
      if (v14 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v15 = *(void *)(v4 + 8 * v3);
      if (!v15)
      {
        int64_t v3 = v14 + 2;
        if (v14 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v15 = *(void *)(v4 + 8 * v3);
        if (!v15)
        {
          int64_t v3 = v14 + 3;
          if (v14 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v15 = *(void *)(v4 + 8 * v3);
          if (!v15) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v15 - 1) & v15;
    unint64_t v10 = __clz(__rbit64(v15)) + (v3 << 6);
LABEL_5:
    unint64_t v11 = (Swift::Int *)(*(void *)(v2 + 48) + 16 * v10);
    Swift::Int v12 = *v11;
    Swift::Int v13 = v11[1];
    swift_bridgeObjectRetain();
    sub_7094(&v17, v12, v13);
    unint64_t result = swift_bridgeObjectRelease();
  }
  int64_t v16 = v14 + 4;
  if (v16 >= v8)
  {
LABEL_23:
    swift_release();
    return v18;
  }
  unint64_t v15 = *(void *)(v4 + 8 * v16);
  if (v15)
  {
    int64_t v3 = v16;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v16 + 1;
    if (__OFADD__(v16, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v15 = *(void *)(v4 + 8 * v3);
    ++v16;
    if (v15) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1EF3EC(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    unint64_t result = sub_73A4(&v14, *(void *)(*(void *)(v2 + 48) + 8 * v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1EF548(uint64_t result, uint64_t a2)
{
  uint64_t v2 = result;
  int64_t v3 = 0;
  uint64_t v15 = a2;
  uint64_t v4 = result + 56;
  uint64_t v5 = 1 << *(unsigned char *)(result + 32);
  uint64_t v6 = -1;
  if (v5 < 64) {
    uint64_t v6 = ~(-1 << v5);
  }
  unint64_t v7 = v6 & *(void *)(result + 56);
  int64_t v8 = (unint64_t)(v5 + 63) >> 6;
  while (1)
  {
    if (v7)
    {
      unint64_t v9 = __clz(__rbit64(v7));
      v7 &= v7 - 1;
      unint64_t v10 = v9 | (v3 << 6);
      goto LABEL_5;
    }
    int64_t v11 = v3 + 1;
    if (__OFADD__(v3, 1))
    {
      __break(1u);
      goto LABEL_25;
    }
    if (v11 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v11);
    ++v3;
    if (!v12)
    {
      int64_t v3 = v11 + 1;
      if (v11 + 1 >= v8) {
        goto LABEL_23;
      }
      unint64_t v12 = *(void *)(v4 + 8 * v3);
      if (!v12)
      {
        int64_t v3 = v11 + 2;
        if (v11 + 2 >= v8) {
          goto LABEL_23;
        }
        unint64_t v12 = *(void *)(v4 + 8 * v3);
        if (!v12)
        {
          int64_t v3 = v11 + 3;
          if (v11 + 3 >= v8) {
            goto LABEL_23;
          }
          unint64_t v12 = *(void *)(v4 + 8 * v3);
          if (!v12) {
            break;
          }
        }
      }
    }
LABEL_22:
    unint64_t v7 = (v12 - 1) & v12;
    unint64_t v10 = __clz(__rbit64(v12)) + (v3 << 6);
LABEL_5:
    unint64_t result = sub_8054(&v14, *(unsigned __int8 *)(*(void *)(v2 + 48) + v10));
  }
  int64_t v13 = v11 + 4;
  if (v13 >= v8)
  {
LABEL_23:
    swift_release();
    return v15;
  }
  unint64_t v12 = *(void *)(v4 + 8 * v13);
  if (v12)
  {
    int64_t v3 = v13;
    goto LABEL_22;
  }
  while (1)
  {
    int64_t v3 = v13 + 1;
    if (__OFADD__(v13, 1)) {
      break;
    }
    if (v3 >= v8) {
      goto LABEL_23;
    }
    unint64_t v12 = *(void *)(v4 + 8 * v3);
    ++v13;
    if (v12) {
      goto LABEL_22;
    }
  }
LABEL_25:
  __break(1u);
  return result;
}

uint64_t sub_1EF6A4(uint64_t a1)
{
  uint64_t v2 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2 - 8);
  uint64_t v5 = (char *)&v20 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v22 = 0x202020200A5BLL;
  unint64_t v23 = 0xE600000000000000;
  int64_t v6 = *(void *)(a1 + 16);
  unint64_t v7 = _swiftEmptyArrayStorage;
  if (v6)
  {
    long long v21 = _swiftEmptyArrayStorage;
    sub_46588(0, v6, 0);
    uint64_t v8 = a1 + ((*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));
    uint64_t v9 = *(void *)(v3 + 72);
    unint64_t v7 = v21;
    do
    {
      sub_13A950(v8, (uint64_t)v5);
      uint64_t v10 = CollectionRecommendation.clusteringDebugDescription.getter();
      uint64_t v12 = v11;
      sub_7B918((uint64_t)v5);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_46588(0, v7[2] + 1, 1);
        unint64_t v7 = v21;
      }
      unint64_t v14 = v7[2];
      unint64_t v13 = v7[3];
      if (v14 >= v13 >> 1)
      {
        sub_46588(v13 > 1, v14 + 1, 1);
        unint64_t v7 = v21;
      }
      uint64_t v7[2] = v14 + 1;
      uint64_t v15 = &v7[2 * v14];
      v15[4] = v10;
      v15[5] = v12;
      v8 += v9;
      --v6;
    }
    while (v6);
  }
  long long v21 = v7;
  sub_12124(&qword_26C6D8);
  sub_52CC0((unint64_t *)&qword_26D158, &qword_26C6D8);
  uint64_t v16 = sub_1FB7B0();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  v24._uint64_t countAndFlagsBits = v16;
  v24._object = v18;
  sub_1FB8F0(v24);
  swift_bridgeObjectRelease();
  v25._uint64_t countAndFlagsBits = 93;
  v25._object = (void *)0xE100000000000000;
  sub_1FB8F0(v25);
  return v22;
}

void *CollectionRecommendation.books.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v2);
  uint64_t v4 = (char *)&v20[-2] - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_12124(&qword_26D088);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v20[-2] - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v1, (uint64_t)v4);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      goto LABEL_2;
    case 2u:
      uint64_t v18 = sub_12124(&qword_26D090);
      memcpy(v20, &v4[*(int *)(v18 + 48)], 0x229uLL);
      sub_124B4(v20);
      swift_bridgeObjectRelease();
LABEL_2:
      (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
      sub_1FB3A0();
      (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
      unint64_t result = (void *)v20[0];
      break;
    case 9u:
      sub_7B974(*((void *)v4 + 2), *((void *)v4 + 3), *((void *)v4 + 4), *((void *)v4 + 5), *((void *)v4 + 6), *((void *)v4 + 7), *((void *)v4 + 8));
      unint64_t result = _swiftEmptyArrayStorage;
      break;
    default:
      uint64_t v10 = *(void *)v4;
      char v11 = v4[8];
      uint64_t v12 = *((void *)v4 + 2);
      char v13 = v4[24];
      uint64_t v14 = *((void *)v4 + 4);
      char v15 = v4[40];
      long long v19 = *((_OWORD *)v4 + 3);
      uint64_t v16 = *((void *)v4 + 8);
      uint64_t v17 = *((void *)v4 + 9);
      sub_12124(&qword_26D3B8);
      unint64_t result = (void *)swift_allocObject();
      *((_OWORD *)result + 1) = xmmword_1FD2A0;
      result[4] = v10;
      *((unsigned char *)result + 40) = v11;
      result[6] = v12;
      *((unsigned char *)result + 56) = v13;
      result[8] = v14;
      *((unsigned char *)result + 72) = v15;
      *((_OWORD *)result + 5) = v19;
      result[12] = v16;
      result[13] = v17;
      break;
  }
  return result;
}

double sub_1EFB9C(long double a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_12124(&qword_26D088);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v8);
  uint64_t v10 = (void *)((char *)v14 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0));
  sub_13A950(v2, (uint64_t)v10);
  switch(swift_getEnumCaseMultiPayload())
  {
    case 1u:
    case 3u:
    case 4u:
    case 5u:
    case 6u:
    case 7u:
    case 8u:
      goto LABEL_2;
    case 2u:
      uint64_t v12 = sub_12124(&qword_26D090);
      memcpy(v14, (char *)v10 + *(int *)(v12 + 48), 0x229uLL);
      sub_124B4(v14);
      swift_bridgeObjectRelease();
LABEL_2:
      (*(void (**)(char *, uint64_t *, uint64_t))(v5 + 32))(v7, v10, v4);
      double v11 = sub_1F47D0(a1);
      (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
      break;
    case 9u:
      double v11 = *((double *)v10 + 13);
      sub_7B974(v10[2], v10[3], v10[4], v10[5], v10[6], v10[7], v10[8]);
      break;
    default:
      double v11 = *((double *)v10 + 9);
      sub_54820(v10[4], *((unsigned char *)v10 + 40));
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      break;
  }
  return v11;
}

__n128 ClusterableBook.init(scoredBook:authorIDs:genreIDs:methodologies:bisacCodes:seriesMembership:)@<Q0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X8>)
{
  char v7 = *(unsigned char *)(a1 + 8);
  uint64_t v8 = *(void *)(a1 + 16);
  uint64_t v10 = *(void *)(a1 + 32);
  char v11 = *(unsigned char *)(a1 + 40);
  uint64_t v12 = *(void *)(a1 + 48);
  uint64_t v13 = *(void *)(a1 + 72);
  char v14 = *(unsigned char *)(a6 + 32);
  char v9 = *(unsigned char *)(a1 + 24);
  *(void *)a7 = *(void *)a1;
  *(unsigned char *)(a7 + 8) = v7;
  *(void *)(a7 + 16) = v8;
  *(unsigned char *)(a7 + 24) = v9;
  *(void *)(a7 + 32) = v10;
  *(unsigned char *)(a7 + 40) = v11;
  *(void *)(a7 + 48) = v12;
  *(_OWORD *)(a7 + 56) = *(_OWORD *)(a1 + 56);
  *(void *)(a7 + 72) = v13;
  *(void *)(a7 + 80) = a2;
  *(void *)(a7 + 88) = a3;
  *(void *)(a7 + 96) = a4;
  *(void *)(a7 + 104) = a5;
  __n128 result = *(__n128 *)a6;
  long long v16 = *(_OWORD *)(a6 + 16);
  *(_OWORD *)(a7 + 112) = *(_OWORD *)a6;
  *(_OWORD *)(a7 + 128) = v16;
  *(unsigned char *)(a7 + 144) = v14;
  return result;
}

uint64_t ClusteringOptions.MediaType.rawValue.getter()
{
  uint64_t v1 = 0x6F6F626F69647561;
  if (*v0 != 1) {
    uint64_t v1 = 0x646578696DLL;
  }
  if (*v0) {
    return v1;
  }
  else {
    return 0x6B6F6F6265;
  }
}

void *CollectionRecommendation.booksIDs.getter()
{
  uint64_t v0 = CollectionRecommendation.books.getter();
  int64_t v1 = v0[2];
  if (v1)
  {
    sub_46538(0, v1, 0);
    unint64_t v2 = _swiftEmptyArrayStorage[2];
    uint64_t v3 = 4;
    do
    {
      uint64_t v4 = v0[v3];
      unint64_t v5 = _swiftEmptyArrayStorage[3];
      if (v2 >= v5 >> 1) {
        sub_46538(v5 > 1, v2 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v2 + 1;
      _swiftEmptyArrayStorage[v2 + 4] = v4;
      v3 += 10;
      ++v2;
      --v1;
    }
    while (v1);
  }
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

void *CollectionRecommendation.genreIDs.getter()
{
  uint64_t v1 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 5)
  {
    uint64_t v4 = *(void *)&v3[*(int *)(sub_12124(&qword_26D998) + 48)];
    sub_12124(&qword_26D3C0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1FD2A0;
    *(void *)(v5 + 32) = v4;
    uint64_t v6 = sub_12124(&qword_26D088);
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
  }
  else
  {
    sub_7B918((uint64_t)v3);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v5;
}

void *CollectionRecommendation.seedBooks.getter()
{
  uint64_t v1 = v0;
  uint64_t v2 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v2);
  uint64_t v4 = &v9[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_13A950(v1, (uint64_t)v4);
  if (swift_getEnumCaseMultiPayload() == 2)
  {
    uint64_t v5 = sub_12124(&qword_26D090);
    memcpy(v9, &v4[*(int *)(v5 + 48)], sizeof(v9));
    swift_bridgeObjectRelease();
    sub_12124(&qword_26D3C8);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_1FD2A0;
    memcpy((void *)(v6 + 32), v9, 0x229uLL);
    uint64_t v7 = sub_12124(&qword_26D088);
    (*(void (**)(unsigned char *, uint64_t))(*(void *)(v7 - 8) + 8))(v4, v7);
  }
  else
  {
    sub_7B918((uint64_t)v4);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v6;
}

void *CollectionRecommendation.authorIDs.getter()
{
  uint64_t v1 = type metadata accessor for CollectionRecommendation(0);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_13A950(v0, (uint64_t)v3);
  if (swift_getEnumCaseMultiPayload() == 3)
  {
    uint64_t v4 = *(void *)&v3[*(int *)(sub_12124(&qword_26D998) + 48)];
    sub_12124(&qword_26D3C0);
    uint64_t v5 = swift_allocObject();
    *(_OWORD *)(v5 + 16) = xmmword_1FD2A0;
    *(void *)(v5 + 32) = v4;
    uint64_t v6 = sub_12124(&qword_26D088);
    (*(void (**)(char *, uint64_t))(*(void *)(v6 - 8) + 8))(v3, v6);
  }
  else
  {
    sub_7B918((uint64_t)v3);
    return _swiftEmptyArrayStorage;
  }
  return (void *)v5;
}

Swift::Int sub_1F0370()
{
  return sub_BD5F4((uint64_t)(&off_265590)[*v0]);
}

uint64_t ClusteringOptions.init(minBooksCount:maxBooksCount:booksInGenreAllowedGenres:optionsByCollectionRecommendationType:wildcardMaximumCount:overrideWildcardEnabledCollectionTypes:overrideWildcardMediaTypes:)@<X0>(uint64_t result@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, void *a8@<X8>)
{
  *a8 = result;
  a8[1] = a2;
  a8[2] = a4;
  a8[3] = a3;
  a8[4] = a5;
  a8[5] = a6;
  a8[6] = a7;
  return result;
}

uint64_t sub_1F0398()
{
  uint64_t v0 = sub_1FB430();
  sub_7D408(v0, qword_274990);
  sub_6DBC8(v0, (uint64_t)qword_274990);
  return sub_1FB420();
}

__n128 ClusterableBook.seriesMembership.getter@<Q0>(uint64_t a1@<X8>)
{
  char v2 = *(unsigned char *)(v1 + 144);
  __n128 result = *(__n128 *)(v1 + 112);
  long long v4 = *(_OWORD *)(v1 + 128);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 32) = v2;
  return result;
}

unint64_t sub_1F042C()
{
  unint64_t result = 0x6F426465726F6373;
  switch(*v0)
  {
    case 1:
      unint64_t result = 0x4449726F68747561;
      break;
    case 2:
      unint64_t result = 0x73444965726E6567;
      break;
    case 3:
      unint64_t result = 0x6C6F646F6874656DLL;
      break;
    case 4:
      unint64_t result = 0x646F436361736962;
      break;
    case 5:
      unint64_t result = 0xD000000000000010;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F050C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F8770(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F0534(uint64_t a1)
{
  unint64_t v2 = sub_1F4A78();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F0570(uint64_t a1)
{
  unint64_t v2 = sub_1F4A78();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClusterableBook.encode(to:)(void *a1)
{
  uint64_t v3 = sub_12124(&qword_2749A8);
  uint64_t v31 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v16 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = *v1;
  int v29 = *((unsigned __int8 *)v1 + 8);
  uint64_t v7 = v1[2];
  char v8 = *((unsigned char *)v1 + 24);
  uint64_t v28 = v1[4];
  int v27 = *((unsigned __int8 *)v1 + 40);
  long long v26 = *((_OWORD *)v1 + 3);
  uint64_t v9 = v1[8];
  uint64_t v10 = v1[9];
  uint64_t v24 = v1[10];
  uint64_t v25 = v9;
  uint64_t v23 = v1[11];
  uint64_t v22 = v1[12];
  uint64_t v21 = v1[13];
  uint64_t v16 = v1[14];
  uint64_t v17 = v1[15];
  uint64_t v20 = v1[16];
  uint64_t v19 = v1[17];
  int v18 = *((unsigned __int8 *)v1 + 144);
  sub_5D64(a1, a1[3]);
  sub_1F4A78();
  sub_1FC870();
  uint64_t v33 = v6;
  LOBYTE(v34) = v29;
  uint64_t v35 = v7;
  LOBYTE(v36) = v8;
  uint64_t v37 = v28;
  char v38 = v27;
  long long v39 = v26;
  uint64_t v40 = v25;
  uint64_t v41 = v10;
  char v32 = 0;
  sub_14D76C();
  uint64_t v11 = v30;
  sub_1FC530();
  if (v11) {
    return (*(uint64_t (**)(char *, uint64_t))(v31 + 8))(v5, v3);
  }
  uint64_t v13 = v23;
  uint64_t v14 = v22;
  uint64_t v15 = v31;
  uint64_t v33 = v24;
  char v32 = 1;
  sub_12124(&qword_26EA88);
  sub_2F0D8(&qword_26EA90, &qword_26EA88);
  sub_1FC530();
  uint64_t v33 = v13;
  char v32 = 2;
  sub_1FC530();
  uint64_t v33 = v14;
  char v32 = 3;
  sub_12124(&qword_270DC8);
  sub_1F4ACC(&qword_270DD0, &qword_270DC8, (void (*)(void))sub_14DB98);
  sub_1FC530();
  uint64_t v33 = v21;
  char v32 = 4;
  sub_12124(&qword_2749B8);
  sub_2F0D8(&qword_2749C0, &qword_2749B8);
  sub_1FC530();
  uint64_t v33 = v16;
  uint64_t v34 = v17;
  uint64_t v35 = v20;
  uint64_t v36 = v19;
  LOBYTE(v37) = v18;
  char v32 = 5;
  sub_ACFCC();
  sub_1FC4A0();
  return (*(uint64_t (**)(char *, uint64_t))(v15 + 8))(v5, v3);
}

uint64_t ClusterableBook.init(from:)@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v48 = a2;
  uint64_t v49 = sub_12124(&qword_2749C8);
  uint64_t v4 = *(void *)(v49 - 8);
  __chkstk_darwin(v49);
  uint64_t v6 = (char *)&v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1F4A78();
  uint64_t v7 = v6;
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  uint64_t v46 = a1;
  uint64_t v47 = v4;
  LOBYTE(v50) = 0;
  sub_14DC94();
  uint64_t v8 = v49;
  uint64_t v9 = v7;
  sub_1FC3F0();
  int v41 = v61;
  uint64_t v39 = v62;
  uint64_t v40 = v60;
  uint64_t v10 = v64;
  int v11 = v65;
  uint64_t v12 = v66;
  uint64_t v38 = v67;
  uint64_t v13 = v68;
  uint64_t v14 = v69;
  int v37 = v63;
  unsigned __int8 v83 = v63;
  sub_12124(&qword_26EA88);
  LOBYTE(v50) = 1;
  uint64_t v45 = v10;
  sub_5480C(v10, v11);
  sub_2F0D8(&qword_26EAC0, &qword_26EA88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v44 = v9;
  sub_1FC3F0();
  int v35 = v11;
  uint64_t v33 = v13;
  uint64_t v34 = v12;
  uint64_t v15 = v60;
  LOBYTE(v50) = 2;
  swift_bridgeObjectRetain();
  uint64_t v32 = 0;
  sub_1FC3F0();
  uint64_t v36 = v15;
  uint64_t v16 = v60;
  sub_12124(&qword_270DC8);
  LOBYTE(v50) = 3;
  sub_1F4ACC(&qword_270E80, &qword_270DC8, (void (*)(void))sub_14DDCC);
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v43 = v16;
  uint64_t v17 = v60;
  sub_12124(&qword_2749B8);
  LOBYTE(v50) = 4;
  sub_2F0D8(&qword_2749D0, &qword_2749B8);
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v42 = v17;
  uint64_t v18 = v60;
  char v79 = 5;
  sub_AD138();
  swift_bridgeObjectRetain();
  sub_1FC360();
  uint64_t v19 = v33;
  uint64_t v20 = v45;
  (*(void (**)(char *, uint64_t))(v47 + 8))(v44, v8);
  uint64_t v47 = *((void *)&v80 + 1);
  uint64_t v32 = *((void *)&v81 + 1);
  uint64_t v44 = (char *)v81;
  HIDWORD(v31) = v82;
  uint64_t v49 = v80;
  *(void *)&long long v50 = v40;
  BYTE8(v50) = v41;
  *(void *)&long long v51 = v39;
  BYTE8(v51) = v37;
  *(void *)&long long v52 = v20;
  BYTE8(v52) = v35;
  uint64_t v21 = v34;
  *(void *)&long long v53 = v34;
  *((void *)&v53 + 1) = v38;
  *(void *)&long long v54 = v19;
  *((void *)&v54 + 1) = v14;
  uint64_t v22 = v18;
  uint64_t v24 = v42;
  uint64_t v23 = v43;
  *(void *)&long long v55 = v36;
  *((void *)&v55 + 1) = v43;
  *(void *)&long long v56 = v42;
  *((void *)&v56 + 1) = v18;
  long long v57 = v80;
  long long v58 = v81;
  unsigned __int8 v59 = v82;
  sub_54834((uint64_t)&v50);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  LOBYTE(v18) = v35;
  sub_54820(v20, v35);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  long long v25 = v57;
  uint64_t v26 = v48;
  *(_OWORD *)(v48 + 96) = v56;
  *(_OWORD *)(v26 + 112) = v25;
  *(_OWORD *)(v26 + 128) = v58;
  *(unsigned char *)(v26 + 144) = v59;
  long long v27 = v53;
  *(_OWORD *)(v26 + 32) = v52;
  *(_OWORD *)(v26 + 48) = v27;
  long long v28 = v55;
  *(_OWORD *)(v26 + 64) = v54;
  *(_OWORD *)(v26 + 80) = v28;
  long long v29 = v51;
  *(_OWORD *)uint64_t v26 = v50;
  *(_OWORD *)(v26 + 16) = v29;
  sub_1264C((uint64_t)v46);
  uint64_t v60 = v40;
  unsigned __int8 v61 = v41;
  uint64_t v62 = v39;
  unsigned __int8 v63 = v83;
  uint64_t v64 = v45;
  unsigned __int8 v65 = v18;
  uint64_t v66 = v21;
  uint64_t v67 = v38;
  uint64_t v68 = v19;
  uint64_t v69 = v14;
  uint64_t v70 = v36;
  uint64_t v71 = v23;
  uint64_t v72 = v24;
  uint64_t v73 = v22;
  uint64_t v74 = v49;
  uint64_t v75 = v47;
  char v76 = v44;
  uint64_t v77 = v32;
  char v78 = BYTE4(v31);
  return sub_7A018((uint64_t)&v60);
}

uint64_t sub_1F1248@<X0>(void *a1@<X0>, uint64_t a2@<X8>)
{
  return ClusterableBook.init(from:)(a1, a2);
}

uint64_t sub_1F1260(void *a1)
{
  return ClusterableBook.encode(to:)(a1);
}

BooksPersonalization::ClusteringOptions::MediaType_optional __swiftcall ClusteringOptions.MediaType.init(rawValue:)(Swift::String rawValue)
{
  object = rawValue._object;
  v8._uint64_t countAndFlagsBits = rawValue._countAndFlagsBits;
  uint64_t v3 = v1;
  v4._rawValue = &off_2576D0;
  v8._object = object;
  unint64_t v5 = sub_1FC2D0(v4, v8);
  result.value = swift_bridgeObjectRelease();
  char v7 = 3;
  if (v5 < 3) {
    char v7 = v5;
  }
  *uint64_t v3 = v7;
  return result;
}

_UNKNOWN **static ClusteringOptions.MediaType.allCases.getter()
{
  return &off_257738;
}

unint64_t sub_1F12E0(char a1)
{
  unint64_t result = 0x736B6F6F426E696DLL;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x736B6F6F4278616DLL;
      break;
    case 2:
      unint64_t result = 0xD000000000000025;
      break;
    case 3:
      unint64_t result = 0xD000000000000019;
      break;
    case 4:
      unint64_t result = 0xD000000000000014;
      break;
    case 5:
      unint64_t result = 0xD000000000000026;
      break;
    case 6:
      unint64_t result = 0xD00000000000001ALL;
      break;
    default:
      return result;
  }
  return result;
}

BooksPersonalization::ClusteringOptions::MediaType_optional sub_1F13DC(Swift::String *a1)
{
  return ClusteringOptions.MediaType.init(rawValue:)(*a1);
}

void sub_1F13E8(uint64_t *a1@<X8>)
{
  int v2 = *v1;
  unint64_t v3 = 0xE500000000000000;
  unint64_t v4 = 0xE90000000000006BLL;
  uint64_t v5 = 0x6F6F626F69647561;
  if (v2 != 1)
  {
    uint64_t v5 = 0x646578696DLL;
    unint64_t v4 = 0xE500000000000000;
  }
  BOOL v6 = v2 == 0;
  if (*v1) {
    uint64_t v7 = v5;
  }
  else {
    uint64_t v7 = 0x6B6F6F6265;
  }
  if (!v6) {
    unint64_t v3 = v4;
  }
  *a1 = v7;
  a1[1] = v3;
}

uint64_t sub_1F1444()
{
  return sub_1FBA60();
}

uint64_t sub_1F14A4()
{
  return sub_1FBA40();
}

void sub_1F14F4(void *a1@<X8>)
{
  *a1 = &off_257760;
}

uint64_t sub_1F1504(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1D95E8(*a1, *a2);
}

Swift::Int sub_1F1510()
{
  return sub_1FC830();
}

uint64_t sub_1F15B0()
{
  sub_1FB8C0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_1F163C()
{
  return sub_1FC830();
}

unint64_t sub_1F16D8()
{
  return sub_1F12E0(*v0);
}

uint64_t sub_1F16E0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F8A30(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F1708(uint64_t a1)
{
  unint64_t v2 = sub_1F4B38();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F1744(uint64_t a1)
{
  unint64_t v2 = sub_1F4B38();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t ClusteringOptions.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_2749D8);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v18 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = v1[1];
  uint64_t v23 = v1[2];
  uint64_t v24 = v8;
  uint64_t v9 = v1[3];
  uint64_t v21 = v1[4];
  uint64_t v22 = v9;
  uint64_t v10 = v1[6];
  uint64_t v20 = v1[5];
  uint64_t v11 = a1[3];
  uint64_t v12 = a1;
  uint64_t v14 = v13;
  sub_5D64(v12, v11);
  sub_1F4B38();
  sub_1FC870();
  LOBYTE(v26) = 0;
  sub_1FC520();
  if (!v2)
  {
    uint64_t v15 = v22;
    uint64_t v16 = v23;
    uint64_t v19 = v10;
    LOBYTE(v26) = 1;
    sub_1FC520();
    uint64_t v26 = v16;
    char v25 = 2;
    sub_12124(&qword_270C40);
    sub_13C4AC(&qword_270C48, (void (*)(void))sub_8CAF4, (void (*)(void))sub_13B744);
    sub_1FC530();
    uint64_t v26 = v15;
    char v25 = 3;
    sub_12124(&qword_26EA88);
    sub_2F0D8(&qword_26EA90, &qword_26EA88);
    sub_1FC530();
    LOBYTE(v26) = 4;
    sub_1FC520();
    uint64_t v26 = v20;
    char v25 = 5;
    sub_12124(&qword_2749E8);
    sub_1F4ACC(&qword_2749F0, &qword_2749E8, (void (*)(void))sub_8CAF4);
    sub_1FC4A0();
    uint64_t v26 = v19;
    char v25 = 6;
    sub_12124(&qword_270CC0);
    sub_1F4ACC(&qword_270CC8, &qword_270CC0, (void (*)(void))sub_8CB48);
    sub_1FC4A0();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v14);
}

uint64_t ClusteringOptions.init(from:)@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_2749F8);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1F4B38();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  LOBYTE(v27) = 0;
  uint64_t v9 = sub_1FC3E0();
  LOBYTE(v27) = 1;
  uint64_t v10 = sub_1FC3E0();
  sub_12124(&qword_270C40);
  char v26 = 2;
  sub_13C4AC(&qword_270C90, (void (*)(void))sub_8C8F8, (void (*)(void))sub_13C534);
  sub_1FC3F0();
  uint64_t v24 = v10;
  uint64_t v11 = v27;
  sub_12124(&qword_26EA88);
  char v26 = 3;
  sub_2F0D8(&qword_26EAC0, &qword_26EA88);
  uint64_t v25 = v11;
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v12 = v27;
  LOBYTE(v27) = 4;
  uint64_t v23 = v12;
  swift_bridgeObjectRetain();
  uint64_t v22 = sub_1FC3E0();
  sub_12124(&qword_2749E8);
  char v26 = 5;
  sub_1F4ACC(&qword_274A00, &qword_2749E8, (void (*)(void))sub_8C8F8);
  sub_1FC360();
  uint64_t v14 = v27;
  sub_12124(&qword_270CC0);
  char v26 = 6;
  sub_1F4ACC(&qword_270CD8, &qword_270CC0, (void (*)(void))sub_8C9CC);
  uint64_t v21 = v14;
  swift_bridgeObjectRetain();
  sub_1FC360();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v15 = v27;
  swift_bridgeObjectRetain();
  uint64_t v16 = v24;
  uint64_t v17 = v25;
  *a2 = v9;
  a2[1] = v16;
  uint64_t v18 = v22;
  uint64_t v19 = v23;
  a2[2] = v17;
  a2[3] = v19;
  uint64_t v20 = v21;
  a2[4] = v18;
  a2[5] = v20;
  a2[6] = v15;
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_1F2070@<X0>(void *a1@<X0>, uint64_t *a2@<X8>)
{
  return ClusteringOptions.init(from:)(a1, a2);
}

uint64_t sub_1F2088(void *a1)
{
  return ClusteringOptions.encode(to:)(a1);
}

uint64_t sub_1F20A0()
{
  if (*v0) {
    return 0x64657463656C6573;
  }
  else {
    return 0x6E656D6D6F636572;
  }
}

uint64_t sub_1F20F4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F8D20(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F211C(uint64_t a1)
{
  unint64_t v2 = sub_1F4B8C();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F2158(uint64_t a1)
{
  unint64_t v2 = sub_1F4B8C();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BookClusteringResult.encode(to:)(void *a1)
{
  uint64_t v4 = sub_12124(&qword_274A08);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v1;
  uint64_t v10 = v1[1];
  sub_5D64(a1, a1[3]);
  sub_1F4B8C();
  sub_1FC870();
  uint64_t v12 = v8;
  char v11 = 0;
  sub_12124(&qword_270EA0);
  sub_1F4BE0(&qword_270EA8, &qword_270EB0);
  sub_1FC530();
  if (!v2)
  {
    uint64_t v12 = v10;
    char v11 = 1;
    sub_12124(&qword_26EA88);
    sub_2F0D8(&qword_26EA90, &qword_26EA88);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BookClusteringResult.init(from:)@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  uint64_t v5 = sub_12124(&qword_274A18);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_5D64(a1, a1[3]);
  sub_1F4B8C();
  sub_1FC850();
  if (v2) {
    return sub_1264C((uint64_t)a1);
  }
  sub_12124(&qword_270EA0);
  char v13 = 0;
  sub_1F4BE0(&qword_270EC0, &qword_270EC8);
  sub_1FC3F0();
  uint64_t v9 = v14;
  sub_12124(&qword_26EA88);
  char v13 = 1;
  sub_2F0D8(&qword_26EAC0, &qword_26EA88);
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  uint64_t v10 = v14;
  *a2 = v9;
  a2[1] = v10;
  swift_bridgeObjectRetain();
  sub_1264C((uint64_t)a1);
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

unint64_t sub_1F2634(char a1)
{
  unint64_t result = 0xD000000000000010;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x6B6F6F4264656573;
      break;
    case 2:
      unint64_t result = 0x72756769666E6F63;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x54644965726E6567;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_1F2704@<X0>(void *a1@<X0>, void *a2@<X8>)
{
  return BookClusteringResult.init(from:)(a1, a2);
}

uint64_t sub_1F271C(void *a1)
{
  return BookClusteringResult.encode(to:)(a1);
}

unint64_t sub_1F2734()
{
  return sub_1F2634(*v0);
}

uint64_t sub_1F273C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, unsigned char *a3@<X8>)
{
  uint64_t result = sub_1F8E5C(a1, a2);
  *a3 = result;
  return result;
}

uint64_t sub_1F2764(uint64_t a1)
{
  unint64_t v2 = sub_1F4CA4();

  return CodingKey.description.getter(a1, v2);
}

uint64_t sub_1F27A0(uint64_t a1)
{
  unint64_t v2 = sub_1F4CA4();

  return CodingKey.debugDescription.getter(a1, v2);
}

uint64_t BookClusteringRequest.encode(to:)(void *a1)
{
  unint64_t v2 = v1;
  uint64_t v4 = sub_12124(&qword_274A20);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v14 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = *v2;
  uint64_t v21 = v2[1];
  uint64_t v9 = v2[142];
  uint64_t v18 = v2[143];
  uint64_t v19 = v9;
  long long v20 = *((_OWORD *)v2 + 72);
  uint64_t v10 = v2[146];
  uint64_t v16 = v2[147];
  uint64_t v17 = v10;
  uint64_t v11 = v2[148];
  uint64_t v14 = v2[149];
  uint64_t v15 = v11;
  sub_5D64(a1, a1[3]);
  sub_1F4CA4();
  sub_1FC870();
  *(void *)&v23[0] = v8;
  char v24 = 0;
  sub_12124(&qword_26D960);
  sub_1F4ACC(&qword_274A30, &qword_26D960, (void (*)(void))sub_1F4CF8);
  uint64_t v12 = v22;
  sub_1FC530();
  if (!v12)
  {
    *(void *)&v23[0] = v21;
    char v24 = 1;
    sub_12124(&qword_26EC48);
    sub_1F4ACC(&qword_26EC50, &qword_26EC48, (void (*)(void))sub_AFB24);
    sub_1FC530();
    memcpy(v23, v2 + 2, sizeof(v23));
    char v24 = 2;
    sub_1F4D4C();
    sub_1FC530();
    *(void *)&v23[0] = v19;
    *((void *)&v23[0] + 1) = v18;
    v23[1] = v20;
    *(void *)&void v23[2] = v17;
    *((void *)&v23[2] + 1) = v16;
    *(void *)&v23[3] = v15;
    char v24 = 3;
    sub_13B6F0();
    sub_1FC530();
    *(void *)&v23[0] = v14;
    char v24 = 4;
    sub_12124(&qword_274A48);
    sub_1F4E48(&qword_274A50, (void (*)(void))sub_7F82C);
    sub_1FC530();
  }
  return (*(uint64_t (**)(char *, uint64_t))(v5 + 8))(v7, v4);
}

uint64_t BookClusteringRequest.init(from:)(uint64_t a1)
{
  unint64_t v2 = (void *)__chkstk_darwin(a1);
  uint64_t v4 = v3;
  uint64_t v5 = sub_12124(&qword_274A58);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v25 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = v2[3];
  uint64_t v36 = v2;
  sub_5D64(v2, v9);
  sub_1F4CA4();
  sub_1FC850();
  if (v1) {
    return sub_1264C((uint64_t)v36);
  }
  uint64_t v34 = v4;
  uint64_t v35 = v6;
  sub_12124(&qword_26D960);
  LOBYTE(v37[0]) = 0;
  sub_1F4ACC(&qword_274A60, &qword_26D960, (void (*)(void))sub_1F4DA0);
  uint64_t v10 = v5;
  sub_1FC3F0();
  uint64_t v11 = v38;
  sub_12124(&qword_26EC48);
  LOBYTE(v37[0]) = 1;
  sub_1F4ACC(&qword_26EC68, &qword_26EC48, (void (*)(void))sub_AFB78);
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v12 = v35;
  uint64_t v31 = v11;
  uint64_t v13 = v38;
  v44[1143] = 2;
  sub_1F4DF4();
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  uint64_t v30 = v13;
  memcpy(v42, v43, sizeof(v42));
  memcpy(v44, v43, 0x460uLL);
  LOBYTE(v37[0]) = 3;
  sub_A1310((uint64_t)v42);
  sub_13C458();
  sub_1FC3F0();
  uint64_t v27 = v39;
  uint64_t v28 = v38;
  uint64_t v14 = v40[0];
  uint64_t v26 = v40[2];
  uint64_t v32 = v40[3];
  uint64_t v33 = v40[1];
  uint64_t v15 = v40[4];
  sub_12124(&qword_274A48);
  v44[1142] = 4;
  sub_1F4E48(&qword_274A78, (void (*)(void))sub_7F5A8);
  uint64_t v29 = v14;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = v15;
  swift_bridgeObjectRetain();
  sub_1FC3F0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v8, v10);
  uint64_t v35 = v41;
  uint64_t v17 = v30;
  uint64_t v18 = v31;
  v37[0] = v31;
  v37[1] = v30;
  memcpy(&v37[2], v42, 0x460uLL);
  uint64_t v19 = v29;
  v37[142] = v28;
  v37[143] = v27;
  uint64_t v21 = v32;
  uint64_t v20 = v33;
  v37[144] = v29;
  v37[145] = v33;
  v37[146] = v26;
  v37[147] = v32;
  uint64_t v22 = v16;
  v37[148] = v16;
  uint64_t v23 = v41;
  v37[149] = v41;
  sub_1F4EC4((uint64_t)v37);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_11D3C((uint64_t)v42);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  memcpy(v34, v37, 0x4B0uLL);
  sub_1264C((uint64_t)v36);
  uint64_t v38 = v18;
  uint64_t v39 = v17;
  memcpy(v40, v44, 0x460uLL);
  v40[140] = v28;
  v40[141] = v27;
  v40[142] = v19;
  v40[143] = v20;
  v40[144] = v26;
  v40[145] = v21;
  v40[146] = v22;
  v40[147] = v23;
  return sub_1F51E4((uint64_t)&v38);
}

uint64_t sub_1F3204(uint64_t a1)
{
  return BookClusteringRequest.init(from:)(a1);
}

uint64_t sub_1F321C(void *a1)
{
  return BookClusteringRequest.encode(to:)(a1);
}

void sub_1F3234(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v204 = a2;
  uint64_t v3 = type metadata accessor for CollectionRecommendation(0);
  uint64_t v187 = *(void *)(v3 - 8);
  __chkstk_darwin(v3 - 8);
  uint64_t v188 = (char *)&v186 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void **)a1;
  uint64_t v6 = *(void **)(a1 + 8);
  memcpy(v239, (const void *)(a1 + 104), 0x16BuLL);
  uint64_t v7 = *(NSObject **)(a1 + 536);
  double v8 = *(double *)(a1 + 544);
  uint64_t v206 = *(void *)(a1 + 552);
  os_log_t v207 = v7;
  uint64_t v9 = *(void *)(a1 + 560);
  uint64_t v213 = *(void *)(a1 + 568);
  uint64_t v10 = *(void *)(a1 + 584);
  uint64_t v202 = *(void *)(a1 + 592);
  uint64_t v203 = v10;
  uint64_t v11 = *(void *)(a1 + 600);
  uint64_t v205 = *(void **)(a1 + 608);
  uint64_t v196 = *(double **)(a1 + 616);
  double v12 = *(double *)(a1 + 624);
  uint64_t v13 = *(void *)(a1 + 632);
  uint64_t v200 = v9;
  uint64_t v201 = v13;
  long long v14 = *(_OWORD *)(a1 + 1152);
  long long v235 = *(_OWORD *)(a1 + 1136);
  long long v236 = v14;
  long long v237 = *(_OWORD *)(a1 + 1168);
  uint64_t v238 = *(void *)(a1 + 1184);
  uint64_t v194 = *(void *)(a1 + 1192);
  uint64_t v216 = &v235;
  sub_6D988((uint64_t)&v235);
  sub_6D9D8();
  uint64_t v214 = sub_1FB700();
  uint64_t v193 = 0;
  uint64_t v198 = *((void *)&v235 + 1);
  uint64_t v199 = v235;
  uint64_t v15 = *((void *)&v236 + 1);
  uint64_t v16 = *((void *)&v237 + 1);
  uint64_t v195 = v237;
  uint64_t v209 = v238;
  swift_bridgeObjectRetain();
  uint64_t v211 = v15;
  swift_bridgeObjectRetain();
  uint64_t v210 = v16;
  swift_bridgeObjectRetain();
  sub_6DA2C((uint64_t)&v235);
  v230[0] = _swiftEmptySetSingleton;
  uint64_t v17 = v6[2];
  uint64_t v212 = v6;
  uint64_t v197 = v11;
  if (v17)
  {
    uint64_t v18 = v6 + 4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    memcpy(v220, v6 + 4, 0x229uLL);
    uint64_t v19 = &v220[10];
    sub_12588((uint64_t)&v220[10], (uint64_t)v221);
    if (sub_125F0((uint64_t)v221) == 1) {
      goto LABEL_61;
    }
    uint64_t v20 = off_252000;
    uint64_t v21 = 1;
    uint64_t v208 = v5;
    uint64_t v192 = v6 + 4;
    uint64_t v215 = &v220[10];
    while (1)
    {
      uint64_t v22 = v20[287];
      if (!v22) {
        goto LABEL_59;
      }
      uint64_t v23 = &byte_252908;
      while (2)
      {
        int v24 = *v23++;
        switch(v24)
        {
          case 1:
            if (v223 == 255) {
              goto LABEL_7;
            }
            goto LABEL_22;
          case 2:
          case 6:
          case 10:
          case 11:
          case 12:
          case 13:
          case 14:
          case 15:
          case 16:
          case 17:
            goto LABEL_7;
          case 3:
            if ((v224 & 1) == 0) {
              goto LABEL_22;
            }
            goto LABEL_7;
          case 4:
            if ((v225 & 1) == 0) {
              goto LABEL_22;
            }
            goto LABEL_7;
          case 5:
            if ((v226 & 1) == 0) {
              goto LABEL_22;
            }
            goto LABEL_7;
          case 7:
            if ((v227 & 1) == 0) {
              goto LABEL_22;
            }
            goto LABEL_7;
          case 8:
            if ((v228 & 1) == 0) {
              goto LABEL_22;
            }
            goto LABEL_7;
          case 9:
            if ((v229 & 1) == 0) {
              goto LABEL_22;
            }
            goto LABEL_7;
          default:
            if (v222)
            {
LABEL_7:
              uint64_t v22 = (ProtocolDescriptor *)((char *)v22 - 1);
              if (!v22) {
                goto LABEL_59;
              }
              continue;
            }
LABEL_22:
            if (LOBYTE(v220[4]) == 2) {
              goto LABEL_59;
            }
            long long v25 = v220[3];
            Swift::UInt64 v26 = *((void *)&v220[4] + 1);
            char v27 = v220[5];
            uint64_t v28 = v220[4] & 1;
            long long v231 = v220[3];
            char v232 = v220[4] & 1;
            uint64_t v233 = *((void *)&v220[4] + 1);
            char v234 = v220[5] & 1;
            sub_12384(v220);
            sub_8918((uint64_t)v217, (Swift::Int)&v231);
            if (v27)
            {
              sub_124B4(v220);
              uint64_t v6 = v212;
              uint64_t v5 = v208;
              goto LABEL_58;
            }
            uint64_t v29 = (void *)v230[0];
            sub_1FC7E0();
            sub_1FC7F0(v25);
            sub_1FC820(v26);
            sub_1FC800(v28);
            sub_1FC800(1u);
            sub_1FC820(*((Swift::UInt64 *)&v25 + 1));
            Swift::Int v30 = sub_1FC830();
            uint64_t v31 = -1 << *((unsigned char *)v29 + 32);
            unint64_t v32 = v30 & ~v31;
            if ((*(void *)((char *)v29 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v32))
            {
              uint64_t v33 = ~v31;
              do
              {
                uint64_t v34 = v29[6] + 40 * v32;
                BOOL v35 = *(void *)v34 == (void)v25 && *(void *)(v34 + 8) == v26;
                if (v35
                  && (((v28 != 0) ^ *(unsigned __int8 *)(v34 + 16)) & 1) == 0
                  && (*(unsigned char *)(v34 + 32) & 1) == 0
                  && *(void *)(v34 + 24) == *((void *)&v25 + 1))
                {
                  goto LABEL_57;
                }
                unint64_t v32 = (v32 + 1) & v33;
              }
              while (((*(void *)((char *)v29 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v32) & 1) != 0);
            }
            int isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
            Swift::String v219 = v29;
            if (v29[3] <= v29[2])
            {
              if (isUniquelyReferenced_nonNull_native) {
                sub_B5B8();
              }
              else {
                sub_110AC();
              }
              uint64_t v29 = v219;
              sub_1FC7E0();
              sub_1FC7F0(v25);
              sub_1FC820(v26);
              sub_1FC800(v28);
              sub_1FC800(1u);
              sub_1FC820(*((Swift::UInt64 *)&v25 + 1));
              Swift::Int v37 = sub_1FC830();
              uint64_t v38 = -1 << *((unsigned char *)v29 + 32);
              unint64_t v32 = v37 & ~v38;
              if (((*(void *)((char *)v29 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v32) & 1) == 0) {
                goto LABEL_55;
              }
              uint64_t v39 = ~v38;
              while (1)
              {
                uint64_t v40 = v29[6] + 40 * v32;
                BOOL v41 = *(void *)v40 == (void)v25 && *(void *)(v40 + 8) == v26;
                if (v41
                  && (((v28 != 0) ^ *(unsigned __int8 *)(v40 + 16)) & 1) == 0
                  && (*(unsigned char *)(v40 + 32) & 1) == 0
                  && *(void *)(v40 + 24) == *((void *)&v25 + 1))
                {
                  break;
                }
                unint64_t v32 = (v32 + 1) & v39;
                if (((*(void *)((char *)v29 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) >> v32) & 1) == 0) {
                  goto LABEL_55;
                }
              }
LABEL_172:
              sub_1FC760();
              __break(1u);
              JUMPOUT(0x1F4770);
            }
            if ((isUniquelyReferenced_nonNull_native & 1) == 0)
            {
              sub_E6DC();
              uint64_t v29 = v219;
            }
LABEL_55:
            *(void *)((char *)v29 + ((v32 >> 3) & 0xFFFFFFFFFFFFFF8) + 56) |= 1 << v32;
            uint64_t v42 = v29[6] + 40 * v32;
            *(void *)uint64_t v42 = v25;
            *(void *)(v42 + 8) = v26;
            *(unsigned char *)(v42 + 16) = v28;
            *(void *)(v42 + 24) = *((void *)&v25 + 1);
            *(unsigned char *)(v42 + 32) = 0;
            uint64_t v43 = v29[2];
            BOOL v44 = __OFADD__(v43, 1);
            uint64_t v45 = v43 + 1;
            if (v44)
            {
              __break(1u);
              goto LABEL_172;
            }
            v29[2] = v45;
            v230[0] = v29;
            swift_bridgeObjectRelease();
LABEL_57:
            sub_124B4(v220);
            uint64_t v6 = v212;
            uint64_t v5 = v208;
            uint64_t v18 = v192;
LABEL_58:
            uint64_t v19 = v215;
            uint64_t v20 = off_252000;
LABEL_59:
            if (v21 == v17)
            {
LABEL_62:
              swift_bridgeObjectRelease();
              uint64_t v192 = (void *)v230[0];
              goto LABEL_64;
            }
            memcpy(v220, &v18[70 * v21++], 0x229uLL);
            sub_12588((uint64_t)v19, (uint64_t)v221);
            if (sub_125F0((uint64_t)v221) == 1)
            {
LABEL_61:
              __break(1u);
              goto LABEL_62;
            }
            break;
        }
        break;
      }
    }
  }
  swift_bridgeObjectRetain();
  uint64_t v192 = _swiftEmptySetSingleton;
LABEL_64:
  memcpy(v230, v239, 0x16BuLL);
  sub_8CFA4((uint64_t)v239);
  uint64_t v46 = (long long *)sub_1F8538((uint64_t)v5, v230);
  sub_8D5A4((uint64_t)v239);
  Swift::String v219 = _swiftEmptySetSingleton;
  uint64_t v47 = v214;
  if (!*(void *)(v214 + 16))
  {
    int v49 = 0;
LABEL_85:
    int v53 = 0;
LABEL_86:
    os_log_t v62 = v207;
    goto LABEL_87;
  }
  unint64_t v48 = sub_4C7F4(0);
  int v49 = 0;
  if (v50)
  {
    int v49 = 0;
    uint64_t v51 = *(void *)(v47 + 56) + 24 * v48;
    if ((*(unsigned char *)(v51 + 8) & 1) == 0 && *(uint64_t *)v51 >= 1)
    {
      sub_8460(v220, 0);
      int v49 = 1;
    }
  }
  if (!*(void *)(v47 + 16)) {
    goto LABEL_85;
  }
  unint64_t v52 = sub_4C7F4(9u);
  int v53 = 0;
  if (v54)
  {
    uint64_t v55 = *(void *)(v47 + 56) + 24 * v52;
    if ((*(unsigned char *)(v55 + 8) & 1) == 0 && *(uint64_t *)v55 >= 1)
    {
      sub_8460(v220, 9);
      int v53 = 1;
    }
  }
  if (!*(void *)(v47 + 16)) {
    goto LABEL_86;
  }
  unint64_t v56 = sub_4C7F4(0xAu);
  if (v57)
  {
    uint64_t v58 = *(void *)(v47 + 56) + 24 * v56;
    if ((*(unsigned char *)(v58 + 8) & 1) == 0 && *(uint64_t *)v58 >= 1) {
      sub_8460(v220, 10);
    }
  }
  if (!*(void *)(v47 + 16)) {
    goto LABEL_86;
  }
  unint64_t v59 = sub_4C7F4(0xBu);
  if ((v60 & 1) == 0) {
    goto LABEL_86;
  }
  uint64_t v61 = *(void *)(v47 + 56) + 24 * v59;
  if (*(unsigned char *)(v61 + 8)) {
    goto LABEL_86;
  }
  os_log_t v62 = v207;
  if (*(uint64_t *)v61 >= 1) {
    sub_8460(v220, 11);
  }
LABEL_87:
  BOOL v63 = v219[2] == 0;
  uint64_t v64 = v206;
  if (!v219[2]) {
    uint64_t v64 = 0;
  }
  uint64_t v190 = v64;
  if (v63) {
    uint64_t v65 = 0;
  }
  else {
    uint64_t v65 = (uint64_t)v62;
  }
  uint64_t v206 = v65;
  if (qword_26C400 != -1) {
    swift_once();
  }
  uint64_t v66 = sub_1FB430();
  uint64_t v67 = sub_6DBC8(v66, (uint64_t)qword_274990);
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  uint64_t v191 = v67;
  uint64_t v68 = sub_1FB410();
  int v69 = sub_1FBDC0();
  BOOL v70 = os_log_type_enabled(v68, (os_log_type_t)v69);
  uint64_t v215 = v46;
  if (v70)
  {
    LODWORD(v189) = v69;
    os_log_t v207 = v68;
    uint64_t v71 = swift_slowAlloc();
    *(_DWORD *)uint64_t v71 = 134220032;
    uint64_t v72 = v5[2];
    swift_bridgeObjectRelease();
    *(void *)&v220[0] = v72;
    sub_1FBED0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 12) = 2048;
    uint64_t v73 = *((void *)v46 + 2);
    swift_bridgeObjectRelease();
    *(void *)&v220[0] = v73;
    sub_1FBED0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 22) = 1024;
    LODWORD(v220[0]) = v49;
    sub_1FBED0();
    *(_WORD *)(v71 + 28) = 1024;
    LODWORD(v220[0]) = v53;
    sub_1FBED0();
    *(_WORD *)(v71 + 34) = 2048;
    *(void *)&v220[0] = v206;
    sub_1FBED0();
    *(_WORD *)(v71 + 44) = 2048;
    *(double *)Swift::String v220 = v8;
    sub_1FBED0();
    *(_WORD *)(v71 + 54) = 2048;
    uint64_t v74 = (void *)*((void *)v46 + 2);
    uint64_t v208 = v74;
    if (v74)
    {
      swift_bridgeObjectRetain();
      uint64_t v75 = (char *)v74 - 1;
      char v76 = _swiftEmptyArrayStorage;
      for (uint64_t i = 32; ; i += 152)
      {
        long long v78 = *(long long *)((char *)v215 + i + 16);
        v220[0] = *(long long *)((char *)v215 + i);
        v220[1] = v78;
        long long v79 = *(long long *)((char *)v215 + i + 32);
        long long v80 = *(long long *)((char *)v215 + i + 48);
        long long v81 = *(long long *)((char *)v215 + i + 80);
        v220[4] = *(long long *)((char *)v215 + i + 64);
        v220[5] = v81;
        v220[2] = v79;
        v220[3] = v80;
        long long v82 = *(long long *)((char *)v215 + i + 96);
        long long v83 = *(long long *)((char *)v215 + i + 112);
        long long v84 = *(long long *)((char *)v215 + i + 128);
        LOBYTE(v220[9]) = *((unsigned char *)v215 + i + 144);
        v220[7] = v83;
        v220[8] = v84;
        v220[6] = v82;
        if (BYTE8(v220[0]))
        {
          char v85 = sub_1FC5F0();
          sub_54834((uint64_t)v220);
          swift_bridgeObjectRelease();
          if ((v85 & 1) == 0)
          {
            sub_7A018((uint64_t)v220);
            if (!v75) {
              goto LABEL_110;
            }
            goto LABEL_98;
          }
        }
        else
        {
          sub_54834((uint64_t)v220);
          swift_bridgeObjectRelease();
        }
        char v86 = swift_isUniquelyReferenced_nonNull_native();
        v221[0] = v76;
        if ((v86 & 1) == 0)
        {
          sub_467D8(0, v76[2] + 1, 1);
          char v76 = (void *)v221[0];
        }
        unint64_t v88 = v76[2];
        unint64_t v87 = v76[3];
        if (v88 >= v87 >> 1)
        {
          sub_467D8(v87 > 1, v88 + 1, 1);
          char v76 = (void *)v221[0];
        }
        v76[2] = v88 + 1;
        unint64_t v89 = &v76[19 * v88];
        long long v90 = v220[1];
        *((_OWORD *)v89 + 2) = v220[0];
        *((_OWORD *)v89 + 3) = v90;
        long long v91 = v220[2];
        long long v92 = v220[3];
        long long v93 = v220[5];
        *((_OWORD *)v89 + 6) = v220[4];
        *((_OWORD *)v89 + 7) = v93;
        *((_OWORD *)v89 + 4) = v91;
        *((_OWORD *)v89 + 5) = v92;
        long long v94 = v220[6];
        long long v95 = v220[7];
        long long v96 = v220[8];
        *((unsigned char *)v89 + 176) = v220[9];
        *((_OWORD *)v89 + 9) = v95;
        *((_OWORD *)v89 + 10) = v96;
        *((_OWORD *)v89 + 8) = v94;
        if (!v75)
        {
LABEL_110:
          uint64_t v46 = v215;
          swift_bridgeObjectRelease();
          uint64_t v74 = v208;
          goto LABEL_112;
        }
LABEL_98:
        --v75;
      }
    }
    char v76 = _swiftEmptyArrayStorage;
LABEL_112:
    uint64_t v97 = v76[2];
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)&v220[0] = v97;
    sub_1FBED0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 64) = 2048;
    if (v74)
    {
      swift_bridgeObjectRetain();
      uint64_t v98 = (char *)v74 - 1;
      uint64_t v99 = _swiftEmptyArrayStorage;
      for (uint64_t j = 32; ; j += 152)
      {
        long long v101 = *(long long *)((char *)v46 + j + 16);
        v220[0] = *(long long *)((char *)v46 + j);
        v220[1] = v101;
        long long v102 = *(long long *)((char *)v46 + j + 32);
        long long v103 = *(long long *)((char *)v46 + j + 48);
        long long v104 = *(long long *)((char *)v46 + j + 80);
        v220[4] = *(long long *)((char *)v46 + j + 64);
        v220[5] = v104;
        v220[2] = v102;
        v220[3] = v103;
        long long v105 = *(long long *)((char *)v46 + j + 96);
        long long v106 = *(long long *)((char *)v46 + j + 112);
        long long v107 = *(long long *)((char *)v46 + j + 128);
        LOBYTE(v220[9]) = *((unsigned char *)v46 + j + 144);
        v220[7] = v106;
        v220[8] = v107;
        v220[6] = v105;
        if (BYTE8(v220[0]) == 1)
        {
          sub_54834((uint64_t)v220);
          swift_bridgeObjectRelease();
        }
        else
        {
          char v108 = sub_1FC5F0();
          sub_54834((uint64_t)v220);
          swift_bridgeObjectRelease();
          if ((v108 & 1) == 0)
          {
            sub_7A018((uint64_t)v220);
            if (!v98) {
              goto LABEL_124;
            }
            goto LABEL_115;
          }
        }
        char v109 = swift_isUniquelyReferenced_nonNull_native();
        v221[0] = v99;
        if ((v109 & 1) == 0)
        {
          sub_467D8(0, v99[2] + 1, 1);
          uint64_t v99 = (void *)v221[0];
        }
        unint64_t v111 = v99[2];
        unint64_t v110 = v99[3];
        if (v111 >= v110 >> 1)
        {
          sub_467D8(v110 > 1, v111 + 1, 1);
          uint64_t v99 = (void *)v221[0];
        }
        v99[2] = v111 + 1;
        uint64_t v112 = &v99[19 * v111];
        long long v113 = v220[1];
        *((_OWORD *)v112 + 2) = v220[0];
        *((_OWORD *)v112 + 3) = v113;
        long long v114 = v220[2];
        long long v115 = v220[3];
        long long v116 = v220[5];
        *((_OWORD *)v112 + 6) = v220[4];
        *((_OWORD *)v112 + 7) = v116;
        *((_OWORD *)v112 + 4) = v114;
        *((_OWORD *)v112 + 5) = v115;
        long long v117 = v220[6];
        long long v118 = v220[7];
        long long v119 = v220[8];
        *((unsigned char *)v112 + 176) = v220[9];
        *((_OWORD *)v112 + 9) = v118;
        *((_OWORD *)v112 + 10) = v119;
        *((_OWORD *)v112 + 8) = v117;
        if (!v98)
        {
LABEL_124:
          swift_bridgeObjectRelease();
          uint64_t v74 = v208;
          goto LABEL_126;
        }
LABEL_115:
        --v98;
      }
    }
    uint64_t v99 = _swiftEmptyArrayStorage;
LABEL_126:
    uint64_t v120 = v99[2];
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)&v220[0] = v120;
    sub_1FBED0();
    swift_bridgeObjectRelease();
    *(_WORD *)(v71 + 74) = 2048;
    if (v74)
    {
      swift_bridgeObjectRetain();
      id v121 = (char *)v74 - 1;
      id v122 = _swiftEmptyArrayStorage;
      for (uint64_t k = 32; ; k += 152)
      {
        long long v124 = *(long long *)((char *)v46 + k + 16);
        v220[0] = *(long long *)((char *)v46 + k);
        v220[1] = v124;
        long long v125 = *(long long *)((char *)v46 + k + 32);
        long long v126 = *(long long *)((char *)v46 + k + 48);
        long long v127 = *(long long *)((char *)v46 + k + 80);
        v220[4] = *(long long *)((char *)v46 + k + 64);
        v220[5] = v127;
        v220[2] = v125;
        v220[3] = v126;
        long long v128 = *(long long *)((char *)v46 + k + 96);
        long long v129 = *(long long *)((char *)v46 + k + 112);
        long long v130 = *(long long *)((char *)v46 + k + 128);
        LOBYTE(v220[9]) = *((unsigned char *)v46 + k + 144);
        v220[7] = v129;
        v220[8] = v130;
        v220[6] = v128;
        if ((BYTE8(v220[1]) & 1) == 0)
        {
          sub_54834((uint64_t)v220);
          char v131 = swift_isUniquelyReferenced_nonNull_native();
          v221[0] = v122;
          if ((v131 & 1) == 0)
          {
            sub_467D8(0, v122[2] + 1, 1);
            id v122 = (void *)v221[0];
          }
          unint64_t v133 = v122[2];
          unint64_t v132 = v122[3];
          if (v133 >= v132 >> 1)
          {
            sub_467D8(v132 > 1, v133 + 1, 1);
            id v122 = (void *)v221[0];
          }
          v122[2] = v133 + 1;
          uint64_t v134 = &v122[19 * v133];
          long long v135 = v220[1];
          *((_OWORD *)v134 + 2) = v220[0];
          *((_OWORD *)v134 + 3) = v135;
          long long v136 = v220[2];
          long long v137 = v220[3];
          long long v138 = v220[5];
          *((_OWORD *)v134 + 6) = v220[4];
          *((_OWORD *)v134 + 7) = v138;
          *((_OWORD *)v134 + 4) = v136;
          *((_OWORD *)v134 + 5) = v137;
          long long v139 = v220[6];
          long long v140 = v220[7];
          long long v141 = v220[8];
          *((unsigned char *)v134 + 176) = v220[9];
          *((_OWORD *)v134 + 9) = v140;
          *((_OWORD *)v134 + 10) = v141;
          *((_OWORD *)v134 + 8) = v139;
          uint64_t v46 = v215;
        }
        if (!v121) {
          break;
        }
        --v121;
      }
      swift_bridgeObjectRelease();
    }
    else
    {
      id v122 = _swiftEmptyArrayStorage;
    }
    uint64_t v142 = v122[2];
    swift_bridgeObjectRelease();
    swift_release();
    *(void *)&v220[0] = v142;
    sub_1FBED0();
    swift_bridgeObjectRelease();
    os_log_t v143 = v207;
    _os_log_impl(&dword_0, v207, (os_log_type_t)v189, "Clustering %ld books diversified=%ld allowSingleBooks=%{BOOL}d allowSeries=%{BOOL}d maxHighScoringItemCount=%ld thresholdRatio=%f books=%ld audiobooks=%ld seriesBooks=%ld", (uint8_t *)v71, 0x54u);
    swift_slowDealloc();

    uint64_t v6 = v212;
  }
  else
  {

    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease_n();
  }
  uint64_t v144 = _swiftEmptyArrayStorage;
  Swift::String v218 = _swiftEmptyArrayStorage;
  uint64_t v145 = v6[2];
  uint64_t v146 = v205;
  if (v145)
  {
    swift_bridgeObjectRetain();
    sub_12588((uint64_t)(v6 + 24), (uint64_t)v221);
    sub_12588((uint64_t)v221, (uint64_t)v220);
    if (sub_125F0((uint64_t)v220) == 1)
    {
LABEL_146:
      __break(1u);
    }
    else
    {
      uint64_t v147 = (uint64_t)(v6 + 94);
      while (1)
      {
        memcpy(v217, v220, 0x179uLL);
        char v148 = sub_103414();
        uint64_t v149 = _swiftEmptySetSingleton;
        if (v148) {
          uint64_t v149 = (void *)swift_bridgeObjectRetain();
        }
        sub_AA9B8((uint64_t)v149);
        if (!--v145) {
          break;
        }
        sub_12588(v147, (uint64_t)v221);
        sub_12588((uint64_t)v221, (uint64_t)v220);
        v147 += 560;
        if (sub_125F0((uint64_t)v220) == 1) {
          goto LABEL_146;
        }
      }
    }
    swift_bridgeObjectRelease();
    uint64_t v144 = v218;
  }
  long long v189 = v144;
  uint64_t v150 = v202;
  uint64_t v151 = v203;
  uint64_t v152 = v200;
  uint64_t v153 = v197;
  if (v210)
  {
    uint64_t v154 = swift_bridgeObjectRetain();
    uint64_t v212 = sub_4C248(v154);
    swift_bridgeObjectRelease();
    if (v209)
    {
LABEL_150:
      uint64_t v155 = swift_bridgeObjectRetain();
      uint64_t v208 = sub_4C23C(v155);
      swift_bridgeObjectRelease();
      goto LABEL_153;
    }
  }
  else
  {
    swift_bridgeObjectRetain();
    uint64_t v212 = v146;
    if (v209) {
      goto LABEL_150;
    }
  }
  uint64_t v156 = v196;
  swift_bridgeObjectRetain();
  uint64_t v208 = v156;
LABEL_153:
  swift_bridgeObjectRetain();
  os_log_t v207 = (os_log_t)sub_1F825C(v194, v153);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  uint64_t v157 = v213;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v158 = sub_50A6C(v157);
  swift_bridgeObjectRelease();
  uint64_t v159 = *(void *)(v158 + 16);
  if (v159)
  {
    uint64_t v160 = v150;
    uint64_t v196 = (double *)v158;
  }
  else
  {
    swift_bridgeObjectRelease();
    uint64_t v161 = swift_bridgeObjectRetain();
    uint64_t v196 = (double *)sub_50A6C(v161);
    swift_bridgeObjectRelease();
    uint64_t v160 = v150;
    uint64_t v213 = v152;
  }
  LODWORD(v205) = v159 != 0;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v163 = v198;
  uint64_t v162 = v199;
  *(void *)&v220[0] = v199;
  *((void *)&v220[0] + 1) = v198;
  *(void *)&v220[1] = v214;
  *((void *)&v220[1] + 1) = v211;
  *(void *)&v220[2] = v195;
  *((void *)&v220[2] + 1) = v210;
  *(void *)&v220[3] = v209;
  uint64_t v164 = sub_50A6C((uint64_t)v189);
  swift_bridgeObjectRelease();
  uint64_t v165 = (uint64_t)v219;
  swift_bridgeObjectRetain();
  uint64_t v166 = sub_DC094(v220, v164, (uint64_t)v192, v196, (int)v205, (uint64_t)v215, v162, v163, v12, v8, v165, v206, v190, v151, v160, (uint64_t)v212, (uint64_t)v208, (uint64_t)v207, v201);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v214 = v165;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(void *)&v220[0] = _swiftEmptyArrayStorage;
  uint64_t v167 = *(void *)(v166 + 16);
  if (!v167)
  {
    char v172 = _swiftEmptyArrayStorage;
    int64_t v173 = _swiftEmptyArrayStorage[2];
    if (v173) {
      goto LABEL_160;
    }
LABEL_166:
    swift_bridgeObjectRelease();
    uint64_t v174 = _swiftEmptyArrayStorage;
    goto LABEL_167;
  }
  uint64_t v168 = v166 + ((*(unsigned __int8 *)(v187 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v187 + 80));
  uint64_t v169 = *(void *)(v187 + 72);
  swift_bridgeObjectRetain();
  uint64_t v170 = (uint64_t)v188;
  do
  {
    sub_13A950(v168, v170);
    uint64_t v171 = CollectionRecommendation.books.getter();
    sub_7B918(v170);
    sub_A9A60((uint64_t)v171);
    v168 += v169;
    --v167;
  }
  while (v167);
  swift_bridgeObjectRelease();
  char v172 = *(void **)&v220[0];
  int64_t v173 = *(void *)(*(void *)&v220[0] + 16);
  if (!v173) {
    goto LABEL_166;
  }
LABEL_160:
  *(void *)&v220[0] = _swiftEmptyArrayStorage;
  sub_46538(0, v173, 0);
  uint64_t v174 = *(void **)&v220[0];
  unint64_t v175 = *(void *)(*(void *)&v220[0] + 16);
  uint64_t v176 = 4;
  do
  {
    uint64_t v177 = v172[v176];
    *(void *)&v220[0] = v174;
    unint64_t v178 = v174[3];
    if (v175 >= v178 >> 1)
    {
      sub_46538(v178 > 1, v175 + 1, 1);
      uint64_t v174 = *(void **)&v220[0];
    }
    v174[2] = v175 + 1;
    v174[v175 + 4] = v177;
    v176 += 10;
    ++v175;
    --v173;
  }
  while (v173);
  swift_bridgeObjectRelease();
LABEL_167:
  swift_bridgeObjectRelease();
  uint64_t v179 = sub_50A6C((uint64_t)v174);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain_n();
  uint64_t v180 = sub_1FB410();
  os_log_type_t v181 = sub_1FBDC0();
  if (os_log_type_enabled(v180, v181))
  {
    double v182 = (uint8_t *)swift_slowAlloc();
    *(void *)&v220[0] = swift_slowAlloc();
    *(_DWORD *)double v182 = 136315138;
    uint64_t v183 = sub_1EF6A4(v166);
    v221[0] = sub_D5890(v183, v184, (uint64_t *)v220);
    sub_1FBED0();
    swift_bridgeObjectRelease_n();
    swift_bridgeObjectRelease();
    _os_log_impl(&dword_0, v180, v181, "Clustered: %s", v182, 0xCu);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v185 = v204;
  *uint64_t v204 = v166;
  v185[1] = v179;
}

void sub_1F47B8(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
}

double sub_1F47D0(long double a1)
{
  sub_12124(&qword_26D088);
  sub_1FB3A0();
  uint64_t v2 = *(void *)(v13 + 16);
  if (!v2)
  {
    double v4 = 0.0;
    goto LABEL_10;
  }
  if (v2 == 1)
  {
    uint64_t v3 = 0;
    double v4 = 0.0;
LABEL_8:
    uint64_t v10 = (double *)(v13 + 80 * v3 + 104);
    do
    {
      double v11 = *v10;
      v10 += 10;
      double v4 = v4 + v11 * pow(a1, (double)v3++);
    }
    while (v2 != v3);
    goto LABEL_10;
  }
  uint64_t v5 = 0;
  uint64_t v3 = v2 & 0x7FFFFFFFFFFFFFFELL;
  uint64_t v6 = (double *)(v13 + 184);
  double v4 = 0.0;
  do
  {
    double v7 = *(v6 - 10);
    double v8 = *v6;
    v6 += 20;
    double v9 = pow(a1, (double)v5);
    double v4 = v4 + v7 * v9 + v8 * pow(a1, (double)(v5 + 1));
    v5 += 2;
  }
  while (v5 != v3);
  if (v2 != v3) {
    goto LABEL_8;
  }
LABEL_10:
  swift_bridgeObjectRelease();
  return v4;
}

uint64_t sub_1F48FC(unsigned char *a1, uint64_t a2, char *a3, uint64_t *a4, uint64_t a5)
{
  char v8 = *a3;
  uint64_t v9 = *a4;
  char v10 = *((unsigned char *)a4 + 8);
  uint64_t v11 = a4[2];
  if (CollectionRecommendationType.rawValue.getter() == 0xD000000000000011 && v12 == 0x8000000000216240)
  {
    swift_bridgeObjectRelease();
  }
  else
  {
    char v13 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if ((v13 & 1) == 0)
    {
      *a1 = v8;
      *(void *)a2 = v9;
      *(unsigned char *)(a2 + 8) = v10;
      *(void *)(a2 + 16) = v11;
      return swift_bridgeObjectRetain();
    }
  }
  uint64_t v14 = *(void *)(a5 + 16);
  if (!*(void *)(v14 + 16) || (uint64_t result = sub_4C7F4(5u), (v16 & 1) == 0))
  {
    uint64_t result = swift_bridgeObjectRetain();
LABEL_13:
    *a1 = 5;
    *(void *)a2 = v9;
    *(unsigned char *)(a2 + 8) = v10 & 1;
    *(void *)(a2 + 16) = v11;
    return result;
  }
  uint64_t v17 = *(void *)(v14 + 56) + 24 * result;
  uint64_t v18 = *(void *)(v17 + 16);
  v10 |= *(unsigned char *)(v17 + 8);
  if (v10)
  {
    uint64_t v9 = 0;
LABEL_12:
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t result = sub_1EF548(v11, v18);
    uint64_t v11 = result;
    goto LABEL_13;
  }
  uint64_t v19 = *(void *)v17;
  BOOL v20 = __OFADD__(v19, v9);
  v9 += v19;
  if (!v20) {
    goto LABEL_12;
  }
  __break(1u);
  return result;
}

unint64_t sub_1F4A78()
{
  unint64_t result = qword_2749B0;
  if (!qword_2749B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2749B0);
  }
  return result;
}

uint64_t sub_1F4ACC(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1F4B38()
{
  unint64_t result = qword_2749E0;
  if (!qword_2749E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_2749E0);
  }
  return result;
}

unint64_t sub_1F4B8C()
{
  unint64_t result = qword_274A10;
  if (!qword_274A10)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A10);
  }
  return result;
}

uint64_t sub_1F4BE0(unint64_t *a1, unint64_t *a2)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_270EA0);
    sub_1F4C60(a2);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1F4C60(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    type metadata accessor for CollectionRecommendation(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1F4CA4()
{
  unint64_t result = qword_274A28;
  if (!qword_274A28)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A28);
  }
  return result;
}

unint64_t sub_1F4CF8()
{
  unint64_t result = qword_274A38;
  if (!qword_274A38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A38);
  }
  return result;
}

unint64_t sub_1F4D4C()
{
  unint64_t result = qword_274A40;
  if (!qword_274A40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A40);
  }
  return result;
}

unint64_t sub_1F4DA0()
{
  unint64_t result = qword_274A68;
  if (!qword_274A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A68);
  }
  return result;
}

unint64_t sub_1F4DF4()
{
  unint64_t result = qword_274A70;
  if (!qword_274A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A70);
  }
  return result;
}

uint64_t sub_1F4E48(unint64_t *a1, void (*a2)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_121C4(&qword_274A48);
    a2();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_1F4EC4(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 760);
  uint64_t v23 = *(void *)(a1 + 752);
  uint64_t v20 = *(void *)(a1 + 776);
  uint64_t v21 = *(void *)(a1 + 768);
  uint64_t v18 = *(void *)(a1 + 792);
  uint64_t v19 = *(void *)(a1 + 784);
  uint64_t v17 = *(void *)(a1 + 800);
  uint64_t v16 = *(void *)(a1 + 808);
  long long v8 = *(_OWORD *)(a1 + 832);
  long long v9 = *(_OWORD *)(a1 + 816);
  long long v7 = *(_OWORD *)(a1 + 848);
  long long v5 = *(_OWORD *)(a1 + 880);
  long long v6 = *(_OWORD *)(a1 + 864);
  long long v4 = *(_OWORD *)(a1 + 896);
  long long v3 = *(_OWORD *)(a1 + 912);
  uint64_t v10 = *(void *)(a1 + 944);
  uint64_t v11 = *(void *)(a1 + 936);
  uint64_t v14 = *(void *)(a1 + 992);
  uint64_t v15 = *(void *)(a1 + 984);
  uint64_t v12 = *(void *)(a1 + 1008);
  uint64_t v13 = *(void *)(a1 + 1000);
  uint64_t v26 = *(void *)(a1 + 1072);
  uint64_t v27 = *(void *)(a1 + 1064);
  uint64_t v24 = *(void *)(a1 + 1088);
  uint64_t v25 = *(void *)(a1 + 1080);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_8D2AC(v23, v22, v21, v20, v19, v18, v17, v16, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3,
    *((uint64_t *)&v3 + 1));
  sub_8D2F8(v11, v10);
  sub_8D348(v15, v14, v13, v12);
  swift_bridgeObjectRetain();
  sub_8D38C(v27, v26, v25, v24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t sub_1F51E4(uint64_t a1)
{
  uint64_t v22 = *(void *)(a1 + 760);
  uint64_t v23 = *(void *)(a1 + 752);
  uint64_t v20 = *(void *)(a1 + 776);
  uint64_t v21 = *(void *)(a1 + 768);
  uint64_t v19 = *(void *)(a1 + 784);
  uint64_t v17 = *(void *)(a1 + 800);
  uint64_t v18 = *(void *)(a1 + 792);
  uint64_t v16 = *(void *)(a1 + 808);
  long long v8 = *(_OWORD *)(a1 + 832);
  long long v9 = *(_OWORD *)(a1 + 816);
  long long v6 = *(_OWORD *)(a1 + 864);
  long long v7 = *(_OWORD *)(a1 + 848);
  long long v5 = *(_OWORD *)(a1 + 880);
  long long v3 = *(_OWORD *)(a1 + 912);
  long long v4 = *(_OWORD *)(a1 + 896);
  uint64_t v10 = *(void *)(a1 + 944);
  uint64_t v11 = *(void *)(a1 + 936);
  uint64_t v14 = *(void *)(a1 + 992);
  uint64_t v15 = *(void *)(a1 + 984);
  uint64_t v12 = *(void *)(a1 + 1008);
  uint64_t v13 = *(void *)(a1 + 1000);
  uint64_t v26 = *(void *)(a1 + 1072);
  uint64_t v27 = *(void *)(a1 + 1064);
  uint64_t v24 = *(void *)(a1 + 1088);
  uint64_t v25 = *(void *)(a1 + 1080);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_11FF4(v23, v22, v21, v20, v19, v18, v17, v16, v9, *((uint64_t *)&v9 + 1), v8, *((uint64_t *)&v8 + 1), v7, *((uint64_t *)&v7 + 1), v6, *((uint64_t *)&v6 + 1), v5, *((uint64_t *)&v5 + 1), v4,
    *((uint64_t *)&v4 + 1),
    v3,
    *((uint64_t *)&v3 + 1));
  sub_12040(v11, v10);
  sub_12090(v15, v14, v13, v12);
  swift_bridgeObjectRelease();
  sub_120D4(v27, v26, v25, v24);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_1F5508()
{
  return sub_52CC0(&qword_274A80, &qword_26DCA8);
}

unint64_t sub_1F5548()
{
  unint64_t result = qword_274A88;
  if (!qword_274A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274A88);
  }
  return result;
}

uint64_t destroy for ClusterableBook(uint64_t a1)
{
  if (*(unsigned __int8 *)(a1 + 40) != 255) {
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClusterableBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  int v4 = *(unsigned __int8 *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  if (v4 == 255)
  {
    *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  }
  else
  {
    *(unsigned char *)(a1 + 40) = v4 & 1;
    swift_bridgeObjectRetain();
  }
  uint64_t v5 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v5;
  uint64_t v6 = *(void *)(a2 + 72);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  *(void *)(a1 + 72) = v6;
  uint64_t v7 = *(void *)(a2 + 88);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v7;
  uint64_t v8 = *(void *)(a2 + 104);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  long long v10 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v9;
  *(_OWORD *)(a1 + 128) = v10;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for ClusterableBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  uint64_t v4 = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(void *)(a1 + 16) = v4;
  uint64_t v5 = a1 + 32;
  uint64_t v6 = (uint64_t *)(a2 + 32);
  int v7 = *(unsigned __int8 *)(a2 + 40);
  if (*(unsigned __int8 *)(a1 + 40) == 255)
  {
    if (v7 == 255)
    {
      uint64_t v9 = *v6;
      *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
      *(void *)uint64_t v5 = v9;
    }
    else
    {
      *(void *)(a1 + 32) = *v6;
      *(unsigned char *)(a1 + 40) = v7 & 1;
      swift_bridgeObjectRetain();
    }
  }
  else if (v7 == 255)
  {
    sub_57194(a1 + 32);
    char v8 = *((unsigned char *)v6 + 8);
    *(void *)uint64_t v5 = *v6;
    *(unsigned char *)(v5 + 8) = v8;
  }
  else
  {
    *(void *)(a1 + 32) = *v6;
    *(unsigned char *)(a1 + 40) = v7 & 1;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  long long v10 = *(_OWORD *)(a2 + 112);
  long long v11 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v10;
  *(_OWORD *)(a1 + 128) = v11;
  return a1;
}

__n128 initializeWithTake for ClusterableBook(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  long long v3 = *(_OWORD *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 80) = v5;
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)(a1 + 48) = v4;
  __n128 result = *(__n128 *)(a2 + 96);
  long long v7 = *(_OWORD *)(a2 + 112);
  long long v8 = *(_OWORD *)(a2 + 128);
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  *(_OWORD *)(a1 + 112) = v7;
  *(_OWORD *)(a1 + 128) = v8;
  *(__n128 *)(a1 + 96) = result;
  return result;
}

uint64_t assignWithTake for ClusterableBook(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  uint64_t v4 = a1 + 32;
  uint64_t v5 = a2 + 32;
  if (*(unsigned __int8 *)(a1 + 40) != 255)
  {
    int v6 = *(unsigned __int8 *)(a2 + 40);
    if (v6 != 255)
    {
      *(void *)(a1 + 32) = *(void *)v5;
      *(unsigned char *)(a1 + 40) = v6 & 1;
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_57194(a1 + 32);
  }
  *(void *)uint64_t v4 = *(void *)v5;
  *(unsigned char *)(v4 + 8) = *(unsigned char *)(v5 + 8);
LABEL_6:
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 80) = *(void *)(a2 + 80);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRelease();
  long long v7 = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 112) = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 128) = v7;
  *(unsigned char *)(a1 + 144) = *(unsigned char *)(a2 + 144);
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusterableBook(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 145)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 48);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusterableBook(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 136) = 0;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 144) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 145) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 48) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 145) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterableBook()
{
  return &type metadata for ClusterableBook;
}

uint64_t destroy for ClusteringOptions()
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for ClusteringOptions(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  uint64_t v3 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v3;
  uint64_t v4 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 40) = v4;
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ClusteringOptions(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[4] = a2[4];
  a1[5] = a2[5];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[6] = a2[6];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t assignWithTake for ClusteringOptions(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 40) = *(_OWORD *)(a2 + 40);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ClusteringOptions(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 56)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 16);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ClusteringOptions(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 56) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 16) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 56) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringOptions()
{
  return &type metadata for ClusteringOptions;
}

unsigned char *storeEnumTagSinglePayload for ClusteringOptions.MediaType(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 2 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 2) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFE) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFD)
  {
    unsigned int v6 = ((a2 - 254) >> 8) + 1;
    *__n128 result = a2 + 2;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F5DE0);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 2;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringOptions.MediaType()
{
  return &type metadata for ClusteringOptions.MediaType;
}

ValueMetadata *type metadata accessor for BookClusteringResult()
{
  return &type metadata for BookClusteringResult;
}

uint64_t destroy for BookClusteringRequest(void *a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (a1[115])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[118])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (a1[126])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  if (a1[136])
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BookClusteringRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(_WORD *)(a1 + 48) = *(_WORD *)(a2 + 48);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(_DWORD *)(a1 + 51) = *(_DWORD *)(a2 + 51);
  *(_WORD *)(a1 + 55) = *(_WORD *)(a2 + 55);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  long long v6 = *(_OWORD *)(a2 + 168);
  long long v7 = *(_OWORD *)(a2 + 184);
  *(_OWORD *)(a1 + 200) = *(_OWORD *)(a2 + 200);
  *(_OWORD *)(a1 + 184) = v7;
  *(_OWORD *)(a1 + 168) = v6;
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v8 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v8;
  long long v9 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v9;
  long long v10 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v10;
  long long v11 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v11;
  long long v12 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v12;
  uint64_t v13 = *(void *)(a2 + 440);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  *(void *)(a1 + 440) = v13;
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(unsigned char *)(a1 + 465) = *(unsigned char *)(a2 + 465);
  *(unsigned char *)(a1 + 466) = *(unsigned char *)(a2 + 466);
  uint64_t v14 = *(void *)(a2 + 480);
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  *(void *)(a1 + 480) = v14;
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(_OWORD *)(a1 + 512) = *(_OWORD *)(a2 + 512);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(_OWORD *)(a1 + 544) = *(_OWORD *)(a2 + 544);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  *(unsigned char *)(a1 + 576) = *(unsigned char *)(a2 + 576);
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  *(_OWORD *)(a1 + 624) = *(_OWORD *)(a2 + 624);
  *(unsigned char *)(a1 + 640) = *(unsigned char *)(a2 + 640);
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  *(unsigned char *)(a1 + 656) = *(unsigned char *)(a2 + 656);
  *(unsigned char *)(a1 + 657) = *(unsigned char *)(a2 + 657);
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  *(unsigned char *)(a1 + 672) = *(unsigned char *)(a2 + 672);
  *(unsigned char *)(a1 + 673) = *(unsigned char *)(a2 + 673);
  long long v15 = *(_OWORD *)(a2 + 680);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(_OWORD *)(a1 + 680) = v15;
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  uint64_t v29 = *(void *)(a2 + 920);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v29)
  {
    *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(_OWORD *)(a1 + 856) = *(_OWORD *)(a2 + 856);
    *(_OWORD *)(a1 + 872) = *(_OWORD *)(a2 + 872);
    *(_OWORD *)(a1 + 888) = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 904) = *(_OWORD *)(a2 + 904);
    *(_OWORD *)(a1 + 792) = *(_OWORD *)(a2 + 792);
    *(_OWORD *)(a1 + 808) = *(_OWORD *)(a2 + 808);
    *(_OWORD *)(a1 + 824) = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    *(void *)(a1 + 920) = v29;
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v16 = *(void *)(a2 + 944);
    if (v16) {
      goto LABEL_3;
    }
LABEL_6:
    long long v23 = *(_OWORD *)(a2 + 952);
    *(_OWORD *)(a1 + 936) = *(_OWORD *)(a2 + 936);
    *(_OWORD *)(a1 + 952) = v23;
    *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
    uint64_t v17 = *(void *)(a2 + 1008);
    if (v17) {
      goto LABEL_4;
    }
    goto LABEL_7;
  }
  long long v18 = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 896) = v18;
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  long long v19 = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 832) = v19;
  long long v20 = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 864) = v20;
  long long v21 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v21;
  long long v22 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v22;
  uint64_t v16 = *(void *)(a2 + 944);
  if (!v16) {
    goto LABEL_6;
  }
LABEL_3:
  *(void *)(a1 + 936) = *(void *)(a2 + 936);
  *(void *)(a1 + 944) = v16;
  *(void *)(a1 + 952) = *(void *)(a2 + 952);
  *(void *)(a1 + 960) = *(void *)(a2 + 960);
  *(void *)(a1 + 968) = *(void *)(a2 + 968);
  *(void *)(a1 + 976) = *(void *)(a2 + 976);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v17 = *(void *)(a2 + 1008);
  if (v17)
  {
LABEL_4:
    *(void *)(a1 + 984) = *(void *)(a2 + 984);
    *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
    *(void *)(a1 + 1008) = v17;
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    goto LABEL_8;
  }
LABEL_7:
  long long v24 = *(_OWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 984) = *(_OWORD *)(a2 + 984);
  *(_OWORD *)(a1 + 1000) = v24;
  *(_OWORD *)(a1 + 1016) = *(_OWORD *)(a2 + 1016);
LABEL_8:
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  uint64_t v25 = *(void *)(a2 + 1088);
  swift_bridgeObjectRetain();
  if (v25)
  {
    *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
    *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
    *(void *)(a1 + 1088) = v25;
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v26 = *(_OWORD *)(a2 + 1112);
    *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
    *(_OWORD *)(a1 + 1112) = v26;
    *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    long long v27 = *(_OWORD *)(a2 + 1080);
    *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 1064);
    *(_OWORD *)(a1 + 1080) = v27;
  }
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BookClusteringRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 464);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(unsigned char *)(a1 + 24) = *(unsigned char *)(a2 + 24);
  *(unsigned char *)(a1 + 25) = *(unsigned char *)(a2 + 25);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(unsigned char *)(a1 + 48) = *(unsigned char *)(a2 + 48);
  *(unsigned char *)(a1 + 49) = *(unsigned char *)(a2 + 49);
  *(unsigned char *)(a1 + 50) = *(unsigned char *)(a2 + 50);
  *(unsigned char *)(a1 + 51) = *(unsigned char *)(a2 + 51);
  *(unsigned char *)(a1 + 52) = *(unsigned char *)(a2 + 52);
  *(unsigned char *)(a1 + 53) = *(unsigned char *)(a2 + 53);
  *(unsigned char *)(a1 + 54) = *(unsigned char *)(a2 + 54);
  *(unsigned char *)(a1 + 55) = *(unsigned char *)(a2 + 55);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(unsigned char *)(a1 + 65) = *(unsigned char *)(a2 + 65);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(unsigned char *)(a1 + 80) = *(unsigned char *)(a2 + 80);
  *(unsigned char *)(a1 + 81) = *(unsigned char *)(a2 + 81);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  *(void *)(a1 + 112) = *(void *)(a2 + 112);
  *(void *)(a1 + 120) = *(void *)(a2 + 120);
  *(void *)(a1 + 128) = *(void *)(a2 + 128);
  *(void *)(a1 + 136) = *(void *)(a2 + 136);
  *(void *)(a1 + 144) = *(void *)(a2 + 144);
  *(void *)(a1 + 152) = *(void *)(a2 + 152);
  *(void *)(a1 + 160) = *(void *)(a2 + 160);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = *(void *)(a2 + 176);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = *(void *)(a2 + 224);
  *(void *)(a1 + 232) = *(void *)(a2 + 232);
  *(void *)(a1 + 240) = *(void *)(a2 + 240);
  *(void *)(a1 + 248) = *(void *)(a2 + 248);
  *(void *)(a1 + 256) = *(void *)(a2 + 256);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(void *)(a1 + 272) = *(void *)(a2 + 272);
  *(void *)(a1 + 280) = *(void *)(a2 + 280);
  *(void *)(a1 + 288) = *(void *)(a2 + 288);
  *(void *)(a1 + 296) = *(void *)(a2 + 296);
  *(void *)(a1 + 304) = *(void *)(a2 + 304);
  *(void *)(a1 + 312) = *(void *)(a2 + 312);
  *(void *)(a1 + 320) = *(void *)(a2 + 320);
  *(void *)(a1 + 328) = *(void *)(a2 + 328);
  *(void *)(a1 + 336) = *(void *)(a2 + 336);
  *(void *)(a1 + 344) = *(void *)(a2 + 344);
  *(void *)(a1 + 352) = *(void *)(a2 + 352);
  *(void *)(a1 + 360) = *(void *)(a2 + 360);
  *(void *)(a1 + 368) = *(void *)(a2 + 368);
  *(void *)(a1 + 376) = *(void *)(a2 + 376);
  *(void *)(a1 + 384) = *(void *)(a2 + 384);
  *(void *)(a1 + 392) = *(void *)(a2 + 392);
  *(void *)(a1 + 400) = *(void *)(a2 + 400);
  *(void *)(a1 + 408) = *(void *)(a2 + 408);
  *(void *)(a1 + 416) = *(void *)(a2 + 416);
  *(void *)(a1 + 424) = *(void *)(a2 + 424);
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(void *)(a1 + 448) = *(void *)(a2 + 448);
  *(void *)(a1 + 456) = *(void *)(a2 + 456);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(unsigned char *)(a1 + 465) = v4[1];
  *(unsigned char *)(a1 + 466) = v4[2];
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = *(void *)(a2 + 512);
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 576) = v4[112];
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = v4[176];
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 656) = v4[192];
  *(unsigned char *)(a1 + 657) = v4[193];
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 672) = v4[208];
  *(unsigned char *)(a1 + 673) = v4[209];
  *(unsigned char *)(a1 + 680) = v4[216];
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(void *)(a1 + 696) = *(void *)(a2 + 696);
  *(void *)(a1 + 704) = *(void *)(a2 + 704);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  uint64_t v5 = (_OWORD *)(a1 + 752);
  long long v6 = (long long *)(a2 + 752);
  uint64_t v7 = *(void *)(a2 + 920);
  if (*(void *)(a1 + 920))
  {
    if (v7)
    {
      *(void *)(a1 + 752) = *(void *)(a2 + 752);
      *(void *)(a1 + 760) = *(void *)(a2 + 760);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      *(void *)(a1 + 784) = *(void *)(a2 + 784);
      *(void *)(a1 + 792) = *(void *)(a2 + 792);
      *(void *)(a1 + 800) = *(void *)(a2 + 800);
      *(void *)(a1 + 808) = *(void *)(a2 + 808);
      *(void *)(a1 + 816) = *(void *)(a2 + 816);
      *(void *)(a1 + 824) = *(void *)(a2 + 824);
      *(void *)(a1 + 832) = *(void *)(a2 + 832);
      *(void *)(a1 + 840) = *(void *)(a2 + 840);
      *(void *)(a1 + 848) = *(void *)(a2 + 848);
      *(void *)(a1 + 856) = *(void *)(a2 + 856);
      *(void *)(a1 + 864) = *(void *)(a2 + 864);
      *(void *)(a1 + 872) = *(void *)(a2 + 872);
      *(void *)(a1 + 880) = *(void *)(a2 + 880);
      *(void *)(a1 + 888) = *(void *)(a2 + 888);
      *(void *)(a1 + 896) = *(void *)(a2 + 896);
      *(void *)(a1 + 904) = *(void *)(a2 + 904);
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      *(void *)(a1 + 920) = *(void *)(a2 + 920);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF00(a1 + 752);
      long long v14 = *(_OWORD *)(a2 + 800);
      long long v16 = *v6;
      long long v15 = *(_OWORD *)(a2 + 768);
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 800) = v14;
      *uint64_t v5 = v16;
      *(_OWORD *)(a1 + 768) = v15;
      long long v17 = *(_OWORD *)(a2 + 864);
      long long v19 = *(_OWORD *)(a2 + 816);
      long long v18 = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 864) = v17;
      *(_OWORD *)(a1 + 816) = v19;
      *(_OWORD *)(a1 + 832) = v18;
      long long v21 = *(_OWORD *)(a2 + 896);
      long long v20 = *(_OWORD *)(a2 + 912);
      long long v22 = *(_OWORD *)(a2 + 880);
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      *(_OWORD *)(a1 + 896) = v21;
      *(_OWORD *)(a1 + 912) = v20;
      *(_OWORD *)(a1 + 880) = v22;
    }
  }
  else if (v7)
  {
    *(void *)(a1 + 752) = *(void *)(a2 + 752);
    *(void *)(a1 + 760) = *(void *)(a2 + 760);
    *(void *)(a1 + 768) = *(void *)(a2 + 768);
    *(_OWORD *)(a1 + 776) = *(_OWORD *)(a2 + 776);
    long long v8 = *(_OWORD *)(a2 + 792);
    long long v9 = *(_OWORD *)(a2 + 808);
    long long v10 = *(_OWORD *)(a2 + 824);
    *(_OWORD *)(a1 + 840) = *(_OWORD *)(a2 + 840);
    *(_OWORD *)(a1 + 824) = v10;
    *(_OWORD *)(a1 + 808) = v9;
    *(_OWORD *)(a1 + 792) = v8;
    long long v11 = *(_OWORD *)(a2 + 856);
    long long v12 = *(_OWORD *)(a2 + 872);
    long long v13 = *(_OWORD *)(a2 + 888);
    *(_OWORD *)(a1 + 904) = *(_OWORD *)(a2 + 904);
    *(_OWORD *)(a1 + 888) = v13;
    *(_OWORD *)(a1 + 872) = v12;
    *(_OWORD *)(a1 + 856) = v11;
    *(void *)(a1 + 920) = *(void *)(a2 + 920);
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v23 = *v6;
    long long v24 = *(_OWORD *)(a2 + 768);
    long long v25 = *(_OWORD *)(a2 + 800);
    *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
    *(_OWORD *)(a1 + 800) = v25;
    *uint64_t v5 = v23;
    *(_OWORD *)(a1 + 768) = v24;
    long long v26 = *(_OWORD *)(a2 + 816);
    long long v27 = *(_OWORD *)(a2 + 832);
    long long v28 = *(_OWORD *)(a2 + 864);
    *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
    *(_OWORD *)(a1 + 864) = v28;
    *(_OWORD *)(a1 + 816) = v26;
    *(_OWORD *)(a1 + 832) = v27;
    long long v29 = *(_OWORD *)(a2 + 880);
    long long v30 = *(_OWORD *)(a2 + 896);
    long long v31 = *(_OWORD *)(a2 + 912);
    *(void *)(a1 + 928) = *(void *)(a2 + 928);
    *(_OWORD *)(a1 + 896) = v30;
    *(_OWORD *)(a1 + 912) = v31;
    *(_OWORD *)(a1 + 880) = v29;
  }
  unint64_t v32 = (_OWORD *)(a1 + 936);
  uint64_t v33 = (_OWORD *)(a2 + 936);
  uint64_t v34 = *(void *)(a2 + 944);
  if (*(void *)(a1 + 944))
  {
    if (v34)
    {
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      *(void *)(a1 + 944) = *(void *)(a2 + 944);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EF54(a1 + 936);
      long long v36 = *(_OWORD *)(a2 + 952);
      long long v35 = *(_OWORD *)(a2 + 968);
      _OWORD *v32 = *v33;
      *(_OWORD *)(a1 + 952) = v36;
      *(_OWORD *)(a1 + 968) = v35;
    }
  }
  else if (v34)
  {
    *(void *)(a1 + 936) = *(void *)(a2 + 936);
    *(void *)(a1 + 944) = *(void *)(a2 + 944);
    *(void *)(a1 + 952) = *(void *)(a2 + 952);
    *(void *)(a1 + 960) = *(void *)(a2 + 960);
    *(void *)(a1 + 968) = *(void *)(a2 + 968);
    *(void *)(a1 + 976) = *(void *)(a2 + 976);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v37 = *v33;
    long long v38 = *(_OWORD *)(a2 + 968);
    *(_OWORD *)(a1 + 952) = *(_OWORD *)(a2 + 952);
    *(_OWORD *)(a1 + 968) = v38;
    _OWORD *v32 = v37;
  }
  uint64_t v39 = (_OWORD *)(a1 + 984);
  uint64_t v40 = (_OWORD *)(a2 + 984);
  uint64_t v41 = *(void *)(a2 + 1008);
  if (*(void *)(a1 + 1008))
  {
    if (v41)
    {
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      *(void *)(a1 + 992) = *(void *)(a2 + 992);
      *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
      *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
    }
    else
    {
      sub_8EFA8(a1 + 984);
      long long v43 = *(_OWORD *)(a2 + 1000);
      long long v42 = *(_OWORD *)(a2 + 1016);
      _OWORD *v39 = *v40;
      *(_OWORD *)(a1 + 1000) = v43;
      *(_OWORD *)(a1 + 1016) = v42;
    }
  }
  else if (v41)
  {
    *(void *)(a1 + 984) = *(void *)(a2 + 984);
    *(void *)(a1 + 992) = *(void *)(a2 + 992);
    *(void *)(a1 + 1000) = *(void *)(a2 + 1000);
    *(void *)(a1 + 1008) = *(void *)(a2 + 1008);
    *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
    *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v44 = *v40;
    long long v45 = *(_OWORD *)(a2 + 1016);
    *(_OWORD *)(a1 + 1000) = *(_OWORD *)(a2 + 1000);
    *(_OWORD *)(a1 + 1016) = v45;
    _OWORD *v39 = v44;
  }
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(void *)(a1 + 1040) = *(void *)(a2 + 1040);
  *(void *)(a1 + 1048) = *(void *)(a2 + 1048);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v46 = (_OWORD *)(a1 + 1064);
  uint64_t v47 = (_OWORD *)(a2 + 1064);
  uint64_t v48 = *(void *)(a2 + 1088);
  if (*(void *)(a1 + 1088))
  {
    if (v48)
    {
      *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
      *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
      *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
      *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
      *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
      *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    }
    else
    {
      sub_8EFFC(a1 + 1064);
      *uint64_t v46 = *v47;
      long long v50 = *(_OWORD *)(a2 + 1096);
      long long v49 = *(_OWORD *)(a2 + 1112);
      long long v51 = *(_OWORD *)(a2 + 1080);
      *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
      *(_OWORD *)(a1 + 1096) = v50;
      *(_OWORD *)(a1 + 1112) = v49;
      *(_OWORD *)(a1 + 1080) = v51;
    }
  }
  else if (v48)
  {
    *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
    *(void *)(a1 + 1072) = *(void *)(a2 + 1072);
    *(void *)(a1 + 1080) = *(void *)(a2 + 1080);
    *(void *)(a1 + 1088) = *(void *)(a2 + 1088);
    *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
    *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
    *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
    *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
    *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    *uint64_t v46 = *v47;
    long long v52 = *(_OWORD *)(a2 + 1080);
    long long v53 = *(_OWORD *)(a2 + 1096);
    long long v54 = *(_OWORD *)(a2 + 1112);
    *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    *(_OWORD *)(a1 + 1096) = v53;
    *(_OWORD *)(a1 + 1112) = v54;
    *(_OWORD *)(a1 + 1080) = v52;
  }
  *(void *)(a1 + 1136) = *(void *)(a2 + 1136);
  *(void *)(a1 + 1144) = *(void *)(a2 + 1144);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for BookClusteringRequest(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x4B0uLL);
}

uint64_t assignWithTake for BookClusteringRequest(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = (unsigned char *)(a2 + 464);
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(_WORD *)(a1 + 24) = *(_WORD *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 40) = *(unsigned char *)(a2 + 40);
  *(unsigned char *)(a1 + 41) = *(unsigned char *)(a2 + 41);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(unsigned char *)(a1 + 56) = *(unsigned char *)(a2 + 56);
  *(_WORD *)(a1 + 64) = *(_WORD *)(a2 + 64);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(_WORD *)(a1 + 80) = *(_WORD *)(a2 + 80);
  uint64_t v5 = *(void *)(a2 + 96);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = v5;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(_OWORD *)(a1 + 120) = *(_OWORD *)(a2 + 120);
  *(_OWORD *)(a1 + 136) = *(_OWORD *)(a2 + 136);
  *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(_OWORD *)(a1 + 176) = *(_OWORD *)(a2 + 176);
  *(void *)(a1 + 192) = *(void *)(a2 + 192);
  *(void *)(a1 + 200) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = *(void *)(a2 + 208);
  *(_OWORD *)(a1 + 216) = *(_OWORD *)(a2 + 216);
  *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
  *(_OWORD *)(a1 + 248) = *(_OWORD *)(a2 + 248);
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  long long v6 = *(_OWORD *)(a2 + 288);
  *(_OWORD *)(a1 + 272) = *(_OWORD *)(a2 + 272);
  *(_OWORD *)(a1 + 288) = v6;
  long long v7 = *(_OWORD *)(a2 + 320);
  *(_OWORD *)(a1 + 304) = *(_OWORD *)(a2 + 304);
  *(_OWORD *)(a1 + 320) = v7;
  long long v8 = *(_OWORD *)(a2 + 352);
  *(_OWORD *)(a1 + 336) = *(_OWORD *)(a2 + 336);
  *(_OWORD *)(a1 + 352) = v8;
  long long v9 = *(_OWORD *)(a2 + 384);
  *(_OWORD *)(a1 + 368) = *(_OWORD *)(a2 + 368);
  *(_OWORD *)(a1 + 384) = v9;
  long long v10 = *(_OWORD *)(a2 + 416);
  *(_OWORD *)(a1 + 400) = *(_OWORD *)(a2 + 400);
  *(_OWORD *)(a1 + 416) = v10;
  *(void *)(a1 + 432) = *(void *)(a2 + 432);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 440) = *(void *)(a2 + 440);
  *(_OWORD *)(a1 + 448) = *(_OWORD *)(a2 + 448);
  *(unsigned char *)(a1 + 464) = *(unsigned char *)(a2 + 464);
  *(unsigned char *)(a1 + 465) = v4[1];
  *(unsigned char *)(a1 + 466) = v4[2];
  *(void *)(a1 + 472) = *(void *)(a2 + 472);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 480) = *(void *)(a2 + 480);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 488) = *(void *)(a2 + 488);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 496) = *(unsigned char *)(a2 + 496);
  uint64_t v11 = *(void *)(a2 + 512);
  *(void *)(a1 + 504) = *(void *)(a2 + 504);
  *(void *)(a1 + 512) = v11;
  *(void *)(a1 + 520) = *(void *)(a2 + 520);
  *(void *)(a1 + 528) = *(void *)(a2 + 528);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 536) = *(void *)(a2 + 536);
  *(void *)(a1 + 544) = *(void *)(a2 + 544);
  *(void *)(a1 + 552) = *(void *)(a2 + 552);
  *(void *)(a1 + 560) = *(void *)(a2 + 560);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 568) = *(void *)(a2 + 568);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 576) = v4[112];
  *(void *)(a1 + 584) = *(void *)(a2 + 584);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 592) = *(void *)(a2 + 592);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 600) = *(void *)(a2 + 600);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 608) = *(void *)(a2 + 608);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 616) = *(void *)(a2 + 616);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 624) = *(void *)(a2 + 624);
  *(void *)(a1 + 632) = *(void *)(a2 + 632);
  *(unsigned char *)(a1 + 640) = v4[176];
  *(void *)(a1 + 648) = *(void *)(a2 + 648);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 656) = v4[192];
  *(unsigned char *)(a1 + 657) = v4[193];
  *(void *)(a1 + 664) = *(void *)(a2 + 664);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 672) = v4[208];
  *(unsigned char *)(a1 + 673) = v4[209];
  *(unsigned char *)(a1 + 680) = v4[216];
  *(void *)(a1 + 688) = *(void *)(a2 + 688);
  *(_OWORD *)(a1 + 696) = *(_OWORD *)(a2 + 696);
  *(void *)(a1 + 712) = *(void *)(a2 + 712);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 720) = *(void *)(a2 + 720);
  *(void *)(a1 + 728) = *(void *)(a2 + 728);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 736) = *(void *)(a2 + 736);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 744) = *(void *)(a2 + 744);
  if (*(void *)(a1 + 920))
  {
    uint64_t v12 = *(void *)(a2 + 920);
    if (v12)
    {
      *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
      *(void *)(a1 + 768) = *(void *)(a2 + 768);
      *(void *)(a1 + 776) = *(void *)(a2 + 776);
      long long v13 = *(_OWORD *)(a2 + 800);
      *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
      *(_OWORD *)(a1 + 800) = v13;
      long long v14 = *(_OWORD *)(a2 + 832);
      *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
      *(_OWORD *)(a1 + 832) = v14;
      long long v15 = *(_OWORD *)(a2 + 864);
      *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
      *(_OWORD *)(a1 + 864) = v15;
      long long v16 = *(_OWORD *)(a2 + 896);
      *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
      *(_OWORD *)(a1 + 896) = v16;
      *(void *)(a1 + 912) = *(void *)(a2 + 912);
      *(void *)(a1 + 920) = v12;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 928) = *(void *)(a2 + 928);
      swift_bridgeObjectRelease();
      goto LABEL_6;
    }
    sub_8EF00(a1 + 752);
  }
  long long v17 = *(_OWORD *)(a2 + 896);
  *(_OWORD *)(a1 + 880) = *(_OWORD *)(a2 + 880);
  *(_OWORD *)(a1 + 896) = v17;
  *(_OWORD *)(a1 + 912) = *(_OWORD *)(a2 + 912);
  *(void *)(a1 + 928) = *(void *)(a2 + 928);
  long long v18 = *(_OWORD *)(a2 + 832);
  *(_OWORD *)(a1 + 816) = *(_OWORD *)(a2 + 816);
  *(_OWORD *)(a1 + 832) = v18;
  long long v19 = *(_OWORD *)(a2 + 864);
  *(_OWORD *)(a1 + 848) = *(_OWORD *)(a2 + 848);
  *(_OWORD *)(a1 + 864) = v19;
  long long v20 = *(_OWORD *)(a2 + 768);
  *(_OWORD *)(a1 + 752) = *(_OWORD *)(a2 + 752);
  *(_OWORD *)(a1 + 768) = v20;
  long long v21 = *(_OWORD *)(a2 + 800);
  *(_OWORD *)(a1 + 784) = *(_OWORD *)(a2 + 784);
  *(_OWORD *)(a1 + 800) = v21;
LABEL_6:
  if (*(void *)(a1 + 944))
  {
    uint64_t v22 = *(void *)(a2 + 944);
    if (v22)
    {
      *(void *)(a1 + 936) = *(void *)(a2 + 936);
      *(void *)(a1 + 944) = v22;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 952) = *(void *)(a2 + 952);
      *(void *)(a1 + 960) = *(void *)(a2 + 960);
      swift_bridgeObjectRelease();
      *(void *)(a1 + 968) = *(void *)(a2 + 968);
      *(void *)(a1 + 976) = *(void *)(a2 + 976);
      swift_bridgeObjectRelease();
      goto LABEL_11;
    }
    sub_8EF54(a1 + 936);
  }
  long long v23 = *(_OWORD *)(a2 + 952);
  *(_OWORD *)(a1 + 936) = *(_OWORD *)(a2 + 936);
  *(_OWORD *)(a1 + 952) = v23;
  *(_OWORD *)(a1 + 968) = *(_OWORD *)(a2 + 968);
LABEL_11:
  if (*(void *)(a1 + 1008))
  {
    uint64_t v24 = *(void *)(a2 + 1008);
    if (v24)
    {
      *(void *)(a1 + 984) = *(void *)(a2 + 984);
      *(_OWORD *)(a1 + 992) = *(_OWORD *)(a2 + 992);
      *(void *)(a1 + 1008) = v24;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 1016) = *(void *)(a2 + 1016);
      *(void *)(a1 + 1024) = *(void *)(a2 + 1024);
      swift_bridgeObjectRelease();
      goto LABEL_16;
    }
    sub_8EFA8(a1 + 984);
  }
  long long v25 = *(_OWORD *)(a2 + 1000);
  *(_OWORD *)(a1 + 984) = *(_OWORD *)(a2 + 984);
  *(_OWORD *)(a1 + 1000) = v25;
  *(_OWORD *)(a1 + 1016) = *(_OWORD *)(a2 + 1016);
LABEL_16:
  *(void *)(a1 + 1032) = *(void *)(a2 + 1032);
  *(_OWORD *)(a1 + 1040) = *(_OWORD *)(a2 + 1040);
  *(void *)(a1 + 1056) = *(void *)(a2 + 1056);
  swift_bridgeObjectRelease();
  if (!*(void *)(a1 + 1088))
  {
LABEL_20:
    long long v27 = *(_OWORD *)(a2 + 1112);
    *(_OWORD *)(a1 + 1096) = *(_OWORD *)(a2 + 1096);
    *(_OWORD *)(a1 + 1112) = v27;
    *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
    long long v28 = *(_OWORD *)(a2 + 1080);
    *(_OWORD *)(a1 + 1064) = *(_OWORD *)(a2 + 1064);
    *(_OWORD *)(a1 + 1080) = v28;
    goto LABEL_21;
  }
  uint64_t v26 = *(void *)(a2 + 1088);
  if (!v26)
  {
    sub_8EFFC(a1 + 1064);
    goto LABEL_20;
  }
  *(void *)(a1 + 1064) = *(void *)(a2 + 1064);
  *(_OWORD *)(a1 + 1072) = *(_OWORD *)(a2 + 1072);
  *(void *)(a1 + 1088) = v26;
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1096) = *(void *)(a2 + 1096);
  *(void *)(a1 + 1104) = *(void *)(a2 + 1104);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1112) = *(void *)(a2 + 1112);
  *(void *)(a1 + 1120) = *(void *)(a2 + 1120);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1128) = *(void *)(a2 + 1128);
LABEL_21:
  *(_OWORD *)(a1 + 1136) = *(_OWORD *)(a2 + 1136);
  *(void *)(a1 + 1152) = *(void *)(a2 + 1152);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1160) = *(void *)(a2 + 1160);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1168) = *(void *)(a2 + 1168);
  *(void *)(a1 + 1176) = *(void *)(a2 + 1176);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1184) = *(void *)(a2 + 1184);
  swift_bridgeObjectRelease();
  *(void *)(a1 + 1192) = *(void *)(a2 + 1192);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookClusteringRequest(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 1200)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookClusteringRequest(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 1192) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 200) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 120) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 40) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 1176) = 0u;
    *(_OWORD *)(result + 1160) = 0u;
    *(_OWORD *)(result + 1144) = 0u;
    *(_OWORD *)(result + 1128) = 0u;
    *(_OWORD *)(result + 1112) = 0u;
    *(_OWORD *)(result + 1096) = 0u;
    *(_OWORD *)(result + 1080) = 0u;
    *(_OWORD *)(result + 1064) = 0u;
    *(_OWORD *)(result + 1048) = 0u;
    *(_OWORD *)(result + 1032) = 0u;
    *(_OWORD *)(result + 1016) = 0u;
    *(_OWORD *)(result + 1000) = 0u;
    *(_OWORD *)(result + 984) = 0u;
    *(_OWORD *)(result + 968) = 0u;
    *(_OWORD *)(result + 952) = 0u;
    *(_OWORD *)(result + 936) = 0u;
    *(_OWORD *)(result + 920) = 0u;
    *(_OWORD *)(result + 904) = 0u;
    *(_OWORD *)(result + 888) = 0u;
    *(_OWORD *)(result + 872) = 0u;
    *(_OWORD *)(result + 856) = 0u;
    *(_OWORD *)(result + 840) = 0u;
    *(_OWORD *)(result + 824) = 0u;
    *(_OWORD *)(result + 808) = 0u;
    *(_OWORD *)(result + 792) = 0u;
    *(_OWORD *)(result + 776) = 0u;
    *(_OWORD *)(result + 760) = 0u;
    *(_OWORD *)(result + 744) = 0u;
    *(_OWORD *)(result + 728) = 0u;
    *(_OWORD *)(result + 712) = 0u;
    *(_OWORD *)(result + 696) = 0u;
    *(_OWORD *)(result + 680) = 0u;
    *(_OWORD *)(result + 664) = 0u;
    *(_OWORD *)(result + 648) = 0u;
    *(_OWORD *)(result + 632) = 0u;
    *(_OWORD *)(result + 616) = 0u;
    *(_OWORD *)(result + 600) = 0u;
    *(_OWORD *)(result + 584) = 0u;
    *(_OWORD *)(result + 568) = 0u;
    *(_OWORD *)(result + 552) = 0u;
    *(_OWORD *)(result + 536) = 0u;
    *(_OWORD *)(result + 520) = 0u;
    *(_OWORD *)(result + 504) = 0u;
    *(_OWORD *)(result + 488) = 0u;
    *(_OWORD *)(result + 472) = 0u;
    *(_OWORD *)(result + 456) = 0u;
    *(_OWORD *)(result + 440) = 0u;
    *(_OWORD *)(result + 424) = 0u;
    *(_OWORD *)(result + 408) = 0u;
    *(_OWORD *)(result + 392) = 0u;
    *(_OWORD *)(result + 376) = 0u;
    *(_OWORD *)(result + 360) = 0u;
    *(_OWORD *)(result + 344) = 0u;
    *(_OWORD *)(result + 328) = 0u;
    *(_OWORD *)(result + 312) = 0u;
    *(_OWORD *)(result + 296) = 0u;
    *(_OWORD *)(result + 280) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 1200) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 1200) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookClusteringRequest()
{
  return &type metadata for BookClusteringRequest;
}

uint64_t type metadata accessor for DefaultBookClusteringService()
{
  return self;
}

unsigned char *storeEnumTagSinglePayload for BookClusteringRequest.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 4 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 4) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFC) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFB)
  {
    unsigned int v6 = ((a2 - 252) >> 8) + 1;
    *__n128 result = a2 + 4;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F784CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 4;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookClusteringRequest.CodingKeys()
{
  return &type metadata for BookClusteringRequest.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for BookClusteringResult.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F7950);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookClusteringResult.CodingKeys()
{
  return &type metadata for BookClusteringResult.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClusteringOptions.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 6 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 6) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFA) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF9)
  {
    unsigned int v6 = ((a2 - 250) >> 8) + 1;
    *__n128 result = a2 + 6;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F7A54);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 6;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusteringOptions.CodingKeys()
{
  return &type metadata for ClusteringOptions.CodingKeys;
}

unsigned char *storeEnumTagSinglePayload for ClusterableBook.CodingKeys(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 5 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 5) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFB) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFA)
  {
    unsigned int v6 = ((a2 - 251) >> 8) + 1;
    *__n128 result = a2 + 5;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x1F7B58);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 5;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ClusterableBook.CodingKeys()
{
  return &type metadata for ClusterableBook.CodingKeys;
}

unint64_t sub_1F7B94()
{
  unint64_t result = qword_274B30;
  if (!qword_274B30)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B30);
  }
  return result;
}

unint64_t sub_1F7BEC()
{
  unint64_t result = qword_274B38;
  if (!qword_274B38)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B38);
  }
  return result;
}

unint64_t sub_1F7C44()
{
  unint64_t result = qword_274B40;
  if (!qword_274B40)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B40);
  }
  return result;
}

unint64_t sub_1F7C9C()
{
  unint64_t result = qword_274B48;
  if (!qword_274B48)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B48);
  }
  return result;
}

unint64_t sub_1F7CF4()
{
  unint64_t result = qword_274B50;
  if (!qword_274B50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B50);
  }
  return result;
}

unint64_t sub_1F7D4C()
{
  unint64_t result = qword_274B58;
  if (!qword_274B58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B58);
  }
  return result;
}

unint64_t sub_1F7DA4()
{
  unint64_t result = qword_274B60;
  if (!qword_274B60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B60);
  }
  return result;
}

unint64_t sub_1F7DFC()
{
  unint64_t result = qword_274B68;
  if (!qword_274B68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B68);
  }
  return result;
}

unint64_t sub_1F7E54()
{
  unint64_t result = qword_274B70;
  if (!qword_274B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B70);
  }
  return result;
}

unint64_t sub_1F7EAC()
{
  unint64_t result = qword_274B78;
  if (!qword_274B78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B78);
  }
  return result;
}

unint64_t sub_1F7F04()
{
  unint64_t result = qword_274B80;
  if (!qword_274B80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B80);
  }
  return result;
}

unint64_t sub_1F7F5C()
{
  unint64_t result = qword_274B88;
  if (!qword_274B88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B88);
  }
  return result;
}

void *sub_1F7FB0(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 16);
  if (!v2) {
    return _swiftEmptyArrayStorage;
  }
  uint64_t v4 = a1;
  uint64_t v5 = 0;
  long long v38 = _swiftEmptyArrayStorage;
  uint64_t v27 = swift_bridgeObjectRetain();
  do
  {
    if (*(void *)(a2 + 16))
    {
      uint64_t v7 = *(void *)(v4 + v5 + 32);
      char v40 = *(unsigned char *)(v4 + v5 + 40);
      uint64_t v41 = *(void *)(v4 + v5 + 48);
      char v39 = *(unsigned char *)(v4 + v5 + 56);
      uint64_t v8 = *(void *)(v4 + v5 + 64);
      char v9 = *(unsigned char *)(v4 + v5 + 72);
      uint64_t v10 = *(void *)(v4 + v5 + 80);
      uint64_t v42 = *(void *)(v4 + v5 + 88);
      uint64_t v11 = *(void *)(v4 + v5 + 96);
      uint64_t v12 = *(void *)(v4 + v5 + 104);
      uint64_t v13 = sub_56168(v7);
      if (v14)
      {
        uint64_t v28 = v7;
        uint64_t v15 = *(void *)(a2 + 56) + 152 * v13;
        uint64_t v16 = v8;
        uint64_t v17 = *(void *)(v15 + 80);
        uint64_t v18 = *(void *)(v15 + 88);
        char v19 = v9;
        uint64_t v21 = *(void *)(v15 + 96);
        uint64_t v20 = *(void *)(v15 + 104);
        uint64_t v32 = *(void *)(v15 + 120);
        uint64_t v33 = *(void *)(v15 + 112);
        uint64_t v30 = *(void *)(v15 + 136);
        uint64_t v31 = *(void *)(v15 + 128);
        char v29 = *(unsigned char *)(v15 + 144);
        uint64_t v35 = v16;
        char v34 = v19;
        sub_5480C(v16, v19);
        swift_bridgeObjectRetain();
        uint64_t v36 = v17;
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        swift_bridgeObjectRetain();
        uint64_t v22 = v38;
        uint64_t v37 = v10;
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          uint64_t v22 = sub_41DE0(0, v38[2] + 1, 1, v38);
        }
        unint64_t v24 = v22[2];
        unint64_t v23 = v22[3];
        long long v25 = v22;
        if (v24 >= v23 >> 1) {
          long long v25 = sub_41DE0((void *)(v23 > 1), v24 + 1, 1, v22);
        }
        long long v38 = v25;
        v25[2] = v24 + 1;
        unsigned int v6 = &v25[19 * v24];
        void v6[4] = v28;
        *((unsigned char *)v6 + 40) = v40;
        *(_DWORD *)((char *)v6 + 41) = *(_DWORD *)v45;
        *((_DWORD *)v6 + 11) = *(_DWORD *)&v45[3];
        v6[6] = v41;
        *((unsigned char *)v6 + 56) = v39;
        *((_DWORD *)v6 + 15) = *(_DWORD *)&v44[3];
        *(_DWORD *)((char *)v6 + 57) = *(_DWORD *)v44;
        v6[8] = v35;
        *((unsigned char *)v6 + 72) = v34;
        *((_DWORD *)v6 + 19) = *(_DWORD *)&v43[3];
        *(_DWORD *)((char *)v6 + 73) = *(_DWORD *)v43;
        v6[10] = v37;
        v6[11] = v42;
        v6[12] = v11;
        v6[13] = v12;
        v6[14] = v36;
        v6[15] = v18;
        v6[16] = v21;
        v6[17] = v20;
        v6[18] = v33;
        v6[19] = v32;
        v6[20] = v31;
        v6[21] = v30;
        *((unsigned char *)v6 + 176) = v29;
        uint64_t v4 = v27;
      }
    }
    v5 += 80;
    --v2;
  }
  while (v2);
  swift_bridgeObjectRelease();
  return v38;
}

uint64_t sub_1F825C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = a1 + 64;
  uint64_t v5 = -1 << *(unsigned char *)(a1 + 32);
  if (-v5 < 64) {
    uint64_t v6 = ~(-1 << -(char)v5);
  }
  else {
    uint64_t v6 = -1;
  }
  unint64_t v7 = v6 & *(void *)(a1 + 64);
  int64_t v31 = (unint64_t)(63 - v5) >> 6;
  uint64_t result = swift_bridgeObjectRetain();
  int64_t v9 = 0;
  while (v7)
  {
    unint64_t v16 = __clz(__rbit64(v7));
    v7 &= v7 - 1;
    unint64_t v17 = v16 | (v9 << 6);
LABEL_34:
    uint64_t v26 = *(void *)(*(void *)(a1 + 48) + 8 * v17);
    double v27 = 1.0;
    if (*(void *)(a2 + 16))
    {
      unint64_t v28 = sub_4C900(*(unsigned char *)(*(void *)(a1 + 56) + v17));
      if (v29) {
        double v27 = *(double *)(*(void *)(a2 + 56) + 8 * v28);
      }
    }
    unint64_t v30 = _swiftEmptyDictionarySingleton[2];
    if (_swiftEmptyDictionarySingleton[3] <= v30) {
      sub_119278(v30 + 1, 1);
    }
    uint64_t result = sub_1FC7D0();
    uint64_t v10 = &_swiftEmptyDictionarySingleton[8];
    uint64_t v11 = -1 << LOBYTE(_swiftEmptyDictionarySingleton[4]);
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    if (((-1 << v12) & ~_swiftEmptyDictionarySingleton[(v12 >> 6) + 8]) != 0)
    {
      unint64_t v14 = __clz(__rbit64((-1 << v12) & ~_swiftEmptyDictionarySingleton[(v12 >> 6) + 8])) | v12 & 0x7FFFFFFFFFFFFFC0;
    }
    else
    {
      char v22 = 0;
      unint64_t v23 = (unint64_t)(63 - v11) >> 6;
      do
      {
        if (++v13 == v23 && (v22 & 1) != 0)
        {
          __break(1u);
          goto LABEL_40;
        }
        BOOL v24 = v13 == v23;
        if (v13 == v23) {
          unint64_t v13 = 0;
        }
        v22 |= v24;
        uint64_t v25 = v10[v13];
      }
      while (v25 == -1);
      unint64_t v14 = __clz(__rbit64(~v25)) + (v13 << 6);
    }
    *(void *)((char *)v10 + ((v14 >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << v14;
    uint64_t v15 = 8 * v14;
    *(void *)(_swiftEmptyDictionarySingleton[6] + v15) = v26;
    *(double *)(_swiftEmptyDictionarySingleton[7] + v15) = v27;
    ++_swiftEmptyDictionarySingleton[2];
  }
  int64_t v18 = v9 + 1;
  if (__OFADD__(v9, 1))
  {
LABEL_40:
    __break(1u);
    goto LABEL_41;
  }
  if (v18 >= v31) {
    goto LABEL_39;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v18);
  int64_t v20 = v9 + 1;
  if (v19) {
    goto LABEL_33;
  }
  int64_t v20 = v9 + 2;
  if (v9 + 2 >= v31) {
    goto LABEL_39;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19) {
    goto LABEL_33;
  }
  int64_t v20 = v9 + 3;
  if (v9 + 3 >= v31) {
    goto LABEL_39;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19) {
    goto LABEL_33;
  }
  int64_t v20 = v9 + 4;
  if (v9 + 4 >= v31) {
    goto LABEL_39;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v20);
  if (v19)
  {
LABEL_33:
    unint64_t v7 = (v19 - 1) & v19;
    unint64_t v17 = __clz(__rbit64(v19)) + (v20 << 6);
    int64_t v9 = v20;
    goto LABEL_34;
  }
  int64_t v21 = v9 + 5;
  if (v9 + 5 >= v31)
  {
LABEL_39:
    sub_1226C();
    return (uint64_t)_swiftEmptyDictionarySingleton;
  }
  unint64_t v19 = *(void *)(v4 + 8 * v21);
  if (v19)
  {
    int64_t v20 = v9 + 5;
    goto LABEL_33;
  }
  while (1)
  {
    int64_t v20 = v21 + 1;
    if (__OFADD__(v21, 1)) {
      break;
    }
    if (v20 >= v31) {
      goto LABEL_39;
    }
    unint64_t v19 = *(void *)(v4 + 8 * v20);
    ++v21;
    if (v19) {
      goto LABEL_33;
    }
  }
LABEL_41:
  __break(1u);
  return result;
}

void *sub_1F8538(uint64_t a1, const void *a2)
{
  uint64_t v4 = sub_61EB8(a1);
  if (v4[2])
  {
    sub_12124(&qword_26D970);
    uint64_t v5 = (void *)sub_1FC2A0();
  }
  else
  {
    uint64_t v5 = _swiftEmptyDictionarySingleton;
  }
  __dst[0] = (uint64_t)v5;
  sub_74F38((uint64_t)v4, 1, __dst);
  swift_bridgeObjectRelease();
  uint64_t v6 = __dst[0];
  int64_t v7 = *(void *)(a1 + 16);
  uint64_t v8 = _swiftEmptyArrayStorage;
  if (v7)
  {
    uint64_t v21 = __dst[0];
    char v22 = a2;
    __dst[0] = (uint64_t)_swiftEmptyArrayStorage;
    sub_467B8(0, v7, 0);
    uint64_t v8 = (void *)__dst[0];
    uint64_t v9 = a1 + 56;
    do
    {
      uint64_t v27 = *(void *)(v9 - 24);
      char v26 = *(unsigned char *)(v9 - 16);
      uint64_t v25 = *(void *)(v9 - 8);
      char v24 = *(unsigned char *)v9;
      uint64_t v10 = *(void *)(v9 + 8);
      char v11 = *(unsigned char *)(v9 + 16);
      uint64_t v12 = *(void *)(v9 + 24);
      uint64_t v23 = *(void *)(v9 + 32);
      uint64_t v13 = *(void *)(v9 + 40);
      uint64_t v14 = *(void *)(v9 + 48);
      sub_5480C(v10, v11);
      __dst[0] = (uint64_t)v8;
      unint64_t v15 = v8[2];
      unint64_t v16 = v8[3];
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      if (v15 >= v16 >> 1)
      {
        sub_467B8(v16 > 1, v15 + 1, 1);
        uint64_t v8 = (void *)__dst[0];
      }
      v8[2] = v15 + 1;
      unint64_t v17 = &v8[10 * v15];
      v17[4] = v27;
      v9 += 152;
      *((unsigned char *)v17 + 40) = v26;
      uint64_t v17[6] = v25;
      *((unsigned char *)v17 + 56) = v24;
      v17[8] = v10;
      *((unsigned char *)v17 + 72) = v11;
      v17[10] = v12;
      v17[11] = v23;
      v17[12] = v13;
      v17[13] = v14;
      --v7;
    }
    while (v7);
    uint64_t v6 = v21;
    a2 = v22;
  }
  memcpy(__dst, a2, 0x16BuLL);
  uint64_t v18 = sub_A4A14(v8, __dst);
  swift_bridgeObjectRelease();
  swift_retain();
  unint64_t v19 = sub_1F7FB0(v18, v6);
  swift_bridgeObjectRelease();
  swift_release_n();
  return v19;
}

uint64_t sub_1F8770(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6F426465726F6373 && a2 == 0xEA00000000006B6FLL;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x4449726F68747561 && a2 == 0xE900000000000073 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x73444965726E6567 && a2 == 0xE800000000000000 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0x6C6F646F6874656DLL && a2 == 0xED0000736569676FLL || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x646F436361736962 && a2 == 0xEA00000000007365 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000010 && a2 == 0x8000000000217F70)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 5;
    }
    else {
      return 6;
    }
  }
}

uint64_t sub_1F8A30(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x736B6F6F426E696DLL && a2 == 0xED0000746E756F43;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x736B6F6F4278616DLL && a2 == 0xED0000746E756F43 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0xD000000000000025 && a2 == 0x8000000000219630 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000019 && a2 == 0x800000000021AEC0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0xD000000000000014 && a2 == 0x800000000021AEE0 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else if (a1 == 0xD000000000000026 && a2 == 0x800000000021AF00 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 5;
  }
  else if (a1 == 0xD00000000000001ALL && a2 == 0x800000000021AF30)
  {
    swift_bridgeObjectRelease();
    return 6;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 6;
    }
    else {
      return 7;
    }
  }
}

uint64_t sub_1F8D20(uint64_t a1, uint64_t a2)
{
  BOOL v2 = a1 == 0x6E656D6D6F636572 && a2 == 0xEF736E6F69746164;
  if (v2 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x64657463656C6573 && a2 == 0xEF7344496B6F6F42)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else
  {
    char v6 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v6) {
      return 1;
    }
    else {
      return 2;
    }
  }
}

uint64_t sub_1F8E5C(uint64_t a1, uint64_t a2)
{
  if (a1 == 0xD000000000000010 && a2 == 0x800000000021AF50 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  else if (a1 == 0x6B6F6F4264656573 && a2 == 0xE900000000000073 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 1;
  }
  else if (a1 == 0x72756769666E6F63 && a2 == 0xED00006E6F697461 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 2;
  }
  else if (a1 == 0xD000000000000011 && a2 == 0x8000000000219610 || (sub_1FC5F0() & 1) != 0)
  {
    swift_bridgeObjectRelease();
    return 3;
  }
  else if (a1 == 0x54644965726E6567 && a2 == 0xEE0068747065446FLL)
  {
    swift_bridgeObjectRelease();
    return 4;
  }
  else
  {
    char v5 = sub_1FC5F0();
    swift_bridgeObjectRelease();
    if (v5) {
      return 4;
    }
    else {
      return 5;
    }
  }
}

unint64_t sub_1F90C8()
{
  unint64_t result = qword_274B90;
  if (!qword_274B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_274B90);
  }
  return result;
}

ValueMetadata *type metadata accessor for InternalBookRecommendationResponse()
{
  return &type metadata for InternalBookRecommendationResponse;
}

uint64_t dispatch thunk of InternalBookRecommendationServiceType.fetchRecommendations(for:)(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  char v11 = (uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(a4 + 8) + **(int **)(a4 + 8));
  uint64_t v9 = (void *)swift_task_alloc();
  *(void *)(v4 + 16) = v9;
  *uint64_t v9 = v4;
  v9[1] = sub_5958;
  return v11(a1, a2, a3, a4);
}

id CachedPersonalizationBookMetadataSeriesMembership.__allocating_init(entity:insertInto:)(void *a1, void *a2)
{
  id v5 = [objc_allocWithZone(v2) initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

id CachedPersonalizationMetadataBISAC.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CachedPersonalizationMetadataBISAC();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for CachedPersonalizationMetadataBISAC()
{
  return self;
}

id CachedPersonalizationMetadataBISAC.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachedPersonalizationMetadataBISAC();
  [super dealloc];
}

id static CachedPersonalizationMetadataBISAC.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_1FB7E0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void *sub_1F9414()
{
  return &protocol witness table for ObjectIdentifier;
}

void sub_1F9420(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 code];
  if (v3)
  {
    uint64_t v4 = v3;
    uint64_t v5 = sub_1FB810();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1F9488(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v3 = sub_1FB7E0();
  }
  else {
    NSString v3 = 0;
  }
  id v4 = v3;
  [v2 setCode:];
}

uint64_t sub_1F94F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CachedPersonalizationMetadataBISAC();
  uint64_t result = sub_1FC070();
  *a1 = result;
  return result;
}

const char *sub_1F953C()
{
  return "code";
}

const char *sub_1F9550()
{
  return "books";
}

id sub_1F955C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 books];
  *a2 = result;
  return result;
}

id sub_1F9598(void *a1, id *a2)
{
  return [*a2 setBooks:*a1];
}

id CachedPersonalizationMetadataBook.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CachedPersonalizationMetadataBook();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for CachedPersonalizationMetadataBook()
{
  return self;
}

id CachedPersonalizationMetadataBook.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachedPersonalizationMetadataBook();
  return [super dealloc];
}

id static CachedPersonalizationMetadataBook.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_1FB7E0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void sub_1F972C(id *a1@<X0>, uint64_t *a2@<X8>)
{
  id v3 = [*a1 deduplicationID];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1FB810();
    uint64_t v7 = v6;
  }
  else
  {
    uint64_t v5 = 0;
    uint64_t v7 = 0;
  }
  *a2 = v5;
  a2[1] = v7;
}

void sub_1F9794(uint64_t a1, void **a2)
{
  id v2 = *a2;
  if (*(void *)(a1 + 8)) {
    NSString v3 = sub_1FB7E0();
  }
  else {
    NSString v3 = 0;
  }
  id v4 = v3;
  [v2 setDeduplicationID:];
}

uint64_t sub_1F9804@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [*a1 downloadTimestamp];
  if (v3)
  {
    id v4 = v3;
    sub_1FB0B0();

    uint64_t v5 = sub_1FB0E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1FB0E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1F98CC(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_12124(&qword_26D638);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B9D20(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    Class isa = sub_1FB060().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  [v7 setDownloadTimestamp:isa];
}

uint64_t sub_1F99F8@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CachedPersonalizationMetadataBook();
  uint64_t result = sub_1FC070();
  *a1 = result;
  return result;
}

const char *sub_1F9A3C()
{
  return "assetID";
}

id sub_1F9A48@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 assetID];
  *a2 = result;
  return result;
}

id sub_1F9A7C(void *a1, id *a2)
{
  return [*a2 setAssetID:*a1];
}

const char *sub_1F9A90()
{
  return "deduplicationID";
}

const char *sub_1F9AA4()
{
  return "downloadTimestamp";
}

const char *sub_1F9AB8()
{
  return "ulyssesEmbedding";
}

id sub_1F9AC4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 ulyssesEmbedding];
  *a2 = result;
  return result;
}

id sub_1F9B00(void *a1, id *a2)
{
  return [*a2 setUlyssesEmbedding:*a1];
}

const char *sub_1F9B14()
{
  return "bisac";
}

id sub_1F9B20@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 bisac];
  *a2 = result;
  return result;
}

id sub_1F9B5C(void *a1, id *a2)
{
  return [*a2 setBisac:*a1];
}

id CachedPersonalizationBookMetadata.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadata();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for CachedPersonalizationBookMetadata()
{
  return self;
}

id CachedPersonalizationBookMetadata.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadata();
  return [super dealloc];
}

id static CachedPersonalizationBookMetadata.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_1FB7E0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_1F9CF0@<X0>(id *a1@<X0>, uint64_t a2@<X8>)
{
  id v3 = [*a1 lastAccessDate];
  if (v3)
  {
    uint64_t v4 = v3;
    sub_1FB0B0();

    uint64_t v5 = sub_1FB0E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56);
    uint64_t v7 = v5;
    uint64_t v8 = a2;
    uint64_t v9 = 0;
  }
  else
  {
    uint64_t v10 = sub_1FB0E0();
    uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56);
    uint64_t v7 = v10;
    uint64_t v8 = a2;
    uint64_t v9 = 1;
  }

  return v6(v8, v9, 1, v7);
}

void sub_1F9DB8(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_12124(&qword_26D638);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B9D20(a1, (uint64_t)v6);
  uint64_t v7 = *a2;
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    Class isa = sub_1FB060().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  [v7 setLastAccessDate:isa];
}

uint64_t sub_1F9EE4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CachedPersonalizationBookMetadata();
  uint64_t result = sub_1FC070();
  *a1 = result;
  return result;
}

id sub_1F9F28@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 assetID];
  *a2 = result;
  return result;
}

id sub_1F9F5C(void *a1, id *a2)
{
  return [*a2 setAssetID:*a1];
}

const char *sub_1F9F70()
{
  return "genresKnown";
}

id sub_1F9F7C@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 genresKnown];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1F9FB0(unsigned __int8 *a1, id *a2)
{
  return [*a2 setGenresKnown:*a1];
}

const char *sub_1F9FC4()
{
  return "lastAccessDate";
}

const char *sub_1F9FD8()
{
  return "mappedAssetID";
}

id sub_1F9FE4@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 mappedAssetID];
  *a2 = result;
  return result;
}

id sub_1FA018(void *a1, id *a2)
{
  return [*a2 setMappedAssetID:*a1];
}

const char *sub_1FA02C()
{
  return "mediaType";
}

id sub_1FA038@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 mediaType];
  *a2 = result;
  return result;
}

id sub_1FA06C(void *a1, id *a2)
{
  return [*a2 setMediaType:*a1];
}

const char *sub_1FA080()
{
  return "authors";
}

id sub_1FA08C@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 authors];
  *a2 = result;
  return result;
}

id sub_1FA0C8(void *a1, id *a2)
{
  return [*a2 setAuthors:*a1];
}

const char *sub_1FA0DC()
{
  return "leafGenres";
}

id sub_1FA0E8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 leafGenres];
  *a2 = result;
  return result;
}

id sub_1FA124(void *a1, id *a2)
{
  return [*a2 setLeafGenres:*a1];
}

const char *sub_1FA138()
{
  return "seriesMembership";
}

id sub_1FA144@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 seriesMembership];
  *a2 = result;
  return result;
}

id sub_1FA180(void *a1, id *a2)
{
  return [*a2 setSeriesMembership:*a1];
}

id CachedPersonalizationBookMetadataAuthor.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadataAuthor();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for CachedPersonalizationBookMetadataAuthor()
{
  return self;
}

id CachedPersonalizationBookMetadataAuthor.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadataAuthor();
  return [super dealloc];
}

id static CachedPersonalizationBookMetadataAuthor.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_1FB7E0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_1FA314@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CachedPersonalizationBookMetadataAuthor();
  uint64_t result = sub_1FC070();
  *a1 = result;
  return result;
}

const char *sub_1FA358()
{
  return "authorID";
}

id sub_1FA364@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 authorID];
  *a2 = result;
  return result;
}

id sub_1FA398(void *a1, id *a2)
{
  return [*a2 setAuthorID:*a1];
}

const char *sub_1FA3AC()
{
  return "metadatas";
}

id sub_1FA3B8@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 metadatas];
  *a2 = result;
  return result;
}

id sub_1FA3F4(void *a1, id *a2)
{
  return [*a2 setMetadatas:*a1];
}

id CachedPersonalizationBookMetadataGenre.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadataGenre();
  [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for CachedPersonalizationBookMetadataGenre()
{
  return self;
}

id CachedPersonalizationBookMetadataGenre.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadataGenre();
  return [super dealloc];
}

id static CachedPersonalizationBookMetadataGenre.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_1FB7E0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

void sub_1FA588(uint64_t a1, void **a2)
{
  uint64_t v4 = sub_12124(&qword_26D638);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1B9D20(a1, (uint64_t)v6);
  objc_super v7 = *a2;
  uint64_t v8 = sub_1FB0E0();
  uint64_t v9 = *(void *)(v8 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v9 + 48))(v6, 1, v8) != 1)
  {
    Class isa = sub_1FB060().super.isa;
    (*(void (**)(char *, uint64_t))(v9 + 8))(v6, v8);
  }
  [v7 setLastAccessDate:isa];
}

uint64_t sub_1FA6B4@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CachedPersonalizationBookMetadataGenre();
  uint64_t result = sub_1FC070();
  *a1 = result;
  return result;
}

const char *sub_1FA6F8()
{
  return "genreID";
}

id sub_1FA704@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 genreID];
  *a2 = result;
  return result;
}

id sub_1FA738(void *a1, id *a2)
{
  return [*a2 setGenreID:*a1];
}

const char *sub_1FA754()
{
  return "path";
}

id sub_1FA760@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 path];
  *a2 = result;
  return result;
}

id sub_1FA79C(void *a1, id *a2)
{
  return [*a2 setPath:*a1];
}

id sub_1FA7B0@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 metadatas];
  *a2 = result;
  return result;
}

id sub_1FA7EC(void *a1, id *a2)
{
  return [*a2 setMetadatas:*a1];
}

id CachedPersonalizationBookMetadataSeriesMembership.init(entity:insertInto:)(void *a1, void *a2)
{
  v7.receiver = v2;
  v7.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadataSeriesMembership();
  id v5 = [super initWithEntity:a1 insertIntoManagedObjectContext:a2];

  return v5;
}

uint64_t type metadata accessor for CachedPersonalizationBookMetadataSeriesMembership()
{
  return self;
}

id CachedPersonalizationBookMetadataSeriesMembership.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CachedPersonalizationBookMetadataSeriesMembership();
  [super dealloc];
}

id static CachedPersonalizationBookMetadataSeriesMembership.fetchRequest()()
{
  id v0 = objc_allocWithZone((Class)NSFetchRequest);
  NSString v1 = sub_1FB7E0();
  id v2 = [v0 initWithEntityName:v1];

  return v2;
}

uint64_t sub_1FA980@<X0>(uint64_t *a1@<X8>)
{
  type metadata accessor for CachedPersonalizationBookMetadataSeriesMembership();
  uint64_t result = sub_1FC070();
  *a1 = result;
  return result;
}

const char *sub_1FA9C4()
{
  return "isOrdered";
}

id sub_1FA9D0@<X0>(id *a1@<X0>, unsigned char *a2@<X8>)
{
  id result = [*a1 isOrdered];
  *a2 = (_BYTE)result;
  return result;
}

id sub_1FAA04(unsigned __int8 *a1, id *a2)
{
  return [*a2 setIsOrdered:*a1];
}

const char *sub_1FAA18()
{
  return "mappedSeriesID";
}

id sub_1FAA24@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 mappedSeriesID];
  *a2 = result;
  return result;
}

id sub_1FAA58(void *a1, id *a2)
{
  return [*a2 setMappedSeriesID:*a1];
}

const char *sub_1FAA6C()
{
  return "ordinal";
}

id sub_1FAA78@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 ordinal];
  *a2 = result;
  return result;
}

id sub_1FAAAC(void *a1, id *a2)
{
  return [*a2 setOrdinal:*a1];
}

const char *sub_1FAAC0()
{
  return "seriesID";
}

id sub_1FAACC@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 seriesID];
  *a2 = result;
  return result;
}

id sub_1FAB00(void *a1, id *a2)
{
  return [*a2 setSeriesID:*a1];
}

const char *sub_1FAB14()
{
  return "book";
}

id sub_1FAB20@<X0>(id *a1@<X0>, void *a2@<X8>)
{
  id result = [*a1 book];
  *a2 = result;
  return result;
}

id sub_1FAB5C(void *a1, id *a2)
{
  return [*a2 setBook:*a1];
}

uint64_t sub_1FAB70()
{
  return URLRequest.httpMethod.setter();
}

uint64_t sub_1FAB80()
{
  return URLRequest.init(url:cachePolicy:timeoutInterval:)();
}

void sub_1FAB90(Swift::String _, Swift::String forHTTPHeaderField)
{
}

uint64_t sub_1FABA0()
{
  return URLRequest.httpBody.getter();
}

uint64_t sub_1FABB0()
{
  return URLRequest.httpBody.setter();
}

void sub_1FABC0(Swift::String_optional _, Swift::String forHTTPHeaderField)
{
}

uint64_t sub_1FABD0()
{
  return type metadata accessor for URLRequest();
}

uint64_t sub_1FABE0()
{
  return type metadata accessor for JSONDecoder.DateDecodingStrategy();
}

uint64_t sub_1FABF0()
{
  return dispatch thunk of JSONDecoder.dateDecodingStrategy.setter();
}

uint64_t sub_1FAC00()
{
  return dispatch thunk of JSONDecoder.decode<A>(_:from:)();
}

uint64_t sub_1FAC10()
{
  return dispatch thunk of JSONDecoder.__allocating_init()();
}

uint64_t sub_1FAC20()
{
  return JSONDecoder.init()();
}

uint64_t sub_1FAC30()
{
  return type metadata accessor for JSONDecoder();
}

uint64_t sub_1FAC40()
{
  return static JSONEncoder.OutputFormatting.sortedKeys.getter();
}

uint64_t sub_1FAC50()
{
  return static JSONEncoder.OutputFormatting.prettyPrinted.getter();
}

uint64_t sub_1FAC60()
{
  return static JSONEncoder.OutputFormatting.withoutEscapingSlashes.getter();
}

uint64_t sub_1FAC70()
{
  return type metadata accessor for JSONEncoder.OutputFormatting();
}

uint64_t sub_1FAC80()
{
  return dispatch thunk of JSONEncoder.outputFormatting.setter();
}

uint64_t sub_1FAC90()
{
  return type metadata accessor for JSONEncoder.DateEncodingStrategy();
}

uint64_t sub_1FACA0()
{
  return dispatch thunk of JSONEncoder.dateEncodingStrategy.setter();
}

uint64_t sub_1FACB0()
{
  return dispatch thunk of JSONEncoder.encode<A>(_:)();
}

uint64_t sub_1FACC0()
{
  return dispatch thunk of JSONEncoder.__allocating_init()();
}

uint64_t sub_1FACD0()
{
  return JSONEncoder.init()();
}

uint64_t sub_1FACE0()
{
  return type metadata accessor for JSONEncoder();
}

uint64_t sub_1FACF0()
{
  return static CharacterSet.controlCharacters.getter();
}

uint64_t sub_1FAD00()
{
  return static CharacterSet.punctuationCharacters.getter();
}

uint64_t sub_1FAD10()
{
  return static CharacterSet.whitespacesAndNewlines.getter();
}

uint64_t sub_1FAD20()
{
  return CharacterSet.formUnion(_:)();
}

uint64_t sub_1FAD30()
{
  return CharacterSet.init()();
}

uint64_t sub_1FAD40()
{
  return type metadata accessor for CharacterSet();
}

uint64_t sub_1FAD50()
{
  return URLQueryItem.init(name:value:)();
}

uint64_t sub_1FAD60()
{
  return type metadata accessor for URLQueryItem();
}

uint64_t sub_1FAD70()
{
  return URLComponents.queryItems.getter();
}

uint64_t sub_1FAD80()
{
  return URLComponents.queryItems.setter();
}

uint64_t sub_1FAD90()
{
  return URLComponents.url.getter();
}

uint64_t sub_1FADA0()
{
  return URLComponents.path.modify();
}

uint64_t sub_1FADB0()
{
  return URLComponents.init(string:)();
}

uint64_t sub_1FADC0()
{
  return type metadata accessor for URLComponents();
}

uint64_t sub_1FADD0()
{
  return __DataStorage.init(bytes:length:)();
}

uint64_t sub_1FADE0()
{
  return __DataStorage._bytes.getter();
}

uint64_t sub_1FADF0()
{
  return __DataStorage._length.getter();
}

uint64_t sub_1FAE00()
{
  return __DataStorage._offset.getter();
}

uint64_t sub_1FAE10()
{
  return type metadata accessor for __DataStorage();
}

uint64_t sub_1FAE20()
{
  return DateComponents.day.getter();
}

uint64_t sub_1FAE30()
{
  return DateComponents.date.getter();
}

uint64_t sub_1FAE40()
{
  return DateComponents.year.getter();
}

uint64_t sub_1FAE50()
{
  return DateComponents.month.getter();
}

uint64_t sub_1FAE60()
{
  return DateComponents.init(calendar:timeZone:era:year:month:day:hour:minute:second:nanosecond:weekday:weekdayOrdinal:quarter:weekOfMonth:weekOfYear:yearForWeekOfYear:)();
}

uint64_t sub_1FAE70()
{
  return type metadata accessor for DateComponents();
}

uint64_t sub_1FAE80()
{
  return LocalizedError.helpAnchor.getter();
}

uint64_t sub_1FAE90()
{
  return LocalizedError.failureReason.getter();
}

uint64_t sub_1FAEA0()
{
  return LocalizedError.recoverySuggestion.getter();
}

uint64_t sub_1FAEB0()
{
  return _convertNSErrorToError(_:)();
}

uint64_t sub_1FAEC0()
{
  return type metadata accessor for NSFastEnumerationIterator();
}

uint64_t sub_1FAED0()
{
  return type metadata accessor for URL.DirectoryHint();
}

uint64_t sub_1FAEE0()
{
  return URL.absoluteString.getter();
}

uint64_t sub_1FAEF0()
{
  return URL.lastPathComponent.getter();
}

void sub_1FAF00(NSURL *retstr@<X8>)
{
}

uint64_t sub_1FAF10()
{
  return URL.appendingPathComponent(_:)();
}

uint64_t sub_1FAF20()
{
  return static URL.== infix(_:_:)();
}

uint64_t sub_1FAF30()
{
  return static URL._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1FAF40(Swift::Bool percentEncoded)
{
  return URL.path(percentEncoded:)(percentEncoded)._countAndFlagsBits;
}

uint64_t sub_1FAF50()
{
  return URL.path.getter();
}

uint64_t sub_1FAF60()
{
  return URL.init(string:)();
}

uint64_t sub_1FAF70()
{
  return URL.appending<A>(path:directoryHint:)();
}

uint64_t sub_1FAF80()
{
  return type metadata accessor for URL();
}

uint64_t sub_1FAF90()
{
  return Data.init(contentsOf:options:)();
}

uint64_t sub_1FAFA0()
{
  return Data.description.getter();
}

uint64_t sub_1FAFB0()
{
  return type metadata accessor for Data.RangeReference();
}

uint64_t sub_1FAFC0()
{
  return Data._Representation.subscript.getter();
}

uint64_t sub_1FAFD0(NSDataBase64EncodingOptions options)
{
  return Data.base64EncodedString(options:)(options)._countAndFlagsBits;
}

uint64_t sub_1FAFE0()
{
  return static Data._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1FAFF0()
{
  return Data.hash(into:)();
}

uint64_t sub_1FB000()
{
  return Data.write(to:options:)();
}

uint64_t sub_1FB010()
{
  return Date.init(timeIntervalSinceReferenceDate:)();
}

uint64_t sub_1FB020()
{
  return Date.description.getter();
}

uint64_t sub_1FB030()
{
  return static Date.distantPast.getter();
}

uint64_t sub_1FB040()
{
  return Date.timeIntervalSince(_:)();
}

uint64_t sub_1FB050()
{
  return Date.addingTimeInterval(_:)();
}

NSDate sub_1FB060()
{
  return Date._bridgeToObjectiveC()();
}

uint64_t sub_1FB070()
{
  return static Date.- infix(_:_:)();
}

uint64_t sub_1FB080()
{
  return Date.init(timeIntervalSinceNow:)();
}

uint64_t sub_1FB090()
{
  return Date.timeIntervalSince1970.getter();
}

uint64_t sub_1FB0A0()
{
  return static Date.== infix(_:_:)();
}

uint64_t sub_1FB0B0()
{
  return static Date._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1FB0C0()
{
  return Date.compare(_:)();
}

uint64_t sub_1FB0D0()
{
  return Date.init()();
}

uint64_t sub_1FB0E0()
{
  return type metadata accessor for Date();
}

uint64_t sub_1FB0F0()
{
  return UUID.uuidString.getter();
}

uint64_t sub_1FB100()
{
  return UUID.init()();
}

uint64_t sub_1FB110()
{
  return type metadata accessor for UUID();
}

uint64_t sub_1FB120()
{
  return Locale.init(identifier:)();
}

uint64_t sub_1FB130()
{
  return Locale.LanguageCode.identifier.getter();
}

uint64_t sub_1FB140()
{
  return type metadata accessor for Locale.LanguageCode();
}

uint64_t sub_1FB150()
{
  return static Locale.preferredLanguages.getter();
}

uint64_t sub_1FB160()
{
  return Locale.Language.languageCode.getter();
}

uint64_t sub_1FB170()
{
  return type metadata accessor for Locale.Language();
}

uint64_t sub_1FB180()
{
  return Locale.language.getter();
}

uint64_t sub_1FB190()
{
  return type metadata accessor for Locale();
}

uint64_t sub_1FB1A0()
{
  return type metadata accessor for Calendar.Identifier();
}

uint64_t sub_1FB1B0()
{
  return Calendar.init(identifier:)();
}

uint64_t sub_1FB1C0()
{
  return Calendar.dateComponents(_:from:)();
}

uint64_t sub_1FB1D0()
{
  return Calendar.timeZone.setter();
}

uint64_t sub_1FB1E0()
{
  return type metadata accessor for Calendar.Component();
}

uint64_t sub_1FB1F0()
{
  return type metadata accessor for Calendar();
}

uint64_t sub_1FB200()
{
  return TimeZone.init(secondsFromGMT:)();
}

uint64_t sub_1FB210()
{
  return static TimeZone.current.getter();
}

uint64_t sub_1FB220()
{
  return type metadata accessor for TimeZone();
}

uint64_t sub_1FB230()
{
  return Definition.inScope(_:)();
}

uint64_t sub_1FB240()
{
  return dispatch thunk of ResolverType.resolve<A>(_:name:)();
}

uint64_t sub_1FB250()
{
  return dispatch thunk of ResolverType.resolve<A>(_:)();
}

uint64_t sub_1FB260()
{
  return dispatch thunk of ResolverType.resolve<A>(_:)();
}

uint64_t sub_1FB270()
{
  return type metadata accessor for CallbackScope();
}

uint64_t sub_1FB280()
{
  return ProxyContainer.public.getter();
}

uint64_t sub_1FB290()
{
  return ProxyContainer.private.getter();
}

uint64_t sub_1FB2A0()
{
  return ProxyContainer.callback.getter();
}

uint64_t sub_1FB2B0()
{
  return StartupTaskType.run(launchOptions:)();
}

uint64_t sub_1FB2C0()
{
  return StartupTaskType.group.getter();
}

uint64_t sub_1FB2D0()
{
  return StartupTaskManager.onStartup(run:)();
}

uint64_t sub_1FB2E0()
{
  return type metadata accessor for StartupTaskManager();
}

uint64_t sub_1FB2F0()
{
  return + infix<A, B>(_:_:)();
}

uint64_t sub_1FB300()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_1FB310()
{
  return RegistrationContainer.register<A>(_:name:factory:)();
}

uint64_t sub_1FB320()
{
  return dispatch thunk of CallbackRegistrationType.whenResolving<A>(_:scope:callback:)();
}

uint64_t sub_1FB330()
{
  return type metadata accessor for StartupTaskExecutionPhase();
}

uint64_t sub_1FB340()
{
  return type metadata accessor for JSON();
}

uint64_t sub_1FB350()
{
  return type metadata accessor for Scope();
}

uint64_t sub_1FB360()
{
  return Promise.init(resolver:)();
}

uint64_t sub_1FB370()
{
  return NonEmpty.map<A>(_:)();
}

uint64_t sub_1FB380()
{
  return NonEmpty.count.getter();
}

uint64_t sub_1FB390()
{
  return NonEmpty.first.getter();
}

uint64_t sub_1FB3A0()
{
  return NonEmpty.elements.getter();
}

uint64_t sub_1FB3B0()
{
  return NonEmpty<>.subscript.getter();
}

uint64_t sub_1FB3C0()
{
  return type metadata accessor for NonEmpty();
}

uint64_t sub_1FB3D0()
{
  return NonEmpty.init(_:)();
}

uint64_t sub_1FB3E0()
{
  return Regex.wholeMatch(in:)();
}

uint64_t sub_1FB3F0()
{
  return Regex<A>.init(_:)();
}

uint64_t sub_1FB400()
{
  return os_log(_:dso:log:type:_:)();
}

uint64_t sub_1FB410()
{
  return Logger.logObject.getter();
}

uint64_t sub_1FB420()
{
  return Logger.init(subsystem:category:)();
}

uint64_t sub_1FB430()
{
  return type metadata accessor for Logger();
}

uint64_t sub_1FB440()
{
  return Logger.init(_:)();
}

uint64_t sub_1FB450()
{
  return WorkService.__allocating_init(configurationManager:analyticsEnabled:configuration:packageService:requestProcessor:setup:tabiResourcesContentDirectory:tabiModelsContentDirectory:tabiUserFeaturesFactory:workEventProcessorRegistry:performanceOptimizationPolicy:)();
}

uint64_t sub_1FB460()
{
  return WorkService.perform<A, B>(_:)();
}

uint64_t sub_1FB480()
{
  return ConfigurationType.identifier.getter();
}

uint64_t sub_1FB490()
{
  return ConfigurationType.isIdentical(to:)();
}

uint64_t sub_1FB4A0()
{
  return ConfigurationType.graphUnloadIdleDuration.getter();
}

uint64_t sub_1FB4B0()
{
  return PackageServiceType.fetchBundledTabiPackages()();
}

uint64_t sub_1FB4C0()
{
  return type metadata accessor for WorkServiceSettings.PerformanceOptimizationPolicy();
}

uint64_t sub_1FB4D0()
{
  return ConfigurationManagerType.bundledConfiguration.getter();
}

uint64_t sub_1FB4E0()
{
  return WorkEventProcessorRegistry.init()();
}

uint64_t sub_1FB4F0()
{
  return Com_Apple_News_Algorithms_Proto_Model_Feature.bytesList.setter();
}

uint64_t sub_1FB500()
{
  return Com_Apple_News_Algorithms_Proto_Model_Feature.floatList.getter();
}

uint64_t sub_1FB510()
{
  return Com_Apple_News_Algorithms_Proto_Model_Feature.floatList.setter();
}

uint64_t sub_1FB520()
{
  return Com_Apple_News_Algorithms_Proto_Model_Feature.int32List.setter();
}

uint64_t sub_1FB530()
{
  return Com_Apple_News_Algorithms_Proto_Model_Feature.int64List.getter();
}

uint64_t sub_1FB540()
{
  return Com_Apple_News_Algorithms_Proto_Model_Feature.init()();
}

uint64_t sub_1FB550()
{
  return type metadata accessor for Com_Apple_News_Algorithms_Proto_Model_Feature();
}

uint64_t sub_1FB560()
{
  return Com_Apple_News_Algorithms_Proto_Model_BytesList.values.setter();
}

uint64_t sub_1FB570()
{
  return Com_Apple_News_Algorithms_Proto_Model_BytesList.init()();
}

uint64_t sub_1FB580()
{
  return type metadata accessor for Com_Apple_News_Algorithms_Proto_Model_BytesList();
}

uint64_t sub_1FB590()
{
  return Com_Apple_News_Algorithms_Proto_Model_FloatList.values.getter();
}

uint64_t sub_1FB5A0()
{
  return Com_Apple_News_Algorithms_Proto_Model_FloatList.values.setter();
}

uint64_t sub_1FB5B0()
{
  return Com_Apple_News_Algorithms_Proto_Model_FloatList.init()();
}

uint64_t sub_1FB5C0()
{
  return type metadata accessor for Com_Apple_News_Algorithms_Proto_Model_FloatList();
}

uint64_t sub_1FB5D0()
{
  return Com_Apple_News_Algorithms_Proto_Model_Int32List.values.setter();
}

uint64_t sub_1FB5E0()
{
  return Com_Apple_News_Algorithms_Proto_Model_Int32List.init()();
}

uint64_t sub_1FB5F0()
{
  return type metadata accessor for Com_Apple_News_Algorithms_Proto_Model_Int32List();
}

uint64_t sub_1FB600()
{
  return Com_Apple_News_Algorithms_Proto_Model_Int64List.values.getter();
}

uint64_t sub_1FB610()
{
  return type metadata accessor for Com_Apple_News_Algorithms_Proto_Model_Int64List();
}

uint64_t sub_1FB620()
{
  return Feature.protoFeature.getter();
}

uint64_t sub_1FB630()
{
  return Feature.string.getter();
}

uint64_t sub_1FB640()
{
  return type metadata accessor for Feature();
}

uint64_t sub_1FB650()
{
  return Request.init(features:outputs:)();
}

uint64_t sub_1FB660()
{
  return type metadata accessor for Request();
}

uint64_t sub_1FB670()
{
  return Features.init(featureMap:)();
}

uint64_t sub_1FB680()
{
  return static Features.empty.getter();
}

uint64_t sub_1FB690()
{
  return type metadata accessor for Features();
}

uint64_t sub_1FB6A0()
{
  return Features.subscript.getter();
}

uint64_t sub_1FB6B0()
{
  return Dictionary.init()();
}

uint64_t sub_1FB6C0()
{
  return Array.init()();
}

uint64_t sub_1FB6D0()
{
  return Set.init()();
}

uint64_t sub_1FB6E0()
{
  return static Dictionary._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1FB6F0()
{
  return Dictionary.description.getter();
}

uint64_t sub_1FB700()
{
  return Dictionary.mapKeysAndValues<A, B>(_:)();
}

uint64_t sub_1FB710()
{
  return Dictionary.compactMapValues<A>(_:)();
}

uint64_t sub_1FB720()
{
  return Dictionary.init(dictionaryLiteral:)();
}

uint64_t sub_1FB730()
{
  return Dictionary.init<A>(uniqueKeysWithValues:)();
}

uint64_t sub_1FB740()
{
  return type metadata accessor for Dictionary.Values();
}

uint64_t sub_1FB750()
{
  return Dictionary.isEmpty.getter();
}

uint64_t sub_1FB760()
{
  return Dictionary.mapValues<A>(_:)();
}

uint64_t sub_1FB770()
{
  return type metadata accessor for Dictionary();
}

uint64_t sub_1FB780()
{
  return Dictionary.init<A>(_:uniquingKeysWith:)();
}

uint64_t sub_1FB790()
{
  return dispatch thunk of Hashable._rawHashValue(seed:)();
}

uint64_t sub_1FB7A0()
{
  return dispatch thunk of Hashable.hash(into:)();
}

uint64_t sub_1FB7B0()
{
  return BidirectionalCollection<>.joined(separator:)();
}

uint64_t sub_1FB7C0()
{
  return MutableCollection.swapAt(_:_:)();
}

uint64_t sub_1FB7D0()
{
  return dispatch thunk of static Equatable.== infix(_:_:)();
}

NSString sub_1FB7E0()
{
  return String._bridgeToObjectiveC()();
}

uint64_t sub_1FB7F0()
{
  return static String._forceBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1FB800()
{
  return static String._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1FB810()
{
  return static String._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1FB820()
{
  return String.data(using:allowLossyConversion:)();
}

uint64_t sub_1FB830()
{
  return String.init(data:encoding:)();
}

uint64_t sub_1FB840()
{
  return String.init(format:_:)();
}

uint64_t sub_1FB850()
{
  return static String.Encoding.utf8.getter();
}

uint64_t sub_1FB860()
{
  return static String.Encoding.ascii.getter();
}

uint64_t sub_1FB870()
{
  return type metadata accessor for String.Encoding();
}

uint64_t sub_1FB880()
{
  return String.init<A>(describing:)();
}

uint64_t sub_1FB890()
{
  return String.lowercased()()._countAndFlagsBits;
}

uint64_t sub_1FB8A0()
{
  return static String._fromSubstring(_:)();
}

uint64_t sub_1FB8B0()
{
  return static String._uncheckedFromUTF8(_:)();
}

uint64_t sub_1FB8C0()
{
  return String.hash(into:)();
}

uint64_t sub_1FB8D0()
{
  return String.count.getter();
}

uint64_t sub_1FB8E0()
{
  return String.index(_:offsetBy:limitedBy:)();
}

void sub_1FB8F0(Swift::String a1)
{
}

Swift::Int sub_1FB900()
{
  return String.UTF8View._foreignCount()();
}

uint64_t sub_1FB910()
{
  return String.UTF8View._foreignIndex(after:)();
}

uint64_t sub_1FB920()
{
  return String.UTF8View._foreignIndex(_:offsetBy:)();
}

uint64_t sub_1FB940()
{
  return String.UTF8View._foreignSubscript(position:)();
}

uint64_t sub_1FB950()
{
  return String.UTF16View.index(_:offsetBy:)();
}

uint64_t sub_1FB960()
{
  return String.init<A>(_:)();
}

uint64_t sub_1FB970()
{
  return String.subscript.getter();
}

uint64_t sub_1FB980()
{
  return dispatch thunk of Sequence.makeIterator()();
}

uint64_t sub_1FB990()
{
  return Sequence.unique<A>(by:)();
}

uint64_t sub_1FB9A0()
{
  return dispatch thunk of Sequence.underestimatedCount.getter();
}

uint64_t sub_1FB9B0()
{
  return dispatch thunk of Sequence._copyToContiguousArray()();
}

uint64_t sub_1FB9C0()
{
  return Sequence.compactMap<A>(_:)();
}

uint64_t sub_1FB9D0()
{
  return Sequence.enumerated()();
}

uint64_t sub_1FB9E0()
{
  return Sequence.filter(_:)();
}

uint64_t sub_1FB9F0()
{
  return Sequence.reduce<A>(into:_:)();
}

uint64_t sub_1FBA00()
{
  return Sequence.sorted(by:)();
}

uint64_t sub_1FBA10()
{
  return Sequence.forEach(_:)();
}

uint64_t sub_1FBA20()
{
  return Sequence.shuffled()();
}

uint64_t sub_1FBA30()
{
  return dispatch thunk of RawRepresentable.rawValue.getter();
}

uint64_t sub_1FBA40()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1FBA50()
{
  return RawRepresentable<>.encode(to:)();
}

uint64_t sub_1FBA60()
{
  return RawRepresentable<>.init(from:)();
}

uint64_t sub_1FBA70()
{
  return RawRepresentable<>.init(from:)();
}

NSArray sub_1FBAA0()
{
  return Array._bridgeToObjectiveC()();
}

uint64_t sub_1FBAB0()
{
  return static Array._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1FBAC0()
{
  return static Array._unconditionallyBridgeFromObjectiveC(_:)();
}

uint64_t sub_1FBAD0()
{
  return Array.description.getter();
}

uint64_t sub_1FBAE0()
{
  return specialized Array._endMutation()();
}

uint64_t sub_1FBAF0()
{
  return Array.mapToDictionary<A>(_:)();
}

uint64_t sub_1FBB00()
{
  return static Array._adoptStorage(_:count:)();
}

uint64_t sub_1FBB10()
{
  return Array._checkSubscript(_:wasNativeTypeChecked:)();
}

uint64_t sub_1FBB20()
{
  return static Array.+ infix(_:_:)();
}

uint64_t sub_1FBB30()
{
  return static Array._allocateUninitialized(_:)();
}

uint64_t sub_1FBB40()
{
  return static Array._allocateBufferUninitialized(minimumCapacity:)();
}

BOOL sub_1FBB50()
{
  return Array._hoistableIsNativeTypeChecked()();
}

uint64_t sub_1FBB60()
{
  return Array.count.getter();
}

uint64_t sub_1FBB70()
{
  return Array.append(_:)();
}

uint64_t sub_1FBB80()
{
  return Array.endIndex.getter();
}

Swift::Int sub_1FBB90()
{
  return Array._getCount()();
}

uint64_t sub_1FBBA0()
{
  return type metadata accessor for Array();
}

uint64_t sub_1FBBB0()
{
  return Array.init<A>(_:)();
}

uint64_t sub_1FBBC0()
{
  return Array.subscript.getter();
}

uint64_t sub_1FBBD0()
{
  return dispatch thunk of Actor.unownedExecutor.getter();
}

uint64_t sub_1FBBE0()
{
  return CheckedContinuation.resume(throwing:)();
}

uint64_t sub_1FBBF0()
{
  return CheckedContinuation.resume(returning:)();
}

uint64_t sub_1FBC00()
{
  return type metadata accessor for CheckedContinuation();
}

uint64_t sub_1FBC10()
{
  return TaskGroup.makeAsyncIterator()();
}

uint64_t sub_1FBC30()
{
  return type metadata accessor for TaskGroup.Iterator();
}

uint64_t sub_1FBC40()
{
  return type metadata accessor for TaskGroup();
}

uint64_t sub_1FBC50()
{
  return TaskPriority.rawValue.getter();
}

uint64_t sub_1FBC60()
{
  return type metadata accessor for TaskPriority();
}

void sub_1FBC70()
{
}

uint64_t sub_1FBC80()
{
  return ThrowingTaskGroup.makeAsyncIterator()();
}

uint64_t sub_1FBCA0()
{
  return Double.write<A>(to:)();
}

uint64_t sub_1FBCB0()
{
  return static Set._conditionallyBridgeFromObjectiveC(_:result:)();
}

uint64_t sub_1FBCC0()
{
  return Set.description.getter();
}

uint64_t sub_1FBCD0()
{
  return Set.init(minimumCapacity:)();
}

uint64_t sub_1FBCE0()
{
  return Set.Index._asCocoa.modify();
}

uint64_t sub_1FBCF0()
{
  return Set.insert(_:)();
}

uint64_t sub_1FBD00()
{
  return type metadata accessor for Set();
}

uint64_t sub_1FBD10()
{
  return dispatch thunk of Collection.startIndex.getter();
}

uint64_t sub_1FBD20()
{
  return dispatch thunk of Collection.count.getter();
}

uint64_t sub_1FBD30()
{
  return dispatch thunk of Collection.formIndex(after:)();
}

uint64_t sub_1FBD40()
{
  return Collection.prefix(_:)();
}

uint64_t sub_1FBD50()
{
  return dispatch thunk of Collection.subscript.read();
}

uint64_t sub_1FBD80()
{
  return static os_log_type_t.info.getter();
}

uint64_t sub_1FBD90()
{
  return static os_log_type_t.debug.getter();
}

uint64_t sub_1FBDA0()
{
  return static os_log_type_t.error.getter();
}

uint64_t sub_1FBDB0()
{
  return static os_log_type_t.fault.getter();
}

uint64_t sub_1FBDC0()
{
  return static os_log_type_t.default.getter();
}

uint64_t sub_1FBDD0()
{
  return static NSKeyedUnarchiver.unarchivedObject(ofClasses:from:)();
}

uint64_t sub_1FBDE0()
{
  return static NSPersistentStore.StoreType.sqlite.getter();
}

uint64_t sub_1FBDF0()
{
  return type metadata accessor for NSPersistentStore.StoreType();
}

void sub_1FBE00()
{
}

Swift::Int sub_1FBE10()
{
  return OS_dispatch_semaphore.signal()();
}

uint64_t sub_1FBE20()
{
  return NSManagedObjectContext.count<A>(for:)();
}

uint64_t sub_1FBE30()
{
  return NSManagedObjectContext.fetch<A>(_:)();
}

uint64_t sub_1FBE40()
{
  return NSPersistentStoreCoordinator.addPersistentStore(type:configuration:at:options:)();
}

uint64_t sub_1FBE50()
{
  return NSSet.makeIterator()();
}

uint64_t sub_1FBE60()
{
  return NSArray.makeIterator()();
}

Swift::Int sub_1FBE70(Swift::Int seed)
{
  return NSObject._rawHashValue(seed:)(seed);
}

uint64_t sub_1FBE80()
{
  return static NSObject.== infix(_:_:)();
}

uint64_t sub_1FBE90()
{
  return NSDecimal.description.getter();
}

uint64_t sub_1FBEA0()
{
  return OS_os_log.init(subsystem:category:)();
}

uint64_t sub_1FBEB0()
{
  return type metadata accessor for Optional();
}

uint64_t sub_1FBEC0()
{
  return dispatch thunk of IteratorProtocol.next()();
}

uint64_t sub_1FBED0()
{
  return UnsafeMutableRawBufferPointer.copyMemory(from:)();
}

uint64_t sub_1FBEE0()
{
  return UnsafeMutableRawBufferPointer.subscript.setter();
}

uint64_t sub_1FBEF0()
{
  return StringProtocol.components(separatedBy:)();
}

uint64_t sub_1FBF00()
{
  return StringProtocol.caseInsensitiveCompare<A>(_:)();
}

uint64_t sub_1FBF10()
{
  return StringProtocol.localizedCaseInsensitiveContains<A>(_:)();
}

uint64_t sub_1FBF20()
{
  return _bridgeAnyObjectToAny(_:)();
}

uint64_t sub_1FBF30()
{
  return ArraySlice.init()();
}

uint64_t sub_1FBF40()
{
  return type metadata accessor for ArraySlice();
}

uint64_t sub_1FBF60()
{
  return dispatch thunk of SetAlgebra.init<A>(_:)();
}

uint64_t sub_1FBF70()
{
  return _HashTable.previousHole(before:)();
}

uint64_t sub_1FBF80()
{
  return _HashTable.nextHole(atOrAfter:)();
}

uint64_t sub_1FBF90()
{
  return __CocoaSet.startIndex.getter();
}

uint64_t sub_1FBFA0()
{
  return __CocoaSet.Index.handleBitPattern.getter();
}

uint64_t sub_1FBFB0()
{
  return __CocoaSet.Index.age.getter();
}

uint64_t sub_1FBFC0()
{
  return __CocoaSet.Index.element.getter();
}

uint64_t sub_1FBFD0()
{
  return __CocoaSet.count.getter();
}

uint64_t sub_1FBFE0()
{
  return __CocoaSet.element(at:)();
}

uint64_t sub_1FBFF0()
{
  return __CocoaSet.formIndex(after:isUnique:)();
}

Swift::Int sub_1FC000(Swift::Int seed)
{
  return AnyHashable._rawHashValue(seed:)(seed);
}

uint64_t sub_1FC010()
{
  return static _SetStorage.copy(original:)();
}

uint64_t sub_1FC020()
{
  return static _SetStorage.resize(original:capacity:move:)();
}

uint64_t sub_1FC030()
{
  return static _SetStorage.allocate(capacity:)();
}

uint64_t sub_1FC040()
{
  return type metadata accessor for _SetStorage();
}

void sub_1FC050(Swift::Int a1)
{
}

uint64_t sub_1FC060()
{
  return _StringGuts.copyUTF8(into:)();
}

uint64_t sub_1FC070()
{
  return Identifiable<>.id.getter();
}

uint64_t sub_1FC080()
{
  return _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1FC090()
{
  return specialized _ArrayBuffer._getElementSlowPath(_:)();
}

uint64_t sub_1FC0A0()
{
  return static DecodingError.dataCorruptedError(in:debugDescription:)();
}

uint64_t sub_1FC0B0()
{
  return static DecodingError.dataCorruptedError<A>(forKey:in:debugDescription:)();
}

uint64_t sub_1FC0C0()
{
  return DecodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1FC0D0()
{
  return DecodingError.Context.debugDescription.getter();
}

uint64_t sub_1FC0E0()
{
  return type metadata accessor for DecodingError.Context();
}

uint64_t sub_1FC0F0()
{
  return type metadata accessor for DecodingError();
}

uint64_t sub_1FC100()
{
  return EncodingError.Context.init(codingPath:debugDescription:underlyingError:)();
}

uint64_t sub_1FC110()
{
  return type metadata accessor for EncodingError.Context();
}

uint64_t sub_1FC120()
{
  return type metadata accessor for EncodingError();
}

uint64_t sub_1FC130()
{
  return _StringObject.sharedUTF8.getter();
}

uint64_t sub_1FC150()
{
  return specialized ContiguousArray._makeUniqueAndReserveCapacityIfNotUnique()();
}

uint64_t sub_1FC160()
{
  return specialized ContiguousArray._endMutation()();
}

void sub_1FC170(Swift::Int a1)
{
}

uint64_t sub_1FC180()
{
  return specialized ContiguousArray._reserveCapacityAssumingUniqueBuffer(oldCount:)();
}

uint64_t sub_1FC190()
{
  return specialized ContiguousArray._appendElementAssumeUniqueAndCapacity(_:newElement:)();
}

uint64_t sub_1FC1A0()
{
  return ContiguousArray.append(_:)();
}

uint64_t sub_1FC1B0()
{
  return ContiguousArray.init()();
}

uint64_t sub_1FC1C0()
{
  return type metadata accessor for ContiguousArray();
}

uint64_t sub_1FC1D0()
{
  return _print_unlocked<A, B>(_:_:)();
}

BOOL sub_1FC1E0(Swift::Bool isUnique, Swift::Int capacity)
{
  return _NativeDictionary.ensureUnique(isUnique:capacity:)(isUnique, capacity);
}

uint64_t sub_1FC1F0()
{
  return _NativeDictionary._insert(at:key:value:)();
}

uint64_t sub_1FC200()
{
  return type metadata accessor for _NativeDictionary();
}

uint64_t sub_1FC210()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1FC220()
{
  return _assertionFailure(_:_:file:line:flags:)();
}

uint64_t sub_1FC230()
{
  return EnumeratedSequence.makeIterator()();
}

uint64_t sub_1FC240()
{
  return EnumeratedSequence.Iterator.next()();
}

uint64_t sub_1FC250()
{
  return type metadata accessor for EnumeratedSequence.Iterator();
}

uint64_t sub_1FC260()
{
  return type metadata accessor for EnumeratedSequence();
}

uint64_t sub_1FC270()
{
  return _CocoaArrayWrapper.endIndex.getter();
}

uint64_t sub_1FC280()
{
  return static _DictionaryStorage.copy(original:)();
}

uint64_t sub_1FC290()
{
  return static _DictionaryStorage.resize(original:capacity:move:)();
}

uint64_t sub_1FC2A0()
{
  return static _DictionaryStorage.allocate(capacity:)();
}

uint64_t sub_1FC2B0()
{
  return _fatalErrorMessage(_:_:file:line:flags:)();
}

Swift::Int sub_1FC2D0(Swift::OpaquePointer cases, Swift::String string)
{
  return _findStringSwitchCase(cases:string:)(cases, string);
}

uint64_t sub_1FC2F0()
{
  return KeyedDecodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1FC300()
{
  return KeyedDecodingContainer.codingPath.getter();
}

uint64_t sub_1FC310()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC320()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC330()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC340()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC350()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC360()
{
  return KeyedDecodingContainer.decodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1FC370()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC380()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC390()
{
  return KeyedDecodingContainer.decodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC3A0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC3B0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC3C0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC3D0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC3E0()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC3F0()
{
  return KeyedDecodingContainer.decode<A>(_:forKey:)();
}

uint64_t sub_1FC400()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC410()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC420()
{
  return KeyedDecodingContainer.decode(_:forKey:)();
}

uint64_t sub_1FC430()
{
  return KeyedDecodingContainer.allKeys.getter();
}

uint64_t sub_1FC440()
{
  return KeyedEncodingContainer.nestedContainer<A>(keyedBy:forKey:)();
}

uint64_t sub_1FC450()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC460()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC470()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC480()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC490()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC4A0()
{
  return KeyedEncodingContainer.encodeIfPresent<A>(_:forKey:)();
}

uint64_t sub_1FC4B0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC4C0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC4D0()
{
  return KeyedEncodingContainer.encodeIfPresent(_:forKey:)();
}

uint64_t sub_1FC4E0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC4F0()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC500()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC510()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC520()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC530()
{
  return KeyedEncodingContainer.encode<A>(_:forKey:)();
}

uint64_t sub_1FC540()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC550()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

uint64_t sub_1FC560()
{
  return KeyedEncodingContainer.encode(_:forKey:)();
}

Swift::Int sub_1FC570(Swift::Int a1)
{
  return _minimumMergeRunLength(_:)(a1);
}

uint64_t sub_1FC580()
{
  return dispatch thunk of CustomStringConvertible.description.getter();
}

uint64_t sub_1FC590()
{
  return type metadata accessor for _ContiguousArrayStorage();
}

uint64_t sub_1FC5B0()
{
  return _getErrorEmbeddedNSError<A>(_:)();
}

uint64_t sub_1FC5C0()
{
  return dispatch thunk of LosslessStringConvertible.init(_:)();
}

uint64_t sub_1FC5D0()
{
  return DefaultStringInterpolation.appendInterpolation<A>(_:)();
}

uint64_t sub_1FC5E0()
{
  return _bridgeAnythingToObjectiveC<A>(_:)();
}

uint64_t sub_1FC5F0()
{
  return _stringCompareWithSmolCheck(_:_:expecting:)();
}

uint64_t sub_1FC600()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC610()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC620()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC630()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC640()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC650()
{
  return dispatch thunk of SingleValueDecodingContainer.decode<A>(_:)();
}

uint64_t sub_1FC660()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC670()
{
  return dispatch thunk of SingleValueDecodingContainer.decode(_:)();
}

uint64_t sub_1FC680()
{
  return dispatch thunk of SingleValueDecodingContainer.decodeNil()();
}

uint64_t sub_1FC690()
{
  return dispatch thunk of SingleValueEncodingContainer.codingPath.getter();
}

uint64_t sub_1FC6A0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC6B0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC6C0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC6D0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC6E0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC6F0()
{
  return dispatch thunk of SingleValueEncodingContainer.encode<A>(_:)();
}

uint64_t sub_1FC700()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC710()
{
  return dispatch thunk of SingleValueEncodingContainer.encode(_:)();
}

uint64_t sub_1FC720()
{
  return dispatch thunk of SingleValueEncodingContainer.encodeNil()();
}

uint64_t sub_1FC730()
{
  return type metadata accessor for __ContiguousArrayStorageBase();
}

uint64_t sub_1FC740()
{
  return _findStringSwitchCaseWithCache(cases:string:cache:)();
}

uint64_t sub_1FC760()
{
  return ELEMENT_TYPE_OF_SET_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1FC770()
{
  return KEY_TYPE_OF_DICTIONARY_VIOLATES_HASHABLE_REQUIREMENTS(_:)();
}

uint64_t sub_1FC780()
{
  return Error.localizedDescription.getter();
}

uint64_t sub_1FC790()
{
  return Error._getEmbeddedNSError()();
}

uint64_t sub_1FC7A0()
{
  return Error._code.getter();
}

uint64_t sub_1FC7B0()
{
  return Error._domain.getter();
}

uint64_t sub_1FC7C0()
{
  return Error._userInfo.getter();
}

uint64_t sub_1FC7D0()
{
  return static Hasher._hash(seed:_:)();
}

uint64_t sub_1FC7E0()
{
  return Hasher.init(_seed:)();
}

void sub_1FC7F0(Swift::UInt a1)
{
}

void sub_1FC800(Swift::UInt8 a1)
{
}

void sub_1FC810(Swift::UInt32 a1)
{
}

void sub_1FC820(Swift::UInt64 a1)
{
}

Swift::Int sub_1FC830()
{
  return Hasher._finalize()();
}

uint64_t sub_1FC840()
{
  return dispatch thunk of Decoder.singleValueContainer()();
}

uint64_t sub_1FC850()
{
  return dispatch thunk of Decoder.container<A>(keyedBy:)();
}

uint64_t sub_1FC860()
{
  return dispatch thunk of Encoder.singleValueContainer()();
}

uint64_t sub_1FC870()
{
  return dispatch thunk of Encoder.container<A>(keyedBy:)();
}

uint64_t sub_1FC8A0()
{
  return _typeName(_:qualified:)();
}

unsigned __int8 *__cdecl CC_SHA256(const void *data, CC_LONG len, unsigned __int8 *md)
{
  return _CC_SHA256(data, len, md);
}

NSString *__cdecl NSStringFromClass(Class aClass)
{
  return _NSStringFromClass(aClass);
}

void *__cdecl _Block_copy(const void *aBlock)
{
  return __Block_copy(aBlock);
}

void _Block_release(const void *aBlock)
{
}

void _os_log_impl(void *dso, os_log_t log, os_log_type_t type, const char *format, uint8_t *buf, uint32_t size)
{
}

uint64_t _swift_stdlib_bridgeErrorToNSError()
{
  return __swift_stdlib_bridgeErrorToNSError();
}

uint64_t _swift_stdlib_reportUnimplementedInitializer()
{
  return __swift_stdlib_reportUnimplementedInitializer();
}

void bzero(void *a1, size_t a2)
{
}

dispatch_semaphore_t dispatch_semaphore_create(intptr_t value)
{
  return _dispatch_semaphore_create(value);
}

long double exp2(long double __x)
{
  return _exp2(__x);
}

uint64_t lround(long double __x)
{
  return _lround(__x);
}

size_t malloc_size(const void *ptr)
{
  return _malloc_size(ptr);
}

int memcmp(const void *__s1, const void *__s2, size_t __n)
{
  return _memcmp(__s1, __s2, __n);
}

void *__cdecl memcpy(void *__dst, const void *__src, size_t __n)
{
  return _memcpy(__dst, __src, __n);
}

void *__cdecl memmove(void *__dst, const void *__src, size_t __len)
{
  return _memmove(__dst, __src, __len);
}

id objc_allocWithZone(Class a1)
{
  return _objc_allocWithZone(a1);
}

id objc_autoreleaseReturnValue(id a1)
{
  return _objc_autoreleaseReturnValue(a1);
}

id objc_msgSend(id a1, SEL a2, ...)
{
  return _[a1 a2];
}

id objc_msgSendSuper2(objc_super *a1, SEL a2, ...)
{
  return [super a2];
}

uint64_t self
{
  return _self;
}

void objc_release(id a1)
{
}

id objc_retain(id a1)
{
  return _objc_retain(a1);
}

id objc_retainAutoreleasedReturnValue(id a1)
{
  return _a1;
}

BOOL os_log_type_enabled(os_log_t oslog, os_log_type_t type)
{
  return _os_log_type_enabled(oslog, type);
}

long double pow(long double __x, long double __y)
{
  return _pow(__x, __y);
}

uint64_t swift_allocBox()
{
  return _swift_allocBox();
}

uint64_t swift_allocError()
{
  return _swift_allocError();
}

uint64_t swift_allocObject()
{
  return _swift_allocObject();
}

uint64_t swift_allocateGenericClassMetadata()
{
  return _swift_allocateGenericClassMetadata();
}

uint64_t swift_arrayDestroy()
{
  return _swift_arrayDestroy();
}

uint64_t swift_arrayInitWithCopy()
{
  return _swift_arrayInitWithCopy();
}

uint64_t swift_arrayInitWithTakeBackToFront()
{
  return _swift_arrayInitWithTakeBackToFront();
}

uint64_t swift_arrayInitWithTakeFrontToBack()
{
  return _swift_arrayInitWithTakeFrontToBack();
}

uint64_t swift_asyncLet_begin()
{
  return _swift_asyncLet_begin();
}

uint64_t swift_beginAccess()
{
  return _swift_beginAccess();
}

uint64_t swift_bridgeObjectRelease()
{
  return _swift_bridgeObjectRelease();
}

uint64_t swift_bridgeObjectRelease_n()
{
  return _swift_bridgeObjectRelease_n();
}

uint64_t swift_bridgeObjectRetain()
{
  return _swift_bridgeObjectRetain();
}

uint64_t swift_bridgeObjectRetain_n()
{
  return _swift_bridgeObjectRetain_n();
}

uint64_t swift_checkMetadataState()
{
  return _swift_checkMetadataState();
}

uint64_t swift_deallocClassInstance()
{
  return _swift_deallocClassInstance();
}

uint64_t swift_defaultActor_destroy()
{
  return _swift_defaultActor_destroy();
}

uint64_t swift_defaultActor_initialize()
{
  return _swift_defaultActor_initialize();
}

uint64_t swift_dynamicCast()
{
  return _swift_dynamicCast();
}

uint64_t swift_dynamicCastClass()
{
  return _swift_dynamicCastClass();
}

uint64_t swift_dynamicCastObjCClass()
{
  return _swift_dynamicCastObjCClass();
}

uint64_t swift_endAccess()
{
  return _swift_endAccess();
}

uint64_t swift_errorRelease()
{
  return _swift_errorRelease();
}

uint64_t swift_errorRetain()
{
  return _swift_errorRetain();
}

uint64_t swift_getAssociatedConformanceWitness()
{
  return _swift_getAssociatedConformanceWitness();
}

uint64_t swift_getAssociatedTypeWitness()
{
  return _swift_getAssociatedTypeWitness();
}

uint64_t swift_getAtKeyPath()
{
  return _swift_getAtKeyPath();
}

uint64_t swift_getDynamicType()
{
  return _swift_getDynamicType();
}

uint64_t swift_getEnumCaseMultiPayload()
{
  return _swift_getEnumCaseMultiPayload();
}

uint64_t swift_getErrorValue()
{
  return _swift_getErrorValue();
}

uint64_t swift_getForeignTypeMetadata()
{
  return _swift_getForeignTypeMetadata();
}

uint64_t swift_getGenericMetadata()
{
  return _swift_getGenericMetadata();
}

uint64_t swift_getKeyPath()
{
  return _swift_getKeyPath();
}

uint64_t swift_getObjCClassFromMetadata()
{
  return _swift_getObjCClassFromMetadata();
}

uint64_t swift_getObjCClassMetadata()
{
  return _swift_getObjCClassMetadata();
}

uint64_t swift_getObjectType()
{
  return _swift_getObjectType();
}

uint64_t swift_getSingletonMetadata()
{
  return _swift_getSingletonMetadata();
}

uint64_t swift_getTupleTypeLayout()
{
  return _swift_getTupleTypeLayout();
}

uint64_t swift_getTupleTypeLayout2()
{
  return _swift_getTupleTypeLayout2();
}

uint64_t swift_getTupleTypeLayout3()
{
  return _swift_getTupleTypeLayout3();
}

uint64_t swift_getTupleTypeMetadata2()
{
  return _swift_getTupleTypeMetadata2();
}

uint64_t swift_getTypeByMangledNameInContext2()
{
  return _swift_getTypeByMangledNameInContext2();
}

uint64_t swift_getTypeByMangledNameInContextInMetadataState2()
{
  return _swift_getTypeByMangledNameInContextInMetadataState2();
}

uint64_t swift_getWitnessTable()
{
  return _swift_getWitnessTable();
}

uint64_t swift_initClassMetadata2()
{
  return _swift_initClassMetadata2();
}

uint64_t swift_initEnumMetadataMultiPayload()
{
  return _swift_initEnumMetadataMultiPayload();
}

uint64_t swift_initEnumMetadataSingleCase()
{
  return _swift_initEnumMetadataSingleCase();
}

uint64_t swift_initEnumMetadataSinglePayload()
{
  return _swift_initEnumMetadataSinglePayload();
}

uint64_t swift_initStackObject()
{
  return _swift_initStackObject();
}

uint64_t swift_initStructMetadata()
{
  return _swift_initStructMetadata();
}

uint64_t swift_isClassType()
{
  return _swift_isClassType();
}

uint64_t swift_isUniquelyReferenced_nonNull()
{
  return _swift_isUniquelyReferenced_nonNull();
}

uint64_t swift_isUniquelyReferenced_nonNull_native()
{
  return _swift_isUniquelyReferenced_nonNull_native();
}

uint64_t swift_makeBoxUnique()
{
  return _swift_makeBoxUnique();
}

uint64_t swift_once()
{
  return _swift_once();
}

uint64_t swift_release()
{
  return _swift_release();
}

uint64_t swift_release_n()
{
  return _swift_release_n();
}

uint64_t swift_retain()
{
  return _swift_retain();
}

uint64_t swift_retain_n()
{
  return _swift_retain_n();
}

uint64_t swift_setDeallocating()
{
  return _swift_setDeallocating();
}

uint64_t swift_slowAlloc()
{
  return _swift_slowAlloc();
}

uint64_t swift_slowDealloc()
{
  return _swift_slowDealloc();
}

uint64_t swift_stdlib_isStackAllocationSafe()
{
  return _swift_stdlib_isStackAllocationSafe();
}

uint64_t swift_stdlib_random()
{
  return _swift_stdlib_random();
}

uint64_t swift_storeEnumTagMultiPayload()
{
  return _swift_storeEnumTagMultiPayload();
}

uint64_t swift_task_alloc()
{
  return _swift_task_alloc();
}

uint64_t swift_task_create()
{
  return _swift_task_create();
}

uint64_t swift_task_dealloc()
{
  return _swift_task_dealloc();
}

uint64_t swift_unexpectedError()
{
  return _swift_unexpectedError();
}

uint64_t swift_unknownObjectRelease()
{
  return _swift_unknownObjectRelease();
}

uint64_t swift_unknownObjectRelease_n()
{
  return _swift_unknownObjectRelease_n();
}

uint64_t swift_unknownObjectRetain()
{
  return _swift_unknownObjectRetain();
}

uint64_t swift_unknownObjectRetain_n()
{
  return _swift_unknownObjectRetain_n();
}

uint64_t swift_updateClassMetadata2()
{
  return _swift_updateClassMetadata2();
}

uint64_t swift_willThrow()
{
  return _swift_willThrow();
}