uint64_t sub_10012F890(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10012FAB8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10012FADC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = [WeakRetained rootBarCoordinator];
  v4 = [v3 hostingViewController];
  v5 = [v4 bc_firstVisibleChildViewControllerOfClass:objc_opt_class() includePresented:1];

  if (v5)
  {
    uint64_t v6 = *(unsigned __int8 *)(a1 + 48);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    v12[2] = sub_10012FD1C;
    v12[3] = &unk_100A44E60;
    char v14 = v6;
    id v13 = *(id *)(a1 + 32);
    [v5 popAllCardsAnimated:v6 completion:v12];
    if (*(unsigned char *)(a1 + 48))
    {
      v7 = [v5 transitionCoordinator];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_10012FE04;
      v10[3] = &unk_100A44DA8;
      id v11 = *(id *)(a1 + 32);
      [v7 animateAlongsideTransition:0 completion:v10];
    }
    v8 = v13;
  }
  else
  {
    v9 = JSALog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 136446210;
      v16 = "-[BKJSAAppController dismissCardsForSelectedTab:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%{public}s skipped because there is no card stack", buf, 0xCu);
    }

    v8 = +[JSABridge sharedInstance];
    [v8 enqueueValueCall:*(void *)(a1 + 32) arguments:&off_100A835E8 file:@"BKJSAAppController.m" line:204];
  }
}

void sub_10012FD1C(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40))
  {
    v2 = JSALog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136446210;
      v5 = "-[BKJSAAppController dismissCardsForSelectedTab:completion:]_block_invoke_2";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v4, 0xCu);
    }

    v3 = +[JSABridge sharedInstance];
    [v3 enqueueValueCall:*(void *)(a1 + 32) arguments:&off_100A835B8 file:@"BKJSAAppController.m" line:193];
  }
}

void sub_10012FE04(uint64_t a1)
{
  v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136446210;
    v5 = "-[BKJSAAppController dismissCardsForSelectedTab:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v4, 0xCu);
  }

  v3 = +[JSABridge sharedInstance];
  [v3 enqueueValueCall:*(void *)(a1 + 32) arguments:&off_100A835D0 file:@"BKJSAAppController.m" line:199];
}

uint64_t sub_10012FEE4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100130058(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100130074(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = +[BKAppDelegate delegate];
  int v4 = [v3 appLaunchCoordinator];
  id v5 = [v4 appLaunchCoordinatorHasAppLaunched];

  uint64_t v6 = [WeakRetained rootBarCoordinator];
  v7 = [v6 hostingViewController];
  v8 = [v7 presentedViewController];

  v9 = JSALog();
  BOOL v10 = os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT);
  if (v8 && v5)
  {
    if (v10)
    {
      id v11 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
      *(_DWORD *)buf = 136446722;
      v25 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
      __int16 v26 = 2112;
      v27 = v11;
      __int16 v28 = 2114;
      v29 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%{public}s: Dismissing presentedViewController animted=%@: %{public}@", buf, 0x20u);
    }
    uint64_t v12 = *(unsigned __int8 *)(a1 + 48);
    v21[0] = _NSConcreteStackBlock;
    v21[1] = 3221225472;
    v21[2] = sub_1001303B4;
    v21[3] = &unk_100A44E60;
    char v23 = v12;
    id v22 = *(id *)(a1 + 32);
    [v8 dismissViewControllerAnimated:v12 completion:v21];
    if (*(unsigned char *)(a1 + 48))
    {
      id v13 = [WeakRetained rootBarCoordinator];
      char v14 = [v13 hostingViewController];
      v15 = [v14 presentedViewController];
      v16 = [v15 transitionCoordinator];
      v19[0] = _NSConcreteStackBlock;
      v19[1] = 3221225472;
      v19[2] = sub_100130498;
      v19[3] = &unk_100A44DA8;
      id v20 = *(id *)(a1 + 32);
      [v16 animateAlongsideTransition:0 completion:v19];
    }
    v17 = v22;
  }
  else
  {
    if (v10)
    {
      v18 = +[NSNumber numberWithBool:v5];
      *(_DWORD *)buf = 136446722;
      v25 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
      __int16 v26 = 2112;
      v27 = v18;
      __int16 v28 = 2114;
      v29 = v8;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%{public}s skipped because hasAppLaunched=%@, presentedViewController=%{public}@", buf, 0x20u);
    }
    v17 = +[JSABridge sharedInstance];
    [v17 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"BKJSAAppController.m" line:237];
  }
}

void sub_1001303B4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40))
  {
    uint64_t v2 = JSALog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      int v4 = 136446210;
      id v5 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v4, 0xCu);
    }

    v3 = +[JSABridge sharedInstance];
    [v3 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"BKJSAAppController.m" line:223];
  }
}

void sub_100130498(uint64_t a1)
{
  uint64_t v2 = JSALog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    int v4 = 136446210;
    id v5 = "-[BKJSAAppController dismissPresentedViewControllerAnimated:completion:]_block_invoke";
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%{public}s done", (uint8_t *)&v4, 0xCu);
  }

  v3 = +[JSABridge sharedInstance];
  [v3 enqueueValueCall:*(void *)(a1 + 32) arguments:0 file:@"BKJSAAppController.m" line:230];
}

uint64_t sub_100130574(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10013076C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_100130790(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    v3 = [WeakRetained rootBarCoordinator];
    id v4 = [v3 selectedNavigationController];

    [v4 pushViewController:*(void *)(a1 + 32) animated:*(unsigned __int8 *)(a1 + 48)];
  }
}

uint64_t sub_10013082C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100130A30(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_100130A54(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v2 = [WeakRetained rootBarCoordinator];
  [v2 selectWithIdentifier:*(void *)(a1 + 32) isUserAction:*(unsigned __int8 *)(a1 + 48)];
}

uint64_t sub_100130AB8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100130CA8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 80));
  _Unwind_Resume(a1);
}

void sub_100130CCC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v3 = [WeakRetained rootBarCoordinator];
  id v4 = [v3 selectedTopViewController];

  id v5 = JSALog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 136446466;
    uint64_t v12 = "-[BKJSAAppController topViewControllerInSelectedTab:]_block_invoke";
    __int16 v13 = 2112;
    char v14 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "done %{public}s, result=%@", buf, 0x16u);
  }

  uint64_t v6 = +[JSABridge sharedInstance];
  v7 = v6;
  uint64_t v8 = *(void *)(a1 + 32);
  if (v4)
  {
    BOOL v10 = v4;
    v9 = +[NSArray arrayWithObjects:&v10 count:1];
    [v7 enqueueValueCall:v8 arguments:v9 file:@"BKJSAAppController.m" line:267];
  }
  else
  {
    [v6 enqueueValueCall:v8 arguments:0 file:@"BKJSAAppController.m" line:267];
  }
}

uint64_t sub_100130E3C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001311B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1001311D4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  v3 = [WeakRetained rootBarCoordinator];
  id v4 = [v3 selectedTopViewController];

  [*(id *)(*(void *)(a1 + 32) + 16) performRawActionModel:*(void *)(a1 + 40) withParentTracker:*(void *)(a1 + 48) shouldReportFigaro:*(unsigned __int8 *)(a1 + 64) sourceViewController:v4 completion:&stru_100A47A70];
}

void sub_100131264(id a1, NSError *a2)
{
  uint64_t v2 = a2;
  v3 = JSALog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR)) {
    sub_1007EBF44((uint64_t)v2, v3);
  }
}

uint64_t sub_1001312B8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001314F8(uint64_t a1)
{
  return _[*(id *)(*(void *)(a1 + 32) + 8) mergeChangesFromContextDidSaveNotification:*(void *)(a1 + 40)];
}

void sub_100132120(uint64_t a1)
{
  uint64_t v2 = sub_100062F14();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1007EC138(a1, v2);
  }

  v3 = [*(id *)(a1 + 32) fetchedResultsController];
  [v3 setDelegate:0];

  [*(id *)(a1 + 32) setFetchedResultsController:0];
  id v4 = [*(id *)(a1 + 32) dynamicArray];
  [v4 updateArray:&__NSArray0__struct];
}

void sub_100132274(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10013228C(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) fetchedResultsController];
  uint64_t v2 = [v3 fetchedObjects];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = v2 != 0;
}

void sub_1001323FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100132414(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) fetchedResultsController];
  id v7 = [v2 fetchedObjects];

  id v3 = v7;
  if (v7)
  {
    uint64_t v4 = [*(id *)(a1 + 32) assetsFromFetchRequestResults:v7];
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 40) = v4;

    id v3 = v7;
  }
}

void sub_10013249C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v6 = a2;
  id v7 = [v6 assetID];
  if (!v7)
  {
    id v7 = [v6 storeID];
    if (!v7) {
      goto LABEL_7;
    }
  }
  if (([*(id *)(a1 + 32) containsObject:v7] & 1) == 0)
  {
    [*(id *)(a1 + 32) addObject:v7];
LABEL_7:
    uint64_t v8 = [v6 toDictionary];
    [*(id *)(a1 + 40) addObject:v8];
    goto LABEL_8;
  }
  uint64_t v8 = sub_100062F14();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
    sub_1007EC1C4();
  }
LABEL_8:

  if (*(void *)(a1 + 56) && (unint64_t)[*(id *)(a1 + 40) count] >= *(void *)(a1 + 56)) {
    *a4 = 1;
  }
}

void sub_1001328F0(id *a1)
{
  uint64_t v2 = sub_100062F14();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1007EC4DC((uint64_t)a1);
  }

  id v3 = [a1[5] fetchedObjects];
  uint64_t v4 = a1 + 4;
  uint64_t v5 = [a1[4] assetsFromFetchRequestResults:v3];
  id v6 = a1[4];
  id v7 = [a1[5] fetchRequest];
  uint64_t v8 = [v6 _assetDictionariesForDynamicArrayWithFetchRequest:v7 isInitialFetch:0 matchedAssets:v5];

  v9 = [a1[4] dynamicArray];
  BOOL v10 = [v9 dataProvider];

  if (v10)
  {
    id v11 = a1[6];
    uint64_t v12 = sub_100062F14();
    BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG);
    if (v11)
    {
      if (v13) {
        sub_1007EC448((uint64_t)(a1 + 4), a1 + 6);
      }

      char v14 = [a1[5] fetchRequest];
      v15 = (char *)[v14 fetchLimit];

      if (v15) {
        [a1[6] trimWithStart:0 end:v15 - 1];
      }
      v16 = +[TUITransactionOptions defaultImplicitOptions];
      char v23 = _NSConcreteStackBlock;
      uint64_t v24 = 3221225472;
      v25 = sub_100132BB0;
      __int16 v26 = &unk_100A47B78;
      id v27 = v10;
      id v28 = v8;
      id v29 = a1[6];
      id v30 = v3;
      id v17 = a1[5];
      id v18 = a1[4];
      id v31 = v17;
      id v32 = v18;
      id v19 = +[TUITransaction currentOrNewTransactionWithOptions:v16 block:&v23];
    }
    else
    {
      if (v13) {
        sub_1007EC3C4((uint64_t)(a1 + 4), v8);
      }

      [v10 updateArray:v8 batchUpdatesBlock:0];
    }
  }
  id v20 = [*v4 delegate:v23, v24, v25, v26];
  char v21 = objc_opt_respondsToSelector();

  if (v21)
  {
    id v22 = [*v4 delegate];
    [v22 libraryProvider:*v4 contentDidChange:v5];
  }
}

void sub_100132BB0(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  v29[0] = _NSConcreteStackBlock;
  v29[1] = 3221225472;
  v29[2] = sub_100132EE4;
  v29[3] = &unk_100A47B50;
  id v30 = *(id *)(a1 + 48);
  [v2 updateArray:v3 batchUpdatesBlock:v29];
  id v4 = [*(id *)(a1 + 56) count];
  uint64_t v5 = [*(id *)(a1 + 64) fetchRequest];
  id v6 = [v5 fetchLimit];
  if (v6) {
    id v7 = v6;
  }
  else {
    id v7 = v4;
  }

  if (v4 < v7)
  {
    uint64_t v8 = sub_100062F14();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v26 = *(void *)(a1 + 72);
      uint64_t v27 = *(void *)(v26 + 8);
      *(_DWORD *)buf = 138413058;
      uint64_t v32 = v27;
      __int16 v33 = 2048;
      uint64_t v34 = v26;
      __int16 v35 = 2048;
      id v36 = v4;
      __int16 v37 = 2048;
      id v38 = v7;
      _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "%@[%p] - actual < desired (%lu vs %lu)", buf, 0x2Au);
    }

    v9 = [*(id *)(a1 + 72) fetchedResultsController];
    [v9 setDelegate:0];

    id v10 = objc_alloc((Class)NSFetchedResultsController);
    id v11 = [*(id *)(a1 + 64) fetchRequest];
    uint64_t v12 = [*(id *)(a1 + 72) moc];
    id v13 = [v10 initWithFetchRequest:v11 managedObjectContext:v12 sectionNameKeyPath:0 cacheName:0];
    [*(id *)(a1 + 72) setFetchedResultsController:v13];

    char v14 = *(void **)(a1 + 72);
    v15 = [v14 fetchedResultsController];
    [v15 setDelegate:v14];

    v16 = [*(id *)(a1 + 72) fetchedResultsController];
    id v28 = 0;
    LOBYTE(v12) = [v16 performFetch:&v28];
    id v17 = v28;

    if ((v12 & 1) == 0)
    {
      id v18 = sub_100062F14();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
        sub_1007EC0C8();
      }
    }
    id v19 = sub_100062F14();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
      sub_1007EC5A8((id *)(a1 + 72));
    }

    id v20 = [*(id *)(a1 + 72) fetchedResultsController];
    char v21 = [v20 fetchedObjects];

    id v22 = [*(id *)(a1 + 72) assetsFromFetchRequestResults:v21];
    char v23 = *(void **)(a1 + 72);
    uint64_t v24 = [*(id *)(a1 + 64) fetchRequest];
    v25 = [v23 _assetDictionariesForDynamicArrayWithFetchRequest:v24 isInitialFetch:0 matchedAssets:v22];

    [*(id *)(a1 + 32) updateArray:v25 batchUpdatesBlock:0];
  }
}

void sub_100132EE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100132F7C;
  v6[3] = &unk_100A47B28;
  id v7 = v3;
  id v5 = v3;
  [v4 computeUpdatesWithBlock:v6];
}

id *sub_100132F7C(id *result, uint64_t a2)
{
  switch(a2)
  {
    case 0:
      result = [result[4] insertItemAtIndex:];
      break;
    case 1:
      result = [result[4] deleteItemAtIndex:];
      break;
    case 2:
      result = [result[4] updateItemAtIndex:];
      break;
    case 3:
      result = (id *)[result[4] moveItemFromIndex:toIndex:];
      break;
    default:
      return result;
  }
  return result;
}

void sub_10013316C(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 entity];
  id v4 = *(void **)(a1 + 32);

  if (v3 == v4)
  {
    id v5 = *(void **)(*(void *)(a1 + 40) + 56);
    id v6 = [v7 objectIDsForRelationshipNamed:@"collectionMembers"];
    [v5 addObjectsFromArray:v6];
  }
}

void sub_1001332BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(*(void *)(a1 + 32) + 56);
  id v6 = v3;
  id v5 = [v3 objectID];
  LODWORD(v4) = [v4 containsObject:v5];

  if (v4) {
    [*(id *)(*(void *)(a1 + 32) + 40) refreshObject:v6 mergeChanges:1];
  }
}

void sub_10013342C(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_debug_impl(a1, v9, OS_LOG_TYPE_DEBUG, a4, &a9, 0x2Au);
}

id sub_10013344C(uint64_t a1, void *a2)
{
  return [a2 count];
}

id sub_100133F68(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) setFlowState:*(void *)(a1 + 40)];
  if (*(unsigned char *)(a1 + 48))
  {
    id v3 = *(void **)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    return _[v3 _persistDownloadFlowState:v4];
  }
  return result;
}

void sub_100134050(uint64_t a1)
{
  uint64_t v2 = (uint64_t)[*(id *)(a1 + 32) stage];
  if (v2 <= 299)
  {
    if (v2)
    {
      if (v2 == 150)
      {
        uint64_t v10 = BKBookletMigrationLog();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: wait GDPR privacy acknowledgement", v11, 2u);
        }

        [*(id *)(a1 + 40) wq_runDownloadFlowStageWaitGDPRPrivacyAcknowledgement];
      }
      else
      {
        if (v2 != 200) {
          goto LABEL_27;
        }
        uint64_t v4 = BKBookletMigrationLog();
        if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: force reload purchase items", v11, 2u);
        }

        [*(id *)(a1 + 40) wq_runDownloadFlowStageForceReloadPurchaseItems];
      }
    }
    else
    {
      uint64_t v8 = BKBookletMigrationLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v11 = 0;
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: initial", v11, 2u);
      }

      [*(id *)(a1 + 40) wq_runDownloadFlowStageInitial];
    }
  }
  else if (v2 > 599)
  {
    if (v2 != 600)
    {
      if (v2 == 800)
      {
        id v5 = BKBookletMigrationLog();
        if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v11 = 0;
          id v6 = "Set download flow stage to: finished";
LABEL_29:
          _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v6, v11, 2u);
        }
LABEL_30:

        return;
      }
LABEL_27:
      id v5 = BKBookletMigrationLog();
      if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)id v11 = 0;
        id v6 = "Unknown download flow stage";
        goto LABEL_29;
      }
      goto LABEL_30;
    }
    v9 = BKBookletMigrationLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: queued", v11, 2u);
    }

    [*(id *)(a1 + 40) wq_runDownloadFlowStageQueued];
  }
  else
  {
    if (v2 != 300)
    {
      if (v2 == 400)
      {
        id v3 = BKBookletMigrationLog();
        if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
        {
          *(_WORD *)id v11 = 0;
          _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: query", v11, 2u);
        }

        [*(id *)(a1 + 40) wq_runDownloadFlowStageQuery];
        return;
      }
      goto LABEL_27;
    }
    id v7 = BKBookletMigrationLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "Set download flow stage to: stop and wait", v11, 2u);
    }

    [*(id *)(a1 + 40) wq_runDownloadFlowStageWait];
  }
}

id sub_100134558(uint64_t a1)
{
  return [*(id *)(a1 + 32) wq_checkGDPRPrivacyAcknowledgementBeforeForceReloadPurchaseItems];
}

id sub_1001349B4(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setDownloadFlowStage:400];
}

id sub_1001349C0(uint64_t a1)
{
  uint64_t v2 = +[NSDate now];
  [v2 timeIntervalSince1970];
  double v4 = v3;

  id v5 = BKBookletMigrationLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 134217984;
    double v9 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Persisting stop and wait timestamp: %f", (uint8_t *)&v8, 0xCu);
  }

  id v6 = +[NSUserDefaults standardUserDefaults];
  [v6 setDouble:@"BKBookletMigration.stopAndWaitStartTime" forKey:v4];

  return [*(id *)(a1 + 32) _setDownloadFlowStage:300];
}

uint64_t sub_100134AC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_100134AD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100134F54(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100134F80(uint64_t a1, int a2)
{
  double v4 = BKBookletMigrationLog();
  BOOL v5 = os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT);
  if (a2)
  {
    if (v5)
    {
      id v6 = [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count];
      uint64_t v7 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
      *(_DWORD *)buf = 134218242;
      id v20 = v6;
      __int16 v21 = 2112;
      uint64_t v22 = v7;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Candidate audiobooks %lu assetIDs: %@", buf, 0x16u);
    }

    if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count])
    {
      int v8 = +[BKLibraryManager predicateForSupplementalContentLibraryAssetsWithStorePlaylistIDs:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
      v18[0] = v8;
      double v9 = +[BKLibraryManager predicateForNonLocalAndNonDownloadingStoreAssets];
      v18[1] = v9;
      uint64_t v10 = [*(id *)(a1 + 32) _predicateForRedownloadableAssets];
      v18[2] = v10;
      id v11 = +[NSArray arrayWithObjects:v18 count:3];
      uint64_t v12 = +[NSCompoundPredicate andPredicateWithSubpredicates:v11];

      double v4 = [*(id *)(a1 + 40) storeIDsOfStoreAssetsWithPredicate:v12];
      id v13 = BKBookletMigrationLog();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
      {
        *(_DWORD *)buf = 138412290;
        id v20 = v4;
        _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "Non-local, non-downloading booklet storeIDs: %@", buf, 0xCu);
      }
    }
    else
    {
      double v4 = 0;
    }
    id v14 = [v4 count];
    v15 = *(void **)(a1 + 32);
    if (v14)
    {
      v16 = [v15 migrationDownloadQueue];
      [v16 enqueueDownloads:v4];

      v15 = *(void **)(a1 + 32);
      uint64_t v17 = 600;
    }
    else
    {
      uint64_t v17 = 800;
    }
    [v15 _setDownloadFlowStage:v17];
  }
  else if (v5)
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Stopping migration for now. Will retry stage query on next launch.", buf, 2u);
  }
}

void sub_1001351F8(uint64_t a1, void *a2, int a3)
{
  id v5 = a2;
  id v6 = v5;
  if (a3)
  {
    uint64_t v7 = [v5 allObjects];
    uint64_t v8 = *(void *)(*(void *)(a1 + 48) + 8);
    double v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;

    id v10 = [v6 count];
    if (v10 < [*(id *)(a1 + 32) count])
    {
      id v11 = [*(id *)(a1 + 32) mutableCopy];
      [v11 minusSet:v6];
      uint64_t v12 = BKBookletMigrationLog();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
      {
        int v13 = 134218242;
        id v14 = [v11 count];
        __int16 v15 = 2112;
        id v16 = v11;
        _os_log_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEFAULT, "Encountered audiobooks with missing purchase token, %lu storeIDs: %@", (uint8_t *)&v13, 0x16u);
      }
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

void sub_100135CF0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) cellMetrics];
  [v2 dimmedScale];
  CGFloat v4 = v3;
  id v5 = [*(id *)(a1 + 32) cellMetrics];
  [v5 dimmedScale];
  CGAffineTransformMakeScale(&v9, v4, v6);
  uint64_t v7 = *(void **)(a1 + 32);
  CGAffineTransform v8 = v9;
  [v7 setTransform:&v8];
}

id sub_100135E08(uint64_t a1)
{
  v1 = *(void **)(a1 + 32);
  long long v2 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v4[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v4[1] = v2;
  v4[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  return [v1 setTransform:v4];
}

void sub_100135EC8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) cellMetrics];
  [v2 dimmedAlpha];
  [*(id *)(a1 + 32) setAlpha:];
}

id sub_100135FA0(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:1.0];
}

void sub_1001362BC(id a1, UIMutableTraits *a2)
{
}

void sub_100137154(uint64_t a1)
{
  [*(id *)(a1 + 32) infoFrame];
  double x = v8.origin.x;
  double y = v8.origin.y;
  double width = v8.size.width;
  double height = v8.size.height;
  if (!CGRectIsEmpty(v8))
  {
    id v6 = [*(id *)(a1 + 32) infoCell];
    [v6 setFrame:CGRectMake(x, y, width, height)];
  }
}

void sub_100138080(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100138134;
  block[3] = &unk_100A443C8;
  id v5 = *(id *)(a1 + 32);
  uint64_t v6 = *(void *)(a1 + 40);
  id v9 = v5;
  uint64_t v10 = v6;
  id v11 = v4;
  id v7 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100138134(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  double v3 = [*(id *)(a1 + 40) libraryAsset];
  id v4 = [v3 storeID];
  LODWORD(v2) = [v2 isEqualToString:v4];

  if (v2)
  {
    id v5 = *(void **)(a1 + 40);
    uint64_t v6 = *(void *)(a1 + 48);
    _[v5 setFormattedPrice:v6];
  }
}

void sub_10013860C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_100138620(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained assetStateChanged];
}

void sub_100138660(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained audiobookStatus];
  id v3 = [v2 assetAudiobookStatusIsPlaying];
  id v4 = objc_loadWeakRetained(v1);
  id v5 = [v4 audiobookControl];
  [v5 setPlaying:v3];
}

void sub_1001386F0(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained audiobookStatus];
  [v2 assetAudiobookStatusTrackProgress];
  double v4 = v3;
  id v5 = objc_loadWeakRetained(v1);
  uint64_t v6 = [v5 audiobookControl];
  [v6 setProgress:v4];
}

void sub_100138788(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained handleAssetMetadataChange];
}

id sub_10013A498(uint64_t a1)
{
  [*(id *)(a1 + 32) setIsAccessibilityScrollAncestor:0];
  id v2 = *(void **)(a1 + 40);

  return [v2 setIsAccessibilityScrollAncestor:0];
}

void sub_10013A778(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

id sub_10013A7B0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _imaxPageStatus:1 window:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64) + 1;

  return [v5 turnToPageNumber:v6 animated:0];
}

id sub_10013A818(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) _imaxPageStatus:0 window:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 56) + 8);
  double v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  id v5 = *(void **)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 64) - 1;

  return [v5 turnToPageNumber:v6 animated:0];
}

void sub_10013AC94(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 152), 8);
  _Unwind_Resume(a1);
}

id sub_10013ACB4(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) pageRangeForChapterAtIndex:*(void *)(a1 + 48)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  *(void *)(v3 + 32) = result;
  *(void *)(v3 + 40) = v4;
  return result;
}

void *sub_10013ACEC(void *result)
{
  if (result[4])
  {
    uint64_t v1 = result;
    id v2 = [objc_alloc((Class)NSAttributedString) initWithString:result[4]];
    uint64_t v3 = *(void *)(v1[5] + 8);
    uint64_t v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;

    id v5 = *(void **)(*(void *)(v1[5] + 8) + 40);
    uint64_t v6 = IMAccessibilityTokenLowPitch;
    return _[v5 setAttribute:kCFBooleanTrue forKey:v6];
  }
  return result;
}

uint64_t sub_10013AE8C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_10013AF74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013AF98(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v9 = WeakRetained;
  if (!v6 || v7)
  {
    uint64_t v10 = sub_1000EBDE8();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      *(_WORD *)id v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Failed to retrieve acquireSlot URL from the bag.", v11, 2u);
    }

    [v9 finishWithError:v7];
  }
  else
  {
    [WeakRetained _acquireSlotWithURL:v6];
  }
}

void sub_10013B250(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10013B278(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v6)
  {
    CGRect v8 = [v6 userInfo];
    id v9 = +[NSError errorWithDomain:@"BKAcquireSlotErrorDomain" code:2 userInfo:v8];
  }
  else
  {
    objc_opt_class();
    id v11 = [v5 parsedBodyDictionary];
    uint64_t v12 = [v11 objectForKeyedSubscript:@"status"];
    int v13 = BUDynamicCast();
    id v14 = [v13 integerValue];

    if (!v14) {
      goto LABEL_10;
    }
    if (v14 == (id)502)
    {
      id v9 = +[NSError errorWithDomain:@"BKAcquireSlotErrorDomain" code:3 userInfo:0];
    }
    else
    {
      id v16 = [v5 parsedBodyDictionary];
      id v9 = +[NSError errorWithDomain:@"BKAcquireSlotErrorDomain" code:1 userInfo:v16];
    }
  }
  if (v9)
  {
    uint64_t v10 = sub_1000EBDE8();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
    {
      int v17 = 134218242;
      id v18 = [v9 code];
      __int16 v19 = 2112;
      id v20 = v9;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "AcquireSlot returned an error. {c=%ld, (%@)}", (uint8_t *)&v17, 0x16u);
    }

    [WeakRetained finishWithError:v9];
    goto LABEL_13;
  }
LABEL_10:
  __int16 v15 = sub_1000EBDE8();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    LOWORD(v17) = 0;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "AcquireSlot was successful.", (uint8_t *)&v17, 2u);
  }

  [WeakRetained finish];
LABEL_13:
}

void sub_10013B868(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100B4A430;
  qword_100B4A430 = (uint64_t)v1;
}

void sub_10013BA58(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10013BB70;
  v8[3] = &unk_100A45C00;
  id v9 = a3;
  id v10 = a1[4];
  id v14 = a1[7];
  id v11 = v5;
  id v12 = a1[5];
  id v13 = a1[6];
  id v6 = v5;
  id v7 = v9;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
}

void sub_10013BB70(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  if (v2)
  {
    if ((objc_msgSend(v2, "bl_isUserCancelError") & 1) != 0 || (uint64_t v3 = *(void **)(a1 + 40)) == 0)
    {
      id v14 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 72));
      if (v14)
      {
        __int16 v19 = v14;
        __int16 v15 = [*(id *)(a1 + 48) validDownloadIDs];
        v19[2](v19, v15, *(void *)(a1 + 32));

        id v14 = v19;
      }
    }
    else
    {
      uint64_t v4 = [v3 host];
      if ((unint64_t)[v4 length] >= 0x1F5)
      {
        uint64_t v5 = [v4 substringToIndex:500];

        uint64_t v4 = (void *)v5;
      }
      id v6 = +[NSBundle mainBundle];
      id v7 = [v6 localizedStringForKey:@"Cannot connect to %@" value:&stru_100A70340 table:0];
      CGRect v8 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", v7, v4);

      id v9 = +[UIAlertController alertControllerWithTitle:v8 message:0 preferredStyle:1];
      id v10 = +[NSBundle mainBundle];
      id v11 = [v10 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
      id v12 = +[UIAlertAction actionWithTitle:v11 style:0 handler:&stru_100A47D20];

      [v9 addAction:v12];
      id v13 = +[BKAppDelegate currentSceneController];
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      v20[2] = sub_10013BEF0;
      v20[3] = &unk_100A47D48;
      id v23 = *(id *)(a1 + 72);
      id v21 = *(id *)(a1 + 48);
      id v22 = *(id *)(a1 + 32);
      [v13 presentViewController:v9 animated:1 completion:v20];
    }
  }
  else
  {
    if (*(void *)(a1 + 56) && *(void *)(a1 + 64))
    {
      id v16 = +[BAEventReporter sharedReporter];
      [v16 emitAddToCollectionEventWithTracker:*(void *)(a1 + 56) collectionID:kBKCollectionDefaultIDSamples contentData:*(void *)(a1 + 64)];
    }
    kdebug_trace();
    int v17 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 72));
    if (v17)
    {
      id v18 = [*(id *)(a1 + 48) validDownloadIDs];
      v17[2](v17, v18, *(void *)(a1 + 32));
    }
    kdebug_trace();
  }
}

void sub_10013BEF0(uint64_t a1)
{
  uint64_t v3 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 48));
  if (v3)
  {
    id v2 = [*(id *)(a1 + 32) validDownloadIDs];
    v3[2](v3, v2, *(void *)(a1 + 40));
  }
}

void sub_10013C564(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10013C580(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) completion];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;

  [*(id *)(a1 + 32) setCompletion:0];
  if (+[BKUIPFeatures useUIPFluidBookOpenTransition])
  {
    id v5 = +[AETestDriver shared];
    [v5 postEvent:kBETestDriverOpenAnimationSetupEnd sender:*(void *)(a1 + 32)];
  }
}

void sub_10013C6E0(uint64_t a1)
{
  uint64_t v2 = +[BKAppDelegate delegate];
  uint64_t v3 = [v2 libraryAssetProvider];
  uint64_t v4 = [*(id *)(a1 + 32) assetIdentifier];
  id v5 = [v3 libraryAssetOnMainQueueWithAssetIdentifier:v4];

  LOBYTE(v2) = [v5 streamable];
  id v6 = [v5 assetLogID];
  id v7 = [v5 updateDate];
  CGRect v8 = +[BKAppDelegate delegate];
  id v9 = [v8 libraryAssetProvider];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10013C850;
  v12[3] = &unk_100A47DC8;
  char v15 = (char)v2;
  void v12[4] = *(void *)(a1 + 32);
  id v13 = v6;
  id v14 = v7;
  id v10 = v7;
  id v11 = v6;
  [v9 assetForLibraryAsset:v5 completion:v12];
}

void sub_10013C850(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_10013C948;
  v10[3] = &unk_100A454B0;
  char v16 = *(unsigned char *)(a1 + 56);
  id v11 = v5;
  id v12 = v6;
  id v7 = *(void **)(a1 + 40);
  uint64_t v13 = *(void *)(a1 + 32);
  id v14 = v7;
  id v15 = *(id *)(a1 + 48);
  id v8 = v6;
  id v9 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v10);
}

void sub_10013C948(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 72))
  {
    uint64_t v2 = [*(id *)(a1 + 32) title];
    uint64_t v3 = +[MPMediaItem bk_audioBookAssetURLWithAlbumTitle:v2 isCloudItem:1];

    if (v3)
    {
LABEL_3:
      unsigned int v4 = [*(id *)(a1 + 48) _isProperlyInstalledAssetURL:v3];
      goto LABEL_8;
    }
  }
  else
  {
    uint64_t v3 = [*(id *)(a1 + 32) url];
    if (v3) {
      goto LABEL_3;
    }
  }
  id v5 = BCCurrentBookLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
    sub_1007EC6D4(a1, v5);
  }

  unsigned int v4 = 1;
LABEL_8:
  if ((byte_100B4A440 & 1) == 0)
  {
    byte_100B4A440 = 1;
    id v6 = +[BCAugmentedExperienceRegistry sharedRegistry];
    [v6 registerPresenterClass:objc_opt_class() forExperienceType:0];
  }
  id v7 = +[NSUserDefaults standardUserDefaults];
  unsigned int v8 = [v7 BOOLForKey:@"BKLookAssetSimulateFamilyError"];

  if (v8)
  {
    id v9 = +[NSError errorWithDomain:AssetEngineErrorDomain code:2003 userInfo:0];
    [*(id *)(a1 + 48) _completeWithAssetViewController:0 helper:0 error:v9];
  }
  if (!v4)
  {
    id v10 = +[NSError errorWithDomain:@"BKAssetLookup" code:1 userInfo:0];
    goto LABEL_26;
  }
  id v10 = [*(id *)(a1 + 48) assetIdentifier];

  if (!v10)
  {
LABEL_26:
    id v12 = *(void **)(a1 + 48);
    id v23 = v10;
LABEL_27:
    [v12 _completeWithAssetViewController:0 helper:0 error:v23];
    goto LABEL_28;
  }
  id v11 = +[AEPluginRegistry sharedInstance];
  id v10 = [v11 pluginForURL:v3];

  id v12 = *(void **)(a1 + 48);
  if (!v10)
  {
    id v23 = 0;
    goto LABEL_27;
  }
  uint64_t v13 = [v12 options];
  id v14 = [v13 mutableCopy];

  id v15 = [*(id *)(a1 + 32) storeID];
  uint64_t v16 = (uint64_t)[v15 longLongValue];

  if (v16 >= 1)
  {
    int v17 = [*(id *)(a1 + 32) storeID];
    [v14 setObject:v17 forKeyedSubscript:@"storeID"];
  }
  id v18 = [*(id *)(a1 + 48) assetIdentifier];
  __int16 v19 = [v18 permanentAssetID];

  if ([v19 length]) {
    [v14 setObject:v19 forKeyedSubscript:@"assetID"];
  }
  if ([*(id *)(a1 + 56) length]) {
    [v14 setObject:*(void *)(a1 + 56) forKeyedSubscript:AEAssetLogID];
  }
  uint64_t v20 = *(void *)(a1 + 64);
  if (v20) {
    [v14 setObject:v20 forKeyedSubscript:AEAssetUpdateDate];
  }
  id v21 = [v10 helperForURL:v3 withOptions:v14];
  id v22 = BUProtocolCast();

  if (v22)
  {
    v24[0] = _NSConcreteStackBlock;
    v24[1] = 3221225472;
    v24[2] = sub_10013CD1C;
    v24[3] = &unk_100A47DA0;
    v24[4] = *(void *)(a1 + 48);
    id v25 = v22;
    [v25 helperViewControllerWithOptions:v14 completion:v24];
  }
  else
  {
    [*(id *)(a1 + 48) _completeWithAssetViewController:0 helper:0 error:0];
  }

LABEL_28:
}

void sub_10013CD1C(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([v5 code] == (id)1002 || objc_msgSend(v5, "code") == (id)2002) {
    +[BKBasePresentingViewController clearLastKnownSuccessfullyOpenBookID];
  }
  [*(id *)(a1 + 32) _completeWithAssetViewController:v6 helper:*(void *)(a1 + 40) error:v5];
}

void sub_10013D13C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    unsigned int v4 = BCCurrentBookLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1007EC7C8(a1, (uint64_t)v3, v4);
    }

    id v5 = +[NSError errorWithDomain:AssetEngineErrorDomain code:1006 userInfo:0];
    id v6 = objc_retainBlock(*(id *)(a1 + 56));
    id v7 = v6;
    if (v6) {
      (*((void (**)(id, void *))v6 + 2))(v6, v5);
    }
LABEL_11:

    goto LABEL_12;
  }
  unsigned int v8 = *(void **)(a1 + 40);
  id v9 = [*(id *)(a1 + 48) URL];
  id v5 = [v8 helperForURL:v9 withOptions:0];

  if (v5 && (objc_opt_respondsToSelector() & 1) != 0)
  {
    id v12 = 0;
    [v5 helperValidateBookAuthorizationWithError:&v12 needsCoordination:0];
    id v7 = v12;
    id v10 = objc_retainBlock(*(id *)(a1 + 56));
    id v11 = v10;
    if (v10) {
      (*((void (**)(id, id))v10 + 2))(v10, v7);
    }

    goto LABEL_11;
  }
LABEL_12:
}

void sub_10013F734(uint64_t a1)
{
  uint64_t v2 = +[JSABridge sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  v9[0] = *(void *)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10013F874;
  v6[3] = &unk_100A47E18;
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  unsigned int v4 = objc_retainBlock(v6);
  v9[1] = v4;
  id v5 = +[NSArray arrayWithObjects:v9 count:2];
  [v2 enqueueManagedValueInvocation:v3 method:@"viewControllerForTabBarItem" arguments:v5 file:@"BKAppSceneManager+BKTabBarControllerJSApp.m" line:165];
}

void sub_10013F874(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 toObjectOfClass:objc_opt_class()];

  id v5 = JSALog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v9 = 138543618;
    id v10 = v4;
    __int16 v11 = 2114;
    uint64_t v12 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "VC %{public}@ for %{public}@", (uint8_t *)&v9, 0x16u);
  }

  uint64_t v7 = *(void *)(a1 + 40);
  if (v4)
  {
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v4);
  }
  else
  {
    id v8 = objc_opt_new();
    (*(void (**)(uint64_t, void *))(v7 + 16))(v7, v8);
  }
}

id sub_100140030(uint64_t a1)
{
  return [*(id *)(a1 + 32) _q_unload];
}

void sub_10014015C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) coverImage];
  if (v2 && (uint64_t v3 = *(void *)(a1 + 48), v2, (v3 & 1) != 0))
  {
    id v4 = objc_alloc((Class)TUIImageContent);
    id v5 = objc_alloc((Class)BCUPurgeableImage);
    uint64_t v14 = [*(id *)(a1 + 32) coverImage];
    id v6 = [v5 initWithImage:v14];
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [v4 initWithImage:v6 insets:*(unsigned char *)(v7 + 88) == 0 intrinsicSize:*(double *)(v7 + 40) flags:*(double *)(v7 + 48) *(double *)(v7 + 56) *(double *)(v7 + 64) *(double *)(v7 + 72) *(double *)(v7 + 80)];
    uint64_t v9 = *(void *)(*(void *)(a1 + 40) + 8);
    id v10 = *(void **)(v9 + 40);
    *(void *)(v9 + 40) = v8;

    __int16 v11 = (void *)v14;
  }
  else
  {
    if ((*(unsigned char *)(a1 + 48) & 2) == 0) {
      return;
    }
    id v12 = [objc_alloc((Class)TUIImageContent) initWithIntrinsicSize:*(unsigned char *)(*(void *)(a1 + 32) + 88) == 0 flags:*(double *)(*(void *)(a1 + 32) + 72) *(double *)(*(void *)(a1 + 32) + 80)];
    uint64_t v13 = *(void *)(*(void *)(a1 + 40) + 8);
    __int16 v11 = *(void **)(v13 + 40);
    *(void *)(v13 + 40) = v12;
  }
}

unsigned char *sub_100140304(uint64_t a1)
{
  id result = *(unsigned char **)(a1 + 32);
  if (!result[88]) {
    return [result _q_loadIfNeeded];
  }
  return result;
}

void sub_100140408(uint64_t a1)
{
  [*(id *)(a1 + 32) _q_loadIfNeeded];
  uint64_t v2 = [*(id *)(a1 + 32) coverImage];

  if (v2)
  {
    id v3 = objc_alloc((Class)TUIImageContent);
    id v4 = objc_alloc((Class)BCUPurgeableImage);
    id v10 = [*(id *)(a1 + 32) coverImage];
    id v5 = [v4 initWithImage:v10];
    uint64_t v6 = *(void *)(a1 + 32);
    id v7 = [v3 initWithImage:v5 insets:*(unsigned char *)(v6 + 88) == 0 intrinsicSize:*(double *)(v6 + 40) flags:*(double *)(v6 + 48) *(double *)(v6 + 56) *(double *)(v6 + 64) *(double *)(v6 + 72) *(double *)(v6 + 80)];
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 40) = v7;
  }
}

id sub_1001405A8(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) addObject:*(void *)(a1 + 40)];
}

id sub_10014065C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 24) removeObject:*(void *)(a1 + 40)];
}

id sub_1001406DC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _q_loadIfNeeded];
}

void *sub_100140768(void *result)
{
  uint64_t v1 = result[4];
  uint64_t v2 = *(void *)(v1 + 32);
  if (v2)
  {
    *(void *)(v1 + 32) = v2 - 1;
    id result = (void *)result[4];
    if (!result[4]) {
      return [result _q_unload];
    }
  }
  return result;
}

void sub_1001409A8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
}

void sub_1001409C4(id *a1)
{
  uint64_t v2 = BCImageCacheLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [a1[4] identifier];
    id v4 = (void *)v3;
    CFStringRef v5 = (const __CFString *)a1[5];
    if (!v5) {
      CFStringRef v5 = @"no";
    }
    *(_DWORD *)buf = 138412546;
    uint64_t v13 = v3;
    __int16 v14 = 2112;
    CFStringRef v15 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "BKCoverResourceProvider: fetching %@ (series: %@)", buf, 0x16u);
  }
  uint64_t v6 = +[BCCacheManager defaultCacheManager];
  id v7 = a1[4];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_100140B90;
  v8[3] = &unk_100A47FC0;
  objc_copyWeak(v11, a1 + 6);
  id v9 = a1[4];
  id v10 = a1[5];
  v11[1] = a1[7];
  [v6 fetchCGImageFor:v7 forRequest:v7 timeOut:1 waitForNonGeneric:v8 completion:5.0];

  objc_destroyWeak(v11);
}

void sub_100140B74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100140B90(id *a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  CFStringRef v5 = WeakRetained;
  if (WeakRetained)
  {
    *((unsigned char *)WeakRetained + 89) = 0;
    if (v3)
    {
      uint64_t v6 = [v3 image];
      id v7 = [v6 CGImage];

      if (!v7)
      {
        uint64_t v8 = BCImageCacheLog();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_1007ECA10((uint64_t)v3, v8, v22, v23, v24, v25, v26, v27);
        }
        goto LABEL_12;
      }
      if ([v3 quality] == 1)
      {
        uint64_t v8 = BCImageCacheLog();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
          sub_1007ECA7C((uint64_t)v3, v8, v9, v10, v11, v12, v13, v14);
        }
LABEL_12:

        goto LABEL_24;
      }
      unsigned int v28 = [v3 isGeneric];
      id v29 = BCImageCacheLog();
      BOOL v30 = os_log_type_enabled(v29, OS_LOG_TYPE_DEFAULT);
      if (v28)
      {
        if (v30)
        {
          CFStringRef v31 = (const __CFString *)a1[5];
          if (!v31) {
            CFStringRef v31 = @"no";
          }
          *(_DWORD *)buf = 138412546;
          id v40 = v3;
          __int16 v41 = 2112;
          CFStringRef v42 = v31;
          uint64_t v32 = "BKCoverResourceProvider: Generic image returned with: %@ (series: %@)";
LABEL_22:
          _os_log_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEFAULT, v32, buf, 0x16u);
        }
      }
      else if (v30)
      {
        CFStringRef v33 = (const __CFString *)a1[5];
        if (!v33) {
          CFStringRef v33 = @"no";
        }
        *(_DWORD *)buf = 138412546;
        id v40 = v3;
        __int16 v41 = 2112;
        CFStringRef v42 = v33;
        uint64_t v32 = "BKCoverResourceProvider: imaged returned with: %@ (series: %@)";
        goto LABEL_22;
      }

      uint64_t v34 = v5[1];
      v35[0] = _NSConcreteStackBlock;
      v35[1] = 3221225472;
      v35[2] = sub_100140E38;
      v35[3] = &unk_100A47F98;
      objc_copyWeak(v38, a1 + 6);
      id v36 = v3;
      id v37 = a1[5];
      v38[1] = a1[7];
      dispatch_async(v34, v35);

      objc_destroyWeak(v38);
      goto LABEL_24;
    }
    CFStringRef v15 = BCImageCacheLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_ERROR)) {
      sub_1007EC9A0((uint64_t)a1, v15, v16, v17, v18, v19, v20, v21);
    }
  }
LABEL_24:
}

void sub_100140E38(uint64_t a1)
{
  id WeakRetained = (NSObject **)objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = WeakRetained[2];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_100140F04;
    v5[3] = &unk_100A47F70;
    v5[4] = WeakRetained;
    id v6 = *(id *)(a1 + 32);
    id v7 = *(id *)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 56);
    dispatch_async(v4, v5);
  }
}

void sub_100140F04(uint64_t a1)
{
  id v2 = objc_alloc((Class)UIImage);
  id v3 = [*(id *)(a1 + 40) image];
  id v4 = [v2 initWithCGImage:[v3 CGImage]];
  CFStringRef v5 = (id *)(a1 + 32);
  [*(id *)(a1 + 32) setCoverImage:v4];

  if ([*(id *)(a1 + 48) isEqualToString:BCUCoverEffectsIdentifierSeriesStackDiagonal])
  {
    id v6 = [*(id *)(a1 + 40) identifier];
    id v7 = [*(id *)(a1 + 32) coverImage];
    [v7 size];
    double v9 = v8;
    uint64_t v10 = [*(id *)(a1 + 32) coverImage];
    [v10 size];
    double v12 = v9 / v11;

    if (v12 <= 1.0)
    {
      if (([*(id *)(a1 + 40) isGenericSeriesStack] & 1) == 0)
      {
        [*(id *)(a1 + 40) nonShadowArea];
        uint64_t v20 = v19;
        uint64_t v21 = [*(id *)(a1 + 32) coverImage];
        [v21 size];
        double v23 = v22 / *(double *)(a1 + 56);
        [*(id *)(a1 + 40) nonShadowArea];
        double v25 = v23 - v24;
        [*(id *)(a1 + 40) nonShadowArea];
        double v27 = v25 + v26 * -2.0;

        [*(id *)(a1 + 40) nonShadowArea];
        double v29 = v28 + v28;
        BOOL v30 = [*(id *)(a1 + 32) coverImage];
        [v30 size];
        double v32 = v31 / *(double *)(a1 + 56);
        [*(id *)(a1 + 40) nonShadowArea];
        double v34 = (v32 - v33) / *(double *)(a1 + 56);
        [*(id *)(a1 + 40) nonShadowArea];
        double v36 = v34 + v35 * (*(double *)(a1 + 56) * 0.5);

        uint64_t v37 = *(void *)(a1 + 32);
        *(void *)(v37 + 40) = v20;
        *(double *)(v37 + 48) = v27;
        *(double *)(v37 + 56) = v36;
        *(double *)(v37 + 64) = v29;
      }
      id v38 = *(void **)(a1 + 32);
      v39 = [v38 coverImage];
      [*(id *)(a1 + 40) nonShadowArea];
      [v38 _nq_loadedImage:v39 withIntrinsicSize:v40, v41];
    }
    else
    {
      uint64_t v13 = BCImageCacheLog();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_1007ECAE8((uint64_t)v6, v5, v13);
      }

      uint64_t v14 = +[BCCacheManager defaultCacheManager];
      CFStringRef v15 = +[BKSeriesCoverManager sharedInstance];
      v43[0] = _NSConcreteStackBlock;
      v43[1] = 3221225472;
      v43[2] = sub_100141258;
      v43[3] = &unk_100A47F48;
      id v44 = v14;
      id v16 = v14;
      [v15 assetIDsAndOptionsForBooksInSeries:v6 completion:v43];

      [v16 pruneItemsWithIdentifier:v6 forMedium:0];
      [v16 pruneItemsWithIdentifier:v6 forMedium:1];
      [v16 incrementVersionForIdentifier:v6];
    }
  }
  else
  {
    id v17 = *v5;
    id v42 = [*v5 coverImage];
    uint64_t v18 = [*v5 coverImage];
    [v18 size];
    [v17 _nq_loadedImage:v42];
  }
}

void sub_100141258(uint64_t a1, void *a2)
{
  id v3 = [a2 valueForKey:BCCoverCacheAssetIDKey];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      for (i = 0; i != v5; i = (char *)i + 1)
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v11 + 1) + 8 * i);
        [*(id *)(a1 + 32) pruneItemsWithIdentifier:v8 forMedium:0];
        [*(id *)(a1 + 32) pruneItemsWithIdentifier:v8 forMedium:1];
      }
      id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }
  double v9 = *(void **)(a1 + 32);
  uint64_t v10 = +[NSSet setWithArray:v3];
  [v9 incrementVersionForIdentifiers:v10];
}

void sub_1001416FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34,uint64_t a35,uint64_t a36,uint64_t a37,char a38)
{
}

void sub_100141734(uint64_t a1)
{
  if ([*(id *)(*(void *)(a1 + 32) + 24) count])
  {
    uint64_t v2 = [*(id *)(*(void *)(a1 + 32) + 24) allObjects];
    uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 40) = v2;
  }
  uint64_t v5 = *(void *)(a1 + 32);
  if (!*(unsigned char *)(v5 + 88)
    || (*(double *)(v5 + 72) == *(double *)(a1 + 64) ? (BOOL v6 = *(double *)(v5 + 80) == *(double *)(a1 + 72)) : (BOOL v6 = 0),
        !v6))
  {
    *(_OWORD *)(v5 + 72) = *(_OWORD *)(a1 + 64);
    *(unsigned char *)(*(void *)(a1 + 32) + 88) = *(void *)(a1 + 40) != 0;
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  }
}

void sub_1001417D0(uint64_t a1)
{
  long long v8 = 0u;
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  id v2 = *(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      BOOL v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v8 + 1) + 8 * (void)v6);
        if (objc_opt_respondsToSelector()) {
          [v7 imageResourceDidChangeIntrinsicSize:*(void *)(a1 + 32) v8];
        }
        BOOL v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }
}

void sub_100142038(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100142054(uint64_t a1, void *a2, unsigned char *a3)
{
  id v9 = a2;
  BOOL v6 = [v9 bk_window];
  id v7 = [v6 rootViewController];
  long long v8 = *(void **)(a1 + 32);

  if (v7 == v8)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    *a3 = 1;
  }
}

void sub_1001422A0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001422B8(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BUProtocolCast();
  id obj = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [obj openBookAssetID];
  unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), obj);
    *a3 = 1;
  }
}

void sub_1001426C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,char a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_100142708(uint64_t a1, void *a2, unsigned char *a3)
{
  id v11 = a2;
  uint64_t v5 = [v11 scene];
  unsigned int v6 = [v5 _persistenceIdentifier];

  if (v6)
  {
    id v7 = *(void **)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
    long long v8 = [v5 _persistenceIdentifier];
    [v7 addObject:v8];

    id v9 = (void (**)(id, void *, uint64_t))objc_retainBlock(*(id *)(a1 + 32));
    if (v9)
    {
      long long v10 = [v11 sceneInfo];
      v9[2](v9, v10, *(void *)(*(void *)(a1 + 48) + 8) + 24);
    }
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24)) {
      *a3 = 1;
    }
  }
}

void sub_100142F64(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100142F88(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
    id v2 = [WeakRetained pendingPrimarySceneCompletionBlocks];
    [v2 removeAllObjects];
  }
}

void sub_1001433D8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Block_object_dispose((const void *)(v17 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100143428(uint64_t a1, void *a2)
{
  id v5 = a2;
  [v5 setRequestAssetID:*(void *)(a1 + 32)];
  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_10014349C(uint64_t a1, void *a2, unsigned char *a3)
{
  id v12 = [a2 sceneController];
  if (![v12 sceneType])
  {
    id v5 = [v12 requestAssetID];
    unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

    if (v6)
    {
      id v7 = [*(id *)(a1 + 40) pendingBookSceneCompletionBlocksByAssetID];
      long long v8 = [v7 objectForKeyedSubscript:*(void *)(a1 + 32)];

      if ([v8 count])
      {
        id v9 = objc_retainBlock(*(id *)(a1 + 48));
        [v8 addObject:v9];
      }
      else
      {
        objc_opt_class();
        id v9 = BUDynamicCast();
        id v10 = objc_retainBlock(*(id *)(a1 + 48));
        id v11 = v10;
        if (v10) {
          (*((void (**)(id, void *))v10 + 2))(v10, v9);
        }
      }
      *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
      *a3 = 1;
    }
  }
}

void sub_1001435D4(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    id v7 = WeakRetained;
    if (*(void *)(a1 + 32))
    {
      [WeakRetained _finishSceneRequest:];
    }
    else
    {
      id v4 = [WeakRetained pendingBookSceneCompletionBlocksByAssetID];
      id v5 = [v4 objectForKeyedSubscript:*(void *)(a1 + 40)];

      if (v5) {
        [v5 removeAllObjects];
      }
      unsigned int v6 = [v7 pendingBookSceneRequestAssetIDs];
      [v6 removeObject:*(void *)(a1 + 40)];
    }
  }
}

void sub_100143874(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10014389C(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v3 = [*(id *)(a1 + 32) pendingAccountSceneCompletionBlocks];
    [WeakRetained _handleErrorForCompletionBlocks:v3];
  }
}

void sub_100143C14(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100143C50(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v3 = [*(id *)(a1 + 32) pendingEndOfBookSceneCompletionBlocks];
    [WeakRetained _handleErrorForCompletionBlocks:v3];
  }
}

void sub_100143ED8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100143EF0(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BUProtocolCast();
  id v12 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = [v12 sceneSession];
  unsigned int v6 = [v12 sceneController];
  uint64_t v7 = [v6 scene];
  if (v7)
  {
    long long v8 = (void *)v7;
    uint64_t v9 = [*(id *)(a1 + 32) primarySceneController];
    if (v6 == (void *)v9)
    {
    }
    else
    {
      id v10 = (void *)v9;
      unsigned __int8 v11 = [v12 supportsOpeningToAuxiliaryScene];

      if (v11) {
        goto LABEL_9;
      }
    }
LABEL_8:
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v5);
    *a3 = 1;
    goto LABEL_9;
  }
  if (([v12 supportsOpeningToAuxiliaryScene] & 1) == 0) {
    goto LABEL_8;
  }
LABEL_9:
}

void sub_100144108(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100144120(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BUProtocolCast();
  id v11 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = [v11 openBookAssetID];
  unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  uint64_t v7 = v11;
  if (v6)
  {
    long long v8 = [v11 sceneSession];
    uint64_t v9 = [v11 sceneController];
    id v10 = v9;
    if (v9 && ![v9 sceneType] || objc_msgSend(v11, "supportsOpeningToAuxiliaryScene"))
    {
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), v8);
      *a3 = 1;
    }

    uint64_t v7 = v11;
  }
}

void sub_100144458(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_100144478(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BUProtocolCast();
  id v7 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = [v7 openBookAssetID];
  unsigned int v6 = [v5 isEqualToString:*(void *)(a1 + 32)];

  if (v6 && ([v7 supportsOpeningToAuxiliaryScene] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    *a3 = 1;
  }
}

void sub_100144514(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_100144580(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

BOOL sub_1001448AC(uint64_t a1, void *a2)
{
  id v3 = [a2 scene];
  BOOL v4 = v3 != *(void **)(a1 + 32);

  return v4;
}

void sub_1001449D0(uint64_t a1, void *a2)
{
  id v3 = [a2 bookFlowAssetPresenting];
  id v4 = [v3 presenterViewControllersConformingToProtocol:*(void *)(a1 + 32)];

  [*(id *)(a1 + 40) addObjectsFromArray:v4];
}

void sub_100144B04(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v7 - 48), 8);
  _Unwind_Resume(a1);
}

void sub_100144B28(uint64_t a1, void *a2, unsigned char *a3)
{
  id v8 = a2;
  id v5 = [v8 scene];
  if ([v5 activationState] == (id)1)
  {
  }
  else
  {
    unsigned int v6 = [v8 scene];
    id v7 = [v6 activationState];

    if (v7) {
      goto LABEL_5;
    }
  }
  ++*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24);
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
LABEL_5:
  if (*(uint64_t *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) >= 2)
  {
    *a3 = 1;
    *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
  }
}

void sub_100144CB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100144CCC(uint64_t a1, uint64_t a2, unsigned char *a3)
{
  BUProtocolCast();
  id v8 = (id)objc_claimAutoreleasedReturnValue();
  uint64_t v5 = [v8 openBookAssetID];
  if (!v5
    || (unsigned int v6 = (void *)v5,
        unsigned __int8 v7 = [v8 supportsOpeningToAuxiliaryScene],
        v6,
        (v7 & 1) == 0))
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 0;
    *a3 = 1;
  }
}

void sub_10014504C(id a1, BKPrimarySceneControlling *a2)
{
  id v4 = [(BKPrimarySceneControlling *)a2 bookFlowAssetPresenting];
  id v2 = [v4 presenterFirstVisibleChildConformingToProtocol:&OBJC_PROTOCOL___BKAssetPresenting];
  id v3 = v2;
  if (v2) {
    [v2 im_dismissAnimated:0];
  }
}

void sub_1001450BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained(&qword_100B4A468);

  if (!WeakRetained)
  {
    unsigned int v6 = [[BKDebugViewController alloc] initWithStyle:1];
    id v3 = [objc_alloc((Class)BSUINavigationController) initWithRootViewController:v6];
    id v4 = objc_loadWeakRetained((id *)(a1 + 32));
    uint64_t v5 = [v4 controller];
    [v5 presentViewController:v3 animated:1 completion:0];

    objc_storeWeak(&qword_100B4A468, v3);
  }
}

void sub_1001453DC(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) _bkaxSearchDelegate];
  id v3 = __IMAccessibilityCastAsClass();

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v4 = [v3 view];
  uint64_t v5 = [v4 _accessibleSubviews];

  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
LABEL_3:
    uint64_t v9 = 0;
    while (1)
    {
      if (*(void *)v13 != v8) {
        objc_enumerationMutation(v5);
      }
      id v10 = *(void **)(*((void *)&v12 + 1) + 8 * v9);
      NSClassFromString(@"UIWebDocumentView");
      if (objc_opt_isKindOfClass()) {
        break;
      }
      if (v7 == (id)++v9)
      {
        id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
        if (v7) {
          goto LABEL_3;
        }
        goto LABEL_9;
      }
    }
    id v11 = v10;

    if (v11) {
      goto LABEL_14;
    }
  }
  else
  {
LABEL_9:
  }
  if (IMAccessibilityShouldPerformValidationChecks())
  {
    IMAccessibilityShouldCrashOnValidationErrorAfterLaunch();
    if (__IMAccessibilityHandleValidationErrorWithDescription()) {
      abort();
    }
  }
  id v11 = [v3 view];
LABEL_14:
  UIAccessibilityPostNotification(UIAccessibilityLayoutChangedNotification, v11);
}

void sub_1001456F4(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _processNextBatchWithCompletion:v3];
}

void sub_10014586C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100145884(uint64_t a1)
{
}

void sub_100145C38(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_100145C74(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v7 = a3;
  if (v7)
  {
    uint64_t v8 = BKBookletMigrationLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1007ECBB0(a1, (uint64_t)v7, v8);
    }
  }
  else if (v6)
  {
    objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
  }
}

void sub_100145F68(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100145F98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    id v7 = BKBookletMigrationLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007ECD0C(a1, (uint64_t)v6, v7);
    }
LABEL_8:

    goto LABEL_9;
  }
  if (v5)
  {
    uint64_t v8 = BKBookletMigrationLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1007ECC3C(v5, a1, v8);
    }

    uint64_t v9 = *(void *)(*(void *)(a1 + 32) + 8);
    id v10 = v5;
    id v7 = *(NSObject **)(v9 + 40);
    *(void *)(v9 + 40) = v10;
    goto LABEL_8;
  }
LABEL_9:
}

void sub_100146058(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) pendingItems];
  [v2 removeAllObjects];
  if ([*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count]) {
    [v2 addObjectsFromArray:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
  }
  if ([v2 count]) {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = 1;
  }
}

void sub_1001461C0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001461D8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) pendingItems];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v2 count] != 0;
}

void sub_1001463D8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001463F8(uint64_t a1)
{
  id v8 = [*(id *)(a1 + 32) pendingItems];
  if ([v8 count])
  {
    id v2 = [*(id *)(a1 + 32) _batchSize];
    id v3 = [v8 count];
    if (v2 >= v3) {
      id v2 = v3;
    }
    id v4 = [v8 subarrayWithRange:0, v2];
    [v8 removeObjectsInRange:0, v2];
    uint64_t v5 = [v4 valueForKey:@"storeIDString"];
    uint64_t v6 = *(void *)(*(void *)(a1 + 40) + 8);
    id v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 40) = v5;
  }
}

void sub_1001466F8(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 count])
  {
    dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
    long long v41 = 0u;
    long long v42 = 0u;
    long long v40 = 0u;
    long long v39 = 0u;
    id v26 = v3;
    id obj = v3;
    id v29 = [obj countByEnumeratingWithState:&v39 objects:v52 count:16];
    if (v29)
    {
      uint64_t v28 = *(void *)v40;
      do
      {
        uint64_t v4 = 0;
        do
        {
          if (*(void *)v40 != v28) {
            objc_enumerationMutation(obj);
          }
          uint64_t v5 = *(void **)(*((void *)&v39 + 1) + 8 * v4);
          uint64_t v30 = v4;
          if ([v5 isSupplementalContent])
          {
            id v6 = +[NSSet setWithObject:v5];
          }
          else
          {
            id v7 = [v5 supplementalContentAssets];

            id v8 = BKBookletMigrationLog();
            BOOL v9 = os_log_type_enabled(v8, OS_LOG_TYPE_ERROR);
            if (v7)
            {
              if (v9)
              {
                double v22 = [v5 storeID];
                double v23 = [v5 dataSourceIdentifier];
                *(_DWORD *)buf = 141558530;
                uint64_t v44 = 1752392040;
                __int16 v45 = 2112;
                v46 = v22;
                __int16 v47 = 2114;
                uint64_t v48 = (uint64_t)v23;
                _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "_triggerDownloads: Not expected to handle parent: [%{mask.hash}@], dataSource: %{public}@", buf, 0x20u);
              }
              id v6 = [v5 supplementalContentAssets];
            }
            else
            {
              if (v9)
              {
                double v24 = [v5 storeID];
                double v25 = [v5 dataSourceIdentifier];
                *(_DWORD *)buf = 141558530;
                uint64_t v44 = 1752392040;
                __int16 v45 = 2112;
                v46 = v24;
                __int16 v47 = 2114;
                uint64_t v48 = (uint64_t)v25;
                _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "_triggerDownloads: Not expected to handle asset: [%{mask.hash}@], dataSource: %{public}@", buf, 0x20u);
              }
              id v6 = objc_alloc_init((Class)NSSet);
            }
          }
          long long v37 = 0u;
          long long v38 = 0u;
          long long v35 = 0u;
          long long v36 = 0u;
          id v10 = v6;
          id v11 = [v10 countByEnumeratingWithState:&v35 objects:v51 count:16];
          if (v11)
          {
            id v12 = v11;
            uint64_t v13 = *(void *)v36;
            do
            {
              for (i = 0; i != v12; i = (char *)i + 1)
              {
                if (*(void *)v36 != v13) {
                  objc_enumerationMutation(v10);
                }
                long long v15 = *(void **)(*((void *)&v35 + 1) + 8 * i);
                id v16 = [v15 storeID];
                uint64_t v17 = [v15 storePlaylistID];
                [*(id *)(a1 + 40) removeObject:v16];
                unsigned int v18 = [v15 isDownloading];
                uint64_t v19 = BKBookletMigrationLog();
                BOOL v20 = os_log_type_enabled(v19, OS_LOG_TYPE_DEFAULT);
                if (v18)
                {
                  if (v20)
                  {
                    *(_DWORD *)buf = 141558786;
                    uint64_t v44 = 1752392040;
                    __int16 v45 = 2112;
                    v46 = v17;
                    __int16 v47 = 2160;
                    uint64_t v48 = 1752392040;
                    __int16 v49 = 2112;
                    v50 = v16;
                    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: Asset is already downloading: [%{mask.hash}@, %{mask.hash}@]", buf, 0x2Au);
                  }
                }
                else
                {
                  if (v20)
                  {
                    *(_DWORD *)buf = 141558786;
                    uint64_t v44 = 1752392040;
                    __int16 v45 = 2112;
                    v46 = v17;
                    __int16 v47 = 2160;
                    uint64_t v48 = 1752392040;
                    __int16 v49 = 2112;
                    v50 = v16;
                    _os_log_impl((void *)&_mh_execute_header, v19, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: Attempt to download asset: [%{mask.hash}@, %{mask.hash}@]", buf, 0x2Au);
                  }

                  uint64_t v19 = objc_alloc_init((Class)BKResolveLibraryAssetOptions);
                  [v19 setUserInitiated:&__kCFBooleanFalse];
                  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
                  uint64_t v21 = *(void **)(a1 + 48);
                  v31[0] = _NSConcreteStackBlock;
                  v31[1] = 3221225472;
                  v31[2] = sub_100146C4C;
                  v31[3] = &unk_100A48380;
                  id v32 = v17;
                  id v33 = v16;
                  id v34 = *(id *)(a1 + 32);
                  [v21 resolveLibraryAsset:v15 options:v19 completion:v31];
                }
              }
              id v12 = [v10 countByEnumeratingWithState:&v35 objects:v51 count:16];
            }
            while (v12);
          }

          uint64_t v4 = v30 + 1;
        }
        while ((id)(v30 + 1) != v29);
        id v29 = [obj countByEnumeratingWithState:&v39 objects:v52 count:16];
      }
      while (v29);
    }

    dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
    id v3 = v26;
  }
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100146C4C(uint64_t a1)
{
  id v2 = BKBookletMigrationLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    uint64_t v4 = *(void *)(a1 + 40);
    int v5 = 141558786;
    uint64_t v6 = 1752392040;
    __int16 v7 = 2112;
    uint64_t v8 = v3;
    __int16 v9 = 2160;
    uint64_t v10 = 1752392040;
    __int16 v11 = 2112;
    uint64_t v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: resolveLibraryAsset completion: [%{mask.hash}@, %{mask.hash}@]", (uint8_t *)&v5, 0x2Au);
  }

  dispatch_group_leave(*(dispatch_group_t *)(a1 + 48));
}

void sub_100146D24(id *a1)
{
  if ([a1[4] count])
  {
    id v2 = BKBookletMigrationLog();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      id v3 = a1[4];
      int v7 = 138412290;
      id v8 = v3;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: libraryAssets not found for %@", (uint8_t *)&v7, 0xCu);
    }

    [a1[5] _setMigrationState:700 forStoreIDStrings:a1[4] logPrefix:@"_triggerDownloads"];
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if ([WeakRetained _hasPendingItems])
  {
    int v5 = [WeakRetained coalescingProcessNextBatch];
    [v5 signalWithCompletion:&stru_100A483A0];
  }
  else
  {
    uint64_t v6 = BKBookletMigrationLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v7) = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "_triggerDownloads: Pending queue is empty", (uint8_t *)&v7, 2u);
    }

    [a1[5] _notifyDidBecomeEmpty];
  }
}

void sub_1001480A0(id a1, UIMutableTraits *a2)
{
}

void sub_10014874C(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 56));
  _Unwind_Resume(a1);
}

void sub_100148760(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) readBuyButton];
  [v2 resetButtonState];

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setNeedsLayout];
}

void sub_1001487C4(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained audiobookStatus];
  id v3 = [v2 assetAudiobookStatusIsPlaying];
  id v4 = objc_loadWeakRetained(v1);
  int v5 = [v4 audiobookControl];
  [v5 setPlaying:v3];
}

void sub_100148854(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v2 = [WeakRetained audiobookStatus];
  [v2 assetAudiobookStatusTrackProgress];
  double v4 = v3;
  id v5 = objc_loadWeakRetained(v1);
  uint64_t v6 = [v5 audiobookControl];
  [v6 setProgress:v4];
}

void sub_1001488EC(uint64_t a1)
{
  uint64_t v1 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained _updateAssetStrings];

  id v3 = objc_loadWeakRetained(v1);
  [v3 setNeedsLayout];
}

id sub_10014894C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setNeedsLayout];
}

id sub_100148954(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) libraryDownloadStatus];
  [v2 progressValue];
  float v4 = v3;
  id v5 = [*(id *)(a1 + 32) downloadProgressButton];
  *(float *)&double v6 = v4;
  [v5 setProgress:v6];

  int v7 = *(void **)(a1 + 32);

  return [v7 setNeedsLayout];
}

id sub_100148A44(uint64_t a1)
{
  [*(id *)(a1 + 32) updateBuyReadButton];
  id v2 = *(void **)(a1 + 32);

  return [v2 setNeedsLayout];
}

void sub_10014B0AC(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 0.0;
  }
  else {
    double v2 = 1.0;
  }
  double v3 = [*(id *)(a1 + 32) bookDescription];
  [v3 setAlpha:v2];

  if ([*(id *)(a1 + 32) shouldShowCloud]) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  id v5 = [*(id *)(a1 + 32) cloudView];
  [v5 setAlpha:v4];

  id v6 = [*(id *)(a1 + 32) shouldShowCloud];
  int v7 = [*(id *)(a1 + 32) cloudView];
  [v7 setIsAccessibilityElement:v6];

  if ([*(id *)(a1 + 32) shouldShowDownloadProgressButton]) {
    double v8 = 1.0;
  }
  else {
    double v8 = 0.0;
  }
  __int16 v9 = [*(id *)(a1 + 32) downloadProgressButton];
  [v9 setAlpha:v8];

  if ([*(id *)(a1 + 32) shouldShowMoreButton]) {
    double v10 = 1.0;
  }
  else {
    double v10 = 0.0;
  }
  __int16 v11 = [*(id *)(a1 + 32) moreButton];
  [v11 setAlpha:v10];

  if ([*(id *)(a1 + 32) isInEditMode]) {
    double v12 = 0.0;
  }
  else {
    double v12 = 1.0;
  }
  id v13 = [*(id *)(a1 + 32) readBuyButton];
  [v13 setAlpha:v12];
}

void sub_10014B204(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isInEditMode]) {
    double v2 = 1.0;
  }
  else {
    double v2 = 0.0;
  }
  double v3 = [*(id *)(a1 + 32) checkmarkView];
  [v3 setAlpha:v2];

  if ([*(id *)(a1 + 32) isInEditMode]) {
    double v4 = 1.0;
  }
  else {
    double v4 = 0.0;
  }
  id v5 = [*(id *)(a1 + 32) dragBarView];
  [v5 setAlpha:v4];
}

void sub_10014B2AC(uint64_t a1)
{
  [*(id *)(a1 + 32) isRTL];
  IMRectFlippedForRTL();
  double v3 = v2;
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v10 = [*(id *)(a1 + 32) checkmarkView];
  [v10 setFrame:v3, v5, v7, v9];

  [*(id *)(a1 + 32) isRTL];
  IMRectFlippedForRTL();
  double v12 = v11;
  double v14 = v13;
  double v16 = v15;
  double v18 = v17;
  id v19 = [*(id *)(a1 + 32) dragBarView];
  [v19 setFrame:v12, v14, v16, v18];
}

void sub_10014B39C(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) bookDescription];
  [v2 frame];

  CGRectGetWidth(*(CGRect *)(a1 + 40));
  [*(id *)(a1 + 32) isRTL];
  IMRectFlippedForRTL();
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  id v11 = [*(id *)(a1 + 32) bookDescription];
  [v11 setFrame:v4, v6, v8, v10];
}

void sub_10014BC20(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) coverView];
  double v3 = [v2 coverLayer];
  [v3 setAnimateFrameChange:0];

  id v9 = [*(id *)(a1 + 32) coverView];
  double v4 = [v9 coverLayer];
  double v5 = *(void **)(a1 + 32);
  uint64_t v6 = v5[8];
  [v5 coverArea];
  [v4 setLibraryAsset:v6 size:v7, v8];
}

id sub_10014BD90(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isInEditMode]
    && ![*(id *)(a1 + 32) isSelected])
  {
    double v2 = [*(id *)(a1 + 32) wantToReadMetrics];
    [v2 shrinkAlpha];
    [*(id *)(a1 + 32) setAlpha:];
  }
  else
  {
    [*(id *)(a1 + 32) setAlpha:1.0];
  }
  double v3 = [*(id *)(a1 + 32) dataSource];
  double v4 = [v3 selectedCheckmarkImageForSelectedState:*(unsigned __int8 *)(a1 + 40)];
  double v5 = [*(id *)(a1 + 32) checkmarkView];
  [v5 setImage:v4];

  if (*(unsigned char *)(a1 + 40)) {
    +[UIColor bc_booksKeyColor];
  }
  else {
  uint64_t v6 = +[UIColor bc_booksTertiaryLabelColor];
  }
  double v7 = [*(id *)(a1 + 32) checkmarkView];
  [v7 setTintColor:v6];

  double v8 = *(void **)(a1 + 32);

  return [v8 layoutCoverView];
}

void sub_10014EAB0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10014EAD0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    double v3 = (void (**)(id, void *, void *))objc_retainBlock(*(id *)(a1 + 32));
    if (v3)
    {
      double v4 = [WeakRetained parameters];
      double v5 = [WeakRetained error];
      v3[2](v3, v4, v5);
    }
  }
  else
  {
    NSErrorUserInfoKey v10 = NSLocalizedDescriptionKey;
    CFStringRef v11 = @"Unexpected nil operation";
    uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v11 forKeys:&v10 count:1];
    double v7 = +[NSError errorWithDomain:@"BKUpdatesParameterProviderDomain" code:-1 userInfo:v6];

    id v8 = objc_retainBlock(*(id *)(a1 + 32));
    id v9 = v8;
    if (v8) {
      (*((void (**)(id, void, void *))v8 + 2))(v8, 0, v7);
    }
  }
}

void sub_10014EC80(id a1)
{
  id v1 = objc_alloc_init((Class)NSOperationQueue);
  double v2 = (void *)qword_100B4A470;
  qword_100B4A470 = (uint64_t)v1;
}

void sub_10014EF40(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 152));
  _Unwind_Resume(a1);
}

void sub_10014EF54(uint64_t a1, void *a2)
{
  id v5 = a2;
  [+[BCAppKitBundleLoader appKitBundleClass](BCAppKitBundleLoader, "appKitBundleClass") clearRecentDocumentsList];
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  double v4 = v3;
  if (v3) {
    (*((void (**)(id, id))v3 + 2))(v3, v5);
  }
}

void sub_10014EFD0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10014F0F0;
  block[3] = &unk_100A484D0;
  objc_copyWeak(&v13, (id *)(a1 + 88));
  id v6 = *(id *)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  id v2 = *(id *)(a1 + 80);
  uint64_t v3 = *(void *)(a1 + 64);
  double v4 = *(void **)(a1 + 72);
  id v12 = v2;
  uint64_t v10 = v3;
  int v14 = *(_DWORD *)(a1 + 96);
  char v15 = *(unsigned char *)(a1 + 100);
  id v11 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v13);
}

void sub_10014F0F0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 88));
  uint64_t v3 = WeakRetained;
  if (WeakRetained)
  {
    double v4 = [WeakRetained urlHandler];
    uint64_t v5 = *(void *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    uint64_t v8 = *(void *)(a1 + 56);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10014F28C;
    v14[3] = &unk_100A484A8;
    id v9 = *(id *)(a1 + 80);
    char v21 = *(unsigned char *)(a1 + 96);
    id v20 = v9;
    v14[4] = v3;
    id v15 = *(id *)(a1 + 32);
    int v22 = *(_DWORD *)(a1 + 97);
    int8x16_t v13 = *(int8x16_t *)(a1 + 56);
    id v10 = (id)v13.i64[0];
    int8x16_t v16 = vextq_s8(v13, v13, 8uLL);
    id v17 = *(id *)(a1 + 40);
    id v18 = *(id *)(a1 + 48);
    id v19 = *(id *)(a1 + 72);
    [v4 handleURL:v5 sourceApplication:v6 annotation:v7 isLaunch:1 transaction:v8 completion:v14];
  }
  else
  {
    id v11 = objc_retainBlock(*(id *)(a1 + 80));
    id v12 = v11;
    if (v11) {
      (*((void (**)(id, void))v11 + 2))(v11, 0);
    }
  }
}

void sub_10014F28C(uint64_t a1, int a2)
{
  if (a2)
  {
    uint64_t v3 = (void (**)(id, void))objc_retainBlock(*(id *)(a1 + 88));
    if (v3)
    {
      id v19 = v3;
      v3[2](v3, 0);
      uint64_t v3 = v19;
    }
  }
  else
  {
    if (!*(unsigned char *)(a1 + 96)) {
      goto LABEL_13;
    }
    double v4 = [*(id *)(a1 + 32) mainLibrary];
    unsigned int v5 = [v4 canImportURL:*(void *)(a1 + 40) openInPlace:0 options:0];

    if (v5)
    {
      uint64_t v6 = [*(id *)(a1 + 32) launchCoordinator];
      v34[0] = _NSConcreteStackBlock;
      v34[1] = 3221225472;
      v34[2] = sub_10014F724;
      v34[3] = &unk_100A48458;
      *(_OWORD *)id v20 = *(_OWORD *)(a1 + 40);
      id v7 = v20[0];
      int8x16_t v35 = vextq_s8(*(int8x16_t *)v20, *(int8x16_t *)v20, 8uLL);
      int v38 = *(_DWORD *)(a1 + 97);
      id v36 = *(id *)(a1 + 56);
      id v37 = *(id *)(a1 + 88);
      [v6 appLaunchCoordinatorPerformWhenLaunched:@"Open in Place Copy First" block:v34];

      return;
    }
    if (*(unsigned char *)(a1 + 96) && objc_msgSend(*(id *)(a1 + 40), "bu_isFolder"))
    {
      uint64_t v8 = *(void **)(a1 + 48);
      uint64_t v39 = *(void *)(a1 + 40);
      id v9 = +[NSArray arrayWithObjects:&v39 count:1];
      [v8 handleImportURLs:v9 openAfterImport:*(unsigned __int8 *)(a1 + 97) importInPlace:*(unsigned __int8 *)(a1 + 98) showLibraryAllCollection:*(unsigned __int8 *)(a1 + 99) switchToLibrary:*(unsigned __int8 *)(a1 + 100) transaction:*(void *)(a1 + 56) perURLCompletion:0 completion:*(void *)(a1 + 88)];
    }
    else
    {
LABEL_13:
      id v10 = [*(id *)(a1 + 40) bu_isbnForURI];
      id v11 = [v10 length];

      if (v11)
      {
        v26[0] = _NSConcreteStackBlock;
        v26[1] = 3221225472;
        v26[2] = sub_10014F7CC;
        v26[3] = &unk_100A48480;
        id v12 = *(void **)(a1 + 40);
        v26[4] = *(void *)(a1 + 32);
        id v27 = *(id *)(a1 + 64);
        id v28 = *(id *)(a1 + 72);
        id v29 = *(id *)(a1 + 80);
        int v32 = *(_DWORD *)(a1 + 96);
        char v33 = *(unsigned char *)(a1 + 100);
        id v30 = *(id *)(a1 + 56);
        id v31 = *(id *)(a1 + 88);
        [v12 bu_storeURLForISBNURNWithCompletion:v26];
      }
      else
      {
        unsigned int v13 = [*(id *)(a1 + 80) BOOLValue];
        objc_initWeak(&location, *(id *)(a1 + 32));
        int v14 = [*(id *)(a1 + 48) defaultSceneControllerForTransaction:*(void *)(a1 + 56)];
        id v15 = [v14 externalURLOpenPrompter];
        uint64_t v16 = *(void *)(a1 + 40);
        v21[0] = _NSConcreteStackBlock;
        v21[1] = 3221225472;
        v21[2] = sub_10014F81C;
        v21[3] = &unk_100A43FE0;
        objc_copyWeak(&v24, &location);
        id v22 = *(id *)(a1 + 40);
        id v23 = *(id *)(a1 + 64);
        [v15 maybePromptUserBeforeOpeningExternalURL:v16 shouldThrottle:v13 ^ 1 promptContext:0 completion:v21];

        id v17 = objc_retainBlock(*(id *)(a1 + 88));
        id v18 = v17;
        if (v17) {
          (*((void (**)(id, void))v17 + 2))(v17, 0);
        }

        objc_destroyWeak(&v24);
        objc_destroyWeak(&location);
      }
    }
  }
}

void sub_10014F6E8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10014F724(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  uint64_t v3 = +[NSArray arrayWithObjects:&v4 count:1];
  [v2 handleImportURLs:v3 openAfterImport:*(unsigned __int8 *)(a1 + 64) importInPlace:*(unsigned __int8 *)(a1 + 65) showLibraryAllCollection:*(unsigned __int8 *)(a1 + 66) switchToLibrary:*(unsigned __int8 *)(a1 + 67) transaction:*(void *)(a1 + 48) perURLCompletion:0 completion:*(void *)(a1 + 56)];
}

id sub_10014F7CC(uint64_t a1, uint64_t a2)
{
  *(_WORD *)((char *)&v3 + 1) = *(_WORD *)(a1 + 83);
  LOBYTE(v3) = *(unsigned char *)(a1 + 82);
  return [*(id *)(a1 + 32) handleApplicationURL:a2 sourceApplication:*(void *)(a1 + 40) annotation:*(void *)(a1 + 48) likelyUserInitiated:*(unsigned __int8 *)(a1 + 80) canImport:*(unsigned __int8 *)(a1 + 81) openAfterImport:v3 importInPlace:*(void *)(a1 + 64) showLibraryAllCollection:*(void *)(a1 + 72)];
}

void sub_10014F81C(uint64_t a1, int a2)
{
  if (a2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    [WeakRetained _openExternalURL:*(void *)(a1 + 32) sourceApplication:*(void *)(a1 + 40)];
  }
}

void sub_10014F9FC(uint64_t a1)
{
  id v2 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 32) count]);
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v3 = *(id *)(a1 + 32);
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = [*(id *)(a1 + 40) _findImportEligibleURLsAtURL:*(void *)(*((void *)&v17 + 1) + 8 * (void)v7)];
        [v2 addObjectsFromArray:v8];

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v5);
  }

  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_10014FBE4;
  v11[3] = &unk_100A48520;
  id v9 = *(void **)(a1 + 48);
  v11[4] = *(void *)(a1 + 40);
  id v12 = v2;
  int v16 = *(_DWORD *)(a1 + 72);
  id v13 = v9;
  id v14 = *(id *)(a1 + 56);
  id v15 = *(id *)(a1 + 64);
  id v10 = v2;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v11);
}

void sub_10014FBE4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) launchCoordinator];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10014FCD4;
  v5[3] = &unk_100A48520;
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 32);
  id v6 = v3;
  uint64_t v7 = v4;
  int v11 = *(_DWORD *)(a1 + 72);
  id v8 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  id v10 = *(id *)(a1 + 64);
  [v2 appLaunchCoordinatorPerformWhenLaunched:@"handle Import URLs" block:v5];
}

void sub_10014FCD4(uint64_t a1)
{
  int v16 = +[BKLibraryImportStatusController sharedController];
  id v14 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [*(id *)(a1 + 32) count]);
  id v13 = [*(id *)(a1 + 32) firstObject];
  id v12 = [*(id *)(a1 + 32) lastObject];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id obj = *(id *)(a1 + 32);
  id v15 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
  if (v15)
  {
    uint64_t v11 = *(void *)v24;
    do
    {
      for (i = 0; i != v15; i = (char *)i + 1)
      {
        if (*(void *)v24 != v11) {
          objc_enumerationMutation(obj);
        }
        id v3 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        [v16 startImportOperation];
        if ([v3 isEqual:v13])
        {
          BOOL v4 = *(unsigned char *)(a1 + 72) != 0;
          BOOL v5 = *(unsigned char *)(a1 + 73) != 0;
          BOOL v6 = *(unsigned char *)(a1 + 74) != 0;
        }
        else
        {
          BOOL v4 = 0;
          BOOL v5 = 0;
          BOOL v6 = 0;
        }
        uint64_t v7 = [*(id *)(a1 + 40) importCoordinator];
        uint64_t v8 = *(unsigned __int8 *)(a1 + 75);
        uint64_t v9 = *(void *)(a1 + 48);
        v17[0] = _NSConcreteStackBlock;
        v17[1] = 3221225472;
        v17[2] = sub_10014FFA0;
        v17[3] = &unk_100A484F8;
        v17[4] = v3;
        id v18 = v16;
        id v19 = v14;
        id v21 = *(id *)(a1 + 56);
        id v20 = v12;
        id v22 = *(id *)(a1 + 64);
        [v7 importBookFromURL:v3 openAfterImport:v6 importInPlace:v8 showLibraryAllCollection:v5 switchToLibrary:v4 transaction:v9 completion:v17];
      }
      id v15 = [obj countByEnumeratingWithState:&v23 objects:v27 count:16];
    }
    while (v15);
  }
}

void sub_10014FFA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = BKLibraryBookImportLog();
  BOOL v5 = v4;
  if (v3)
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v6 = *(void *)(a1 + 32);
      int v11 = 141558274;
      uint64_t v12 = 1752392040;
      __int16 v13 = 2112;
      uint64_t v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "handleImportURLs: Imported: %{mask.hash}@", (uint8_t *)&v11, 0x16u);
    }

    [*(id *)(a1 + 40) completeImportOperation];
    [*(id *)(a1 + 48) addObject:v3];
  }
  else
  {
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1007ECE10(a1, v5);
    }

    [*(id *)(a1 + 40) failImportOperation];
  }
  id v7 = objc_retainBlock(*(id *)(a1 + 64));
  uint64_t v8 = v7;
  if (v7) {
    (*((void (**)(id, void, id))v7 + 2))(v7, *(void *)(a1 + 32), v3);
  }

  if ([*(id *)(a1 + 32) isEqual:*(void *)(a1 + 56)])
  {
    uint64_t v9 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 72));
    if (v9)
    {
      id v10 = [*(id *)(a1 + 48) copy];
      v9[2](v9, v10);
    }
  }
}

void sub_10015017C(id a1)
{
  uint64_t v1 = [UTTypePDF identifier];
  v19[0] = v1;
  id v2 = [UTTypeEPUB identifier];
  v19[1] = v2;
  v19[2] = kBKUTITypeEPUBFolder;
  v19[3] = kBKUTITypeBlissEPUB;
  void v19[4] = kBKUTITypeBliss;
  v19[5] = kBKUTITypeBlissAlternate;
  v19[6] = kBKUTITypeBlissIBA;
  id v3 = +[NSArray arrayWithObjects:v19 count:7];

  BOOL v4 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v3 count]);
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v15;
    do
    {
      uint64_t v9 = 0;
      do
      {
        if (*(void *)v15 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = +[UTType typeWithIdentifier:](UTType, "typeWithIdentifier:", *(void *)(*((void *)&v14 + 1) + 8 * (void)v9), (void)v14);
        [v4 addObject:v10];

        uint64_t v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v14 objects:v18 count:16];
    }
    while (v7);
  }

  int v11 = +[BKAppSceneManager supportedAudiobookImportTypes];
  uint64_t v12 = [v4 arrayByAddingObjectsFromArray:v11];
  __int16 v13 = (void *)qword_100B4A480;
  qword_100B4A480 = v12;
}

void sub_1001503E4(id a1)
{
  uint64_t v1 = (void *)qword_100B4A490;
  qword_100B4A490 = (uint64_t)&__NSArray0__struct;
}

void sub_100150450(id a1)
{
  uint64_t v1 = (void *)qword_100B4A4A0;
  qword_100B4A4A0 = (uint64_t)&__NSArray0__struct;
}

BOOL sub_10015095C(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [v2 pathExtension];
  if ([v3 length])
  {
    BOOL v4 = +[BKAssetUtilities utiTypeForContentType:](BKAssetUtilities, "utiTypeForContentType:", +[BKAssetUtilities contentTypeForExtension:v3]);
    if (v4
      && (+[UTType typeWithIdentifier:v4],
          (uint64_t v5 = objc_claimAutoreleasedReturnValue()) != 0))
    {
      id v6 = v5;
      long long v15 = 0u;
      long long v16 = 0u;
      long long v13 = 0u;
      long long v14 = 0u;
      id v7 = +[BKAppSceneManager supportedFileImportTypes];
      id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
      if (v8)
      {
        uint64_t v9 = *(void *)v14;
        while (2)
        {
          for (i = 0; i != v8; i = (char *)i + 1)
          {
            if (*(void *)v14 != v9) {
              objc_enumerationMutation(v7);
            }
            if ([v6 conformsToType:*(void *)(*((void *)&v13 + 1) + 8 * i)])
            {
              LODWORD(v8) = 1;
              goto LABEL_18;
            }
          }
          id v8 = [v7 countByEnumeratingWithState:&v13 objects:v17 count:16];
          if (v8) {
            continue;
          }
          break;
        }
      }
LABEL_18:
    }
    else
    {
      id v6 = BKLibraryBookImportLog();
      if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
        sub_1007ECEA0();
      }
      LODWORD(v8) = 0;
    }

    BOOL v11 = v8 != 0;
  }
  else
  {
    BOOL v11 = 0;
  }

  return v11;
}

BOOL sub_100150B24(id a1, NSURL *a2, NSError *a3)
{
  BOOL v4 = a2;
  uint64_t v5 = a3;
  id v6 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
    sub_1007ECF14();
  }

  return 1;
}

id sub_100150F9C(uint64_t a1)
{
  return [*(id *)(a1 + 32) completeTransition:1];
}

void sub_100151484(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va1, a7);
  va_start(va, a7);
  uint64_t v8 = va_arg(va1, void);
  uint64_t v10 = va_arg(va1, void);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v12 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Unwind_Resume(a1);
}

void sub_1001514B0(uint64_t a1, void *a2)
{
  id v8 = a2;
  BOOL v4 = [v8 dateAccessed];

  if (v4)
  {
    uint64_t v5 = [v8 dateAccessed];
    [v5 timeIntervalSinceReferenceDate];
    if (v6 > *(double *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
    {
      [v5 timeIntervalSinceReferenceDate];
      *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = v7;
      objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40), a2);
    }
  }
}

void sub_1001516F4(uint64_t a1)
{
  objc_opt_class();
  id v2 = [*(id *)(a1 + 32) playbackQueue];
  id v3 = BUDynamicCast();

  BOOL v4 = _os_activity_create((void *)&_mh_execute_header, "Audiobook playback queue request", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100151824;
  block[3] = &unk_100A45980;
  id v9 = v3;
  int8x16_t v7 = *(int8x16_t *)(a1 + 32);
  id v5 = (id)v7.i64[0];
  int8x16_t v10 = vextq_s8(v7, v7, 8uLL);
  id v11 = *(id *)(a1 + 48);
  id v6 = v3;
  os_activity_apply(v4, block);
}

void sub_100151824(id *a1)
{
  id v2 = BKCarPlayLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [a1[4] mediaQuery];
    *(_DWORD *)buf = 138412290;
    id v37 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "setplaybackqueue request: %@", buf, 0xCu);
  }
  id v4 = a1[4];
  if (v4)
  {
    id v5 = [v4 firstItem];

    if (v5)
    {
      objc_opt_class();
      id v6 = [a1[4] firstItem];
      BUDynamicCast();
    }
    else
    {
      id v6 = [a1[4] mediaQuery];
      [a1[5] _currentMediaItemFromQuery:v6];
    id v9 = };

    if (v9)
    {
      int8x16_t v10 = +[BKAppDelegate sceneManager];
      id v11 = +[BKAppDelegate currentSceneController];
      uint64_t v12 = [v10 bookPresenter];
      if (v12)
      {
        long long v13 = [v9 bk_assetID];
        long long v14 = +[NSMutableDictionary dictionary];
        long long v15 = +[UIApplication sharedApplication];
        id v16 = [v15 applicationState];

        if (v16)
        {
          v34[0] = @"BKBookPresentWithoutAnimations";
          v34[1] = @"BKBookPresentingForceOpenBeforeWelcomeCompleted";
          v35[0] = &__kCFBooleanTrue;
          v35[1] = &__kCFBooleanTrue;
          v34[2] = AEAudioBookForceAudiobookPlayIfCurrentAsset;
          v34[3] = AEAudiobookOptionsShouldBeginPlaybackInBackground;
          v35[2] = &__kCFBooleanTrue;
          v35[3] = &__kCFBooleanTrue;
          long long v17 = +[NSDictionary dictionaryWithObjects:v35 forKeys:v34 count:4];
          [v14 addEntriesFromDictionary:v17];
        }
        id v18 = [a1[6] sessionIdentifierOverride];

        if (v18)
        {
          id v19 = [a1[6] sessionIdentifierOverride];
          [v14 setObject:v19 forKeyedSubscript:AEAudiobookOptionsSessionID];
        }
        id v20 = [v11 newShowAssetTransaction];
        v31[0] = _NSConcreteStackBlock;
        v31[1] = 3221225472;
        v31[2] = sub_100151D28;
        v31[3] = &unk_100A44120;
        id v21 = v13;
        id v32 = v21;
        id v33 = a1[7];
        [v20 whenCancelled:v31];
        id v22 = BKCarPlayLog();
        if (os_log_type_enabled(v22, OS_LOG_TYPE_DEFAULT))
        {
          *(_DWORD *)buf = 138412290;
          id v37 = v21;
          _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_DEFAULT, "setplaybackqueue begin playback assetID: %@", buf, 0xCu);
        }

        v28[0] = _NSConcreteStackBlock;
        v28[1] = 3221225472;
        v28[2] = sub_100151DF8;
        v28[3] = &unk_100A45CF0;
        id v29 = v21;
        id v30 = a1[7];
        id v23 = v21;
        [v12 showAssetWithTransaction:v20 assetID:v23 location:0 options:v14 completion:v28];
      }
      else
      {
        long long v26 = BKCarPlayLog();
        if (os_log_type_enabled(v26, OS_LOG_TYPE_ERROR)) {
          sub_1007ED0D0(v26);
        }

        id v27 = objc_retainBlock(a1[7]);
        long long v14 = v27;
        if (v27) {
          (*((void (**)(id, uint64_t))v27 + 2))(v27, 200);
        }
      }
    }
    else
    {
      long long v24 = BKCarPlayLog();
      if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
        sub_1007ED054((uint64_t)a1, v24);
      }

      id v25 = objc_retainBlock(a1[7]);
      int8x16_t v10 = v25;
      if (v25) {
        (*((void (**)(id, uint64_t))v25 + 2))(v25, 100);
      }
    }
  }
  else
  {
    int8x16_t v7 = BKCarPlayLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007ECFD8((uint64_t)a1, v7);
    }

    id v8 = objc_retainBlock(a1[7]);
    id v9 = v8;
    if (v8) {
      (*((void (**)(id, uint64_t))v8 + 2))(v8, 200);
    }
  }
}

void sub_100151D28(uint64_t a1)
{
  id v2 = BKCarPlayLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v6 = 138412290;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "setplaybackqueue tx was cancelled %@", (uint8_t *)&v6, 0xCu);
  }

  id v4 = objc_retainBlock(*(id *)(a1 + 40));
  id v5 = v4;
  if (v4) {
    (*((void (**)(id, uint64_t))v4 + 2))(v4, 200);
  }
}

void sub_100151DF8(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  kdebug_trace();
  if (a2) {
    uint64_t v6 = 0;
  }
  else {
    uint64_t v6 = 200;
  }
  uint64_t v7 = BKCarPlayLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    int v11 = 134218498;
    uint64_t v12 = v6;
    __int16 v13 = 2112;
    id v14 = v5;
    __int16 v15 = 2112;
    uint64_t v16 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "setplaybackqueue status: %ld error: %@ assetID: %@", (uint8_t *)&v11, 0x20u);
  }

  id v9 = objc_retainBlock(*(id *)(a1 + 40));
  int8x16_t v10 = v9;
  if (v9) {
    (*((void (**)(id, uint64_t))v9 + 2))(v9, v6);
  }
}

void sub_100152154(id a1)
{
  id v2 = +[JSABridge sharedInstance];
  uint64_t v1 = [v2 currentPackage];
  [v1 startEviction];
}

id sub_1001526B0(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  id v8 = v5;
  id v9 = [v8 lastPathComponent];
  if (([v9 hasPrefix:@".itemprovider"] & 1) != 0
    || [v9 hasPrefix:@".com.apple.UIKit.ItemProvider"])
  {
    int8x16_t v10 = [v7 suggestedName];

    if (![v10 length])
    {
      int v11 = +[NSBundle mainBundle];
      uint64_t v12 = [v11 localizedStringForKey:@"Untitled" value:&stru_100A70340 table:0];

      int8x16_t v10 = (void *)v12;
    }
    __int16 v13 = BCDragRepresentationFactoryFileExtensionForURLAndUTI();
    if (v13)
    {
      uint64_t v14 = [v10 stringByAppendingPathExtension:v13];

      int8x16_t v10 = (void *)v14;
    }
    id v15 = v10;
    uint64_t v16 = +[NSMutableCharacterSet illegalCharacterSet];
    long long v17 = +[NSCharacterSet punctuationCharacterSet];
    [v16 formUnionWithCharacterSet:v17];

    id v18 = +[NSCharacterSet controlCharacterSet];
    [v16 formUnionWithCharacterSet:v18];

    [v16 addCharactersInString:@"/:"];
    id v9 = [v15 stringByTrimmingCharactersInSet:v16];
  }
  id v19 = +[NSFileManager defaultManager];
  id v20 = NSTemporaryDirectory();
  unint64_t v21 = 0;
  *(void *)&long long v22 = 138412290;
  long long v33 = v22;
  do
  {
    id v23 = +[NSUUID UUID];
    long long v24 = [v23 UUIDString];
    id v25 = [v20 stringByAppendingPathComponent:v24];

    if ([v19 fileExistsAtPath:v25])
    {
      id v26 = 0;
    }
    else
    {
      id v34 = 0;
      unsigned int v27 = [v19 createDirectoryAtPath:v25 withIntermediateDirectories:1 attributes:0 error:&v34];
      id v28 = v34;
      if (v27)
      {
        id v26 = v25;
      }
      else
      {
        id v29 = BCDragAndDropLog();
        if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = v33;
          id v36 = v28;
          _os_log_error_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_ERROR, "Could not create temporary folder. Error: %@", buf, 0xCu);
        }

        id v26 = 0;
      }
    }
    if (v21 > 0x62) {
      break;
    }
    ++v21;
  }
  while (!v26);
  id v30 = +[NSURL fileURLWithPath:v26];

  id v31 = [v30 URLByAppendingPathComponent:v9];

  return v31;
}

id sub_100152A40()
{
  v0 = [UTTypeUTF8PlainText identifier];
  uint64_t v1 = [UTTypeURL identifier:v0];
  v9[1] = v1;
  id v2 = [UTTypePDF identifier];
  void v9[2] = v2;
  uint64_t v3 = [UTTypeEPUB identifier];
  v9[3] = v3;
  v9[4] = kBKUTITypeBliss;
  v9[5] = kBKUTITypeBlissAlternate;
  v9[6] = kBKUTITypeBlissIBA;
  id v4 = +[NSArray arrayWithObjects:v9 count:7];

  id v5 = +[BKAppSceneManager supportedAudiobookImportTypes];
  id v6 = [v5 valueForKeyPath:@"identifier"];

  id v7 = [v4 arrayByAddingObjectsFromArray:v6];

  return v7;
}

id sub_100152BC0()
{
  v0 = +[BKAppSceneManager supportedFileImportTypes];
  uint64_t v1 = [v0 valueForKeyPath:@"identifier"];

  return v1;
}

void sub_100152C1C(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v3 canLoadObjectsOfClass:objc_opt_class()])
  {
    uint64_t v5 = objc_opt_class();
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100152CF8;
    v7[3] = &unk_100A48430;
    id v8 = v4;
    id v6 = [v3 loadObjectsOfClass:v5 completion:v7];
  }
}

void sub_100152CF8(uint64_t a1, void *a2)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v3 = a2;
  id v4 = (char *)[v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = *(void *)v13;
    while (2)
    {
      id v7 = 0;
      do
      {
        if (*(void *)v13 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_opt_class();
        uint64_t v8 = BUDynamicCast();
        if (v8)
        {
          id v9 = (void *)v8;
          goto LABEL_11;
        }
        ++v7;
      }
      while (v5 != v7);
      uint64_t v5 = (char *)[v3 countByEnumeratingWithState:&v12 objects:v16 count:16];
      if (v5) {
        continue;
      }
      break;
    }
  }
  id v9 = 0;
LABEL_11:

  id v10 = objc_retainBlock(*(id *)(a1 + 32));
  int v11 = v10;
  if (v10) {
    (*((void (**)(id, void *))v10 + 2))(v10, v9);
  }
}

void sub_100152E44(void *a1)
{
}

void sub_100152E50(id a1, NSURL *a2)
{
  id v2 = a2;
  id v3 = v2;
  if (v2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100152EE8;
    block[3] = &unk_100A43D60;
    uint64_t v5 = v2;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100152EE8(uint64_t a1)
{
  id v3 = +[BKAppDelegate delegate];
  id v2 = +[UIApplication sharedApplication];
  [v3 application:v2 openURL:*(void *)(a1 + 32) options:&__NSDictionary0__struct];
}

void sub_100152F68(void *a1, void *a2, void *a3)
{
  id v5 = a1;
  id v6 = a2;
  id v7 = a3;
  uint64_t v8 = +[BKAppDelegate sceneManager];
  id v9 = +[BKAppSceneManager supportedFileImportTypes];
  id v10 = +[NSFileManager defaultManager];
  int v11 = +[BKLibraryManager defaultManager];
  v55[0] = _NSConcreteStackBlock;
  v55[1] = 3221225472;
  v55[2] = sub_100153424;
  v55[3] = &unk_100A486B8;
  id v33 = v8;
  id v56 = v33;
  id v32 = v7;
  id v57 = v32;
  id v30 = v11;
  id v58 = v30;
  id v31 = v6;
  id v59 = v31;
  long long v12 = objc_retainBlock(v55);
  v52[0] = _NSConcreteStackBlock;
  v52[1] = 3221225472;
  v52[2] = sub_1001537B0;
  v52[3] = &unk_100A486E0;
  id v29 = v10;
  id v53 = v29;
  long long v13 = v12;
  id v54 = v13;
  long long v14 = objc_retainBlock(v52);
  v49[0] = _NSConcreteStackBlock;
  v49[1] = 3221225472;
  v49[2] = sub_100153AE0;
  v49[3] = &unk_100A48730;
  id v28 = v13;
  id v50 = v28;
  unsigned int v27 = v14;
  id v51 = v27;
  id v37 = objc_retainBlock(v49);
  id v34 = v9;
  uint64_t v39 = [v9 arrayByAddingObject:UTTypeFolder];
  long long v45 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  int8x16_t v35 = v5;
  id obj = [v5 items];
  id v40 = [obj countByEnumeratingWithState:&v45 objects:v63 count:16];
  if (v40)
  {
    uint64_t v38 = *(void *)v46;
    do
    {
      for (i = 0; i != v40; i = (char *)i + 1)
      {
        if (*(void *)v46 != v38) {
          objc_enumerationMutation(obj);
        }
        uint64_t v16 = *(void **)(*((void *)&v45 + 1) + 8 * i);
        long long v17 = [v16 itemProvider:v27, v28, v29, v30, v31, v32, v33];
        long long v41 = 0u;
        long long v42 = 0u;
        long long v43 = 0u;
        long long v44 = 0u;
        id v18 = v39;
        id v19 = [v18 countByEnumeratingWithState:&v41 objects:v62 count:16];
        if (v19)
        {
          id v20 = v19;
          uint64_t v21 = *(void *)v42;
          while (2)
          {
            for (j = 0; j != v20; j = (char *)j + 1)
            {
              if (*(void *)v42 != v21) {
                objc_enumerationMutation(v18);
              }
              id v23 = *(void **)(*((void *)&v41 + 1) + 8 * (void)j);
              long long v24 = [v23 identifier];
              unsigned int v25 = [v17 hasRepresentationConformingToTypeIdentifier:v24 fileOptions:0];

              if (v25)
              {
                id v26 = [v23 identifier];
                ((void (*)(void *, void *, void *))v37[2])(v37, v16, v26);

                goto LABEL_17;
              }
            }
            id v20 = [v18 countByEnumeratingWithState:&v41 objects:v62 count:16];
            if (v20) {
              continue;
            }
            break;
          }
        }

        id v18 = BCDragAndDropLog();
        if (os_log_type_enabled(v18, OS_LOG_TYPE_ERROR)) {
          sub_1007ED114(v60, v17, &v61, v18);
        }
LABEL_17:
      }
      id v40 = [obj countByEnumeratingWithState:&v45 objects:v63 count:16];
    }
    while (v40);
  }
}

void sub_100153424(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = BCDragAndDropLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = [v5 path];
    *(_DWORD *)buf = 141558274;
    uint64_t v19 = 1752392040;
    __int16 v20 = 2112;
    uint64_t v21 = v8;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BKDropSessionImportFiles: importURL: %{mask.hash}@", buf, 0x16u);
  }
  id v9 = *(void **)(a1 + 32);
  id v17 = v5;
  id v10 = +[NSArray arrayWithObjects:&v17 count:1];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  v13[2] = sub_1001535DC;
  v13[3] = &unk_100A48690;
  id v16 = v6;
  uint64_t v11 = *(void *)(a1 + 40);
  id v14 = *(id *)(a1 + 48);
  id v15 = *(id *)(a1 + 56);
  id v12 = v6;
  [v9 handleImportURLs:v10 transaction:v11 perURLCompletion:v13 completion:0];
}

void sub_1001535DC(id *a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = objc_retainBlock(a1[6]);
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, BOOL))v5 + 2))(v5, v4 != 0);
  }

  if (v4)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001536D4;
    block[3] = &unk_100A443C8;
    id v8 = a1[4];
    id v9 = a1[5];
    id v10 = v4;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1001536D4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) collectionProvider];
  id v3 = [v2 collectionOnMainQueueWithCollectionID:*(void *)(a1 + 40) error:0];

  id v4 = [*(id *)(a1 + 32) collectionController];
  uint64_t v6 = *(void *)(a1 + 48);
  id v5 = +[NSArray arrayWithObjects:&v6 count:1];
  [v4 addBooks:v5 toCollection:v3 forceToTop:0 completion:0];
}

void sub_1001537B0(uint64_t a1, void *a2, void *a3, void *a4, void *a5)
{
  id v9 = a2;
  id v10 = a5;
  id v11 = a4;
  id v12 = a3;
  long long v13 = BCDragAndDropLog();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    id v14 = [v9 path];
    *(_DWORD *)buf = 141558274;
    uint64_t v29 = 1752392040;
    __int16 v30 = 2112;
    id v31 = v14;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BKDropSessionImportFiles: importURLWithMove: %{mask.hash}@", buf, 0x16u);
  }
  id v15 = [v12 itemProvider];

  id v16 = sub_1001526B0(v9, v11, v15);

  id v17 = *(void **)(a1 + 32);
  id v27 = 0;
  LODWORD(v15) = [v17 moveItemAtURL:v9 toURL:v16 error:&v27];
  id v18 = v27;
  if (v15)
  {
    v23[0] = _NSConcreteStackBlock;
    v23[1] = 3221225472;
    v23[2] = sub_100153A70;
    v23[3] = &unk_100A45BB0;
    uint64_t v19 = *(void *)(a1 + 40);
    id v24 = *(id *)(a1 + 32);
    id v25 = v16;
    id v26 = v10;
    (*(void (**)(uint64_t, id, void *))(v19 + 16))(v19, v25, v23);

    __int16 v20 = v24;
  }
  else
  {
    uint64_t v21 = BCDragAndDropLog();
    if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR))
    {
      *(_DWORD *)buf = 141559042;
      uint64_t v29 = 1752392040;
      __int16 v30 = 2112;
      id v31 = v9;
      __int16 v32 = 2160;
      uint64_t v33 = 1752392040;
      __int16 v34 = 2112;
      int8x16_t v35 = v16;
      __int16 v36 = 2112;
      id v37 = v18;
      _os_log_error_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_ERROR, "BKDropSessionImportFiles: importURLWithMove: moveItemAtURL failed. url: %{mask.hash}@ destURL: %{mask.hash}@ error: %@", buf, 0x34u);
    }

    id v22 = objc_retainBlock(v10);
    __int16 v20 = v22;
    if (v22) {
      (*((void (**)(id, void))v22 + 2))(v22, 0);
    }
  }
}

void sub_100153A70(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) removeItemAtURL:*(void *)(a1 + 40) error:0];
  id v4 = objc_retainBlock(*(id *)(a1 + 48));
  if (v4)
  {
    id v5 = v4;
    (*((void (**)(id, uint64_t))v4 + 2))(v4, a2);
    id v4 = v5;
  }
}

void sub_100153AE0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 itemProvider];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_100153BEC;
  v11[3] = &unk_100A48708;
  id v12 = v6;
  id v14 = *(id *)(a1 + 32);
  id v15 = *(id *)(a1 + 40);
  id v13 = v5;
  id v8 = v5;
  id v9 = v6;
  id v10 = [v7 loadInPlaceFileRepresentationForTypeIdentifier:v9 completionHandler:v11];
}

void sub_100153BEC(void *a1, void *a2, int a3, void *a4)
{
  id v7 = a2;
  id v8 = a4;
  id v9 = BCDragAndDropLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = a1[4];
    *(_DWORD *)buf = 138543618;
    uint64_t v19 = v10;
    __int16 v20 = 1024;
    int v21 = a3;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BKDropSessionImportFiles: importItem: type: %{public}@ isInPlace: %d", buf, 0x12u);
  }

  if (v7)
  {
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_100153DAC;
    v15[3] = &unk_100A46710;
    unsigned __int8 v17 = [v7 startAccessingSecurityScopedResource];
    id v11 = v7;
    id v16 = v11;
    id v13 = objc_retainBlock(v15);
    if (a3) {
      (*(void (**)(void, NSObject *, void *, uint64_t))(a1[6] + 16))(a1[6], v11, v13, v12);
    }
    else {
      (*(void (**)(void, NSObject *, void, void))(a1[7] + 16))(a1[7], v11, a1[5], a1[4]);
    }

    id v14 = v16;
  }
  else
  {
    id v14 = BCDragAndDropLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1007ED18C((uint64_t)v8, v14);
    }
  }
}

id *sub_100153DAC(id *result)
{
  if (*((unsigned char *)result + 40)) {
    return (id *)[result[4] stopAccessingSecurityScopedResource];
  }
  return result;
}

uint64_t sub_100153DC0(void *a1)
{
  id v1 = a1;
  if ([v1 canLoadObjectsOfClass:objc_opt_class()]) {
    uint64_t v2 = sub_100153E1C(v1) ^ 1;
  }
  else {
    uint64_t v2 = 0;
  }

  return v2;
}

uint64_t sub_100153E1C(void *a1)
{
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v1 = [a1 items];
  id v2 = [v1 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v12;
    while (2)
    {
      id v5 = 0;
      do
      {
        if (*(void *)v12 != v4) {
          objc_enumerationMutation(v1);
        }
        uint64_t v6 = [*(id *)(*((void *)&v11 + 1) + 8 * (void)v5) itemProvider];
        id v7 = [(id)v6 registeredTypeIdentifiers];
        id v8 = [v7 firstObject];

        LOBYTE(v6) = [v8 isEqualToString:@"com.apple.mapkit.map-item"];
        if (v6)
        {
          uint64_t v9 = 1;
          goto LABEL_11;
        }
        id v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v11 objects:v15 count:16];
      if (v3) {
        continue;
      }
      break;
    }
  }
  uint64_t v9 = 0;
LABEL_11:

  return v9;
}

uint64_t sub_100153F70(void *a1, void *a2)
{
  id v3 = a1;
  id v4 = a2;
  if ([v4 count]
    && ([v3 hasItemsConformingToTypeIdentifiers:v4] & 1) != 0)
  {
    uint64_t v5 = 1;
  }
  else if ([v3 canLoadObjectsOfClass:objc_opt_class()])
  {
    uint64_t v5 = sub_100153E1C(v3) ^ 1;
  }
  else
  {
    uint64_t v5 = 0;
  }

  return v5;
}

id sub_100154004(void *a1)
{
  id v1 = a1;
  id v2 = [UTTypeFolder identifier];
  uint64_t v6 = v2;
  id v3 = +[NSArray arrayWithObjects:&v6 count:1];
  id v4 = [v1 hasItemsConformingToTypeIdentifiers:v3];

  return v4;
}

void sub_100154A64(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) libraryAssetOnMainQueueWithAssetID:*(void *)(a1 + 40)];
  id v3 = objc_opt_class();
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100154B30;
  _OWORD v4[3] = &unk_100A440A8;
  id v5 = *(id *)(a1 + 48);
  [v3 fetchImageForAsset:v2 size:0 includeSpine:0 includeShadow:0 coverEffectsEnvironment:v4 completion:*(double *)(a1 + 56), *(double *)(a1 + 64)];
}

uint64_t sub_100154B30(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = [a2 CGImage];
  id v4 = *(uint64_t (**)(uint64_t, id, void))(v2 + 16);

  return v4(v2, v3, 0);
}

uint64_t sub_100154B7C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100155240(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (!v5)
  {
    id v7 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007ED2F8(a1, v7, v8, v9, v10, v11, v12, v13);
    }
  }
  id v14 = objc_retainBlock(*(id *)(a1 + 40));
  id v15 = v14;
  if (v14) {
    (*((void (**)(id, id, void, void))v14 + 2))(v14, v5, 0, 0);
  }
}

void sub_100155690(id *a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) != 0 && [v3 length])
  {
    id v4 = [a1[4] assetFromAssetID:v3];
    id v5 = v4;
    if (v4)
    {
      id v6 = [v4 representativeItem];
      id v7 = [v6 bk_storeID];

      if ((uint64_t)[v7 longLongValue] < 1)
      {
        objc_opt_class();
        uint64_t v9 = [v5 representativeItem];
        uint64_t v10 = [v9 valueForProperty:MPMediaItemPropertyAlbumPersistentID];
        uint64_t v11 = BUDynamicCast();

        uint64_t v12 = BKLibraryDataSourceMediaLibraryLog();
        BOOL v13 = os_log_type_enabled(v12, OS_LOG_TYPE_DEBUG);
        if (v11)
        {
          if (v13)
          {
            int v21 = [v5 title];
            int v22 = 138412802;
            id v23 = v11;
            __int16 v24 = 2112;
            id v25 = v3;
            __int16 v26 = 2112;
            id v27 = v21;
            _os_log_debug_impl((void *)&_mh_execute_header, v12, OS_LOG_TYPE_DEBUG, "Preparing to delete asset with albumPersistentID: %@, assetID: %@, title: %@", (uint8_t *)&v22, 0x20u);
          }
          [a1[7] addObject:v11];
          [a1[6] addObject:v5];
        }
        else
        {
          if (v13) {
            sub_1007ED430((uint64_t)v3, v12, v14, v15, v16, v17, v18, v19);
          }
        }
      }
      else
      {
        uint64_t v8 = BKLibraryDataSourceMediaLibraryLog();
        if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG))
        {
          __int16 v20 = [v5 title];
          int v22 = 138412802;
          id v23 = v7;
          __int16 v24 = 2112;
          id v25 = v3;
          __int16 v26 = 2112;
          id v27 = v20;
          _os_log_debug_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEBUG, "Preparing to delete asset with storePlaylistID: %@, assetID: %@, title: %@", (uint8_t *)&v22, 0x20u);
        }
        [a1[5] addObject:v7];
        [a1[6] addObject:v5];
      }
    }
  }
}

void sub_100156118(_Unwind_Exception *a1)
{
  _Unwind_Resume(a1);
}

void *sub_100156194(void *a1)
{
  uint64_t v2 = sub_10009BA14(a1);
  sub_10009BA14(v2 + 4);
  sub_10009BA14(a1 + 8);
  sub_10009BA14(a1 + 12);
  sub_10009BA14(a1 + 16);
  sub_10009BA14(a1 + 20);
  sub_10009BA14(a1 + 24);
  sub_10009BA14(a1 + 28);
  sub_10009BA14(a1 + 32);
  *(void *)((char *)a1 + 293) = 0;
  a1[36] = 0;
  return a1;
}

void sub_100157740(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  [*(id *)(a1 + 32) _addAssetIDsToCacheManager:v8];
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);
  }
}

void sub_100157D74(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v7 = a3;
  id v8 = a4;
  if ([v7 count])
  {
    uint64_t v9 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      int v13 = 134217984;
      id v14 = [v7 count];
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "Successfully unclaimed %lu assets", (uint8_t *)&v13, 0xCu);
    }

    +[BKMediaLibraryChangeCollector logAssets:v7 message:@"removing"];
    uint64_t v10 = [*(id *)(a1 + 32) libraryManager];
    [v10 libraryDataSource:*(void *)(a1 + 32) removedAssets:v7];
  }
  id v11 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v12 = v11;
  if (v11) {
    (*((void (**)(id, uint64_t, id))v11 + 2))(v11, a2, v8);
  }
}

void sub_100158774(uint64_t a1)
{
  id v5 = +[JSABridge sharedInstance];
  uint64_t v2 = [v5 windowManager];
  id v3 = [*(id *)(a1 + 32) view];
  id v4 = [v3 window];
  [v2 updateWindowSizeIfNeeded:v4];
}

void sub_1001590C8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,char a34)
{
  _Block_object_dispose(&a34, 8);
  _Block_object_dispose((const void *)(v34 - 216), 8);
  _Block_object_dispose((const void *)(v34 - 136), 8);
  _Unwind_Resume(a1);
}

void sub_100159108(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10015911C(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100159130(uint64_t a1, char a2)
{
  *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = a2;
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_100159144(uint64_t a1)
{
  uint64_t v1 = a1;
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 88) + 8) + 24)
    && !*(unsigned char *)(*(void *)(*(void *)(a1 + 96) + 8) + 24)
    && (!*(unsigned char *)(*(void *)(*(void *)(a1 + 104) + 8) + 24) || *(unsigned char *)(a1 + 112) || *(unsigned char *)(a1 + 113)))
  {
    if (!*(unsigned char *)(a1 + 115) && !*(unsigned char *)(a1 + 113))
    {
      uint64_t v15 = 0;
      goto LABEL_107;
    }
    long long v134 = 0u;
    long long v135 = 0u;
    long long v132 = 0u;
    long long v133 = 0u;
    int v22 = [*(id *)(a1 + 72) queryItems];
    id v23 = [v22 countByEnumeratingWithState:&v132 objects:v140 count:16];
    __int16 v24 = off_100A3C000;
    if (!v23)
    {
LABEL_42:
      int v33 = 0;
      goto LABEL_47;
    }
    id v25 = v23;
    uint64_t v123 = v1;
    uint64_t v26 = *(void *)v133;
LABEL_27:
    uint64_t v27 = 0;
    while (1)
    {
      if (*(void *)v133 != v26) {
        objc_enumerationMutation(v22);
      }
      id v28 = *(void **)(*((void *)&v132 + 1) + 8 * v27);
      uint64_t v29 = [v28 name];
      id v30 = [v29 caseInsensitiveCompare:@"reason"];

      if (!v30)
      {
        id v31 = [v28 value];
        if (![v31 caseInsensitiveCompare:@"preorder-available"])
        {

LABEL_37:
          uint64_t v34 = +[BURestrictionsProvider sharedInstance];
          unsigned int v35 = [v34 isBookStoreAllowed];

          if (!v35)
          {
            int v33 = 0;
            uint64_t v1 = v123;
            __int16 v24 = off_100A3C000;
            goto LABEL_48;
          }
          __int16 v24 = off_100A3C000;
          uint64_t v1 = v123;
          int v22 = +[NSURL assetIDFromURL:*(void *)(v123 + 32)];
          if (![v22 length]) {
            goto LABEL_42;
          }
          unsigned int v36 = +[BKLibraryDataSourceJalisco isShowPurchasesEnabled];
          id v37 = [*(id *)(v123 + 40) libraryAssetProvider];
          uint64_t v38 = [v37 libraryAssetOnMainQueueWithAssetID:v22];

          if (([v38 canOpen] & 1) != 0
            || ([v38 isStore] & v36) == 1)
          {
            uint64_t v39 = [*(id *)(v123 + 40) libraryAssetProvider];
            id v40 = +[NSDate date];
            [v39 updateLibraryAssetWithID:v22 withLastOpenDate:v40 completion:0];

            long long v41 = [*(id *)(v123 + 40) delegate];
            long long v42 = [v41 libraryCollectionPresenter];
            [v42 showLibraryWithTransaction:*(void *)(v123 + 48) animated:1 assetID:v22 completion:0];
          }
          else
          {
            long long v43 = [*(id *)(v123 + 40) delegate];
            long long v44 = [v43 libraryCollectionPresenter];
            uint64_t v45 = *(void *)(v123 + 48);
            v128[0] = _NSConcreteStackBlock;
            v128[1] = 3221225472;
            v128[2] = sub_100159EDC;
            v128[3] = &unk_100A443C8;
            id v129 = v38;
            id v130 = v22;
            id v131 = *(id *)(v123 + 48);
            [v44 showLibraryWithTransaction:v45 animated:1 completion:v128];

            long long v41 = v129;
          }

          int v33 = 1;
LABEL_47:

LABEL_48:
          if (*(unsigned char *)(v1 + 115)) {
            [*(id *)(v1 + 32) host];
          }
          else {
          long long v46 = [*(id *)(v1 + 72) path];
          }
          long long v47 = v46;
          if (v33
            || [v46 containsString:@"show-reading-now"]
            && ([*(id *)(v1 + 40) _handleShowReadingNowWithTransaction:*(void *)(v1 + 48)] & 1) != 0)
          {
            goto LABEL_52;
          }
          if ([v47 containsString:@"reading-goals"])
          {
            v69 = [*(id *)(v1 + 40) delegate];
            v70 = [v69 storePresenter];
            unsigned __int8 v71 = [v70 storeHandleURL:*(void *)(v1 + 32) sourceApplication:*(void *)(v1 + 56) annotation:*(void *)(v1 + 64) isLaunch:*(unsigned __int8 *)(v1 + 114) transaction:*(void *)(v1 + 48)];

            if (v71) {
              goto LABEL_52;
            }
          }
          if ([v47 containsString:@"show-audiobook-store"]
            && (+[BURestrictionsProvider sharedInstance],
                v72 = objc_claimAutoreleasedReturnValue(),
                unsigned int v73 = [v72 isBookStoreAllowed],
                v72,
                v73)
            && ([*(id *)(v1 + 40) _handleShowAudiobooksMainWithTransaction:*(void *)(v1 + 48)] & 1) != 0)
          {
LABEL_52:
            unsigned int v48 = 1;
          }
          else if ([v47 containsString:@"show-manga-store"] {
                 && (+[BURestrictionsProvider sharedInstance],
          }
                     v74 = objc_claimAutoreleasedReturnValue(),
                     unsigned int v75 = [v74 isBookStoreAllowed],
                     v74,
                     v75))
          {
            unsigned int v48 = [*(id *)(v1 + 40) _handleShowMangaMainWithTransaction:*(void *)(v1 + 48)];
          }
          else
          {
            unsigned int v48 = 0;
          }
          __int16 v49 = v24[286];
          id v50 = (id *)(v1 + 32);
          id v51 = [(__objc2_class *)v49 assetIDFromURL:*(void *)(v1 + 32)];
          uint64_t v52 = [*(id *)(v1 + 32) bu_libraryIDFromURL];
          id v53 = (void *)v52;
          if (v52) {
            id v54 = (void *)v52;
          }
          else {
            id v54 = v51;
          }
          id v55 = v54;

          if ([v55 length] && !v48)
          {
            id v56 = +[MPMediaQuery bk_audiobooksQuery];
            id v57 = +[MPMediaPropertyPredicate predicateWithValue:v55 forProperty:MPMediaItemPropertyAlbumPersistentID];
            [v56 addFilterPredicate:v57];

            id v58 = [v56 items];
            id v59 = [v58 firstObject];

            if (v59)
            {
              v118 = v51;
              v124 = v47;
              v60 = *(void **)(v1 + 40);
              uint64_t v61 = *(void *)(v1 + 48);
              [v59 bk_assetID];
              id v62 = v55;
              v64 = uint64_t v63 = v1;
              unsigned int v48 = 1;
              id v65 = [v60 _newShowAssetTransactionFromExistingTransaction:v61 forAssetID:v64 isAudiobook:1];

              v66 = [*(id *)(v63 + 40) delegate];
              v67 = [v66 bookPresenter];
              v68 = [v59 bk_assetID];
              [v67 showAssetWithTransaction:v65 assetID:v68 location:0 options:0 completion:0];

              uint64_t v1 = v63;
              id v55 = v62;

              long long v47 = v124;
              id v51 = v118;
            }
            else
            {
              unsigned int v48 = 0;
            }
          }
          if (v48)
          {
            unsigned int v76 = 1;
            goto LABEL_106;
          }
          id v77 = *(id *)(v1 + 32);
          id v121 = v55;
          if (!*(unsigned char *)(v1 + 115))
          {
            id v78 = [*(id *)(v1 + 72) copy];
            [v78 setScheme:@"ibooks"];
            v79 = [v78 host];
            unsigned int v80 = [v79 containsString:@"books.apple.com"];

            if (v80)
            {
              v81 = v47;
              uint64_t v82 = v1;
              v83 = [v78 URL];
              v84 = [v83 absoluteString];
              v85 = [v84 stringByReplacingOccurrencesOfString:@"books.apple.com/" withString:&stru_100A70340];

              v86 = +[NSURL URLWithString:v85];
              v87 = v86;
              if (v86)
              {
                id v88 = v86;

                id v77 = v88;
              }

              uint64_t v1 = v82;
              long long v47 = v81;
              id v55 = v121;
            }
          }
          uint64_t v89 = *(void *)(v1 + 56);
          uint64_t v90 = *(void *)(v1 + 64);
          id v127 = 0;
          v91 = [*(id *)(v1 + 40) p_libraryAssetFromIbooksSchemeURL:v77 sourceApplication:v89 annotation:v90 remainingPath:&v127 canScheduleOperations:*(unsigned __int8 *)(v1 + 114) transaction:*(void *)(v1 + 48)];
          id v92 = v127;
          if (v91 && [v91 isOwned])
          {
            v125 = v47;
            id v119 = v77;
            if ([v92 length])
            {
              id v93 = objc_alloc((Class)BKAnchorPathLocation);
              v94 = [*v50 fragment];
              id v95 = [v93 initWithOrdinal:-1 anchor:v94 andPath:v92];
            }
            else
            {
              v102 = [*v50 fragment];
              id v103 = [v102 length];

              if (v103)
              {
                id v95 = [*(id *)(v1 + 40) locationFromURLFragment:*(void *)(v1 + 32)];
              }
              else
              {
                id v95 = 0;
              }
            }
            uint64_t v101 = v1;
            if ([v91 canOpen])
            {
              v99 = +[NSMutableDictionary dictionary];
              v104 = [*(id *)(v101 + 40) delegate];
              if ([v104 pushLargeCoverForInitialHandleURLBookOpen])
              {

                goto LABEL_98;
              }
              v105 = [*(id *)(v101 + 40) delegate];
              unsigned int v106 = [v105 pushLargeCoverForNextHandleURLBookOpen];

              if (v106) {
LABEL_98:
              }
                [v99 setObject:&__kCFBooleanTrue forKeyedSubscript:@"BKBookPresentingUseLargeCoverIfNeeded"];
              if ([v91 isPreorderBook]) {
                [v99 setObject:&__kCFBooleanTrue forKeyedSubscript:AEHelperNumberIsPreorderKey];
              }
              v107 = *(void **)(v101 + 40);
              uint64_t v108 = *(void *)(v101 + 48);
              v109 = [v91 assetID];
              id v116 = [v107 _newShowAssetTransactionFromExistingTransaction:v108 forAssetID:v109 isAudiobook:[v91 isAudiobook]];

              v110 = sub_10015ADA0();
              if (os_log_type_enabled(v110, OS_LOG_TYPE_DEFAULT))
              {
                *(_WORD *)buf = 0;
                _os_log_impl((void *)&_mh_execute_header, v110, OS_LOG_TYPE_DEFAULT, "Now proceed to showAssetWithTransaction", buf, 2u);
              }

              v111 = [*(id *)(v101 + 40) delegate];
              v112 = [v111 bookPresenter];
              v113 = [v91 assetID];
              [v112 showAssetWithTransaction:v116 assetID:v113 location:v95 options:v99 completion:0];

              unsigned int v76 = 1;
            }
            else
            {
              v99 = sub_10015ADA0();
              if (os_log_type_enabled(v99, OS_LOG_TYPE_ERROR)) {
                sub_1007ED558((uint64_t *)v50, v99);
              }
              unsigned int v76 = 0;
            }
LABEL_104:

            uint64_t v1 = v101;
            id v55 = v121;
            long long v47 = v125;
            id v77 = v119;
          }
          else
          {
            if ([v51 length])
            {
              id v119 = v77;
              v125 = v47;
              v96 = +[BKAppDelegate delegate];
              v97 = [v96 storeController];
              id v95 = [v97 bookUrlForStoreId:v51];

              [*(id *)(v1 + 40) delegate];
              v99 = uint64_t v98 = v1;
              v100 = [v99 storePresenter];
              uint64_t v101 = v98;
              unsigned int v76 = [v100 storeHandleURL:v95 sourceApplication:*(void *)(v98 + 56) annotation:*(void *)(v98 + 64) isLaunch:*(unsigned __int8 *)(v98 + 114) transaction:*(void *)(v98 + 48)];

              goto LABEL_104;
            }
            unsigned int v76 = 0;
          }

LABEL_106:
          uint64_t v15 = v76 != 0;
          goto LABEL_107;
        }
        id v32 = [v31 caseInsensitiveCompare:@"purchase-approved"];

        if (!v32) {
          goto LABEL_37;
        }
      }
      if (v25 == (id)++v27)
      {
        id v25 = [v22 countByEnumeratingWithState:&v132 objects:v140 count:16];
        if (v25) {
          goto LABEL_27;
        }
        int v33 = 0;
        uint64_t v1 = v123;
        __int16 v24 = off_100A3C000;
        goto LABEL_47;
      }
    }
  }
  uint64_t v2 = [*(id *)(a1 + 32) fragment];

  if (v2)
  {
    id v3 = [*(id *)(v1 + 32) query];
    id v4 = [v3 componentsSeparatedByString:@"&"];

    long long v138 = 0u;
    long long v139 = 0u;
    long long v136 = 0u;
    long long v137 = 0u;
    id v5 = v4;
    id v6 = [v5 countByEnumeratingWithState:&v136 objects:v143 count:16];
    if (v6)
    {
      id v7 = v6;
      uint64_t v8 = *(void *)v137;
      do
      {
        for (i = 0; i != v7; i = (char *)i + 1)
        {
          if (*(void *)v137 != v8) {
            objc_enumerationMutation(v5);
          }
          uint64_t v10 = [*(id *)(*((void *)&v136 + 1) + 8 * i) componentsSeparatedByString:@"="];
          if ([v10 count] == (id)2)
          {
            id v11 = [v10 objectAtIndex:0];
            uint64_t v12 = [v10 objectAtIndex:1];
            if ([v11 isEqualToString:@"id"])
            {
              uint64_t v16 = [*(id *)(v1 + 40) libraryAssetProvider];
              uint64_t v17 = [v16 libraryAssetOnMainQueueWithStoreID:v12];

              uint64_t v18 = [*(id *)(v1 + 40) locationFromURLFragment:*(void *)(v1 + 32)];
              if ([v17 isPreorderBook])
              {
                uint64_t v141 = AEHelperNumberIsPreorderKey;
                v142 = &__kCFBooleanTrue;
                v117 = +[NSDictionary dictionaryWithObjects:&v142 forKeys:&v141 count:1];
              }
              else
              {
                v117 = 0;
              }
              uint64_t v19 = [v17 assetID];
              id v120 = [*(id *)(v1 + 40) _newShowAssetTransactionFromExistingTransaction:*(void *)(v1 + 48) forAssetID:v19 isAudiobook:[v17 isAudiobook]];
              [*(id *)(v1 + 40) delegate];
              __int16 v20 = v122 = v17;
              int v21 = [v20 bookPresenter];
              [v21 showAssetWithTransaction:v120 assetID:v19 location:v18 options:v117 completion:0];

              uint64_t v15 = 1;
              goto LABEL_107;
            }
          }
        }
        id v7 = [v5 countByEnumeratingWithState:&v136 objects:v143 count:16];
      }
      while (v7);
    }
  }
  int v13 = [*(id *)(v1 + 40) delegate];
  id v14 = [v13 storePresenter];
  uint64_t v15 = (uint64_t)[v14 storeHandleURL:*(void *)(v1 + 32) sourceApplication:*(void *)(v1 + 56) annotation:*(void *)(v1 + 64) isLaunch:*(unsigned __int8 *)(v1 + 114) transaction:*(void *)(v1 + 48)];

LABEL_107:
  id v114 = objc_retainBlock(*(id *)(v1 + 80));
  v115 = v114;
  if (v114) {
    (*((void (**)(id, uint64_t))v114 + 2))(v114, v15);
  }
}

void sub_100159EDC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isAudiobook]) {
    uint64_t v2 = 0;
  }
  else {
    uint64_t v2 = 3;
  }
  id v3 = +[BSUIStoreServices sharedInstance];
  [v3 showProductPageForStoreID:*(void *)(a1 + 40) resourceType:v2 transaction:*(void *)(a1 + 48) needsAnalyticsLinkData:0];
}

void sub_10015A4A8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v5)
  {
    if (*(unsigned char *)(a1 + 72))
    {
      v18[0] = _NSConcreteStackBlock;
      v18[1] = 3221225472;
      v18[2] = sub_10015AA08;
      void v18[3] = &unk_100A44358;
      uint64_t v8 = *(void **)(a1 + 40);
      v18[4] = *(void *)(a1 + 32);
      id v19 = v8;
      id v20 = *(id *)(a1 + 48);
      id v21 = *(id *)(a1 + 56);
      id v22 = *(id *)(a1 + 64);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);

      uint64_t v9 = v19;
    }
    else
    {
      id v14 = [*(id *)(a1 + 32) libraryAssetProvider];
      uint64_t v15 = [v5 assetID];
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_10015A91C;
      v23[3] = &unk_100A48808;
      uint64_t v16 = *(void **)(a1 + 40);
      void v23[4] = *(void *)(a1 + 32);
      id v24 = v16;
      id v25 = *(id *)(a1 + 48);
      id v26 = *(id *)(a1 + 56);
      id v27 = *(id *)(a1 + 64);
      [v14 resolveToLocalAssetWithAssetID:v15 completion:v23];

      uint64_t v9 = v24;
    }
    goto LABEL_8;
  }
  if (!v6)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10015A900;
    block[3] = &unk_100A44358;
    uint64_t v17 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    id v29 = v17;
    id v30 = *(id *)(a1 + 48);
    id v31 = *(id *)(a1 + 56);
    id v32 = *(id *)(a1 + 64);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    uint64_t v9 = v29;
LABEL_8:

    goto LABEL_9;
  }
  uint64_t v10 = +[UIApplication sharedApplication];
  id v11 = [v10 delegate];

  uint64_t v12 = [v11 libraryAssetIsNewManager];
  v33[0] = _NSConcreteStackBlock;
  v33[1] = 3221225472;
  v33[2] = sub_10015A814;
  v33[3] = &unk_100A44358;
  int v13 = *(void **)(a1 + 40);
  v33[4] = *(void *)(a1 + 32);
  id v34 = v13;
  id v35 = *(id *)(a1 + 48);
  id v36 = *(id *)(a1 + 56);
  id v37 = *(id *)(a1 + 64);
  [v12 updateLibraryAssetEpubIDsHandling:v7 foundAssetHandler:v33];

LABEL_9:
}

void sub_10015A814(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10015A8E4;
  block[3] = &unk_100A44358;
  uint64_t v2 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10015A8E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleURL:*(void *)(a1 + 40) sourceApplication:*(void *)(a1 + 48) annotation:*(void *)(a1 + 56) isLaunch:0 transaction:*(void *)(a1 + 64) completion:0];
}

id sub_10015A900(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleURL:*(void *)(a1 + 40) sourceApplication:*(void *)(a1 + 48) annotation:*(void *)(a1 + 56) isLaunch:0 transaction:*(void *)(a1 + 64) completion:0];
}

void sub_10015A91C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10015A9EC;
  block[3] = &unk_100A44358;
  uint64_t v2 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

id sub_10015A9EC(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleURL:*(void *)(a1 + 40) sourceApplication:*(void *)(a1 + 48) annotation:*(void *)(a1 + 56) isLaunch:0 transaction:*(void *)(a1 + 64) completion:0];
}

id sub_10015AA08(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleURL:*(void *)(a1 + 40) sourceApplication:*(void *)(a1 + 48) annotation:*(void *)(a1 + 56) isLaunch:0 transaction:*(void *)(a1 + 64) completion:0];
}

void sub_10015AA24(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10015AAE0;
  v3[3] = &unk_100A45980;
  uint64_t v2 = *(void **)(a1 + 40);
  v3[4] = *(void *)(a1 + 32);
  id v4 = v2;
  id v5 = *(id *)(a1 + 48);
  id v6 = *(id *)(a1 + 56);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_10015AAE0(void *a1)
{
  uint64_t v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  uint64_t v4 = a1[6];
  id v7 = 0;
  id v5 = [v2 p_libraryAssetFromIbooksSchemeURL:v3 remainingPath:0 needsBookID:&v7 transaction:v4];
  id v6 = v7;
  (*(void (**)(void))(a1[7] + 16))();
}

id sub_10015ADA0()
{
  if (qword_100B4A4D8 != -1) {
    dispatch_once(&qword_100B4A4D8, &stru_100A48850);
  }
  v0 = (void *)qword_100B4A4D0;

  return v0;
}

void sub_10015ADF4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.iBooks", "BKAppURLHandler");
  uint64_t v2 = (void *)qword_100B4A4D0;
  qword_100B4A4D0 = (uint64_t)v1;
}

void sub_10015AF58(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) bkaxTarget];
  [v1 handleTapIfPossible];
}

id sub_10015B158(uint64_t a1)
{
  return [*(id *)(a1 + 32) handleTapIfPossible];
}

void sub_10015B6B8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = +[NSNumber numberWithInt:a2 != 0];
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = *(void **)(v4 + 32);
  *(void *)(v4 + 32) = v3;
}

void sub_10015CA10(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = *(void **)(a1 + 32);
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_10015CB08;
    v10[3] = &unk_100A46800;
    void v10[4] = v7;
    id v11 = *(id *)(a1 + 40);
    [v7 fetchAssetsWithIDs:v5 completion:v10];
  }
  else
  {
    id v8 = objc_retainBlock(*(id *)(a1 + 40));
    uint64_t v9 = v8;
    if (v8) {
      (*((void (**)(id, void, id))v8 + 2))(v8, 0, v6);
    }
  }
}

void sub_10015CB08(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_opt_new();
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v8 = v5;
  uint64_t v9 = (char *)[v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v9)
  {
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)v17;
    do
    {
      uint64_t v12 = 0;
      do
      {
        if (*(void *)v17 != v11) {
          objc_enumerationMutation(v8);
        }
        objc_opt_class();
        int v13 = BUDynamicCast();
        if (v13 && objc_msgSend(*(id *)(a1 + 32), "isEligibleLocalBookToBeMadeUbiquitous:", v13, v16)) {
          [v7 addObject:v13];
        }

        ++v12;
      }
      while (v10 != v12);
      uint64_t v10 = (char *)[v8 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v10);
  }

  id v14 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v15 = v14;
  if (v14) {
    (*((void (**)(id, void *, id))v14 + 2))(v14, v7, v6);
  }
}

void sub_10015CE08(uint64_t a1, void *a2)
{
  id v7 = a2;
  if ([v7 count])
  {
    objc_opt_class();
    uint64_t v3 = [v7 firstObject];
    uint64_t v4 = BUDynamicCast();
  }
  else
  {
    uint64_t v4 = 0;
  }
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, void *, void))v5 + 2))(v5, v4, 0);
  }
}

void sub_10015D004(id *a1)
{
  id v24 = +[NSFileManager defaultManager];
  long long v34 = 0u;
  long long v35 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  id obj = a1[4];
  id v1 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
  if (v1)
  {
    id v21 = 0;
    uint64_t v2 = *(void *)v33;
    do
    {
      for (i = 0; i != v1; i = (char *)i + 1)
      {
        if (*(void *)v33 != v2) {
          objc_enumerationMutation(obj);
        }
        uint64_t v4 = *(void **)(*((void *)&v32 + 1) + 8 * i);
        id v5 = [v4 url:v21];
        id v6 = +[IMLibraryPlist purchasesRepositoryPath];
        id v7 = [v5 lastPathComponent];
        id v8 = [v24 bu_nonCollidingNameForFileName:v7 inDestPath:v6];

        id v9 = objc_alloc((Class)NSURL);
        uint64_t v10 = [v6 stringByAppendingPathComponent:v8];
        id v11 = [v9 initFileURLWithPath:v10];

        uint64_t v12 = [a1[5] plistAssetWithAsset:v4 andURL:v11];
        if (v12)
        {
          id v31 = 0;
          unsigned int v13 = [v24 setUbiquitous:0 itemAtURL:v5 destinationURL:v11 error:&v31];
          id v14 = v31;
          uint64_t v15 = v14;
          if (v13)
          {
            [a1[6] addObject:v12];
          }
          else if (v14)
          {
            id v16 = v14;

            id v21 = v16;
          }
        }
      }
      id v1 = [obj countByEnumeratingWithState:&v32 objects:v36 count:16];
    }
    while (v1);
  }
  else
  {
    id v21 = 0;
  }

  if ([a1[6] count])
  {
    objc_initWeak(&location, a1[5]);
    id v17 = a1[5];
    id v18 = a1[6];
    v25[0] = _NSConcreteStackBlock;
    v25[1] = 3221225472;
    v25[2] = sub_10015D38C;
    v25[3] = &unk_100A488A0;
    objc_copyWeak(&v29, &location);
    id v26 = a1[6];
    id v28 = a1[7];
    id v27 = v21;
    [v17 addPlistAssets:v18 completion:v25];

    objc_destroyWeak(&v29);
    objc_destroyWeak(&location);
  }
  else
  {
    id v19 = objc_retainBlock(a1[7]);
    id v20 = v19;
    if (v19) {
      (*((void (**)(id, void, void *))v19 + 2))(v19, 0, v21);
    }
  }
}

void sub_10015D368(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10015D38C(uint64_t a1, uint64_t a2, void *a3)
{
  id v9 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v6 = [WeakRetained libraryManager];
  [v6 libraryDataSource:WeakRetained addedAssets:*(void *)(a1 + 32)];

  [WeakRetained reload];
  id v7 = (void (**)(id, void, id))objc_retainBlock(*(id *)(a1 + 48));
  if (v7)
  {
    id v8 = v9;
    if (!v9) {
      id v8 = *(id *)(a1 + 40);
    }
    v7[2](v7, a2, v8);
  }
}

void sub_10015DCC0(id a1)
{
}

id sub_10015E560(uint64_t a1)
{
  return [*(id *)(a1 + 32) _currentActionComplete];
}

void sub_10015E94C(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  id v6 = [*(id *)(a1 + 32) toastViewController];
  id v5 = [v6 view];
  [v5 setFrame:v1, v2, v3, v4];
}

id sub_10015E9D0(uint64_t a1)
{
  double v2 = BCAugmentedExperienceLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v8 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BKToastPresenter toast presentation animation complete", v8, 2u);
  }

  UIAccessibilityNotifications v3 = UIAccessibilityAnnouncementNotification;
  double v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"Recommendations for next book available. Check it out using the containers rotor." value:&stru_100A70340 table:0];
  UIAccessibilityPostNotification(v3, v5);

  id v6 = [*(id *)(a1 + 32) toastViewController];
  [v6 toastPresenter:*(void *)(a1 + 32) didPresentToastInViewController:*(void *)(a1 + 40)];

  return [*(id *)(a1 + 32) _currentActionComplete];
}

void sub_10015F028(uint64_t a1, void *a2)
{
  id v3 = a2;
  double v4 = [BKEndOfBookCompactViewController alloc];
  uint64_t v5 = *(void *)(a1 + 32);
  v17[0] = @"storeId";
  v17[1] = @"additionalSeeds";
  id v6 = &__NSArray0__struct;
  if (v3) {
    id v6 = v3;
  }
  v18[0] = v5;
  v18[1] = v6;
  id v7 = +[NSDictionary dictionaryWithObjects:v18 forKeys:v17 count:2];
  id v8 = [(BKEndOfBookCompactViewController *)v4 initWithOptions:v7];

  [(BKEndOfBookCompactViewController *)v8 setPageProgressionIsRTL:*(unsigned __int8 *)(a1 + 64)];
  [(BKEndOfBookCompactViewController *)v8 setDelegate:*(void *)(a1 + 40)];
  [*(id *)(a1 + 40) setToastViewController:v8];
  objc_initWeak(&location, *(id *)(a1 + 40));
  uint64_t v9 = *(void *)(a1 + 48);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_10015F21C;
  v11[3] = &unk_100A48940;
  objc_copyWeak(&v15, &location);
  uint64_t v10 = v8;
  uint64_t v12 = v10;
  id v13 = *(id *)(a1 + 32);
  id v14 = *(id *)(a1 + 56);
  [(BKEndOfBookCompactViewController *)v10 preloadContentWithViewController:v9 completion:v11];

  objc_destroyWeak(&v15);
  objc_destroyWeak(&location);
}

void sub_10015F1F8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10015F21C(id *a1, int a2)
{
  double v4 = a1 + 7;
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  id v6 = BCAugmentedExperienceLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    CFStringRef v7 = @"NO";
    if (a2) {
      CFStringRef v7 = @"YES";
    }
    *(_DWORD *)buf = 138412546;
    id v26 = WeakRetained;
    __int16 v27 = 2112;
    CFStringRef v28 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%@: preloadPresentation (success: %@)", buf, 0x16u);
  }

  id v8 = [WeakRetained toastViewController];
  BOOL v9 = v8 == a1[4];

  if (v9)
  {
    if (a2)
    {
      id v11 = BCAugmentedExperienceLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        id v26 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "%@: preloadPresentation getting resource dictionary from compact feed", buf, 0xCu);
      }

      uint64_t v12 = BCAugmentedExperienceSignpost();
      id v13 = (char *)os_signpost_id_generate(v12);

      id v14 = BCAugmentedExperienceSignpost();
      id v15 = v14;
      if ((unint64_t)(v13 - 1) <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v14))
      {
        *(_WORD *)buf = 0;
        _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v15, OS_SIGNPOST_INTERVAL_BEGIN, (os_signpost_id_t)v13, "EOB.Toast.preload", "", buf, 2u);
      }

      id v16 = [a1[4] feedViewController];
      id v17 = +[JSABridge sharedInstance];
      v20[0] = _NSConcreteStackBlock;
      v20[1] = 3221225472;
      id v20[2] = sub_10015F5CC;
      v20[3] = &unk_100A48918;
      uint64_t v10 = v16;
      id v21 = v10;
      objc_copyWeak(v24, v4);
      v24[1] = v13;
      id v22 = a1[5];
      id v23 = a1[6];
      [v17 enqueueBlock:v20 file:@"BKToastPresenter.m" line:261];

      objc_destroyWeak(v24);
    }
    else
    {
      [WeakRetained setToastViewController:0];
      id v18 = BCAugmentedExperienceLog();
      if (os_log_type_enabled(v18, OS_LOG_TYPE_INFO))
      {
        *(_DWORD *)buf = 138412290;
        id v26 = WeakRetained;
        _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "%@: preloadPresentation preloading failed", buf, 0xCu);
      }

      id v19 = objc_retainBlock(a1[6]);
      uint64_t v10 = v19;
      if (v19) {
        ((void (*)(NSObject *, uint64_t))v19[2].isa)(v19, 1);
      }
    }
  }
  else
  {
    uint64_t v10 = BCAugmentedExperienceLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
    {
      *(_DWORD *)buf = 138412290;
      id v26 = WeakRetained;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_INFO, "%@: preloadPresentation the presentation had been cancelled during preload", buf, 0xCu);
    }
  }
}

void sub_10015F5B0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10015F5CC(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) feed];
  id v3 = [v2 valueForProperty:@"resourceDictionary"];
  double v4 = [v3 toDictionary];
  if (!v4)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
    id v6 = BCAugmentedExperienceLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007ED64C((uint64_t)WeakRetained, (uint64_t)v3, v6);
    }
  }
  CFStringRef v7 = BCAugmentedExperienceSignpost();
  id v8 = v7;
  os_signpost_id_t v9 = *(void *)(a1 + 64);
  if (v9 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v7))
  {
    CFStringRef v10 = @"YES";
    if (!v4) {
      CFStringRef v10 = @"NO";
    }
    *(_DWORD *)buf = 138412290;
    CFStringRef v18 = v10;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v8, OS_SIGNPOST_INTERVAL_END, v9, "EOB.Toast.preload", "Success: %@", buf, 0xCu);
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10015F7D8;
  v12[3] = &unk_100A47938;
  objc_copyWeak(&v16, (id *)(a1 + 56));
  id v13 = *(id *)(a1 + 40);
  id v14 = v4;
  id v15 = *(id *)(a1 + 48);
  id v11 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);

  objc_destroyWeak(&v16);
}

void sub_10015F7D8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [[BKEndOfBookCardViewController alloc] initWithStoreID:*(void *)(a1 + 32) resource:*(void *)(a1 + 40)];
  [WeakRetained setCardViewController:v3];

  double v4 = [WeakRetained cardViewController];
  uint64_t v5 = [WeakRetained toastViewController];
  [v5 setCardViewController:v4];

  id v6 = BCAugmentedExperienceLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    int v9 = 138412290;
    id v10 = WeakRetained;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%@: preloadPresentation preloading succeeded", (uint8_t *)&v9, 0xCu);
  }

  id v7 = objc_retainBlock(*(id *)(a1 + 48));
  id v8 = v7;
  if (v7) {
    (*((void (**)(id, void))v7 + 2))(v7, 0);
  }
}

void sub_10015F914(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = BCAugmentedExperienceLog();
  id v8 = v7;
  if (v6)
  {
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007ED6C4(a1, (uint64_t)v6, v8);
    }
  }
  else if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412546;
    uint64_t v16 = v9;
    __int16 v17 = 2048;
    id v18 = [v5 count];
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "%@: loaded %lu additional seeds", buf, 0x16u);
  }

  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  v12[2] = sub_10015FA98;
  v12[3] = &unk_100A443F0;
  id v10 = *(id *)(a1 + 40);
  id v13 = v5;
  id v14 = v10;
  id v11 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v12);
}

uint64_t sub_10015FA98(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_10015FD34(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  id v6 = [*(id *)(a1 + 32) toastViewController];
  id v5 = [v6 view];
  [v5 setFrame:v1, v2, v3, v4];
}

id sub_10015FDB8(uint64_t a1)
{
  double v2 = BCAugmentedExperienceLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "BKToastPresenter toast dismissed animation complete", v10, 2u);
  }

  double v3 = [*(id *)(a1 + 32) toastViewController];
  [v3 willMoveToParentViewController:0];

  double v4 = [*(id *)(a1 + 32) toastViewController];
  [v4 removeFromParentViewController];

  id v5 = [*(id *)(a1 + 32) toastViewController];
  id v6 = [v5 view];
  [v6 removeFromSuperview];

  id v7 = [*(id *)(a1 + 32) toastViewController];
  [v7 didMoveToParentViewController:0];

  id v8 = [*(id *)(a1 + 32) toastViewController];
  [v8 toastPresenterDidDismissToast:*(void *)(a1 + 32)];

  return [*(id *)(a1 + 32) _currentActionComplete];
}

void sub_100160928(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  double v2 = (void *)qword_100B4A4F8;
  qword_100B4A4F8 = v1;
}

void sub_100160C5C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_100160C84(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_100160D40;
  v5[3] = &unk_100A449F0;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_100160D40(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v6 = WeakRetained;
  if (WeakRetained && ([WeakRetained isSeriesCollection] & 1) == 0)
  {
    id v3 = [v6 frc];
    [v3 performFetch:0];

    [v6 updateCounts];
  }
  id v4 = objc_retainBlock(*(id *)(a1 + 32));
  id v5 = v4;
  if (v4) {
    (*((void (**)(id))v4 + 2))(v4);
  }
}

id sub_100162624(uint64_t a1)
{
  [*(id *)(a1 + 32) updateCounts];
  [*(id *)(a1 + 32) updateCloudButton];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setNeedsLayout];
}

id sub_100162C80(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

id sub_100162EC0(uint64_t a1)
{
  return [*(id *)(a1 + 32) sortModeDidChange];
}

id sub_100162EC8(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAndLayoutCloudButtonAnimated];
}

void sub_100162ED0(uint64_t a1)
{
  id v3 = +[BKLibraryAssetStatusController sharedController];
  if ([v3 uploadStatus] == (id)3)
  {
    uint64_t v2 = [*(id *)(a1 + 32) uploadProgressNavigationController];

    if (!v2) {
      [v3 removeCompletedUploads];
    }
  }
  [*(id *)(a1 + 32) updateAndLayoutCloudButtonAnimated];
}

id sub_100162F54(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAndLayoutCloudButtonAnimated];
}

id sub_100162FD0(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateAndLayoutCloudButtonAnimated];
}

BOOL sub_100163898(int a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9, double a10)
{
  if (a1 && (a3 < 0.0500000007 && a7 < 0.0500000007 || a5 < 0.0149999997 && a9 < 0.0149999997))
  {
    *(void *)&long long v35 = sub_10009BE30(a2, a3, a4);
    *((void *)&v35 + 1) = v23;
    uint64_t v36 = v24;
    uint64_t v37 = v25;
    *(void *)&long long v32 = sub_10009BE30(a6, a7, a8);
    *((void *)&v32 + 1) = v26;
    uint64_t v33 = v27;
    uint64_t v34 = v28;
    if (sub_10009C0F8(&v35, &v32) <= 1.65999997) {
      return 1;
    }
  }
  if (vabdd_f64(a3, a7) > a10 || vabdd_f64(a4, a8) > a10) {
    return 0;
  }
  if (vabdd_f64(a2, a6) <= a10) {
    return 1;
  }
  double v29 = a2 + 1.0;
  if (a2 >= a10) {
    double v29 = a2;
  }
  double v30 = a6 + 1.0;
  if (a6 >= a10) {
    double v30 = a6;
  }
  return vabdd_f64(v29, v30) <= a10;
}

uint64_t sub_1001639C0(uint64_t a1)
{
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0;
  *(_OWORD *)(a1 + 320) = 0u;
  *(_OWORD *)(a1 + 336) = 0u;
  *(_OWORD *)(a1 + 352) = 0u;
  *(_OWORD *)(a1 + 368) = 0u;
  return a1;
}

uint64_t sub_100163A3C(uint64_t a1)
{
  uint64_t v2 = *(void **)a1;
  if (v2)
  {
    free(v2);
    *(void *)a1 = 0;
  }
  id v3 = *(void **)(a1 + 8);
  if (v3)
  {
    free(v3);
    *(void *)(a1 + 8) = 0;
  }
  id v4 = *(void **)(a1 + 344);
  if (v4)
  {
    *(void *)(a1 + 352) = v4;
    operator delete(v4);
  }
  id v5 = *(void **)(a1 + 320);
  if (v5)
  {
    *(void *)(a1 + 328) = v5;
    operator delete(v5);
  }
  return a1;
}

uint64_t sub_100163AA0(double *a1, CGContext *a2)
{
  if (!a2) {
    return 0;
  }
  uint64_t result = sub_100163B00(a1, a2);
  if (result)
  {
    uint64_t result = sub_100163CF8(a1);
    if (result)
    {
      sub_1001640B4((uint64_t)a1);
      sub_10016426C((uint64_t)a1);
      sub_1001647B0((uint64_t)a1);
      return 1;
    }
  }
  return result;
}

uint64_t sub_100163B00(double *a1, CGContextRef context)
{
  if (!context) {
    return 0;
  }
  size_t BytesPerRow = CGBitmapContextGetBytesPerRow(context);
  int Width = CGBitmapContextGetWidth(context);
  int Height = CGBitmapContextGetHeight(context);
  uint64_t result = 0;
  if (Height == 22 && Width == 22)
  {
    sub_10009BA14(v32);
    __int16 BitmapInfo = CGBitmapContextGetBitmapInfo(context);
    uint64_t result = (uint64_t)CGBitmapContextGetData(context);
    uint64_t v29 = result;
    if (result)
    {
      uint64_t result = (uint64_t)malloc_type_calloc((22 * Width), 0x20uLL, 0x1000040E0EAB150uLL);
      *(void *)a1 = result;
      if (result)
      {
        uint64_t v11 = 0;
        int v12 = BitmapInfo & 0x3000;
        uint64_t v13 = 1;
        uint64_t v14 = 24;
        do
        {
          uint64_t v15 = 0;
          uint64_t v31 = v14;
          do
          {
            size_t v16 = v29 + BytesPerRow * v13 + v15;
            if (v12) {
              uint64_t v17 = 6;
            }
            else {
              uint64_t v17 = 5;
            }
            if (v12) {
              uint64_t v18 = 5;
            }
            else {
              uint64_t v18 = 6;
            }
            if (v12) {
              uint64_t v19 = 4;
            }
            else {
              uint64_t v19 = 7;
            }
            LOBYTE(v8) = *(unsigned char *)(v16 + v17);
            LOBYTE(v9) = *(unsigned char *)(v16 + v18);
            LOBYTE(v10) = *(unsigned char *)(v16 + v19);
            sub_10009BC9C((double *)v33, (double)*(unint64_t *)&v8 / 255.0, (double)*(unint64_t *)&v9 / 255.0, (double)v10 / 255.0, 1.0);
            v32[0] = v33[0];
            v32[1] = v33[1];
            double v20 = sub_10009BE70((double *)v33);
            uint64_t v22 = v21;
            uint64_t v24 = v23;
            sub_10009BFD8(v33);
            double v25 = *a1;
            uint64_t v26 = (double *)(*(void *)a1 + v14);
            *(v26 - 3) = v20;
            uint64_t v27 = *(void *)&v25 + v11 + 8 * v15;
            *(void *)(v27 + 8) = v22;
            *(void *)(v27 + 16) = v24;
            *uint64_t v26 = v28;
            double v9 = a1[47];
            double v8 = v28 + v9;
            a1[47] = v8;
            v15 += 4;
            v14 += 32;
          }
          while (v15 != 80);
          ++v13;
          uint64_t v14 = v31 + 640;
          v11 += 640;
        }
        while (v13 != 21);
        a1[47] = v8 / 400.0;
        return 1;
      }
    }
  }
  return result;
}

uint64_t sub_100163CF8(void *a1)
{
  uint64_t result = (uint64_t)malloc_type_calloc(0x190uLL, 8uLL, 0x100004000313F17uLL);
  a1[1] = result;
  if (result)
  {
    uint64_t result = (uint64_t)malloc_type_calloc(0x190uLL, 1uLL, 0x100004077774924uLL);
    if (result)
    {
      id v3 = (unsigned char *)result;
      uint64_t v4 = 0;
      id v5 = 0;
      unint64_t v6 = 0;
      __p = 0;
      unsigned int v48 = 0;
      __int16 v49 = 0;
      uint64_t v7 = 1;
      do
      {
        if (!v3[v6])
        {
          double v8 = (double *)(*a1 + 32 * v6);
          double v9 = *v8;
          double v10 = v8[1];
          double v11 = v8[2];
          double v12 = v8[3];
          double v13 = sub_100164A5C(result, v6 - 20 * ((unsigned __int16)v6 / 0x14u), (unsigned __int16)v6 / 0x14u);
          double v14 = v13;
          unsigned int v48 = v5;
          if (v5 >= v49)
          {
            unint64_t v15 = 0x5555555555555556 * (((char *)v49 - (char *)v5) >> 4);
            if (v15 <= 1) {
              unint64_t v15 = 1;
            }
            if (0xAAAAAAAAAAAAAAABLL * (((char *)v49 - (char *)v5) >> 4) >= 0x2AAAAAAAAAAAAAALL) {
              unint64_t v16 = 0x555555555555555;
            }
            else {
              unint64_t v16 = v15;
            }
            uint64_t v17 = (double *)sub_100165778((uint64_t)&v49, v16);
            double *v17 = v9;
            v17[1] = v10;
            void v17[2] = v11;
            v17[3] = v12;
            *((_DWORD *)v17 + 8) = v6;
            void v17[5] = v14;
            double v20 = (char *)__p;
            uint64_t v19 = v48;
            uint64_t v21 = v17;
            if (v48 != __p)
            {
              do
              {
                long long v22 = *((_OWORD *)v19 - 3);
                long long v23 = *((_OWORD *)v19 - 1);
                *((_OWORD *)v21 - 2) = *((_OWORD *)v19 - 2);
                *((_OWORD *)v21 - 1) = v23;
                *((_OWORD *)v21 - 3) = v22;
                v21 -= 6;
                v19 -= 6;
              }
              while (v19 != (double *)v20);
              uint64_t v19 = (double *)v20;
            }
            id v5 = v17 + 6;
            __p = v21;
            unsigned int v48 = v17 + 6;
            __int16 v49 = &v17[6 * v18];
            if (v19) {
              operator delete(v19);
            }
          }
          else
          {
            double *v5 = v9;
            v5[1] = v10;
            v5[2] = v11;
            v5[3] = v12;
            *((_DWORD *)v5 + 8) = v6;
            void v5[5] = v13;
            v5 += 6;
          }
          unsigned int v48 = v5;
          *(double *)(a1[1] + 8 * v6) = v14;
          v3[v6] = 1;
          if (v6 <= 0x18E)
          {
            uint64_t v24 = v4;
            uint64_t v25 = v7;
            do
            {
              if (!v3[v25])
              {
                uint64_t v26 = (void *)(*a1 + v24);
                uint64_t v27 = (unsigned int (*)(void, void))v26[4];
                double v28 = (unsigned int (*)(void, void))v26[5];
                uint64_t v29 = (unsigned int (*)(void, void))v26[6];
                double v30 = (unsigned int (*)(void, void))v26[7];
                BOOL v31 = sub_100163898(0, v9, v10, v11, v12, *(double *)&v27, *(double *)&v28, *(double *)&v29, *(double *)&v30, 0.0799999982);
                if (v31)
                {
                  double v32 = sub_100164A5C(v31, v25 - 20 * ((unsigned __int16)v25 / 0x14u), (unsigned __int16)v25 / 0x14u);
                  v44[0] = v27;
                  v44[1] = v28;
                  v44[2] = v29;
                  v44[3] = v30;
                  int v45 = v25;
                  double v46 = v32;
                  sub_100164894(v33, (double *)v44, &__p);
                  v3[v25] = 1;
                }
              }
              ++v25;
              v24 += 32;
            }
            while (v25 != 400);
            id v5 = v48;
          }
          uint64_t result = (uint64_t)__p;
          if (v5 != __p)
          {
            v44[0] = (unsigned int (*)(void, void))sub_100164B2C;
            sub_1001657F4((long long *)__p, (long long *)v5, v44, 126 - 2 * __clz(0xAAAAAAAAAAAAAAABLL * (((char *)v5 - (unsigned char *)__p) >> 4)), 1);
            id v5 = (double *)__p;
            uint64_t v34 = *((unsigned int *)__p + 8);
            double v35 = *((double *)__p + 5);
            unint64_t v36 = 0xAAAAAAAAAAAAAAABLL * (((char *)v48 - (unsigned char *)__p) >> 4);
            if (v36 >= 2)
            {
              uint64_t v37 = (double *)((char *)__p + 88);
              unint64_t v38 = v36 - 1;
              do
              {
                uint64_t v39 = *((unsigned int *)v37 - 2);
                double v40 = *v37;
                if (!v3[v39]) {
                  v3[v39] = 1;
                }
                double v35 = v35 + v40;
                v37 += 6;
                long long v41 = (_OWORD *)(*a1 + 32 * v34);
                long long v42 = v41[1];
                long long v43 = (_OWORD *)(*a1 + 32 * v39);
                *long long v43 = *v41;
                v43[1] = v42;
                --v38;
              }
              while (v38);
            }
            *(double *)(a1[1] + 8 * v34) = v35;
          }
        }
        ++v6;
        ++v7;
        v4 += 32;
      }
      while (v6 != 400);
      free(v3);
      if (__p)
      {
        unsigned int v48 = (double *)__p;
        operator delete(__p);
      }
      return 1;
    }
  }
  return result;
}

void sub_100164090(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, void *__p, uint64_t a20)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

void sub_1001640B4(uint64_t a1)
{
  double v2 = *(double *)(a1 + 376);
  id v3 = sub_100164B40(a1);
  long long v4 = *((_OWORD *)*v3 + 1);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)*v3;
  *(_OWORD *)(a1 + 48) = v4;
  long long v5 = *(_OWORD *)(a1 + 48);
  long long v31 = *(_OWORD *)(a1 + 32);
  long long v32 = v5;
  if (sub_10009C154(&v31, 0.180000007) < 1.29999995)
  {
    double v6 = sub_10009C154((long long *)(a1 + 32), 0.180000007);
    unint64_t v7 = (unint64_t)((unsigned char *)v3[1] - (unsigned char *)*v3) >> 5;
    if ((int)v7 >= 2)
    {
      double v8 = v6;
      if (v7 == 2) {
        uint64_t v9 = 2;
      }
      else {
        uint64_t v9 = 3;
      }
      for (uint64_t i = 1; i != v9; ++i)
      {
        double v11 = *(double **)(a1 + 344);
        double v12 = v11[i];
        if (v12 <= 0.0) {
          break;
        }
        double v13 = *v11 / v12;
        if (v13 <= 0.9 || v13 >= 1.112) {
          break;
        }
        double v14 = sub_10009C154((long long *)*v3 + 2 * i, 0.180000007);
        if (v14 > v8)
        {
          unint64_t v15 = (char *)*v3 + 32 * i;
          long long v16 = v15[1];
          *(_OWORD *)(a1 + 32) = *v15;
          *(_OWORD *)(a1 + 48) = v16;
          double v8 = v14;
        }
      }
    }
  }
  long long v17 = *(_OWORD *)(a1 + 48);
  long long v31 = *(_OWORD *)(a1 + 32);
  long long v32 = v17;
  if (sub_10009C154(&v31, 0.180000007) < 1.29999995)
  {
    double v18 = sub_10009BE70((double *)(a1 + 32));
    double v20 = v19;
    double v22 = v21;
    double v28 = v18;
    double v29 = v19;
    double v30 = v21;
    if (v2 < 0.180000007
      || (long long v23 = *(_OWORD *)(a1 + 48), v31 = *(_OWORD *)(a1 + 32), v32 = v23, sub_10009BFD8(&v31), v24 < 0.180000007))
    {
      double v29 = v20 * 1.10000002;
      double v30 = v22 * 0.800000012;
    }
    *(double *)(a1 + 32) = sub_10009BCA8(&v28);
    *(void *)(a1 + 40) = v25;
    *(void *)(a1 + 48) = v26;
    *(void *)(a1 + 56) = v27;
  }
}

void sub_10016426C(uint64_t a1)
{
  double v2 = sub_100164B40(a1);
  unint64_t v3 = (unsigned char *)v2[1] - (unsigned char *)*v2;
  unint64_t v4 = v3 >> 5;
  if ((v3 >> 5) < 2)
  {
    BOOL v38 = 0;
    char v39 = 0;
    goto LABEL_28;
  }
  long long v5 = v2;
  double v6 = sub_10009C0F8((long long *)*v2 + 2, (long long *)(a1 + 32));
  uint64_t v7 = 0;
  int v8 = 0;
  unint64_t v9 = (v3 >> 5);
  int v10 = 1;
  unsigned int v81 = v4;
  unsigned int v11 = v4;
  unsigned int v12 = 1;
  unsigned int v82 = 1;
  double v13 = v6;
  do
  {
    double v14 = (long long *)((char *)*v5 + v7);
    long long v15 = v14[1];
    long long v84 = *v14;
    long long v85 = v15;
    if ((v8 & 1) == 0
      && sub_100164E84(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      sub_100164F44(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
      *(void *)(a1 + 64) = v16;
      *(void *)(a1 + 72) = v17;
      *(void *)(a1 + 80) = v18;
      *(void *)(a1 + 88) = v19;
      int v8 = 1;
      unsigned int v11 = v10;
    }
    double v20 = sub_10009C0F8(&v84, (long long *)(a1 + 32));
    if (v20 > v13)
    {
      if (v20 <= v6)
      {
        double v13 = v20;
        unsigned int v82 = v10 - 1;
      }
      else
      {
        double v13 = v6;
        double v6 = v20;
        unsigned int v82 = v12;
        unsigned int v12 = v10 - 1;
      }
    }
    ++v10;
    v7 += 32;
  }
  while (32 * v9 != v7);
  if (v11 >= v81)
  {
LABEL_15:
    sub_10009BA14(&v84);
    int v29 = 0;
    if (v8)
    {
      LODWORD(v4) = v81;
      goto LABEL_24;
    }
    LOBYTE(v21) = 1;
    goto LABEL_17;
  }
  int v21 = 0;
  uint64_t v22 = 32 * v11;
  uint64_t v23 = v11;
  while (1)
  {
    double v24 = (double *)((char *)*v5 + v22);
    double v25 = *v24;
    double v26 = v24[1];
    double v27 = v24[2];
    double v28 = v24[3];
    if (sub_100165004(*v24, v26, v27, v28, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      break;
    }
    int v21 = ++v23 >= v9;
    v22 += 32;
    if (v9 == v23) {
      goto LABEL_15;
    }
  }
  sub_100164F44(v25, v26, v27, v28, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
  *(void *)(a1 + 96) = v40;
  *(void *)(a1 + 104) = v41;
  *(void *)(a1 + 112) = v42;
  *(void *)(a1 + 120) = v43;
  if (v8 & ~v21)
  {
    char v39 = 1;
    int v29 = 1;
    LODWORD(v4) = v81;
    goto LABEL_27;
  }
  sub_10009BA14(&v84);
  int v29 = 1;
  if ((v8 & 1) == 0)
  {
LABEL_17:
    sub_100164F44(*((double *)*v5 + 4 * v12), *((double *)*v5 + 4 * v12 + 1), *((double *)*v5 + 4 * v12 + 2), *((double *)*v5 + 4 * v12 + 3), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.200000003);
    *(double *)&long long v84 = v30;
    *((double *)&v84 + 1) = v31;
    *(double *)&long long v85 = v32;
    *((double *)&v85 + 1) = v33;
    if (sub_100165004(v30, v31, v32, v33, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      sub_100164F44(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
      *(void *)(a1 + 64) = v34;
      *(void *)(a1 + 72) = v35;
      *(void *)(a1 + 80) = v36;
      *(void *)(a1 + 88) = v37;
      LOBYTE(v8) = 1;
    }
  }
  LODWORD(v4) = v81;
  if (v21)
  {
LABEL_24:
    sub_100164F44(*((double *)*v5 + 4 * v82), *((double *)*v5 + 4 * v82 + 1), *((double *)*v5 + 4 * v82 + 2), *((double *)*v5 + 4 * v82 + 3), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.200000003);
    *(double *)&long long v84 = v44;
    *((double *)&v84 + 1) = v45;
    *(double *)&long long v85 = v46;
    *((double *)&v85 + 1) = v47;
    if (sub_100165004(v44, v45, v46, v47, *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56)))
    {
      sub_100164F44(*(double *)&v84, *((double *)&v84 + 1), *(double *)&v85, *((double *)&v85 + 1), *(double *)(a1 + 32), *(double *)(a1 + 40), *(double *)(a1 + 48), *(double *)(a1 + 56), 0.449999988);
      *(void *)(a1 + 96) = v48;
      *(void *)(a1 + 104) = v49;
      *(void *)(a1 + 112) = v50;
      *(void *)(a1 + 120) = v51;
      int v29 = 1;
    }
  }
  char v39 = v8;
LABEL_27:
  BOOL v38 = v29 != 0;
LABEL_28:
  long long v52 = *(_OWORD *)(a1 + 48);
  long long v84 = *(_OWORD *)(a1 + 32);
  long long v85 = v52;
  sub_10009BFD8(&v84);
  id v53 = (long long *)(a1 + 64);
  uint64_t v55 = *(void *)(a1 + 72);
  uint64_t v54 = *(void *)(a1 + 80);
  uint64_t v56 = *(void *)(a1 + 88);
  id v57 = (long long *)(a1 + 96);
  if (v58 >= 0.180000007)
  {
    *(void *)&long long v84 = *(void *)(a1 + 64);
    *((void *)&v84 + 1) = v55;
    *(void *)&long long v85 = v54;
    *((void *)&v85 + 1) = v56;
    sub_10009BFD8(&v84);
    if (v59 >= 0.180000007) {
      char v39 = 0;
    }
    long long v60 = *(_OWORD *)(a1 + 112);
    long long v84 = *(_OWORD *)(a1 + 96);
    long long v85 = v60;
    sub_10009BFD8(&v84);
    if (v61 >= 0.180000007) {
      BOOL v38 = 0;
    }
    if (v39) {
      goto LABEL_49;
    }
LABEL_40:
    long long v65 = *(_OWORD *)(a1 + 48);
    long long v84 = *(_OWORD *)(a1 + 32);
    long long v85 = v65;
    sub_10009BFD8(&v84);
    if (v66 < 0.180000007)
    {
      if (!v4)
      {
        sub_10009BC88((uint64_t)&v84, 1.0, 1.0, 1.0);
        goto LABEL_48;
      }
      sub_10009BC88((uint64_t)v83, 1.0, 1.0, 1.0);
    }
    else
    {
      if (!v4)
      {
        sub_10009BA14(&v84);
        goto LABEL_48;
      }
      sub_10009BA14(v83);
    }
    *(void *)&long long v84 = sub_10009C198((uint64_t)v83, 0.0500000007, *(double *)(a1 + 32));
    *((void *)&v84 + 1) = v67;
    *(void *)&long long v85 = v68;
    *((void *)&v85 + 1) = v69;
LABEL_48:
    long long v70 = v85;
    *id v53 = v84;
    *(_OWORD *)(a1 + 80) = v70;
    goto LABEL_49;
  }
  *(void *)&long long v84 = *(void *)(a1 + 64);
  *((void *)&v84 + 1) = v55;
  *(void *)&long long v85 = v54;
  *((void *)&v85 + 1) = v56;
  sub_10009BFD8(&v84);
  if (v62 < 0.180000007) {
    char v39 = 0;
  }
  long long v63 = *(_OWORD *)(a1 + 112);
  long long v84 = *(_OWORD *)(a1 + 96);
  long long v85 = v63;
  sub_10009BFD8(&v84);
  if (v64 < 0.180000007) {
    BOOL v38 = 0;
  }
  if ((v39 & 1) == 0) {
    goto LABEL_40;
  }
LABEL_49:
  if (v38) {
    goto LABEL_59;
  }
  long long v71 = *(_OWORD *)(a1 + 48);
  long long v84 = *(_OWORD *)(a1 + 32);
  long long v85 = v71;
  sub_10009BFD8(&v84);
  if (v72 < 0.180000007)
  {
    if (!v4)
    {
      sub_10009BC88((uint64_t)&v84, 1.0, 1.0, 1.0);
      goto LABEL_58;
    }
    sub_10009BC88((uint64_t)v83, 1.0, 1.0, 1.0);
  }
  else
  {
    if (!v4)
    {
      sub_10009BA14(&v84);
      goto LABEL_58;
    }
    sub_10009BA14(v83);
  }
  *(void *)&long long v84 = sub_10009C198((uint64_t)v83, 0.100000001, *(double *)(a1 + 32));
  *((void *)&v84 + 1) = v73;
  *(void *)&long long v85 = v74;
  *((void *)&v85 + 1) = v75;
LABEL_58:
  long long v76 = v85;
  *id v57 = v84;
  *(_OWORD *)(a1 + 112) = v76;
LABEL_59:
  double v77 = sub_10009C0F8((long long *)(a1 + 64), (long long *)(a1 + 32));
  if (sub_10009C0F8((long long *)(a1 + 96), (long long *)(a1 + 32)) > v77)
  {
    long long v79 = *v53;
    long long v78 = *(_OWORD *)(a1 + 80);
    long long v80 = *(_OWORD *)(a1 + 112);
    *id v53 = *v57;
    *(_OWORD *)(a1 + 80) = v80;
    *id v57 = v79;
    *(_OWORD *)(a1 + 112) = v78;
  }
}

void sub_1001647B0(uint64_t a1)
{
  uint64_t v1 = a1;
  double v2 = (long long *)(a1 + 64);
  unint64_t v3 = (double *)(a1 + 32);
  *(double *)(a1 + 128) = sub_10009C198(a1 + 64, 0.200000003, *(double *)(a1 + 32));
  unint64_t v4 = (long long *)(v1 + 128);
  *(void *)(v1 + 136) = v5;
  *(void *)(v1 + 144) = v6;
  *(void *)(v1 + 152) = v7;
  int v8 = (long long *)(v1 + 96);
  *(double *)(v1 + 160) = sub_10009C198(v1 + 96, 0.200000003, *v3);
  *(void *)(v1 + 168) = v9;
  v1 += 160;
  *(void *)(v1 + 16) = v10;
  *(void *)(v1 + 24) = v11;
  sub_1001650C4(v12, v2, (long long *)v3);
  *(void *)(v1 + 32) = v13;
  *(void *)(v1 + 40) = v14;
  *(void *)(v1 + 48) = v15;
  *(void *)(v1 + 56) = v16;
  sub_1001650C4(v17, v8, (long long *)v3);
  *(void *)(v1 + 96) = v18;
  *(void *)(v1 + 104) = v19;
  *(void *)(v1 + 112) = v20;
  *(void *)(v1 + 120) = v21;
  sub_1001650C4(v22, v4, (long long *)v3);
  *(void *)(v1 + 64) = v23;
  *(void *)(v1 + 72) = v24;
  *(void *)(v1 + 80) = v25;
  *(void *)(v1 + 88) = v26;
  sub_1001650C4(v27, (long long *)v1, (long long *)v3);
  *(void *)(v1 + 128) = v28;
  *(void *)(v1 + 136) = v29;
  *(void *)(v1 + 144) = v30;
  *(void *)(v1 + 152) = v31;
}

void sub_100164894(uint64_t a1, double *a2, void **a3)
{
  uint64_t v5 = a3[1];
  if (v5 == *a3)
  {
    int v8 = a3[1];
LABEL_7:
    unint64_t v9 = (unint64_t)a3[2];
    if ((unint64_t)v8 >= v9)
    {
      unint64_t v13 = 0xAAAAAAAAAAAAAAABLL * (((char *)v8 - v5) >> 4);
      unint64_t v14 = v13 + 1;
      if (v13 + 1 > 0x555555555555555) {
        sub_1001656D0();
      }
      unint64_t v15 = 0xAAAAAAAAAAAAAAABLL * ((uint64_t)(v9 - (void)v5) >> 4);
      if (2 * v15 > v14) {
        unint64_t v14 = 2 * v15;
      }
      if (v15 >= 0x2AAAAAAAAAAAAAALL) {
        unint64_t v16 = 0x555555555555555;
      }
      else {
        unint64_t v16 = v14;
      }
      if (v16) {
        uint64_t v17 = (char *)sub_100165778((uint64_t)(a3 + 2), v16);
      }
      else {
        uint64_t v17 = 0;
      }
      uint64_t v18 = &v17[48 * v13];
      uint64_t v19 = &v17[48 * v16];
      long long v20 = *(_OWORD *)a2;
      long long v21 = *((_OWORD *)a2 + 2);
      *((_OWORD *)v18 + 1) = *((_OWORD *)a2 + 1);
      *((_OWORD *)v18 + 2) = v21;
      *(_OWORD *)uint64_t v18 = v20;
      uint64_t v12 = v18 + 48;
      uint64_t v23 = (char *)*a3;
      uint64_t v22 = (char *)a3[1];
      if (v22 != *a3)
      {
        do
        {
          long long v24 = *((_OWORD *)v22 - 3);
          long long v25 = *((_OWORD *)v22 - 1);
          *((_OWORD *)v18 - 2) = *((_OWORD *)v22 - 2);
          *((_OWORD *)v18 - 1) = v25;
          *((_OWORD *)v18 - 3) = v24;
          v18 -= 48;
          v22 -= 48;
        }
        while (v22 != v23);
        uint64_t v22 = (char *)*a3;
      }
      *a3 = v18;
      a3[1] = v12;
      a3[2] = v19;
      if (v22) {
        operator delete(v22);
      }
    }
    else
    {
      long long v10 = *(_OWORD *)a2;
      long long v11 = *((_OWORD *)a2 + 2);
      v8[1] = *((_OWORD *)a2 + 1);
      v8[2] = v11;
      _OWORD *v8 = v10;
      uint64_t v12 = v8 + 3;
    }
    a3[1] = v12;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    uint64_t v5 = *a3;
    while (!sub_100163898(0, *a2, a2[1], a2[2], a2[3], *(double *)&v5[v6], *(double *)&v5[v6 + 8], *(double *)&v5[v6 + 16], *(double *)&v5[v6 + 24], 0.0799999982))
    {
      ++v7;
      uint64_t v5 = *a3;
      int v8 = a3[1];
      v6 += 48;
      if (0xAAAAAAAAAAAAAAABLL * (((char *)v8 - (unsigned char *)*a3) >> 4) <= v7) {
        goto LABEL_7;
      }
    }
    *(double *)((char *)*a3 + v6 + 40) = a2[5] + *(double *)((char *)*a3 + v6 + 40);
  }
}

double sub_100164A5C(uint64_t a1, unsigned int a2, unsigned int a3)
{
  double v3 = (double)a2;
  if (a2 <= 4 && a3 <= 4)
  {
    double v4 = (double)a3;
    double v5 = 4.00000006 - v3;
    goto LABEL_4;
  }
  if (a2 > 4)
  {
    if (a2 >= 0x10 && a3 <= 4)
    {
      double v4 = (double)a3;
      double v5 = 15.9999999 - v3;
LABEL_4:
      double v6 = 4.00000006 - v4;
      if (v5 >= 1.0) {
        double v7 = v5 * 0.75;
      }
      else {
        double v7 = 0.75;
      }
      if (v6 >= 1.0) {
        double v8 = v6 * 0.75;
      }
      else {
        double v8 = 0.75;
      }
      if (v8 <= v7) {
        double v8 = v7;
      }
      goto LABEL_22;
    }
    double v8 = 1.0;
    if (a2 < 0x10) {
      goto LABEL_22;
    }
    double v9 = 15.9999999;
  }
  else
  {
    double v9 = 4.00000006;
  }
  double v10 = v9 - v3;
  double v8 = 0.75;
  if (v10 >= 1.0) {
    double v8 = v10 * 0.75;
  }
LABEL_22:
  double result = 1.0;
  if (v8 >= 1.0) {
    return v8;
  }
  return result;
}

BOOL sub_100164B2C(uint64_t a1, uint64_t a2)
{
  return *(double *)(a1 + 40) > *(double *)(a2 + 40);
}

void **sub_100164B40(uint64_t a1)
{
  uint64_t v1 = (void **)(a1 + 320);
  if (*(void *)(a1 + 328) == *(void *)(a1 + 320))
  {
    uint64_t v43 = 0;
    double v44 = 0;
    uint64_t v45 = 0;
    sub_10009BA14(v42);
    uint64_t v3 = 0;
    for (uint64_t i = 0; i != 3200; i += 8)
    {
      if (*(double *)(*(void *)(a1 + 8) + i) >= 1.0)
      {
        v41[0] = *(double *)(*(void *)(a1 + 8) + i);
        v42[0] = sub_10009BE30(*(double *)(*(void *)a1 + v3), *(double *)(*(void *)a1 + v3 + 8), *(double *)(*(void *)a1 + v3 + 16));
        v42[1] = v5;
        v42[2] = v6;
        v42[3] = v7;
        v42[4] = *(void *)(*(void *)a1 + v3 + 24);
        sub_100165194(v8, v41, (void **)&v43);
      }
      v3 += 32;
    }
    double v9 = v44;
    if (v44 != v43)
    {
      double v46 = sub_100165180;
      sub_100166F48(v43, v44, (unsigned int (**)(void, void))&v46, 126 - 2 * __clz(((char *)v44 - (char *)v43) >> 6), 1);
      sub_1001653B0(v1, ((char *)v44 - (char *)v43) >> 6);
      double v10 = (void **)(a1 + 344);
      sub_100165460((void **)(a1 + 344), ((char *)v44 - (char *)v43) >> 6);
      double v9 = v44;
      if (v44 != v43)
      {
        unint64_t v11 = 0;
        double v9 = v43;
        do
        {
          uint64_t v12 = &v9[4 * v11 + 1];
          unint64_t v13 = *(char **)(a1 + 328);
          unint64_t v14 = *(void *)(a1 + 336);
          if ((unint64_t)v13 >= v14)
          {
            uint64_t v17 = (v13 - (unsigned char *)*v1) >> 5;
            unint64_t v18 = v17 + 1;
            if ((unint64_t)(v17 + 1) >> 59) {
              sub_1001656D0();
            }
            uint64_t v19 = v14 - (void)*v1;
            if (v19 >> 4 > v18) {
              unint64_t v18 = v19 >> 4;
            }
            if ((unint64_t)v19 >= 0x7FFFFFFFFFFFFFE0) {
              unint64_t v20 = 0x7FFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v20 = v18;
            }
            if (v20) {
              long long v21 = (char *)sub_1001685F4(a1 + 336, v20);
            }
            else {
              long long v21 = 0;
            }
            uint64_t v22 = (long long *)&v21[32 * v17];
            long long v23 = v12[1];
            *uint64_t v22 = *v12;
            v22[1] = v23;
            long long v25 = *(char **)(a1 + 320);
            long long v24 = *(char **)(a1 + 328);
            uint64_t v26 = v22;
            if (v24 != v25)
            {
              do
              {
                long long v27 = *((_OWORD *)v24 - 1);
                *(v26 - 2) = *((_OWORD *)v24 - 2);
                *(v26 - 1) = v27;
                v26 -= 2;
                v24 -= 32;
              }
              while (v24 != v25);
              long long v24 = (char *)*v1;
            }
            unint64_t v16 = v22 + 2;
            *(void *)(a1 + 320) = v26;
            *(void *)(a1 + 328) = v22 + 2;
            *(void *)(a1 + 336) = &v21[32 * v20];
            if (v24) {
              operator delete(v24);
            }
          }
          else
          {
            long long v15 = v9[4 * v11 + 2];
            *(_OWORD *)unint64_t v13 = *v12;
            *((_OWORD *)v13 + 1) = v15;
            unint64_t v16 = v13 + 32;
          }
          *(void *)(a1 + 328) = v16;
          uint64_t v28 = &v43[4 * v11];
          uint64_t v30 = *(char **)(a1 + 352);
          unint64_t v29 = *(void *)(a1 + 360);
          if ((unint64_t)v30 >= v29)
          {
            double v32 = (char *)*v10;
            uint64_t v33 = (v30 - (unsigned char *)*v10) >> 3;
            unint64_t v34 = v33 + 1;
            if ((unint64_t)(v33 + 1) >> 61) {
              sub_1001656D0();
            }
            uint64_t v35 = v29 - (void)v32;
            if (v35 >> 2 > v34) {
              unint64_t v34 = v35 >> 2;
            }
            if ((unint64_t)v35 >= 0x7FFFFFFFFFFFFFF8) {
              unint64_t v36 = 0x1FFFFFFFFFFFFFFFLL;
            }
            else {
              unint64_t v36 = v34;
            }
            if (v36)
            {
              uint64_t v37 = (char *)sub_10016862C(a1 + 360, v36);
              double v32 = *(char **)(a1 + 344);
              uint64_t v30 = *(char **)(a1 + 352);
            }
            else
            {
              uint64_t v37 = 0;
            }
            BOOL v38 = &v37[8 * v33];
            *(void *)BOOL v38 = *(void *)v28;
            uint64_t v31 = v38 + 8;
            while (v30 != v32)
            {
              uint64_t v39 = *((void *)v30 - 1);
              v30 -= 8;
              *((void *)v38 - 1) = v39;
              v38 -= 8;
            }
            *(void *)(a1 + 344) = v38;
            *(void *)(a1 + 352) = v31;
            *(void *)(a1 + 360) = &v37[8 * v36];
            if (v32) {
              operator delete(v32);
            }
          }
          else
          {
            *(void *)uint64_t v30 = *(void *)v28;
            uint64_t v31 = v30 + 8;
          }
          *(void *)(a1 + 352) = v31;
          ++v11;
          double v9 = v43;
        }
        while (v11 < ((char *)v44 - (char *)v43) >> 6);
      }
    }
    if (v9)
    {
      double v44 = v9;
      operator delete(v9);
    }
  }
  return v1;
}

void sub_100164E58(_Unwind_Exception *exception_object, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, void *__p, uint64_t a18)
{
  if (__p) {
    operator delete(__p);
  }
  _Unwind_Resume(exception_object);
}

BOOL sub_100164E84(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  *(double *)&long long v19 = a1;
  *((double *)&v19 + 1) = a2;
  double v20 = a3;
  double v21 = a4;
  *(double *)&long long v16 = a5;
  *((double *)&v16 + 1) = a6;
  double v17 = a7;
  double v18 = a8;
  *(double *)&long long v22 = a1;
  *((double *)&v22 + 1) = a2;
  double v23 = a3;
  double v24 = a4;
  sub_10009BFD8(&v22);
  BOOL v13 = v12 >= 0.180000007;
  *(double *)&long long v22 = a5;
  *((double *)&v22 + 1) = a6;
  double v23 = a7;
  double v24 = a8;
  sub_10009BFD8(&v22);
  return v13 != v14 >= 0.180000007 && sub_10009C0F8(&v19, &v16) >= 4.5999999;
}

void sub_100164F44(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8, double a9)
{
  *(double *)&long long v28 = a1;
  *((double *)&v28 + 1) = a2;
  double v29 = a3;
  double v30 = a4;
  double v20 = sub_10009BE70((double *)&v28);
  double v22 = v21;
  double v24 = v23;
  sub_10009BFD8(&v28);
  *(double *)&long long v28 = a5;
  *((double *)&v28 + 1) = a6;
  double v29 = a7;
  double v30 = a8;
  sub_10009BFD8(&v28);
  double v25 = 1.0 - (1.0 - v24) * a9;
  if (v26 >= 0.180000007) {
    double v25 = v24 * a9;
  }
  sub_10009BE30(v20, v22, v25);
}

BOOL sub_100165004(double a1, double a2, double a3, double a4, double a5, double a6, double a7, double a8)
{
  *(double *)&long long v19 = a1;
  *((double *)&v19 + 1) = a2;
  double v20 = a3;
  double v21 = a4;
  *(double *)&long long v16 = a5;
  *((double *)&v16 + 1) = a6;
  double v17 = a7;
  double v18 = a8;
  *(double *)&long long v22 = a1;
  *((double *)&v22 + 1) = a2;
  double v23 = a3;
  double v24 = a4;
  sub_10009BFD8(&v22);
  BOOL v13 = v12 >= 0.180000007;
  *(double *)&long long v22 = a5;
  *((double *)&v22 + 1) = a6;
  double v23 = a7;
  double v24 = a8;
  sub_10009BFD8(&v22);
  return v13 != v14 >= 0.180000007 && sub_10009C0F8(&v19, &v16) >= 3.0999999;
}

void sub_1001650C4(uint64_t a1, long long *a2, long long *a3)
{
  sub_10009BA14(v13);
  sub_10009BFD8(a2);
  double v6 = v5;
  sub_10009BFD8(a3);
  if (v6 >= v7) {
    sub_10009BA14(v12);
  }
  else {
    sub_10009BC88((uint64_t)v12, 1.0, 1.0, 1.0);
  }
  v13[0] = v12[0];
  v13[1] = v12[1];
  sub_10009BFD8(v13);
  double v9 = v8;
  sub_10009BFD8(a3);
  double v11 = vabdd_f64(v9, v10);
  sub_10009C198((uint64_t)v13, 1.0 - ((v11 + v11) * -0.599999994 + 1.0), *(double *)a3);
}

BOOL sub_100165180(double *a1, double *a2)
{
  return *a1 > *a2;
}

void sub_100165194(uint64_t a1, double *a2, void **a3)
{
  double v5 = a3[1];
  if (v5 == *a3)
  {
    double v25 = a3[1];
LABEL_7:
    unint64_t v26 = (unint64_t)a3[2];
    if ((unint64_t)v25 >= v26)
    {
      uint64_t v31 = ((char *)v25 - v5) >> 6;
      unint64_t v32 = v31 + 1;
      if ((unint64_t)(v31 + 1) >> 58) {
        sub_1001656D0();
      }
      uint64_t v33 = v26 - (void)v5;
      if (v33 >> 5 > v32) {
        unint64_t v32 = v33 >> 5;
      }
      if ((unint64_t)v33 >= 0x7FFFFFFFFFFFFFC0) {
        unint64_t v34 = 0x3FFFFFFFFFFFFFFLL;
      }
      else {
        unint64_t v34 = v32;
      }
      if (v34) {
        uint64_t v35 = (char *)sub_100166F10((uint64_t)(a3 + 2), v34);
      }
      else {
        uint64_t v35 = 0;
      }
      unint64_t v36 = &v35[64 * v31];
      uint64_t v37 = &v35[64 * v34];
      long long v38 = *(_OWORD *)a2;
      long long v39 = *((_OWORD *)a2 + 1);
      long long v40 = *((_OWORD *)a2 + 3);
      *((_OWORD *)v36 + 2) = *((_OWORD *)a2 + 2);
      *((_OWORD *)v36 + 3) = v40;
      *(_OWORD *)unint64_t v36 = v38;
      *((_OWORD *)v36 + 1) = v39;
      double v30 = v36 + 64;
      uint64_t v42 = (char *)*a3;
      uint64_t v41 = (char *)a3[1];
      if (v41 != *a3)
      {
        do
        {
          long long v43 = *((_OWORD *)v41 - 4);
          long long v44 = *((_OWORD *)v41 - 3);
          long long v45 = *((_OWORD *)v41 - 1);
          *((_OWORD *)v36 - 2) = *((_OWORD *)v41 - 2);
          *((_OWORD *)v36 - 1) = v45;
          *((_OWORD *)v36 - 4) = v43;
          *((_OWORD *)v36 - 3) = v44;
          v36 -= 64;
          v41 -= 64;
        }
        while (v41 != v42);
        uint64_t v41 = (char *)*a3;
      }
      *a3 = v36;
      a3[1] = v30;
      a3[2] = v37;
      if (v41) {
        operator delete(v41);
      }
    }
    else
    {
      long long v27 = *(_OWORD *)a2;
      long long v28 = *((_OWORD *)a2 + 1);
      long long v29 = *((_OWORD *)a2 + 3);
      v25[2] = *((_OWORD *)a2 + 2);
      v25[3] = v29;
      _OWORD *v25 = v27;
      v25[1] = v28;
      double v30 = v25 + 4;
    }
    a3[1] = v30;
  }
  else
  {
    uint64_t v6 = 0;
    unint64_t v7 = 0;
    double v5 = *a3;
    while (1)
    {
      double v8 = &v5[v6];
      uint64_t v9 = *((void *)v8 + 4);
      uint64_t v10 = *((void *)v8 + 5);
      long long v11 = *((_OWORD *)a2 + 2);
      long long v46 = *((_OWORD *)v8 + 1);
      long long v47 = *((_OWORD *)a2 + 1);
      long long v48 = v11;
      double v12 = sub_10009BE70((double *)&v47);
      double v14 = v13;
      double v16 = v15;
      sub_10009BFD8(&v47);
      double v18 = v17;
      long long v47 = v46;
      *(void *)&long long v48 = v9;
      *((void *)&v48 + 1) = v10;
      double v19 = sub_10009BE70((double *)&v47);
      double v21 = v20;
      double v23 = v22;
      sub_10009BFD8(&v47);
      if (sub_100163898(1, v12, v14, v16, v18, v19, v21, v23, v24, 0.0700000003)) {
        break;
      }
      ++v7;
      double v5 = *a3;
      double v25 = a3[1];
      v6 += 64;
      if (v7 >= ((char *)v25 - (unsigned char *)*a3) >> 6) {
        goto LABEL_7;
      }
    }
    *(double *)((char *)*a3 + v6) = *a2 + *(double *)((char *)*a3 + v6);
  }
}

void sub_1001653B0(void **a1, unint64_t a2)
{
  double v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 5)
  {
    if (a2 >> 59) {
      sub_1001656D0();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_1001685F4(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFE0];
    uint64_t v9 = &v6[32 * v8];
    long long v11 = (char *)*a1;
    uint64_t v10 = (char *)a1[1];
    double v12 = v7;
    if (v10 != *a1)
    {
      do
      {
        long long v13 = *((_OWORD *)v10 - 1);
        *((_OWORD *)v12 - 2) = *((_OWORD *)v10 - 2);
        *((_OWORD *)v12 - 1) = v13;
        v12 -= 32;
        v10 -= 32;
      }
      while (v10 != v11);
      uint64_t v10 = (char *)*a1;
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

void sub_100165460(void **a1, unint64_t a2)
{
  double v4 = a1[2];
  uint64_t v3 = (uint64_t)(a1 + 2);
  if (a2 > (v4 - (unsigned char *)*a1) >> 3)
  {
    if (a2 >> 61) {
      sub_1001656D0();
    }
    int64_t v5 = (unsigned char *)a1[1] - (unsigned char *)*a1;
    uint64_t v6 = (char *)sub_10016862C(v3, a2);
    unint64_t v7 = &v6[v5 & 0xFFFFFFFFFFFFFFF8];
    uint64_t v9 = &v6[8 * v8];
    uint64_t v10 = (char *)*a1;
    long long v11 = (char *)a1[1];
    double v12 = v7;
    if (v11 != *a1)
    {
      double v12 = v7;
      do
      {
        uint64_t v13 = *((void *)v11 - 1);
        v11 -= 8;
        *((void *)v12 - 1) = v13;
        v12 -= 8;
      }
      while (v11 != v10);
    }
    *a1 = v12;
    a1[1] = v7;
    a1[2] = v9;
    if (v10)
    {
      operator delete(v10);
    }
  }
}

BOOL sub_100165508(BOOL result, uint64_t a2)
{
  if (result)
  {
    uint64_t v3 = (CGContext *)result;
    sub_1001639C0((uint64_t)v18);
    if (sub_100163AA0(v18, v3))
    {
      uint64_t v4 = v19;
      uint64_t v5 = v20;
      uint64_t v6 = v21;
      *(void *)a2 = v19;
      *(void *)(a2 + 8) = v5;
      *(void *)(a2 + 16) = v6;
      uint64_t v7 = v22;
      *(_OWORD *)(a2 + 24) = v22;
      *(_OWORD *)(a2 + 40) = v23;
      *(_OWORD *)(a2 + 56) = v24;
      *(_OWORD *)(a2 + 72) = v25;
      *(_OWORD *)(a2 + 88) = v26;
      *(_OWORD *)(a2 + 104) = v27;
      *(_OWORD *)(a2 + 120) = v28;
      *(_OWORD *)(a2 + 136) = v29;
      uint64_t v8 = v32;
      *(_OWORD *)(a2 + 152) = v30;
      *(_OWORD *)(a2 + 168) = v31;
      *(void *)(a2 + 184) = v8;
      long long v9 = v34;
      *(_OWORD *)(a2 + 224) = v33;
      *(_OWORD *)(a2 + 240) = v9;
      long long v10 = v36;
      *(_OWORD *)(a2 + 192) = v35;
      *(_OWORD *)(a2 + 208) = v10;
      long long v11 = v38;
      *(_OWORD *)(a2 + 256) = v37;
      *(_OWORD *)(a2 + 272) = v11;
      *(unsigned char *)(a2 + 296) = 1;
      *(void *)&long long v40 = v4;
      *((void *)&v40 + 1) = v5;
      *(void *)&long long v41 = v6;
      *((void *)&v41 + 1) = v7;
      sub_10009BFD8(&v40);
      *(unsigned char *)(a2 + 297) = v12 >= 0.180000007;
      long long v13 = *(_OWORD *)(a2 + 48);
      long long v40 = *(_OWORD *)(a2 + 32);
      long long v41 = v13;
      sub_10009BFD8(&v40);
      *(unsigned char *)(a2 + 298) = v14 >= 0.180000007;
      long long v15 = *(_OWORD *)(a2 + 80);
      long long v40 = *(_OWORD *)(a2 + 64);
      long long v41 = v15;
      sub_10009BFD8(&v40);
      *(unsigned char *)(a2 + 299) = v16 >= 0.180000007;
      double v17 = v39;
      *(unsigned char *)(a2 + 300) = v39 > 0.0;
      *(double *)(a2 + 288) = v17;
      sub_100163A3C((uint64_t)v18);
      return *(unsigned char *)(a2 + 296) != 0;
    }
    else
    {
      sub_100163A3C((uint64_t)v18);
      return 0;
    }
  }
  return result;
}

void sub_100165680(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9)
{
}

BOOL sub_100165694(double a1, double a2, double a3, double a4)
{
  *(double *)&long long v6 = a1;
  *((double *)&v6 + 1) = a2;
  double v7 = a3;
  double v8 = a4;
  sub_10009BFD8(&v6);
  return v4 < 0.180000007;
}

void sub_1001656D0()
{
}

void sub_1001656E8(const char *a1)
{
  exception = (std::logic_error *)__cxa_allocate_exception(0x10uLL);
  sub_100165744(exception, a1);
}

void sub_100165730(_Unwind_Exception *a1)
{
  __cxa_free_exception(v1);
  _Unwind_Resume(a1);
}

std::logic_error *sub_100165744(std::logic_error *a1, const char *a2)
{
  double result = std::logic_error::logic_error(a1, a2);
  return result;
}

void *sub_100165778(uint64_t a1, unint64_t a2)
{
  if (a2 >= 0x555555555555556) {
    sub_1001657C0();
  }
  return operator new(48 * a2);
}

void sub_1001657C0()
{
  exception = (std::bad_array_new_length *)__cxa_allocate_exception(8uLL);
  uint64_t v1 = std::bad_array_new_length::bad_array_new_length(exception);
}

void sub_1001657F4(long long *a1, long long *a2, unsigned int (**a3)(void, void), uint64_t a4, char a5)
{
LABEL_1:
  long long v11 = a2 - 3;
  double v12 = a1;
LABEL_2:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = 0xAAAAAAAAAAAAAAABLL * (a2 - v12);
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          long long v37 = *a3;
          long long v39 = *(a2 - 2);
          long long v38 = *(a2 - 1);
          v50[0] = *(a2 - 3);
          v50[1] = v39;
          v50[2] = v38;
          long long v40 = *v12;
          long long v41 = v12[2];
          v49[1] = v12[1];
          v49[2] = v41;
          v49[0] = v40;
          if (v37(v50, v49))
          {
            long long v42 = *v12;
            long long v43 = v12[2];
            long long v52 = v12[1];
            long long v53 = v43;
            long long v51 = v42;
            long long v44 = *v11;
            long long v45 = *(a2 - 1);
            v12[1] = *(a2 - 2);
            _OWORD v12[2] = v45;
            *double v12 = v44;
            long long v46 = v52;
            *long long v11 = v51;
            *(a2 - 2) = v46;
            *(a2 - 1) = v53;
          }
          break;
        case 3uLL:
          sub_100165DB0(v12, v12 + 3, a2 - 3, a3);
          break;
        case 4uLL:
          sub_100166658((__n128 *)v12, (__n128 *)v12 + 3, (__n128 *)v12 + 6, (__n128 *)a2 - 3, a3);
          break;
        case 5uLL:
          sub_10016679C((__n128 *)v12, (__n128 *)v12 + 3, (__n128 *)v12 + 6, (__n128 *)v12 + 9, (__n128 *)a2 - 3, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v15 <= 1151)
    {
      if (a5) {
        sub_100165B6C((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      else {
        sub_100165CA4((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      return;
    }
    if (v14 == 1) {
      break;
    }
    unint64_t v17 = v16 >> 1;
    double v18 = &v12[3 * (v16 >> 1)];
    if ((unint64_t)v15 >= 0x1801)
    {
      sub_100165DB0(v12, &v12[3 * (v16 >> 1)], a2 - 3, a3);
      uint64_t v19 = 3 * v17;
      uint64_t v20 = &v12[3 * v17 - 3];
      sub_100165DB0(v12 + 3, v20, a2 - 6, a3);
      uint64_t v21 = v12 + 6;
      long long v22 = &v12[v19 + 3];
      sub_100165DB0(v21, v22, a2 - 9, a3);
      sub_100165DB0(v20, v18, v22, a3);
      long long v23 = *a1;
      long long v24 = a1[2];
      long long v52 = a1[1];
      long long v53 = v24;
      long long v51 = v23;
      long long v25 = *v18;
      long long v26 = v18[2];
      a1[1] = v18[1];
      a1[2] = v26;
      *a1 = v25;
      long long v27 = v51;
      long long v28 = v53;
      v18[1] = v52;
      void v18[2] = v28;
      long long *v18 = v27;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_100165DB0(&v12[3 * (v16 >> 1)], v12, a2 - 3, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    long long v29 = *a3;
    long long v31 = *(a1 - 2);
    long long v30 = *(a1 - 1);
    v48[0] = *(a1 - 3);
    v48[1] = v31;
    v48[2] = v30;
    long long v32 = *a1;
    long long v33 = a1[2];
    v47[1] = a1[1];
    v47[2] = v33;
    v47[0] = v32;
    if ((((uint64_t (*)(_OWORD *, _OWORD *))v29)(v48, v47) & 1) == 0)
    {
      double v12 = sub_100165FA4(a1, a2, (uint64_t (**)(void, void))a3);
      goto LABEL_18;
    }
LABEL_13:
    long long v34 = (__n128 *)sub_1001661D4(a1, a2, (uint64_t (**)(void, void))a3);
    if ((v35 & 1) == 0) {
      goto LABEL_16;
    }
    BOOL v36 = sub_1001663E8((__n128 *)a1, v34, a3);
    double v12 = (long long *)&v34[3];
    if (sub_1001663E8(v34 + 3, (__n128 *)a2, a3))
    {
      a4 = -v14;
      a2 = (long long *)v34;
      if (v36) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v13 = v14 + 1;
    if (!v36)
    {
LABEL_16:
      sub_1001657F4(a1, v34, a3, -v14, a5 & 1);
      double v12 = (long long *)&v34[3];
LABEL_18:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (v12 != a2) {
    sub_10016693C((uint64_t)v12, a2, a2, a3);
  }
}

  long long v11 = a2 - 4;
  double v12 = a1;
LABEL_2:
  uint64_t v13 = 1 - a4;
  while (1)
  {
    a1 = v12;
    uint64_t v14 = v13;
    uint64_t v15 = (char *)a2 - (char *)v12;
    unint64_t v16 = ((char *)a2 - (char *)v12) >> 6;
    if (!(!v6 & v5))
    {
      switch(v16)
      {
        case 0uLL:
        case 1uLL:
          return;
        case 2uLL:
          long long v38 = *a3;
          long long v39 = *(a2 - 1);
          long long v41 = *(a2 - 4);
          long long v40 = *(a2 - 3);
          v56[2] = *(a2 - 2);
          v56[3] = v39;
          v56[0] = v41;
          v56[1] = v40;
          long long v42 = v12[3];
          long long v44 = *v12;
          long long v43 = v12[1];
          v55[2] = v12[2];
          v55[3] = v42;
          v55[0] = v44;
          v55[1] = v43;
          if (v38(v56, v55))
          {
            long long v45 = *v12;
            long long v46 = v12[1];
            long long v47 = v12[3];
            double v59 = v12[2];
            long long v60 = v47;
            id v57 = v45;
            double v58 = v46;
            long long v48 = *v11;
            uint64_t v49 = *(a2 - 3);
            uint64_t v50 = *(a2 - 1);
            _OWORD v12[2] = *(a2 - 2);
            v12[3] = v50;
            *double v12 = v48;
            v12[1] = v49;
            long long v51 = v58;
            *long long v11 = v57;
            *(a2 - 3) = v51;
            long long v52 = v60;
            *(a2 - 2) = v59;
            *(a2 - 1) = v52;
          }
          break;
        case 3uLL:
          sub_1001674E4(v12, v12 + 4, a2 - 4, a3);
          break;
        case 4uLL:
          sub_100167D80((__n128 *)v12, (__n128 *)v12 + 4, (__n128 *)v12 + 8, (__n128 *)a2 - 4, a3);
          break;
        case 5uLL:
          sub_100167ECC((uint64_t)v12, (__n128 *)v12 + 4, (__n128 *)v12 + 8, (__n128 *)v12 + 12, (__n128 *)a2 - 4, a3);
          break;
        default:
          JUMPOUT(0);
      }
      return;
    }
    if (v15 <= 1535)
    {
      if (a5) {
        sub_10016729C((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      else {
        sub_1001673D4((uint64_t)v12, a2, (uint64_t (**)(void, void))a3);
      }
      return;
    }
    if (v14 == 1) {
      break;
    }
    unint64_t v17 = v16 >> 1;
    double v18 = &v12[4 * (v16 >> 1)];
    if ((unint64_t)v15 > 0x2000)
    {
      sub_1001674E4(v12, &v12[4 * (v16 >> 1)], a2 - 4, a3);
      sub_1001674E4(v12 + 4, v18 - 4, a2 - 8, a3);
      sub_1001674E4(v12 + 8, &v12[4 * v17 + 4], a2 - 12, a3);
      sub_1001674E4(v18 - 4, v18, &v12[4 * v17 + 4], a3);
      uint64_t v19 = *v12;
      uint64_t v20 = v12[1];
      uint64_t v21 = v12[3];
      double v59 = v12[2];
      long long v60 = v21;
      id v57 = v19;
      double v58 = v20;
      long long v22 = *v18;
      long long v23 = v18[1];
      long long v24 = v18[3];
      _OWORD v12[2] = v18[2];
      v12[3] = v24;
      *double v12 = v22;
      v12[1] = v23;
      long long v25 = v57;
      long long v26 = v58;
      long long v27 = v60;
      void v18[2] = v59;
      void v18[3] = v27;
      long long *v18 = v25;
      v18[1] = v26;
      if (a5) {
        goto LABEL_13;
      }
    }
    else
    {
      sub_1001674E4(&v12[4 * (v16 >> 1)], v12, a2 - 4, a3);
      if (a5) {
        goto LABEL_13;
      }
    }
    long long v28 = *a3;
    long long v29 = *(v12 - 1);
    long long v31 = *(v12 - 4);
    long long v30 = *(v12 - 3);
    v54[2] = *(v12 - 2);
    v54[3] = v29;
    v54[0] = v31;
    v54[1] = v30;
    long long v32 = v12[3];
    long long v34 = *v12;
    long long v33 = v12[1];
    v53[2] = v12[2];
    v53[3] = v32;
    v53[0] = v34;
    v53[1] = v33;
    if ((((uint64_t (*)(_OWORD *, _OWORD *))v28)(v54, v53) & 1) == 0)
    {
      double v12 = sub_1001676E0(v12, a2, (uint64_t (**)(void, void))a3);
      goto LABEL_18;
    }
LABEL_13:
    char v35 = sub_100167908(v12, a2, (uint64_t (**)(void, void))a3);
    if ((v36 & 1) == 0) {
      goto LABEL_16;
    }
    long long v37 = sub_100167B18((uint64_t)v12, (__n128 *)v35, a3);
    double v12 = v35 + 4;
    if (sub_100167B18((uint64_t)(v35 + 4), (__n128 *)a2, a3))
    {
      a4 = -v14;
      a2 = v35;
      if (v37) {
        return;
      }
      goto LABEL_1;
    }
    uint64_t v13 = v14 + 1;
    if (!v37)
    {
LABEL_16:
      sub_100166F48(a1, v35, a3, -v14, a5 & 1);
      double v12 = v35 + 4;
LABEL_18:
      a5 = 0;
      a4 = -v14;
      goto LABEL_2;
    }
  }
  if (v12 != a2) {
    sub_100168078((uint64_t)v12, a2, a2, a3);
  }
}

uint64_t sub_100165B6C(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v31 = v3;
    uint64_t v32 = v4;
    char v6 = (_OWORD *)result;
    double v7 = (long long *)(result + 48);
    if ((long long *)(result + 48) != a2)
    {
      uint64_t v9 = 0;
      long long v10 = (long long *)result;
      do
      {
        long long v11 = v10;
        long long v10 = v7;
        double v12 = *a3;
        long long v13 = v10[1];
        v30[0] = *v10;
        v30[1] = v13;
        v30[2] = v10[2];
        long long v14 = *v11;
        long long v15 = v11[2];
        v29[1] = v11[1];
        v29[2] = v15;
        v29[0] = v14;
        double result = v12(v30, v29);
        if (result)
        {
          long long v16 = v10[1];
          long long v26 = *v10;
          long long v27 = v16;
          long long v28 = v10[2];
          uint64_t v17 = v9;
          while (1)
          {
            double v18 = (_OWORD *)((char *)v6 + v17);
            long long v19 = *(_OWORD *)((char *)v6 + v17 + 16);
            void v18[3] = *(_OWORD *)((char *)v6 + v17);
            double v18[4] = v19;
            void v18[5] = *(_OWORD *)((char *)v6 + v17 + 32);
            if (!v17) {
              break;
            }
            uint64_t v20 = *a3;
            v25[0] = v26;
            v25[1] = v27;
            v25[2] = v28;
            long long v21 = *(v18 - 2);
            v24[0] = *(v18 - 3);
            v24[1] = v21;
            id v24[2] = *(v18 - 1);
            double result = v20(v25, v24);
            v17 -= 48;
            if ((result & 1) == 0)
            {
              long long v22 = (_OWORD *)((char *)v6 + v17 + 48);
              goto LABEL_10;
            }
          }
          long long v22 = v6;
LABEL_10:
          long long v23 = v27;
          *long long v22 = v26;
          v22[1] = v23;
          v22[2] = v28;
        }
        double v7 = v10 + 3;
        v9 += 48;
      }
      while (v10 + 3 != a2);
    }
  }
  return result;
}

uint64_t sub_100165CA4(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v30 = v3;
    uint64_t v31 = v4;
    char v6 = (long long *)result;
    for (uint64_t i = (long long *)(result + 48); v6 + 3 != a2; uint64_t i = v6 + 3)
    {
      uint64_t v9 = v6;
      char v6 = i;
      long long v10 = *a3;
      long long v11 = v6[1];
      v29[0] = *v6;
      v29[1] = v11;
      v29[2] = v6[2];
      long long v12 = *v9;
      long long v13 = v9[2];
      v28[1] = v9[1];
      v28[2] = v13;
      v28[0] = v12;
      double result = v10(v29, v28);
      if (result)
      {
        long long v14 = v6[1];
        long long v25 = *v6;
        long long v26 = v14;
        long long v27 = v6[2];
        long long v15 = v6;
        do
        {
          long long v16 = v15 - 3;
          long long v17 = *(v15 - 2);
          long long v18 = *(v15 - 1);
          long long v19 = *(v15 - 4);
          long long *v15 = *(v15 - 3);
          v15[1] = v17;
          v15[2] = v18;
          uint64_t v20 = *a3;
          v24[0] = v25;
          v24[1] = v26;
          id v24[2] = v27;
          long long v21 = *(v15 - 6);
          v23[1] = *(v15 - 5);
          v23[2] = v19;
          v23[0] = v21;
          double result = v20(v24, v23);
          long long v15 = v16;
        }
        while ((result & 1) != 0);
        long long v22 = v26;
        long long *v16 = v25;
        v16[1] = v22;
        v16[2] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_100165DB0(_OWORD *a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  double v8 = *a4;
  long long v9 = a2[1];
  v60[0] = *a2;
  v60[1] = v9;
  v60[2] = a2[2];
  long long v10 = a1[1];
  v59[0] = *a1;
  v59[1] = v10;
  v59[2] = a1[2];
  char v11 = v8(v60, v59);
  long long v12 = *a4;
  if (v11)
  {
    long long v13 = a3[1];
    v54[0] = *a3;
    v54[1] = v13;
    v54[2] = a3[2];
    long long v14 = a2[1];
    v53[0] = *a2;
    v53[1] = v14;
    v53[2] = a2[2];
    if (v12(v54, v53))
    {
      long long v15 = *a1;
      long long v16 = a1[1];
      long long v17 = a1[2];
      long long v19 = a3[1];
      long long v18 = a3[2];
      *a1 = *a3;
      a1[1] = v19;
      a1[2] = v18;
      a3[2] = v17;
      uint64_t result = 1;
LABEL_9:
      *a3 = v15;
      a3[1] = v16;
      return result;
    }
    long long v38 = *a1;
    long long v39 = a1[1];
    long long v40 = a1[2];
    long long v42 = a2[1];
    long long v41 = a2[2];
    *a1 = *a2;
    a1[1] = v42;
    a1[2] = v41;
    a2[1] = v39;
    a2[2] = v40;
    *a2 = v38;
    long long v43 = *a4;
    long long v44 = *a3;
    long long v45 = a3[2];
    v52[1] = a3[1];
    v52[2] = v45;
    long long v46 = *a2;
    long long v47 = a2[1];
    v51[2] = a2[2];
    v52[0] = v44;
    v51[0] = v46;
    v51[1] = v47;
    if (v43(v52, v51))
    {
      long long v15 = *a2;
      long long v16 = a2[1];
      long long v48 = a2[2];
      long long v50 = a3[1];
      long long v49 = a3[2];
      *a2 = *a3;
      a2[1] = v50;
      a2[2] = v49;
      a3[2] = v48;
      uint64_t result = 2;
      goto LABEL_9;
    }
  }
  else
  {
    long long v21 = a3[1];
    v58[0] = *a3;
    v58[1] = v21;
    v58[2] = a3[2];
    long long v22 = a2[1];
    v57[0] = *a2;
    v57[1] = v22;
    v57[2] = a2[2];
    uint64_t result = ((uint64_t (*)(_OWORD *, _OWORD *))v12)(v58, v57);
    if (!result) {
      return result;
    }
    long long v23 = *a2;
    long long v24 = a2[1];
    long long v25 = a2[2];
    long long v27 = a3[1];
    long long v26 = a3[2];
    *a2 = *a3;
    a2[1] = v27;
    a2[2] = v26;
    a3[1] = v24;
    a3[2] = v25;
    *a3 = v23;
    long long v28 = *a4;
    long long v29 = *a2;
    long long v30 = a2[2];
    v56[1] = a2[1];
    v56[2] = v30;
    long long v31 = *a1;
    long long v32 = a1[1];
    v55[2] = a1[2];
    v56[0] = v29;
    v55[0] = v31;
    v55[1] = v32;
    if (v28(v56, v55))
    {
      long long v33 = *a1;
      long long v34 = a1[1];
      long long v35 = a1[2];
      long long v37 = a2[1];
      long long v36 = a2[2];
      *a1 = *a2;
      a1[1] = v37;
      a1[2] = v36;
      a2[1] = v34;
      a2[2] = v35;
      uint64_t result = 2;
      *a2 = v33;
      return result;
    }
  }
  return 1;
}

long long *sub_100165FA4(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v4 = a2;
  long long v6 = a1[1];
  long long v53 = *a1;
  long long v54 = v6;
  long long v55 = a1[2];
  double v7 = *a3;
  v52[0] = v53;
  v52[1] = v6;
  v52[2] = v55;
  long long v8 = *(a2 - 2);
  v51[0] = *(a2 - 3);
  v51[1] = v8;
  v51[2] = *(a2 - 1);
  if (v7(v52, v51))
  {
    long long v9 = a1;
    do
    {
      long long v10 = v9 + 3;
      char v11 = *a3;
      v50[0] = v53;
      v50[1] = v54;
      v50[2] = v55;
      long long v12 = v9[4];
      v49[0] = v9[3];
      v49[1] = v12;
      v49[2] = v9[5];
      char v13 = v11(v50, v49);
      long long v9 = v10;
    }
    while ((v13 & 1) == 0);
  }
  else
  {
    long long v14 = a1 + 3;
    do
    {
      long long v10 = v14;
      if (v14 >= v4) {
        break;
      }
      long long v15 = *a3;
      v48[0] = v53;
      v48[1] = v54;
      v48[2] = v55;
      long long v16 = v10[1];
      v47[0] = *v10;
      v47[1] = v16;
      v47[2] = v10[2];
      int v17 = v15(v48, v47);
      long long v14 = v10 + 3;
    }
    while (!v17);
  }
  if (v10 >= v4)
  {
    long long v18 = v4;
  }
  else
  {
    do
    {
      long long v18 = v4 - 3;
      long long v19 = *a3;
      v46[0] = v53;
      v46[1] = v54;
      v46[2] = v55;
      long long v20 = *(v4 - 2);
      v45[0] = *(v4 - 3);
      v45[1] = v20;
      v45[2] = *(v4 - 1);
      v4 -= 3;
    }
    while ((v19(v46, v45) & 1) != 0);
  }
  while (v10 < v18)
  {
    long long v21 = *v10;
    long long v22 = v10[2];
    long long v57 = v10[1];
    long long v58 = v22;
    long long v56 = v21;
    long long v23 = *v18;
    long long v24 = v18[2];
    v10[1] = v18[1];
    v10[2] = v24;
    *long long v10 = v23;
    long long v25 = v56;
    long long v26 = v58;
    v18[1] = v57;
    void v18[2] = v26;
    long long *v18 = v25;
    do
    {
      v44[0] = v53;
      v44[1] = v54;
      v44[2] = v55;
      long long v28 = v10[3];
      long long v27 = v10[4];
      long long v29 = v10[5];
      v10 += 3;
      long long v30 = (unsigned int (*)(void, void))*a3;
      v43[1] = v27;
      v43[2] = v29;
      v43[0] = v28;
    }
    while (!v30(v44, v43));
    do
    {
      v42[0] = v53;
      v42[1] = v54;
      v42[2] = v55;
      long long v32 = *(v18 - 3);
      long long v31 = *(v18 - 2);
      long long v33 = *(v18 - 1);
      v18 -= 3;
      long long v34 = *a3;
      v41[1] = v31;
      double v41[2] = v33;
      v41[0] = v32;
    }
    while ((v34(v42, v41) & 1) != 0);
  }
  long long v35 = v10 - 3;
  if (v10 - 3 != a1)
  {
    long long v36 = *v35;
    long long v37 = *(v10 - 1);
    a1[1] = *(v10 - 2);
    a1[2] = v37;
    *a1 = v36;
  }
  long long v38 = v53;
  long long v39 = v55;
  *(v10 - 2) = v54;
  *(v10 - 1) = v39;
  *long long v35 = v38;
  return v10;
}

long long *sub_1001661D4(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v6 = 0;
  long long v7 = a1[1];
  long long v47 = *a1;
  long long v48 = v7;
  long long v49 = a1[2];
  do
  {
    long long v8 = *a3;
    long long v9 = a1[v6 + 4];
    v46[0] = a1[v6 + 3];
    v46[1] = v9;
    v46[2] = a1[v6 + 5];
    v45[0] = v47;
    v45[1] = v48;
    v45[2] = v49;
    v6 += 3;
  }
  while ((v8(v46, v45) & 1) != 0);
  long long v10 = &a1[v6];
  char v11 = &a1[v6 - 3];
  if (v6 == 3)
  {
    while (v10 < a2)
    {
      long long v15 = *a3;
      long long v12 = a2 - 3;
      long long v16 = *(a2 - 2);
      v44[0] = *(a2 - 3);
      v44[1] = v16;
      v44[2] = *(a2 - 1);
      v43[0] = v47;
      v43[1] = v48;
      v43[2] = v49;
      a2 -= 3;
      if (v15(v44, v43)) {
        goto LABEL_9;
      }
    }
    long long v12 = a2;
  }
  else
  {
    do
    {
      long long v12 = a2 - 3;
      char v13 = (unsigned int (*)(void, void))*a3;
      long long v14 = *(a2 - 2);
      v42[0] = *(a2 - 3);
      v42[1] = v14;
      v42[2] = *(a2 - 1);
      v41[0] = v47;
      v41[1] = v48;
      double v41[2] = v49;
      a2 -= 3;
    }
    while (!v13(v42, v41));
  }
LABEL_9:
  if (v10 < v12)
  {
    int v17 = v10;
    long long v18 = v12;
    do
    {
      long long v20 = v17[1];
      long long v50 = *v17;
      long long v19 = v50;
      long long v51 = v20;
      long long v52 = v17[2];
      long long v21 = v52;
      long long v22 = *v18;
      long long v23 = v18[2];
      v17[1] = v18[1];
      void v17[2] = v23;
      long long *v17 = v22;
      v18[1] = v20;
      void v18[2] = v21;
      long long *v18 = v19;
      do
      {
        long long v25 = v17[4];
        long long v24 = v17[5];
        long long v26 = v17[3];
        v17 += 3;
        long long v27 = *a3;
        v40[0] = v26;
        v40[1] = v25;
        v40[2] = v24;
        v39[1] = v48;
        v39[2] = v49;
        v39[0] = v47;
      }
      while ((v27(v40, v39) & 1) != 0);
      do
      {
        long long v29 = *(v18 - 2);
        long long v28 = *(v18 - 1);
        long long v30 = *(v18 - 3);
        v18 -= 3;
        long long v31 = (unsigned int (*)(void, void))*a3;
        v38[0] = v30;
        v38[1] = v29;
        id v38[2] = v28;
        v37[1] = v48;
        v37[2] = v49;
        v37[0] = v47;
      }
      while (!v31(v38, v37));
    }
    while (v17 < v18);
    char v11 = v17 - 3;
  }
  if (v11 != a1)
  {
    long long v32 = *v11;
    long long v33 = v11[2];
    a1[1] = v11[1];
    a1[2] = v33;
    *a1 = v32;
  }
  long long v34 = v47;
  long long v35 = v49;
  v11[1] = v48;
  id v11[2] = v35;
  *char v11 = v34;
  return v11;
}

BOOL sub_1001663E8(__n128 *a1, __n128 *a2, unsigned int (**a3)(void, void))
{
  uint64_t v6 = a2 - a1;
  BOOL result = 1;
  switch(0xAAAAAAAAAAAAAAABLL * v6)
  {
    case 0uLL:
    case 1uLL:
      return result;
    case 2uLL:
      long long v8 = *a3;
      __n128 v9 = a2[-2];
      v41[0] = a2[-3];
      v41[1] = v9;
      double v41[2] = a2[-1];
      __n128 v10 = a1[1];
      v40[0] = *a1;
      v40[1] = v10;
      v40[2] = a1[2];
      if (v8(v41, v40))
      {
        char v11 = a2 - 3;
        __n128 v12 = *a1;
        __n128 v13 = a1[1];
        __n128 v14 = a1[2];
        __n128 v16 = a2[-2];
        __n128 v15 = a2[-1];
        *a1 = a2[-3];
        a1[1] = v16;
        a1[2] = v15;
        v11[1] = v13;
        id v11[2] = v14;
        *char v11 = v12;
      }
      return 1;
    case 3uLL:
      sub_100165DB0(a1, (__n128 *)a1[3].n128_u64, (__n128 *)a2[-3].n128_u64, a3);
      return 1;
    case 4uLL:
      sub_100166658(a1, a1 + 3, a1 + 6, a2 - 3, a3);
      return 1;
    case 5uLL:
      sub_10016679C(a1, a1 + 3, a1 + 6, a1 + 9, a2 - 3, a3);
      return 1;
    default:
      int v17 = a1 + 6;
      sub_100165DB0(a1, (__n128 *)a1[3].n128_u64, (__n128 *)a1[6].n128_u64, a3);
      long long v18 = a1 + 9;
      if (&a1[9] == a2) {
        return 1;
      }
      uint64_t v19 = 0;
      int v20 = 0;
      break;
  }
  while (1)
  {
    long long v21 = *a3;
    __n128 v22 = v18[1];
    v39[0] = *v18;
    v39[1] = v22;
    v39[2] = v18[2];
    __n128 v23 = *v17;
    __n128 v24 = v17[2];
    v38[1] = v17[1];
    id v38[2] = v24;
    v38[0] = v23;
    if (v21(v39, v38))
    {
      __n128 v25 = v18[1];
      __n128 v35 = *v18;
      __n128 v36 = v25;
      __n128 v37 = v18[2];
      uint64_t v26 = v19;
      while (1)
      {
        long long v27 = (_OWORD *)((char *)a1->n128_u64 + v26);
        long long v28 = *(long long *)((char *)&a1[7] + v26);
        v27[9] = *(__n128 *)((char *)&a1[6] + v26);
        v27[10] = v28;
        v27[11] = *(__n128 *)((char *)&a1[8] + v26);
        if (v26 == -96) {
          break;
        }
        long long v29 = *a3;
        v34[0] = v35;
        v34[1] = v36;
        v34[2] = v37;
        long long v30 = v27[4];
        v33[0] = v27[3];
        v33[1] = v30;
        long long v33[2] = v27[5];
        v26 -= 48;
        if ((((uint64_t (*)(_OWORD *, _OWORD *))v29)(v34, v33) & 1) == 0)
        {
          long long v31 = (__n128 *)((char *)a1 + v26 + 144);
          goto LABEL_12;
        }
      }
      long long v31 = a1;
LABEL_12:
      __n128 v32 = v36;
      *long long v31 = v35;
      v31[1] = v32;
      v31[2] = v37;
      if (++v20 == 8) {
        return &v18[3] == a2;
      }
    }
    int v17 = v18;
    v19 += 48;
    v18 += 3;
    if (v18 == a2) {
      return 1;
    }
  }
}

__n128 sub_100166658(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, unsigned int (**a5)(void, void))
{
  sub_100165DB0(a1, a2, a3, a5);
  __n128 v10 = *a5;
  __n128 v11 = a4[1];
  v43[0] = *a4;
  v43[1] = v11;
  v43[2] = a4[2];
  __n128 v12 = a3[1];
  v42[0] = *a3;
  v42[1] = v12;
  v42[2] = a3[2];
  if (v10(v43, v42))
  {
    __n128 v14 = *a3;
    __n128 v15 = a3[1];
    __n128 v16 = a3[2];
    __n128 v18 = a4[1];
    __n128 v17 = a4[2];
    *a3 = *a4;
    a3[1] = v18;
    a3[2] = v17;
    a4[1] = v15;
    a4[2] = v16;
    *a4 = v14;
    uint64_t v19 = *a5;
    __n128 v20 = *a3;
    __n128 v21 = a3[2];
    v41[1] = a3[1];
    double v41[2] = v21;
    __n128 v22 = *a2;
    __n128 v23 = a2[1];
    v40[2] = a2[2];
    v41[0] = v20;
    v40[0] = v22;
    v40[1] = v23;
    if (v19(v41, v40))
    {
      __n128 v24 = *a2;
      __n128 v25 = a2[1];
      __n128 v26 = a2[2];
      __n128 v28 = a3[1];
      __n128 v27 = a3[2];
      *a2 = *a3;
      a2[1] = v28;
      a2[2] = v27;
      a3[1] = v25;
      a3[2] = v26;
      *a3 = v24;
      long long v29 = *a5;
      __n128 v30 = *a2;
      __n128 v31 = a2[2];
      v39[1] = a2[1];
      v39[2] = v31;
      __n128 v32 = *a1;
      __n128 v33 = a1[1];
      id v38[2] = a1[2];
      v39[0] = v30;
      v38[0] = v32;
      v38[1] = v33;
      if (v29(v39, v38))
      {
        __n128 result = *a1;
        __n128 v34 = a1[1];
        __n128 v35 = a1[2];
        __n128 v37 = a2[1];
        __n128 v36 = a2[2];
        *a1 = *a2;
        a1[1] = v37;
        a1[2] = v36;
        a2[1] = v34;
        a2[2] = v35;
        *a2 = result;
      }
    }
  }
  return result;
}

__n128 sub_10016679C(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, unsigned int (**a6)(void, void))
{
  sub_100166658((__n128 *)a1, a2, a3, a4, a6);
  __n128 v12 = *a6;
  __n128 v13 = a5[1];
  v57[0] = *a5;
  v57[1] = v13;
  v57[2] = a5[2];
  __n128 v14 = a4[1];
  v56[0] = *a4;
  v56[1] = v14;
  v56[2] = a4[2];
  if (v12(v57, v56))
  {
    __n128 v16 = *a4;
    __n128 v17 = a4[1];
    __n128 v18 = a4[2];
    __n128 v20 = a5[1];
    __n128 v19 = a5[2];
    *a4 = *a5;
    a4[1] = v20;
    a4[2] = v19;
    a5[1] = v17;
    a5[2] = v18;
    *a5 = v16;
    __n128 v21 = *a6;
    __n128 v22 = *a4;
    __n128 v23 = a4[2];
    v55[1] = a4[1];
    v55[2] = v23;
    __n128 v24 = *a3;
    __n128 v25 = a3[1];
    v54[2] = a3[2];
    v55[0] = v22;
    v54[0] = v24;
    v54[1] = v25;
    if (v21(v55, v54))
    {
      __n128 v26 = *a3;
      __n128 v27 = a3[1];
      __n128 v28 = a3[2];
      __n128 v30 = a4[1];
      __n128 v29 = a4[2];
      *a3 = *a4;
      a3[1] = v30;
      a3[2] = v29;
      a4[1] = v27;
      a4[2] = v28;
      *a4 = v26;
      __n128 v31 = *a6;
      __n128 v32 = *a3;
      __n128 v33 = a3[2];
      v53[1] = a3[1];
      v53[2] = v33;
      __n128 v34 = *a2;
      __n128 v35 = a2[1];
      v52[2] = a2[2];
      v53[0] = v32;
      v52[0] = v34;
      v52[1] = v35;
      if (v31(v53, v52))
      {
        __n128 v36 = *a2;
        __n128 v37 = a2[1];
        __n128 v38 = a2[2];
        __n128 v40 = a3[1];
        __n128 v39 = a3[2];
        *a2 = *a3;
        a2[1] = v40;
        a2[2] = v39;
        a3[1] = v37;
        a3[2] = v38;
        *a3 = v36;
        long long v41 = *a6;
        __n128 v42 = *a2;
        __n128 v43 = a2[2];
        v51[1] = a2[1];
        v51[2] = v43;
        __n128 v44 = *(__n128 *)a1;
        long long v45 = *(_OWORD *)(a1 + 16);
        v50[2] = *(_OWORD *)(a1 + 32);
        v51[0] = v42;
        v50[0] = v44;
        v50[1] = v45;
        if (v41(v51, v50))
        {
          __n128 result = *(__n128 *)a1;
          __n128 v46 = *(__n128 *)(a1 + 16);
          __n128 v47 = *(__n128 *)(a1 + 32);
          __n128 v49 = a2[1];
          __n128 v48 = a2[2];
          *(__n128 *)a1 = *a2;
          *(__n128 *)(a1 + 16) = v49;
          *(__n128 *)(a1 + 32) = v48;
          a2[1] = v46;
          a2[2] = v47;
          *a2 = result;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_10016693C(uint64_t a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  if ((_OWORD *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) / 48;
    if ((uint64_t)a2 - a1 >= 49)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      __n128 v12 = (__n128 *)(a1 + 48 * v10);
      do
      {
        sub_100166B28(a1, a4, v9, v12);
        v12 -= 3;
        --v11;
      }
      while (v11);
    }
    __n128 v13 = a2;
    if (a2 != a3)
    {
      __n128 v14 = a2;
      do
      {
        __n128 v15 = (unsigned int (*)(_OWORD *, _OWORD *))*a4;
        long long v16 = v14[1];
        v34[0] = *v14;
        v34[1] = v16;
        v34[2] = v14[2];
        long long v17 = *(_OWORD *)(a1 + 16);
        v33[0] = *(_OWORD *)a1;
        v33[1] = v17;
        long long v33[2] = *(_OWORD *)(a1 + 32);
        if (v15(v34, v33))
        {
          long long v18 = *v14;
          long long v19 = v14[1];
          long long v20 = v14[2];
          long long v22 = *(_OWORD *)(a1 + 16);
          long long v21 = *(_OWORD *)(a1 + 32);
          *__n128 v14 = *(_OWORD *)a1;
          v14[1] = v22;
          v14[2] = v21;
          *(_OWORD *)(a1 + 16) = v19;
          *(_OWORD *)(a1 + 32) = v20;
          *(_OWORD *)a1 = v18;
          sub_100166B28(a1, a4, v9, (__n128 *)a1);
        }
        v14 += 3;
      }
      while (v14 != a3);
      __n128 v13 = a3;
    }
    if (v8 >= 49)
    {
      int64_t v23 = v8 / 0x30uLL;
      __n128 v24 = (__n128 *)(a2 - 3);
      do
      {
        __n128 v25 = *(__n128 *)(a1 + 16);
        __n128 v35 = *(__n128 *)a1;
        __n128 v36 = v25;
        __n128 v37 = *(__n128 *)(a1 + 32);
        __n128 v26 = (__n128 *)sub_100166D0C((_OWORD *)a1, (unsigned int (**)(_OWORD *, _OWORD *))a4, v23);
        if (v24 == v26)
        {
          __n128 v30 = v36;
          *__n128 v26 = v35;
          v26[1] = v30;
          v26[2] = v37;
        }
        else
        {
          __n128 v27 = *v24;
          __n128 v28 = v24[2];
          v26[1] = v24[1];
          v26[2] = v28;
          *__n128 v26 = v27;
          __n128 v29 = v36;
          *__n128 v24 = v35;
          v24[1] = v29;
          id v24[2] = v37;
          sub_100166DF8(a1, (uint64_t)&v26[3], a4, 0xAAAAAAAAAAAAAAABLL * (((uint64_t)&v26[3] - a1) >> 4));
        }
        v24 -= 3;
      }
      while (v23-- > 2);
    }
    return v13;
  }
  return a3;
}

__n128 sub_100166B28(uint64_t a1, unsigned int (**a2)(void, void), uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v48 = v4;
    uint64_t v49 = v5;
    long long v7 = a4;
    uint64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= (uint64_t)(0xAAAAAAAAAAAAAAABLL * (((uint64_t)a4 - a1) >> 4)))
    {
      uint64_t v12 = (0x5555555555555556 * (((uint64_t)a4 - a1) >> 4)) | 1;
      __n128 v13 = (__n128 *)(a1 + 48 * v12);
      uint64_t v14 = 0x5555555555555556 * (((uint64_t)a4 - a1) >> 4) + 2;
      if (v14 < a3)
      {
        __n128 v15 = *a2;
        __n128 v16 = v13[1];
        v47[0] = *v13;
        v47[1] = v16;
        __n128 v17 = v13[3];
        v47[2] = v13[2];
        __n128 v18 = v13[4];
        __n128 v19 = v13[5];
        v46[0] = v17;
        v46[1] = v18;
        v46[2] = v19;
        if (v15(v47, v46))
        {
          v13 += 3;
          uint64_t v12 = v14;
        }
      }
      long long v20 = *a2;
      __n128 v21 = v13[1];
      v45[0] = *v13;
      v45[1] = v21;
      v45[2] = v13[2];
      __n128 v22 = v7[1];
      v44[0] = *v7;
      v44[1] = v22;
      v44[2] = v7[2];
      if ((((uint64_t (*)(_OWORD *, _OWORD *))v20)(v45, v44) & 1) == 0)
      {
        __n128 v24 = v7[1];
        __n128 v41 = *v7;
        __n128 v42 = v24;
        __n128 v43 = v7[2];
        do
        {
          __n128 v25 = v13;
          __n128 v26 = *v13;
          __n128 v27 = v13[2];
          v7[1] = v13[1];
          v7[2] = v27;
          __n128 *v7 = v26;
          if (v9 < v12) {
            break;
          }
          uint64_t v28 = (2 * v12) | 1;
          __n128 v13 = (__n128 *)(a1 + 48 * v28);
          if (2 * v12 + 2 < a3)
          {
            __n128 v29 = *a2;
            __n128 v30 = v13[1];
            v40[0] = *v13;
            v40[1] = v30;
            __n128 v31 = v13[3];
            v40[2] = v13[2];
            __n128 v32 = v13[4];
            __n128 v33 = v13[5];
            v39[0] = v31;
            v39[1] = v32;
            v39[2] = v33;
            if (v29(v40, v39))
            {
              v13 += 3;
              uint64_t v28 = 2 * v12 + 2;
            }
          }
          __n128 v34 = *a2;
          __n128 v35 = v13[1];
          v38[0] = *v13;
          v38[1] = v35;
          id v38[2] = v13[2];
          v37[0] = v41;
          v37[1] = v42;
          v37[2] = v43;
          long long v7 = v25;
          uint64_t v12 = v28;
        }
        while (!v34(v38, v37));
        __n128 result = v41;
        __n128 v36 = v43;
        v25[1] = v42;
        v25[2] = v36;
        __n128 *v25 = result;
      }
    }
  }
  return result;
}

_OWORD *sub_100166D0C(_OWORD *a1, unsigned int (**a2)(_OWORD *, _OWORD *), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    uint64_t v9 = &a1[3 * v6 + 3];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      uint64_t v12 = *a2;
      long long v14 = v9[1];
      long long v13 = v9[2];
      v21[0] = *v9;
      v21[1] = v14;
      v21[2] = v13;
      long long v15 = v9[3];
      long long v16 = v9[5];
      v20[1] = v9[4];
      id v20[2] = v16;
      v20[0] = v15;
      if (v12(v21, v20))
      {
        v9 += 3;
        uint64_t v10 = v11;
      }
    }
    long long v17 = *v9;
    long long v18 = v9[2];
    a1[1] = v9[1];
    a1[2] = v18;
    *a1 = v17;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

double sub_100166DF8(uint64_t a1, uint64_t a2, unsigned int (**a3)(void, void), uint64_t a4)
{
  if (a4 >= 2)
  {
    uint64_t v31 = v4;
    uint64_t v32 = v5;
    unint64_t v9 = (unint64_t)(a4 - 2) >> 1;
    uint64_t v10 = *a3;
    uint64_t v11 = (_OWORD *)(a1 + 48 * v9);
    long long v12 = v11[1];
    v30[0] = *v11;
    v30[1] = v12;
    v30[2] = v11[2];
    long long v13 = *(_OWORD *)(a2 - 32);
    v29[0] = *(_OWORD *)(a2 - 48);
    v29[1] = v13;
    v29[2] = *(_OWORD *)(a2 - 16);
    if (v10(v30, v29))
    {
      long long v15 = (_OWORD *)(a2 - 48);
      long long v16 = *(_OWORD *)(a2 - 32);
      long long v26 = *(_OWORD *)(a2 - 48);
      long long v27 = v16;
      long long v28 = *(_OWORD *)(a2 - 16);
      do
      {
        long long v17 = v11;
        long long v18 = *v11;
        long long v19 = v11[2];
        v15[1] = v11[1];
        v15[2] = v19;
        _OWORD *v15 = v18;
        if (!v9) {
          break;
        }
        unint64_t v9 = (v9 - 1) >> 1;
        long long v20 = *a3;
        uint64_t v11 = (_OWORD *)(a1 + 48 * v9);
        long long v21 = v11[1];
        v25[0] = *v11;
        v25[1] = v21;
        v25[2] = v11[2];
        v24[0] = v26;
        v24[1] = v27;
        id v24[2] = v28;
        char v22 = v20(v25, v24);
        long long v15 = v17;
      }
      while ((v22 & 1) != 0);
      long long v23 = v27;
      _OWORD *v17 = v26;
      v17[1] = v23;
      double result = *(double *)&v28;
      void v17[2] = v28;
    }
  }
  return result;
}

void *sub_100166F10(uint64_t a1, unint64_t a2)
{
  if (a2 >> 58) {
    sub_1001657C0();
  }
  return operator new(a2 << 6);
}

void sub_100166F48(long long *a1, long long *a2, unsigned int (**a3)(void, void), uint64_t a4, char a5)
{
uint64_t sub_10016729C(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v38 = v3;
    uint64_t v39 = v4;
    char v6 = (_OWORD *)result;
    uint64_t v7 = (long long *)(result + 64);
    if ((long long *)(result + 64) != a2)
    {
      uint64_t v9 = 0;
      uint64_t v10 = (long long *)result;
      do
      {
        uint64_t v11 = v10;
        uint64_t v10 = v7;
        long long v12 = *a3;
        long long v13 = v10[1];
        v37[0] = *v10;
        v37[1] = v13;
        long long v14 = v10[3];
        v37[2] = v10[2];
        _OWORD v37[3] = v14;
        long long v15 = v11[3];
        long long v17 = *v11;
        long long v16 = v11[1];
        v36[2] = v11[2];
        v36[3] = v15;
        v36[0] = v17;
        v36[1] = v16;
        double result = v12(v37, v36);
        if (result)
        {
          long long v18 = v10[1];
          long long v32 = *v10;
          long long v33 = v18;
          long long v19 = v10[3];
          long long v34 = v10[2];
          long long v35 = v19;
          uint64_t v20 = v9;
          while (1)
          {
            long long v21 = (_OWORD *)((char *)v6 + v20);
            long long v22 = *(_OWORD *)((char *)v6 + v20 + 16);
            void v21[4] = *(_OWORD *)((char *)v6 + v20);
            v21[5] = v22;
            long long v23 = *(_OWORD *)((char *)v6 + v20 + 48);
            v21[6] = *(_OWORD *)((char *)v6 + v20 + 32);
            v21[7] = v23;
            if (!v20) {
              break;
            }
            long long v24 = *a3;
            v31[0] = v32;
            v31[1] = v33;
            v31[2] = v34;
            v31[3] = v35;
            long long v25 = *(v21 - 3);
            v30[0] = *(v21 - 4);
            v30[1] = v25;
            long long v26 = *(v21 - 1);
            v30[2] = *(v21 - 2);
            _OWORD v30[3] = v26;
            double result = v24(v31, v30);
            v20 -= 64;
            if ((result & 1) == 0)
            {
              long long v27 = (_OWORD *)((char *)v6 + v20 + 64);
              goto LABEL_10;
            }
          }
          long long v27 = v6;
LABEL_10:
          long long v28 = v33;
          _OWORD *v27 = v32;
          v27[1] = v28;
          long long v29 = v35;
          v27[2] = v34;
          v27[3] = v29;
        }
        uint64_t v7 = v10 + 4;
        v9 += 64;
      }
      while (v10 + 4 != a2);
    }
  }
  return result;
}

uint64_t sub_1001673D4(uint64_t result, long long *a2, uint64_t (**a3)(void, void))
{
  if ((long long *)result != a2)
  {
    uint64_t v36 = v3;
    uint64_t v37 = v4;
    char v6 = (long long *)result;
    for (uint64_t i = (long long *)(result + 64); v6 + 4 != a2; uint64_t i = v6 + 4)
    {
      uint64_t v9 = v6;
      char v6 = i;
      uint64_t v10 = *a3;
      long long v11 = v6[1];
      v35[0] = *v6;
      v35[1] = v11;
      long long v12 = v6[3];
      v35[2] = v6[2];
      v35[3] = v12;
      long long v13 = v9[3];
      long long v15 = *v9;
      long long v14 = v9[1];
      v34[2] = v9[2];
      _OWORD v34[3] = v13;
      v34[0] = v15;
      v34[1] = v14;
      double result = v10(v35, v34);
      if (result)
      {
        long long v16 = v6[1];
        long long v30 = *v6;
        long long v31 = v16;
        long long v17 = v6[3];
        long long v32 = v6[2];
        long long v33 = v17;
        long long v18 = v6;
        do
        {
          long long v19 = v18 - 4;
          long long v20 = *(v18 - 3);
          long long *v18 = *(v18 - 4);
          v18[1] = v20;
          long long v21 = *(v18 - 1);
          void v18[2] = *(v18 - 2);
          void v18[3] = v21;
          long long v22 = *a3;
          v29[0] = v30;
          v29[1] = v31;
          v29[2] = v32;
          _OWORD v29[3] = v33;
          long long v23 = *(v18 - 8);
          long long v24 = *(v18 - 7);
          long long v25 = *(v18 - 5);
          v28[2] = *(v18 - 6);
          _OWORD v28[3] = v25;
          v28[0] = v23;
          v28[1] = v24;
          double result = v22(v29, v28);
          long long v18 = v19;
        }
        while ((result & 1) != 0);
        long long v26 = v31;
        *long long v19 = v30;
        v19[1] = v26;
        long long v27 = v33;
        v19[2] = v32;
        v19[3] = v27;
      }
    }
  }
  return result;
}

uint64_t sub_1001674E4(_OWORD *a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  uint64_t v8 = *a4;
  long long v9 = a2[1];
  v80[0] = *a2;
  v80[1] = v9;
  long long v10 = a2[3];
  v80[2] = a2[2];
  v80[3] = v10;
  long long v11 = a1[1];
  v79[0] = *a1;
  v79[1] = v11;
  long long v12 = a1[3];
  v79[2] = a1[2];
  v79[3] = v12;
  char v13 = v8(v80, v79);
  long long v14 = *a4;
  if (v13)
  {
    long long v15 = a3[1];
    v74[0] = *a3;
    v74[1] = v15;
    long long v16 = a3[3];
    v74[2] = a3[2];
    v74[3] = v16;
    long long v17 = a2[1];
    v73[0] = *a2;
    v73[1] = v17;
    long long v18 = a2[3];
    v73[2] = a2[2];
    v73[3] = v18;
    if (v14(v74, v73))
    {
      long long v20 = a1[2];
      long long v19 = a1[3];
      long long v22 = *a1;
      long long v21 = a1[1];
      long long v23 = a3[3];
      long long v25 = *a3;
      long long v24 = a3[1];
      a1[2] = a3[2];
      a1[3] = v23;
      *a1 = v25;
      a1[1] = v24;
      *a3 = v22;
      a3[1] = v21;
      uint64_t result = 1;
LABEL_9:
      a3[2] = v20;
      a3[3] = v19;
      return result;
    }
    long long v53 = a1[2];
    long long v52 = a1[3];
    long long v55 = *a1;
    long long v54 = a1[1];
    long long v56 = a2[3];
    long long v58 = *a2;
    long long v57 = a2[1];
    a1[2] = a2[2];
    a1[3] = v56;
    *a1 = v58;
    a1[1] = v57;
    *a2 = v55;
    a2[1] = v54;
    a2[2] = v53;
    a2[3] = v52;
    long long v59 = *a4;
    long long v60 = *a3;
    long long v61 = a3[1];
    long long v62 = a3[3];
    v72[2] = a3[2];
    v72[3] = v62;
    v72[0] = v60;
    v72[1] = v61;
    long long v63 = *a2;
    long long v64 = a2[1];
    long long v65 = a2[3];
    v71[2] = a2[2];
    v71[3] = v65;
    v71[0] = v63;
    v71[1] = v64;
    if (v59(v72, v71))
    {
      long long v20 = a2[2];
      long long v19 = a2[3];
      long long v67 = *a2;
      long long v66 = a2[1];
      long long v68 = a3[3];
      long long v70 = *a3;
      long long v69 = a3[1];
      a2[2] = a3[2];
      a2[3] = v68;
      *a2 = v70;
      a2[1] = v69;
      *a3 = v67;
      a3[1] = v66;
      uint64_t result = 2;
      goto LABEL_9;
    }
  }
  else
  {
    long long v27 = a3[1];
    v78[0] = *a3;
    v78[1] = v27;
    long long v28 = a3[3];
    v78[2] = a3[2];
    v78[3] = v28;
    long long v29 = a2[1];
    v77[0] = *a2;
    v77[1] = v29;
    long long v30 = a2[3];
    v77[2] = a2[2];
    v77[3] = v30;
    uint64_t result = ((uint64_t (*)(_OWORD *, _OWORD *))v14)(v78, v77);
    if (!result) {
      return result;
    }
    long long v32 = a2[2];
    long long v31 = a2[3];
    long long v34 = *a2;
    long long v33 = a2[1];
    long long v35 = a3[3];
    long long v37 = *a3;
    long long v36 = a3[1];
    a2[2] = a3[2];
    a2[3] = v35;
    *a2 = v37;
    a2[1] = v36;
    *a3 = v34;
    a3[1] = v33;
    a3[2] = v32;
    a3[3] = v31;
    uint64_t v38 = *a4;
    long long v39 = *a2;
    long long v40 = a2[1];
    long long v41 = a2[3];
    v76[2] = a2[2];
    v76[3] = v41;
    v76[0] = v39;
    v76[1] = v40;
    long long v42 = *a1;
    long long v43 = a1[1];
    long long v44 = a1[3];
    v75[2] = a1[2];
    v75[3] = v44;
    v75[0] = v42;
    v75[1] = v43;
    if (v38(v76, v75))
    {
      long long v46 = a1[2];
      long long v45 = a1[3];
      long long v48 = *a1;
      long long v47 = a1[1];
      long long v49 = a2[3];
      long long v51 = *a2;
      long long v50 = a2[1];
      a1[2] = a2[2];
      a1[3] = v49;
      *a1 = v51;
      a1[1] = v50;
      *a2 = v48;
      a2[1] = v47;
      uint64_t result = 2;
      a2[2] = v46;
      a2[3] = v45;
      return result;
    }
  }
  return 1;
}

long long *sub_1001676E0(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v4 = a2;
  long long v6 = a1[1];
  long long v66 = *a1;
  long long v67 = v6;
  long long v7 = a1[3];
  long long v68 = a1[2];
  long long v69 = v7;
  uint64_t v8 = *a3;
  v65[0] = v66;
  v65[1] = v6;
  v65[2] = v68;
  v65[3] = v7;
  long long v9 = *(a2 - 4);
  long long v10 = *(a2 - 3);
  long long v11 = *(a2 - 1);
  v64[2] = *(a2 - 2);
  v64[3] = v11;
  v64[0] = v9;
  v64[1] = v10;
  if (v8(v65, v64))
  {
    long long v12 = a1;
    do
    {
      char v13 = v12 + 4;
      long long v14 = *a3;
      v63[0] = v66;
      v63[1] = v67;
      v63[2] = v68;
      v63[3] = v69;
      long long v15 = v12[5];
      v62[0] = v12[4];
      v62[1] = v15;
      long long v16 = v12[7];
      v62[2] = v12[6];
      v62[3] = v16;
      char v17 = v14(v63, v62);
      long long v12 = v13;
    }
    while ((v17 & 1) == 0);
  }
  else
  {
    long long v18 = a1 + 4;
    do
    {
      char v13 = v18;
      if (v18 >= v4) {
        break;
      }
      long long v19 = *a3;
      v61[0] = v66;
      v61[1] = v67;
      v61[2] = v68;
      v61[3] = v69;
      long long v20 = v13[1];
      v60[0] = *v13;
      v60[1] = v20;
      long long v21 = v13[3];
      v60[2] = v13[2];
      v60[3] = v21;
      int v22 = v19(v61, v60);
      long long v18 = v13 + 4;
    }
    while (!v22);
  }
  if (v13 >= v4)
  {
    long long v23 = v4;
  }
  else
  {
    do
    {
      long long v23 = v4 - 4;
      long long v24 = *a3;
      v59[0] = v66;
      v59[1] = v67;
      v59[2] = v68;
      _OWORD v59[3] = v69;
      long long v25 = *(v4 - 3);
      v58[0] = *(v4 - 4);
      v58[1] = v25;
      long long v26 = *(v4 - 1);
      v58[2] = *(v4 - 2);
      _OWORD v58[3] = v26;
      v4 -= 4;
    }
    while ((v24(v59, v58) & 1) != 0);
  }
  while (v13 < v23)
  {
    long long v27 = *v13;
    long long v28 = v13[1];
    long long v29 = v13[3];
    long long v72 = v13[2];
    long long v73 = v29;
    long long v70 = v27;
    long long v71 = v28;
    long long v30 = *v23;
    long long v31 = v23[1];
    long long v32 = v23[3];
    long long v13[2] = v23[2];
    v13[3] = v32;
    *char v13 = v30;
    v13[1] = v31;
    long long v33 = v70;
    long long v34 = v71;
    long long v35 = v73;
    v23[2] = v72;
    _OWORD v23[3] = v35;
    *long long v23 = v33;
    v23[1] = v34;
    do
    {
      v57[0] = v66;
      v57[1] = v67;
      v57[2] = v68;
      _OWORD v57[3] = v69;
      long long v36 = v13[6];
      long long v37 = v13[7];
      long long v39 = v13[4];
      long long v38 = v13[5];
      v13 += 4;
      long long v40 = (unsigned int (*)(void, void))*a3;
      v56[2] = v36;
      _OWORD v56[3] = v37;
      v56[0] = v39;
      v56[1] = v38;
    }
    while (!v40(v57, v56));
    do
    {
      v55[0] = v66;
      v55[1] = v67;
      v55[2] = v68;
      _OWORD v55[3] = v69;
      long long v41 = *(v23 - 2);
      long long v42 = *(v23 - 1);
      long long v44 = *(v23 - 4);
      long long v43 = *(v23 - 3);
      v23 -= 4;
      long long v45 = *a3;
      v54[2] = v41;
      _OWORD v54[3] = v42;
      v54[0] = v44;
      v54[1] = v43;
    }
    while ((v45(v55, v54) & 1) != 0);
  }
  long long v46 = v13 - 4;
  if (v13 - 4 != a1)
  {
    long long v47 = *v46;
    long long v48 = *(v13 - 3);
    long long v49 = *(v13 - 1);
    a1[2] = *(v13 - 2);
    a1[3] = v49;
    *a1 = v47;
    a1[1] = v48;
  }
  long long v50 = v66;
  long long v51 = v67;
  long long v52 = v69;
  *(v13 - 2) = v68;
  *(v13 - 1) = v52;
  long long *v46 = v50;
  *(v13 - 3) = v51;
  return v13;
}

long long *sub_100167908(long long *a1, long long *a2, uint64_t (**a3)(void, void))
{
  uint64_t v6 = 0;
  long long v7 = a1[1];
  long long v57 = *a1;
  long long v58 = v7;
  long long v8 = a1[3];
  long long v59 = a1[2];
  long long v60 = v8;
  do
  {
    long long v9 = *a3;
    long long v10 = a1[v6 + 5];
    v56[0] = a1[v6 + 4];
    v56[1] = v10;
    long long v11 = a1[v6 + 7];
    v56[2] = a1[v6 + 6];
    _OWORD v56[3] = v11;
    v55[0] = v57;
    v55[1] = v58;
    v55[2] = v59;
    _OWORD v55[3] = v60;
    v6 += 4;
  }
  while ((v9(v56, v55) & 1) != 0);
  long long v12 = &a1[v6];
  char v13 = &a1[v6 - 4];
  if (v6 == 4)
  {
    while (v12 < a2)
    {
      long long v18 = *a3;
      long long v14 = a2 - 4;
      long long v19 = *(a2 - 3);
      v54[0] = *(a2 - 4);
      v54[1] = v19;
      long long v20 = *(a2 - 1);
      v54[2] = *(a2 - 2);
      _OWORD v54[3] = v20;
      v53[0] = v57;
      v53[1] = v58;
      v53[2] = v59;
      _OWORD v53[3] = v60;
      a2 -= 4;
      if (v18(v54, v53)) {
        goto LABEL_9;
      }
    }
    long long v14 = a2;
  }
  else
  {
    do
    {
      long long v14 = a2 - 4;
      long long v15 = (unsigned int (*)(void, void))*a3;
      long long v16 = *(a2 - 3);
      v52[0] = *(a2 - 4);
      v52[1] = v16;
      long long v17 = *(a2 - 1);
      v52[2] = *(a2 - 2);
      _OWORD v52[3] = v17;
      v51[0] = v57;
      v51[1] = v58;
      v51[2] = v59;
      _OWORD v51[3] = v60;
      a2 -= 4;
    }
    while (!v15(v52, v51));
  }
LABEL_9:
  if (v12 < v14)
  {
    long long v21 = v12;
    int v22 = v14;
    do
    {
      long long v24 = v21[1];
      long long v61 = *v21;
      long long v23 = v61;
      long long v62 = v24;
      long long v26 = v21[3];
      long long v63 = v21[2];
      long long v25 = v63;
      long long v64 = v26;
      long long v28 = v22[2];
      long long v27 = v22[3];
      long long v29 = v22[1];
      long long *v21 = *v22;
      v21[1] = v29;
      v21[2] = v28;
      _OWORD v21[3] = v27;
      v22[2] = v25;
      v22[3] = v26;
      *int v22 = v23;
      v22[1] = v24;
      do
      {
        long long v30 = v21[6];
        long long v31 = v21[7];
        long long v33 = v21[4];
        long long v32 = v21[5];
        v21 += 4;
        long long v34 = *a3;
        v50[2] = v30;
        _OWORD v50[3] = v31;
        v50[0] = v33;
        v50[1] = v32;
        v49[0] = v57;
        v49[1] = v58;
        v49[2] = v59;
        _OWORD v49[3] = v60;
      }
      while ((v34(v50, v49) & 1) != 0);
      do
      {
        long long v35 = *(v22 - 2);
        long long v36 = *(v22 - 1);
        long long v38 = *(v22 - 4);
        long long v37 = *(v22 - 3);
        v22 -= 4;
        long long v39 = (unsigned int (*)(void, void))*a3;
        v48[2] = v35;
        _OWORD v48[3] = v36;
        v48[0] = v38;
        v48[1] = v37;
        v47[0] = v57;
        v47[1] = v58;
        v47[2] = v59;
        _OWORD v47[3] = v60;
      }
      while (!v39(v48, v47));
    }
    while (v21 < v22);
    char v13 = v21 - 4;
  }
  if (v13 != a1)
  {
    long long v40 = *v13;
    long long v41 = v13[1];
    long long v42 = v13[3];
    a1[2] = v13[2];
    a1[3] = v42;
    *a1 = v40;
    a1[1] = v41;
  }
  long long v43 = v57;
  long long v44 = v58;
  long long v45 = v60;
  long long v13[2] = v59;
  v13[3] = v45;
  *char v13 = v43;
  v13[1] = v44;
  return v13;
}

BOOL sub_100167B18(uint64_t a1, __n128 *a2, unsigned int (**a3)(void, void))
{
  uint64_t v6 = ((uint64_t)a2 - a1) >> 6;
  BOOL result = 1;
  switch(v6)
  {
    case 0:
    case 1:
      return result;
    case 2:
      long long v8 = *a3;
      __n128 v9 = a2[-3];
      v52[0] = a2[-4];
      v52[1] = v9;
      __n128 v10 = a2[-1];
      v52[2] = a2[-2];
      _OWORD v52[3] = v10;
      long long v11 = *(_OWORD *)(a1 + 16);
      v51[0] = *(_OWORD *)a1;
      v51[1] = v11;
      long long v12 = *(_OWORD *)(a1 + 48);
      v51[2] = *(_OWORD *)(a1 + 32);
      _OWORD v51[3] = v12;
      if (!v8(v52, v51)) {
        return 1;
      }
      char v13 = a2 - 4;
      __n128 v15 = *(__n128 *)(a1 + 32);
      __n128 v14 = *(__n128 *)(a1 + 48);
      __n128 v17 = *(__n128 *)a1;
      __n128 v16 = *(__n128 *)(a1 + 16);
      __n128 v18 = a2[-1];
      __n128 v20 = a2[-4];
      __n128 v19 = a2[-3];
      *(__n128 *)(a1 + 32) = a2[-2];
      *(__n128 *)(a1 + 48) = v18;
      *(__n128 *)a1 = v20;
      *(__n128 *)(a1 + 16) = v19;
      *char v13 = v17;
      v13[1] = v16;
      BOOL result = 1;
      long long v13[2] = v15;
      v13[3] = v14;
      return result;
    case 3:
      sub_1001674E4((_OWORD *)a1, (_OWORD *)(a1 + 64), (__n128 *)a2[-4].n128_u64, a3);
      return 1;
    case 4:
      sub_100167D80((__n128 *)a1, (__n128 *)(a1 + 64), (__n128 *)(a1 + 128), a2 - 4, a3);
      return 1;
    case 5:
      sub_100167ECC(a1, (__n128 *)(a1 + 64), (__n128 *)(a1 + 128), (__n128 *)(a1 + 192), a2 - 4, a3);
      return 1;
    default:
      long long v21 = (__n128 *)(a1 + 128);
      sub_1001674E4((_OWORD *)a1, (_OWORD *)(a1 + 64), (_OWORD *)(a1 + 128), a3);
      int v22 = (__n128 *)(a1 + 192);
      if ((__n128 *)(a1 + 192) == a2) {
        return 1;
      }
      uint64_t v23 = 0;
      int v24 = 0;
      break;
  }
  while (1)
  {
    long long v25 = *a3;
    __n128 v26 = v22[1];
    v50[0] = *v22;
    v50[1] = v26;
    __n128 v27 = v22[3];
    v50[2] = v22[2];
    _OWORD v50[3] = v27;
    __n128 v28 = v21[3];
    __n128 v30 = *v21;
    __n128 v29 = v21[1];
    v49[2] = v21[2];
    _OWORD v49[3] = v28;
    v49[0] = v30;
    v49[1] = v29;
    if (v25(v50, v49))
    {
      __n128 v31 = v22[1];
      __n128 v45 = *v22;
      __n128 v46 = v31;
      __n128 v32 = v22[3];
      __n128 v47 = v22[2];
      __n128 v48 = v32;
      uint64_t v33 = v23;
      while (1)
      {
        long long v34 = (_OWORD *)(a1 + v33);
        long long v35 = *(_OWORD *)(a1 + v33 + 144);
        v34[12] = *(_OWORD *)(a1 + v33 + 128);
        v34[13] = v35;
        long long v36 = *(_OWORD *)(a1 + v33 + 176);
        v34[14] = *(_OWORD *)(a1 + v33 + 160);
        v34[15] = v36;
        if (v33 == -128) {
          break;
        }
        long long v37 = *a3;
        v44[0] = v45;
        v44[1] = v46;
        v44[2] = v47;
        _OWORD v44[3] = v48;
        long long v38 = v34[5];
        v43[0] = v34[4];
        v43[1] = v38;
        long long v39 = v34[7];
        v43[2] = v34[6];
        _OWORD v43[3] = v39;
        v33 -= 64;
        if ((((uint64_t (*)(_OWORD *, _OWORD *))v37)(v44, v43) & 1) == 0)
        {
          long long v40 = (_OWORD *)(a1 + v33 + 192);
          goto LABEL_12;
        }
      }
      long long v40 = (_OWORD *)a1;
LABEL_12:
      __n128 v41 = v46;
      *long long v40 = v45;
      v40[1] = v41;
      __n128 v42 = v48;
      v40[2] = v47;
      _OWORD v40[3] = v42;
      if (++v24 == 8) {
        return &v22[4] == a2;
      }
    }
    long long v21 = v22;
    v23 += 64;
    v22 += 4;
    if (v22 == a2) {
      return 1;
    }
  }
}

__n128 sub_100167D80(__n128 *a1, __n128 *a2, __n128 *a3, __n128 *a4, unsigned int (**a5)(void, void))
{
  sub_1001674E4(a1, a2, a3, a5);
  __n128 v10 = *a5;
  __n128 v11 = a4[1];
  v55[0] = *a4;
  v55[1] = v11;
  __n128 v12 = a4[3];
  v55[2] = a4[2];
  _OWORD v55[3] = v12;
  __n128 v13 = a3[1];
  v54[0] = *a3;
  v54[1] = v13;
  __n128 v14 = a3[3];
  v54[2] = a3[2];
  _OWORD v54[3] = v14;
  if (v10(v55, v54))
  {
    __n128 v17 = a3[2];
    __n128 v16 = a3[3];
    __n128 v19 = *a3;
    __n128 v18 = a3[1];
    __n128 v20 = a4[3];
    __n128 v22 = *a4;
    __n128 v21 = a4[1];
    a3[2] = a4[2];
    a3[3] = v20;
    *a3 = v22;
    a3[1] = v21;
    *a4 = v19;
    a4[1] = v18;
    a4[2] = v17;
    a4[3] = v16;
    uint64_t v23 = *a5;
    __n128 v24 = *a3;
    __n128 v25 = a3[1];
    __n128 v26 = a3[3];
    v53[2] = a3[2];
    _OWORD v53[3] = v26;
    v53[0] = v24;
    v53[1] = v25;
    __n128 v27 = *a2;
    __n128 v28 = a2[1];
    __n128 v29 = a2[3];
    v52[2] = a2[2];
    _OWORD v52[3] = v29;
    v52[0] = v27;
    v52[1] = v28;
    if (v23(v53, v52))
    {
      __n128 v31 = a2[2];
      __n128 v30 = a2[3];
      __n128 v33 = *a2;
      __n128 v32 = a2[1];
      __n128 v34 = a3[3];
      __n128 v36 = *a3;
      __n128 v35 = a3[1];
      a2[2] = a3[2];
      a2[3] = v34;
      *a2 = v36;
      a2[1] = v35;
      *a3 = v33;
      a3[1] = v32;
      a3[2] = v31;
      a3[3] = v30;
      long long v37 = *a5;
      __n128 v38 = *a2;
      __n128 v39 = a2[1];
      __n128 v40 = a2[3];
      v51[2] = a2[2];
      _OWORD v51[3] = v40;
      v51[0] = v38;
      v51[1] = v39;
      __n128 v41 = *a1;
      __n128 v42 = a1[1];
      __n128 v43 = a1[3];
      v50[2] = a1[2];
      _OWORD v50[3] = v43;
      v50[0] = v41;
      v50[1] = v42;
      if (v37(v51, v50))
      {
        __n128 v44 = a1[2];
        __n128 result = a1[3];
        __n128 v46 = *a1;
        __n128 v45 = a1[1];
        __n128 v47 = a2[3];
        __n128 v49 = *a2;
        __n128 v48 = a2[1];
        a1[2] = a2[2];
        a1[3] = v47;
        *a1 = v49;
        a1[1] = v48;
        *a2 = v46;
        a2[1] = v45;
        a2[2] = v44;
        a2[3] = result;
      }
    }
  }
  return result;
}

__n128 sub_100167ECC(uint64_t a1, __n128 *a2, __n128 *a3, __n128 *a4, __n128 *a5, unsigned int (**a6)(void, void))
{
  sub_100167D80((__n128 *)a1, a2, a3, a4, a6);
  __n128 v12 = *a6;
  __n128 v13 = a5[1];
  v73[0] = *a5;
  v73[1] = v13;
  __n128 v14 = a5[3];
  v73[2] = a5[2];
  v73[3] = v14;
  __n128 v15 = a4[1];
  v72[0] = *a4;
  v72[1] = v15;
  __n128 v16 = a4[3];
  v72[2] = a4[2];
  v72[3] = v16;
  if (v12(v73, v72))
  {
    __n128 v19 = a4[2];
    __n128 v18 = a4[3];
    __n128 v21 = *a4;
    __n128 v20 = a4[1];
    __n128 v22 = a5[3];
    __n128 v24 = *a5;
    __n128 v23 = a5[1];
    a4[2] = a5[2];
    a4[3] = v22;
    *a4 = v24;
    a4[1] = v23;
    *a5 = v21;
    a5[1] = v20;
    a5[2] = v19;
    a5[3] = v18;
    __n128 v25 = *a6;
    __n128 v26 = *a4;
    __n128 v27 = a4[1];
    __n128 v28 = a4[3];
    v71[2] = a4[2];
    v71[3] = v28;
    v71[0] = v26;
    v71[1] = v27;
    __n128 v29 = *a3;
    __n128 v30 = a3[1];
    __n128 v31 = a3[3];
    v70[2] = a3[2];
    v70[3] = v31;
    v70[0] = v29;
    v70[1] = v30;
    if (v25(v71, v70))
    {
      __n128 v33 = a3[2];
      __n128 v32 = a3[3];
      __n128 v35 = *a3;
      __n128 v34 = a3[1];
      __n128 v36 = a4[3];
      __n128 v38 = *a4;
      __n128 v37 = a4[1];
      a3[2] = a4[2];
      a3[3] = v36;
      *a3 = v38;
      a3[1] = v37;
      *a4 = v35;
      a4[1] = v34;
      a4[2] = v33;
      a4[3] = v32;
      __n128 v39 = *a6;
      __n128 v40 = *a3;
      __n128 v41 = a3[1];
      __n128 v42 = a3[3];
      v69[2] = a3[2];
      v69[3] = v42;
      v69[0] = v40;
      v69[1] = v41;
      __n128 v43 = *a2;
      __n128 v44 = a2[1];
      __n128 v45 = a2[3];
      v68[2] = a2[2];
      v68[3] = v45;
      v68[0] = v43;
      v68[1] = v44;
      if (v39(v69, v68))
      {
        __n128 v47 = a2[2];
        __n128 v46 = a2[3];
        __n128 v49 = *a2;
        __n128 v48 = a2[1];
        __n128 v50 = a3[3];
        __n128 v52 = *a3;
        __n128 v51 = a3[1];
        a2[2] = a3[2];
        a2[3] = v50;
        *a2 = v52;
        a2[1] = v51;
        *a3 = v49;
        a3[1] = v48;
        a3[2] = v47;
        a3[3] = v46;
        long long v53 = *a6;
        __n128 v54 = *a2;
        __n128 v55 = a2[1];
        __n128 v56 = a2[3];
        v67[2] = a2[2];
        v67[3] = v56;
        v67[0] = v54;
        v67[1] = v55;
        __n128 v57 = *(__n128 *)a1;
        long long v58 = *(_OWORD *)(a1 + 16);
        long long v59 = *(_OWORD *)(a1 + 48);
        v66[2] = *(_OWORD *)(a1 + 32);
        v66[3] = v59;
        v66[0] = v57;
        v66[1] = v58;
        if (v53(v67, v66))
        {
          __n128 v60 = *(__n128 *)(a1 + 32);
          __n128 result = *(__n128 *)(a1 + 48);
          __n128 v62 = *(__n128 *)a1;
          __n128 v61 = *(__n128 *)(a1 + 16);
          __n128 v63 = a2[3];
          __n128 v65 = *a2;
          __n128 v64 = a2[1];
          *(__n128 *)(a1 + 32) = a2[2];
          *(__n128 *)(a1 + 48) = v63;
          *(__n128 *)a1 = v65;
          *(__n128 *)(a1 + 16) = v64;
          *a2 = v62;
          a2[1] = v61;
          a2[2] = v60;
          a2[3] = result;
        }
      }
    }
  }
  return result;
}

_OWORD *sub_100168078(uint64_t a1, _OWORD *a2, _OWORD *a3, unsigned int (**a4)(void, void))
{
  if ((_OWORD *)a1 != a2)
  {
    uint64_t v8 = (uint64_t)a2 - a1;
    uint64_t v9 = ((uint64_t)a2 - a1) >> 6;
    if ((uint64_t)a2 - a1 >= 65)
    {
      unint64_t v10 = (unint64_t)(v9 - 2) >> 1;
      unint64_t v11 = v10 + 1;
      __n128 v12 = (__n128 *)(a1 + (v10 << 6));
      do
      {
        sub_10016823C(a1, a4, v9, v12);
        v12 -= 4;
        --v11;
      }
      while (v11);
    }
    __n128 v13 = a2;
    if (a2 != a3)
    {
      __n128 v14 = a2;
      do
      {
        __n128 v15 = (unsigned int (*)(_OWORD *, _OWORD *))*a4;
        long long v16 = v14[1];
        v42[0] = *v14;
        v42[1] = v16;
        long long v17 = v14[3];
        v42[2] = v14[2];
        _OWORD v42[3] = v17;
        long long v18 = *(_OWORD *)(a1 + 16);
        v41[0] = *(_OWORD *)a1;
        v41[1] = v18;
        long long v19 = *(_OWORD *)(a1 + 48);
        double v41[2] = *(_OWORD *)(a1 + 32);
        _OWORD v41[3] = v19;
        if (v15(v42, v41))
        {
          long long v21 = v14[2];
          long long v20 = v14[3];
          long long v23 = *v14;
          long long v22 = v14[1];
          long long v24 = *(_OWORD *)(a1 + 48);
          long long v26 = *(_OWORD *)a1;
          long long v25 = *(_OWORD *)(a1 + 16);
          v14[2] = *(_OWORD *)(a1 + 32);
          v14[3] = v24;
          *__n128 v14 = v26;
          v14[1] = v25;
          *(_OWORD *)a1 = v23;
          *(_OWORD *)(a1 + 16) = v22;
          *(_OWORD *)(a1 + 32) = v21;
          *(_OWORD *)(a1 + 48) = v20;
          sub_10016823C(a1, a4, v9, (__n128 *)a1);
        }
        v14 += 4;
      }
      while (v14 != a3);
      __n128 v13 = a3;
    }
    if (v8 >= 65)
    {
      uint64_t v27 = (unint64_t)v8 >> 6;
      __n128 v28 = (__n128 *)(a2 - 4);
      do
      {
        __n128 v29 = *(__n128 *)(a1 + 16);
        __n128 v43 = *(__n128 *)a1;
        __n128 v44 = v29;
        __n128 v30 = *(__n128 *)(a1 + 48);
        __n128 v45 = *(__n128 *)(a1 + 32);
        __n128 v46 = v30;
        __n128 v31 = (__n128 *)sub_10016840C((_OWORD *)a1, (unsigned int (**)(_OWORD *, _OWORD *))a4, v27);
        if (v28 == v31)
        {
          __n128 v37 = v44;
          *__n128 v31 = v43;
          v31[1] = v37;
          __n128 v38 = v46;
          v31[2] = v45;
          v31[3] = v38;
        }
        else
        {
          __n128 v32 = *v28;
          __n128 v33 = v28[1];
          __n128 v34 = v28[3];
          v31[2] = v28[2];
          v31[3] = v34;
          *__n128 v31 = v32;
          v31[1] = v33;
          __n128 v35 = v44;
          *__n128 v28 = v43;
          v28[1] = v35;
          __n128 v36 = v46;
          v28[2] = v45;
          _OWORD v28[3] = v36;
          sub_1001684EC(a1, (uint64_t)&v31[4], a4, ((uint64_t)&v31[4] - a1) >> 6);
        }
        v28 -= 4;
      }
      while (v27-- > 2);
    }
    return v13;
  }
  return a3;
}

__n128 sub_10016823C(uint64_t a1, unsigned int (**a2)(void, void), uint64_t a3, __n128 *a4)
{
  unint64_t v6 = a3 - 2;
  if (a3 >= 2)
  {
    uint64_t v56 = v4;
    uint64_t v57 = v5;
    long long v7 = a4;
    int64_t v9 = v6 >> 1;
    if ((uint64_t)(v6 >> 1) >= ((uint64_t)a4 - a1) >> 6)
    {
      uint64_t v12 = ((uint64_t)a4 - a1) >> 5;
      uint64_t v13 = v12 + 1;
      __n128 v14 = (__n128 *)(a1 + ((v12 + 1) << 6));
      uint64_t v15 = v12 + 2;
      if (v12 + 2 < a3)
      {
        long long v16 = *a2;
        __n128 v17 = v14[1];
        v55[0] = *v14;
        v55[1] = v17;
        __n128 v18 = v14[3];
        v55[2] = v14[2];
        _OWORD v55[3] = v18;
        __n128 v19 = v14[5];
        v54[0] = v14[4];
        v54[1] = v19;
        __n128 v20 = v14[7];
        v54[2] = v14[6];
        _OWORD v54[3] = v20;
        if (v16(v55, v54))
        {
          v14 += 4;
          uint64_t v13 = v15;
        }
      }
      long long v21 = *a2;
      __n128 v22 = v14[1];
      v53[0] = *v14;
      v53[1] = v22;
      __n128 v23 = v14[3];
      v53[2] = v14[2];
      _OWORD v53[3] = v23;
      __n128 v24 = v7[1];
      v52[0] = *v7;
      v52[1] = v24;
      __n128 v25 = v7[3];
      v52[2] = v7[2];
      _OWORD v52[3] = v25;
      if ((((uint64_t (*)(_OWORD *, _OWORD *))v21)(v53, v52) & 1) == 0)
      {
        __n128 v27 = v7[1];
        __n128 v48 = *v7;
        __n128 v49 = v27;
        __n128 v28 = v7[3];
        __n128 v50 = v7[2];
        __n128 v51 = v28;
        do
        {
          __n128 v29 = v14;
          __n128 v30 = *v14;
          __n128 v31 = v14[1];
          __n128 v32 = v14[3];
          v7[2] = v14[2];
          v7[3] = v32;
          __n128 *v7 = v30;
          v7[1] = v31;
          if (v9 < v13) {
            break;
          }
          uint64_t v33 = (2 * v13) | 1;
          __n128 v14 = (__n128 *)(a1 + (v33 << 6));
          if (2 * v13 + 2 < a3)
          {
            __n128 v34 = *a2;
            __n128 v35 = v14[1];
            v47[0] = *v14;
            v47[1] = v35;
            __n128 v36 = v14[3];
            v47[2] = v14[2];
            _OWORD v47[3] = v36;
            __n128 v37 = v14[5];
            v46[0] = v14[4];
            v46[1] = v37;
            __n128 v38 = v14[7];
            v46[2] = v14[6];
            _OWORD v46[3] = v38;
            if (v34(v47, v46))
            {
              v14 += 4;
              uint64_t v33 = 2 * v13 + 2;
            }
          }
          __n128 v39 = *a2;
          __n128 v40 = v14[1];
          v45[0] = *v14;
          v45[1] = v40;
          __n128 v41 = v14[3];
          v45[2] = v14[2];
          _OWORD v45[3] = v41;
          v44[0] = v48;
          v44[1] = v49;
          v44[2] = v50;
          _OWORD v44[3] = v51;
          long long v7 = v29;
          uint64_t v13 = v33;
        }
        while (!v39(v45, v44));
        __n128 result = v48;
        __n128 v42 = v49;
        __n128 v43 = v51;
        v29[2] = v50;
        _OWORD v29[3] = v43;
        __n128 *v29 = result;
        v29[1] = v42;
      }
    }
  }
  return result;
}

_OWORD *sub_10016840C(_OWORD *a1, unsigned int (**a2)(_OWORD *, _OWORD *), uint64_t a3)
{
  uint64_t v6 = 0;
  uint64_t v7 = a3 - 2;
  if (a3 < 2) {
    uint64_t v7 = a3 - 1;
  }
  uint64_t v8 = v7 >> 1;
  do
  {
    int64_t v9 = &a1[4 * v6 + 4];
    uint64_t v10 = (2 * v6) | 1;
    uint64_t v11 = 2 * v6 + 2;
    if (v11 < a3)
    {
      uint64_t v12 = *a2;
      long long v13 = v9[3];
      long long v15 = *v9;
      long long v14 = v9[1];
      id v24[2] = v9[2];
      _OWORD v24[3] = v13;
      v24[0] = v15;
      v24[1] = v14;
      long long v16 = v9[7];
      long long v18 = v9[4];
      long long v17 = v9[5];
      v23[2] = v9[6];
      _OWORD v23[3] = v16;
      v23[0] = v18;
      v23[1] = v17;
      if (v12(v24, v23))
      {
        v9 += 4;
        uint64_t v10 = v11;
      }
    }
    long long v19 = *v9;
    long long v20 = v9[1];
    long long v21 = v9[3];
    a1[2] = v9[2];
    a1[3] = v21;
    *a1 = v19;
    a1[1] = v20;
    a1 = v9;
    uint64_t v6 = v10;
  }
  while (v10 <= v8);
  return v9;
}

double sub_1001684EC(uint64_t a1, uint64_t a2, unsigned int (**a3)(void, void), uint64_t a4)
{
  unint64_t v6 = a4 - 2;
  if (a4 >= 2)
  {
    uint64_t v39 = v4;
    uint64_t v40 = v5;
    uint64_t v10 = *a3;
    unint64_t v11 = v6 >> 1;
    uint64_t v12 = (_OWORD *)(a1 + (v6 >> 1 << 6));
    long long v13 = v12[1];
    v38[0] = *v12;
    v38[1] = v13;
    long long v14 = v12[3];
    id v38[2] = v12[2];
    _OWORD v38[3] = v14;
    long long v15 = *(_OWORD *)(a2 - 48);
    v37[0] = *(_OWORD *)(a2 - 64);
    v37[1] = v15;
    long long v16 = *(_OWORD *)(a2 - 16);
    v37[2] = *(_OWORD *)(a2 - 32);
    _OWORD v37[3] = v16;
    if (v10(v38, v37))
    {
      long long v18 = (_OWORD *)(a2 - 64);
      long long v19 = *(_OWORD *)(a2 - 48);
      long long v33 = *(_OWORD *)(a2 - 64);
      long long v34 = v19;
      long long v20 = *(_OWORD *)(a2 - 16);
      long long v35 = *(_OWORD *)(a2 - 32);
      long long v36 = v20;
      do
      {
        long long v21 = v12;
        long long v22 = *v12;
        long long v23 = v12[1];
        long long v24 = v12[3];
        void v18[2] = v12[2];
        void v18[3] = v24;
        _OWORD *v18 = v22;
        v18[1] = v23;
        if (!v11) {
          break;
        }
        __n128 v25 = *a3;
        unint64_t v11 = (v11 - 1) >> 1;
        uint64_t v12 = (_OWORD *)(a1 + (v11 << 6));
        long long v26 = v12[1];
        v32[0] = *v12;
        v32[1] = v26;
        long long v27 = v12[3];
        _OWORD v32[2] = v12[2];
        v32[3] = v27;
        v31[0] = v33;
        v31[1] = v34;
        v31[2] = v35;
        v31[3] = v36;
        char v28 = v25(v32, v31);
        long long v18 = v21;
      }
      while ((v28 & 1) != 0);
      long long v29 = v34;
      _OWORD *v21 = v33;
      v21[1] = v29;
      double result = *(double *)&v35;
      long long v30 = v36;
      v21[2] = v35;
      _OWORD v21[3] = v30;
    }
  }
  return result;
}

void *sub_1001685F4(uint64_t a1, unint64_t a2)
{
  if (a2 >> 59) {
    sub_1001657C0();
  }
  return operator new(32 * a2);
}

void *sub_10016862C(uint64_t a1, unint64_t a2)
{
  if (a2 >> 61) {
    sub_1001657C0();
  }
  return operator new(8 * a2);
}

void sub_1001686B8(id a1)
{
  uint64_t v1 = +[NSMutableSet set];
  double v2 = (void *)qword_100B4A500;
  qword_100B4A500 = v1;
}

void sub_10016A1AC(uint64_t a1)
{
  double v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  CFStringRef v4 = *(const __CFString **)(a1 + 48);
  if (!v4) {
    CFStringRef v4 = &stru_100A70340;
  }
  CFStringRef v17 = @"buyParams";
  CFStringRef v18 = v4;
  uint64_t v5 = +[NSDictionary dictionaryWithObjects:&v18 forKeys:&v17 count:1];
  [v2 _recordMetricsForBuyButtonWithAssetID:v3 actionDetails:v5 offerType:*(void *)(a1 + 56)];

  if (*(void *)(a1 + 48)) {
    CFStringRef v6 = *(const __CFString **)(a1 + 48);
  }
  else {
    CFStringRef v6 = &stru_100A70340;
  }
  uint64_t v7 = +[NSMutableString stringWithString:v6];
  uint64_t v8 = dispatch_get_global_queue(2, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016A36C;
  block[3] = &unk_100A45BD8;
  id v11 = *(id *)(a1 + 40);
  id v12 = v7;
  id v13 = *(id *)(a1 + 64);
  id v14 = *(id *)(a1 + 72);
  id v15 = *(id *)(a1 + 80);
  id v16 = *(id *)(a1 + 88);
  id v9 = v7;
  dispatch_async(v8, block);
}

void sub_10016A36C(id *a1)
{
  double v2 = +[JSAApplication purchaseEventFieldsWithPageId:a1[4] pageType:@"AudiobookPreview" pageContext:0 topic:0];
  if ([a1[5] length] && objc_msgSend(v2, "length"))
  {
    if (([a1[5] hasSuffix:@"&"] & 1) == 0) {
      [a1[5] appendString:@"&"];
    }
    [a1[5] appendString:v2];
  }
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_10016A4D4;
  v3[3] = &unk_100A45BD8;
  id v4 = a1[5];
  id v5 = a1[4];
  id v6 = a1[6];
  id v7 = a1[7];
  id v8 = a1[8];
  id v9 = a1[9];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_10016A4D4(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) longLongValue]);
  id v4 = +[BLPurchaseRequest requestWithBuyParameters:v2 storeIdentifier:v3];

  [v4 setAudiobook:1];
  [v4 setSuppressNetworkEvaluatorDialogs:1];
  [v4 setAnalyticsInfo:*(void *)(a1 + 48)];
  id v5 = +[JSABridge sharedInstance];
  id v6 = [v5 windowManager];

  id v7 = +[BLDownloadQueue sharedInstance];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  v8[2] = sub_10016A648;
  v8[3] = &unk_100A46998;
  id v9 = *(id *)(a1 + 56);
  id v10 = *(id *)(a1 + 64);
  id v11 = *(id *)(a1 + 72);
  [v7 purchaseWithRequest:v4 uiManager:v6 completion:v8];
}

void sub_10016A648(id *a1, uint64_t a2, uint64_t a3, void *a4)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_10016A720;
  v6[3] = &unk_100A45980;
  id v7 = a4;
  id v8 = a1[4];
  id v9 = a1[5];
  id v10 = a1[6];
  id v5 = v7;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
}

void sub_10016A720(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v2 = objc_retainBlock(*(id *)(a1 + 56));
    if (v2)
    {
      id v5 = v2;
      (*((void (**)(id, void, void))v2 + 2))(v2, 0, *(void *)(a1 + 32));
      id v2 = v5;
    }
  }
  else
  {
    uint64_t v3 = *(void **)(a1 + 40);
    id v4 = [*(id *)(a1 + 48) _lockupProfile];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_10016A820;
    v6[3] = &unk_100A442B8;
    id v7 = *(id *)(a1 + 56);
    [v3 didPurchaseWithProductProfile:v4 completion:v6];
  }
}

void sub_10016A820(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, uint64_t, void))v1 + 2))(v1, 1, 0);
    id v1 = v2;
  }
}

void sub_10016ABDC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) imaxValueForKey:@"m_systemButtons"];
  uint64_t v28 = a1;
  uint64_t v3 = [*(id *)(a1 + 32) imaxValueForKey:@"m_extraButtons"];
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_30;
  }
  objc_opt_class();
  if ((objc_opt_isKindOfClass() & 1) == 0) {
    goto LABEL_30;
  }
  __n128 v25 = v3;
  +[NSMutableArray array];
  v27 = long long v26 = v2;
  long long v33 = 0u;
  long long v34 = 0u;
  long long v35 = 0u;
  long long v36 = 0u;
  id v4 = v2;
  id v5 = [v4 countByEnumeratingWithState:&v33 objects:v38 count:16];
  if (!v5) {
    goto LABEL_22;
  }
  id v6 = v5;
  uint64_t v7 = *(void *)v34;
  id v8 = &selRef_axHeading;
  do
  {
    for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v34 != v7) {
        objc_enumerationMutation(v4);
      }
      id v10 = *(void **)(*((void *)&v33 + 1) + 8 * i);
      if (objc_opt_respondsToSelector())
      {
        id v11 = (char *)[v10 action];
        if (v11 == "_accessibilitySpeak:" || v11 == v8[239])
        {
          id v13 = v11;
          [v10 setHidden:1];
          id v14 = [*(id *)(v28 + 32) imaxValueForKey:@"_accessibilitySystemShouldShowPauseBubble"];
          if ([v14 BOOLValue] && v13 == v8[239])
          {

LABEL_19:
            Class v17 = NSClassFromString(@"UICalloutBarButton");
            CFStringRef v18 = [v10 titleForState:0];
            long long v19 = [(objc_class *)v17 buttonWithTitle:v18 action:v13 type:5 inView:*(void *)(v28 + 32)];

            [v27 addObject:v19];
            id v8 = &selRef_axHeading;
            continue;
          }
          id v15 = [*(id *)(v28 + 32) imaxValueForKey:@"_accessibilitySystemShouldShowSpeakBubble"];
          unsigned int v16 = [v15 BOOLValue];

          id v8 = &selRef_axHeading;
          if (v13 == "_accessibilitySpeak:" && v16) {
            goto LABEL_19;
          }
        }
      }
    }
    id v6 = [v4 countByEnumeratingWithState:&v33 objects:v38 count:16];
  }
  while (v6);
LABEL_22:

  long long v31 = 0u;
  long long v32 = 0u;
  long long v29 = 0u;
  long long v30 = 0u;
  id v20 = v27;
  id v21 = [v20 countByEnumeratingWithState:&v29 objects:v37 count:16];
  uint64_t v3 = v25;
  if (v21)
  {
    id v22 = v21;
    uint64_t v23 = *(void *)v30;
    do
    {
      for (j = 0; j != v22; j = (char *)j + 1)
      {
        if (*(void *)v30 != v23) {
          objc_enumerationMutation(v20);
        }
        [v25 addObject:*(void *)(*((void *)&v29 + 1) + 8 * (void)j)];
      }
      id v22 = [v20 countByEnumeratingWithState:&v29 objects:v37 count:16];
    }
    while (v22);
  }

  id v2 = v26;
LABEL_30:
}

void sub_10016B014(uint64_t a1)
{
  UIAccessibilityNotifications v1 = IMAccessibilityMoveToElementNotification;
  id v2 = [*(id *)(a1 + 32) lastObject];
  UIAccessibilityPostNotification(v1, v2);
}

void sub_10016B6EC(id a1)
{
  uint64_t v1 = +[NSMutableDictionary dictionary];
  id v2 = (void *)qword_100B4A518;
  qword_100B4A518 = v1;
}

void sub_10016D370(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained q_pollStorageForMissingFilesWithGeneration:[*(id *)(a1 + 32) fetchGeneration]];
}

uint64_t sub_10016D4A0(uint64_t a1, void *a2)
{
  id v2 = *(void **)(a1 + 32);
  id v3 = a2;
  id v4 = [v2 fileManager];
  unsigned int v5 = [v4 fileExistsAtPath:v3];

  return v5 ^ 1;
}

void sub_10016D648(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_10016D65C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained q_pollStorageForMissingFilesWithGeneration:*(void *)(a1 + 40)];
}

void sub_10016DEF8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10016DF1C(uint64_t a1, void *a2)
{
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (v4) {
    [WeakRetained setTabIdentifierToShow:v4];
  }
  [WeakRetained _presentTheNextViewController];
}

void sub_10016EA24(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_10016EB4C(uint64_t a1)
{
  id v22 = +[NSMutableArray array];
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  long long v29 = 0u;
  uint64_t v25 = a1;
  id v2 = [*(id *)(a1 + 32) userInfo];
  id v3 = [v2 objectForKey:BKLibraryOwnershipAssetsKey];

  id v4 = [v3 countByEnumeratingWithState:&v26 objects:v30 count:16];
  if (v4)
  {
    id v5 = v4;
    char v6 = 0;
    uint64_t v24 = *(void *)v27;
    uint64_t v23 = BKLibraryOwnershipNewDatasourceKey;
    uint64_t v7 = BKLibraryOwnershipOldDatasourceKey;
    uint64_t v21 = BKLibraryOwnershipAssetIDKey;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v27 != v24) {
          objc_enumerationMutation(v3);
        }
        id v9 = *(void **)(*((void *)&v26 + 1) + 8 * i);
        objc_opt_class();
        id v10 = [v9 objectForKey:v23];
        id v11 = BUDynamicCast();

        objc_opt_class();
        id v12 = [v9 objectForKey:v7];
        id v13 = BUDynamicCast();

        id v14 = [*(id *)(v25 + 40) identifier];
        unsigned __int8 v15 = [v11 isEqual:v14];

        if ((v15 & 1) == 0)
        {
          unsigned int v16 = [v9 objectForKey:v21];
          [v22 addObject:v16];
        }
        v6 |= v13 == 0;
      }
      id v5 = [v3 countByEnumeratingWithState:&v26 objects:v30 count:16];
    }
    while (v5);
  }
  else
  {
    char v6 = 0;
  }

  if ([v22 count])
  {
    Class v17 = +[BKSeriesManager sharedManager];
    CFStringRef v18 = [v17 allSeriesItemsForAdamIDs:v22];

    if ([v18 count])
    {
      long long v19 = [*(id *)(v25 + 40) _arrayOfSeriesAssetsFromAdamIDs:v18 insertNullsForMissingAssets:0];
      if ([v19 count])
      {
        id v20 = [*(id *)(v25 + 40) libraryManager];
        [v20 libraryDataSource:*(void *)(v25 + 40) updatedAssets:v19];
      }
    }
  }
  if (v6) {
    [*(id *)(v25 + 40) _updateSeriesManager];
  }
}

void sub_10016EF0C(uint64_t a1)
{
  id v2 = BKLibraryDataSourceSeriesLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v7 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#BCCloudStoreAssetManagerChanged Notification:%@", buf, 0xCu);
  }

  id v4 = [*(id *)(a1 + 40) libraryManager];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10016F01C;
  v5[3] = &unk_100A44840;
  void v5[4] = *(void *)(a1 + 40);
  [v4 performBackgroundReadOnlyBlock:v5];
}

void sub_10016F01C(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 libraryManager];
  char v6 = [v5 cloudSyncVersionsForDataType:@"BCStoreItem" inContext:v4];

  uint64_t v7 = BKLibraryDataSourceSeriesLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v13 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "#BCCloudStoreAssetManagerChanged storeAssetManager:getStoreItemChangesSince:%@", buf, 0xCu);
  }

  id v8 = +[BCCloudAssetManager sharedManager];
  id v9 = [v8 storeAssetManager];
  id v10 = [v6 mutableCopy];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_10016F1A4;
  v11[3] = &unk_100A48B10;
  void v11[4] = *(void *)(a1 + 32);
  [v9 getStoreItemChangesSince:v10 completion:v11];
}

void sub_10016F1A4(uint64_t a1, void *a2, void *a3, void *a4, void *a5, int a6)
{
  id v11 = a2;
  id v12 = a3;
  id v13 = a4;
  id v14 = a5;
  unsigned __int8 v15 = [v11 allObjects];
  unsigned int v16 = [v15 bu_arrayByInvokingBlock:&stru_100A48AE8];

  Class v17 = BKLibraryDataSourceSeriesLog();
  if (os_log_type_enabled(v17, OS_LOG_TYPE_DEFAULT))
  {
    id v18 = [v11 count];
    long long v19 = [v16 bu_prettyDescription];
    int v20 = 134219522;
    id v21 = v18;
    __int16 v22 = 2112;
    uint64_t v23 = v19;
    __int16 v24 = 2048;
    id v25 = [v12 count];
    __int16 v26 = 2112;
    id v27 = v12;
    __int16 v28 = 2112;
    id v29 = v13;
    __int16 v30 = 2112;
    id v31 = v14;
    __int16 v32 = 1024;
    int v33 = a6;
    _os_log_impl((void *)&_mh_execute_header, v17, OS_LOG_TYPE_DEFAULT, "#BCCloudStoreAssetManagerChanged updated %lu items:(%@) removed %lu items:(%@) currentSyncVersions:(%@) error:(%@), fetchAgain:%{BOOL}d", (uint8_t *)&v20, 0x44u);
  }
  [*(id *)(a1 + 32) _storeItemsUpdatedWithCurrentCloudSyncVersions:v13 updated:v11 removed:v12];
}

id sub_10016F34C(id a1, BCMutableCloudData *a2)
{
  id v2 = a2;
  objc_opt_class();
  uint64_t v3 = BUDynamicCast();

  id v4 = [v3 storeID];
  id v5 = v4;
  if (!v4) {
    id v4 = @"(nil)";
  }
  char v6 = v4;

  return v6;
}

void sub_10016F4C0(uint64_t a1, void *a2, void *a3, void *a4)
{
  id v7 = a2;
  id v8 = a3;
  id v9 = a4;
  id v10 = [*(id *)(a1 + 32) dispatchQueue];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  v15[2] = sub_10016F5C4;
  v15[3] = &unk_100A44610;
  id v16 = v7;
  id v17 = v8;
  uint64_t v11 = *(void *)(a1 + 32);
  id v18 = v9;
  uint64_t v19 = v11;
  id v12 = v9;
  id v13 = v8;
  id v14 = v7;
  dispatch_async(v10, v15);
}

void sub_10016F5C4(uint64_t a1)
{
  id v2 = BKLibraryDataSourceSeriesLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) count];
    uint64_t v4 = *(void *)(a1 + 40);
    id v5 = *(uint64_t (**)(uint64_t, uint64_t))(a1 + 48);
    *(_DWORD *)buf = 134218498;
    *(void *)&uint8_t buf[4] = v3;
    *(_WORD *)&buf[12] = 2112;
    *(void *)&buf[14] = v4;
    *(_WORD *)&buf[22] = 2112;
    id v31 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "#storeItemsUpdatedWithCurrentCloudSyncVersions %lu storeItems, currentCloudSyncVersions:(%@) error:(%@)", buf, 0x20u);
  }

  *(void *)buf = 0;
  *(void *)&buf[8] = buf;
  *(void *)&uint8_t buf[16] = 0x3032000000;
  id v31 = sub_100007080;
  __int16 v32 = sub_10000721C;
  id v33 = +[NSMutableArray array];
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  long long v26 = 0u;
  id v6 = *(id *)(a1 + 32);
  id v7 = [v6 countByEnumeratingWithState:&v23 objects:v29 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v24;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v24 != v8) {
          objc_enumerationMutation(v6);
        }
        id v10 = *(void **)(*((void *)&v23 + 1) + 8 * i);
        uint64_t v11 = [v10 storeID];

        if (v11)
        {
          id v12 = *(void **)(*(void *)&buf[8] + 40);
          id v13 = [v10 storeID];
          [v12 addObject:v13];
        }
        else
        {
          id v13 = BKLibraryDataSourceSeriesLog();
          if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
            sub_1007ED784(&v21, v22, v13);
          }
        }
      }
      id v7 = [v6 countByEnumeratingWithState:&v23 objects:v29 count:16];
    }
    while (v7);
  }

  id v14 = +[BKSeriesManager sharedManager];
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10016F930;
  void v18[3] = &unk_100A464B0;
  double v18[4] = *(void *)(a1 + 56);
  int v20 = buf;
  id v19 = *(id *)(a1 + 40);
  unsigned __int8 v15 = objc_retainBlock(v18);
  uint64_t v27 = BKSeriesManagerAssetTypeUnknown;
  id v16 = [*(id *)(*(void *)&buf[8] + 40) copy];
  id v28 = v16;
  id v17 = +[NSDictionary dictionaryWithObjects:&v28 forKeys:&v27 count:1];

  [v14 updateAssetsFromCloudSyncForAssetAdamIDsWithTypes:v17 completion:v15];
  _Block_object_dispose(buf, 8);
}

void sub_10016F8FC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_10016F930(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dispatchQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10016F9E4;
  block[3] = &unk_100A464B0;
  void block[4] = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  id v3 = (id)v4;
  long long v6 = v4;
  dispatch_async(v2, block);
}

void sub_10016F9E4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) libraryManager];
  uint64_t v3 = *(void *)(a1 + 32);
  id v9 = _NSConcreteStackBlock;
  uint64_t v10 = 3221225472;
  uint64_t v11 = sub_10016FAFC;
  id v12 = &unk_100A48B38;
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v13 = v3;
  uint64_t v14 = v4;
  [v2 libraryDataSource:updateWithName:block:];

  id v5 = [*(id *)(a1 + 32) libraryManager];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10016FC10;
  v7[3] = &unk_100A44E38;
  long long v6 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v6;
  [v5 performBlockOnWorkerQueue:v7];
}

void sub_10016FAFC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = BKLibraryDataSourceSeriesLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) count];
    int v9 = 134217984;
    id v10 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "#storeItemsUpdatedWithCurrentCloudSyncVersions seriesStoreBookUpdate update %lu storeIDs", (uint8_t *)&v9, 0xCu);
  }

  long long v6 = [*(id *)(a1 + 32) libraryManager];
  [v6 libraryDataSource:*(void *)(a1 + 32) reloadInGroup:v3];

  id v7 = [*(id *)(a1 + 32) libraryManager];
  id v8 = [v7 priceManager];
  [v8 invalidate:0];
}

void sub_10016FC10(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 libraryManager];
  [v5 updateCloudVersionFromCloudSyncVersions:*(void *)(a1 + 40) inContext:v4];
}

id sub_10016FC80(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) wantsSeriesUpdated];
  if (result)
  {
    id v3 = *(void **)(a1 + 32);
    return [v3 _updateSeriesManager];
  }
  return result;
}

void sub_100170EE8(id *a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100170FA0;
  block[3] = &unk_100A455E8;
  id v3 = a1[4];
  id v5 = a1[6];
  id v4 = a1[5];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100170FA0(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) view];
  [v4 setFrame:CGRectMake(0.0, 0.0, 200.0, 200.0)];
  id v2 = objc_retainBlock(*(id *)(a1 + 48));
  id v3 = v2;
  if (v2) {
    (*((void (**)(id, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(a1 + 40));
  }
}

void sub_100171884(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) libraryAsset];
  id v3 = [v2 permanentOrTemporaryAssetID];
  unsigned int v4 = [v3 isEqualToString:*(void *)(a1 + 40)];

  if (v4)
  {
    id v5 = +[BKLibraryAssetStatusController sharedController];
    long long v6 = [v5 statusForAssetID:*(void *)(a1 + 40)];
    [*(id *)(a1 + 32) setLibraryDownloadStatus:v6];

    id v7 = *(void **)(a1 + 32);
    [v7 updateConfiguration:0];
  }
}

uint64_t sub_100171940(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_100172054(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:1];
}

uint64_t sub_100172060(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100172104(void *a1, void *a2)
{
  id v3 = a2;
  if (a1)
  {
    uint64_t v13 = v3;
    unsigned int v4 = [a1 dataSource];
    id v5 = [v4 collection];

    long long v6 = [a1 libraryAsset];
    id v7 = [a1 delegate];
    id v8 = [v7 trackerForLibraryBookshelfInfoCell:a1];

    int v9 = [a1 delegate];
    id v10 = [v9 libraryBookshelfInfoCell:a1 analyticsAssetPropertyProviderForLibraryAsset:v6 fromSourceView:v13 inCollection:v5];

    uint64_t v11 = [a1 delegate];
    id v12 = [v11 libraryBookshelfInfoCell:a1 menuWithLibraryAsset:v6 sourceView:v13 collection:v5];

    if (v6 && v8 && v10 && v12)
    {
      [v13 setupAppAnalyticsReportingUsingTracker:v8 withPropertyProvider:v10];
      [v13 setShowsMenuAsPrimaryAction:1];
      [v13 setMenu:v12];
    }

    id v3 = v13;
  }
}

id sub_100172460(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:1];
}

uint64_t sub_10017246C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001733C8(uint64_t a1)
{
  [*(id *)(a1 + 32) updateInfoKind];
  unsigned __int8 v2 = +[BKReachability isOffline];
  id v3 = +[BURestrictionsProvider sharedInstance];
  unsigned __int8 v4 = [v3 isBookStoreAllowed];

  unsigned int v5 = [*(id *)(a1 + 32) infoKind];
  long long v6 = [*(id *)(a1 + 32) moreButton];
  id v7 = [v6 superview];
  id v8 = v7;
  if (v5 != 8 || (v2 & 1) == 0)
  {
    if (v7)
    {
      int v10 = *(unsigned __int8 *)(a1 + 40);

      if (!v10) {
        goto LABEL_11;
      }
    }
    else
    {
    }
    [*(id *)(a1 + 32) createOrUpdateMoreButton];
    goto LABEL_10;
  }

  if (v8)
  {
    int v9 = [*(id *)(a1 + 32) moreButton];
    [v9 removeFromSuperview];

LABEL_10:
    [*(id *)(a1 + 32) setNeedsLayout];
  }
LABEL_11:
  [*(id *)(a1 + 32) createOrUpdateAudiobookBadge];
  [*(id *)(a1 + 32) createOrUpdateCloudButton];
  [*(id *)(a1 + 32) createOrUpdateDownloadProgressButton];
  uint64_t v11 = [*(id *)(a1 + 32) badge];
  if (!v11 || (int v12 = *(unsigned __int8 *)(a1 + 40), v11, v12))
  {
    switch([*(id *)(a1 + 32) infoKind])
    {
      case 2u:
      case 0xAu:
        uint64_t v13 = *(void *)(a1 + 32);
        uint64_t v14 = *(void **)(v13 + 48);
        if (v14)
        {
          [v14 assetAudiobookStatusTrackTimeRemaining];
          double v16 = -v15;
          id v17 = *(void **)(a1 + 32);
          id v18 = [v17 cellMetrics];
          id v19 = [v18 timeRemainingFontAttributes];
          int v20 = [v19 foregroundColor];
          v91[0] = _NSConcreteStackBlock;
          v91[1] = 3221225472;
          v91[2] = sub_1001740B8;
          v91[3] = &unk_100A48BE8;
          *(double *)&v91[5] = v16;
          v91[4] = *(void *)(a1 + 32);
          [v17 createOrUpdateBadgeWithBadgeBackgroundColor:0 badgeFrameColor:v20 textConfigurationBlock:v91];
        }
        else
        {
          if (![*(id *)(v13 + 16) isFinished])
          {
            __n128 v62 = [*(id *)(*(void *)(a1 + 32) + 16) readingProgress];
            __int16 v22 = v62;
            if (v62)
            {
              [v62 floatValue];
              if (v63 > 0.0)
              {
                __n128 v64 = *(void **)(a1 + 32);
                __n128 v65 = +[UIColor bc_booksGray];
                v86[0] = _NSConcreteStackBlock;
                v86[1] = 3221225472;
                v86[2] = sub_10017428C;
                v86[3] = &unk_100A48C10;
                id v66 = v22;
                uint64_t v67 = *(void *)(a1 + 32);
                id v87 = v66;
                uint64_t v88 = v67;
                [v64 createOrUpdateBadgeWithBadgeBackgroundColor:0 badgeFrameColor:v65 textConfigurationBlock:v86];

                goto LABEL_26;
              }
            }
            long long v73 = *(void **)(a1 + 32);
            long long v23 = [v73 cellMetrics];
            __n128 v49 = [v23 unreadBadgeColor];
            id v72 = [*(id *)(a1 + 32) cellMetrics];
            id v71 = [v72 infoBadgeFontAttributes];
            uint64_t v74 = [v71 foregroundColor];
            v85[0] = _NSConcreteStackBlock;
            v85[1] = 3221225472;
            v85[2] = sub_100174320;
            v85[3] = &unk_100A48BC0;
            v85[4] = *(void *)(a1 + 32);
            [v73 createOrUpdateBadgeWithBadgeBackgroundColor:v49 badgeFrameColor:v74 textConfigurationBlock:v85];

            goto LABEL_59;
          }
          uint64_t v57 = +[NSBundle mainBundle];
          long long v58 = [v57 localizedStringForKey:@"Finished_Infobar" value:@"Finished" table:&stru_100A70340];

          long long v59 = *(void **)(a1 + 32);
          __n128 v60 = +[UIColor bc_booksGray];
          v89[0] = _NSConcreteStackBlock;
          v89[1] = 3221225472;
          v89[2] = sub_100174184;
          v89[3] = &unk_100A48BC0;
          id v90 = v58;
          id v18 = v58;
          [v59 createOrUpdateBadgeWithBadgeBackgroundColor:0 badgeFrameColor:v60 textConfigurationBlock:v89];
        }
        goto LABEL_27;
      case 3u:
        if ((v4 & 1) != 0
          || ([*(id *)(*(void *)(a1 + 32) + 16) isStoreOrSeriesItem] & 1) == 0)
        {
          uint8_t v21 = *(void **)(a1 + 32);
          __int16 v22 = [v21 cellMetrics];
          long long v23 = [v22 nextBadgeColor];
          long long v24 = [*(id *)(a1 + 32) cellMetrics];
          long long v25 = [v24 infoBadgeFontAttributes];
          long long v26 = [v25 foregroundColor];
          v84[0] = _NSConcreteStackBlock;
          v84[1] = 3221225472;
          v84[2] = sub_1001743E8;
          v84[3] = &unk_100A48BC0;
          v84[4] = *(void *)(a1 + 32);
          uint64_t v27 = v84;
          goto LABEL_24;
        }
        goto LABEL_27;
      case 4u:
        uint8_t v21 = *(void **)(a1 + 32);
        __int16 v22 = [v21 cellMetrics];
        long long v23 = [v22 proofBadgeColor];
        long long v24 = [*(id *)(a1 + 32) cellMetrics];
        long long v25 = [v24 infoBadgeFontAttributes];
        long long v26 = [v25 foregroundColor];
        v83[0] = _NSConcreteStackBlock;
        v83[1] = 3221225472;
        v83[2] = sub_1001744B0;
        v83[3] = &unk_100A48BC0;
        void v83[4] = *(void *)(a1 + 32);
        uint64_t v27 = v83;
        goto LABEL_24;
      case 5u:
        uint8_t v21 = *(void **)(a1 + 32);
        __int16 v22 = [v21 cellMetrics];
        long long v23 = [v22 preOrderableBadgeColor];
        long long v24 = [*(id *)(a1 + 32) cellMetrics];
        long long v25 = [v24 infoBadgeFontAttributes];
        long long v26 = [v25 foregroundColor];
        v82[0] = _NSConcreteStackBlock;
        v82[1] = 3221225472;
        v82[2] = sub_100174578;
        v82[3] = &unk_100A48BC0;
        v82[4] = *(void *)(a1 + 32);
        uint64_t v27 = v82;
        goto LABEL_24;
      case 6u:
        uint8_t v21 = *(void **)(a1 + 32);
        __int16 v22 = [v21 cellMetrics];
        long long v23 = [v22 preOrderedBadgeColor];
        long long v24 = [*(id *)(a1 + 32) cellMetrics];
        long long v25 = [v24 infoBadgeFontAttributes];
        long long v26 = [v25 foregroundColor];
        v81[0] = _NSConcreteStackBlock;
        v81[1] = 3221225472;
        v81[2] = sub_100174640;
        v81[3] = &unk_100A48BC0;
        v81[4] = *(void *)(a1 + 32);
        uint64_t v27 = v81;
        goto LABEL_24;
      case 7u:
        uint8_t v21 = *(void **)(a1 + 32);
        __int16 v22 = [v21 cellMetrics];
        long long v23 = [v22 sampleBadgeColor];
        long long v24 = [*(id *)(a1 + 32) cellMetrics];
        long long v25 = [v24 infoBadgeFontAttributes];
        long long v26 = [v25 foregroundColor];
        v80[0] = _NSConcreteStackBlock;
        v80[1] = 3221225472;
        v80[2] = sub_100174708;
        v80[3] = &unk_100A48BC0;
        v80[4] = *(void *)(a1 + 32);
        uint64_t v27 = v80;
        goto LABEL_24;
      case 8u:
        unsigned int v37 = [*(id *)(a1 + 32) _shouldRemovePriceBadge];
        __n128 v38 = *(void **)(a1 + 32);
        if (v37)
        {
          uint64_t v39 = [v38 badge];
          [v39 removeFromSuperview];

          [*(id *)(a1 + 32) setBadge:0];
          [*(id *)(a1 + 32) createOrUpdateFinishedLabelIfNeeded];
        }
        else
        {
          [v38 createOrUpdatePriceBadge];
        }
        goto LABEL_27;
      case 9u:
        __int16 v22 = +[BKLibraryManager defaultManager];
        uint64_t v78 = 0;
        uint64_t v79 = 0;
        long long v23 = [*(id *)(*(void *)(a1 + 32) + 16) seriesID];
        uint64_t v40 = [v22 uiChildContext];
        [v22 countOfSeriesLibraryAssetsWithSeriesID:v23 total:&v79 markedFinished:&v78 context:v40];

        objc_opt_class();
        __n128 v41 = [*(id *)(*(void *)(a1 + 32) + 16) seriesBooks];
        __n128 v42 = [v41 allObjects];
        __n128 v43 = [v42 firstObject];
        __n128 v44 = BUDynamicCast();
        unsigned int v45 = [v44 isAudiobook];

        __n128 v46 = +[NSBundle mainBundle];
        __n128 v47 = v46;
        if (v45) {
          CFStringRef v48 = @"%lu audiobooks";
        }
        else {
          CFStringRef v48 = @"%lu books";
        }
        __n128 v49 = [v46 localizedStringForKey:v48 value:&stru_100A70340 table:0];

        __n128 v50 = +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v49, v79);
        __n128 v51 = v50;
        uint64_t v52 = v78;
        if (!v78)
        {
          id v56 = v50;
          goto LABEL_52;
        }
        uint64_t v53 = v79;
        __n128 v54 = +[NSBundle mainBundle];
        __n128 v55 = v54;
        if (v52 == v53)
        {
          id v56 = [v54 localizedStringForKey:@"Finished_Infobar" value:@"Finished" table:&stru_100A70340];

LABEL_52:
          id v61 = 0;
          goto LABEL_57;
        }
        long long v68 = [v54 localizedStringForKey:@"Finished %lu of %lu" value:&stru_100A70340 table:0];

        +[NSString localizedStringWithFormat:](NSString, "localizedStringWithFormat:", v68, v78, v79);
        id v56 = (id)objc_claimAutoreleasedReturnValue();
        id v61 = v51;

LABEL_57:
        long long v69 = *(void **)(a1 + 32);
        long long v70 = +[UIColor bc_booksGray];
        v75[0] = _NSConcreteStackBlock;
        v75[1] = 3221225472;
        v75[2] = sub_1001747D0;
        v75[3] = &unk_100A48C10;
        id v76 = v56;
        id v77 = v61;
        id v71 = v61;
        id v72 = v56;
        [v69 createOrUpdateBadgeWithBadgeBackgroundColor:0 badgeFrameColor:v70 textConfigurationBlock:v75];

LABEL_59:
LABEL_25:

LABEL_26:
LABEL_27:
        [*(id *)(a1 + 32) setNeedsLayout];
        break;
      default:
        uint8_t v21 = *(void **)(a1 + 32);
        __int16 v22 = [v21 cellMetrics];
        long long v23 = [v22 unreadBadgeColor];
        long long v24 = [*(id *)(a1 + 32) cellMetrics];
        long long v25 = [v24 infoBadgeFontAttributes];
        long long v26 = [v25 foregroundColor];
        v92[0] = _NSConcreteStackBlock;
        v92[1] = 3221225472;
        v92[2] = sub_100173FF0;
        v92[3] = &unk_100A48BC0;
        v92[4] = *(void *)(a1 + 32);
        uint64_t v27 = v92;
LABEL_24:
        [v21 createOrUpdateBadgeWithBadgeBackgroundColor:v23 badgeFrameColor:v26 textConfigurationBlock:v27];

        goto LABEL_25;
    }
  }
  unsigned int v28 = [*(id *)(a1 + 32) showsDateBadge];
  if ([*(id *)(a1 + 32) infoKind] != 5
    && [*(id *)(a1 + 32) infoKind] != 6)
  {
    [*(id *)(*(void *)(a1 + 32) + 88) removeFromSuperview];
    uint64_t v31 = *(void *)(a1 + 32);
    __int16 v32 = *(void **)(v31 + 88);
    *(void *)(v31 + 88) = 0;

    if (!v28) {
      return [*(id *)(a1 + 32) layoutIfNeeded];
    }
    goto LABEL_36;
  }
  id v29 = [*(id *)(a1 + 32) dateBadge];
  if (!v29 || (int v30 = *(unsigned __int8 *)(a1 + 40), v29, v30)) {
    [*(id *)(a1 + 32) createOrUpdateDateBadge];
  }
  if ((v28 & 1) == 0)
  {
LABEL_36:
    id v33 = [*(id *)(a1 + 32) delegate];
    char v34 = objc_opt_respondsToSelector();

    if (v34)
    {
      long long v35 = [*(id *)(a1 + 32) delegate];
      [v35 libraryBookshelfInfoCellDidChangeContentHeight:*(void *)(a1 + 32)];
    }
  }
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_100173FF0(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  unsigned int v5 = [v3 dataSource];
  id v9 = [v5 infoBarNew];

  long long v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_1001740B8(uint64_t a1, void *a2)
{
  double v3 = *(double *)(a1 + 40);
  id v4 = a2;
  id v8 = +[NSString stringWithDuration:v3];
  unsigned int v5 = [*(id *)(a1 + 32) cellMetrics];
  long long v6 = [v5 timeRemainingFontAttributes];
  id v7 = +[TUIFontSpec attributedStringWith:v8 attributes:v6];
  [v4 setAttributedBadgeText:v7];
}

void sub_100174184(uint64_t a1, void *a2)
{
}

void sub_100174198(void *a1, void *a2, void *a3)
{
  id v5 = a3;
  id v6 = a2;
  id v7 = a1;
  id v8 = +[UIFont _preferredFontForTextStyle:UIFontTextStyleFootnote maximumContentSizeCategory:UIContentSizeCategoryExtraLarge];
  [v7 setFont:v8];

  [v7 setBadgeText:v6];
  [v7 setFallbackBadgeText:v5];

  id v9 = +[UIColor bc_booksGray];
  [v7 setTextColor:v9];
}

void sub_10017428C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  double v3 = *(void **)(*(void *)(a1 + 40) + 16);
  id v4 = a2;
  +[NSString bc_formattedReadingProgress:isFinished:](NSString, "bc_formattedReadingProgress:isFinished:", v2, [v3 isFinished]);
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  sub_100174198(v4, v5, 0);
}

void sub_100174320(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 dataSource];
  id v9 = [v5 infoBarNew];

  id v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_1001743E8(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 dataSource];
  id v9 = [v5 infoBarNext];

  id v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_1001744B0(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 dataSource];
  id v9 = [v5 infoBarProof];

  id v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_100174578(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 dataSource];
  id v9 = [v5 infoBarPreOrderable];

  id v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_100174640(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 dataSource];
  id v9 = [v5 infoBarPreOrdered];

  id v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_100174708(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 dataSource];
  id v9 = [v5 infoBarSample];

  id v6 = [*(id *)(a1 + 32) cellMetrics];
  id v7 = [v6 infoBadgeFontAttributes];
  id v8 = +[TUIFontSpec attributedStringWith:v9 attributes:v7];
  [v4 setAttributedBadgeText:v8];
}

void sub_1001747D0(uint64_t a1, void *a2)
{
}

void sub_1001749EC(uint64_t a1, void *a2)
{
}

void sub_1001756FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_100175718(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001757E4;
  block[3] = &unk_100A43FB8;
  objc_copyWeak(&v9, (id *)(a1 + 40));
  id v7 = *(id *)(a1 + 32);
  id v8 = v4;
  id v5 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

  objc_destroyWeak(&v9);
}

void sub_1001757E4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  double v3 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained infoKind] != 5 && objc_msgSend(v3, "infoKind") != 6)
    {
      id v4 = *(void **)(a1 + 32);
      id v5 = [v3 libraryAsset];
      id v6 = [v5 storeID];
      LODWORD(v4) = [v4 isEqualToString:v6];

      if (v4)
      {
        id v7 = [v3 cellMetrics];
        id v8 = [v7 infoBadgeFontAttributes];
        id v9 = [v3 cellMetrics];
        int v10 = [v9 priceColor];
        uint64_t v11 = [v8 attributesWithForegroundColor:v10];

        int v12 = +[UIColor clearColor];
        uint64_t v13 = [v11 foregroundColor];
        v15[0] = _NSConcreteStackBlock;
        v15[1] = 3221225472;
        v15[2] = sub_1001759A0;
        v15[3] = &unk_100A48C38;
        id v16 = *(id *)(a1 + 40);
        id v17 = v3;
        id v18 = v11;
        id v14 = v11;
        [v3 createOrUpdateBadgeWithBadgeBackgroundColor:v12 badgeFrameColor:v13 textConfigurationBlock:v15];
      }
    }
  }
}

void sub_1001759A0(uint64_t a1, void *a2)
{
  double v3 = *(void **)(a1 + 32);
  id v4 = a2;
  if ([v3 length])
  {
    id v5 = *(id *)(a1 + 32);
  }
  else
  {
    id v6 = [*(id *)(a1 + 40) dataSource];
    id v8 = [v6 infoBarBuy];

    id v5 = v8;
  }
  id v9 = v5;
  id v7 = +[TUIFontSpec attributedStringWith:v5 attributes:*(void *)(a1 + 48)];
  [v4 setAttributedText:v7];
}

id sub_100176044(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) badge];
  [v2 removeFromSuperview];

  [*(id *)(a1 + 32) setBadge:0];
  double v3 = *(void **)(a1 + 32);

  return [v3 updateConfiguration:0];
}

id sub_1001760A0(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:0];
}

id sub_1001760AC(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:1];
}

id sub_1001760B8(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:0];
}

id sub_1001760C4(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:0];
}

id sub_1001760D0(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateConfiguration:1];
}

id sub_100176150(uint64_t a1)
{
  [*(id *)(a1 + 32) updateConfiguration:1];
  uint64_t v2 = *(void **)(a1 + 32);

  return [v2 setNeedsLayout];
}

void sub_1001770A8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained processSeriesBooksQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001771CC;
    block[3] = &unk_100A47E40;
    objc_copyWeak(&v12, (id *)(a1 + 40));
    id v10 = *(id *)(a1 + 32);
    id v11 = v3;
    dispatch_async(v6, block);

    objc_destroyWeak(&v12);
  }
  else
  {
    id v7 = objc_retainBlock(v3);
    id v8 = v7;
    if (v7) {
      (*((void (**)(id))v7 + 2))(v7);
    }
  }
}

void sub_1001771CC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained seriesIDsToResetNext];
    id v5 = [v4 copy];

    id v6 = [v3 seriesIDsToResetNext];
    [v6 removeAllObjects];

    id v7 = [a1[4] libraryManager];
    id v8 = [v7 newPrivateQueueManagedObjectContext];

    [v8 setSessionContextType:4];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    long long v13[2] = sub_100177350;
    v13[3] = &unk_100A48C88;
    id v14 = v5;
    id v15 = v3;
    id v16 = v8;
    id v17 = a1[4];
    id v18 = a1[5];
    id v9 = v8;
    id v10 = v5;
    [v9 performBlock:v13];
  }
  else
  {
    id v11 = objc_retainBlock(a1[5]);
    id v12 = v11;
    if (v11) {
      (*((void (**)(id))v11 + 2))(v11);
    }
  }
}

void sub_100177350(id *a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v2 = a1[4];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        [a1[5] _resetNextForSeriesID:*(void *)(*((void *)&v10 + 1) + 8 * (void)v6) inMOC:a1[6] v10];
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }

  if ([a1[6] hasChanges])
  {
    id v7 = [a1[7] libraryManager];
    [v7 saveManagedObjectContext:a1[6]];
  }
  id v8 = objc_retainBlock(a1[8]);
  id v9 = v8;
  if (v8) {
    (*((void (**)(id))v8 + 2))(v8);
  }
}

void sub_100177490(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _migrateAudiobookProgressIfNeeded];
  id v4 = (void (**)(void))objc_retainBlock(v3);

  if (v4) {
    v4[2](v4);
  }
}

void sub_100178278(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001782A8(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) markedAssets];
  id v2 = [v5 copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10017830C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) markedAssets];
  [v2 unionSet:*(void *)(a1 + 40)];
}

void sub_100178360(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) seriesIDsToResetNext];
  [v2 unionSet:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) coalescedResetNextInSeries];
  [v3 signalWithCompletion:&stru_100A48CD0];
}

void sub_100178704(id a1)
{
  uint64_t v1 = sub_100078290();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "_mediaLibraryDidChange: migration done", v2, 2u);
  }
}

void sub_10017882C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  uint64_t v5 = +[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:*(void *)(a1 + 32)];
  long long v23 = +[NSPredicate predicateWithFormat:@"%K != NULL AND %K != 0", @"seriesID", @"seriesID"];
  long long v24 = (void *)v5;
  v34[0] = v5;
  v34[1] = v23;
  id v6 = +[NSArray arrayWithObjects:v34 count:2];
  uint64_t v7 = +[NSCompoundPredicate andPredicateWithSubpredicates:v6];

  __int16 v22 = (void *)v7;
  [v4 setPredicate:v7];
  id v32 = 0;
  long long v25 = v4;
  id v8 = [v3 executeFetchRequest:v4 error:&v32];
  id v9 = v32;
  long long v10 = [v8 valueForKey:@"seriesID"];
  id v11 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  long long v12 = +[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:v10];
  [v11 setPredicate:v12];

  id v31 = v9;
  long long v26 = v3;
  long long v13 = [v3 executeFetchRequest:v11 error:&v31];
  id v21 = v31;

  long long v29 = 0u;
  long long v30 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id v14 = v13;
  id v15 = [v14 countByEnumeratingWithState:&v27 objects:v33 count:16];
  if (v15)
  {
    id v16 = v15;
    uint64_t v17 = *(void *)v28;
    do
    {
      id v18 = 0;
      do
      {
        if (*(void *)v28 != v17) {
          objc_enumerationMutation(v14);
        }
        uint64_t v19 = *(void *)(*((void *)&v27 + 1) + 8 * (void)v18);
        int v20 = [*(id *)(a1 + 40) libraryManager];
        [v20 updateAuthorForSeriesContainer:v19];

        id v18 = (char *)v18 + 1;
      }
      while (v16 != v18);
      id v16 = [v14 countByEnumeratingWithState:&v27 objects:v33 count:16];
    }
    while (v16);
  }
}

void sub_100178BA0(uint64_t a1)
{
  kdebug_trace();
  uint64_t v65 = a1;
  id v2 = [*(id *)(a1 + 32) libraryManager];
  id v55 = [v2 newManagedObjectContext];

  id v3 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"NewMOC 4 %s %@", "-[BKLibraryAssetIsNewManager resetIsNewForAssetIDs:]_block_invoke", *(void *)(v65 + 40));
  [v55 setName:v3];

  [v55 setSessionContextType:4];
  if (*(void *)(v65 + 40))
  {
    id v4 = +[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForAssetIDsTaggedLibraryAssets:");
    v105[0] = v4;
    uint64_t v5 = +[BKLibraryManager predicateForTemporaryAssetIDsTaggedLibraryAssets:*(void *)(v65 + 40)];
    v105[1] = v5;
    id v6 = +[NSArray arrayWithObjects:v105 count:2];
    uint64_t v7 = +[NSCompoundPredicate orPredicateWithSubpredicates:v6];

    v104[0] = v7;
    id v8 = +[BKLibraryManager predicateForLibraryAssetsNotMarkedAsOld];
    v104[1] = v8;
    id v9 = +[NSArray arrayWithObjects:v104 count:2];
    uint64_t v53 = +[NSCompoundPredicate andPredicateWithSubpredicates:v9];
  }
  else
  {
    uint64_t v53 = +[BKLibraryManager predicateForLibraryAssetsNotMarkedAsOld];
  }
  id v66 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  [v66 setPredicate:v53];
  [v66 setReturnsObjectsAsFaults:0];
  id v99 = 0;
  __n128 v54 = [v55 executeFetchRequest:v66 error:&v99];
  id v52 = v99;
  if (v54)
  {
    if ([v54 count])
    {
      uint64_t v10 = +[NSMutableSet setWithCapacity:](NSMutableSet, "setWithCapacity:", [v54 count]);
      if (*(void *)(v65 + 40))
      {
        id v11 = [v54 valueForKey:@"assetID"];
        long long v12 = +[AEAnnotation predicateForAnnotationsWithAssetIDInList:v11 includingDeleted:0];
      }
      else
      {
        long long v12 = +[AEAnnotation predicateForAllAnnotationsIncludingDeleted:0];
      }
      v97[0] = 0;
      v97[1] = v97;
      v97[2] = 0x3032000000;
      v97[3] = sub_100007090;
      v97[4] = sub_100007224;
      id v98 = 0;
      uint64_t v91 = 0;
      id v92 = &v91;
      uint64_t v93 = 0x3032000000;
      v94 = sub_100007090;
      id v95 = sub_100007224;
      id v96 = 0;
      long long v13 = [*(id *)(v65 + 32) annotationProvider];
      v87[0] = _NSConcreteStackBlock;
      v87[1] = 3221225472;
      v87[2] = sub_100179660;
      v87[3] = &unk_100A48D18;
      uint64_t v89 = v97;
      id v51 = v12;
      id v88 = v51;
      id v90 = &v91;
      [v13 performBlockOnUserSideQueueAndWait:v87];

      __n128 v60 = (void *)v10;
      id v14 = dispatch_queue_attr_make_with_autorelease_frequency(0, DISPATCH_AUTORELEASE_FREQUENCY_WORK_ITEM);
      dispatch_queue_t v56 = dispatch_queue_create("BKLibraryAssetIsNewManager.resetIsNewForAssetIDs.isNewSync", v14);

      group = dispatch_group_create();
      long long v58 = objc_opt_new();
      long long v85 = 0u;
      long long v86 = 0u;
      long long v83 = 0u;
      long long v84 = 0u;
      id v15 = v54;
      id v16 = [v15 countByEnumeratingWithState:&v83 objects:v103 count:16];
      if (v16)
      {
        uint64_t v63 = *(void *)v84;
        do
        {
          for (uint64_t i = 0; i != v16; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v84 != v63) {
              objc_enumerationMutation(v15);
            }
            id v18 = *(id *)(*((void *)&v83 + 1) + 8 * i);
            if ([v18 isValid])
            {
              unsigned __int8 v19 = [v18 isNew];
              v78[0] = _NSConcreteStackBlock;
              v78[1] = 3221225472;
              v78[2] = sub_100179788;
              v78[3] = &unk_100A46738;
              unsigned __int8 v82 = v19;
              uint64_t v79 = v56;
              id v80 = v58;
              id v20 = v18;
              id v81 = v20;
              id v21 = objc_retainBlock(v78);
              if ([v20 contentType] == 6)
              {
                dispatch_group_enter(group);
                unsigned int v22 = [v20 isCloud];
                long long v23 = +[BKMediaLibraryCache sharedCache];
                long long v24 = [v20 assetID];
                v102 = v24;
                long long v25 = +[NSArray arrayWithObjects:&v102 count:1];
                v75[0] = _NSConcreteStackBlock;
                v75[1] = 3221225472;
                v75[2] = sub_1001798BC;
                v75[3] = &unk_100A48D40;
                id v77 = v21;
                id v76 = group;
                [v23 fetchAssetsWithIDs:v25 type:v22 completion:v75];
              }
              else
              {
                long long v26 = (void *)v92[5];
                long long v27 = [v20 assetID];
                LODWORD(v26) = [v26 containsObject:v27];

                ((void (*)(void *, void))v21[2])(v21, v26 ^ 1);
              }
              long long v28 = [v20 seriesID];

              if (v28)
              {
                long long v29 = [v20 seriesID];
                [v60 addObject:v29];
              }
            }
          }
          id v16 = [v15 countByEnumeratingWithState:&v83 objects:v103 count:16];
        }
        while (v16);
      }

      dispatch_group_wait(group, 0xFFFFFFFFFFFFFFFFLL);
      v73[0] = _NSConcreteStackBlock;
      v73[1] = 3221225472;
      v73[2] = sub_10017992C;
      v73[3] = &unk_100A48D68;
      id v64 = v55;
      id v74 = v64;
      [v58 enumerateKeysAndObjectsUsingBlock:v73];
      long long v71 = 0u;
      long long v72 = 0u;
      long long v69 = 0u;
      long long v70 = 0u;
      id obj = v60;
      id v30 = [obj countByEnumeratingWithState:&v69 objects:v101 count:16];
      id v31 = v52;
      if (v30)
      {
        uint64_t v61 = *(void *)v70;
        do
        {
          id v62 = v30;
          id v32 = 0;
          id v33 = v31;
          do
          {
            if (*(void *)v70 != v61) {
              objc_enumerationMutation(obj);
            }
            uint64_t v34 = *(void *)(*((void *)&v69 + 1) + 8 * (void)v32);
            long long v35 = [*(id *)(v65 + 32) libraryManager];
            long long v36 = [v35 predicateForContainerWithSeriesIDLibraryAsset:v34];
            [v66 setPredicate:v36];

            [v66 setReturnsObjectsAsFaults:0];
            id v68 = v33;
            unsigned int v37 = [v64 executeFetchRequest:v66 error:&v68];
            id v31 = v68;

            __n128 v38 = [v37 lastObject];

            uint64_t v39 = [*(id *)(v65 + 32) libraryManager];
            uint64_t v40 = [v39 predicateForLibraryAssetsWithSeriesID:v34];
            v100[0] = v40;
            __n128 v41 = +[BKLibraryManager predicateForLibraryAssetsMarkedAsNew];
            v100[1] = v41;
            __n128 v42 = [*(id *)(v65 + 32) libraryManager];
            __n128 v43 = [v42 predicateForLocalLibraryAssets];
            v100[2] = v43;
            __n128 v44 = +[NSArray arrayWithObjects:v100 count:3];
            unsigned int v45 = +[NSCompoundPredicate andPredicateWithSubpredicates:v44];
            [v66 setPredicate:v45];

            id v67 = 0;
            id v46 = [v64 countForFetchRequest:v66 error:&v67];
            id v47 = v67;
            if (v46) {
              BOOL v48 = v46 == (id)0x7FFFFFFFFFFFFFFFLL;
            }
            else {
              BOOL v48 = 1;
            }
            uint64_t v49 = !v48;
            if (v49 != [v38 isNew]) {
              [v38 setIsNew:v49];
            }

            id v32 = (char *)v32 + 1;
            id v33 = v31;
          }
          while (v62 != v32);
          id v30 = [obj countByEnumeratingWithState:&v69 objects:v101 count:16];
        }
        while (v30);
      }
      id v52 = v31;

      _Block_object_dispose(&v91, 8);
      _Block_object_dispose(v97, 8);
    }
    if ([v55 hasChanges])
    {
      __n128 v50 = [*(id *)(v65 + 32) libraryManager];
      [v50 saveManagedObjectContext:v55];
    }
  }
  kdebug_trace();
}

void sub_1001795FC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,uint64_t a40,uint64_t a41,uint64_t a42,uint64_t a43,uint64_t a44,uint64_t a45,uint64_t a46,uint64_t a47,uint64_t a48,uint64_t a49,uint64_t a50,uint64_t a51,uint64_t a52,uint64_t a53,uint64_t a54,uint64_t a55,uint64_t a56,uint64_t a57,uint64_t a58,uint64_t a59,uint64_t a60,uint64_t a61,uint64_t a62,uint64_t a63)
{
  _Block_object_dispose(&a70, 8);
  _Block_object_dispose(&STACK[0x218], 8);
  _Unwind_Resume(a1);
}

void sub_100179660(void *a1, void *a2)
{
  CFStringRef v12 = @"annotationAssetID";
  id v3 = a2;
  id v4 = +[NSArray arrayWithObjects:&v12 count:1];
  id v5 = [v3 copyEntityPropertiesArray:@"AEAnnotation" fromEntityName:@"AEAnnotation" withPredicate:a1[4] sortBy:0 ascending:0 distinct:1 v12];

  uint64_t v6 = *(void *)(a1[5] + 8);
  uint64_t v7 = *(void **)(v6 + 40);
  *(void *)(v6 + 40) = v5;

  id v8 = [*(id *)(*(void *)(a1[5] + 8) + 40) valueForKey:@"annotationAssetID"];
  uint64_t v9 = +[NSSet setWithArray:v8];
  uint64_t v10 = *(void *)(a1[6] + 8);
  id v11 = *(void **)(v10 + 40);
  *(void *)(v10 + 40) = v9;
}

void sub_100179788(uint64_t a1, int a2)
{
  if (*(unsigned __int8 *)(a1 + 56) != a2)
  {
    char v2 = a2;
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100179844;
    block[3] = &unk_100A44818;
    id v4 = *(NSObject **)(a1 + 32);
    id v6 = *(id *)(a1 + 40);
    id v7 = *(id *)(a1 + 48);
    char v8 = v2;
    dispatch_sync(v4, block);
  }
}

void sub_100179844(uint64_t a1)
{
  id v4 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
  char v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) objectID];
  [v2 setObject:v4 forKeyedSubscript:v3];
}

void sub_1001798BC(uint64_t a1, void *a2)
{
  id v3 = [a2 firstObject];
  (*(void (**)(void, id))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), [v3 hasBeenPlayed]);
  dispatch_group_leave(*(dispatch_group_t *)(a1 + 32));
}

void sub_10017992C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = [*(id *)(a1 + 32) existingObjectWithID:a2 error:0];
  if ([v5 isValid])
  {
    unsigned int v6 = [v5 isNew];
    if (v6 != [v7 BOOLValue]) {
      [v5 setIsNew:[v7 BOOLValue]];
    }
  }
}

void sub_100179A88(uint64_t a1)
{
  kdebug_trace();
  char v2 = [*(id *)(a1 + 32) libraryManager];
  id v3 = [v2 newManagedObjectContext];

  id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"NewMOC 5 %s %@", "-[BKLibraryAssetIsNewManager resetProgressHighWaterMarkForAssetIDs:]_block_invoke", *(void *)(a1 + 40));
  [v3 setName:v4];

  [v3 setSessionContextType:4];
  uint64_t v5 = +[BKLibraryManager predicateForHighWaterMarkCapableLibraryAssets];
  unsigned int v6 = (void *)v5;
  if (*(void *)(a1 + 40))
  {
    v64[0] = v5;
    id v7 = +[BKLibraryManager predicateForAssetIDsTaggedLibraryAssets:](BKLibraryManager, "predicateForAssetIDsTaggedLibraryAssets:");
    v64[1] = v7;
    char v8 = +[NSArray arrayWithObjects:v64 count:2];
    uint64_t v9 = +[NSCompoundPredicate andPredicateWithSubpredicates:v8];

    unsigned int v6 = (void *)v9;
  }
  id v10 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  [v10 setPredicate:v6];
  [v10 setReturnsObjectsAsFaults:0];
  [v10 setFetchBatchSize:20];
  id v62 = 0;
  id v11 = [v3 executeFetchRequest:v10 error:&v62];
  id v12 = v62;
  long long v13 = +[NSMutableSet set];
  id v14 = [v11 valueForKeyPath:@"assetID"];
  id v15 = [v14 bu_arrayByRemovingNSNulls];
  id v16 = [v15 mutableCopy];

  if ([v11 count])
  {
    uint64_t v53 = v13;
    id v45 = v12;
    id v47 = v10;
    BOOL v48 = v6;
    __n128 v50 = v3;
    uint64_t v17 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v11 count]);
    uint64_t v49 = a1;
    id v18 = [*(id *)(a1 + 32) annotationProvider];
    v60[0] = _NSConcreteStackBlock;
    v60[1] = 3221225472;
    v60[2] = sub_10017A0DC;
    v60[3] = &unk_100A48D90;
    id v19 = v17;
    id v61 = v19;
    id v51 = v16;
    [v18 onGlobalAnnotationsForAssetIDs:v16 performBlockAndWait:v60];

    long long v58 = 0u;
    long long v59 = 0u;
    long long v56 = 0u;
    long long v57 = 0u;
    id v46 = v11;
    id obj = v11;
    id v20 = [obj countByEnumeratingWithState:&v56 objects:v63 count:16];
    if (v20)
    {
      id v21 = v20;
      uint64_t v22 = *(void *)v57;
      do
      {
        for (uint64_t i = 0; i != v21; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v57 != v22) {
            objc_enumerationMutation(obj);
          }
          id v24 = *(id *)(*((void *)&v56 + 1) + 8 * i);
          long long v25 = [v24 assetID];
          long long v26 = [v19 objectForKeyedSubscript:v25];

          if (v26)
          {
            [v26 highWaterMark];
            long long v27 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
            long long v28 = [v27 bc_clampedToUnitIntervalOrNegativeOne];
            unsigned int v29 = [v24 setDifferentNumber:v28 forKey:@"bookHighWaterMarkProgress"];

            if (v29)
            {
              id v30 = [v24 assetID];
              [v51 removeObject:v30];
            }
            [v26 readingProgress];
            id v31 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
            id v32 = [v31 bc_assertClampedToUnitInterval];
            unsigned int v33 = [v24 setDifferentNumber:v32 forKey:@"readingProgress"];

            if ((v33 | v29) == 1)
            {
              uint64_t v34 = [v24 localOnlySeriesItemsParent];
              long long v35 = [v34 assetID];
              long long v36 = [v24 localOnlySeriesItemsParent];
              [v36 setAssetID:v35];

              unsigned int v37 = [v24 purchasedAndLocalParent];
              __n128 v38 = [v37 assetID];
              uint64_t v39 = [v24 purchasedAndLocalParent];
              [v39 setAssetID:v38];
            }
          }
          uint64_t v40 = [v24 seriesID];

          if (v40)
          {
            __n128 v41 = [v24 seriesID];
            [v53 addObject:v41];
          }
        }
        id v21 = [obj countByEnumeratingWithState:&v56 objects:v63 count:16];
      }
      while (v21);
    }

    long long v13 = v53;
    if ([v53 count])
    {
      __n128 v42 = [*(id *)(v49 + 32) processSeriesBooksQueue];
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10017A240;
      block[3] = &unk_100A43DD8;
      void block[4] = *(void *)(v49 + 32);
      id v55 = v53;
      dispatch_async(v42, block);
    }
    id v3 = v50;
    unsigned int v6 = v48;
    id v16 = v51;
    if ([v50 hasChanges])
    {
      __n128 v43 = [*(id *)(v49 + 32) libraryManager];
      [v43 saveManagedObjectContext:v50];
    }
    id v11 = v46;
    id v10 = v47;
    if ([v51 count])
    {
      __n128 v44 = [*(id *)(v49 + 32) delegate];
      [v44 processedButNoHighWaterUpdateForAssetsWithIDs:v51];
    }
    id v12 = v45;
  }
  kdebug_trace();
}

void sub_10017A0DC(uint64_t a1, void *a2)
{
  id v3 = a2;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  id v4 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v17;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v17 != v6) {
          objc_enumerationMutation(v3);
        }
        char v8 = *(void **)(*((void *)&v16 + 1) + 8 * (void)v7);
        uint64_t v9 = [BKLibraryAssetIsNewManagerProgressInfo alloc];
        [v8 readingProgress];
        double v11 = v10;
        [v8 readingProgressHighWaterMark];
        long long v13 = [(BKLibraryAssetIsNewManagerProgressInfo *)v9 initWithReadingProgress:v11 highWaterMark:v12];
        id v14 = *(void **)(a1 + 32);
        id v15 = [v8 annotationAssetID];
        [v14 setObject:v13 forKeyedSubscript:v15];

        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v5 = [v3 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v5);
  }
}

void sub_10017A240(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) seriesIDsToResetNext];
  [v2 unionSet:*(void *)(a1 + 40)];

  id v3 = [*(id *)(a1 + 32) coalescedResetNextInSeries];
  [v3 signalWithCompletion:&stru_100A48DB0];
}

void sub_10017A66C(uint64_t a1)
{
  char v2 = [*(id *)(a1 + 32) libraryManager];
  id v3 = [v2 newManagedObjectContext];

  id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"NewMOC 3 %s %@", "-[BKLibraryAssetIsNewManager p_processEpubIDForAssetIDs:]_block_invoke", *(void *)(a1 + 40));
  [v3 setName:v4];

  [v3 setSessionContextType:4];
  id v5 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  uint64_t v6 = +[BKLibraryManager predicateForLocalAssetsNeedingEpubIDUpdatesFromAssetIDs:*(void *)(a1 + 40)];
  [v5 setPredicate:v6];

  [v5 setReturnsObjectsAsFaults:0];
  id v10 = 0;
  id v7 = [v3 executeFetchRequest:v5 error:&v10];
  id v8 = v10;
  if ([v7 count]) {
    [*(id *)(a1 + 32) p_processEpubIDForLibraryAssets:v7 handlingEpubID:0 foundAssetHandler:0];
  }
  if ([v3 hasChanges])
  {
    uint64_t v9 = [*(id *)(a1 + 32) libraryManager];
    [v9 saveManagedObjectContext:v3];
  }
}

id sub_10017A860(uint64_t a1)
{
  return [*(id *)(a1 + 32) updateLibraryAssetEpubIDsHandling:0 foundAssetHandler:0];
}

void sub_10017A948(uint64_t a1)
{
  kdebug_trace();
  char v2 = [*(id *)(a1 + 32) libraryManager];
  id v3 = [v2 newManagedObjectContext];

  id v4 = +[NSString stringWithFormat:](NSString, "stringWithFormat:", @"NewMOC 6 %s %@", "-[BKLibraryAssetIsNewManager updateLibraryAssetEpubIDsHandling:foundAssetHandler:]_block_invoke", *(void *)(a1 + 40));
  [v3 setName:v4];

  [v3 setSessionContextType:4];
  id v5 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  uint64_t v6 = +[BKLibraryManager predicateForLocalAssetsNeedingEpubIDUpdates];
  [v5 setPredicate:v6];

  [v5 setReturnsObjectsAsFaults:0];
  id v9 = 0;
  id v7 = [v3 executeFetchRequest:v5 error:&v9];
  id v8 = v9;
  if (v7 && [v7 count]) {
    [*(id *)(a1 + 32) p_processEpubIDForLibraryAssets:v7 handlingEpubID:*(void *)(a1 + 40) foundAssetHandler:*(void *)(a1 + 48)];
  }
  [v3 saveLibrary];
  kdebug_trace();
}

void sub_10017B318(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_10017B33C(uint64_t a1, void *a2, void *a3)
{
  id v4 = a2;
  id v25 = a3;
  id v5 = objc_opt_new();
  long long v31 = 0u;
  long long v32 = 0u;
  long long v33 = 0u;
  long long v34 = 0u;
  id v6 = v4;
  id v7 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
  if (v7)
  {
    uint64_t v8 = *(void *)v32;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v32 != v8) {
          objc_enumerationMutation(v6);
        }
        id v10 = *(void **)(*((void *)&v31 + 1) + 8 * i);
        double v11 = [v10 localReadPercent];
        float v12 = [v10 collection];
        long long v13 = [v12 bk_localBookmarkTimestamp];
        id v14 = v13;
        if (v13)
        {
          id v15 = v13;
        }
        else
        {
          id v15 = +[NSDate distantPast];
        }
        long long v16 = v15;

        long long v17 = [v10 assetID];
        if (v17)
        {
          [v11 doubleValue];
          BOOL v19 = v18 > 0.0;

          if (v19)
          {
            v35[0] = v11;
            v35[1] = v11;
            v35[2] = v16;
            id v20 = +[NSArray arrayWithObjects:v35 count:3];
            id v21 = [v10 assetID];
            [v5 setObject:v20 forKeyedSubscript:v21];
          }
        }
      }
      id v7 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
    }
    while (v7);
  }

  uint64_t v22 = *(void **)(a1 + 32);
  uint64_t v23 = *(void *)(a1 + 40);
  v27[0] = _NSConcreteStackBlock;
  v27[1] = 3221225472;
  v27[2] = sub_10017B5FC;
  v27[3] = &unk_100A48DD8;
  objc_copyWeak(&v30, (id *)(a1 + 56));
  id v24 = v5;
  id v28 = v24;
  id v29 = *(id *)(a1 + 48);
  [v22 fetchAssetsWithIDs:v23 type:1 completion:v27];

  objc_destroyWeak(&v30);
}

void sub_10017B5E0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10017B5FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v29 = WeakRetained;
    id v30 = v3;
    long long v33 = 0u;
    long long v34 = 0u;
    long long v31 = 0u;
    long long v32 = 0u;
    id v6 = v3;
    id v7 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
    if (v7)
    {
      id v8 = v7;
      uint64_t v9 = *(void *)v32;
      do
      {
        for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v32 != v9) {
            objc_enumerationMutation(v6);
          }
          double v11 = *(void **)(*((void *)&v31 + 1) + 8 * i);
          float v12 = [v11 cloudReadPercent:v29, v30, v31];
          long long v13 = [v11 collection];
          id v14 = [v13 bk_cloudBookmarkTimestamp];
          id v15 = v14;
          if (v14)
          {
            id v16 = v14;
          }
          else
          {
            id v16 = +[NSDate distantPast];
          }
          long long v17 = v16;

          uint64_t v18 = [v11 assetID];
          if (v18)
          {
            BOOL v19 = (void *)v18;
            [v12 doubleValue];
            double v21 = v20;

            if (v21 > 0.0)
            {
              v35[0] = v12;
              v35[1] = v12;
              v35[2] = v17;
              uint64_t v22 = +[NSArray arrayWithObjects:v35 count:3];
              uint64_t v23 = *(void **)(a1 + 32);
              id v24 = [v11 assetID];
              [v23 setObject:v22 forKeyedSubscript:v24];
            }
          }
        }
        id v8 = [v6 countByEnumeratingWithState:&v31 objects:v36 count:16];
      }
      while (v8);
    }

    id v25 = objc_retainBlock(*(id *)(a1 + 40));
    long long v26 = v25;
    if (v25) {
      (*((void (**)(id, void))v25 + 2))(v25, *(void *)(a1 + 32));
    }

    id v5 = v29;
    id v3 = v30;
  }
  else
  {
    id v27 = objc_retainBlock(*(id *)(a1 + 40));
    id v28 = v27;
    if (v27) {
      (*((void (**)(id, void))v27 + 2))(v27, 0);
    }
  }
}

void sub_10017B8F0(id a1)
{
  uint64_t v1 = sub_100078290();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "migrateAudiobookProgressIfNeeded: migration done", v2, 2u);
  }
}

void sub_10017BA74(uint64_t a1, void *a2)
{
  id v2 = a2;
  id v3 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  uint64_t v4 = +[BKLibraryManager predicateForAllOwnedAudiobooks];
  id v30 = +[BKLibraryManager predicateToExcludeSeriesLibraryAssets];
  long long v31 = (void *)v4;
  v45[0] = v4;
  v45[1] = v30;
  id v5 = +[NSArray arrayWithObjects:v45 count:2];
  id v6 = +[NSCompoundPredicate andPredicateWithSubpredicates:v5];

  [v3 setPredicate:v6];
  id v41 = 0;
  long long v32 = v3;
  long long v33 = v2;
  id v7 = [v2 executeFetchRequest:v3 error:&v41];
  id v28 = v41;
  id v8 = sub_100078290();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = [v7 count];
    *(_DWORD *)buf = 134217984;
    id v44 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "fetching owned audiobook libraryAssets libraryAssets.count=%ld", buf, 0xCu);
  }

  id v10 = +[NSMutableArray array];
  double v11 = +[NSMutableArray array];
  long long v37 = 0u;
  long long v38 = 0u;
  long long v39 = 0u;
  long long v40 = 0u;
  id v12 = v7;
  id v13 = [v12 countByEnumeratingWithState:&v37 objects:v42 count:16];
  if (v13)
  {
    id v14 = v13;
    uint64_t v15 = *(void *)v38;
    do
    {
      for (uint64_t i = 0; i != v14; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v38 != v15) {
          objc_enumerationMutation(v12);
        }
        long long v17 = *(void **)(*((void *)&v37 + 1) + 8 * i);
        uint64_t v18 = [v17 assetID];
        id v19 = [v18 length];

        if (v19)
        {
          unsigned int v20 = [v17 isCloud];
          double v21 = [v17 assetID];
          if (v20) {
            uint64_t v22 = v11;
          }
          else {
            uint64_t v22 = v10;
          }
          [v22 addObject:v21];
        }
      }
      id v14 = [v12 countByEnumeratingWithState:&v37 objects:v42 count:16];
    }
    while (v14);
  }

  id v23 = [v11 count];
  uint64_t v24 = (uint64_t)v23 + (void)[v10 count];
  if (v24 < 1)
  {
    long long v26 = sub_100078290();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "No audiobooks found.  Setting audiobook migration complete, there is nothing to migrate.", buf, 2u);
    }

    [*(id *)(a1 + 32) setAudiobookProgressMigrationComplete:1];
    [*(id *)(a1 + 32) setCoalescedMigrateAudiobookProgress:0];
    id v27 = +[NSNotificationCenter defaultCenter];
    [v27 removeObserver:*(void *)(a1 + 32) name:MPMediaLibraryDidChangeNotification object:0];
  }
  else
  {
    id v25 = *(void **)(a1 + 32);
    v34[0] = _NSConcreteStackBlock;
    v34[1] = 3221225472;
    void v34[2] = sub_10017BE58;
    _OWORD v34[3] = &unk_100A48E70;
    _OWORD v34[4] = v25;
    id v35 = v6;
    uint64_t v36 = v24;
    [v25 _alternateProgressInfoForLocalAssetIDs:v10 cloudAssetIDs:v11 completion:v34];
  }
}

void sub_10017BE58(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = [*(id *)(a1 + 32) libraryManager];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_10017BF28;
  v7[3] = &unk_100A48E48;
  id v8 = *(id *)(a1 + 40);
  id v9 = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v11 = v5;
  id v6 = v3;
  [v4 performBlockOnWorkerQueue:v7];
}

void sub_10017BF28(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  [v4 setPredicate:*(void *)(a1 + 32)];
  id v50 = 0;
  __n128 v42 = v4;
  __n128 v43 = v3;
  uint64_t v5 = [v3 executeFetchRequest:v4 error:&v50];
  id v41 = v50;
  long long v46 = 0u;
  long long v47 = 0u;
  long long v48 = 0u;
  long long v49 = 0u;
  id obj = v5;
  id v6 = [obj countByEnumeratingWithState:&v46 objects:v55 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v47;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v47 != v8) {
          objc_enumerationMutation(obj);
        }
        uint64_t v10 = *(void **)(*((void *)&v46 + 1) + 8 * i);
        uint64_t v11 = *(void **)(a1 + 40);
        id v12 = [v10 assetID];
        id v13 = [v11 objectForKeyedSubscript:v12];

        if ([v13 count] == (id)3)
        {
          objc_opt_class();
          id v14 = [v13 objectAtIndexedSubscript:2];
          uint64_t v15 = BUDynamicCast();

          uint64_t v16 = [v10 lastOpenDate];
          if (!v16
            || (long long v17 = (void *)v16,
                [v10 lastOpenDate],
                uint64_t v18 = objc_claimAutoreleasedReturnValue(),
                id v19 = [v15 compare:v18],
                v18,
                v17,
                v19 == (id)1))
          {
            unsigned int v20 = [v13 objectAtIndexedSubscript:0];
            double v21 = [v20 bc_assertClampedToUnitInterval];
            [v10 setReadingProgress:v21];

            uint64_t v22 = [v10 bookHighWaterMarkProgress];
            [v22 floatValue];
            float v24 = v23;

            id v25 = [v13 objectAtIndexedSubscript:1];
            long long v26 = [v25 bc_clampedToUnitIntervalOrNegativeOne];
            [v26 floatValue];
            float v28 = v27;

            if (v24 >= v28) {
              *(float *)&double v29 = v24;
            }
            else {
              *(float *)&double v29 = v28;
            }
            id v30 = +[NSNumber numberWithFloat:v29];
            [v10 setBookHighWaterMarkProgress:v30];
          }
        }
      }
      id v7 = [obj countByEnumeratingWithState:&v46 objects:v55 count:16];
    }
    while (v7);
  }

  if ([v43 hasChanges])
  {
    id v45 = 0;
    [v43 save:&v45];
    id v31 = v45;
    if (v31)
    {
      long long v32 = sub_100078290();
      if (os_log_type_enabled(v32, OS_LOG_TYPE_ERROR)) {
        sub_1007EDC3C((uint64_t)v31, v32);
      }
    }
  }
  double v33 = (double)(unint64_t)[*(id *)(a1 + 40) count];
  double v34 = (double)*(uint64_t *)(a1 + 56) * 0.5;
  id v35 = sub_100078290();
  BOOL v36 = os_log_type_enabled(v35, OS_LOG_TYPE_DEFAULT);
  if (v34 >= v33)
  {
    if (v36)
    {
      id v39 = [*(id *)(a1 + 40) count];
      uint64_t v40 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 134218240;
      id v52 = v39;
      __int16 v53 = 2048;
      uint64_t v54 = v40;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Audiobook progress migration incomplete.  Updated %lu audiobooks of %lu.", buf, 0x16u);
    }
  }
  else
  {
    if (v36)
    {
      id v37 = [*(id *)(a1 + 40) count];
      uint64_t v38 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 134218240;
      id v52 = v37;
      __int16 v53 = 2048;
      uint64_t v54 = v38;
      _os_log_impl((void *)&_mh_execute_header, v35, OS_LOG_TYPE_DEFAULT, "Audiobook progress migration complete.  Updated %lu audiobooks of %lu.", buf, 0x16u);
    }

    [*(id *)(a1 + 48) setAudiobookProgressMigrationComplete:1];
    [*(id *)(a1 + 48) setCoalescedMigrateAudiobookProgress:0];
    id v35 = +[NSNotificationCenter defaultCenter];
    [v35 removeObserver:*(void *)(a1 + 48) name:MPMediaLibraryDidChangeNotification object:0];
  }
}

void sub_10017C590(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, id location)
{
  objc_destroyWeak(v20);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10017C5B4(uint64_t a1, void *a2, void *a3, double a4)
{
  id v7 = a2;
  id v8 = a3;
  double v9 = *(double *)(a1 + 56);
  if (v9 <= a4) {
    double v9 = a4;
  }
  BOOL v11 = a4 != 0.0 && *(unsigned char *)(a1 + 72) != 0;
  BOOL v13 = v9 > *(double *)(a1 + 64) + -120.0 && *(unsigned char *)(a1 + 73) == 0;
  if (v11 || v13)
  {
    id v14 = [*(id *)(a1 + 32) libraryManager];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    v15[2] = sub_10017C708;
    v15[3] = &unk_100A48EC0;
    objc_copyWeak(&v17, (id *)(a1 + 48));
    id v16 = *(id *)(a1 + 40);
    BOOL v18 = v11;
    BOOL v19 = v13;
    [v14 performBlockOnWorkerQueue:v15];

    objc_destroyWeak(&v17);
  }
}

void sub_10017C6F4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10017C708(uint64_t a1, void *a2)
{
  id v3 = (id *)(a1 + 40);
  id v4 = a2;
  id WeakRetained = objc_loadWeakRetained(v3);
  id v6 = [WeakRetained libraryManager];
  id v7 = [v6 libraryMutableAssetWithAssetID:*(void *)(a1 + 32) inManagedObjectContext:v4];

  if (*(unsigned char *)(a1 + 48)) {
    [v7 setIsNew:0];
  }
  if (*(unsigned char *)(a1 + 49))
  {
    v31[0] = BKLibraryAssetMarkedLocation;
    v31[1] = BKLibraryAssetIDKey;
    uint64_t v8 = *(void *)(a1 + 32);
    v32[0] = BALocationTypePostReading;
    v32[1] = v8;
    double v9 = +[NSDictionary dictionaryWithObjects:v32 forKeys:v31 count:2];
    [v7 setFinishedStateUserSetsFinished:1 userInfo:v9];

    uint64_t v10 = [WeakRetained delegate];
    uint64_t v11 = *(void *)(a1 + 32);
    id v12 = [v7 dateFinished];
    [v10 willMarkAsset:v11 finished:1 finishedDate:v12];

    if ([v7 isOwned])
    {
      BOOL v13 = [v7 storeID];
      if ([v13 length]) {
        uint64_t v14 = 1;
      }
      else {
        uint64_t v14 = 2;
      }
    }
    else
    {
      uint64_t v14 = 0;
    }
    id v15 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)[v7 contentType]);
    id v16 = [v7 supplementalContentAssets];
    id v17 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v16 count]);

    BOOL v18 = +[BAEventReporter sharedReporter];
    id v19 = [v18 seriesTypeForContentID:*(void *)(a1 + 32)];

    if ([v7 isAudiobook])
    {
      unsigned int v20 = [v7 hasRACSupport];
      if ([v20 BOOLValue]) {
        uint64_t v21 = 1;
      }
      else {
        uint64_t v21 = 2;
      }
    }
    else
    {
      uint64_t v21 = 0;
    }
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10017C9EC;
    block[3] = &unk_100A48E98;
    id v22 = *(id *)(a1 + 32);
    uint64_t v27 = v14;
    id v28 = v15;
    id v25 = v22;
    id v26 = v17;
    id v29 = v19;
    uint64_t v30 = v21;
    id v23 = v17;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_10017C9EC(void *a1)
{
  id v2 = +[BAEventReporter sharedReporter];
  [v2 emitMarkAsFinishedEventWithTracker:0 contentID:a1[4] contentAcquisitionType:a1[6] contentType:a1[7] supplementalContentCount:a1[5] seriesType:a1[8] productionType:a1[9]];
}

void sub_10017F758(id *a1, void *a2)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10017F858;
  _OWORD v4[3] = &unk_100A48F58;
  id v5 = a2;
  id v6 = a1[4];
  id v7 = a1[5];
  id v8 = a1[6];
  id v10 = a1[8];
  id v9 = a1[7];
  id v3 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_10017F858(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) objectForKeyedSubscript:*(void *)(a1 + 40)];
  id v3 = [[BKAudiobookPreviewHelper alloc] initWithMAsset:*(void *)(a1 + 48) lockupProfile:v2];
  if (objc_opt_respondsToSelector())
  {
    id v4 = [(BKAudiobookPreviewHelper *)v3 helperMinifiedController];
    [*(id *)(a1 + 56) setMinifiedController:v4];
  }
  else
  {
    [*(id *)(a1 + 56) setMinifiedController:0];
  }
  id v5 = *(void **)(a1 + 56);
  id v6 = [v5 minifiedController];
  [v6 setMinifiedControllerDelegate:v5];

  id v7 = [*(id *)(a1 + 56) minifiedController];
  id v8 = BUProtocolCast();
  id v9 = [*(id *)(a1 + 56) touchVC];
  [v9 setDelegate:v8];

  id v10 = [*(id *)(a1 + 56) touchVC];
  v21[0] = _NSConcreteStackBlock;
  v21[1] = 3221225472;
  v21[2] = sub_10017FB80;
  _OWORD v21[3] = &unk_100A443F0;
  id v23 = *(id *)(a1 + 72);
  id v22 = *(id *)(a1 + 56);
  [v10 setHelper:v3 completion:v21];

  uint64_t v11 = +[BKAudiobookNowPlayingModuleFactory instantiate];
  id v12 = [*(id *)(a1 + 48) id];
  BOOL v13 = +[BKAssetID identifierWithAssetID:v12];

  uint64_t v14 = [(BKBasePresentingViewController *)[BKAudiobookPreviewPresentingViewController alloc] initWithAssetIdentifier:v13 assetViewController:v11 helper:v3 libraryAssetProvider:0];
  [(BKBasePresentingViewController *)v14 setOpenOptions:*(void *)(a1 + 64)];
  [v11 setHelper:v3 completion:&stru_100A48F30];
  objc_opt_class();
  id v15 = BUClassAndProtocolCast();
  id v16 = +[BKAppDelegate sceneManager];
  id v17 = [v16 primarySceneController];
  BOOL v18 = [v17 rootBarCoordinator];

  [v18 registerFullPlayer:v15];
  objc_opt_class();
  id v19 = [*(id *)(a1 + 64) objectForKeyedSubscript:@"fullScreen"];
  unsigned int v20 = BUDynamicCast();
  LODWORD(v17) = [v20 BOOLValue];

  if (v17) {
    [v18 presentFullPlayer:v15 completion:0];
  }
}

void sub_10017FB80(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void))v2 + 2))(v2, *(void *)(a1 + 32));
    id v2 = v3;
  }
}

id sub_10017FDAC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) set:a2 error:a3];
}

void sub_10017FE70(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10017FE8C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v5 = [WeakRetained assetViewControllerFuture];

  if (!v5)
  {
    id v6 = [WeakRetained minifiedAssetPresenterAssetID];
    id v7 = [WeakRetained options];
    id v8 = [WeakRetained _futureViewControllerWithAssetID:v6 options:v7];
    [WeakRetained setAssetViewControllerFuture:v8];
  }
  id v9 = [WeakRetained assetViewControllerFuture];
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_10017FFBC;
  v11[3] = &unk_100A49010;
  id v12 = v3;
  id v10 = v3;
  [v9 get:v11];
}

uint64_t sub_10017FFBC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100184F18(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) name];
  [v1 startedSubTest:@"page-turn" forTest:v2 withMetrics:&off_100A83618];
}

void sub_100185410(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, id location)
{
  objc_destroyWeak(v15);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100185438(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained setResult:0];
  uint64_t v1 = [WeakRetained onTestFinished];
  v1[2]();
}

id sub_100185EEC(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishPPTTestWithResult:0];
}

void sub_100186100(uint64_t a1)
{
  [*(id *)(a1 + 32) setResult:*(unsigned char *)(a1 + 40) == 0];
  id v2 = [*(id *)(a1 + 32) onTestFinished];
  v2[2]();
}

void sub_100186430(uint64_t a1)
{
  [*(id *)(a1 + 32) setResult:0];
  id v2 = [*(id *)(a1 + 32) onTestFinished];
  v2[2]();
}

void sub_100188078(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,char a29)
{
}

void sub_1001880C8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) dataSource];
  id v3 = BUProtocolCast();

  id v4 = [*(id *)(a1 + 40) items];
  id v5 = [v4 objectAtIndexedSubscript:0];

  objc_opt_class();
  id v6 = [v5 dragItem];
  id v7 = [v6 localObject];
  id v8 = BUDynamicCast();

  id v9 = [v3 indexPathForRepresentedObject:v8];
  id v10 = [(char *)[*(id *)(a1 + 32) numberOfItemsInSection:[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) section]] - 1];
  if ((uint64_t)[*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) item] >= (uint64_t)v10)
  {
    uint64_t v11 = +[NSIndexPath indexPathForItem:inSection:](NSIndexPath, "indexPathForItem:inSection:", v10, [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) section]);
    uint64_t v12 = *(void *)(*(void *)(a1 + 48) + 8);
    BOOL v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 40) = v11;
  }
  uint64_t v14 = [*(id *)(a1 + 32) dataSource];
  [v14 collectionView:*(void *)(a1 + 32) moveItemAtIndexPath:v9 toIndexPath:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];

  id v15 = *(void **)(a1 + 32);
  unsigned int v20 = v9;
  id v16 = +[NSArray arrayWithObjects:&v20 count:1];
  [v15 deleteItemsAtIndexPaths:v16];

  id v17 = *(void **)(a1 + 32);
  uint64_t v19 = *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40);
  BOOL v18 = +[NSArray arrayWithObjects:&v19 count:1];
  [v17 insertItemsAtIndexPaths:v18];
}

id sub_100189164()
{
  if (qword_100B4A560 != -1) {
    dispatch_once(&qword_100B4A560, &stru_100A49090);
  }
  v0 = (void *)qword_100B4A558;

  return v0;
}

void sub_1001891B8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.iBooks", "BKMinifiedAssetPresenter");
  id v2 = (void *)qword_100B4A558;
  qword_100B4A558 = (uint64_t)v1;
}

void sub_10018938C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_1001893AC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = (id *)(a1 + 40);
  id v7 = a4;
  id v12 = a2;
  id WeakRetained = objc_loadWeakRetained(v6);
  id v9 = [WeakRetained minifiedController];
  [v9 setMinifiedControllerLoadedAssetViewController:v12];

  id v10 = objc_loadWeakRetained(v6);
  uint64_t v11 = [v10 minifiedController];
  [v11 minifiedControllerDidLoadAsset];

  [*(id *)(a1 + 32) set:v12 error:v7];
}

void sub_100189470(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  if ([v6 code] == (id)1)
  {
    id v4 = [v6 domain];
    unsigned int v5 = [v4 isEqualToString:BCFutureErrorDomain];

    if (v5) {
      [*(id *)(a1 + 32) cancel];
    }
  }
}

void sub_100189C00(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100189164();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v5 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v27 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "minimizedPresenterWithLibraryAsset logID:%{public}@ got BKAsset", buf, 0xCu);
  }

  if (*(unsigned char *)(a1 + 88))
  {
    id v6 = [v3 title];
    id v7 = +[MPMediaItem bk_audioBookAssetURLWithAlbumTitle:v6 isCloudItem:1];
  }
  else
  {
    id v7 = [v3 url];
  }
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_100189EB4;
  v14[3] = &unk_100A490E0;
  id v15 = *(id *)(a1 + 40);
  id v8 = v3;
  id v16 = v8;
  id v17 = *(id *)(a1 + 48);
  id v18 = *(id *)(a1 + 32);
  id v9 = v7;
  uint64_t v10 = *(void *)(a1 + 80);
  id v19 = v9;
  uint64_t v23 = v10;
  id v20 = *(id *)(a1 + 56);
  id v21 = *(id *)(a1 + 64);
  char v24 = *(unsigned char *)(a1 + 89);
  __int16 v25 = *(_WORD *)(a1 + 90);
  id v22 = *(id *)(a1 + 72);
  uint64_t v11 = objc_retainBlock(v14);
  if (v11)
  {
    if (+[NSThread isMainThread])
    {
      ((void (*)(void *))v11[2])(v11);
    }
    else
    {
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_10018A1C8;
      block[3] = &unk_100A442B8;
      BOOL v13 = v11;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

void sub_100189EB4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) mutableCopy];
  id v3 = [*(id *)(a1 + 40) storeID];
  uint64_t v4 = (uint64_t)[v3 longLongValue];

  if (v4 >= 1)
  {
    uint64_t v5 = [*(id *)(a1 + 40) storeID];
    [v2 setObject:v5 forKeyedSubscript:@"storeID"];
  }
  if ([*(id *)(a1 + 48) length]) {
    [v2 setObject:*(void *)(a1 + 48) forKeyedSubscript:@"assetID"];
  }
  if ([*(id *)(a1 + 56) length]) {
    [v2 setObject:*(void *)(a1 + 56) forKeyedSubscript:AEAssetLogID];
  }
  id v6 = sub_100189164();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    id v7 = *(void **)(a1 + 56);
    int v20 = 138543362;
    id v21 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "minimizedPresenterWithLibraryAsset Creating Helper for logID:%{public}@", (uint8_t *)&v20, 0xCu);
  }

  if (*(void *)(a1 + 64))
  {
    id v8 = +[AEPluginRegistry sharedInstance];
    id v9 = [v8 pluginForURL:*(void *)(a1 + 64)];
  }
  else
  {
    id v9 = 0;
  }
  uint64_t v10 = [v9 helperForURL:*(void *)(a1 + 64) withOptions:v2];
  uint64_t v11 = BUProtocolCast();

  if (objc_opt_respondsToSelector())
  {
    id v12 = [v11 helperMinifiedController];
    if (v12)
    {
      id v13 = objc_alloc(*(Class *)(a1 + 96));
      uint64_t v14 = [*(id *)(a1 + 72) assetID];
      id v15 = [v13 initWithAssetID:v14 helper:v11 minifiedController:v12 options:v2 presenter:*(void *)(a1 + 80)];
    }
    else
    {
      id v15 = 0;
    }
  }
  else
  {
    id v15 = 0;
    id v12 = 0;
  }
  id v16 = sub_100189164();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v17 = *(void *)(a1 + 56);
    int v20 = 138412546;
    id v21 = v15;
    __int16 v22 = 2114;
    uint64_t v23 = v17;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "minimizedPresenterWithLibraryAsset Got minified asset presenter %@, logID:%{public}@", (uint8_t *)&v20, 0x16u);
  }

  [v15 setMinifiedAssetPresenterIsAudiobook:*(unsigned __int8 *)(a1 + 104)];
  [v15 setMinifiedAssetPresenterCanStayOpenInBackground:*(unsigned __int8 *)(a1 + 104)];
  [v15 setMinifiedAssetPresenterIsSupplementalContent:*(unsigned __int8 *)(a1 + 105)];
  [v15 setMinifiedAssetPresenterWorkaround36067646:*(unsigned __int8 *)(a1 + 106)];
  id v18 = objc_retainBlock(*(id *)(a1 + 88));
  id v19 = v18;
  if (v18) {
    (*((void (**)(id, id))v18 + 2))(v18, v15);
  }
}

uint64_t sub_10018A1C8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_10018A314(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return [*(id *)(a1 + 32) set:a2 error:a3];
}

void sub_10018A4E4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_10018A500(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v4 = (id *)(a1 + 32);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if ([WeakRetained minifiedAssetPresenterWorkaround36067646])
  {
    id v6 = [WeakRetained assetViewControllerFuture];
    [v6 cancel];

    [WeakRetained setAssetViewControllerFuture:0];
  }
  id v7 = [WeakRetained assetViewControllerFuture];

  if (!v7)
  {
    id v8 = [WeakRetained minifiedAssetPresenterAssetID];
    id v9 = [WeakRetained options];
    uint64_t v10 = [WeakRetained _futureViewControllerWithAssetID:v8 options:v9];
    [WeakRetained setAssetViewControllerFuture:v10];
  }
  uint64_t v11 = [WeakRetained assetViewControllerFuture];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  long long v13[2] = sub_10018A690;
  v13[3] = &unk_100A49130;
  id v12 = v3;
  id v14 = v12;
  objc_copyWeak(&v15, v4);
  [v11 get:v13];

  objc_destroyWeak(&v15);
}

void sub_10018A67C(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10018A690(uint64_t a1, void *a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 32);
  uint64_t v5 = (id *)(a1 + 40);
  id v6 = a3;
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained(v5);
  id v8 = [WeakRetained helper];
  (*(void (**)(uint64_t, id, void *, id))(v4 + 16))(v4, v7, v8, v6);
}

void sub_10018B034(uint64_t a1)
{
  if (!*(void *)(*(void *)(a1 + 32) + 16)) {
    return;
  }
  uint64_t v2 = +[BKLibraryManager defaultManager];
  id v8 = [v2 libraryAssetOnMainQueueWithPermanentOrTemporaryAssetID:*(void *)(*(void *)(a1 + 32) + 8)];

  id v3 = [v8 dataSourceIdentifier];
  if (![v3 isEqualToString:@"com.apple.ibooks.plist.untethered"]) {
    goto LABEL_7;
  }
  unsigned int v4 = [v8 state];

  if (v4 == 1)
  {
    id v5 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 16));
    id v6 = v5;
    if (v5) {
      (*((void (**)(id, id))v5 + 2))(v5, v8);
    }

    uint64_t v7 = *(void *)(a1 + 32);
    id v3 = *(void **)(v7 + 16);
    *(void *)(v7 + 16) = 0;
LABEL_7:
  }
}

id sub_10018B288(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) canModifyBackupFiles];
  if (result)
  {
    id v3 = *(void **)(a1 + 32);
    return _[v3 rewriteSyncSidecarWithCompletionBlock:0];
  }
  return result;
}

void sub_10018C4D0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) progressValue];
  if (v2) {
    double v3 = 1.0;
  }
  else {
    double v3 = 0.0;
  }
  unsigned int v4 = [*(id *)(a1 + 32) progressTrack];
  [v4 setAlpha:v3];

  id v8 = [*(id *)(a1 + 32) progressValue];
  [v8 floatValue];
  double v6 = v5;
  uint64_t v7 = [*(id *)(a1 + 32) progressTrack];
  [v7 setReadingProgress:v6];
}

void sub_10018C774(uint64_t a1)
{
  os_log_t v1 = *(unsigned char **)(a1 + 32);
  if (v1[8]) {
    double v2 = 1.0;
  }
  else {
    double v2 = 0.0;
  }
  id v3 = [v1 navBarForBackButton];
  [v3 setAlpha:v2];
}

void sub_10018D640(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) libraryAssetWithPermanentOrTemporaryAssetID:*(void *)(a1 + 40) inManagedObjectContext:a2];
  if (v3)
  {
    v29[0] = @"path";
    v29[1] = @"assetID";
    v29[2] = @"permlink";
    _OWORD v29[3] = @"temporaryAssetID";
    _OWORD v29[4] = @"title";
    v29[5] = @"storeID";
    unsigned int v4 = +[NSArray arrayWithObjects:v29 count:6];
    float v5 = [v3 propertiesForKeys:v4];

    v27[0] = 0;
    v27[1] = v27;
    v27[2] = 0x2020000000;
    char v28 = 1;
    dispatch_time_t v6 = dispatch_time(0, 30000000000);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10018D964;
    block[3] = &unk_100A49158;
    uint64_t v7 = *(void **)(a1 + 56);
    void block[4] = *(void *)(a1 + 48);
    id v26 = v27;
    id v23 = v7;
    id v8 = v5;
    id v24 = v8;
    id v25 = *(id *)(a1 + 80);
    dispatch_after(v6, (dispatch_queue_t)&_dispatch_main_q, block);
    uint64_t v9 = *(void *)(a1 + 48);
    uint64_t v10 = *(NSObject **)(v9 + 16);
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10018DAD0;
    v16[3] = &unk_100A491A8;
    v16[4] = v9;
    id v17 = *(id *)(a1 + 64);
    id v18 = v8;
    id v21 = v27;
    id v19 = *(id *)(a1 + 72);
    id v20 = *(id *)(a1 + 80);
    id v11 = v8;
    dispatch_async(v10, v16);

    _Block_object_dispose(v27, 8);
  }
  else
  {
    id v12 = BCImageCacheLog();
    if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
      sub_1007EDD4C(a1, v12);
    }

    id v13 = *(NSObject **)(*(void *)(a1 + 48) + 24);
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_10018DDA8;
    v14[3] = &unk_100A442B8;
    id v15 = *(id *)(a1 + 80);
    dispatch_async(v13, v14);
  }
}

void sub_10018D964(uint64_t a1)
{
  uint64_t v13 = 0;
  id v14 = &v13;
  uint64_t v15 = 0x2020000000;
  char v16 = 0;
  double v2 = (os_unfair_lock_s *)(*(void *)(a1 + 32) + 8);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  uint64_t v9 = sub_10018DAB8;
  uint64_t v10 = &unk_100A45F58;
  uint64_t v3 = *(void *)(a1 + 64);
  id v11 = &v13;
  uint64_t v12 = v3;
  unsigned int v4 = v8;
  os_unfair_lock_lock_with_options();
  v9((uint64_t)v4);
  os_unfair_lock_unlock(v2);

  if (*((unsigned char *)v14 + 24))
  {
    float v5 = BCImageCacheLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1007EDDC8();
    }

    id v6 = objc_retainBlock(*(id *)(a1 + 56));
    uint64_t v7 = v6;
    if (v6) {
      (*((void (**)(id, void))v6 + 2))(v6, 0);
    }
  }
  _Block_object_dispose(&v13, 8);
}

void sub_10018DA98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_10018DAB8(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8)
                                                                            + 24);
  return result;
}

void sub_10018DAD0(uint64_t a1)
{
  dispatch_semaphore_wait(*(dispatch_semaphore_t *)(*(void *)(a1 + 32) + 32), 0xFFFFFFFFFFFFFFFFLL);
  double v2 = *(void **)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10018DBAC;
  v5[3] = &unk_100A49180;
  uint64_t v4 = *(void *)(a1 + 72);
  void v5[4] = *(void *)(a1 + 32);
  uint64_t v8 = v4;
  id v6 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  [v2 bookCoverForLibraryAssetProperties:v3 size:CGSizeZero];
}

void sub_10018DBAC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  uint64_t v8 = (os_unfair_lock_s *)(*(void *)(a1 + 32) + 8);
  v18[0] = _NSConcreteStackBlock;
  v18[1] = 3221225472;
  void v18[2] = sub_10018DD2C;
  void v18[3] = &unk_100A44688;
  double v18[4] = *(void *)(a1 + 56);
  os_unfair_lock_lock_with_options();
  sub_10018DD2C((uint64_t)v18);
  os_unfair_lock_unlock(v8);
  if (v7)
  {
    uint64_t v9 = BCImageCacheLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_ERROR)) {
      sub_1007EDE44();
    }
  }
  uint64_t v10 = *(NSObject **)(*(void *)(a1 + 32) + 24);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  v14[2] = sub_10018DD3C;
  v14[3] = &unk_100A47D48;
  id v11 = *(id *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 32);
  id v15 = v6;
  uint64_t v16 = v12;
  id v17 = v11;
  id v13 = v6;
  dispatch_async(v10, v14);
}

uint64_t sub_10018DD2C(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 32) + 8) + 24) = 0;
  return result;
}

intptr_t sub_10018DD3C(uint64_t a1)
{
  double v2 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 48));
  if (v2) {
    v2[2](v2, [*(id *)(a1 + 32) CGImage]);
  }

  uint64_t v3 = *(NSObject **)(*(void *)(a1 + 40) + 32);

  return dispatch_semaphore_signal(v3);
}

void sub_10018DDA8(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, void))v1 + 2))(v1, 0);
    id v1 = v2;
  }
}

void sub_10018E9EC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018EA04(uint64_t a1)
{
  uint64_t v2 = objc_msgSend(objc_msgSend(*(id *)(a1 + 40), "imaxTargetClass"), "defaultManager");
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10018EB6C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018EB84(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) libraryAssetOnMainQueueWithAssetID:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10018ECE0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Block_object_dispose((const void *)(v9 - 64), 8);
  _Unwind_Resume(a1);
}

void sub_10018ED04(void *a1)
{
  id v1 = (void *)a1[4];
  uint64_t v2 = a1[5];
  uint64_t v3 = *(void *)(a1[6] + 8) + 24;
  uint64_t v4 = *(void *)(a1[7] + 8) + 24;
  id v5 = [v1 _bkaxUiChildContext];
  [v1 countOfSeriesLibraryAssetsWithSeriesID:v2 total:v3 purchased:v4 context:v5];
}

void sub_10018EE78(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10018EE90(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) imaxValueForKey:@"uiChildContext"];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10018F2C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,id location)
{
  objc_destroyWeak(v21);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10018F2EC(uint64_t a1)
{
  uint64_t v2 = +[NSMutableDictionary dictionary];
  uint64_t v3 = *(void *)(a1 + 32);
  uint64_t v4 = *(void **)(v3 + 48);
  *(void *)(v3 + 48) = v2;

  uint64_t v5 = +[NSMutableDictionary dictionary];
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(v6 + 56);
  *(void *)(v6 + 56) = v5;
}

void sub_10018F354(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_10018F410;
  v5[3] = &unk_100A449F0;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_10018F410(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v20 = WeakRetained;
  if (WeakRetained)
  {
    id v3 = [WeakRetained frc];
    id v4 = [v3 fetchedObjects];
    uint64_t v5 = [v4 valueForKey:@"assetID"];

    id v6 = [v20 frc];
    id v7 = [v6 fetchRequest];
    id v8 = [v7 copy];

    [v8 setPropertiesToFetch:&off_100A83630];
    uint64_t v9 = [v20 frc];
    uint64_t v10 = [v9 managedObjectContext];
    id v11 = [v10 executeFetchRequest:v8 error:0];
    uint64_t v12 = [v11 valueForKey:@"assetID"];

    id v13 = [v12 count];
    if (v13 != [v5 count] || (objc_msgSend(v12, "isEqualToArray:", v5) & 1) == 0)
    {
      id v14 = [v20 frc];
      [v14 performFetch:0];

      if ([v20 isSeries]) {
        [v20 _updateHasSeriesSequenceLabel];
      }
      id v15 = [v20 delegate];
      LOBYTE(v19) = 1;
      [v15 booksDataSource:v20 insertedSections:0 deletedSections:0 insertedItems:0 deletedItems:0 updatedItems:0 mayHaveZeroObjects:v19];
    }
    id v16 = objc_retainBlock(*(id *)(a1 + 32));
    id v17 = v16;
    if (v16) {
      (*((void (**)(id))v16 + 2))(v16);
    }
  }
  else
  {
    id v18 = objc_retainBlock(*(id *)(a1 + 32));
    uint64_t v5 = v18;
    if (v18) {
      (*((void (**)(id))v18 + 2))(v18);
    }
  }
}

void sub_10018FBE8(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 40));
  _Unwind_Resume(a1);
}

void sub_10018FBFC(uint64_t a1)
{
  uint64_t v2 = +[AEUserPublishing sharedInstance];
  uint64_t v3 = *(void *)(a1 + 32);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_10018FCDC;
  _OWORD v4[3] = &unk_100A49290;
  objc_copyWeak(&v6, (id *)(a1 + 48));
  id v5 = *(id *)(a1 + 40);
  [v2 productProfilesForStoreIDs:v3 completion:v4];

  objc_destroyWeak(&v6);
}

void sub_10018FCC8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10018FCDC(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    long long v23 = 0u;
    long long v24 = 0u;
    long long v21 = 0u;
    long long v22 = 0u;
    uint64_t v9 = [v6 allValues];
    id v10 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
    if (v10)
    {
      id v11 = v10;
      uint64_t v12 = *(void *)v22;
      do
      {
        for (uint64_t i = 0; i != v11; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v22 != v12) {
            objc_enumerationMutation(v9);
          }
          id v14 = *(void **)(*((void *)&v21 + 1) + 8 * i);
          [v14 calculateTrimmedStandardDescription];
          [v14 calculateTrimmedStandardNotes];
        }
        id v11 = [v9 countByEnumeratingWithState:&v21 objects:v25 count:16];
      }
      while (v11);
    }

    id v15 = [WeakRetained extendedDataAccessQueue];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    v16[2] = sub_10018FEC4;
    v16[3] = &unk_100A49268;
    id v17 = WeakRetained;
    id v18 = v6;
    id v20 = *(id *)(a1 + 32);
    id v19 = v7;
    dispatch_async(v15, v16);
  }
}

void sub_10018FEC4(id *a1)
{
  uint64_t v2 = [a1[4] productInfoData];
  [v2 addEntriesFromDictionary:a1[5]];

  uint64_t v3 = [a1[4] checkedProductProfileIDs];
  id v4 = [a1[5] allKeys];
  [v3 addObjectsFromArray:v4];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_10018FFD4;
  block[3] = &unk_100A47D48;
  id v8 = a1[7];
  id v6 = a1[5];
  id v7 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_10018FFD4(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(a1 + 40));
    id v2 = v3;
  }
}

void sub_100190280(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10019029C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    uint64_t v9 = [WeakRetained extendedDataAccessQueue];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001903A0;
    v10[3] = &unk_100A49268;
    void v10[4] = v8;
    id v11 = v5;
    id v13 = *(id *)(a1 + 32);
    id v12 = v6;
    dispatch_async(v9, v10);
  }
}

void sub_1001903A0(id *a1)
{
  id v2 = [a1[4] resourceCache];
  [v2 addEntriesFromDictionary:a1[5]];

  id v3 = [a1[4] checkedResourceIDs];
  id v4 = [a1[5] allKeys];
  [v3 addObjectsFromArray:v4];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001904B0;
  block[3] = &unk_100A47D48;
  id v8 = a1[7];
  id v6 = a1[5];
  id v7 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001904B0(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(a1 + 40));
    id v2 = v3;
  }
}

void sub_1001907C4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001907E8(uint64_t a1, void *a2)
{
  id v7 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v4 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = [WeakRetained delegate];
    id v6 = [v7 allKeys];
    [v5 booksDataSourceReloadAssetInfo:v4 forAssetIDs:v6];
  }
}

void sub_100190AF0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_100190B1C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v5 = WeakRetained;
  if (WeakRetained)
  {
    id v6 = [WeakRetained extendedDataAccessQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100190C18;
    block[3] = &unk_100A43FB8;
    objc_copyWeak(&v10, (id *)(a1 + 40));
    id v8 = *(id *)(a1 + 32);
    id v9 = v3;
    dispatch_async(v6, block);

    objc_destroyWeak(&v10);
  }
}

void sub_100190C18(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v4 = [WeakRetained checkedAssetIDs];
    [v4 removeAllObjects];

    id v5 = [v3 assetReviewData];
    [v5 removeAllObjects];

    id v6 = [v3 checkedAssetIDs];
    [v6 addObjectsFromArray:*(void *)(a1 + 32)];

    long long v20 = 0u;
    long long v21 = 0u;
    long long v18 = 0u;
    long long v19 = 0u;
    id v7 = *(id *)(a1 + 40);
    id v8 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
    if (v8)
    {
      id v9 = v8;
      uint64_t v10 = *(void *)v19;
      do
      {
        for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v19 != v10) {
            objc_enumerationMutation(v7);
          }
          id v12 = *(void **)(*((void *)&v18 + 1) + 8 * i);
          id v13 = [v12 assetReviewID];
          id v14 = +[BCAssetReview assetIDFromAssetReviewID:v13];

          if (v14)
          {
            id v15 = [v3 assetReviewData];
            [v15 setObject:v12 forKey:v14];
          }
        }
        id v9 = [v7 countByEnumeratingWithState:&v18 objects:v22 count:16];
      }
      while (v9);
    }

    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100190E30;
    block[3] = &unk_100A43D60;
    id v17 = v3;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100190E30(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) delegate];
  [v2 booksDataSourceReloadAssetReviewData:*(void *)(a1 + 32)];
}

void sub_100191144(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019115C(uint64_t a1)
{
  objc_opt_class();
  id v6 = [*(id *)(a1 + 32) productInfoData];
  id v2 = [v6 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = BUDynamicCast();
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100191324(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019133C(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) resourceCache];
  id v2 = [v6 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = BUProtocolCast();
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;
}

void sub_100191700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a26, 8);
  _Block_object_dispose((const void *)(v26 - 152), 8);
  _Unwind_Resume(a1);
}

void sub_100191754(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) resourceCache];
  uint64_t v3 = [v2 objectForKey:*(void *)(a1 + 40)];
  uint64_t v4 = BUProtocolCast();
  uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
  id v6 = *(void **)(v5 + 40);
  *(void *)(v5 + 40) = v4;

  id v7 = [*(id *)(a1 + 32) checkedResourceIDs];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v7 containsObject:*(void *)(a1 + 40)];
}

void sub_100191810(uint64_t a1, void *a2, void *a3)
{
  id v11 = a2;
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (WeakRetained)
  {
    id v7 = (void (**)(id, void, void *, id))objc_retainBlock(*(id *)(a1 + 40));
    if (v7)
    {
      uint64_t v8 = *(void *)(a1 + 32);
      id v9 = [v11 allValues];
      uint64_t v10 = [v9 lastObject];
      v7[2](v7, v8, v10, v5);
    }
  }
}

void sub_100191A64(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100191A7C(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) assetReviewData];
  uint64_t v2 = [v5 objectForKey:*(void *)(a1 + 40)];
  uint64_t v3 = *(void *)(*(void *)(a1 + 48) + 8);
  uint64_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_100191DBC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,char a27)
{
  objc_destroyWeak(&location);
  _Block_object_dispose(&a27, 8);
  _Block_object_dispose((const void *)(v27 - 128), 8);
  _Unwind_Resume(a1);
}

void sub_100191DF4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) assetReviewData];
  uint64_t v3 = [v2 objectForKey:*(void *)(a1 + 40)];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 40) = v3;

  id v6 = [*(id *)(a1 + 32) checkedAssetIDs];
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = [v6 containsObject:*(void *)(a1 + 40)];
}

void sub_100191E88(uint64_t a1)
{
  uint64_t v2 = (id *)(a1 + 56);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    uint64_t v4 = +[BCAssetReview assetReviewIDWithUserID:*(void *)(a1 + 32) assetID:*(void *)(a1 + 40)];
    id v5 = [WeakRetained checkedAssetIDs];
    [v5 addObject:*(void *)(a1 + 40)];

    id v6 = [WeakRetained assetReviewManager];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    v7[2] = sub_100191FB8;
    v7[3] = &unk_100A49380;
    objc_copyWeak(&v9, v2);
    id v8 = *(id *)(a1 + 48);
    [v6 assetReviewForAssetReviewID:v4 completion:v7];

    objc_destroyWeak(&v9);
  }
}

void sub_100191FA4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_100191FB8(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v8 = WeakRetained;
  if (WeakRetained)
  {
    id v9 = [WeakRetained extendedDataAccessQueue];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001920C8;
    v10[3] = &unk_100A49268;
    id v11 = v5;
    id v12 = v8;
    id v14 = *(id *)(a1 + 32);
    id v13 = v6;
    dispatch_async(v9, v10);
  }
}

void sub_1001920C8(id *a1)
{
  id v2 = a1[4];
  if (v2)
  {
    uint64_t v3 = [v2 assetReviewID];
    uint64_t v4 = +[BCAssetReview assetIDFromAssetReviewID:v3];

    if (v4)
    {
      id v5 = [a1[5] assetReviewData];
      [v5 setObject:a1[4] forKey:v4];
    }
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001921E4;
  block[3] = &unk_100A47D48;
  id v9 = a1[7];
  id v7 = a1[4];
  id v8 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001921E4(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 48));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(void *)(a1 + 32), *(void *)(a1 + 40));
    id v2 = v3;
  }
}

void sub_100193824(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  id v2 = (void *)qword_100B4A568;
  qword_100B4A568 = (uint64_t)v1;
}

void sub_100193E14(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = v6;
  if (v5 && !v6)
  {
    id v8 = [v5 UIImage];
    id v9 = BCUbiquityMetadataHelperLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_INFO))
    {
      uint64_t v10 = *(void *)(a1 + 32);
      int v11 = 141558786;
      uint64_t v12 = 1752392040;
      __int16 v13 = 2112;
      uint64_t v14 = v10;
      __int16 v15 = 2160;
      uint64_t v16 = 1752392040;
      __int16 v17 = 2112;
      id v18 = v5;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_INFO, "[iCloudSync] url: %{mask.hash}@ generateThumbnail thumbnail: %{mask.hash}@", (uint8_t *)&v11, 0x2Au);
    }

    [*(id *)(a1 + 40) setObject:v8 forKey:*(void *)(a1 + 48)];
LABEL_9:

    goto LABEL_10;
  }
  if (v6)
  {
    id v8 = BCUbiquityMetadataHelperLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
      sub_1007EDF94((uint64_t)v7, v8);
    }
    goto LABEL_9;
  }
LABEL_10:
  dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
}

void sub_100194214(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019424C(uint64_t a1, void *a2)
{
  id v3 = a2;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 1;
  uint64_t v26 = _NSConcreteStackBlock;
  uint64_t v27 = 3221225472;
  char v28 = sub_1001945BC;
  id v29 = &unk_100A49530;
  id v4 = v3;
  uint64_t v5 = *(void *)(a1 + 56);
  id v30 = v4;
  uint64_t v31 = v5;
  id v6 = objc_retainBlock(&v26);
  id v7 = BCUbiquityMetadataHelperLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_INFO))
  {
    *(_DWORD *)buf = 141558274;
    uint64_t v33 = 1752392040;
    __int16 v34 = 2112;
    id v35 = v4;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_INFO, "[iCloudSync] Adding ubiquitous metadata to URL: %{mask.hash}@", buf, 0x16u);
  }

  ((void (*)(void ***, void, void))v6[2])(v6, BCMetadataXattrAssetID, *(void *)(a1 + 32));
  ((void (*)(void ***, void, void))v6[2])(v6, BCMetadataXattrTitle, *(void *)(a1 + 40));
  uint64_t v8 = BCMetadataXattrAuthor;
  id v9 = [*(id *)(a1 + 48) author:v26, v27, v28, v29];
  uint64_t v10 = +[BKLibraryAsset actualAuthorFromMetedata:v9];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v8, v10);

  uint64_t v11 = BCMetadataXattrGenre;
  uint64_t v12 = [*(id *)(a1 + 48) genre];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v11, v12);

  uint64_t v13 = BCMetadataXattrExplicit;
  uint64_t v14 = [*(id *)(a1 + 48) isExplicit];
  __int16 v15 = [v14 stringValue];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v13, v15);

  uint64_t v16 = BCMetadataXattrGeneration;
  __int16 v17 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 48) generation]);
  id v18 = [v17 stringValue];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v16, v18);

  uint64_t v19 = BCMetadataXattrIsSupplementalContent;
  long long v20 = +[NSNumber numberWithBool:](NSNumber, "numberWithBool:", [*(id *)(a1 + 48) isSupplementalContent]);
  long long v21 = [v20 stringValue];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v19, v21);

  uint64_t v22 = BCMetadataXattrStoreID;
  long long v23 = [*(id *)(a1 + 48) storeID];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v22, v23);

  uint64_t v24 = BCMetadataXattrStorePlaylistID;
  id v25 = [*(id *)(a1 + 48) storePlaylistID];
  ((void (*)(void ***, uint64_t, void *))v6[2])(v6, v24, v25);
}

void sub_1001945BC(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = a3;
  if ([v5 length]
    && (+[BCUbiquityMetadataHelper setExtendedAttributeNamed:v6 toValue:v5 forUrl:*(void *)(a1 + 32)] & 1) == 0)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 0;
  }
}

void sub_100194800(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = BCUbiquityMetadataHelperLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    int v5 = 141558274;
    uint64_t v6 = 1752392040;
    __int16 v7 = 2112;
    id v8 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "[iCloudSync] Adding ubiquitous metadata to URL: %{mask.hash}@", (uint8_t *)&v5, 0x16u);
  }

  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:BCMetadataXattrTitle toValue:*(void *)(a1 + 32) forUrl:v3];
}

void sub_100194AD0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = BCUbiquityMetadataHelperLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v8 = 141558274;
    uint64_t v9 = 1752392040;
    __int16 v10 = 2112;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "[iCloudSync] Adding supplemental ubiquitous metadata to URL: %{mask.hash}@", (uint8_t *)&v8, 0x16u);
  }

  uint64_t v5 = BCMetadataXattrIsSupplementalContent;
  uint64_t v6 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 48)];
  __int16 v7 = [v6 stringValue];
  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:v5 toValue:v7 forUrl:v3];

  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:BCMetadataXattrStorePlaylistID toValue:*(void *)(a1 + 32) forUrl:v3];
  +[BCUbiquityMetadataHelper setExtendedAttributeNamed:BCMetadataXattrStoreID toValue:*(void *)(a1 + 40) forUrl:v3];
}

uint64_t sub_10019501C(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = [a2 count] == 0;
  id v4 = *(uint64_t (**)(uint64_t, BOOL))(v2 + 16);

  return v4(v2, v3);
}

void sub_1001951A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    uint64_t v6 = BKLibraryLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007EE188(a1, (uint64_t)v5, v6);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    __int16 v7 = [a2 firstObject];
    if ([v7 isValid])
    {
      uint64_t v8 = [v7 assetID];
      if (v8)
      {
        uint64_t v9 = (void *)v8;
        unsigned int v10 = [v7 state];

        if (v10 == 2)
        {
          id v11 = [*(id *)(a1 + 40) libraryAssetProvider];
          [v11 cancelDownloadingAsset:v7];
        }
      }
    }
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
}

uint64_t sub_100195350(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  BOOL v3 = [a2 count] == 0;
  id v4 = *(uint64_t (**)(uint64_t, BOOL))(v2 + 16);

  return v4(v2, v3);
}

void sub_1001954A0(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v6 = v5;
  if (v5) {
    (*((void (**)(id, BOOL, id))v5 + 2))(v5, a2 != 0, v7);
  }
}

void sub_100195664(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_1001957A8;
    v14[3] = &unk_100A44610;
    long long v7 = *(_OWORD *)(a1 + 48);
    long long v15 = *(_OWORD *)(a1 + 32);
    long long v16 = v7;
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, v14);
    id v8 = objc_alloc((Class)BSUIAssetActionModifyResponse);
    uint64_t v9 = [v5 collectionTitle];
    unsigned int v10 = [v5 assetID];
    id v11 = objc_msgSend(v8, "initWithCollectionTitle:assetID:assetContentType:", v9, v10, objc_msgSend(v5, "assetContentType"));
  }
  else
  {
    id v11 = 0;
  }
  id v12 = objc_retainBlock(*(id *)(a1 + 64));
  uint64_t v13 = v12;
  if (v12) {
    (*((void (**)(id, id, id))v12 + 2))(v12, v11, v6);
  }
}

void sub_1001957A8(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) _contentDataForContentID:*(void *)(a1 + 40) tracker:*(void *)(a1 + 48)];
  uint64_t v2 = +[BAEventReporter sharedReporter];
  [v2 emitAddToCollectionEventWithTracker:*(void *)(a1 + 48) collectionID:*(void *)(a1 + 56) contentData:v4];

  if ([*(id *)(a1 + 56) isEqualToString:kBKCollectionDefaultIDWantToRead])
  {
    BOOL v3 = +[BAEventReporter sharedReporter];
    [v3 emitWantListAddEventWithTracker:*(void *)(a1 + 48) contentData:v4];
  }
  else
  {
    if (![*(id *)(a1 + 56) isEqualToString:kBKCollectionDefaultIDFinished]) {
      goto LABEL_6;
    }
    BOOL v3 = +[BAEventReporter sharedReporter];
    [v3 emitMarkAsFinishedEventWithTracker:*(void *)(a1 + 48) contentData:v4 markedData:0];
  }

LABEL_6:
}

void sub_10019599C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, BOOL, id))v5 + 2))(v5, a2 != 0, v7);
  }
}

void sub_100195B5C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    v14[0] = _NSConcreteStackBlock;
    v14[1] = 3221225472;
    v14[2] = sub_100195CA0;
    v14[3] = &unk_100A44610;
    long long v7 = *(_OWORD *)(a1 + 48);
    long long v15 = *(_OWORD *)(a1 + 32);
    long long v16 = v7;
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, v14);
    id v8 = objc_alloc((Class)BSUIAssetActionModifyResponse);
    uint64_t v9 = [v5 collectionTitle];
    unsigned int v10 = [v5 assetID];
    id v11 = objc_msgSend(v8, "initWithCollectionTitle:assetID:assetContentType:", v9, v10, objc_msgSend(v5, "assetContentType"));
  }
  else
  {
    id v11 = 0;
  }
  id v12 = objc_retainBlock(*(id *)(a1 + 64));
  uint64_t v13 = v12;
  if (v12) {
    (*((void (**)(id, id, id))v12 + 2))(v12, v11, v6);
  }
}

void sub_100195CA0(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) _contentDataForContentID:*(void *)(a1 + 40) tracker:*(void *)(a1 + 48)];
  uint64_t v2 = +[BAEventReporter sharedReporter];
  [v2 emitRemoveFromCollectionEventWithTracker:*(void *)(a1 + 48) collectionID:*(void *)(a1 + 56) contentData:v4];

  if ([*(id *)(a1 + 56) isEqualToString:kBKCollectionDefaultIDWantToRead])
  {
    BOOL v3 = +[BAEventReporter sharedReporter];
    [v3 emitRemoveFromWantListEventWithTracker:*(void *)(a1 + 48) contentData:v4];
  }
}

void sub_100195E4C(uint64_t a1, uint64_t a2)
{
  BOOL v3 = [*(id *)(a1 + 32) libraryMutableAssetWithAssetID:*(void *)(a1 + 40) inManagedObjectContext:a2];
  id v4 = v3;
  if (v3)
  {
    if ([v3 isFinished])
    {
      id v5 = objc_retainBlock(*(id *)(a1 + 56));
      id v6 = v5;
      if (v5) {
        (*((void (**)(id, void *, void))v5 + 2))(v5, v4, 0);
      }

      goto LABEL_13;
    }
    NSErrorUserInfoKey v21 = NSLocalizedDescriptionKey;
    CFStringRef v22 = @"Cannot update non-finished asset";
    uint64_t v9 = &v22;
    unsigned int v10 = &v21;
  }
  else
  {
    if (*(unsigned char *)(a1 + 64))
    {
      long long v7 = *(void **)(a1 + 32);
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_100196070;
      v16[3] = &unk_100A45338;
      int8x16_t v15 = *(int8x16_t *)(a1 + 40);
      id v8 = (id)v15.i64[0];
      int8x16_t v17 = vextq_s8(v15, v15, 8uLL);
      id v18 = *(id *)(a1 + 56);
      [v7 waitForAssetID:v8 completion:v16];

      goto LABEL_13;
    }
    NSErrorUserInfoKey v19 = NSLocalizedDescriptionKey;
    CFStringRef v20 = @"Asset not found. Cannot update finished asset.";
    uint64_t v9 = &v20;
    unsigned int v10 = &v19;
  }
  id v11 = +[NSDictionary dictionaryWithObjects:v9 forKeys:v10 count:1];
  id v12 = +[NSError errorWithDomain:@"BKJSALibraryManager" code:-1 userInfo:v11];

  id v13 = objc_retainBlock(*(id *)(a1 + 56));
  uint64_t v14 = v13;
  if (v13) {
    (*((void (**)(id, void, void *))v13 + 2))(v13, 0, v12);
  }

LABEL_13:
}

id sub_100196070(uint64_t a1)
{
  return [*(id *)(a1 + 32) _fetchFinishedLibraryAssetWithAssetID:*(void *)(a1 + 40) waitForNewAssetIfNeeded:0 callback:*(void *)(a1 + 48)];
}

void sub_10019619C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    [v5 userUpdateDateFinished:*(void *)(a1 + 32) ofKind:1];
    long long v7 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    id v8 = v7;
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t v9 = v7[2];
  }
  else
  {
    unsigned int v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    id v8 = v10;
    if (!v10) {
      goto LABEL_7;
    }
    uint64_t v9 = v10[2];
  }
  v9();
LABEL_7:

  if (*(void *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001962D8;
    block[3] = &unk_100A443C8;
    id v11 = *(void **)(a1 + 56);
    void block[4] = *(void *)(a1 + 48);
    id v13 = v11;
    id v14 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_1001962D8(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) _contentDataForContentID:*(void *)(a1 + 40) tracker:*(void *)(a1 + 48)];
  id v2 = [objc_alloc((Class)BAMarkedData) initWithIsFinishedDateSet:1];
  BOOL v3 = +[BAEventReporter sharedReporter];
  [v3 emitMarkAsFinishedEventWithTracker:*(void *)(a1 + 48) contentData:v4 markedData:v2];
}

void sub_10019655C(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    [v5 userUpdateDateFinished:*(void *)(a1 + 32) ofKind:2];
    long long v7 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    id v8 = v7;
    if (!v7) {
      goto LABEL_7;
    }
    uint64_t v9 = v7[2];
  }
  else
  {
    unsigned int v10 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 64));
    id v8 = v10;
    if (!v10) {
      goto LABEL_7;
    }
    uint64_t v9 = v10[2];
  }
  v9();
LABEL_7:

  if (*(void *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100196698;
    block[3] = &unk_100A443C8;
    id v11 = *(void **)(a1 + 56);
    void block[4] = *(void *)(a1 + 48);
    id v13 = v11;
    id v14 = *(id *)(a1 + 40);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
}

void sub_100196698(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) _contentDataForContentID:*(void *)(a1 + 40) tracker:*(void *)(a1 + 48)];
  id v2 = [objc_alloc((Class)BAMarkedData) initWithIsFinishedDateSet:1];
  BOOL v3 = +[BAEventReporter sharedReporter];
  [v3 emitMarkAsFinishedEventWithTracker:*(void *)(a1 + 48) contentData:v4 markedData:v2];
}

void sub_1001967DC(uint64_t a1, void *a2, void *a3)
{
  id v9 = a3;
  if (a2)
  {
    [a2 unsetFinishedDate];
    id v5 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    id v6 = v5;
    if (!v5) {
      goto LABEL_7;
    }
    long long v7 = v5[2];
  }
  else
  {
    id v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    id v6 = v8;
    if (!v8) {
      goto LABEL_7;
    }
    long long v7 = v8[2];
  }
  v7();
LABEL_7:
}

void sub_100196CB4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = +[NSNumber numberWithBool:a2];
  long long v7 = (void *)v6;
  if (v5)
  {
    v20[0] = v6;
    id v8 = [v5 localizedDescription];
    v20[1] = v8;
    id v9 = +[NSArray arrayWithObjects:v20 count:2];
  }
  else
  {
    uint64_t v19 = v6;
    id v9 = +[NSArray arrayWithObjects:&v19 count:1];
  }

  unsigned int v10 = JSALog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v13 = 136446722;
    id v14 = "-[BKJSALibraryManager openBook::::]_block_invoke";
    __int16 v15 = 2112;
    uint64_t v16 = v11;
    __int16 v17 = 2112;
    id v18 = v5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred when opening book %@: %@", (uint8_t *)&v13, 0x20u);
  }

  id v12 = +[JSABridge sharedInstance];
  [v12 enqueueValueCall:*(void *)(a1 + 40) arguments:v9 file:@"BKJSALibraryManager.m" line:328];
}

void sub_100196FB0(uint64_t a1, void *a2)
{
  id v4 = a2;
  v13[0] = @"status";
  if ([v4 count]) {
    CFStringRef v5 = @"error";
  }
  else {
    CFStringRef v5 = @"ok";
  }
  v13[1] = @"description";
  v14[0] = v5;
  id v6 = [v4 count];
  if (v6)
  {
    uint64_t v2 = [v4 componentsJoinedByString:@", "];
    +[NSString stringWithFormat:@"Failed to download assets: %@", v2];
  }
  else
  {
    +[NSNull null];
  long long v7 = };
  v14[1] = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:2];
  if (v6)
  {

    long long v7 = (void *)v2;
  }

  id v9 = +[JSABridge sharedInstance];
  uint64_t v10 = *(void *)(a1 + 32);
  id v12 = v8;
  uint64_t v11 = +[NSArray arrayWithObjects:&v12 count:1];
  [v9 enqueueValueCall:v10 arguments:v11 file:@"BKJSALibraryManager.m" line:340];
}

void sub_100197314(uint64_t a1, uint64_t a2)
{
  id v4 = +[JSABridge sharedInstance];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = +[NSNumber numberWithBool:a2];
  id v8 = v6;
  long long v7 = +[NSArray arrayWithObjects:&v8 count:1];
  [v4 enqueueValueCall:v5 arguments:v7 file:@"BKJSALibraryManager.m" line:349];
}

void sub_100197540(uint64_t a1, uint64_t a2, void *a3)
{
  if (a3)
  {
    v21[0] = @"error";
    v20[0] = @"status";
    v20[1] = @"description";
    uint64_t v4 = *(void *)(a1 + 32);
    uint64_t v5 = [a3 localizedDescription];
    id v6 = +[NSString stringWithFormat:@"Failed to cancel download for assetID %@: %@", v4, v5];
    v21[1] = v6;
    long long v7 = +[NSDictionary dictionaryWithObjects:v21 forKeys:v20 count:2];

    id v8 = +[JSABridge sharedInstance];
    uint64_t v9 = *(void *)(a1 + 40);
    uint64_t v19 = v7;
    uint64_t v10 = +[NSArray arrayWithObjects:&v19 count:1];
    uint64_t v11 = v8;
    uint64_t v12 = v9;
    int v13 = v10;
    uint64_t v14 = 362;
  }
  else
  {
    long long v7 = +[JSABridge sharedInstance];
    uint64_t v15 = *(void *)(a1 + 40);
    CFStringRef v16 = @"status";
    CFStringRef v17 = @"ok";
    id v8 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
    id v18 = v8;
    uint64_t v10 = +[NSArray arrayWithObjects:&v18 count:1];
    uint64_t v11 = v7;
    uint64_t v12 = v15;
    int v13 = v10;
    uint64_t v14 = 364;
  }
  [v11 enqueueValueCall:v12 arguments:v13 file:@"BKJSALibraryManager.m" line:v14];
}

void sub_100197874(uint64_t a1, void *a2)
{
  id v4 = a2;
  v13[0] = @"status";
  if ([v4 count]) {
    CFStringRef v5 = @"error";
  }
  else {
    CFStringRef v5 = @"ok";
  }
  v13[1] = @"description";
  v14[0] = v5;
  id v6 = [v4 count];
  if (v6)
  {
    uint64_t v2 = [v4 componentsJoinedByString:@", "];
    +[NSString stringWithFormat:@"Failed to download assets: %@", v2];
  }
  else
  {
    +[NSNull null];
  long long v7 = };
  v14[1] = v7;
  id v8 = +[NSDictionary dictionaryWithObjects:v14 forKeys:v13 count:2];
  if (v6)
  {

    long long v7 = (void *)v2;
  }

  uint64_t v9 = +[JSABridge sharedInstance];
  uint64_t v10 = *(void *)(a1 + 32);
  uint64_t v12 = v8;
  uint64_t v11 = +[NSArray arrayWithObjects:&v12 count:1];
  [v9 enqueueValueCall:v10 arguments:v11 file:@"BKJSALibraryManager.m" line:378];
}

void sub_100197B80(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (*(void *)(a1 + 32))
  {
    if (a2)
    {
      long long v7 = 0;
    }
    else
    {
      CFStringRef v14 = @"error";
      id v8 = [v5 localizedDescription];
      uint64_t v15 = v8;
      long long v7 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
    }
    uint64_t v9 = +[JSABridge sharedInstance];
    uint64_t v10 = v9;
    uint64_t v11 = *(void *)(a1 + 32);
    if (v7)
    {
      int v13 = v7;
      uint64_t v12 = +[NSArray arrayWithObjects:&v13 count:1];
      [v10 enqueueValueCall:v11 arguments:v12 file:@"BKJSALibraryManager.m" line:388];
    }
    else
    {
      [v9 enqueueValueCall:v11 arguments:0 file:@"BKJSALibraryManager.m" line:388];
    }
  }
}

void sub_100197E40(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = v5;
  if (*(void *)(a1 + 32))
  {
    long long v7 = 0;
    if (v5 && (a2 & 1) == 0)
    {
      long long v7 = [v5 localizedDescription];
    }
    id v8 = +[JSABridge sharedInstance];
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)(a1 + 32);
    if (v7)
    {
      uint64_t v12 = v7;
      uint64_t v11 = +[NSArray arrayWithObjects:&v12 count:1];
      [v9 enqueueValueCall:v10 arguments:v11 file:@"BKJSALibraryManager.m" line:400];
    }
    else
    {
      [v8 enqueueValueCall:v10 arguments:0 file:@"BKJSALibraryManager.m" line:400];
    }
  }
}

void sub_1001980B4(uint64_t a1)
{
  uint64_t v2 = +[BKAppDelegate sceneManager];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_100198170;
  _OWORD v4[3] = &unk_100A496E0;
  BOOL v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  id v6 = *(id *)(a1 + 48);
  [v2 requestPrimaryScene:v4];
}

void sub_100198170(uint64_t a1, void *a2)
{
  id v6 = [a2 newShowAssetTransaction];
  BOOL v3 = [*(id *)(a1 + 32) presentersProvider];
  id v4 = [v3 libraryCollectionPresenter];
  [v4 showLibraryCollectionInPlaceWithTransaction:v6 collectionID:*(void *)(a1 + 40)];

  id v5 = +[JSABridge sharedInstance];
  [v5 enqueueValueCall:*(void *)(a1 + 48) arguments:0 file:@"BKJSALibraryManager.m" line:412];
}

void sub_1001983F4(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = +[NSNumber numberWithBool:a2];
  long long v7 = (void *)v6;
  if (v5)
  {
    v22[0] = v6;
    id v8 = [v5 localizedDescription];
    v22[1] = v8;
    uint64_t v9 = +[NSArray arrayWithObjects:v22 count:2];
  }
  else
  {
    uint64_t v21 = v6;
    uint64_t v9 = +[NSArray arrayWithObjects:&v21 count:1];
  }

  uint64_t v10 = JSALog();
  if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v11 = *(void *)(a1 + 32);
    int v13 = 136446978;
    CFStringRef v14 = "-[BKJSALibraryManager openSampleBook:downloadSampleURL:options:callback:tracker:]_block_invoke";
    __int16 v15 = 2112;
    uint64_t v16 = v11;
    __int16 v17 = 1024;
    int v18 = a2;
    __int16 v19 = 2112;
    id v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}s Finished opening sample for assetID: %@, success: %{BOOL}d, error: %@", (uint8_t *)&v13, 0x26u);
  }

  uint64_t v12 = +[JSABridge sharedInstance];
  [v12 enqueueValueCall:*(void *)(a1 + 40) arguments:v9 file:@"BKJSALibraryManager.m" line:424];
}

void sub_100198808(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100198A0C;
    block[3] = &unk_100A443C8;
    uint64_t v6 = *(void **)(a1 + 40);
    void block[4] = *(void *)(a1 + 32);
    id v18 = v6;
    id v19 = *(id *)(a1 + 48);
    dispatch_sync((dispatch_queue_t)&_dispatch_main_q, block);
  }
  else
  {
    long long v7 = JSALog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v8 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 136446722;
      uint64_t v21 = "-[BKJSALibraryManager previewAudiobook::::]_block_invoke";
      __int16 v22 = 2112;
      uint64_t v23 = v8;
      __int16 v24 = 2112;
      id v25 = v5;
      _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred adding preview to My Samples %@: %@", buf, 0x20u);
    }
  }
  uint64_t v9 = *(void **)(a1 + 32);
  uint64_t v10 = *(void *)(a1 + 40);
  uint64_t v11 = *(unsigned __int8 *)(a1 + 72);
  uint64_t v13 = *(void *)(a1 + 48);
  uint64_t v12 = *(void *)(a1 + 56);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100198A8C;
  v14[3] = &unk_100A43E90;
  id v15 = *(id *)(a1 + 64);
  id v16 = *(id *)(a1 + 40);
  [v9 _previewAssetID:v10 asset:v12 fullScreen:v11 tracker:v13 callback:v14];
}

void sub_100198A0C(uint64_t a1)
{
  id v3 = [*(id *)(a1 + 32) _contentDataForContentID:*(void *)(a1 + 40) tracker:*(void *)(a1 + 48)];
  uint64_t v2 = +[BAEventReporter sharedReporter];
  [v2 emitAddToCollectionEventWithTracker:*(void *)(a1 + 48) collectionID:kBKCollectionDefaultIDSamples contentData:v3];
}

void sub_100198A8C(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = v5;
  if (a2)
  {
    long long v7 = +[JSABridge sharedInstance];
    [v7 enqueueValueCall:*(void *)(a1 + 32) arguments:&__NSArray0__struct file:@"BKJSALibraryManager.m" line:453];
  }
  else
  {
    CFStringRef v19 = @"error";
    uint64_t v8 = [v5 localizedDescription];
    id v20 = v8;
    uint64_t v9 = +[NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];
    uint64_t v21 = v9;
    long long v7 = +[NSArray arrayWithObjects:&v21 count:1];

    uint64_t v10 = JSALog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v11 = *(void *)(a1 + 40);
      int v13 = 136446722;
      CFStringRef v14 = "-[BKJSALibraryManager previewAudiobook::::]_block_invoke";
      __int16 v15 = 2112;
      uint64_t v16 = v11;
      __int16 v17 = 2112;
      id v18 = v6;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred when previewing audiobook %@: %@", (uint8_t *)&v13, 0x20u);
    }

    uint64_t v12 = +[JSABridge sharedInstance];
    [v12 enqueueValueCall:*(void *)(a1 + 32) arguments:v7 file:@"BKJSALibraryManager.m" line:457];
  }
}

void sub_100198DDC(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100198F90;
  block[3] = &unk_100A45460;
  id v4 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v12 = v4;
  id v13 = *(id *)(a1 + 48);
  char v15 = *(unsigned char *)(a1 + 64);
  id v5 = v3;
  id v14 = v5;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  uint64_t v6 = +[JSABridge sharedInstance];
  uint64_t v7 = *(void *)(a1 + 56);
  uint64_t v8 = [v5 localizedDescription];
  if (v8)
  {
    uint64_t v9 = [v5 localizedDescription];
    uint64_t v16 = v9;
    uint64_t v10 = +[NSArray arrayWithObjects:&v16 count:1];
    [v6 enqueueValueCall:v7 arguments:v10 file:@"BKJSALibraryManager.m" line:483];
  }
  else
  {
    [v6 enqueueValueCall:v7 arguments:0 file:@"BKJSALibraryManager.m" line:483];
  }
}

void sub_100198F90(uint64_t a1)
{
  id v7 = [*(id *)(a1 + 32) _contentDataForContentID:*(void *)(a1 + 40) tracker:*(void *)(a1 + 48)];
  int v2 = *(unsigned __int8 *)(a1 + 64);
  id v3 = +[BAEventReporter sharedReporter];
  id v4 = v3;
  uint64_t v5 = *(void *)(a1 + 48);
  if (v2) {
    [v3 emitAddToCollectionEventWithTracker:v5 collectionID:kBKCollectionDefaultIDFinished contentData:v7];
  }
  else {
    [v3 emitRemoveFromCollectionEventWithTracker:v5 collectionID:kBKCollectionDefaultIDFinished contentData:v7];
  }

  if (!*(void *)(a1 + 56) && *(unsigned char *)(a1 + 64))
  {
    uint64_t v6 = +[BAEventReporter sharedReporter];
    [v6 emitMarkAsFinishedEventWithTracker:*(void *)(a1 + 48) contentData:v7 markedData:0];
  }
}

void sub_100199368(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5 && ![v5 isValid])
  {
    (*(void (**)(void))(*(void *)(a1 + 72) + 16))();
  }
  else
  {
    if (([v5 isLocal] & 1) != 0
      || ([v5 streamable] & 1) != 0
      || !+[BKReachability isOffline])
    {
      uint64_t v8 = sub_100112BC4(*(void **)(a1 + 40));
      id v9 = [v8 mutableCopy];
      uint64_t v10 = [v5 assetLogID];
      [v9 setObject:v10 forKeyedSubscript:AEAssetLogID];

      [v9 removeObjectForKey:BCTransactionOptionsTransactionKey];
      if (([v5 isOwned] & 1) != 0 || objc_msgSend(v5, "isLocal"))
      {
        unsigned __int8 v11 = [v5 isAudiobook];
        id v12 = [*(id *)(a1 + 32) presentersProvider];
        id v13 = [v12 bookPresenter];

        v18[0] = _NSConcreteStackBlock;
        v18[1] = 3221225472;
        void v18[2] = sub_100199788;
        void v18[3] = &unk_100A497A8;
        char v24 = *(unsigned char *)(a1 + 80);
        unsigned __int8 v25 = v11;
        id v14 = *(void **)(a1 + 40);
        double v18[4] = *(void *)(a1 + 32);
        id v19 = v14;
        id v20 = v13;
        id v21 = *(id *)(a1 + 48);
        id v22 = v9;
        id v23 = *(id *)(a1 + 72);
        id v15 = v13;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, v18);
      }
      else
      {
        id v15 = [*(id *)(a1 + 32) _contentDataForLibraryAsset:v5 contentID:*(void *)(a1 + 48) tracker:*(void *)(a1 + 56)];
        kdebug_trace();
        [*(id *)(a1 + 32) _openSample:*(void *)(a1 + 48) options:v9 sampleURL:*(void *)(a1 + 64) contentData:v15 tracker:*(void *)(a1 + 56) callback:*(void *)(a1 + 72)];
        kdebug_trace();
      }
    }
    else
    {
      unsigned __int8 v7 = [v5 isStore];
      objc_initWeak(&location, *(id *)(a1 + 32));
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_100199708;
      block[3] = &unk_100A49758;
      objc_copyWeak(&v28, &location);
      unsigned __int8 v29 = v7;
      id v27 = *(id *)(a1 + 72);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

      objc_destroyWeak(&v28);
      objc_destroyWeak(&location);
    }
    if (*(unsigned char *)(a1 + 80))
    {
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      v16[2] = sub_100199A04;
      v16[3] = &unk_100A497C8;
      unsigned __int8 v17 = [v5 isAudiobook];
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v16);
    }
  }
}

void sub_100199708(uint64_t a1)
{
  objc_copyWeak(&to, (id *)(a1 + 40));
  id v2 = objc_loadWeakRetained(&to);
  [v2 _displayStoreConnectionErrorAlert:*(unsigned __int8 *)(a1 + 48)];

  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
  objc_destroyWeak(&to);
}

void sub_100199774(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_100199788(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 80) || *(unsigned char *)(a1 + 81))
  {
    id v2 = [*(id *)(a1 + 32) _transactionFromOptionsForShowAsset:*(void *)(a1 + 40)];
    id v3 = +[BKAppDelegate sceneManager];
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    id v11[2] = sub_10019993C;
    v11[3] = &unk_100A48C88;
    id v4 = &v12;
    id v12 = *(id *)(a1 + 48);
    id v13 = v2;
    id v14 = *(id *)(a1 + 56);
    id v15 = *(id *)(a1 + 64);
    id v16 = *(id *)(a1 + 72);
    id v5 = v2;
    [v3 forceTransaction:v5 ontoPrimarySceneWithContinuation:v11];
  }
  else
  {
    id v5 = [*(id *)(a1 + 32) _transactionFromOptionsForShowAsset:*(void *)(a1 + 40)];
    id v6 = *(void **)(a1 + 48);
    uint64_t v7 = *(void *)(a1 + 56);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1001999F4;
    v9[3] = &unk_100A49780;
    id v4 = &v10;
    uint64_t v8 = *(void *)(a1 + 64);
    id v10 = *(id *)(a1 + 72);
    [v6 showAssetWithTransaction:v5 assetID:v7 location:0 options:v8 completion:v9];
  }
}

void sub_10019993C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001999E4;
  v5[3] = &unk_100A49780;
  id v6 = *(id *)(a1 + 64);
  [v1 showAssetWithTransaction:v2 assetID:v3 location:0 options:v4 completion:v5];
}

uint64_t sub_1001999E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1001999F4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100199A04(uint64_t a1)
{
  objc_opt_class();
  uint64_t v2 = BCGetUnsafeAppDelegateReference();
  BUDynamicCast();
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  uint64_t v3 = [v6 engagementManager];
  LODWORD(v2) = *(unsigned __int8 *)(a1 + 32);
  uint64_t v4 = [v3 sessionDonor];
  id v5 = v4;
  if (v2) {
    [v4 reportPreviewButtonUsed];
  }
  else {
    [v4 reportSampleButtonUsed];
  }
}

void sub_100199CB4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_initWeak(&location, *(id *)(a1 + 32));
  uint64_t v4 = +[BKBookSampleHelper defaultHelper];
  uint64_t v5 = *(void *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100199E44;
  v14[3] = &unk_100A46C98;
  id v15 = *(id *)(a1 + 72);
  [v4 downloadSampleWithURL:v3 contentData:v5 tracker:v6 completion:v14];

  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_100199ECC;
  v9[3] = &unk_100A44D08;
  id v10 = *(id *)(a1 + 56);
  id v7 = *(id *)(a1 + 64);
  uint64_t v8 = *(void *)(a1 + 32);
  id v11 = v7;
  uint64_t v12 = v8;
  objc_copyWeak(&v13, &location);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v9);
  objc_destroyWeak(&v13);

  objc_destroyWeak(&location);
}

void sub_100199E30(_Unwind_Exception *a1)
{
  objc_destroyWeak((id *)(v1 - 72));
  _Unwind_Resume(a1);
}

void sub_100199E44(uint64_t a1, void *a2, void *a3)
{
  id v6 = a3;
  uint64_t v5 = [a2 firstObject];
  (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_100199ECC(id *a1)
{
  uint64_t v2 = [a1[4] objectForKeyedSubscript:@"storeAsset"];
  if (v2)
  {
    id v3 = +[BCMAssetWrapper assetWithData:v2];
    id v4 = [objc_alloc((Class)BSUIItemDescription) initWithAsset:v3];
    objc_opt_class();
    uint64_t v5 = [a1[4] objectForKeyedSubscript:@"feedViewController"];
    id v6 = BUDynamicCast();

    id v7 = &off_10085C000;
    if (v6)
    {
      id v34 = v4;
      id v35 = v3;
      uint64_t v8 = [a1[4] objectForKeyedSubscript:@"BKBookPresentingAnimateFromUid"];
      uint64_t v9 = [a1[4] objectForKeyedSubscript:@"BKBookPresentingAnimateFromRefId"];
      id v10 = (void *)v9;
      id v11 = @"cover";
      if (v9) {
        id v11 = (__CFString *)v9;
      }
      uint64_t v12 = v11;

      id v13 = [a1[4] objectForKeyedSubscript:@"BKBookPresentingAnimateFromRefInstance"];
      id v14 = v13;
      if (!v13) {
        id v14 = a1[5];
      }
      id v15 = v14;

      id v16 = +[TUIRenderReferenceQuery queryWithUUID:0 uid:v8 refId:v12 refInstance:v15];
      unsigned __int8 v17 = [v6 imageResourcesMatchingQuery:v16];

      id v18 = [v17 allKeys];
      id v19 = [v18 firstObject];

      if (v19)
      {
        uint64_t v33 = v8;
        id v20 = [v17 objectForKeyedSubscript:v19];
        id v21 = [v20 anyObject];

        id v22 = [v21 unprocessedImageResource];
        uint64_t v47 = 0;
        long long v48 = &v47;
        uint64_t v49 = 0x3032000000;
        id v50 = sub_1000070D0;
        id v51 = sub_100007244;
        dispatch_semaphore_t v52 = dispatch_semaphore_create(0);
        id v23 = +[BCCacheManager defaultCacheManager];
        id v24 = a1[5];
        v46[0] = _NSConcreteStackBlock;
        v46[1] = 3221225472;
        v46[2] = sub_10019A3CC;
        _OWORD v46[3] = &unk_100A44688;
        _OWORD v46[4] = &v47;
        [v23 addImageResource:v22 withIdentifier:v24 completion:v46];

        unsigned __int8 v25 = v48[5];
        dispatch_time_t v26 = dispatch_time(0, 2000000000);
        dispatch_semaphore_wait(v25, v26);
        _Block_object_dispose(&v47, 8);

        id v7 = &off_10085C000;
        uint64_t v8 = v33;
      }

      id v4 = v34;
      id v3 = v35;
    }
    id v27 = [a1[6] _transactionFromOptionsForShowAsset:a1[4]];
    id v28 = +[BKAppDelegate sceneManager];
    v41[0] = _NSConcreteStackBlock;
    v41[1] = *((void *)v7 + 217);
    double v41[2] = sub_10019A3DC;
    _OWORD v41[3] = &unk_100A445E8;
    objc_copyWeak(&v45, a1 + 7);
    id v29 = v4;
    id v42 = v29;
    id v30 = v27;
    id v43 = v30;
    id v44 = a1[4];
    [v28 forceTransaction:v30 ontoPrimarySceneWithContinuation:v41];

    objc_destroyWeak(&v45);
  }
  else
  {
    uint64_t v31 = [a1[6] _transactionFromOptionsForShowAsset:a1[4]];
    long long v32 = +[BKAppDelegate sceneManager];
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_10019A460;
    v36[3] = &unk_100A445E8;
    objc_copyWeak(&v40, a1 + 7);
    id v29 = v31;
    id v37 = v29;
    id v38 = a1[5];
    id v39 = a1[4];
    [v32 forceTransaction:v29 ontoPrimarySceneWithContinuation:v36];

    objc_destroyWeak(&v40);
  }
}

void sub_10019A3A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

intptr_t sub_10019A3CC(uint64_t a1)
{
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(*(void *)(*(void *)(a1 + 32) + 8) + 40));
}

void sub_10019A3DC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v2 = [WeakRetained presentersProvider];
  id v3 = [v2 itemPresenter];
  [v3 presentItem:*(void *)(a1 + 32) transaction:*(void *)(a1 + 40) host:0 source:0 options:*(void *)(a1 + 48)];
}

void sub_10019A460(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  uint64_t v2 = [WeakRetained presentersProvider];
  id v3 = [v2 bookPresenter];
  [v3 showAssetWithTransaction:*(void *)(a1 + 32) storeID:*(void *)(a1 + 40) options:*(void *)(a1 + 48)];
}

uint64_t sub_10019A4DC(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a2 || a3) {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))();
  }
  else {
    return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
  }
}

void sub_10019A700(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, id location)
{
  objc_destroyWeak(v19);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_10019A72C(uint64_t a1, void *a2)
{
  if ([a2 canOpen])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
    id v4 = *(void **)(a1 + 32);
    uint64_t v5 = *(void *)(a1 + 40);
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _OWORD v12[2] = sub_10019A8BC;
    v12[3] = &unk_100A49868;
    id v13 = v4;
    id v14 = *(id *)(a1 + 56);
    [WeakRetained _openAssetID:v13 options:0 sampleURL:0 isSample:0 tracker:v5 callback:v12];
  }
  else
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10019A9B0;
    block[3] = &unk_100A498B8;
    objc_copyWeak(&v10, (id *)(a1 + 64));
    id v7 = *(id *)(a1 + 48);
    char v11 = *(unsigned char *)(a1 + 72);
    id v8 = *(id *)(a1 + 40);
    id v9 = *(id *)(a1 + 56);
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);

    objc_destroyWeak(&v10);
  }
}

void sub_10019A8BC(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = JSALog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 136446722;
    id v8 = "-[BKJSALibraryManager _previewAssetID:asset:fullScreen:tracker:callback:]_block_invoke_2";
    __int16 v9 = 2112;
    uint64_t v10 = v6;
    __int16 v11 = 2112;
    id v12 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "%{public}s Error occurred when opening audiobook (asked to preview) %@: %@", (uint8_t *)&v7, 0x20u);
  }

  (*(void (**)(void, BOOL, id))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), v4 == 0, v4);
}

void sub_10019A9B0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  id v3 = [*(id *)(a1 + 32) previewURL];

  if (v3)
  {
    id v4 = +[BKAppDelegate sceneManager];
    __int16 v11 = _NSConcreteStackBlock;
    uint64_t v12 = 3221225472;
    id v13 = sub_10019ABA0;
    id v14 = &unk_100A49890;
    char v19 = *(unsigned char *)(a1 + 64);
    id v15 = *(id *)(a1 + 40);
    id v16 = WeakRetained;
    id v17 = *(id *)(a1 + 32);
    id v18 = *(id *)(a1 + 48);
    [v4 requestPrimaryScene:&v11];

    uint64_t v5 = +[BKAppDelegate delegate];
    uint64_t v6 = [v5 engagementManager];

    int v7 = [v6 sessionDonor];
    [v7 reportPreviewButtonUsed];

    id v8 = v15;
  }
  else
  {
    uint64_t v9 = *(void *)(a1 + 48);
    NSErrorUserInfoKey v20 = NSLocalizedDescriptionKey;
    CFStringRef v21 = @"Attempting to preview audiobook without URL";
    id v8 = +[NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
    uint64_t v10 = +[NSError errorWithDomain:@"BKJSALibraryManager" code:-1 userInfo:v8];
    (*(void (**)(uint64_t, void, void *))(v9 + 16))(v9, 0, v10);
  }
}

void sub_10019ABA0(uint64_t a1, void *a2)
{
  id v3 = [a2 newShowAssetTransaction];
  uint64_t v4 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 64)];
  uint64_t v5 = (void *)v4;
  uint64_t v6 = *(void *)(a1 + 32);
  if (v6)
  {
    v15[0] = @"tracker";
    v15[1] = @"fullScreen";
    v16[0] = v6;
    v16[1] = v4;
    int v7 = v16;
    id v8 = (const __CFString **)v15;
    uint64_t v9 = 2;
  }
  else
  {
    CFStringRef v13 = @"fullScreen";
    uint64_t v14 = v4;
    int v7 = &v14;
    id v8 = &v13;
    uint64_t v9 = 1;
  }
  uint64_t v10 = +[NSDictionary dictionaryWithObjects:v7 forKeys:v8 count:v9];
  __int16 v11 = [*(id *)(a1 + 40) presentersProvider];
  uint64_t v12 = [v11 bookPresenter];
  [v12 showStoreAsset:v3 asset:*(void *)(a1 + 48) options:v10];

  (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_10019AE5C(uint64_t a1)
{
  uint64_t v2 = +[BKAppDelegate delegate];
  id v3 = [v2 serviceCenter];
  uint64_t v4 = [v3 readingActivityService];

  +[BKLibraryManager defaultManager];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_10019AF7C;
  v8[3] = &unk_100A49908;
  id v9 = (id)objc_claimAutoreleasedReturnValue();
  id v5 = *(id *)(a1 + 32);
  char v13 = *(unsigned char *)(a1 + 48);
  id v10 = v5;
  id v11 = v4;
  id v12 = *(id *)(a1 + 40);
  id v6 = v4;
  id v7 = v9;
  [v7 performBlockOnWorkerQueue:v8];
}

void sub_10019AF7C(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) libraryMutableAssetWithAssetID:*(void *)(a1 + 40) inManagedObjectContext:a2];
  uint64_t v4 = v3;
  if (v3)
  {
    if (*(unsigned char *)(a1 + 64))
    {
      uint64_t v14 = BKLibraryAssetMarkedLocation;
      uint64_t v15 = BALocationTypeFromReadingNowFinish;
      id v5 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
      [v4 setFinishedStateUserSetsFinished:0 userInfo:v5];
    }
    else
    {
      [v3 setFinishedStateUserSetsUnfinished];
    }
    uint64_t v9 = *(void *)(a1 + 40);
    id v8 = *(void **)(a1 + 48);
    uint64_t v10 = *(unsigned __int8 *)(a1 + 64);
    id v6 = [v4 dateFinished];
    [v8 willMarkAsset:v9 finished:v10 finishedDate:v6];
    id v7 = 0;
  }
  else
  {
    NSErrorUserInfoKey v12 = NSLocalizedDescriptionKey;
    CFStringRef v13 = @"Asset not found. Cannot mark as finished";
    id v6 = +[NSDictionary dictionaryWithObjects:&v13 forKeys:&v12 count:1];
    id v7 = +[NSError errorWithDomain:@"BKJSALibraryManager" code:-1 userInfo:v6];
  }

  uint64_t v11 = *(void *)(a1 + 56);
  if (v11) {
    (*(void (**)(uint64_t, void *))(v11 + 16))(v11, v7);
  }
}

void sub_10019B2A0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 72));
  _Unwind_Resume(a1);
}

void sub_10019B2BC(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) longLongValue]);
  uint64_t v4 = +[BLPurchaseRequest requestWithBuyParameters:v2 storeIdentifier:v3];

  [v4 setAudiobook:*(unsigned __int8 *)(a1 + 72)];
  if (*(void *)(a1 + 48))
  {
    v19[0] = *(void *)(a1 + 48);
    v18[0] = @"BATracker";
    v18[1] = @"hasRacSupport";
    id v5 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 73)];
    v19[1] = v5;
    uint64_t v6 = +[NSDictionary dictionaryWithObjects:v19 forKeys:v18 count:2];
  }
  else
  {
    id v7 = JSALog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007EE214(v7);
    }

    CFStringRef v16 = @"hasRacSupport";
    id v5 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 73)];
    id v17 = v5;
    uint64_t v6 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
  }
  id v8 = (void *)v6;
  [v4 setAnalyticsInfo:v6];

  uint64_t v9 = +[JSABridge sharedInstance];
  uint64_t v10 = [v9 windowManager];

  uint64_t v11 = +[BLDownloadQueue sharedInstance];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _OWORD v12[2] = sub_10019B544;
  v12[3] = &unk_100A49930;
  objc_copyWeak(&v15, (id *)(a1 + 64));
  id v13 = *(id *)(a1 + 40);
  id v14 = *(id *)(a1 + 56);
  [v11 purchaseWithRequest:v4 uiManager:v10 completion:v12];

  objc_destroyWeak(&v15);
}

void sub_10019B528(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_10019B544(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  if (a4)
  {
    uint64_t v6 = [WeakRetained libraryItemStateProvider];
    [v6 updateStateToPurchaseFailedForIdentifier:*(void *)(a1 + 32)];
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

BOOL sub_10019B688(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  uint64_t v19 = 0;
  NSErrorUserInfoKey v20 = &v19;
  uint64_t v21 = 0x2020000000;
  char v22 = 1;
  if ([v3 isValid]
    && ([v3 assetID], (id v5 = objc_claimAutoreleasedReturnValue()) != 0)
    && (unsigned int v6 = [v3 state], v5, v6 == 3))
  {
    id v7 = [v3 assetID];
    id v8 = [*(id *)(a1 + 32) libraryItemStateProvider];
    [v8 updateStateToPurchasingForIdentifier:v7];

    uint64_t v9 = [*(id *)(a1 + 32) libraryAssetProvider];
    v15[0] = _NSConcreteStackBlock;
    v15[1] = 3221225472;
    void v15[2] = sub_10019B858;
    v15[3] = &unk_100A49980;
    uint64_t v10 = *(void *)(a1 + 32);
    id v18 = &v19;
    void v15[4] = v10;
    id v11 = v7;
    id v16 = v11;
    NSErrorUserInfoKey v12 = v4;
    id v17 = v12;
    [v9 resolveLibraryAsset:v3 completion:v15];

    dispatch_semaphore_wait(v12, 0xFFFFFFFFFFFFFFFFLL);
    BOOL v13 = *((unsigned char *)v20 + 24) != 0;
  }
  else
  {
    BOOL v13 = 0;
    *((unsigned char *)v20 + 24) = 0;
  }
  _Block_object_dispose(&v19, 8);

  return v13;
}

void sub_10019B83C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

intptr_t sub_10019B858(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = 0;
    id v5 = [*(id *)(a1 + 32) libraryItemStateProvider];
    [v5 updateStateToPurchaseFailedForIdentifier:*(void *)(a1 + 40)];
  }
  unsigned int v6 = *(NSObject **)(a1 + 48);

  return dispatch_semaphore_signal(v6);
}

uint64_t sub_10019B97C(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_semaphore_t v4 = dispatch_semaphore_create(0);
  uint64_t v17 = 0;
  id v18 = &v17;
  uint64_t v19 = 0x2020000000;
  char v20 = 1;
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_10019BAC0;
  v11[3] = &unk_100A499F8;
  id v5 = v3;
  uint64_t v6 = *(void *)(a1 + 32);
  id v7 = *(void **)(a1 + 40);
  id v12 = v5;
  uint64_t v13 = v6;
  id v14 = v7;
  id v8 = v4;
  id v15 = v8;
  id v16 = &v17;
  +[BKUpdatesParameterProvider fetchUpdateParametersForLibraryAsset:v5 completion:v11];
  dispatch_semaphore_wait(v8, 0xFFFFFFFFFFFFFFFFLL);
  uint64_t v9 = *((unsigned __int8 *)v18 + 24);

  _Block_object_dispose(&v17, 8);
  return v9;
}

void sub_10019BAA8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019BAC0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    uint64_t v7 = *(void *)(a1 + 32);
    id v8 = [*(id *)(a1 + 40) libraryAssetProvider];
    BOOL v9 = (unint64_t)[*(id *)(a1 + 48) count] > 1;
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_10019BC38;
    v13[3] = &unk_100A499D0;
    int8x16_t v12 = *(int8x16_t *)(a1 + 32);
    id v10 = (id)v12.i64[0];
    int8x16_t v14 = vextq_s8(v12, v12, 8uLL);
    id v15 = *(id *)(a1 + 56);
    +[BKBookPurchaseAction tryToPurchaseBook:v7 libraryAssetProvider:v8 buyParameters:v5 allowPurchaseFromNonSampleBuyButton:1 suppressNetworkEvaluatorDialogs:v9 analyticsInfo:0 completion:v13];
  }
  else
  {
    id v11 = BKStoreBookUpdateLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1007EE258(a1, (uint64_t)v6, v11);
    }

    if (v6) {
      *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 0;
    }
    dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 56));
  }
}

intptr_t sub_10019BC38(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (!a3)
  {
    dispatch_semaphore_t v4 = [*(id *)(a1 + 32) storeController];
    id v5 = [*(id *)(a1 + 40) storeID];
    [v4 clearAvailableUpdatesForStoreIDAndRefreshUpdateCount:v5];
  }
  id v6 = *(NSObject **)(a1 + 48);

  return dispatch_semaphore_signal(v6);
}

void sub_10019BDB0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    uint64_t v7 = BKLibraryLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007EE30C((uint64_t)v6, v7);
    }

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    id v8 = *(NSObject **)(*(void *)(a1 + 40) + 16);
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_10019BED4;
    block[3] = &unk_100A49A48;
    id v10 = v5;
    id v11 = *(id *)(a1 + 56);
    id v12 = *(id *)(a1 + 48);
    dispatch_async(v8, block);
  }
}

void sub_10019BED4(uint64_t a1)
{
  id v7 = (id)objc_opt_new();
  if ([*(id *)(a1 + 32) count])
  {
    unint64_t v2 = 0;
    do
    {
      id v3 = [*(id *)(a1 + 32) objectAtIndexedSubscript:v2];
      if (((*(uint64_t (**)(void))(*(void *)(a1 + 40) + 16))() & 1) == 0)
      {
        dispatch_semaphore_t v4 = [v3 assetID];
        [v7 addObject:v4];
      }
      ++v2;
    }
    while (v2 < (unint64_t)[*(id *)(a1 + 32) count]);
  }
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = [v7 copy];
  (*(void (**)(uint64_t, id))(v5 + 16))(v5, v6);
}

void sub_10019C214(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 allObjects];
  dispatch_semaphore_t v4 = (void *)v3;
  uint64_t v5 = &__NSArray0__struct;
  if (v3) {
    uint64_t v5 = (void *)v3;
  }
  id v6 = v5;

  id v7 = +[JSABridge sharedInstance];
  uint64_t v8 = *(void *)(a1 + 32);
  id v10 = v6;
  BOOL v9 = +[NSArray arrayWithObjects:&v10 count:1];
  [v7 enqueueValueCall:v8 arguments:v9 file:@"BKJSALibraryManager.m" line:976];
}

void sub_10019C420(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (v5)
  {
    id v6 = BKLibraryLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007EE384((uint64_t)v5, v6);
    }
  }
  else
  {
    id v6 = +[NSMutableSet setWithArray:a2];
    [*(id *)(a1 + 32) minusSet:v6];
  }

  id v7 = +[JSABridge sharedInstance];
  uint64_t v8 = *(void *)(a1 + 40);
  BOOL v9 = [*(id *)(a1 + 32) allObjects];
  id v11 = v9;
  id v10 = +[NSArray arrayWithObjects:&v11 count:1];
  [v7 enqueueValueCall:v8 arguments:v10 file:@"BKJSALibraryManager.m" line:997];
}

void sub_10019C6CC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_10019C6E4(uint64_t a1)
{
  id v5 = +[BKAppDelegate currentSceneController];
  id v2 = [v5 newShowAssetTransaction];
  uint64_t v3 = *(void *)(*(void *)(a1 + 32) + 8);
  dispatch_semaphore_t v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 40) = v2;
}

void sub_10019D5C4(uint64_t a1, uint64_t a2)
{
  BOOL v4 = a2 == 4 || (a2 & 0xFFFFFFFFFFFFFFFELL) == 2;
  if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
  {
    CFStringRef v5 = @"denied";
    if (v4) {
      CFStringRef v5 = @"granted";
    }
    *(_DWORD *)buf = 138412290;
    CFStringRef v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Authorization %@", buf, 0xCu);
  }
  long long v15 = 0u;
  long long v16 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v6 = *(id *)(a1 + 32);
  id v7 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v14;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v9) {
          objc_enumerationMutation(v6);
        }
        id v11 = objc_retainBlock(*(id *)(*((void *)&v13 + 1) + 8 * i));
        id v12 = v11;
        if (v11) {
          (*((void (**)(id, BOOL))v11 + 2))(v11, v4);
        }
      }
      id v8 = [v6 countByEnumeratingWithState:&v13 objects:v17 count:16];
    }
    while (v8);
  }
}

void sub_10019D7FC(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = +[JSABridge sharedInstance];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = [v3 authorizationStatus];

  id v7 = +[NSNumber numberWithInteger:v6];
  uint64_t v9 = v7;
  id v8 = +[NSArray arrayWithObjects:&v9 count:1];
  [v4 enqueueValueCall:v5 arguments:v8 file:@"BKNotificationManager.m" line:84];
}

void sub_10019D98C(uint64_t a1, uint64_t a2)
{
  BOOL v4 = +[JSABridge sharedInstance];
  uint64_t v5 = *(void *)(a1 + 32);
  id v6 = +[NSNumber numberWithBool:a2];
  id v8 = v6;
  id v7 = +[NSArray arrayWithObjects:&v8 count:1];
  [v4 enqueueValueCall:v5 arguments:v7 file:@"BKNotificationManager.m" line:91];
}

void sub_10019DB18(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = objc_retainBlock(*(id *)(a1 + 32));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t))v6 + 2))(v6, a2);
  }

  if ((a2 & 1) == 0 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1007EE3FC((uint64_t)v5);
  }
}

void sub_10019DC30(uint64_t a1, uint64_t a2)
{
  if ((unint64_t)(a2 - 2) < 3)
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Already authorized", (uint8_t *)&v9, 2u);
    }
    id v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    BOOL v4 = v3;
    if (!v3) {
      goto LABEL_19;
    }
    id v5 = v3[2];
LABEL_18:
    v5();
LABEL_19:

    return;
  }
  if (a2)
  {
    if (a2 != 1)
    {
      if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
      {
        id v7 = +[NSNumber numberWithInteger:a2];
        int v9 = 138412290;
        id v10 = v7;
        _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Unknown (%@); assuming not authorized",
          (uint8_t *)&v9,
          0xCu);
      }
      id v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
      BOOL v4 = v8;
      if (!v8) {
        goto LABEL_19;
      }
      id v5 = v8[2];
      goto LABEL_18;
    }
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Denied; requesting REauthorization",
        (uint8_t *)&v9,
        2u);
    }
    sub_10019DE14(*(void *)(a1 + 32), *(void **)(a1 + 40));
  }
  else
  {
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v9) = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Not determined; requesting authorization",
        (uint8_t *)&v9,
        2u);
    }
    [*(id *)(a1 + 32) requestAuthorizationWithCompletion:*(void *)(a1 + 40)];
  }
}

void sub_10019DE14(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = v3;
  if (a1)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_10019DF3C;
    v8[3] = &unk_100A443F0;
    void v8[4] = a1;
    id v9 = v3;
    id v5 = objc_retainBlock(v8);
    if (v5)
    {
      if (+[NSThread isMainThread])
      {
        ((void (*)(void *))v5[2])(v5);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_10019E05C;
        block[3] = &unk_100A442B8;
        id v7 = v5;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
  }
}

void sub_10019DF3C(uint64_t a1)
{
  id v2 = +[NSURL URLWithString:UIApplicationOpenNotificationSettingsURLString];
  id v3 = *(void **)(a1 + 40);
  if (v2)
  {
    if (v3)
    {
      BOOL v4 = [*(id *)(a1 + 32) reauthorizationCompletions];
      id v5 = [*(id *)(a1 + 40) copy];
      id v6 = objc_retainBlock(v5);
      [v4 addObject:v6];
    }
    if (os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, (os_log_t)&_os_log_default, OS_LOG_TYPE_DEFAULT, "[BKNotificationManager] [Reauthorization] Bouncing out to Settings app", v9, 2u);
    }
    id v7 = +[UIApplication sharedApplication];
    [v7 openURL:v2];
  }
  else
  {
    id v8 = objc_retainBlock(v3);
    id v7 = v8;
    if (v8) {
      (*((void (**)(id, void))v8 + 2))(v8, 0);
    }
  }
}

uint64_t sub_10019E05C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_10019E06C(uint64_t result, void *a2)
{
  uint64_t v2 = *(void *)(result + 32);
  if (v2)
  {
    id v3 = [a2 authorizationStatus];
    BOOL v4 = *(uint64_t (**)(uint64_t, id))(v2 + 16);
    return v4(v2, v3);
  }
  return result;
}

void sub_10019E3A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = [v3 bk_window];
  [v4 makeKeyAndVisible];

  id v5 = objc_alloc((Class)NSMutableDictionary);
  id v6 = [*(id *)(a1 + 32) userInfo];
  id v11 = [v5 initWithDictionary:v6];

  id v7 = +[BKSceneControllerUtilities sceneTypekeyForSceneController:v3];
  id v8 = +[BKSceneControllerUtilities sceneTypeKey];
  [v11 setObject:v7 forKeyedSubscript:v8];

  id v9 = [v3 requestAssetID];

  id v10 = +[BKSceneControllerUtilities assetIDKey];
  [v11 setObject:v9 forKeyedSubscript:v10];

  +[JSAApplication openAchievementSheet:v11];
}

void sub_10019F520(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  id v12 = [v2 parentViewController];
  [v2 preferredFrameInViewController:v12 isPresented:[*(id *)(a1 + 32) isPresented] newSize:*(double *)(a1 + 40) isPresented:*(double *)(a1 + 48)];
  double v4 = v3;
  double v6 = v5;
  double v8 = v7;
  double v10 = v9;
  id v11 = [*(id *)(a1 + 32) view];
  [v11 setFrame:v4, v6, v8, v10];
}

void sub_10019F760(uint64_t a1)
{
  double v1 = *(double *)(a1 + 40);
  double v2 = *(double *)(a1 + 48);
  double v3 = *(double *)(a1 + 56);
  double v4 = *(double *)(a1 + 64);
  id v5 = [*(id *)(a1 + 32) view];
  [v5 setFrame:v1, v2, v3, v4];
}

void sub_10019FA28(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    double v4 = BCAugmentedExperienceLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1007EE55C(a1, (uint64_t)v3, v4);
    }
  }
  (*(void (**)(void))(*(void *)(a1 + 40) + 16))();
}

id sub_10019FF58(uint64_t a1)
{
  long long v1 = *(_OWORD *)(a1 + 56);
  v3[0] = *(_OWORD *)(a1 + 40);
  v3[1] = v1;
  v3[2] = *(_OWORD *)(a1 + 72);
  return [*(id *)(a1 + 32) setTransform:v3];
}

void sub_1001A05C8(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 112));
  _Unwind_Resume(a1);
}

void sub_1001A05F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  double v2 = WeakRetained;
  if (WeakRetained)
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    uint64_t v3 = [WeakRetained presentationCompletionBlocks];
    id v4 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v12;
      do
      {
        double v7 = 0;
        do
        {
          if (*(void *)v12 != v6) {
            objc_enumerationMutation(v3);
          }
          id v8 = objc_retainBlock(*(id *)(*((void *)&v11 + 1) + 8 * (void)v7));
          double v9 = v8;
          if (v8) {
            (*((void (**)(id))v8 + 2))(v8);
          }

          double v7 = (char *)v7 + 1;
        }
        while (v5 != v7);
        id v5 = [v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v5);
    }

    double v10 = [v2 presentationCompletionBlocks];
    [v10 removeAllObjects];
  }
}

void sub_1001A0734(id *a1)
{
  double v2 = a1 + 6;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v4 = [WeakRetained transitionAnimationController];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001A0834;
  v5[3] = &unk_100A47E40;
  objc_copyWeak(&v8, v2);
  id v6 = a1[4];
  id v7 = a1[5];
  [v4 prepareForPresentation:v5];

  objc_destroyWeak(&v8);
}

void sub_1001A0820(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001A0834(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001A08E4;
  _OWORD v4[3] = &unk_100A44120;
  void v4[4] = WeakRetained;
  uint64_t v3 = *(void *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [WeakRetained presentViewController:v3 animated:1 completion:v4];
}

uint64_t sub_1001A08E4(uint64_t a1)
{
  [*(id *)(a1 + 32) bc_analyticsVisibilityUpdateSubtree];
  double v2 = *(uint64_t (**)(void))(*(void *)(a1 + 40) + 16);

  return v2();
}

id sub_1001A0928(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _forceOrientationBackToPortraitOrientation:*(void *)(a1 + 40)];
}

void sub_1001A0B60(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,id location)
{
  objc_destroyWeak(v23);
  objc_destroyWeak(v22);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A0B8C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v3 = *(unsigned __int8 *)(a1 + 40);
    id v6 = WeakRetained;
    id v4 = [WeakRetained transitionAnimationController];
    id v5 = v4;
    if (v3) {
      [v4 setupAnimationsForPresentation];
    }
    else {
      [v4 setupAnimationsForDismissal];
    }

    id WeakRetained = v6;
  }
}

void sub_1001A0BFC(uint64_t a1, uint64_t a2)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  if (WeakRetained)
  {
    int v5 = *(unsigned __int8 *)(a1 + 40);
    id v8 = WeakRetained;
    id v6 = [WeakRetained transitionAnimationController];
    id v7 = v6;
    if (v5) {
      [v6 finalizeAnimationsForPresentation:a2];
    }
    else {
      [v6 finalizeAnimationsForDismissal:a2];
    }

    [v8 setTransitionAnimationController:0];
    id WeakRetained = v8;
  }
}

void sub_1001A1040(uint64_t a1, void *a2)
{
  id v8 = a2;
  if (([v8 isInteractive] & 1) == 0
    && ([v8 isCancelled] & 1) == 0)
  {
    [*(id *)(a1 + 32) _willDismissCardWithReason:2];
    if (*(unsigned char *)(a1 + 40))
    {
      int v3 = [*(id *)(a1 + 32) transitionAnimationController];

      if (!v3)
      {
        objc_opt_class();
        id v4 = [*(id *)(a1 + 32) cardViewController];
        int v5 = BUDynamicCast();

        id v6 = [[BKEndOfBookCardTransitionAnimationController alloc] initWithCompactViewController:*(void *)(a1 + 32) cardViewController:v5];
        [*(id *)(a1 + 32) setTransitionAnimationController:v6];
      }
      id v7 = [*(id *)(a1 + 32) transitionAnimationController];
      [v7 prepareForDismissal];
    }
  }
}

id sub_1001A1464(uint64_t a1)
{
  return [*(id *)(a1 + 32) dismissViewControllerAnimated:0 completion:*(void *)(a1 + 40)];
}

void sub_1001A1474(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) presentationController];
  [v2 dismissalTransitionWillBegin];

  id v3 = [*(id *)(a1 + 32) view];
  [v3 setAlpha:0.0];
}

void sub_1001A158C(uint64_t a1)
{
  [*(id *)(a1 + 32) dismiss];
  double v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    v2[2]();
    double v2 = v3;
  }
}

void sub_1001A1710(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) delegate];
  [v2 endOfBookCompactViewControllerWantsToCloseAsset:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];

  *(unsigned char *)(*(void *)(a1 + 32) + 8) = 0;
}

BOOL sub_1001A3208(uint64_t a1, void *a2)
{
  return [a2 sortMode] == *(id *)(a1 + 32);
}

void sub_1001A34F8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  long long v1 = +[BUAccountsProvider sharedProvider];
  uint64_t v2 = [v1 activeStoreAccount];
  id v3 = [v2 ams_DSID];

  id v4 = [WeakRetained currentStoreAccountID];
  LOBYTE(v2) = [v4 isEqual:v3];

  if ((v2 & 1) == 0) {
    [WeakRetained setCurrentStoreAccountID:v3];
  }
  [WeakRetained _updateStoreStatus];
}

void sub_1001A3EC0(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 96));
  _Unwind_Resume(a1);
}

void sub_1001A3EE4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  if (v5)
  {
    id v8 = [v5 lastObject];
    double v9 = v8;
    if (v8)
    {
      double v10 = [v8 storeDownloadParameters];
      objc_msgSend(WeakRetained, "_executePurchaseOfBookWithParameters:storeID:isAudiobook:suppressNetworkEvaluatorDialogs:shouldSuppressError:analyticsInfo:completion:", v10, *(void *)(a1 + 32), objc_msgSend(*(id *)(a1 + 40), "isAudiobook"), *(unsigned __int8 *)(a1 + 72), 1, *(void *)(a1 + 48), *(void *)(a1 + 56));
    }
    else
    {
      long long v13 = BKLibraryDataSourceJaliscoLog();
      if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
        sub_1007EE6DC(a1, v13);
      }

      id v14 = objc_retainBlock(*(id *)(a1 + 56));
      long long v15 = v14;
      if (v14) {
        (*((void (**)(id, void, void))v14 + 2))(v14, 0, 0);
      }
    }
  }
  else
  {
    long long v11 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
      sub_1007EE660(a1, (uint64_t)v6, v11);
    }

    id v12 = objc_retainBlock(*(id *)(a1 + 56));
    double v9 = v12;
    if (v12) {
      (*((void (**)(id, void, id))v12 + 2))(v12, 0, v6);
    }
  }
}

void sub_1001A4064(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  if (v8)
  {
    [*(id *)(a1 + 64) _executePurchaseOfBookWithParameters:v8 storeID:*(void *)(a1 + 32) isAudiobook:[*(id *)(a1 + 40) isAudiobook] suppressNetworkEvaluatorDialogs:*(unsigned __int8 *)(a1 + 72) shouldSuppressError:1 analyticsInfo:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
  }
  else
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 56));
    id v7 = v6;
    if (v6) {
      (*((void (**)(id, void, id))v6 + 2))(v6, 0, v5);
    }
  }
}

void sub_1001A4268(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A4290(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
    uint64_t v8 = *(unsigned __int8 *)(a1 + 56);
    double v9 = *(void **)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    id v11[2] = sub_1001A43A8;
    v11[3] = &unk_100A43EB8;
    id v12 = v9;
    [WeakRetained _executePurchaseOfBookWithParameters:v5 storeID:v12 isAudiobook:v8 suppressNetworkEvaluatorDialogs:0 shouldSuppressError:0 analyticsInfo:v10 completion:v11];
  }
  else
  {
    id WeakRetained = BKStoreBookUpdateLog();
    if (os_log_type_enabled(WeakRetained, OS_LOG_TYPE_ERROR)) {
      sub_1007EE758(a1, (uint64_t)v6, WeakRetained);
    }
  }
}

void sub_1001A43A8(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = +[BKAppDelegate delegate];
    id v4 = [v3 storeController];

    [v4 clearAvailableUpdatesForStoreIDAndRefreshUpdateCount:*(void *)(a1 + 32)];
  }
}

void sub_1001A45C0(uint64_t a1, uint64_t a2, void *a3, void *a4)
{
  id v6 = a3;
  id v7 = a4;
  uint64_t v8 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEBUG)) {
    sub_1007EE7D4((uint64_t)v6, (uint64_t)v7, v8);
  }

  if (v7 && !*(unsigned char *)(a1 + 40))
  {
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_1001A46DC;
    block[3] = &unk_100A43D60;
    id v12 = v7;
    dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  }
  id v9 = objc_retainBlock(*(id *)(a1 + 32));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(id, BOOL, id))v9 + 2))(v9, v7 == 0, v7);
  }
}

void sub_1001A46DC(uint64_t a1)
{
  long long v1 = [*(id *)(a1 + 32) localizedDescription];
  id v6 = +[UIAlertController alertControllerWithTitle:v1 message:0 preferredStyle:1];

  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  id v4 = +[UIAlertAction actionWithTitle:v3 style:0 handler:0];
  [v6 addAction:v4];

  id v5 = +[BKAppDelegate currentSceneController];
  [v5 presentViewController:v6 animated:1 completion:0];
}

id sub_1001A4E10(uint64_t a1)
{
  return _[*(id *)(a1 + 32) doneSleepingBeforeNextBook];
}

id sub_1001A4F18(uint64_t a1)
{
  return _[*(id *)(a1 + 32) doneSleepingBeforeSnapshot];
}

id sub_1001A5014(uint64_t a1)
{
  return _[*(id *)(a1 + 32) doneSleepingBeforePagination];
}

void *sub_1001A50F4(void *result)
{
  uint64_t v1 = result[4];
  if (!*(_DWORD *)(v1 + 8))
  {
    uint64_t v2 = result;
    unsigned int v3 = [*(id *)(v1 + 16) isInLibrary];
    id v4 = (id *)v2[4];
    if (v3)
    {
      return _[v4 decideAboutOpeningTheNextBook];
    }
    else
    {
      id result = [v4[2] goToLibrary];
      *(_DWORD *)(v2[4] + 8) = 8;
    }
  }
  return result;
}

void *sub_1001A51F0(void *result)
{
  uint64_t v1 = result[4];
  int v2 = *(_DWORD *)(v1 + 8);
  if (v2 == 5)
  {
    id v4 = result;
    id result = [*(id *)(v1 + 16) goToFirstPage];
    uint64_t v1 = v4[4];
    int v3 = 9;
  }
  else
  {
    if (v2 != 6) {
      return result;
    }
    int v3 = 4;
  }
  *(_DWORD *)(v1 + 8) = v3;
  return result;
}

_DWORD *sub_1001A52D0(uint64_t a1)
{
  id result = *(_DWORD **)(a1 + 32);
  if (result[2] == 8) {
    return _[result decideAboutOpeningTheNextBook];
  }
  return result;
}

void *sub_1001A5374(void *result)
{
  uint64_t v1 = result[4];
  int v2 = *(_DWORD *)(v1 + 8);
  if (v2 == 4)
  {
    id v4 = result;
    id result = [*(id *)(v1 + 16) goToFirstPage];
    uint64_t v1 = v4[4];
    int v3 = 9;
  }
  else
  {
    if (v2 != 6) {
      return result;
    }
    int v3 = 5;
  }
  *(_DWORD *)(v1 + 8) = v3;
  return result;
}

_DWORD *sub_1001A5454(uint64_t a1)
{
  id result = *(_DWORD **)(a1 + 32);
  if (result[2] == 7)
  {
    id result = [result sleepBeforeSnapshot];
    *(_DWORD *)(*(void *)(a1 + 32) + 8) = 2;
  }
  return result;
}

void *sub_1001A5520(void *result)
{
  uint64_t v1 = result[4];
  if (*(_DWORD *)(v1 + 8) == 7)
  {
    int v2 = result;
    unsigned int v3 = [*(id *)(v1 + 16) isLooping];
    id v4 = *(void **)(v2[4] + 16);
    if (v3)
    {
      id result = [v4 goToFirstPage];
      int v5 = 10;
    }
    else
    {
      [v4 terminateBookTest];
      id result = [*(id *)(v2[4] + 16) goToLibrary];
      int v5 = 8;
    }
    *(_DWORD *)(v2[4] + 8) = v5;
  }
  return result;
}

_DWORD *sub_1001A561C(uint64_t a1)
{
  id result = *(_DWORD **)(a1 + 32);
  int v3 = result[2];
  if (v3 == 10)
  {
    id result = [result sleepBeforeSnapshot];
    int v4 = 2;
  }
  else
  {
    if (v3 != 9) {
      return result;
    }
    id result = [result sleepBeforePagination];
    int v4 = 3;
  }
  *(_DWORD *)(*(void *)(a1 + 32) + 8) = v4;
  return result;
}

void sub_1001A5CCC(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) onReceiveHandler];
  v1[2]();
}

void sub_1001A5F38(uint64_t a1, void *a2)
{
  id v3 = [a2 rootBarCoordinator];
  [*(id *)(a1 + 32) _startTestWithRootBarCoordinating:v3];
}

BOOL sub_1001A64DC(id a1, TUIFeedEntry *a2, unint64_t a3, BOOL *a4)
{
  int v5 = [(TUIFeedEntry *)a2 templateURL];
  id v6 = [v5 lastPathComponent];
  unsigned int v7 = [v6 isEqualToString:@"swoosh-root.xml"];

  if (v7) {
    *a4 = 1;
  }
  return v7;
}

void sub_1001A6548(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) hostingViewController];
  id v3 = [v2 bc_firstVisibleChildViewControllerOfClass:objc_opt_class() includePresented:1];

  [v3 popAllCardsAnimated:0 completion:&stru_100A49CA8];
  int v4 = sub_10020FC30();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_INFO, "waiting 2s for product page to open", buf, 2u);
  }

  dispatch_time_t v5 = dispatch_time(0, 2000000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001A66A8;
  block[3] = &unk_100A443C8;
  id v6 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v8 = v6;
  id v9 = *(id *)(a1 + 56);
  dispatch_after(v5, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001A66A8(uint64_t a1)
{
  [*(id *)(a1 + 32) setStartPPTTestCalled:1];
  [*(id *)(a1 + 32) startPPTTest];
  id v2 = [*(id *)(a1 + 40) delegate];
  [v2 feedEntry:*(void *)(a1 + 40) handleBehavior:0 name:@"GOTO_BOOK" arguments:*(void *)(a1 + 48)];
}

id sub_1001A69FC(uint64_t a1)
{
  [*(id *)(a1 + 32) _updateWithNewOffer];
  id v2 = *(void **)(a1 + 32);

  return [v2 setUpgradeFlowManagerFuture:0];
}

void sub_1001A6DF8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) observers];
    [v4 removeObject:*(void *)(a1 + 40)];
  }
}

void sub_1001A6F08(uint64_t a1)
{
  long long v6 = 0u;
  long long v7 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v1 = [*(id *)(a1 + 32) observers];
  id v2 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v4 = *(void *)v7;
    do
    {
      dispatch_time_t v5 = 0;
      do
      {
        if (*(void *)v7 != v4) {
          objc_enumerationMutation(v1);
        }
        [*(id *)(*((void *)&v6 + 1) + 8 * (void)v5) cloudStorageUpgradeSheetWasDismissed];
        dispatch_time_t v5 = (char *)v5 + 1;
      }
      while (v3 != v5);
      id v3 = [v1 countByEnumeratingWithState:&v6 objects:v10 count:16];
    }
    while (v3);
  }
}

void sub_1001A735C(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001A7384(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001A7440;
  v5[3] = &unk_100A449F0;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1001A7440(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = [WeakRetained tableView];
  [v3 reloadData];

  id v4 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v4)
  {
    dispatch_time_t v5 = v4;
    v4[2]();
    id v4 = v5;
  }
}

void sub_1001A7BDC(id a1)
{
}

id sub_1001A84E8(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadData];
}

void sub_1001A84F0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 0.0;
  }
  else {
    double v2 = 1.0;
  }
  id v3 = [*(id *)(a1 + 32) indexPathsForVisibleRows];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001A85B0;
  _OWORD v4[3] = &unk_100A49D10;
  id v5 = *(id *)(a1 + 32);
  double v6 = v2;
  [v3 enumerateObjectsUsingBlock:v4];
}

void sub_1001A85B0(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) cellForRowAtIndexPath:a2];
  id v4 = [v3 detailTextLabel];

  [v4 setAlpha:*(double *)(a1 + 40)];
}

void sub_1001A861C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (([*(id *)(a1 + 32) containsObject:a2] & 1) == 0)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = +[NSIndexPath indexPathForRow:a3 inSection:0];
    [v5 addObject:v6];
  }
}

void sub_1001A86A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (([*(id *)(a1 + 32) containsObject:a2] & 1) == 0)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = +[NSIndexPath indexPathForRow:a3 inSection:0];
    [v5 addObject:v6];
  }
}

void sub_1001A8734(uint64_t a1)
{
  UIAccessibilityNotifications v2 = UIAccessibilityLayoutChangedNotification;
  id v4 = [*(id *)(a1 + 32) tableView];
  id v3 = [v4 cellForRowAtIndexPath:*(void *)(a1 + 40)];
  UIAccessibilityPostNotification(v2, v3);
}

id sub_1001A87AC(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count]) {
    [*(id *)(a1 + 40) deleteRowsAtIndexPaths:*(void *)(a1 + 32) withRowAnimation:*(void *)(a1 + 56)];
  }
  id result = [*(id *)(a1 + 48) count];
  if (result)
  {
    id v3 = *(void **)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    uint64_t v5 = *(void *)(a1 + 56);
    return [v3 insertRowsAtIndexPaths:v4 withRowAnimation:v5];
  }
  return result;
}

void sub_1001A8814(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    UIAccessibilityNotifications v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

void sub_1001A8AD0(uint64_t a1)
{
  if (([*(id *)(a1 + 32) isTextEditing] & 1) == 0)
  {
    UIAccessibilityNotifications v2 = [*(id *)(a1 + 32) _addCollectionIndexPath];
    *(unsigned char *)(*(void *)(a1 + 32) + 73) = 1;
    *(unsigned char *)(*(void *)(a1 + 32) + 81) = 0;
    id v3 = [*(id *)(a1 + 32) tableView];
    id v7 = v2;
    uint64_t v4 = +[NSArray arrayWithObjects:&v7 count:1];
    [v3 reloadRowsAtIndexPaths:v4 withRowAnimation:5];

    [*(id *)(a1 + 40) scrollToRowAtIndexPath:v2 atScrollPosition:3 animated:0];
    [*(id *)(a1 + 40) layoutIfNeeded];
    uint64_t v5 = [*(id *)(a1 + 32) textEntryCell];
    id v6 = [v5 textEntryField];
    [v6 becomeFirstResponder];
  }
}

void sub_1001A8DC4(uint64_t a1)
{
  UIAccessibilityNotifications v2 = *(void **)(a1 + 32);
  if (*(unsigned char *)(a1 + 48))
  {
    uint64_t v7 = *(void *)(a1 + 40);
    id v3 = +[NSArray arrayWithObjects:&v7 count:1];
    if (*(unsigned char *)(a1 + 49)) {
      uint64_t v4 = 0;
    }
    else {
      uint64_t v4 = 5;
    }
    [v2 insertRowsAtIndexPaths:v3 withRowAnimation:v4];
  }
  else
  {
    uint64_t v6 = *(void *)(a1 + 40);
    id v3 = +[NSArray arrayWithObjects:&v6 count:1];
    if (*(unsigned char *)(a1 + 49)) {
      uint64_t v5 = 0;
    }
    else {
      uint64_t v5 = 5;
    }
    [v2 deleteRowsAtIndexPaths:v3 withRowAnimation:v5];
  }
}

void sub_1001A9208(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [v5 hidden];
  unsigned __int8 v4 = [v3 BOOLValue];

  if ((v4 & 1) == 0) {
    [*(id *)(a1 + 32) addObject:v5];
  }
}

void sub_1001A9394(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained includeHiddenInPrefixCollections])
    {
      id v4 = objc_alloc_init((Class)NSMutableArray);
      id v5 = *(void **)(a1 + 32);
      v32[0] = _NSConcreteStackBlock;
      v32[1] = 3221225472;
      void v32[2] = sub_1001A9720;
      v32[3] = &unk_100A49DB0;
      _OWORD v32[4] = v3;
      id v6 = v4;
      id v33 = v6;
      [v5 enumerateObjectsUsingBlock:v32];
      [v3 invalidatePrefixCollections];
      if ([v6 count])
      {
        [v3 tableView];
        v29[0] = _NSConcreteStackBlock;
        v29[1] = 3221225472;
        v29[2] = sub_1001A9784;
        _OWORD v29[3] = &unk_100A43DD8;
        id v30 = (id)objc_claimAutoreleasedReturnValue();
        id v31 = v6;
        id v7 = v30;
        [v7 performBatchUpdates:v29 completion:0];
      }
    }
    else
    {
      id v6 = [v3 prefixCollections];
      [v3 invalidatePrefixCollections];
      long long v8 = [v3 prefixCollections];
      id v9 = [objc_alloc((Class)NSSet) initWithArray:v6];
      id v10 = [objc_alloc((Class)NSSet) initWithArray:v8];
      id v11 = objc_alloc_init((Class)NSMutableArray);
      id v12 = objc_alloc_init((Class)NSMutableArray);
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_1001A9794;
      v26[3] = &unk_100A49D38;
      id v13 = v10;
      id v27 = v13;
      id v14 = v11;
      id v28 = v14;
      [v6 enumerateObjectsUsingBlock:v26];
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_1001A9820;
      _OWORD v23[3] = &unk_100A49D38;
      id v15 = v9;
      id v24 = v15;
      id v16 = v12;
      id v25 = v16;
      [v8 enumerateObjectsUsingBlock:v23];
      if ([v14 count] || objc_msgSend(v16, "count"))
      {
        uint64_t v17 = [v3 tableView];
        v19[0] = _NSConcreteStackBlock;
        v19[1] = 3221225472;
        void v19[2] = sub_1001A98AC;
        v19[3] = &unk_100A443C8;
        id v20 = v14;
        id v21 = v17;
        id v22 = v16;
        id v18 = v17;
        [v18 performBatchUpdates:v19 completion:0];
      }
    }
  }
}

void sub_1001A9720(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _indexPathForCollectionID:a2];
  if (v3)
  {
    id v4 = v3;
    [*(id *)(a1 + 40) addObject:v3];
    id v3 = v4;
  }
}

id sub_1001A9784(uint64_t a1)
{
  return [*(id *)(a1 + 32) reloadRowsAtIndexPaths:*(void *)(a1 + 40) withRowAnimation:0];
}

void sub_1001A9794(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (([*(id *)(a1 + 32) containsObject:a2] & 1) == 0)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = +[NSIndexPath indexPathForRow:a3 inSection:0];
    [v5 addObject:v6];
  }
}

void sub_1001A9820(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (([*(id *)(a1 + 32) containsObject:a2] & 1) == 0)
  {
    id v5 = *(void **)(a1 + 40);
    id v6 = +[NSIndexPath indexPathForRow:a3 inSection:0];
    [v5 addObject:v6];
  }
}

id sub_1001A98AC(id *a1)
{
  if ([a1[4] count]) {
    [a1[5] deleteRowsAtIndexPaths:a1[4] withRowAnimation:0];
  }
  id result = [a1[6] count];
  if (result)
  {
    id v3 = a1[5];
    id v4 = a1[6];
    return [v3 insertRowsAtIndexPaths:v4 withRowAnimation:0];
  }
  return result;
}

void sub_1001A9C24(uint64_t a1, void *a2)
{
  id v3 = [a2 filteredSetUsingPredicate:*(void *)(a1 + 32)];
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  id v4 = (char *)[v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v12;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v12 != v6) {
          objc_enumerationMutation(v3);
        }
        objc_opt_class();
        long long v8 = BUDynamicCast();
        id v9 = [v8 collectionID];
        if (v9
          || ([v8 collection],
              id v10 = objc_claimAutoreleasedReturnValue(),
              [v10 collectionID],
              id v9 = objc_claimAutoreleasedReturnValue(),
              v10,
              v9))
        {
          [*(id *)(a1 + 40) addObject:v9];
        }
        ++v7;
      }
      while (v5 != v7);
      id v5 = (char *)[v3 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v5);
  }
}

void sub_1001A9D8C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) count])
  {
    id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
    id v3 = WeakRetained;
    if (WeakRetained)
    {
      id v4 = [WeakRetained collectionAssetCounts];
      if (v4)
      {
        long long v13 = 0u;
        long long v14 = 0u;
        long long v11 = 0u;
        long long v12 = 0u;
        id v5 = *(id *)(a1 + 32);
        id v6 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
        if (v6)
        {
          id v7 = v6;
          uint64_t v8 = *(void *)v12;
          do
          {
            id v9 = 0;
            do
            {
              if (*(void *)v12 != v8) {
                objc_enumerationMutation(v5);
              }
              [v4 setObject:0 forKeyedSubscript:*(void *)(*((void *)&v11 + 1) + 8 * (void)v9) atIndex:v11];
              id v9 = (char *)v9 + 1;
            }
            while (v7 != v9);
            id v7 = [v5 countByEnumeratingWithState:&v11 objects:v15 count:16];
          }
          while (v7);
        }

        id v10 = [v3 coalescedTableViewReloadData];
        [v10 signalWithCompletion:&stru_100A49DF8];
      }
    }
  }
}

void sub_1001AA5EC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) tableView];
  [v2 scrollToRowAtIndexPath:*(void *)(a1 + 40) atScrollPosition:2 animated:0];
}

id sub_1001AA878(uint64_t a1)
{
  [*(id *)(a1 + 32) setTitle:*(void *)(a1 + 40)];
  uint64_t v2 = *(void *)(a1 + 48);
  id v3 = *(void **)(a1 + 32);

  return [v3 setStyle:v2];
}

void sub_1001AACC8(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) mutableCollectionWithCollectionID:*(void *)(a1 + 40) inManagedObjectContext:a2 error:0];
  [v4 setTitle:*(void *)(a1 + 48)];
  id v3 = +[NSDate date];
  [v4 setLastModification:v3];
}

id sub_1001AAD4C(uint64_t a1, void *a2)
{
  return [a2 setTitle:*(void *)(a1 + 32)];
}

void sub_1001AB170(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 80), 8);
  _Unwind_Resume(a1);
}

void sub_1001AB188(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
  id v4 = +[BKLibraryManager predicateFor_All_Finished_LibraryAssets];
  [v6 setPredicate:v4];

  id v5 = [v3 executeFetchRequest:v6 error:0];

  *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = [v5 count];
}

void sub_1001AB24C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v6 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKCollectionMember"];
  id v4 = +[BKLibraryManager predicateForCollectionMembersInCollectionID:*(void *)(a1 + 32) hideUnownedItems:0];
  [v6 setPredicate:v4];

  id v5 = [v3 executeFetchRequest:v6 error:0];

  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [v5 count];
}

void sub_1001AB588(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  id v5 = a2;
  id v6 = [v4 collectionID];
  id v8 = [v3 mutableCollectionWithCollectionID:v6 inManagedObjectContext:v5 error:0];

  if (*(unsigned char *)(a1 + 48)) {
    id v7 = &__kCFBooleanTrue;
  }
  else {
    id v7 = &__kCFBooleanFalse;
  }
  [v8 setHidden:v7];
}

void sub_1001ABB1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1007EE85C(a1, (uint64_t)v4);
  }
}

void sub_1001AC10C(uint64_t a1)
{
  long long v25 = 0u;
  long long v26 = 0u;
  long long v27 = 0u;
  long long v28 = 0u;
  id obj = [*(id *)(a1 + 32) items];
  id v2 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
  if (v2)
  {
    id v3 = v2;
    uint64_t v24 = *(void *)v26;
    do
    {
      id v4 = 0;
      do
      {
        if (*(void *)v26 != v24) {
          objc_enumerationMutation(obj);
        }
        id v5 = *(void **)(*((void *)&v25 + 1) + 8 * (void)v4);
        objc_opt_class();
        id v6 = [v5 dragItem];
        id v7 = [v6 localObject];
        uint64_t v8 = BUDynamicCast();

        objc_opt_class();
        id v9 = [v5 dragItem];
        id v10 = [v9 localObject];
        uint64_t v11 = BUDynamicCast();

        objc_opt_class();
        long long v12 = [v5 dragItem];
        long long v13 = [v12 localObject];
        long long v14 = BUDynamicCast();

        id v15 = [v14 assetID];
        id v16 = [v15 length];

        if (v16)
        {
          uint64_t v17 = +[BKLibraryManager defaultManager];
          id v18 = [v14 assetID];
          uint64_t v19 = [v17 libraryAssetOnMainQueueWithAssetID:v18];

          uint64_t v8 = v19;
        }
        if (v8 | v11)
        {
          id v20 = *(void **)(a1 + 32);
          id v21 = [v5 dragItem];
          id v22 = [v20 dropItem:v21 intoRowAtIndexPath:*(void *)(a1 + 40) rect:*(double *)(a1 + 48), *(double *)(a1 + 56), *(double *)(a1 + 64), *(double *)(a1 + 72)];
        }
        id v4 = (char *)v4 + 1;
      }
      while (v3 != v4);
      id v3 = [obj countByEnumeratingWithState:&v25 objects:v29 count:16];
    }
    while (v3);
  }
}

void sub_1001AC3A4(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 64))
  {
    id v2 = [*(id *)(a1 + 32) collectionID];
    unsigned int v3 = [v2 isEqualToString:kBKCollectionDefaultIDFinished];

    if (v3)
    {
      long long v33 = 0u;
      long long v34 = 0u;
      long long v31 = 0u;
      long long v32 = 0u;
      id v4 = *(id *)(a1 + 40);
      id v5 = (char *)[v4 countByEnumeratingWithState:&v31 objects:v36 count:16];
      if (v5)
      {
        id v6 = v5;
        uint64_t v7 = *(void *)v32;
        do
        {
          for (uint64_t i = 0; i != v6; ++i)
          {
            if (*(void *)v32 != v7) {
              objc_enumerationMutation(v4);
            }
            objc_opt_class();
            id v9 = BUDynamicCast();
            if (([v9 isContainer] & 1) == 0) {
              [v9 setFinishedStateAddToFinishedCollection];
            }
          }
          id v6 = (char *)[v4 countByEnumeratingWithState:&v31 objects:v36 count:16];
        }
        while (v6);
      }

      id v10 = +[BKLibraryManager defaultManager];
      uint64_t v11 = [v10 uiChildContext];

      [v11 setSaveContext:2];
      if ([v11 hasChanges]) {
        [v11 saveLibrary];
      }
    }
    else
    {
      long long v12 = [*(id *)(a1 + 32) collectionID];
      unsigned int v13 = [v12 isEqualToString:kBKCollectionDefaultIDWantToRead];

      if (v13)
      {
        long long v14 = +[NSMutableArray array];
        long long v27 = 0u;
        long long v28 = 0u;
        long long v29 = 0u;
        long long v30 = 0u;
        id v15 = *(id *)(a1 + 40);
        id v16 = [v15 countByEnumeratingWithState:&v27 objects:v35 count:16];
        if (v16)
        {
          id v17 = v16;
          uint64_t v18 = *(void *)v28;
          do
          {
            for (j = 0; j != v17; j = (char *)j + 1)
            {
              if (*(void *)v28 != v18) {
                objc_enumerationMutation(v15);
              }
              id v20 = *(void **)(*((void *)&v27 + 1) + 8 * (void)j);
              if (([v20 isContainer] & 1) == 0) {
                [v14 addObject:v20];
              }
            }
            id v17 = [v15 countByEnumeratingWithState:&v27 objects:v35 count:16];
          }
          while (v17);
        }

        [*(id *)(a1 + 32) addLibraryAssets:v14];
        id v21 = *(void **)(a1 + 48);
        uint64_t v22 = *(void *)(a1 + 56);
        id v23 = [*(id *)(a1 + 32) collectionID];
        [v21 _addStoreItems:v22 toCollection:v23];
      }
      else
      {
        [*(id *)(a1 + 32) addLibraryAssets:*(void *)(a1 + 40)];
        uint64_t v24 = *(void **)(a1 + 48);
        uint64_t v25 = *(void *)(a1 + 56);
        id v26 = [*(id *)(a1 + 32) collectionID];
        [v24 _addStoreItems:v25];
      }
    }
  }
}

void sub_1001AD0B4(id a1, BKLibraryCollectionsListViewController *a2, NSIndexPath *a3, id a4)
{
  objc_initWeak(&location, a2);
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_loadWeakRetained(&location);
  id v9 = v8;
  if (v8
    && ([v8 _collectionForIndexPath:v6], (id v10 = objc_claimAutoreleasedReturnValue()) != 0))
  {
    uint64_t v33 = 0;
    long long v34 = &v33;
    uint64_t v35 = 0x2020000000;
    uint64_t v36 = 0;
    uint64_t v11 = +[BKLibraryManager defaultManager];
    v29[0] = _NSConcreteStackBlock;
    v29[1] = 3221225472;
    v29[2] = sub_1001AD3E0;
    _OWORD v29[3] = &unk_100A45660;
    long long v32 = &v33;
    id v12 = v9;
    id v30 = v12;
    id v13 = v10;
    id v31 = v13;
    [v11 performBlockInUIContext:v29];

    if (v34[3])
    {
      long long v14 = [v12 delegate];
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_1001AD418;
      _OWORD v23[3] = &unk_100A49F00;
      id v15 = v12;
      id v24 = v15;
      id v25 = v13;
      long long v28 = &v33;
      id v26 = v6;
      id v27 = v7;
      id v16 = [v14 collectionListView:v15 alertControllerForDeletingCollection:v25 completionHandler:v23];

      [v15 presentViewController:v16 animated:1 completion:0];
      id v17 = v24;
    }
    else
    {
      uint64_t v19 = +[BAEventReporter sharedReporter];
      id v20 = [v12 ba_effectiveAnalyticsTracker];
      id v21 = [v13 collectionID];
      [v19 emitCollectionRemoveEventWithTracker:v20 collectionID:v21 collectionItemCount:v34[3]];

      [v12 _concludeDeleteAtIndexPath:v6];
      id v22 = objc_retainBlock(v7);
      id v17 = v22;
      if (v22) {
        (*((void (**)(id, uint64_t))v22 + 2))(v22, 1);
      }
    }

    _Block_object_dispose(&v33, 8);
  }
  else
  {
    id v18 = objc_retainBlock(v7);
    id v13 = v18;
    if (v18) {
      (*((void (**)(id, void))v18 + 2))(v18, 0);
    }
  }

  objc_destroyWeak(&location);
}

void sub_1001AD3AC(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,char a26)
{
  _Block_object_dispose(&a26, 8);
  objc_destroyWeak((id *)(v26 - 104));
  _Unwind_Resume(a1);
}

id sub_1001AD3E0(uint64_t a1)
{
  id result = [*(id *)(a1 + 32) p_assetCountForCollection:*(void *)(a1 + 40)];
  *(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 24) = result;
  return result;
}

void sub_1001AD418(uint64_t a1, uint64_t a2)
{
  if (a2)
  {
    id v4 = +[BAEventReporter sharedReporter];
    id v5 = [*(id *)(a1 + 32) ba_effectiveAnalyticsTracker];
    id v6 = [*(id *)(a1 + 40) collectionID];
    [v4 emitCollectionRemoveEventWithTracker:v5 collectionID:v6 collectionItemCount:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 24)];

    [*(id *)(a1 + 32) _concludeDeleteAtIndexPath:*(void *)(a1 + 48)];
  }
  id v7 = objc_retainBlock(*(id *)(a1 + 56));
  if (v7)
  {
    id v8 = v7;
    (*((void (**)(id, uint64_t))v7 + 2))(v7, a2);
    id v7 = v8;
  }
}

void sub_1001AD500(id a1, BKLibraryCollectionsListViewController *a2, NSIndexPath *a3, id a4)
{
  objc_initWeak(&location, a2);
  id v6 = a3;
  id v7 = a4;
  id v8 = objc_loadWeakRetained(&location);
  [v8 _concludeHide:1 atIndexPath:v6];

  id v9 = objc_retainBlock(v7);
  id v10 = v9;
  if (v9) {
    (*((void (**)(id, uint64_t))v9 + 2))(v9, 1);
  }

  objc_destroyWeak(&location);
}

void sub_1001AD5A0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1001AD8AC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001AD8D4(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v7 = +[BKLibraryCollectionsListViewController deleteActionHandler];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7[2](v7, WeakRetained, *(void *)(a1 + 32), v5);
}

void sub_1001ADAD4(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001ADAFC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v7 = +[BKLibraryCollectionsListViewController hideActionHandler];
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  v7[2](v7, WeakRetained, *(void *)(a1 + 32), v5);
}

void sub_1001AE244(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained && *(void *)(a1 + 32))
  {
    id v8 = WeakRetained;
    unsigned int v3 = [WeakRetained tableView];
    id v4 = [v3 numberOfSections];
    if ((uint64_t)v4 > (uint64_t)[*(id *)(a1 + 32) section])
    {
      id v5 = [v8 tableView];
      id v6 = [v5 numberOfRowsInSection:[*(id *)(a1 + 32) section]];
      id v7 = [*(id *)(a1 + 32) row];

      id WeakRetained = v8;
      if ((uint64_t)v6 <= (uint64_t)v7) {
        goto LABEL_7;
      }
      unsigned int v3 = [v8 tableView];
      [v3 scrollToRowAtIndexPath:*(void *)(a1 + 32) atScrollPosition:2 animated:*(unsigned __int8 *)(a1 + 48)];
    }

    id WeakRetained = v8;
  }
LABEL_7:
}

id sub_1001AE510(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateInsets];
}

id sub_1001AE630(uint64_t a1)
{
  return [*(id *)(a1 + 32) _updateInsets];
}

id sub_1001AEF14(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 collectionID];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

id sub_1001AEF58(uint64_t a1, void *a2)
{
  unsigned int v3 = [a2 collectionID];
  id v4 = [v3 isEqualToString:*(void *)(a1 + 32)];

  return v4;
}

void sub_1001AFFB4(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v2 = +[NSArray arrayWithObjects:&v3 count:1];
  [v1 reloadRowsAtIndexPaths:v2 withRowAnimation:0];
}

void sub_1001B03D0(uint64_t a1, void *a2)
{
  id v13 = a2;
  uint64_t v3 = [*(id *)(a1 + 32) cellForRowAtIndexPath:];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 imageView];
    id v6 = *(void **)(a1 + 40);
    uint64_t v7 = *(void *)(a1 + 48);
    id v8 = [v4 textLabel];
    id v9 = [v8 font];
    [v9 pointSize];
    id v10 = [v6 _iconForIndexPath:v13 metrics:v7];
    [v5 setImage:v10];

    uint64_t v11 = [*(id *)(a1 + 40) _iconColorForIndexPath:v13 metrics:*(void *)(a1 + 48)];
    [v5 setTintColor:v11];

    objc_opt_class();
    id v12 = BUDynamicCast();
    [v12 setMetrics:*(void *)(a1 + 48)];
  }
}

void sub_1001B0B74(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1001B0C28(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

void sub_1001B0CD8(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, id location)
{
}

int64_t sub_1001B2928(id a1, UIAccessibilityLocationDescriptor *a2, UIAccessibilityLocationDescriptor *a3)
{
  id v4 = a3;
  [(UIAccessibilityLocationDescriptor *)a2 point];
  double v6 = v5;
  [(UIAccessibilityLocationDescriptor *)v4 point];
  double v8 = v7;

  return v6 > v8;
}

void sub_1001B5600(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  if (a2)
  {
    double v6 = +[UIImage imageWithData:a2];
    double v7 = v6;
    if (v6)
    {
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      void v8[2] = sub_1001B5700;
      v8[3] = &unk_100A43DD8;
      void v8[4] = *(void *)(a1 + 32);
      double v7 = v6;
      id v9 = v7;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
    }
  }
  else
  {
    double v7 = BKLibraryLog();
    if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
      sub_1007EE96C((uint64_t)v5, v7);
    }
  }
}

id sub_1001B5700(uint64_t a1)
{
  return [*(id *)(a1 + 32) _handleCoverUpdateRequest:*(void *)(a1 + 40)];
}

void sub_1001B5BB4(uint64_t a1, void *a2)
{
  uint64_t v3 = *(void **)(a1 + 32);
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = a2;
  double v6 = [v3 libraryMutableAssetWithAssetID:v4 inManagedObjectContext:v5];
  [v6 setTitle:*(void *)(a1 + 48)];
  [v6 setSortTitle:*(void *)(a1 + 48)];
  [v6 setAuthor:*(void *)(a1 + 56)];
  [v6 setSortAuthor:*(void *)(a1 + 56)];
  id v16 = 0;
  [v5 save:&v16];

  id v7 = v16;
  if (v7)
  {
    double v8 = BKLibraryLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR))
    {
      uint64_t v11 = *(void *)(a1 + 40);
      uint64_t v12 = *(void *)(a1 + 48);
      uint64_t v13 = *(void *)(a1 + 56);
      *(_DWORD *)buf = 141559042;
      uint64_t v18 = 1752392040;
      __int16 v19 = 2112;
      uint64_t v20 = v11;
      __int16 v21 = 2112;
      uint64_t v22 = v12;
      __int16 v23 = 2112;
      uint64_t v24 = v13;
      __int16 v25 = 2112;
      id v26 = v7;
      _os_log_error_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_ERROR, "[MetadataEditor updateTitle] assetID:%{mask.hash}@ newTitle:%@ author:%@ error:%@", buf, 0x34u);
    }
  }
  id v9 = *(void **)(a1 + 32);
  id v10 = [*(id *)(a1 + 64) updatedCoverImageData];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_1001B5DA0;
  v14[3] = &unk_100A4A028;
  id v15 = *(id *)(a1 + 40);
  [v9 updateAsset:v6 coverArt:v10 completion:v14];
}

void sub_1001B5DA0(uint64_t a1, void *a2, uint64_t a3, void *a4)
{
  id v6 = a2;
  id v7 = a4;
  double v8 = +[BCCacheManager defaultCacheManager];
  [v8 incrementVersionForIdentifier:*(void *)(a1 + 32)];
  id v9 = BKLibraryLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = *(void *)(a1 + 32);
    int v11 = 141558786;
    uint64_t v12 = 1752392040;
    __int16 v13 = 2112;
    uint64_t v14 = v10;
    __int16 v15 = 2112;
    id v16 = v6;
    __int16 v17 = 2112;
    id v18 = v7;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[MetadataEditor updateTitle] FINISH assetID:%{mask.hash}@ asset:%@ error:%@", (uint8_t *)&v11, 0x2Au);
  }
}

void sub_1001B65E4(uint64_t a1)
{
  [*(id *)(a1 + 32) size];
  double v4 = v2 / v3;
  double v5 = v4 * 56.0;
  double v6 = 298.0 / v4;
  if (v5 <= 298.0) {
    double v7 = 56.0;
  }
  else {
    double v7 = v6;
  }
  if (v5 <= 298.0) {
    double v8 = v5;
  }
  else {
    double v8 = 298.0;
  }
  id v9 = [*(id *)(a1 + 40) coverHeightConstraint];
  [v9 setConstant:v7];

  uint64_t v10 = [*(id *)(a1 + 40) coverWidthConstraint];
  [v10 setConstant:v8];

  id v12 = [objc_alloc((Class)UIImageView) initWithImage:*(void *)(a1 + 32)];
  [v12 setTranslatesAutoresizingMaskIntoConstraints:0];
  [v12 setContentMode:1];
  [*(id *)(a1 + 40) _updateCoverView:v12];
  int v11 = UIImageJPEGRepresentation(*(UIImage **)(a1 + 32), 0.9);
  [*(id *)(a1 + 40) setUpdatedCoverImageData:v11];
}

void sub_1001B66F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  double v6 = +[NSUserDefaults standardUserDefaults];
  [v6 setBool:a3 forKey:@"BKMetadatEditorSkipReplaceCoverConfirmation"];

  if (!a2)
  {
    double v7 = *(void (**)(void))(*(void *)(a1 + 32) + 16);
    v7();
  }
}

id sub_1001B74E0(uint64_t a1)
{
  return [*(id *)(a1 + 32) startedTest:*(void *)(*(void *)(a1 + 40) + 56)];
}

void sub_1001B76EC(uint64_t a1, void *a2)
{
  uint64_t v3 = [a2 bookController];
  uint64_t v4 = *(void *)(a1 + 32);
  double v5 = *(void **)(v4 + 80);
  *(void *)(v4 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v3;

  if (!*(void *)(*(void *)(a1 + 32) + 80))
  {
    id v6 = +[BKTestDriverDispatcher shared];
    [v6 subscribeForBookController:*(void *)(a1 + 32)];
  }
}

void sub_1001B781C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void **)(a1 + 40);
  double v5 = *(void **)(v2 + 80);
  uint64_t v4 = (id *)(v2 + 80);
  if (v5 != v3)
  {
    objc_storeStrong(v4, v3);
    if ([*(id *)(a1 + 32) running])
    {
      id v6 = *(void **)(a1 + 32);
      if (v6[10])
      {
        double v7 = [v6 onReceiveHandler];

        if (v7)
        {
          double v8 = +[BKTestDriverDispatcher shared];
          [v8 unsubscribe:*(void *)(a1 + 32)];

          id v9 = [*(id *)(a1 + 32) onReceiveHandler];
          v9[2]();
        }
      }
    }
  }
}

id sub_1001B7CE8(uint64_t a1)
{
  return [*(id *)(a1 + 32) finishPPTTestWithResult:0];
}

void sub_1001B7D48(id a1)
{
  uint64_t v1 = objc_alloc_init(BKBookCacheController);
  uint64_t v2 = (void *)qword_100B4A598;
  qword_100B4A598 = (uint64_t)v1;
}

void sub_1001B8334(uint64_t a1)
{
  v7[0] = 0;
  v7[1] = v7;
  v7[2] = 0x2020000000;
  char v8 = 0;
  uint64_t v2 = dispatch_get_global_queue(0, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001B841C;
  block[3] = &unk_100A46410;
  id v4 = *(id *)(a1 + 32);
  id v6 = v7;
  id v5 = *(id *)(a1 + 40);
  dispatch_async(v2, block);

  _Block_object_dispose(v7, 8);
}

void sub_1001B841C(uint64_t a1)
{
  id v4 = *(id *)(a1 + 32);
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v3 = v2;
  if (v2) {
    (*((void (**)(id, id, void))v2 + 2))(v2, v4, 0);
  }
}

id sub_1001B8A38(uint64_t a1)
{
  [*(id *)(a1 + 32) setTransition:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) setCompletion:*(void *)(a1 + 56)];
  id v2 = [*(id *)(a1 + 32) contentViewController];
  [*(id *)(a1 + 32) setSourceViewController:v2];

  [*(id *)(a1 + 32) setWallpaperAssertion:0];
  [*(id *)(a1 + 32) setTransitioning:1];
  uint64_t v3 = [*(id *)(a1 + 32) view];
  [v3 bounds];
  double v5 = v4;
  double v7 = v6;
  double v9 = v8;
  double v11 = v10;
  id v12 = [*(id *)(a1 + 48) viewIfLoaded];
  [v12 setFrame:v5, v7, v9, v11];

  [*(id *)(a1 + 32) willChangeValueForKey:@"contentViewController"];
  __int16 v13 = [*(id *)(a1 + 32) navController];
  uint64_t v14 = v13;
  if (*(void *)(a1 + 48))
  {
    uint64_t v17 = *(void *)(a1 + 48);
    __int16 v15 = +[NSArray arrayWithObjects:&v17 count:1];
    [v14 setViewControllers:v15 animated:1];
  }
  else
  {
    [v13 setViewControllers:&__NSArray0__struct animated:1];
  }

  return [*(id *)(a1 + 32) didChangeValueForKey:@"contentViewController"];
}

uint64_t sub_1001B90B4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t result = *(void *)(a1 + 32);
  if (result) {
    return (*(uint64_t (**)(uint64_t, uint64_t))(result + 16))(result, a3);
  }
  return result;
}

void sub_1001B93FC(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _notifyObserversOfReload:v3];
}

void sub_1001B9550(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) observers];
  unsigned int v3 = [v2 containsObject:*(void *)(a1 + 40)];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) observers];
    [v4 removeObject:*(void *)(a1 + 40)];
  }
}

void sub_1001B96A0(uint64_t a1)
{
  id v9 = [*(id *)(a1 + 32) _assetCacheForType:*(void *)(a1 + 48)];
  id v2 = [v9 cachedAssetIDs];
  unsigned int v3 = +[NSArray arrayWithArray:v2];

  if (*(unsigned char *)(a1 + 56))
  {
    id v4 = [*(id *)(a1 + 32) bookletAssetCache];
    double v5 = [v4 allBookletAssetIDs];

    double v6 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 40));
    if (v6)
    {
      double v7 = [v3 arrayByAddingObjectsFromArray:v5];
      v6[2](v6, v7, 0);
    }
  }
  else
  {
    id v8 = objc_retainBlock(*(id *)(a1 + 40));
    double v5 = v8;
    if (v8) {
      (*((void (**)(id, void *, void))v8 + 2))(v8, v3, 0);
    }
  }
}

void sub_1001B98D8(uint64_t a1)
{
  id v5 = [*(id *)(a1 + 32) _assetCacheForType:*(void *)(a1 + 56)];
  id v2 = [v5 assetsFromAssetIDs:*(void *)(a1 + 40)];
  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void *, void))v3 + 2))(v3, v2, 0);
  }
}

void sub_1001B9A40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _assetCacheForType:*(void *)(a1 + 56)];
  id v3 = [objc_alloc((Class)NSMutableArray) initWithCapacity:[*(id *)(a1 + 40) count]];
  if ([*(id *)(a1 + 40) count])
  {
    unint64_t v5 = 0;
    *(void *)&long long v4 = 138412290;
    long long v14 = v4;
    do
    {
      double v6 = [*(id *)(a1 + 40) objectAtIndexedSubscript:v5];
      double v7 = [v2 assetFromAssetID:v6];
      if (v7)
      {
        [v3 addObject:v7];
      }
      else if (*(unsigned char *)(a1 + 64))
      {
        id v8 = [*(id *)(a1 + 32) bookletAssetCache];
        id v9 = [v8 bookletAssetForAssetID:v6];

        if (v9)
        {
          [v3 addObject:v9];
        }
        else
        {
          double v11 = BKLibraryDataSourceMediaLibraryLog();
          if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v14;
            id v16 = v6;
            _os_log_error_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_ERROR, "Could not find a booklet or mediaLibrary asset with assetID %@", buf, 0xCu);
          }
        }
      }
      else
      {
        double v10 = BKLibraryDataSourceMediaLibraryLog();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR))
        {
          *(_DWORD *)buf = v14;
          id v16 = v6;
          _os_log_error_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_ERROR, "Could not find an asset with assetID %@", buf, 0xCu);
        }
      }
      ++v5;
    }
    while (v5 < (unint64_t)[*(id *)(a1 + 40) count]);
  }
  id v12 = (void (**)(id, id, void))objc_retainBlock(*(id *)(a1 + 48));
  if (v12)
  {
    id v13 = [v3 copy];
    v12[2](v12, v13, 0);
  }
}

void sub_1001B9D48(uint64_t a1)
{
  id v9 = [*(id *)(a1 + 32) _assetCacheForType:*(void *)(a1 + 48)];
  id v2 = [v9 cachedAssets];
  id v3 = +[NSArray arrayWithArray:v2];

  if (*(unsigned char *)(a1 + 56))
  {
    long long v4 = [*(id *)(a1 + 32) bookletAssetCache];
    unint64_t v5 = [v4 allBookletAssets];

    double v6 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 40));
    if (v6)
    {
      double v7 = [v3 arrayByAddingObjectsFromArray:v5];
      v6[2](v6, v7, 0);
    }
  }
  else
  {
    id v8 = objc_retainBlock(*(id *)(a1 + 40));
    unint64_t v5 = v8;
    if (v8) {
      (*((void (**)(id, void *, void))v8 + 2))(v8, v3, 0);
    }
  }
}

void sub_1001B9F40(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _assetCacheForType:*(void *)(a1 + 56)];
  [v2 fetchBookCoverForAssetProperties:*(void *)(a1 + 40) completion:*(void *)(a1 + 48)];
}

void sub_1001BA0B8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) _assetCacheForType:*(void *)(a1 + 56)];
  [v2 deleteAssets:*(void *)(a1 + 40) exhaustive:*(unsigned __int8 *)(a1 + 64) completion:*(void *)(a1 + 48)];
}

void sub_1001BA254(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 72);
  id v3 = *(void **)(a1 + 32);
  if (v2)
  {
    long long v4 = [v3 bookletAssetCache];
    id v7 = [v4 bookletAssetForAssetID:*(void *)(a1 + 40)];

    id v5 = objc_retainBlock(*(id *)(a1 + 56));
    double v6 = v5;
    if (v5) {
      (*((void (**)(id, id, void))v5 + 2))(v5, v7, 0);
    }
  }
  else
  {
    id v7 = [v3 _assetCacheForType:*(void *)(a1 + 64)];
    [v7 assetForLibraryAsset:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
  }
}

void sub_1001BA440(uint64_t a1)
{
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  int v2 = [*(id *)(a1 + 32) observers];
  id v3 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v11;
    do
    {
      double v6 = 0;
      do
      {
        if (*(void *)v11 != v5) {
          objc_enumerationMutation(v2);
        }
        id v7 = *(void **)(*((void *)&v10 + 1) + 8 * (void)v6);
        dispatch_group_enter(*(dispatch_group_t *)(a1 + 40));
        v8[0] = _NSConcreteStackBlock;
        v8[1] = 3221225472;
        void v8[2] = sub_1001BA5B4;
        v8[3] = &unk_100A43D60;
        id v9 = *(id *)(a1 + 40);
        [v7 mediaLibraryCacheRequestsReload:v8];

        double v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v10 objects:v14 count:16];
    }
    while (v4);
  }
}

void sub_1001BA5B4(uint64_t a1)
{
}

uint64_t sub_1001BA5BC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001BABCC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v5 = [v3 entity];
  objc_opt_class();
  double v6 = BUDynamicCast();
  objc_opt_class();
  id v7 = BUDynamicCast();
  id v8 = v7;
  if (v6) {
    BOOL v9 = 1;
  }
  else {
    BOOL v9 = v7 == 0;
  }
  if (v9)
  {
    if (!v6)
    {
LABEL_13:
      if (!v8) {
        goto LABEL_28;
      }
      goto LABEL_14;
    }
  }
  else
  {
    uint64_t v10 = [v7 bk_localStoreBookAlbumForItem];
    double v6 = (void *)v10;
    if (!v10)
    {
LABEL_14:
      if (([v8 mediaType] & 4) != 0)
      {
        long long v12 = *(void **)(a1 + 32);
        id v26 = v8;
        long long v13 = +[NSArray arrayWithObjects:&v26 count:1];
        unsigned int v14 = [v12 _processAudiobookCollection:v13 fromMediaLibraryChangedNotification:1];

        __int16 v15 = BKLibraryDataSourceMediaLibraryLog();
        BOOL v16 = os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT);
        if (v14)
        {
          if (v16)
          {
            *(_WORD *)buf = 0;
            uint64_t v17 = "individual item is local";
LABEL_23:
            _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, v17, buf, 2u);
            goto LABEL_24;
          }
          goto LABEL_24;
        }
        if (v16)
        {
          *(_WORD *)buf = 0;
          _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "individual item is not local", buf, 2u);
        }
      }
      goto LABEL_28;
    }
    long long v11 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "using local album collection", buf, 2u);
    }
  }
  if (([v6 mediaTypes] & 4) == 0) {
    goto LABEL_13;
  }
  id v18 = BKLibraryDataSourceMediaLibraryLog();
  if (os_log_type_enabled(v18, OS_LOG_TYPE_DEFAULT))
  {
    __int16 v19 = [v6 items];
    id v20 = [v19 count];
    *(_DWORD *)buf = 134217984;
    id v28 = v20;
    _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_DEFAULT, "collection with %lu items", buf, 0xCu);
  }
  __int16 v21 = *(void **)(a1 + 32);
  uint64_t v22 = [v6 items];
  LODWORD(v21) = [v21 _processAudiobookCollection:v22 fromMediaLibraryChangedNotification:1];

  if (v21)
  {
    __int16 v15 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      uint64_t v17 = "all items local";
      goto LABEL_23;
    }
LABEL_24:

    [*(id *)(a1 + 40) addObject:v3];
  }
LABEL_28:
  uint64_t v23 = [v3 anchor];
  uint64_t v24 = *(void *)(*(void *)(a1 + 48) + 8);
  __int16 v25 = *(void **)(v24 + 40);
  *(void *)(v24 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v23;
}

id sub_1001BC150(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) window];
  [v2 setUserInteractionEnabled:1];

  [*(id *)(a1 + 40) removeFromSuperview];
  [*(id *)(a1 + 40) setAlpha:*(double *)(a1 + 56)];
  id v3 = *(void **)(a1 + 40);
  long long v4 = *(_OWORD *)&CGAffineTransformIdentity.c;
  v6[0] = *(_OWORD *)&CGAffineTransformIdentity.a;
  v6[1] = v4;
  v6[2] = *(_OWORD *)&CGAffineTransformIdentity.tx;
  [v3 setTransform:v6];
  return [*(id *)(a1 + 48) completeTransition:1];
}

id sub_1001BC1D8(uint64_t a1)
{
  [*(id *)(a1 + 40) zoomFactor];
  CGFloat v3 = v2;
  [*(id *)(a1 + 40) zoomFactor];
  CGAffineTransformMakeScale(&v8, v3, v4);
  uint64_t v5 = *(void **)(a1 + 32);
  CGAffineTransform v7 = v8;
  return [v5 setTransform:&v7];
}

id sub_1001BC248(uint64_t a1)
{
  return [*(id *)(a1 + 32) setAlpha:0.0];
}

void sub_1001BC570(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, ...)
{
  va_start(va, a8);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1001BC594(uint64_t a1, uint64_t a2, void *a3)
{
  return [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) addObject:*a3];
}

void sub_1001BCA48(uint64_t a1)
{
  id v1 = objc_alloc_init(*(Class *)(a1 + 32));
  double v2 = (void *)qword_100B4A5C0;
  qword_100B4A5C0 = (uint64_t)v1;
}

void sub_1001BD1DC(id *a1)
{
  double v2 = [a1[4] _sceneManager];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001BD2B0;
  _OWORD v6[3] = &unk_100A44610;
  id v3 = a1[4];
  id v4 = a1[5];
  id v7 = v2;
  id v8 = v3;
  id v9 = a1[6];
  id v10 = a1[5];
  id v5 = v2;
  [v5 forceTransaction:v4 ontoPrimarySceneWithContinuation:v6];
}

void sub_1001BD2B0(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) primarySceneController];
  id v3 = [v2 primaryScenePresenting];

  [*(id *)(a1 + 40) _showStoreWithURL:*(void *)(a1 + 48) tabBarIdentifier:0 transaction:*(void *)(a1 + 56) presentingDelegate:v3];
}

uint64_t sub_1001BD320(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001BD440(uint64_t a1)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001BD50C;
  _OWORD v6[3] = &unk_100A44358;
  double v2 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 32);
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 64);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = v5;
  [v2 presenterDismissAllModalControllersAnimated:1 completion:v6];
}

void sub_1001BD50C(uint64_t a1)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001BD5D4;
  _OWORD v6[3] = &unk_100A44358;
  double v2 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 32);
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 64);
  id v9 = v3;
  uint64_t v10 = v4;
  id v11 = v5;
  [v2 commit:v6];
}

void sub_1001BD5D4(uint64_t a1)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001BD69C;
  _OWORD v6[3] = &unk_100A44358;
  double v2 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v3 = *(id *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  id v5 = *(void **)(a1 + 64);
  id v8 = v3;
  uint64_t v9 = v4;
  id v10 = v5;
  id v11 = *(id *)(a1 + 32);
  [v2 presenterFinishModalTransitionsWithCompletion:v6];
}

void sub_1001BD69C(uint64_t a1)
{
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001BD768;
  v5[3] = &unk_100A44358;
  double v2 = *(void **)(a1 + 32);
  id v3 = *(id *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  id v6 = v3;
  uint64_t v7 = v4;
  id v8 = *(id *)(a1 + 32);
  id v9 = *(id *)(a1 + 56);
  id v10 = *(id *)(a1 + 64);
  [v2 commit:v5];
}

void sub_1001BD768(uint64_t a1)
{
  if (*(void *)(a1 + 32))
  {
    id v9 = +[JSABridge sharedInstance];
    double v2 = [v9 environment];
    id v3 = [*(id *)(a1 + 32) underlyingURL];
    uint64_t v4 = [*(id *)(a1 + 32) referrerURLString];
    id v5 = [*(id *)(a1 + 32) referrerApplicationName];
    id v6 = [*(id *)(a1 + 40) _optionsForTransaction:*(void *)(a1 + 48)];
    [v2 openURL:v3 referrerURL:v4 referrerApplicationName:v5 options:v6];
  }
  else
  {
    uint64_t v7 = *(void **)(a1 + 56);
    if (v7)
    {
      id v8 = v7;
    }
    else
    {
      id v8 = +[BKRootBarItemsProvider BooksIdentifier];
    }
    id v9 = v8;
    [*(id *)(a1 + 64) presenterSelectTabWithIdentifier:v8];
  }
}

void sub_1001BD8E0(id a1, BKPrimarySceneControlling *a2)
{
  id v3 = [(BKPrimarySceneControlling *)a2 primaryScenePresenting];
  double v2 = +[BKRootBarItemsProvider SearchIdentifier];
  [v3 presenterSelectTabWithIdentifier:v2];
}

void sub_1001BDC08(uint64_t a1)
{
  double v2 = [*(id *)(a1 + 32) primarySceneController];
  id v3 = [v2 primaryScenePresenting];

  [*(id *)(a1 + 40) _showStoreWithURL:0 tabBarIdentifier:*(void *)(a1 + 48) transaction:*(void *)(a1 + 56) presentingDelegate:v3];
}

void sub_1001BDDB4(uint64_t a1)
{
  double v2 = +[BKAppDelegate delegate];
  unsigned int v3 = [v2 isConnectedToInternet];

  if (v3)
  {
    if (objc_msgSend(*(id *)(a1 + 32), "bc_hasLegacyBookStoreScheme"))
    {
      uint64_t v4 = *(void **)(a1 + 40);
      uint64_t v5 = *(void *)(a1 + 48);
      uint64_t v6 = *(void *)(a1 + 56);
      [v4 showStoreWithURL:v5 transaction:v6];
    }
    else
    {
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      id v11[2] = sub_1001BDF04;
      v11[3] = &unk_100A45B10;
      id v9 = *(void **)(a1 + 32);
      id v10 = *(void **)(a1 + 48);
      void v11[4] = *(void *)(a1 + 40);
      id v12 = v10;
      id v13 = *(id *)(a1 + 56);
      id v14 = *(id *)(a1 + 32);
      [v9 bc_isStoreURLWithCompletion:v11];
    }
  }
  else
  {
    uint64_t v7 = *(void **)(a1 + 40);
    uint64_t v8 = *(void *)(a1 + 56);
    [v7 displayInternetReachabilityErrorAlert:1 transaction:v8];
  }
}

void sub_1001BDF04(uint64_t a1, char a2)
{
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001BE050;
  void v7[3] = &unk_100A45460;
  char v11 = a2;
  unsigned int v3 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v9 = *(id *)(a1 + 48);
  id v10 = *(id *)(a1 + 56);
  uint64_t v4 = objc_retainBlock(v7);
  if (v4)
  {
    if (+[NSThread isMainThread])
    {
      ((void (*)(void *))v4[2])(v4);
    }
    else
    {
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_1001BE0E4;
      v5[3] = &unk_100A442B8;
      uint64_t v6 = v4;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);
    }
  }
}

void sub_1001BE050(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 64))
  {
    double v2 = *(void **)(a1 + 32);
    uint64_t v3 = *(void *)(a1 + 40);
    uint64_t v4 = *(void *)(a1 + 48);
    [v2 showStoreWithURL:v3 transaction:v4];
  }
  else
  {
    id v5 = +[UIApplication sharedApplication];
    [v5 openURL:*(void *)(a1 + 56) options:&__NSDictionary0__struct completionHandler:0];
  }
}

uint64_t sub_1001BE0E4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001BE400(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

id sub_1001BE408(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1001BE410(uint64_t a1, uint64_t a2)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001BE51C;
  _OWORD v6[3] = &unk_100A4A2A8;
  uint64_t v15 = a2;
  uint64_t v3 = *(void **)(a1 + 32);
  id v7 = *(id *)(a1 + 40);
  id v8 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  id v4 = *(id *)(a1 + 64);
  uint64_t v5 = *(void *)(a1 + 72);
  id v10 = v4;
  uint64_t v11 = v5;
  id v12 = *(id *)(a1 + 32);
  id v13 = *(id *)(a1 + 80);
  id v14 = *(id *)(a1 + 88);
  [v3 commit:v6];
}

id sub_1001BE51C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 96);
  if (v2)
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001BE62C;
    v8[3] = &unk_100A4A280;
    uint64_t v15 = v2;
    uint64_t v3 = *(void **)(a1 + 32);
    id v9 = *(id *)(a1 + 40);
    id v10 = *(id *)(a1 + 48);
    id v4 = *(id *)(a1 + 56);
    uint64_t v5 = *(void *)(a1 + 64);
    uint64_t v6 = *(void **)(a1 + 72);
    id v11 = v4;
    uint64_t v12 = v5;
    id v13 = v6;
    id v14 = *(id *)(a1 + 80);
    [v3 appLaunchCoordinatorOnConditionMask:32 blockID:@"handle StoreURL" performBlock:v8];
  }
  else
  {
    [*(id *)(a1 + 64) _storeCheckConnectionAndShowStoreURL:*(void *)(a1 + 40) sourceApplication:*(void *)(a1 + 48) annotation:*(void *)(a1 + 56) transaction:*(void *)(a1 + 72)];
  }
  return [*(id *)(a1 + 88) invalidate];
}

void sub_1001BE62C(uint64_t a1, int a2)
{
  if (a2)
  {
    if ((*(unsigned char *)(a1 + 80) & 2) != 0)
    {
      uint64_t v6 = +[JSABridge sharedInstance];
      v15[0] = _NSConcreteStackBlock;
      v15[1] = 3221225472;
      void v15[2] = sub_1001BE7C8;
      v15[3] = &unk_100A4A258;
      id v16 = *(id *)(a1 + 32);
      id v17 = *(id *)(a1 + 40);
      id v7 = *(id *)(a1 + 48);
      uint64_t v8 = *(void *)(a1 + 56);
      id v9 = *(void **)(a1 + 64);
      id v18 = v7;
      uint64_t v19 = v8;
      id v20 = v9;
      [v6 enqueueBlock:v15 file:@"BKJSStoreFlowController.m" line:302];

      id v5 = v16;
    }
    else
    {
      id v3 = objc_alloc_init((Class)SKStoreProductViewController);
      [v3 setDelegate:*(void *)(a1 + 56)];
      uint64_t v4 = *(void *)(a1 + 32);
      id v10 = _NSConcreteStackBlock;
      uint64_t v11 = 3221225472;
      uint64_t v12 = sub_1001BE8C0;
      id v13 = &unk_100A43EB8;
      id v14 = v3;
      id v5 = v3;
      [v5 loadProductWithURL:v4 completionBlock:&v10];
      [*(id *)(a1 + 72) presenterShowModalController:v5 animated:1 completion:v10, v11, v12, v13];
    }
  }
}

void sub_1001BE7C8(uint64_t a1)
{
  id v8 = +[BSUIURL URLWithURL:*(void *)(a1 + 32) sourceApplication:*(void *)(a1 + 40) annotation:*(void *)(a1 + 48)];
  uint64_t v2 = +[JSABridge sharedInstance];
  id v3 = [v2 environment];
  uint64_t v4 = [v8 underlyingURL];
  id v5 = [v8 referrerURLString];
  uint64_t v6 = [v8 referrerApplicationName];
  id v7 = [*(id *)(a1 + 56) _optionsForTransaction:*(void *)(a1 + 64)];
  [v3 openURL:v4 referrerURL:v5 referrerApplicationName:v6 options:v7];
}

id *sub_1001BE8C0(id *result, char a2, uint64_t a3)
{
  if (a3 || (a2 & 1) == 0) {
    return (id *)[result[4] dismissViewControllerAnimated:1 completion:0];
  }
  return result;
}

void sub_1001BEA0C(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = +[NSBundle mainBundle];
  uint64_t v4 = v3;
  if (v2) {
    CFStringRef v5 = @"Apple Books couldn’t connect to the Book Store. Check your Internet connection, then try again.";
  }
  else {
    CFStringRef v5 = @"Apple Books couldn’t connect to iCloud. Check your Internet connection, then try again.";
  }
  id v15 = [v3 localizedStringForKey:v5 value:&stru_100A70340 table:0];

  id v6 = +[BCDevice deviceClass];
  if (v6 == (id)3)
  {
    id v7 = +[NSBundle mainBundle];
    id v8 = v7;
    CFStringRef v9 = @"Your iPad is Offline";
  }
  else if (v6 == (id)1)
  {
    id v7 = +[NSBundle mainBundle];
    id v8 = v7;
    CFStringRef v9 = @"Your iPhone is Offline";
  }
  else
  {
    id v7 = +[NSBundle mainBundle];
    id v8 = v7;
    CFStringRef v9 = @"Your device is Offline";
  }
  id v10 = [v7 localizedStringForKey:v9 value:&stru_100A70340 table:0];

  uint64_t v11 = +[UIAlertController alertControllerWithTitle:v10 message:v15 preferredStyle:1];
  uint64_t v12 = +[NSBundle mainBundle];
  id v13 = [v12 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  id v14 = +[UIAlertAction actionWithTitle:v13 style:1 handler:0];
  [v11 addAction:v14];

  [*(id *)(a1 + 32) presenterShowAlertController:v11 animated:1];
}

uint64_t sub_1001BEBD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001BED10(uint64_t a1)
{
  int v2 = *(unsigned __int16 *)(a1 + 40);
  if ((v2 - 3) < 2) {
    goto LABEL_4;
  }
  if (v2 == 6)
  {
    id v3 = +[NSBundle mainBundle];
    uint64_t v4 = v3;
    CFStringRef v5 = @"This audiobook can’t be downloaded.";
  }
  else
  {
    if (v2 == 1)
    {
LABEL_4:
      id v3 = +[NSBundle mainBundle];
      uint64_t v4 = v3;
      CFStringRef v5 = @"This book can’t be downloaded.";
      goto LABEL_7;
    }
    id v3 = +[NSBundle mainBundle];
    uint64_t v4 = v3;
    CFStringRef v5 = @"This item can’t be downloaded.";
  }
LABEL_7:
  id v6 = [v3 localizedStringForKey:v5 value:&stru_100A70340 table:0];

  id v7 = +[NSBundle mainBundle];
  id v12 = [v7 localizedStringForKey:@"Apple Books isn’t connected to the internet." value:&stru_100A70340 table:0];

  id v8 = +[UIAlertController alertControllerWithTitle:v6 message:v12 preferredStyle:1];
  CFStringRef v9 = +[NSBundle mainBundle];
  id v10 = [v9 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  uint64_t v11 = +[UIAlertAction actionWithTitle:v10 style:1 handler:0];
  [v8 addAction:v11];

  [*(id *)(a1 + 32) presenterShowAlertController:v8 animated:1];
}

uint64_t sub_1001BEEC4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001BF004(uint64_t a1)
{
  int v2 = *(unsigned __int8 *)(a1 + 40);
  id v3 = +[NSBundle mainBundle];
  uint64_t v4 = v3;
  if (v2) {
    CFStringRef v5 = @"Apple Books couldn’t connect to the Book Store. Check your Internet connection, then try again.";
  }
  else {
    CFStringRef v5 = @"Apple Books couldn’t connect to iCloud. Check your Internet connection, then try again.";
  }
  id v12 = [v3 localizedStringForKey:v5 value:&stru_100A70340 table:0];

  id v6 = +[NSBundle mainBundle];
  id v7 = [v6 localizedStringForKey:@"Couldn’t Connect" value:&stru_100A70340 table:0];

  id v8 = +[UIAlertController alertControllerWithTitle:v7 message:v12 preferredStyle:1];
  CFStringRef v9 = +[NSBundle mainBundle];
  id v10 = [v9 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  uint64_t v11 = +[UIAlertAction actionWithTitle:v10 style:1 handler:0];
  [v8 addAction:v11];

  [*(id *)(a1 + 32) presenterShowAlertController:v8 animated:1];
}

uint64_t sub_1001BF170(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001BF470(uint64_t a1)
{
  int v2 = +[NSBundle mainBundle];
  id v7 = [v2 localizedStringForKey:@"This book is unavailable." value:&stru_100A70340 table:0];

  id v3 = +[UIAlertController alertControllerWithTitle:v7 message:0 preferredStyle:1];
  uint64_t v4 = +[NSBundle mainBundle];
  CFStringRef v5 = [v4 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  id v6 = +[UIAlertAction actionWithTitle:v5 style:1 handler:0];
  [v3 addAction:v6];

  [*(id *)(a1 + 32) presenterShowAlertController:v3 animated:1];
}

uint64_t sub_1001BF594(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001BF704(uint64_t a1)
{
  int v2 = +[BKAppDelegate delegate];
  id v3 = dispatch_get_global_queue(25, 0);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001BF7F0;
  block[3] = &unk_100A443C8;
  id v6 = v2;
  id v7 = *(id *)(a1 + 32);
  id v8 = *(id *)(a1 + 40);
  id v4 = v2;
  dispatch_async(v3, block);
}

void sub_1001BF7F0(uint64_t a1)
{
  int v2 = [*(id *)(a1 + 32) libraryItemStateProvider];
  id v3 = [v2 stateCenter];

  id v4 = [v3 provider];
  CFStringRef v5 = [v4 itemStateWithIdentifier:*(void *)(a1 + 40)];

  id v6 = [v3 mapItemState:v5];
  id v7 = +[JSABridge sharedInstance];
  id v8 = v7;
  uint64_t v9 = *(void *)(a1 + 48);
  if (v6)
  {
    uint64_t v11 = v6;
    id v10 = +[NSArray arrayWithObjects:&v11 count:1];
    [v8 enqueueValueCall:v9 arguments:v10 file:@"BKScriptQueryableLibraryItemStateWorker.m" line:28];
  }
  else
  {
    [v7 enqueueValueCall:v9 arguments:0 file:@"BKScriptQueryableLibraryItemStateWorker.m" line:28];
  }
}

uint64_t sub_1001BF938(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001C030C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setHighlighted:*(unsigned __int8 *)(a1 + 40)];
}

void sub_1001C0318(uint64_t a1, uint64_t a2)
{
  id v3 = objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    id v4 = v3;
    (*((void (**)(id, uint64_t))v3 + 2))(v3, a2);
    id v3 = v4;
  }
}

void sub_1001C0724(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1001C0740(uint64_t a1, void *a2)
{
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  CFStringRef v5 = WeakRetained;
  if (WeakRetained)
  {
    if ([WeakRetained shouldHandleTapIfPossible])
    {
      v6[0] = _NSConcreteStackBlock;
      v6[1] = 3221225472;
      v6[2] = sub_1001C0808;
      _OWORD v6[3] = &unk_100A43DD8;
      id v7 = v3;
      id v8 = v5;
      [v5 handleTapWithCompletion:v6];
    }
    else if (v3)
    {
      [v3 setUserInteractionEnabled:1];
    }
  }
}

id sub_1001C0808(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  if (v2) {
    [v2 setUserInteractionEnabled:1];
  }
  id v3 = *(void **)(a1 + 40);

  return _[v3 setHighlighted:0 completion:0];
}

void sub_1001C0854(uint64_t a1, int a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 32);
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1001C0928;
    v5[3] = &unk_100A45C78;
    id v7 = *(id *)(a1 + 48);
    id v6 = *(id *)(a1 + 40);
    [v3 animateCoverPressed:0 completion:v5];
  }
  else
  {
    id v4 = *(void **)(a1 + 40);
    [v4 setUserInteractionEnabled:1];
  }
}

uint64_t sub_1001C0928(uint64_t a1)
{
  return (*(uint64_t (**)(void, void))(*(void *)(a1 + 40) + 16))(*(void *)(a1 + 40), *(void *)(a1 + 32));
}

void sub_1001C0B74(uint64_t a1, void *a2, void *a3)
{
  id v4 = *(void **)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  [v4 backgroundConfigurationForState:v5 isInEditMode:[v6 isInEditMode]];
  id v7 = (id)objc_claimAutoreleasedReturnValue();

  [v6 setBackgroundConfiguration:v7];
}

void sub_1001C10A0(uint64_t a1, void *a2)
{
  uint64_t v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _checkTimeoutForOngoingMigrationAttempt];
  id v4 = (void (**)(void))objc_retainBlock(v3);

  if (v4) {
    v4[2](v4);
  }
}

void sub_1001C1234(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v5);
  }

  id v8 = [*(id *)(a1 + 32) migrationQueue];
  dispatch_resume(v8);

  uint64_t v9 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "makeAllUbiquitousBooksLocalWithCompletion end (completion called and migration queue resumed)", v10, 2u);
  }
}

void sub_1001C12FC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) migrationQueue];
  dispatch_suspend(v2);

  id v3 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "makeAllUbiquitousBooksLocalWithCompletion begin", buf, 2u);
  }

  id v4 = [*(id *)(a1 + 32) ubiquityStatusMonitor];
  unsigned int v5 = [v4 isICloudDriveEnabled];

  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) bookOperationsQueue];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001C1468;
    v10[3] = &unk_100A44120;
    id v7 = *(void **)(a1 + 40);
    void v10[4] = *(void *)(a1 + 32);
    id v11 = v7;
    [v6 addOperationWithBlock:v10];
  }
  else
  {
    id v8 = (void (**)(id, void, void *))objc_retainBlock(*(id *)(a1 + 40));
    if (v8)
    {
      uint64_t v9 = [*(id *)(a1 + 32) p_generateUbiquityNotEnabledError];
      v8[2](v8, 0, v9);
    }
  }
}

void sub_1001C1468(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ubiquitousBooksPlistHost];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C150C;
  _OWORD v4[3] = &unk_100A46800;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 fetchAllUbiquitousBooksWithCompletion:v4];
}

void sub_1001C150C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) ubiquityEligibleBooksProvider];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001C15D8;
  void v7[3] = &unk_100A44B98;
  id v5 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v3;
  id v9 = v5;
  id v6 = v3;
  [v4 makeBooksLocal:v6 completion:v7];
}

void sub_1001C15D8(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) bookOperationsQueue];
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001C16C0;
  v10[3] = &unk_100A43DD8;
  id v7 = *(void **)(a1 + 40);
  void v10[4] = *(void *)(a1 + 32);
  id v11 = v7;
  [v6 addOperationWithBlock:v10];

  id v8 = objc_retainBlock(*(id *)(a1 + 48));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id, uint64_t, id))v8 + 2))(v8, a2, v5);
  }
}

id sub_1001C16C0(uint64_t a1)
{
  return [*(id *)(a1 + 32) boq_removeQuotaCompensationForAssets:*(void *)(a1 + 40)];
}

void sub_1001C178C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001C181C;
  v2[3] = &unk_100A49868;
  v2[4] = v1;
  id v3 = *(id *)(a1 + 40);
  [v1 _makeAllEligibleLocalBooksUbiquitousWithCompletion:v2];
}

void sub_1001C181C(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  [*(id *)(a1 + 32) _leaveOngoingMigrateAllAttempt];
  id v5 = objc_retainBlock(*(id *)(a1 + 40));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_1001C19B0(uint64_t a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, uint64_t, id))v6 + 2))(v6, a2, v5);
  }

  id v8 = [*(id *)(a1 + 32) migrationQueue];
  dispatch_resume(v8);

  id v9 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v10 = 0;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "makeAllEligibleLocalBooksUbiquitousWithCompletion end (completion called and migration queue resumed)", v10, 2u);
  }
}

void sub_1001C1A78(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) migrationQueue];
  dispatch_suspend(v2);

  id v3 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "makeAllEligibleLocalBooksUbiquitousWithCompletion begin", buf, 2u);
  }

  id v4 = [*(id *)(a1 + 32) ubiquityStatusMonitor];
  if ([v4 isICloudDriveEnabled])
  {
    unsigned int v5 = [*(id *)(a1 + 32) initialMetadataQueryWasHandled];

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) bookOperationsQueue];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1001C1BF4;
      v10[3] = &unk_100A44120;
      id v7 = *(void **)(a1 + 40);
      void v10[4] = *(void *)(a1 + 32);
      id v11 = v7;
      [v6 addOperationWithBlock:v10];

      return;
    }
  }
  else
  {
  }
  id v8 = (void (**)(id, void, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v8)
  {
    id v9 = [*(id *)(a1 + 32) p_generateUbiquityNotEnabledError];
    v8[2](v8, 0, v9);
  }
}

void sub_1001C1BF4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ubiquityEligibleBooksProvider];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C1C98;
  _OWORD v4[3] = &unk_100A46800;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 fetchAllLocalBooksEligibleToBeMadeUbiquitousWithCompletion:v4];
}

void sub_1001C1C98(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = [*(id *)(a1 + 32) bookOperationsQueue];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001C1DB0;
    v10[3] = &unk_100A45338;
    void v10[4] = *(void *)(a1 + 32);
    id v11 = v5;
    id v12 = *(id *)(a1 + 40);
    [v7 addOperationWithBlock:v10];
  }
  else
  {
    id v8 = objc_retainBlock(*(id *)(a1 + 40));
    id v9 = v8;
    if (v8) {
      (*((void (**)(id, void, id))v8 + 2))(v8, 0, v6);
    }
  }
}

void sub_1001C1DB0(uint64_t a1)
{
  [*(id *)(a1 + 32) boq_addPendingUploadQuotaCompensationForAssets:*(void *)(a1 + 40)];
  uint64_t v2 = [*(id *)(a1 + 32) ubiquitousBooksPlistHost];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001C1E68;
  _OWORD v4[3] = &unk_100A46C98;
  uint64_t v3 = *(void *)(a1 + 40);
  id v5 = *(id *)(a1 + 48);
  [v2 makeBooksUbiquitous:v3 completion:v4];
}

void sub_1001C1E68(uint64_t a1, uint64_t a2, void *a3)
{
  id v6 = a3;
  id v4 = objc_retainBlock(*(id *)(a1 + 32));
  id v5 = v4;
  if (v4) {
    (*((void (**)(id, uint64_t, id))v4 + 2))(v4, 1, v6);
  }
}

void sub_1001C1F98(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001C2028;
  v2[3] = &unk_100A44120;
  v2[4] = v1;
  id v3 = *(id *)(a1 + 40);
  [v1 _migrateBooksToUbiquityIfNeededWithCompletion:v2];
}

void sub_1001C2028(uint64_t a1)
{
  [*(id *)(a1 + 32) _leaveOngoingMigrateAllAttempt];
  uint64_t v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    v2[2]();
    uint64_t v2 = v3;
  }
}

void sub_1001C21E0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v6 count])
  {
    id v7 = +[NSMutableDictionary dictionaryWithCapacity:](NSMutableDictionary, "dictionaryWithCapacity:", [v5 count]);
    long long v37 = 0u;
    long long v38 = 0u;
    long long v39 = 0u;
    long long v40 = 0u;
    id v31 = v5;
    id v8 = v5;
    id v9 = [v8 countByEnumeratingWithState:&v37 objects:v42 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v11 = *(void *)v38;
      do
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v38 != v11) {
            objc_enumerationMutation(v8);
          }
          id v13 = *(void **)(*((void *)&v37 + 1) + 8 * i);
          id v14 = [v13 url];
          id v15 = [v13 assetID];
          [v7 setObject:v14 forKeyedSubscript:v15];
        }
        id v10 = [v8 countByEnumeratingWithState:&v37 objects:v42 count:16];
      }
      while (v10);
    }

    long long v35 = 0u;
    long long v36 = 0u;
    long long v33 = 0u;
    long long v34 = 0u;
    id v16 = v6;
    id v17 = [v16 countByEnumeratingWithState:&v33 objects:v41 count:16];
    if (v17)
    {
      id v18 = v17;
      uint64_t v19 = *(void *)v34;
      do
      {
        id v20 = 0;
        do
        {
          if (*(void *)v34 != v19) {
            objc_enumerationMutation(v16);
          }
          __int16 v21 = *(void **)(*((void *)&v33 + 1) + 8 * (void)v20);
          uint64_t v22 = [v21 assetID];
          uint64_t v23 = [v7 objectForKeyedSubscript:v22];

          if (v23)
          {
            uint64_t v24 = *(void **)(a1 + 32);
            __int16 v25 = [v21 url];
            [v24 p_updateCachedURLsFrom:v23 to:v25];
          }
          else
          {
            BCReportAssertionFailureWithMessage();
          }

          id v20 = (char *)v20 + 1;
        }
        while (v18 != v20);
        id v26 = [v16 countByEnumeratingWithState:&v33 objects:v41 count:16];
        id v18 = v26;
      }
      while (v26);
    }

    id v5 = v31;
  }
  id v27 = objc_retainBlock(*(id *)(a1 + 40));
  id v28 = v27;
  if (v27) {
    (*((void (**)(id))v27 + 2))(v27);
  }

  long long v29 = [*(id *)(a1 + 32) migrationQueue];
  dispatch_resume(v29);

  id v30 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v30, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEFAULT, "migrateBooksToUbiquityIfNeededWithCompletion end (completion called and migration queue resumed)", buf, 2u);
  }
}

void sub_1001C24EC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) migrationQueue];
  dispatch_suspend(v2);

  id v3 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "migrateBooksToUbiquityIfNeededWithCompletion begin", buf, 2u);
  }

  id v4 = [*(id *)(a1 + 32) ubiquityStatusMonitor];
  if ([v4 isICloudDriveEnabled])
  {
    unsigned int v5 = [*(id *)(a1 + 32) initialMetadataQueryWasHandled];

    if (v5)
    {
      id v6 = [*(id *)(a1 + 32) ubiquityEligibleBooksProvider];
      v10[0] = _NSConcreteStackBlock;
      v10[1] = 3221225472;
      v10[2] = sub_1001C2654;
      v10[3] = &unk_100A46800;
      id v7 = *(void **)(a1 + 40);
      void v10[4] = *(void *)(a1 + 32);
      id v11 = v7;
      [v6 fetchAllLocalBooksEligibleToBeMadeUbiquitousWithCompletion:v10];

      return;
    }
  }
  else
  {
  }
  id v8 = objc_retainBlock(*(id *)(a1 + 40));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id, void, void))v8 + 2))(v8, 0, 0);
  }
}

void sub_1001C2654(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([v5 count])
  {
    id v7 = +[BKLibraryManager defaultManager];
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001C27E8;
    v10[3] = &unk_100A455C0;
    void v10[4] = *(void *)(a1 + 32);
    id v11 = v5;
    id v12 = *(id *)(a1 + 40);
    [v7 performBackgroundReadOnlyBlock:v10];
  }
  else
  {
    id v8 = BKLibraryBookImportLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v14 = v6;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "No assets eligible to be migrated error: (%@)", buf, 0xCu);
    }

    id v9 = objc_retainBlock(*(id *)(a1 + 40));
    id v7 = v9;
    if (v9) {
      (*((void (**)(id, void, void))v9 + 2))(v9, 0, 0);
    }
  }
}

void sub_1001C27E8(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) _sortedAssetsFromEligibleAssets:*(void *)(a1 + 40) moc:a2];
  id v4 = [*(id *)(a1 + 32) bookOperationsQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  v7[2] = sub_1001C28C4;
  void v7[3] = &unk_100A45338;
  uint64_t v5 = *(void *)(a1 + 32);
  id v8 = v3;
  uint64_t v9 = v5;
  id v10 = *(id *)(a1 + 48);
  id v6 = v3;
  [v4 addOperationWithBlock:v7];
}

void sub_1001C28C4(uint64_t a1)
{
  uint64_t v2 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) valueForKey:@"assetID"];
    *(_DWORD *)buf = 138412290;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "fetching quota while migrating assetIDs [%@]", buf, 0xCu);
  }
  uint64_t v5 = *(void *)(a1 + 32);
  id v4 = *(void **)(a1 + 40);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001C2A0C;
  _OWORD v6[3] = &unk_100A48D40;
  id v8 = *(id *)(a1 + 48);
  id v7 = *(id *)(a1 + 32);
  [v4 boq_migrateBooksThatWillFitToUbiquityAfterQuotaFetch:v5 completion:v6];
}

void sub_1001C2A0C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = objc_retainBlock(*(id *)(a1 + 40));
  id v4 = v3;
  if (v3) {
    (*((void (**)(id, void, id))v3 + 2))(v3, *(void *)(a1 + 32), v5);
  }
}

void sub_1001C2C98(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1001C2CB0(uint64_t a1)
{
  return [*(id *)(a1 + 32) al_addAssetIDsForOngoingMigrationAttempt:*(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40)];
}

void sub_1001C2CC8(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001C2D68;
  v5[3] = &unk_100A4A3B8;
  void v5[4] = v1;
  long long v4 = *(_OWORD *)(a1 + 48);
  id v3 = (id)v4;
  long long v6 = v4;
  [v1 _migrateBookToUbiquity:v2 completion:v5];
}

void sub_1001C2D68(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  [*(id *)(a1 + 32) _removeAssetIDsForOngoingMigrationAttempt:*(void *)(*(void *)(*(void *)(a1 + 48) + 8) + 40)];
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);
  }
}

void sub_1001C2F58(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5)
  {
    id v7 = a1[4];
    id v8 = [a1[5] url];
    uint64_t v9 = [v5 url];
    [v7 p_updateCachedURLsFrom:v8 to:v9];
  }
  id v10 = objc_retainBlock(a1[6]);
  id v11 = v10;
  if (v10) {
    (*((void (**)(id, id, id))v10 + 2))(v10, v5, v6);
  }

  id v12 = [a1[4] migrationQueue];
  dispatch_resume(v12);

  id v13 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: migrateBookToUbiquity complete.  Migration queue resumed.", v14, 2u);
  }
}

void sub_1001C3070(id *a1)
{
  uint64_t v2 = [a1[4] migrationQueue];
  dispatch_suspend(v2);

  id v3 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = a1[5];
    *(_DWORD *)buf = 138412290;
    id v16 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: migrateBookToUbiquity: %@", buf, 0xCu);
  }

  id v5 = [a1[4] ubiquityStatusMonitor];
  unsigned int v6 = [v5 isICloudDriveEnabled];

  if (v6)
  {
    id v7 = [a1[4] ubiquityEligibleBooksProvider];
    id v8 = [a1[5] assetID];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _OWORD v12[2] = sub_1001C3278;
    v12[3] = &unk_100A46460;
    void v12[4] = a1[4];
    id v14 = a1[6];
    id v13 = a1[5];
    [v7 fetchLocalAssetWithID:v8 completion:v12];
  }
  else
  {
    uint64_t v9 = BKLibraryBookImportLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: iCloud Drive not enabled, not importing.", buf, 2u);
    }

    id v10 = objc_retainBlock(a1[6]);
    id v11 = v10;
    if (v10) {
      (*((void (**)(id, void, void))v10 + 2))(v10, 0, 0);
    }
  }
}

void sub_1001C3278(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5
    && ([a1[4] ubiquityEligibleBooksProvider],
        id v7 = objc_claimAutoreleasedReturnValue(),
        unsigned int v8 = [v7 isEligibleLocalBookToBeMadeUbiquitous:v5],
        v7,
        v8))
  {
    uint64_t v9 = [a1[4] bookOperationsQueue];
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    void v16[2] = sub_1001C34A8;
    v16[3] = &unk_100A45338;
    void v16[4] = a1[4];
    id v17 = v5;
    id v18 = a1[6];
    [v9 addOperationWithBlock:v16];
  }
  else
  {
    id v10 = BKLibraryBookImportLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
    {
      id v11 = [a1[5] url];
      id v12 = [a1[5] assetID];
      id v13 = [a1[5] dataSourceIdentifier];
      *(_DWORD *)buf = 141559042;
      uint64_t v20 = 1752392040;
      __int16 v21 = 2112;
      uint64_t v22 = v11;
      __int16 v23 = 2160;
      uint64_t v24 = 1752392040;
      __int16 v25 = 2112;
      id v26 = v12;
      __int16 v27 = 2114;
      id v28 = v13;
      _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController: Asset not eligible to be migrated. url(%{mask.hash}@), assetID(%{mask.hash}@) dataSourceIdentifier(%{public}@)", buf, 0x34u);
    }
    id v14 = objc_retainBlock(a1[6]);
    id v15 = v14;
    if (v14) {
      (*((void (**)(id, void, void))v14 + 2))(v14, 0, 0);
    }
  }
}

void sub_1001C34A8(id *a1)
{
  if ([a1[4] hasEverReceivedUbiquityQuota]
    && ([a1[4] booksThatEncounteredUploadError],
        uint64_t v2 = objc_claimAutoreleasedReturnValue(),
        id v3 = [v2 count],
        v2,
        !v3)
    || ([a1[4] pendingQuotaFetch] & 1) != 0)
  {
    if ([a1[4] pendingQuotaFetch])
    {
      objc_initWeak((id *)location, a1[4]);
      id v4 = [a1[4] pendingQuotaFetchMigrationBlocks];
      v16[0] = _NSConcreteStackBlock;
      v16[1] = 3221225472;
      void v16[2] = sub_1001C38E8;
      v16[3] = &unk_100A492B8;
      id v17 = a1[5];
      objc_copyWeak(&v19, (id *)location);
      id v18 = a1[6];
      id v5 = objc_retainBlock(v16);
      [v4 addObject:v5];

      objc_destroyWeak(&v19);
      objc_destroyWeak((id *)location);
    }
    else
    {
      id v10 = BKLibraryBookImportLog();
      if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
      {
        id v11 = [a1[5] assetID];
        *(_DWORD *)id location = 141558274;
        *(void *)&location[4] = 1752392040;
        __int16 v25 = 2112;
        id v26 = v11;
        _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "don't need to fetch quota while migrating assetID (%{mask.hash}@)", location, 0x16u);
      }
      id v12 = a1[4];
      id v22 = a1[5];
      id v13 = +[NSArray arrayWithObjects:&v22 count:1];
      v14[0] = _NSConcreteStackBlock;
      v14[1] = 3221225472;
      void v14[2] = sub_1001C3AE0;
      v14[3] = &unk_100A46C98;
      id v15 = a1[6];
      [v12 boq_migrateBooksThatWillFitToUbiquity:v13 completion:v14];
    }
  }
  else
  {
    id v6 = BKLibraryBookImportLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      id v7 = [a1[5] assetID];
      *(_DWORD *)id location = 141558274;
      *(void *)&location[4] = 1752392040;
      __int16 v25 = 2112;
      id v26 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "fetching quota while migrating assetID (%{mask.hash}@)", location, 0x16u);
    }
    id v8 = a1[4];
    id v23 = a1[5];
    uint64_t v9 = +[NSArray arrayWithObjects:&v23 count:1];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_1001C3864;
    _OWORD v20[3] = &unk_100A46C98;
    id v21 = a1[6];
    [v8 boq_migrateBooksThatWillFitToUbiquityAfterQuotaFetch:v9 completion:v20];
  }
}

void sub_1001C3838(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 64));
  _Unwind_Resume(a1);
}

void sub_1001C3864(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    id v4 = [v5 firstObject];
    v3[2](v3, v4, 0);
  }
}

void sub_1001C38E8(id *a1)
{
  uint64_t v2 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [a1[4] assetID];
    *(_DWORD *)buf = 141558274;
    uint64_t v10 = 1752392040;
    __int16 v11 = 2112;
    id v12 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "pending quota fetch, will migrate assetID (%{mask.hash}@) after received", buf, 0x16u);
  }
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v8 = a1[4];
  id v5 = +[NSArray arrayWithObjects:&v8 count:1];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001C3A5C;
  _OWORD v6[3] = &unk_100A46C98;
  id v7 = a1[5];
  [WeakRetained boq_migrateBooksThatWillFitToUbiquity:v5 completion:v6];
}

void sub_1001C3A5C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    id v4 = [v5 firstObject];
    v3[2](v3, v4, 0);
  }
}

void sub_1001C3AE0(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 32));
  if (v3)
  {
    id v4 = [v5 firstObject];
    v3[2](v3, v4, 0);
  }
}

void sub_1001C3C74(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 40));
  _Unwind_Resume(a1);
}

void sub_1001C3C98(id *a1, uint64_t a2, void *a3)
{
  id v5 = a3;
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v7 = WeakRetained;
  if (WeakRetained)
  {
    id v8 = [WeakRetained bookOperationsQueue];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1001C3E0C;
    v13[3] = &unk_100A4A430;
    void v13[4] = v7;
    uint64_t v17 = a2;
    id v14 = v5;
    id v15 = a1[4];
    id v16 = a1[5];
    [v8 addOperationWithBlock:v13];
  }
  else
  {
    uint64_t v9 = BKLibraryBookImportLog();
    if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v12 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "BKUbiquitousDocumentsController deallocated mid migration", v12, 2u);
    }

    id v10 = objc_retainBlock(a1[5]);
    __int16 v11 = v10;
    if (v10) {
      (*((void (**)(id, void, void))v10 + 2))(v10, 0, 0);
    }
  }
}

void sub_1001C3E0C(uint64_t a1)
{
  [*(id *)(a1 + 32) boq_handleSpaceAvailableReceivedWithFreeBytes:*(void *)(a1 + 64) serverError:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) boq_migrateBooksThatWillFitToUbiquity:*(void *)(a1 + 48) completion:*(void *)(a1 + 56)];
  long long v10 = 0u;
  long long v11 = 0u;
  long long v8 = 0u;
  long long v9 = 0u;
  uint64_t v2 = [*(id *)(a1 + 32) pendingQuotaFetchMigrationBlocks];
  id v3 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v9;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v9 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v8 + 1) + 8 * (void)v6) + 16))();
        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v8 objects:v12 count:16];
    }
    while (v4);
  }

  id v7 = [*(id *)(a1 + 32) pendingQuotaFetchMigrationBlocks];
  [v7 removeAllObjects];
}

void sub_1001C44F0(uint64_t a1, void *a2)
{
  id v6 = a2;
  id v3 = [*(id *)(a1 + 32) ubiquityEligibleBooksProvider];
  [v3 didMakeLocalBooksUbiquitous:v6];

  id v4 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v5 = v4;
  if (v4) {
    (*((void (**)(id, id, void))v4 + 2))(v4, v6, 0);
  }
}

void sub_1001C499C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,char a39)
{
  _Block_object_dispose(&a39, 8);
  _Block_object_dispose((const void *)(v39 - 208), 8);
  _Unwind_Resume(a1);
}

void sub_1001C49E0(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v7 = 141558274;
    uint64_t v8 = 1752392040;
    __int16 v9 = 2112;
    id v10 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "OngoingMigrationAttempt - Adding observers for %{mask.hash}@", (uint8_t *)&v7, 0x16u);
  }

  uint64_t v5 = [[BKUbiquitousDocumentsOngoingMigrationObserver alloc] initWithAssetIDs:v3 notify:*(void *)(a1 + 40)];
  id v6 = [*(id *)(a1 + 32) ongoingMigrationAttemptObservers];
  [v6 addObject:v5];
}

void sub_1001C4AE8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
  unsigned int v3 = [v2 intersectsSet:*(void *)(a1 + 40)];

  if (v3)
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 72) + 8) + 24) = 1;
    (*(void (**)(void))(*(void *)(a1 + 64) + 16))();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 80) + 8) + 24) = 1;
  }
  else if ((uint64_t)[*(id *)(a1 + 32) ongoingMigrationAttemptOutstandingMigrateAllAttempts] >= 1)
  {
    id v4 = *(void **)(a1 + 48);
    if (!v4) {
      id v4 = *(void **)(a1 + 56);
    }
    uint64_t v5 = (id *)(*(void *)(*(void *)(a1 + 88) + 8) + 40);
    objc_storeStrong(v5, v4);
  }
}

void sub_1001C4BB4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v5
    && ([*(id *)(a1 + 32) ubiquityEligibleBooksProvider],
        int v7 = objc_claimAutoreleasedReturnValue(),
        unsigned int v8 = [v7 isEligibleLocalBookToBeMadeUbiquitous:v5],
        v7,
        v8))
  {
    __int16 v9 = *(os_unfair_lock_s **)(a1 + 32);
    id v10 = v9 + 2;
    v16[0] = _NSConcreteStackBlock;
    v16[1] = 3221225472;
    void v16[2] = sub_1001C4DBC;
    v16[3] = &unk_100A4A4F0;
    void v16[4] = v9;
    id v17 = *(id *)(a1 + 40);
    id v18 = *(id *)(a1 + 48);
    long long v15 = *(_OWORD *)(a1 + 56);
    id v11 = (id)v15;
    long long v19 = v15;
    os_unfair_lock_lock(v10);
    sub_1001C4DBC((uint64_t)v16);
    os_unfair_lock_unlock(v10);
    if (*(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24))
    {
      id v12 = [*(id *)(a1 + 32) ongoingMigrationAttemptTimer];
      [v12 signalWithCompletion:&stru_100A4A510];
    }
  }
  else
  {
    id v13 = BKLibraryBookImportLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v14 = *(void *)(a1 + 40);
      *(_DWORD *)buf = 141558274;
      uint64_t v21 = 1752392040;
      __int16 v22 = 2112;
      uint64_t v23 = v14;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "OngoingMigrationAttempt - No wait needed on 'migrate all' for %{mask.hash}@ because asset is not eligible", buf, 0x16u);
    }

    [*(id *)(a1 + 32) _notifyOngoingMigrationAttemptCompletion:*(void *)(a1 + 56) hasPendingChange:0];
  }
}

id sub_1001C4DBC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
  unsigned int v3 = [v2 intersectsSet:*(void *)(a1 + 40)];

  if (v3) {
    goto LABEL_4;
  }
  if ((uint64_t)[*(id *)(a1 + 32) ongoingMigrationAttemptOutstandingMigrateAllAttempts] >= 1)
  {
    [*(id *)(a1 + 32) al_addAssetIDsForOngoingMigrationAttempt:*(void *)(a1 + 40)];
LABEL_4:
    id result = (id)(*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
    *(unsigned char *)(*(void *)(*(void *)(a1 + 64) + 8) + 24) = 1;
    return result;
  }
  id v5 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 40);
    int v7 = 141558274;
    uint64_t v8 = 1752392040;
    __int16 v9 = 2112;
    uint64_t v10 = v6;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "OngoingMigrationAttempt - No wait needed on 'migrate all' for %{mask.hash}@ because 'migrate all' has already finished", (uint8_t *)&v7, 0x16u);
  }

  return [*(id *)(a1 + 32) _notifyOngoingMigrationAttemptCompletion:*(void *)(a1 + 56) hasPendingChange:0];
}

void sub_1001C52E4(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001C5318(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
  id v12 = [v2 copy];

  unsigned int v3 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
  [v3 minusSet:*(void *)(a1 + 40)];

  id v4 = [*(id *)(a1 + 32) ongoingMigrationAttemptObservers];
  id v5 = (char *)[v4 count];

  if ((uint64_t)(v5 - 1) >= 0)
  {
    do
    {
      --v5;
      uint64_t v6 = [*(id *)(a1 + 32) ongoingMigrationAttemptObservers];
      int v7 = [v6 objectAtIndexedSubscript:v5];

      uint64_t v8 = [v7 assetIDs];
      if ([v8 intersectsSet:v12])
      {
        __int16 v9 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
        unsigned __int8 v10 = [v8 intersectsSet:v9];

        if ((v10 & 1) == 0)
        {
          id v11 = [*(id *)(a1 + 32) ongoingMigrationAttemptObservers];
          [v11 removeObjectAtIndex:v5];

          [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) addObject:v7];
        }
      }
    }
    while ((uint64_t)v5 > 0);
  }
}

id sub_1001C5568(uint64_t a1)
{
  uint64_t v1 = *(void **)(a1 + 32);
  uint64_t v2 = (char *)[v1 ongoingMigrationAttemptOutstandingMigrateAllAttempts] + 1;

  return [v1 setOngoingMigrationAttemptOutstandingMigrateAllAttempts:v2];
}

void sub_1001C57E0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001C5804(uint64_t a1)
{
  if ((uint64_t)[*(id *)(a1 + 32) ongoingMigrationAttemptOutstandingMigrateAllAttempts] >= 1) {
    [*(id *)(a1 + 32) setOngoingMigrationAttemptOutstandingMigrateAllAttempts:[*(id *)(a1 + 32) ongoingMigrationAttemptOutstandingMigrateAllAttempts] - 1];
  }
  if (![*(id *)(a1 + 32) ongoingMigrationAttemptOutstandingMigrateAllAttempts])
  {
    id v5 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
    id v2 = [v5 copy];
    uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  }
}

void sub_1001C5AB0(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va1, a9);
  va_start(va, a9);
  uint64_t v11 = va_arg(va1, void);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v14 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v9 - 128), 8);
  _Unwind_Resume(a1);
}

id sub_1001C5AEC(uint64_t a1)
{
  *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = [*(id *)(a1 + 32) ongoingMigrationAttemptOutstandingMigrateAllAttempts];
  id v2 = [*(id *)(a1 + 32) ongoingMigrationAttemptAssetIDs];
  id v3 = [v2 copy];
  uint64_t v4 = *(void *)(*(void *)(a1 + 48) + 8);
  id v5 = *(void **)(v4 + 40);
  *(void *)(v4 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v3;

  BOOL v6 = *(uint64_t *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) > 0
    || [*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) count] != 0;
  *(unsigned char *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v6;
  int v7 = *(void **)(a1 + 32);

  return [v7 setOngoingMigrationAttemptOutstandingMigrateAllAttempts:0];
}

void sub_1001C5C7C(uint64_t a1)
{
  uint64_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    uint64_t v1 = v2;
  }
}

id sub_1001C5DF0(uint64_t a1)
{
  return _[*(id *)(a1 + 32) setInitialMetadataQueryWasHandled:1];
}

void sub_1001C5EB0(uint64_t a1)
{
  id v2 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) valueForKey:@"assetID"];
    int v5 = 138412290;
    BOOL v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "booksWithUploadError: %@", (uint8_t *)&v5, 0xCu);
  }
  uint64_t v4 = [*(id *)(a1 + 40) booksThatEncounteredUploadError];
  [v4 addObjectsFromArray:*(void *)(a1 + 32)];
}

id sub_1001C6048(uint64_t a1)
{
  id v2 = BKLibraryBookImportLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(a1 + 32);
    int v5 = 138412290;
    uint64_t v6 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "uploadedBooks: %@", (uint8_t *)&v5, 0xCu);
  }

  return [*(id *)(a1 + 40) boq_addUploadedQuotaCompensationForAssetIDs:*(void *)(a1 + 32)];
}

void sub_1001C8000(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 count];
  if (v4)
  {
    id v5 = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    id v11[2] = sub_1001C8190;
    v11[3] = &unk_100A4A5A8;
    uint64_t v6 = *(void **)(a1 + 32);
    id v12 = *(id *)(a1 + 40);
    id v14 = v5;
    id v13 = *(id *)(a1 + 48);
    [v6 fetchAssetsWithIDs:v3 completion:v11];

    int v7 = v12;
  }
  else
  {
    uint64_t v8 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      [*(id *)(a1 + 40) time];
      uint64_t v9 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
      *(_DWORD *)buf = 138412290;
      id v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "MRP: %@ for 0 media library books", buf, 0xCu);
    }
    id v10 = objc_retainBlock(*(id *)(a1 + 48));
    int v7 = v10;
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void sub_1001C8190(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  long long v20 = 0u;
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v7 = [v5 countByEnumeratingWithState:&v20 objects:v28 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = 0;
    uint64_t v10 = *(void *)v21;
    do
    {
      for (uint64_t i = 0; i != v8; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v21 != v10) {
          objc_enumerationMutation(v5);
        }
        id v12 = [*(id *)(*((void *)&v20 + 1) + 8 * i) purchaseDate];
        id v13 = v12;
        if (!v9 || [v12 compare:v9] == (id)1)
        {
          id v14 = v13;

          uint64_t v9 = v14;
        }
      }
      id v8 = [v5 countByEnumeratingWithState:&v20 objects:v28 count:16];
    }
    while (v8);
  }
  else
  {
    uint64_t v9 = 0;
  }
  uint64_t v15 = BKLibraryDataSourceMediaLibraryLog();
  if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
  {
    [*(id *)(a1 + 32) time];
    id v16 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    id v17 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
    *(_DWORD *)buf = 138412546;
    __int16 v25 = v16;
    __int16 v26 = 2112;
    __int16 v27 = v17;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "MRP: %@ for %@ media library books", buf, 0x16u);
  }
  id v18 = objc_retainBlock(*(id *)(a1 + 40));
  long long v19 = v18;
  if (v18) {
    (*((void (**)(id, void *))v18 + 2))(v18, v9);
  }
}

void sub_1001C8540(uint64_t a1, void *a2, void *a3)
{
  id v8 = a2;
  id v5 = a3;
  [*(id *)(a1 + 32) _addAssetIDsToCacheManager:v8];
  id v6 = objc_retainBlock(*(id *)(a1 + 40));
  id v7 = v6;
  if (v6) {
    (*((void (**)(id, id, id))v6 + 2))(v6, v8, v5);
  }
}

void sub_1001C8BDC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if ([*(id *)(a1 + 32) isSupplementalContent])
  {
    objc_opt_class();
    id v7 = BUDynamicCast();
    id v8 = [v7 storePlaylistID];
    objc_opt_class();
    uint64_t v9 = [v7 parentAsset];
    uint64_t v10 = BUDynamicCast();

    if (v10)
    {
      uint64_t v11 = [v10 storeRedownloadParameters];
    }
    else
    {
      id v12 = BKLibraryDataSourceMediaLibraryLog();
      if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
        sub_1007EF0BC((uint64_t *)(a1 + 32), (uint64_t)v6, v12);
      }

      uint64_t v11 = 0;
    }
  }
  else
  {
    objc_opt_class();
    id v7 = BUDynamicCast();
    id v8 = [v7 storeID];
    uint64_t v11 = [v7 storeRedownloadParameters];
  }

  if (v8) {
    BOOL v13 = v11 == 0;
  }
  else {
    BOOL v13 = 1;
  }
  if (v13)
  {
    id v14 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR))
    {
      uint64_t v19 = *(void *)(a1 + 32);
      *(_DWORD *)buf = 138413058;
      uint64_t v29 = v19;
      __int16 v30 = 2112;
      id v31 = v8;
      __int16 v32 = 2112;
      long long v33 = v11;
      __int16 v34 = 2112;
      id v35 = v6;
      _os_log_error_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_ERROR, "Could not resolve library asset %@. StoreID: %@. DownloadParams: %@. Error: %@", buf, 0x2Au);
    }

    id v15 = objc_retainBlock(*(id *)(a1 + 56));
    id v17 = v15;
    if (v15) {
      (*((void (**)(id, void, uint64_t, id))v15 + 2))(v15, 0, 1, v6);
    }
  }
  else
  {
    id v16 = [*(id *)(a1 + 40) identifier];
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_1001C8F14;
    _OWORD v20[3] = &unk_100A4A5F8;
    id v21 = v11;
    id v22 = v8;
    id v23 = *(id *)(a1 + 32);
    id v24 = *(id *)(a1 + 48);
    id v25 = v16;
    id v27 = *(id *)(a1 + 56);
    id v26 = v5;
    id v17 = v16;
    id v18 = objc_retainBlock(v20);
    ((void (*)(void))v18[2])();
  }
}

void sub_1001C8F14(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 40) longLongValue]);
  id v4 = +[BLPurchaseRequest requestWithBuyParameters:v2 storeIdentifier:v3];

  if ([*(id *)(a1 + 48) isSupplementalContent])
  {
    id v5 = [*(id *)(a1 + 48) storeID];
    id v6 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [v5 longLongValue]);
    id v7 = +[NSSet setWithObject:v6];
    [v4 setStoreIdentifiersToDownload:v7];

    [v4 setSupplementalContent:1];
  }
  [v4 setAudiobook:1];
  id v8 = [*(id *)(a1 + 56) userInitiated];

  if (v8)
  {
    uint64_t v9 = [*(id *)(a1 + 56) userInitiated];
    [v4 setUserInitiated:[v9 BOOLValue]];
  }
  uint64_t v10 = +[JSABridge sharedInstance];
  uint64_t v11 = [v10 windowManager];

  id v12 = +[BLDownloadQueue sharedInstance];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_1001C912C;
  v13[3] = &unk_100A4A5D0;
  id v14 = *(id *)(a1 + 64);
  id v16 = *(id *)(a1 + 80);
  id v15 = *(id *)(a1 + 72);
  [v12 purchaseWithRequest:v4 uiManager:v11 completion:v13];
}

void sub_1001C912C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v6 = BKLibraryDataSourceMediaLibraryLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    int v10 = 138412546;
    uint64_t v11 = v7;
    __int16 v12 = 2112;
    id v13 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%@ Purchase completed. error:%@", (uint8_t *)&v10, 0x16u);
  }

  id v8 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(id, void, uint64_t, id))v8 + 2))(v8, *(void *)(a1 + 40), 1, v5);
  }
}

void sub_1001C947C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = BKLibraryDataSourceMediaLibraryLog();
  id v4 = v3;
  if (v2)
  {
    if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Successfully updated jalisco media library from purchase success", v5, 2u);
    }
  }
  else if (os_log_type_enabled(v3, OS_LOG_TYPE_ERROR))
  {
    sub_1007EF17C();
  }
}

void sub_1001C955C(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = BKLibraryDataSourceMediaLibraryLog();
  BOOL v4 = os_log_type_enabled(v3, OS_LOG_TYPE_ERROR);
  if (v2)
  {
    if (v4) {
      sub_1007EF1B0();
    }
  }
  else if (v4)
  {
    sub_1007EF1E4();
  }
}

void sub_1001C9800(uint64_t a1, void *a2, uint64_t a3)
{
  id v5 = a2;
  id v6 = objc_alloc_init((Class)NSMutableSet);
  long long v15 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  long long v18 = 0u;
  id v7 = v5;
  id v8 = (char *)[v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
  if (v8)
  {
    uint64_t v9 = v8;
    uint64_t v10 = *(void *)v16;
    do
    {
      uint64_t v11 = 0;
      do
      {
        if (*(void *)v16 != v10) {
          objc_enumerationMutation(v7);
        }
        __int16 v12 = BUStoreIdStringFromObject();
        [v6 addObject:v12, v15];

        ++v11;
      }
      while (v9 != v11);
      uint64_t v9 = (char *)[v7 countByEnumeratingWithState:&v15 objects:v19 count:16];
    }
    while (v9);
  }

  id v13 = objc_retainBlock(*(id *)(a1 + 32));
  id v14 = v13;
  if (v13) {
    (*((void (**)(id, id, uint64_t))v13 + 2))(v13, v6, a3);
  }
}

void sub_1001C9A14(uint64_t a1, uint64_t a2)
{
  BOOL v4 = BKLibraryDataSourceMediaLibraryLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "updatePurchaseItemsWithCompletion - Finished update Jalisco, success = %d", (uint8_t *)v7, 8u);
  }

  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t))v5 + 2))(v5, a2);
  }
}

void sub_1001C9B8C(void *a1)
{
  id v1 = a1;
  off_100B4A5C8();
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
    id v3 = [v2 sourceView];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0 && byte_100B4A5D0 == 1)
    {
      id v19 = v1;
      long long v22 = 0u;
      long long v23 = 0u;
      long long v20 = 0u;
      long long v21 = 0u;
      id v5 = [v2 subviews];
      id v6 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
      if (v6)
      {
        id v7 = v6;
        uint64_t v8 = *(void *)v21;
        do
        {
          for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v21 != v8) {
              objc_enumerationMutation(v5);
            }
            uint64_t v10 = *(void **)(*((void *)&v20 + 1) + 8 * i);
            uint64_t v11 = [v10 maskView];
            __int16 v12 = [v11 layer];

            if (v12)
            {
              id v13 = [v10 maskView];
              id v14 = [v13 layer];

              [v10 setMaskView:0];
              long long v15 = +[CALayer layer];
              long long v16 = [v10 layer];
              [v16 bounds];
              [v15 setFrame:];

              id v17 = +[UIColor colorWithWhite:1.0 alpha:1.0];
              objc_msgSend(v15, "setBackgroundColor:", objc_msgSend(v17, "CGColor"));

              [v15 addSublayer:v14];
              long long v18 = [v10 layer];
              [v18 setMask:v15];
            }
          }
          id v7 = [v5 countByEnumeratingWithState:&v20 objects:v24 count:16];
        }
        while (v7);
      }

      id v1 = v19;
    }
  }
}

void sub_1001C9E04(void *a1)
{
  id v1 = a1;
  off_100B4A5D8();
  objc_opt_class();
  if (objc_opt_isKindOfClass())
  {
    id v2 = v1;
    id v3 = [v2 sourceView];
    objc_opt_class();
    char isKindOfClass = objc_opt_isKindOfClass();

    if ((isKindOfClass & 1) != 0 && byte_100B4A5D0 == 1)
    {
      id v18 = v1;
      byte_100B4A5D0 = 0;
      +[CATransaction begin];
      long long v21 = 0u;
      long long v22 = 0u;
      long long v19 = 0u;
      long long v20 = 0u;
      id v17 = v2;
      id v5 = [v2 subviews];
      id v6 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
      if (v6)
      {
        id v7 = v6;
        uint64_t v8 = *(void *)v20;
        do
        {
          for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v20 != v8) {
              objc_enumerationMutation(v5);
            }
            uint64_t v10 = *(void **)(*((void *)&v19 + 1) + 8 * i);
            uint64_t v11 = [v10 layer];
            __int16 v12 = [v11 mask];

            if (v12)
            {
              id v13 = +[CABasicAnimation animationWithKeyPath:@"backgroundColor"];
              id v14 = +[UIColor colorWithWhite:1.0 alpha:0.0];
              [v13 setToValue:[v14 CGColor]];

              [v13 setFillMode:kCAFillModeBoth];
              [v13 setRemovedOnCompletion:0];
              long long v15 = [v10 layer];
              long long v16 = [v15 mask];
              [v16 addAnimation:v13 forKey:@"fade"];
            }
          }
          id v7 = [v5 countByEnumeratingWithState:&v19 objects:v23 count:16];
        }
        while (v7);
      }

      +[CATransaction commit];
      id v2 = v17;
      id v1 = v18;
    }
  }
}

void sub_1001CA0FC(id a1)
{
  id v1 = (objc_class *)objc_opt_class();
  InstanceMethod = class_getInstanceMethod(v1, "setSourceView:");
  off_100B4A5C8 = (uint64_t (*)(void))method_setImplementation(InstanceMethod, (IMP)sub_1001C9B8C);
  id v3 = (objc_class *)objc_opt_class();
  BOOL v4 = class_getInstanceMethod(v3, "didMoveToWindow");
  off_100B4A5D8 = (uint64_t (*)(void))method_setImplementation(v4, (IMP)sub_1001C9E04);
}

void sub_1001CABA4(uint64_t a1, void *a2)
{
  id v3 = a2;
  BOOL v4 = (uint64_t *)(a1 + 32);
  id v5 = [*(id *)(a1 + 32) absoluteURL];
  id v6 = [v5 standardizedURL];
  uint64_t v8 = *(void **)(a1 + 40);
  id v7 = (id *)(a1 + 40);
  uint64_t v9 = [v8 URL];
  uint64_t v10 = [v9 absoluteURL];
  uint64_t v11 = [v10 standardizedURL];
  unsigned __int8 v12 = [v6 isEqual:v11];

  if ((v12 & 1) == 0)
  {
    id v13 = BCCurrentBookLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_1007EF2E8(v4, v7, v13);
    }
  }
  id v14 = BCCurrentBookLog();
  long long v15 = v14;
  if (v3)
  {
    if (os_log_type_enabled(v14, OS_LOG_TYPE_ERROR)) {
      sub_1007EF25C(v4, (uint64_t)v3, v15);
    }
  }
  else if (os_log_type_enabled(v14, OS_LOG_TYPE_INFO))
  {
    uint64_t v16 = *v4;
    int v17 = 138412290;
    uint64_t v18 = v16;
    _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_INFO, "BKAssetPresentingFilePresenter Successful coordinated read [URL: %@]", (uint8_t *)&v17, 0xCu);
  }
}

uint64_t sub_1001CB0CC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001CB594(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setTargetSceneController:a2];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001CB62C;
  _OWORD v4[3] = &unk_100A4A720;
  id v3 = *(void **)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  [v3 requireTargetSceneController:v4];
}

uint64_t sub_1001CB62C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001CBA4C(uint64_t a1, void *a2)
{
  return [a2 saveStateClosing:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1001CBBA4(id a1, BKSceneControlling *a2, BOOL *a3)
{
  id v4 = [(BKSceneControlling *)a2 bk_window];
  id v3 = [v4 rootViewController];
  [v3 bc_analyticsSubtreeForceEndSession];
}

void sub_1001CBC10(id a1, BKSceneControlling *a2, BOOL *a3)
{
  id v4 = [(BKSceneControlling *)a2 bk_window];
  id v3 = [v4 rootViewController];
  [v3 bc_analyticsVisibilitySubtreeWillDisappear];
}

void sub_1001CBC7C(id a1, BKSceneControlling *a2, BOOL *a3)
{
  id v4 = [(BKSceneControlling *)a2 bk_window];
  id v3 = [v4 rootViewController];
  [v3 bc_analyticsVisibilitySubtreeDidDisappear];
}

void sub_1001CC490(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(v12);
  objc_destroyWeak(location);
  _Block_object_dispose((const void *)(v13 - 216), 8);
  objc_destroyWeak((id *)(v13 - 168));
  _Unwind_Resume(a1);
}

void sub_1001CC4E0(uint64_t a1)
{
  id v2 = objc_opt_new();
  id v3 = +[BKAudiobookPlayer sharedInstance];
  [v3 setCurrentAudiobook:0];

  id v4 = [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) newShowAssetTransaction];
  if (v4)
  {
    [v2 setObject:v4 forKeyedSubscript:BCTransactionOptionsTransactionKey];
    [v2 setObject:&__kCFBooleanTrue forKeyedSubscript:@"BKAudiobookOptionsIsRetryKey"];
  }
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = BCSceneLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v7 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138412290;
    uint64_t v13 = v7;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Attempting automatic reopen of asset %@ following auth", buf, 0xCu);
  }

  uint64_t v8 = [WeakRetained bookFlowController];
  uint64_t v9 = *(void **)(a1 + 32);
  v10[0] = _NSConcreteStackBlock;
  v10[1] = 3221225472;
  v10[2] = sub_1001CC6B4;
  v10[3] = &unk_100A4A808;
  id v11 = v9;
  [v8 showAssetWithTransaction:v4 assetID:v11 location:0 options:v2 completion:v10];
}

void sub_1001CC6B4(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = BCSceneLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v6 = *(void *)(a1 + 32);
    int v7 = 138412546;
    uint64_t v8 = v6;
    __int16 v9 = 2112;
    id v10 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Finished automatic reopen of asset %@ following auth, error %@", (uint8_t *)&v7, 0x16u);
  }
}

void sub_1001CC77C(id a1)
{
  id v1 = BCSceneLog();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_ERROR)) {
    sub_1007EF39C(v1);
  }
}

void sub_1001CC7C0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) accountID];
  id v3 = BCSceneLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    unsigned __int8 v12 = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "Attempting to authorize/refetch keys for user %@", buf, 0xCu);
  }

  id v4 = +[ACAccountStore bu_sharedAccountStore];
  id v5 = [v4 ams_iTunesAccountWithUsername:v2];

  uint64_t v6 = [v5 ams_DSID];
  id v7 = [v6 unsignedIntegerValue];

  uint64_t v8 = +[NSNumber numberWithUnsignedLongLong:v7];
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_1001CC95C;
  v9[3] = &unk_100A46A58;
  id v10 = *(id *)(a1 + 40);
  +[ft9cupR7u6OrU4m1pyhB Xj3eVHDeBoTD6fVn6fY8:v8 completion:v9];
}

void sub_1001CC95C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = BCSceneLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1007EF3E0((uint64_t)v3, v4);
    }
  }
  else
  {
    id v4 = objc_retainBlock(*(id *)(a1 + 32));
    if (v4)
    {
      if (+[NSThread isMainThread])
      {
        ((void (*))v4[2].isa)(v4);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001CCA60;
        block[3] = &unk_100A442B8;
        id v4 = v4;
        uint64_t v6 = v4;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
  }
}

uint64_t sub_1001CCA60(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001CCA70(uint64_t a1, unsigned __int16 a2)
{
  if (a2 - 9 > 1)
  {
    uint64_t v11 = 0;
    unsigned __int8 v12 = &v11;
    uint64_t v13 = 0x2020000000;
    char v14 = 0;
    id v4 = *(void **)(a1 + 32);
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001CCCAC;
    v8[3] = &unk_100A4A878;
    id v10 = &v11;
    id v9 = *(id *)(a1 + 48);
    [v4 bu_enumerateErrorUsingBlock:v8];
    if (!*((unsigned char *)v12 + 24))
    {
      id v5 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 48));
      if (v5)
      {
        if (+[NSThread isMainThread])
        {
          v5[2](v5);
        }
        else
        {
          v6[0] = _NSConcreteStackBlock;
          v6[1] = 3221225472;
          v6[2] = sub_1001CCDD0;
          _OWORD v6[3] = &unk_100A442B8;
          id v7 = v5;
          dispatch_async((dispatch_queue_t)&_dispatch_main_q, v6);
        }
      }
    }
    _Block_object_dispose(&v11, 8);
  }
  else
  {
    id v3 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 40));
    if (v3)
    {
      if (+[NSThread isMainThread])
      {
        v3[2](v3);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001CCC9C;
        block[3] = &unk_100A442B8;
        uint64_t v16 = v3;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
  }
}

void sub_1001CCC80(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, ...)
{
  va_start(va, a12);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001CCC9C(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001CCCAC(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if ([a2 isEqual:NSOSStatusErrorDomain]
    && +[THPFDContext isBagRefetchRequiredForStatus:a3])
  {
    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    uint64_t v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    if (v8)
    {
      if (+[NSThread isMainThread])
      {
        v8[2](v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001CCDC0;
        block[3] = &unk_100A442B8;
        id v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }

    *a5 = 1;
  }
}

uint64_t sub_1001CCDC0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1001CCDD0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001CCDE0(uint64_t a1)
{
  id v2 = BCSceneLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "This was not a retry play session and the error appears to have been failed authorization.  Examining if we can refetch keys/reauthorize", buf, 2u);
  }

  unsigned int v3 = [*(id *)(a1 + 32) contentType];
  if (v3 == 6)
  {
    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else if ((unsigned __int16)(v3 - 9) > 1u)
  {
    if (+[BKAssetUtilities isAudiobookTrackContentType:](BKAssetUtilities, "isAudiobookTrackContentType:", [*(id *)(a1 + 32) contentType]))
    {
      id v4 = *(void **)(a1 + 40);
      v5[0] = _NSConcreteStackBlock;
      v5[1] = 3221225472;
      v5[2] = sub_1001CCF20;
      v5[3] = &unk_100A4A8C8;
      id v6 = *(id *)(a1 + 64);
      [v4 bu_enumerateErrorUsingBlock:v5];
    }
  }
  else
  {
    (*(void (**)(void))(*(void *)(a1 + 56) + 16))();
  }
}

void sub_1001CCF20(uint64_t a1, void *a2, uint64_t a3, uint64_t a4, unsigned char *a5)
{
  if ([a2 isEqual:NSOSStatusErrorDomain]
    && +[THPFDContext isBagRefetchRequiredForStatus:a3])
  {
    uint64_t v8 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
    if (v8)
    {
      if (+[NSThread isMainThread])
      {
        v8[2](v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001CD028;
        block[3] = &unk_100A442B8;
        id v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }

    *a5 = 1;
  }
}

uint64_t sub_1001CD028(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001CD038(uint64_t a1)
{
  id v2 = BCSceneLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v13 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Can't open this asset due to failed authorization", v13, 2u);
  }

  unsigned int v3 = +[NSBundle mainBundle];
  id v4 = [v3 localizedStringForKey:@"Couldn’t Play Audiobook" value:&stru_100A70340 table:0];
  id v5 = +[NSBundle mainBundle];
  id v6 = [v5 localizedStringForKey:@"This audiobook isn’t authorized to play on this device." value:&stru_100A70340 table:0];
  id v7 = +[UIAlertController alertControllerWithTitle:v4 message:v6 preferredStyle:1];

  uint64_t v8 = +[NSBundle mainBundle];
  id v9 = [v8 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  id v10 = +[UIAlertAction actionWithTitle:v9 style:0 handler:0];

  [v7 addAction:v10];
  uint64_t v11 = [*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40) bk_window];
  unsigned __int8 v12 = +[UIViewController jsa_topMostViewControllerForWindow:v11];

  [v12 presentViewController:v7 animated:1 completion:0];
}

void sub_1001CD210(uint64_t a1, void *a2)
{
  id obj = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 64));
  id v4 = obj;
  if (!obj)
  {
    id v4 = [WeakRetained primarySceneController];
  }
  objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v4);
  if (!obj) {

  }
  id v5 = [*(id *)(a1 + 32) domain];
  if (([v5 isEqual:BKAudiobookPlayerErrorDomain] & 1) == 0)
  {

    goto LABEL_13;
  }
  id v6 = [*(id *)(a1 + 32) code];

  if (*(unsigned char *)(a1 + 72) || v6 != (id)2)
  {
    if (v6 != (id)2) {
      goto LABEL_13;
    }
    uint64_t v7 = *(void *)(a1 + 48);
  }
  else
  {
    uint64_t v7 = *(void *)(a1 + 40);
  }
  (*(void (**)(void))(v7 + 16))();
LABEL_13:
}

void sub_1001CD5BC(uint64_t a1)
{
  [*(id *)(a1 + 32) setWelcomePresenter:0];
  id v2 = [*(id *)(a1 + 32) pendingWelcomePresenterDismissCompletionBlocks];
  id v3 = [v2 copy];

  id v4 = [*(id *)(a1 + 32) pendingWelcomePresenterDismissCompletionBlocks];
  [v4 removeAllObjects];

  long long v14 = 0u;
  long long v15 = 0u;
  long long v12 = 0u;
  long long v13 = 0u;
  id v5 = v3;
  id v6 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v13;
    do
    {
      id v9 = 0;
      do
      {
        if (*(void *)v13 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = objc_retainBlock(*(id *)(*((void *)&v12 + 1) + 8 * (void)v9));
        uint64_t v11 = v10;
        if (v10) {
          (*((void (**)(id))v10 + 2))(v10);
        }

        id v9 = (char *)v9 + 1;
      }
      while (v7 != v9);
      id v7 = [v5 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v7);
  }
}

void sub_1001CD708(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001CD7B0;
  _OWORD v3[3] = &unk_100A44120;
  id v4 = v2;
  id v5 = *(id *)(a1 + 40);
  [v4 dismissWelcomeViewControllerAnimated:0 completion:v3];
}

id sub_1001CD7B0(uint64_t a1)
{
  return [*(id *)(a1 + 32) welcomePresenterFinishOngoingModalTransitionAnimations:*(void *)(a1 + 40)];
}

id sub_1001CD7BC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setWelcomePresenterIfNoneExists:shouldPresent:];
}

id sub_1001CD84C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _showMainViewControllerOrWelcomeScreenNow];
}

void sub_1001CD854(uint64_t a1)
{
  id v4 = [*(id *)(a1 + 32) initialUserTransaction];
  id v2 = [*(id *)(a1 + 32) primarySceneController];
  [v4 setTargetSceneController:v2];

  id v3 = [*(id *)(a1 + 32) bookPresenter];
  [v3 requestOpenLastKnownBookWithTransaction:v4];

  [*(id *)(a1 + 32) setInitialUserTransaction:0];
}

void sub_1001D0BB4(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

id sub_1001D0BD0(void *a1)
{
  id result = [*(id *)(a1[4] + 32) indexOfObjectIdenticalTo:a1[5]];
  if (result != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    id v3 = result;
    *(unsigned char *)(*(void *)(a1[6] + 8) + 24) = 1;
    id v4 = *(void **)(a1[4] + 32);
    return [v4 removeObjectAtIndex:v3];
  }
  return result;
}

id sub_1001D0C50(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _launchBlockTimedout:*(void *)(a1 + 40)];
}

void sub_1001D1004(uint64_t a1)
{
  if (![*(id *)(a1 + 32) downloadQueueGeneration])
  {
    id v2 = +[BLDownloadQueue sharedInstance];
    long long v10 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    long long v13 = 0u;
    [v2 downloads];
    id v3 = (void (**)(void, void))objc_claimAutoreleasedReturnValue();
    id v4 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
    if (v4)
    {
      id v5 = v4;
      uint64_t v6 = *(void *)v11;
LABEL_4:
      uint64_t v7 = 0;
      while (1)
      {
        if (*(void *)v11 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = +[NSNumber numberWithInteger:](NSNumber, "numberWithInteger:", [*(id *)(*((void *)&v10 + 1) + 8 * v7) downloadPhase]);
        unsigned int v9 = [&off_100A83648 containsObject:v8];

        if (!v9) {
          break;
        }
        if (v5 == (id)++v7)
        {
          id v5 = [v3 countByEnumeratingWithState:&v10 objects:v14 count:16];
          if (v5) {
            goto LABEL_4;
          }
          goto LABEL_10;
        }
      }
    }
    else
    {
LABEL_10:

      [*(id *)(a1 + 32) setDownloadQueueGeneration:*(char *)[*(id *)(a1 + 32) downloadQueueGeneration] + 1];
      id v3 = [*(id *)(a1 + 32) generationChangeHandler];
      if (v3) {
        ((void (**)(void, id))v3)[2](v3, [*(id *)(a1 + 32) downloadQueueGeneration]);
      }
    }
  }
}

void sub_1001D2834(uint64_t a1)
{
  id v2 = +[NSMutableSet set];
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v3 = [*(id *)(a1 + 32) downloadingAssets];
  id v4 = [v3 allValues];

  id v5 = [v4 countByEnumeratingWithState:&v13 objects:v21 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v14;
    do
    {
      uint64_t v8 = 0;
      do
      {
        if (*(void *)v14 != v7) {
          objc_enumerationMutation(v4);
        }
        unsigned int v9 = [*(id *)(a1 + 32) _updateDownloadingAssetAndCreateDownloadStatuses:*(void *)(*((void *)&v13 + 1) + 8 * (void)v8) from:0];
        if ([v9 count]) {
          [v2 addObjectsFromArray:v9];
        }

        uint64_t v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v13 objects:v21 count:16];
    }
    while (v6);
  }

  uint64_t v19 = BKLibraryDownloadStatusKey;
  long long v20 = v2;
  long long v10 = +[NSDictionary dictionaryWithObjects:&v20 forKeys:&v19 count:1];
  long long v11 = BCBookDownloadLog();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138543362;
    uint64_t v18 = v10;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "download progress notification %{public}@", buf, 0xCu);
  }

  long long v12 = +[NSNotificationCenter defaultCenter];
  [v12 postNotificationName:BKLibraryDownloadStatusNotification object:*(void *)(a1 + 32) userInfo:v10];
}

void sub_1001D2B68(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001D2BF4;
  _OWORD v3[3] = &unk_100A4AAE0;
  id v4 = v1;
  [v2 _performBlockOnAllAssetsForAssetID:v4 block:v3];
}

void sub_1001D2BF4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 downloadID];
  if ([v4 length])
  {
    id v5 = +[BLDownloadQueue sharedInstance];
    [v5 pauseDownloadWithID:v4 withCompletion:0];

    id v6 = BCBookDownloadLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [v3 assetID];
      int v14 = 138543362;
      long long v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "download paused %{public}@", (uint8_t *)&v14, 0xCu);
    }
  }
  else
  {
    id v6 = BCBookDownloadLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007EF654(a1, v6, v8, v9, v10, v11, v12, v13);
    }
  }
}

void sub_1001D2E58(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001D2EE4;
  _OWORD v3[3] = &unk_100A4AAE0;
  id v4 = v1;
  [v2 _performBlockOnAllAssetsForAssetID:v4 block:v3];
}

void sub_1001D2EE4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 downloadID];
  if ([v4 length])
  {
    id v5 = +[BLDownloadQueue sharedInstance];
    [v5 resumeDownloadWithID:v4 withCompletion:0];

    id v6 = BCBookDownloadLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [v3 assetID];
      int v14 = 138543362;
      long long v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "download resumed %{public}@", (uint8_t *)&v14, 0xCu);
    }
  }
  else
  {
    id v6 = BCBookDownloadLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007EF6C4(a1, v6, v8, v9, v10, v11, v12, v13);
    }
  }
}

void sub_1001D3148(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v1 = *(void **)(a1 + 40);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001D31D4;
  _OWORD v3[3] = &unk_100A4AAE0;
  id v4 = v1;
  [v2 _performBlockOnAllAssetsForAssetID:v4 block:v3];
}

void sub_1001D31D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 downloadID];
  if ([v4 length])
  {
    id v5 = +[BLDownloadQueue sharedInstance];
    [v5 cancelDownloadWithID:v4 withCompletion:0];

    id v6 = BCBookDownloadLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v7 = [v3 assetID];
      int v14 = 138543362;
      long long v15 = v7;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "download canceled %{public}@", (uint8_t *)&v14, 0xCu);
    }
  }
  else
  {
    id v6 = BCBookDownloadLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007EF734(a1, v6, v8, v9, v10, v11, v12, v13);
    }
  }
}

void sub_1001D34DC(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) downloadingAssets];
  id v3 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];

  id v4 = [v3 identifier];

  if (v4)
  {
    id v5 = [v3 downloadState];
    if (v5 == (id)8)
    {
      long long v16 = +[BLDownloadQueue sharedInstance];
      int v17 = [v3 downloadID];
      v24[0] = _NSConcreteStackBlock;
      v24[1] = 3221225472;
      id v24[2] = sub_1001D3900;
      _OWORD v24[3] = &unk_100A453E8;
      id v25 = v3;
      [v16 pauseDownloadWithID:v17 withCompletion:v24];

      uint64_t v8 = v25;
    }
    else if (v5 == (id)6)
    {
      id v6 = +[BLDownloadQueue sharedInstance];
      uint64_t v7 = [v3 downloadID];
      v26[0] = _NSConcreteStackBlock;
      v26[1] = 3221225472;
      v26[2] = sub_1001D3848;
      v26[3] = &unk_100A453E8;
      id v27 = v3;
      [v6 resumeDownloadWithID:v7 withCompletion:v26];

      uint64_t v8 = v27;
    }
    else
    {
      uint64_t v8 = BCBookDownloadLog();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v18 = [v3 downloadID];
        *(_DWORD *)buf = 138543618;
        __int16 v30 = v18;
        __int16 v31 = 2048;
        id v32 = [v3 downloadState];
        _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "unsupported state for toggling downloadID=%{public}@ state=%ld", buf, 0x16u);
      }
    }
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
    long long v20 = 0u;
    long long v21 = 0u;
    uint64_t v8 = [*(id *)(a1 + 32) restoreControllers];
    id v9 = [v8 countByEnumeratingWithState:&v20 objects:v28 count:16];
    if (v9)
    {
      id v10 = v9;
      uint64_t v19 = v3;
      uint64_t v11 = *(void *)v21;
      do
      {
        for (uint64_t i = 0; i != v10; uint64_t i = (char *)i + 1)
        {
          if (*(void *)v21 != v11) {
            objc_enumerationMutation(v8);
          }
          uint64_t v13 = *(void **)(*((void *)&v20 + 1) + 8 * i);
          int v14 = BCBookDownloadLog();
          if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
          {
            long long v15 = *(void **)(a1 + 40);
            *(_DWORD *)buf = 138543362;
            __int16 v30 = v15;
            _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "prioritize asset restore assetID=%{public}@", buf, 0xCu);
          }

          [v13 prioritizeAssetRestoreWithAssetID:*(void *)(a1 + 40)];
        }
        id v10 = [v8 countByEnumeratingWithState:&v20 objects:v28 count:16];
      }
      while (v10);
      id v3 = v19;
    }
  }
}

void sub_1001D3848(uint64_t a1)
{
  id v2 = BCBookDownloadLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) downloadID];
    int v4 = 138543362;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "download resumed downloadID=%{public}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1001D3900(uint64_t a1)
{
  id v2 = BCBookDownloadLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_INFO))
  {
    id v3 = [*(id *)(a1 + 32) downloadID];
    int v4 = 138412290;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_INFO, "download paused downloadID=%@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1001D3AE8(uint64_t a1)
{
  uint64_t v19 = +[NSMutableSet set];
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  long long v25 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v22 objects:v32 count:16];
  if (v3)
  {
    id v5 = v3;
    uint64_t v6 = *(void *)v23;
    *(void *)&long long v4 = 138412290;
    long long v18 = v4;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v6) {
          objc_enumerationMutation(v2);
        }
        uint64_t v8 = *(NSObject **)(*((void *)&v22 + 1) + 8 * i);
        id v9 = [v8 bk_assetIdentifier];
        if ([v9 length])
        {
          id v10 = [*(id *)(a1 + 40) _updateDownloadingAssets:v8];
          id v11 = [v9 length];
          uint64_t v12 = BCBookDownloadLog();
          uint64_t v13 = v12;
          if (v11)
          {
            if (os_log_type_enabled(v12, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 134217984;
              uint64_t v29 = v8;
              _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] about to create LibraryDownloadStatus from BLDownloadStatus %p", buf, 0xCu);
            }

            uint64_t v13 = [*(id *)(a1 + 40) _updateDownloadingAssetAndCreateDownloadStatuses:v10 from:v8];
            int v14 = BCBookDownloadLog();
            if (os_log_type_enabled(v14, OS_LOG_TYPE_DEFAULT))
            {
              *(_DWORD *)buf = 138412546;
              uint64_t v29 = v13;
              __int16 v30 = 2048;
              __int16 v31 = v8;
              _os_log_impl((void *)&_mh_execute_header, v14, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] finished creating LibraryDownloadStatuses (%@) from BLDownloadStatus %p", buf, 0x16u);
            }

            [v19 addObjectsFromArray:v13];
          }
          else if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR))
          {
            *(_DWORD *)buf = v18;
            uint64_t v29 = v9;
            _os_log_error_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_ERROR, "unhandled: %@", buf, 0xCu);
          }
        }
        else
        {
          id v10 = BCBookDownloadLog();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
            sub_1007EF7A4(&v20, v21, v10);
          }
        }
      }
      id v5 = [v2 countByEnumeratingWithState:&v22 objects:v32 count:16];
    }
    while (v5);
  }

  if ([v19 count])
  {
    long long v15 = BCBookDownloadLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      uint64_t v29 = v19;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] Posting a notification (progress) for assets: %@", buf, 0xCu);
    }

    uint64_t v26 = BKLibraryDownloadStatusKey;
    id v27 = v19;
    long long v16 = +[NSDictionary dictionaryWithObjects:&v27 forKeys:&v26 count:1];
    int v17 = +[NSNotificationCenter defaultCenter];
    [v17 postNotificationName:BKLibraryDownloadStatusNotification object:*(void *)(a1 + 40) userInfo:v16];
  }
}

void sub_1001D3FB4(uint64_t a1)
{
  long long v58 = +[NSMutableSet set];
  long long v57 = +[NSMutableArray array];
  long long v59 = +[NSMutableArray array];
  long long v56 = +[NSMutableArray array];
  long long v81 = 0u;
  long long v82 = 0u;
  long long v79 = 0u;
  long long v80 = 0u;
  id obj = *(id *)(a1 + 32);
  id v1 = [obj countByEnumeratingWithState:&v79 objects:v89 count:16];
  if (v1)
  {
    uint64_t v61 = *(void *)v80;
    *(void *)&long long v2 = 138543618;
    long long v55 = v2;
    do
    {
      for (uint64_t i = 0; i != v1; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v80 != v61) {
          objc_enumerationMutation(obj);
        }
        long long v4 = *(void **)(*((void *)&v79 + 1) + 8 * i);
        id v5 = [v4 bk_assetIdentifier:v55];
        if ([v5 length])
        {
          uint64_t v6 = [*(id *)(a1 + 40) downloadingAssets];
          uint64_t v7 = [v6 objectForKeyedSubscript:v5];

          if (v7)
          {
            [v7 setDownloadStatus:v4];
            if ([v7 downloadState] == (id)6)
            {
              uint64_t v8 = BCBookDownloadLog();
              if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
              {
                *(_DWORD *)buf = 138543362;
                id v84 = v5;
                _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] completed asset was paused: %{public}@", buf, 0xCu);
              }

              goto LABEL_36;
            }
            uint64_t v12 = [v7 parent];
            uint64_t v13 = BCBookDownloadLog();
            BOOL v14 = os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT);
            if (v12)
            {
              if (v14)
              {
                long long v15 = [v7 identifier];
                unsigned int v16 = [v7 isAudiobook];
                *(_DWORD *)buf = v55;
                id v84 = v15;
                __int16 v85 = 1024;
                LODWORD(v86) = v16;
                _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed audiobook child identifier=%{public}@ isAudiobook=%d", buf, 0x12u);
              }
              [v7 setActive:0];
              int v17 = [*(id *)(a1 + 40) downloadingAssets];
              long long v18 = [v7 identifier];
              [v17 removeObjectForKey:v18];

              if ([v7 isAudiobook])
              {
                uint64_t v19 = 0;
                goto LABEL_29;
              }
              long long v23 = BCBookDownloadLog();
              if (os_log_type_enabled(v23, OS_LOG_TYPE_DEFAULT))
              {
                long long v24 = [v7 identifier];
                *(_DWORD *)buf = 138543362;
                id v84 = v24;
                _os_log_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] supplemental download completed identifier=%{public}@", buf, 0xCu);
              }
              [v56 addObject:v7];
              long long v21 = [*(id *)(a1 + 40) downloadingAssets];
              long long v22 = [v7 identifier];
              [v21 removeObjectForKey:v22];
            }
            else
            {
              if (v14)
              {
                uint8_t v20 = [v7 identifier];
                *(_DWORD *)buf = 138543362;
                id v84 = v20;
                _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed identifier=%{public}@", buf, 0xCu);
              }
              long long v21 = [*(id *)(a1 + 40) downloadingAssets];
              long long v22 = [v7 identifier];
              [v21 removeObjectForKey:v22];
            }

            [v57 addObject:v7];
            uint64_t v19 = v7;
LABEL_29:
            long long v25 = [*(id *)(a1 + 40) _updateDownloadingAssetAndCreateDownloadStatuses:v7 from:v4];
            [v58 addObjectsFromArray:v25];
            if (v12)
            {
              uint64_t v26 = [v12 activeChildren];
              BOOL v27 = [v26 count] == 0;

              if (v27)
              {
                id v28 = BCBookDownloadLog();
                if (os_log_type_enabled(v28, OS_LOG_TYPE_DEFAULT))
                {
                  uint64_t v29 = [v12 identifier];
                  *(_DWORD *)buf = 138543362;
                  id v84 = v29;
                  _os_log_impl((void *)&_mh_execute_header, v28, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed audiobook parent identifier=%{public}@", buf, 0xCu);
                }
                __int16 v30 = [*(id *)(a1 + 40) assetsWithDownloadingChildAssets];
                __int16 v31 = [v12 identifier];
                [v30 removeObjectForKey:v31];

                id v32 = [*(id *)(a1 + 40) downloadingAssets];
                long long v33 = [v12 identifier];
                __int16 v34 = [v32 objectForKey:v33];

                if (v34)
                {
                  id v35 = [*(id *)(a1 + 40) downloadingAssets];
                  long long v36 = [v12 identifier];
                  [v35 removeObjectForKey:v36];

                  [v57 addObject:v12];
                }
              }
            }

            goto LABEL_36;
          }
          id v9 = BCBookDownloadLog();
          if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
          {
            *(_DWORD *)buf = 138543362;
            id v84 = v5;
            _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] download completed untracked identifier=%{public}@", buf, 0xCu);
          }

          id v10 = [BKBLDownloadAsset alloc];
          id v11 = [*(id *)(a1 + 40) identifier];
          uint64_t v7 = [(BKBLDownloadAsset *)v10 initWithBLDownloadStatus:v4 dataSourceIdentifier:v11 isParent:0];

          [v59 addObject:v7];
        }
        else
        {
          uint64_t v7 = BCBookDownloadLog();
          if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
            sub_1007EF7E4(&v77, v78, v7);
          }
        }
LABEL_36:
      }
      id v1 = [obj countByEnumeratingWithState:&v79 objects:v89 count:16];
    }
    while (v1);
  }

  if ([v58 count])
  {
    uint64_t v87 = BKLibraryDownloadStatusKey;
    id v88 = v58;
    long long v37 = +[NSDictionary dictionaryWithObjects:&v88 forKeys:&v87 count:1];
    long long v38 = +[NSNotificationCenter defaultCenter];
    [v38 postNotificationName:BKLibraryDownloadStatusNotification object:*(void *)(a1 + 40) userInfo:v37];
  }
  [*(id *)(a1 + 40) setDownloadQueueGeneration:[*(id *)(a1 + 40) downloadQueueGeneration] + 1];
  uint64_t v39 = [*(id *)(a1 + 40) generationChangeHandler];
  if (v39) {
    ((void (**)(void, id))v39)[2](v39, [*(id *)(a1 + 40) downloadQueueGeneration]);
  }

  v74[0] = _NSConcreteStackBlock;
  v74[1] = 3221225472;
  v74[2] = sub_1001D4B2C;
  v74[3] = &unk_100A4AB08;
  id v40 = v57;
  uint64_t v41 = *(void *)(a1 + 40);
  id v75 = v40;
  uint64_t v76 = v41;
  id v42 = objc_retainBlock(v74);
  objc_initWeak(&location, *(id *)(a1 + 40));
  if ([v40 count])
  {
    id v43 = BCBookDownloadLog();
    if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412546;
      id v84 = v40;
      __int16 v85 = 2112;
      long long v86 = v56;
      _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] Notifying finished for (tracked) assets: %@, (supplemental) assets: %@", buf, 0x16u);
    }

    id v44 = [v40 count];
    id v45 = [v40 count];
    long long v46 = [*(id *)(a1 + 40) iTunesSyncedBooksPlistCleaner];

    if (v46)
    {
      uint64_t v47 = [*(id *)(a1 + 40) iTunesSyncedBooksPlistCleaner];
      v68[0] = _NSConcreteStackBlock;
      v68[1] = 3221225472;
      v68[2] = sub_1001D4E7C;
      v68[3] = &unk_100A4AB30;
      long long v70 = v42;
      objc_copyWeak(v71, &location);
      BOOL v72 = v44 != 0;
      v71[1] = v45;
      id v69 = v56;
      [v47 removePlistAssets:v40 completion:v68];

      objc_destroyWeak(v71);
      id v48 = v70;
    }
    else
    {
      BOOL v49 = v44 != 0;
      id v48 = objc_loadWeakRetained(&location);
      ((void (*)(void *, id, BOOL, id, void *, void))v42[2])(v42, v48, v49, v45, v56, 0);
    }
  }
  if ([v59 count])
  {
    id v50 = BCBookDownloadLog();
    if (os_log_type_enabled(v50, OS_LOG_TYPE_DEFAULT))
    {
      *(_DWORD *)buf = 138412290;
      id v84 = v59;
      _os_log_impl((void *)&_mh_execute_header, v50, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] Notifying finished for (untracked) assets for assets: %@", buf, 0xCu);
    }

    id v51 = [v59 count];
    dispatch_semaphore_t v52 = [*(id *)(a1 + 40) iTunesSyncedBooksPlistCleaner];

    if (v52)
    {
      __int16 v53 = [*(id *)(a1 + 40) iTunesSyncedBooksPlistCleaner];
      v63[0] = _NSConcreteStackBlock;
      v63[1] = 3221225472;
      v63[2] = sub_1001D4F04;
      v63[3] = &unk_100A4AB30;
      uint64_t v65 = v42;
      objc_copyWeak(v66, &location);
      char v67 = 0;
      v66[1] = v51;
      id v64 = v56;
      [v53 removePlistAssets:v59 completion:v63];

      objc_destroyWeak(v66);
      id v54 = v65;
    }
    else
    {
      id v54 = objc_loadWeakRetained(&location);
      ((void (*)(void *, id, void, id, void *, void))v42[2])(v42, v54, 0, v51, v56, 0);
    }
  }
  objc_destroyWeak(&location);
}

void sub_1001D4AE0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,uint64_t a37,uint64_t a38,uint64_t a39,id location)
{
  objc_destroyWeak(v40);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001D4B2C(uint64_t a1, void *a2, int a3, uint64_t a4, void *a5, void *a6)
{
  objc_initWeak(&location, a2);
  id v11 = a5;
  id v12 = a6;
  if (v12)
  {
    uint64_t v13 = BCBookDownloadLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_ERROR)) {
      sub_1007EF824((uint64_t)v12, a4, v13);
    }
  }
  id v14 = objc_loadWeakRetained(&location);
  long long v15 = v14;
  if (v14)
  {
    uint64_t v16 = [v14 reloadCounterpartHandler];
    int v17 = (void *)v16;
    if (v16) {
      (*(void (**)(uint64_t))(v16 + 16))(v16);
    }

    if ([v11 count])
    {
      uint64_t v18 = [v15 didLoadSupplementalAssetHandler];
      uint64_t v19 = (void *)v18;
      if (v18) {
        (*(void (**)(uint64_t, id))(v18 + 16))(v18, v11);
      }
    }
    if (a3)
    {
      uint8_t v20 = [v15 dispatchQueue];
      v23[0] = _NSConcreteStackBlock;
      v23[1] = 3221225472;
      v23[2] = sub_1001D4CFC;
      _OWORD v23[3] = &unk_100A43FB8;
      objc_copyWeak(&v26, &location);
      id v21 = *(id *)(a1 + 32);
      uint64_t v22 = *(void *)(a1 + 40);
      id v24 = v21;
      uint64_t v25 = v22;
      dispatch_async(v20, v23);

      objc_destroyWeak(&v26);
    }
  }

  objc_destroyWeak(&location);
}

void sub_1001D4CDC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
}

void sub_1001D4CFC(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  id v3 = BCBookDownloadLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    id v4 = a1[4];
    *(_DWORD *)buf = 138412290;
    id v17 = v4;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "[BKLibraryDataSourceBLDownload] removed assets: %@", buf, 0xCu);
  }

  id v5 = [WeakRetained libraryManager];
  [v5 libraryDataSource:WeakRetained removedAssets:a1[4]];

  long long v13 = 0u;
  long long v14 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v6 = a1[4];
  id v7 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
  if (v7)
  {
    id v8 = v7;
    uint64_t v9 = *(void *)v12;
    do
    {
      id v10 = 0;
      do
      {
        if (*(void *)v12 != v9) {
          objc_enumerationMutation(v6);
        }
        [a1[5] _removeReportingItemFromCoverCache:*(void *)(*((void *)&v11 + 1) + 8 * (void)v10) v11];
        id v10 = (char *)v10 + 1;
      }
      while (v8 != v10);
      id v8 = [v6 countByEnumeratingWithState:&v11 objects:v15 count:16];
    }
    while (v8);
  }
}

void sub_1001D4E7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = (id *)(a1 + 48);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  (*(void (**)(uint64_t, id, void, void, void, id))(v4 + 16))(v4, WeakRetained, *(unsigned __int8 *)(a1 + 64), *(void *)(a1 + 56), *(void *)(a1 + 32), v6);
}

void sub_1001D4F04(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v4 = *(void *)(a1 + 40);
  id v5 = (id *)(a1 + 48);
  id v6 = a3;
  id WeakRetained = objc_loadWeakRetained(v5);
  (*(void (**)(uint64_t, id, void, void, void, id))(v4 + 16))(v4, WeakRetained, *(unsigned __int8 *)(a1 + 64), *(void *)(a1 + 56), *(void *)(a1 + 32), v6);
}

void sub_1001D5040(uint64_t a1)
{
  long long v2 = +[NSMutableArray array];
  id v3 = [*(id *)(a1 + 32) downloadingAssets];
  id v4 = [v3 copy];
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1001D5148;
  v8[3] = &unk_100A4AB58;
  id v5 = v2;
  id v9 = v5;
  [v4 enumerateKeysAndObjectsUsingBlock:v8];

  id v6 = (void (**)(id, id, void))objc_retainBlock(*(id *)(a1 + 40));
  if (v6)
  {
    id v7 = [v5 copy];
    v6[2](v6, v7, 0);
  }
}

void sub_1001D5148(uint64_t a1, void *a2, void *a3)
{
  id v6 = a2;
  id v5 = [a3 parent];

  if (!v5) {
    [*(id *)(a1 + 32) addObject:v6];
  }
}

void sub_1001D52D8(id *a1)
{
  long long v12 = 0u;
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  id v2 = a1[4];
  id v3 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v13;
    do
    {
      id v6 = 0;
      do
      {
        if (*(void *)v13 != v5) {
          objc_enumerationMutation(v2);
        }
        uint64_t v7 = *(void *)(*((void *)&v12 + 1) + 8 * (void)v6);
        id v8 = [a1[5] downloadingAssets];
        id v9 = [v8 objectForKeyedSubscript:v7];

        if (v9) {
          [a1[6] addObject:v9];
        }

        id v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v12 objects:v16 count:16];
    }
    while (v4);
  }

  kdebug_trace();
  id v10 = objc_retainBlock(a1[7]);
  long long v11 = v10;
  if (v10) {
    (*((void (**)(id, id, void))v10 + 2))(v10, a1[6], 0);
  }
}

void sub_1001D55F0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) downloadingAssets];
  id v6 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v6)
  {
    [*(id *)(a1 + 32) resumeDownloadForAssetID:*(void *)(a1 + 40)];
    id v3 = 0;
  }
  else
  {
    id v3 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorInvalidAssetError userInfo:0];
  }
  id v4 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v5 = v4;
  if (v4) {
    (*((void (**)(id, id, uint64_t, void *))v4 + 2))(v4, v6, 1, v3);
  }
}

void sub_1001D579C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) downloadingAssets];
  id v6 = [v2 objectForKey:*(void *)(a1 + 40)];

  if (v6)
  {
    id v3 = 0;
  }
  else
  {
    id v3 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorInvalidAssetError userInfo:0];
  }
  id v4 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v5 = v4;
  if (v4) {
    (*((void (**)(id, id, void *))v4 + 2))(v4, v6, v3);
  }
}

id sub_1001D7384()
{
  if (qword_100B4A600 != -1) {
    dispatch_once(&qword_100B4A600, &stru_100A4AB98);
  }
  v0 = (void *)qword_100B4A5F8;

  return v0;
}

void sub_1001D73D8(id a1)
{
  os_log_t v1 = os_log_create("com.apple.iBooks", "BKMainFlowController");
  id v2 = (void *)qword_100B4A5F8;
  qword_100B4A5F8 = (uint64_t)v1;
}

void sub_1001D7694(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, id location)
{
  objc_destroyWeak(v16);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001D76B8(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained setAnimator:0];

  id v4 = objc_loadWeakRetained(v2);
  [v4 setTransitionPreviousTopViewController:0];

  uint64_t v5 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v5)
  {
    id v6 = v5;
    v5[2]();
    uint64_t v5 = v6;
  }
}

uint64_t sub_1001D78B0(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = [a2 isCancelled] ^ 1;
  id v4 = *(uint64_t (**)(uint64_t, uint64_t))(v2 + 16);

  return v4(v2, v3);
}

id sub_1001D79C8(uint64_t a1, void *a2)
{
  return [a2 popToRootViewControllerAnimated:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1001D7A04(id a1, UINavigationController *a2)
{
  id v2 = [(UINavigationController *)a2 popToRootViewControllerAnimated:1];
}

void sub_1001D7F04(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 56));
  uint64_t v3 = v2;
  if (v2) {
    (*((void (**)(id))v2 + 2))(v2);
  }

  [*(id *)(a1 + 32) presenterVisibleViewControllerDidChangeAnimated:*(unsigned __int8 *)(a1 + 64)];
  if (_AXSAutomationEnabled())
  {
    long long v13 = 0u;
    long long v14 = 0u;
    long long v11 = 0u;
    long long v12 = 0u;
    id v4 = [*(id *)(a1 + 40) childViewControllers];
    id v5 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
    if (v5)
    {
      id v6 = v5;
      uint64_t v7 = *(void *)v12;
      do
      {
        id v8 = 0;
        do
        {
          if (*(void *)v12 != v7) {
            objc_enumerationMutation(v4);
          }
          id v9 = *(void **)(*((void *)&v11 + 1) + 8 * (void)v8);
          if (v9 != *(void **)(a1 + 48))
          {
            id v10 = [v9 view];
            [v10 setAccessibilityElementsHidden:1];
          }
          id v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v4 countByEnumeratingWithState:&v11 objects:v15 count:16];
      }
      while (v6);
    }
  }
}

void sub_1001D8058(uint64_t a1)
{
  [*(id *)(a1 + 32) presenterVisibleViewControllerWillChangeAnimated:*(unsigned __int8 *)(a1 + 64)];
  objc_opt_class();
  uint64_t v25 = &OBJC_PROTOCOL___BKPalettePresentationTransitioning;
  id v2 = BUClassAndProtocolCast();
  uint64_t v3 = v2;
  if (v2
    && objc_msgSend(v2, "assetPresenterIsAudiobook", &OBJC_PROTOCOL___BKPalettePresentationTransitioning))
  {
    id v4 = [*(id *)(a1 + 32) rootBarCoordinator];
    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_1001D8524;
    v36[3] = &unk_100A442B8;
    id v37 = *(id *)(a1 + 56);
    [v4 presentFullPlayer:v3 completion:v36];

    id v5 = v37;
  }
  else
  {
    id v6 = +[NSUserDefaults standardUserDefaults];
    unsigned int v7 = [v6 BOOLForKey:@"BKBookOpenAnimatorRedViewFallbackEnabled"];

    id v8 = [v3 openOptions];
    id v9 = [v8 objectForKeyedSubscript:@"BKBookPresentWithoutAnimations"];
    unsigned __int8 v10 = [v9 BOOLValue];

    long long v11 = *(void **)(a1 + 32);
    long long v12 = [v3 assetPresenterAssetID];
    id v5 = [v11 _bookWithAssetPermanentOrTemporaryAssetID:v12];

    if ((v10 & 1) == 0
      && _os_feature_enabled_impl()
      && [v5 isLocal]
      && (([*(id *)(a1 + 32) _coverViewForPresenter:*(void *)(a1 + 48) assetPresenter:v3 includePresented:1], (long long v13 = objc_claimAutoreleasedReturnValue()) != 0)? (v14 = 1): (v14 = v7), v13, v14 == 1))
    {
      objc_initWeak(&location, *(id *)(a1 + 32));
      objc_initWeak(&from, v3);
      long long v15 = sub_1001D7384();
      if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "#swipeToDismiss - Setting up preferred transition.", buf, 2u);
      }

      v28[0] = _NSConcreteStackBlock;
      v28[1] = 3221225472;
      v28[2] = sub_1001D8534;
      _OWORD v28[3] = &unk_100A4AC98;
      objc_copyWeak(&v30, &location);
      id v29 = *(id *)(a1 + 48);
      objc_copyWeak(&v31, &from);
      char v32 = v7;
      uint64_t v16 = +[_UIViewControllerTransition zoomWithSourceViewProvider:v28];
      id v17 = +[UIBlurEffect effectWithStyle:16];
      long long v38 = v17;
      uint64_t v18 = +[NSArray arrayWithObjects:&v38 count:1];
      uint64_t v19 = [v16 _options];
      [v19 setDimmingVisualEffects:v18];

      [*(id *)(a1 + 40) _setPreferredTransition:v16];
      objc_destroyWeak(&v31);

      objc_destroyWeak(&v30);
      objc_destroyWeak(&from);
      objc_destroyWeak(&location);
    }
    else
    {
      objc_opt_class();
      uint8_t v20 = BUDynamicCast();
      [v20 setUseLegacyAnimation:1];
      id v21 = sub_1001D7384();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_DEFAULT))
      {
        LOWORD(location) = 0;
        _os_log_impl((void *)&_mh_execute_header, v21, OS_LOG_TYPE_DEFAULT, "#swipeToDismiss - Using LegacyAnimation", (uint8_t *)&location, 2u);
      }
    }
    uint64_t v23 = *(void *)(a1 + 40);
    uint64_t v22 = *(void **)(a1 + 48);
    uint64_t v24 = *(unsigned __int8 *)(a1 + 64);
    v26[0] = _NSConcreteStackBlock;
    v26[1] = 3221225472;
    v26[2] = sub_1001D8734;
    v26[3] = &unk_100A442B8;
    id v27 = *(id *)(a1 + 56);
    [v22 presentViewController:v23 animated:v24 completion:v26];
  }
}

void sub_1001D84EC(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,id location,id a25)
{
  objc_destroyWeak(v26);
  objc_destroyWeak(v25);
  objc_destroyWeak(&location);
  objc_destroyWeak(&a25);
  _Unwind_Resume(a1);
}

uint64_t sub_1001D8524(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

id sub_1001D8534(uint64_t a1)
{
  id v2 = (id *)(a1 + 40);
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  uint64_t v4 = *(void *)(a1 + 32);
  id v5 = objc_loadWeakRetained((id *)(a1 + 48));
  id v6 = [WeakRetained _coverViewForPresenter:v4 assetPresenter:v5 includePresented:1];

  if (!v6)
  {
    id v7 = objc_loadWeakRetained(v2);
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = objc_loadWeakRetained((id *)(a1 + 48));
    id v6 = [v7 _coverViewForPresenter:v8 assetPresenter:v9 includePresented:0];

    if (!v6)
    {
      if (*(unsigned char *)(a1 + 56))
      {
        id v10 = [objc_alloc((Class)UIView) initWithFrame:0.0, 0.0, 100.0, 100.0];
        long long v11 = +[UIColor redColor];
        [v10 setBackgroundColor:v11];

        long long v12 = [*(id *)(a1 + 32) view];
        [v12 addSubview:v10];

        id v13 = v10;
        dispatch_time_t v14 = dispatch_time(0, 1000000000);
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001D872C;
        block[3] = &unk_100A43D60;
        id v20 = v13;
        id v6 = v13;
        dispatch_after(v14, (dispatch_queue_t)&_dispatch_main_q, block);
      }
      else
      {
        id v6 = 0;
      }
    }
  }
  long long v15 = [v6 window];
  if (v15) {
    uint64_t v16 = v6;
  }
  else {
    uint64_t v16 = 0;
  }
  id v17 = v16;

  return v17;
}

id sub_1001D872C(uint64_t a1)
{
  return [*(id *)(a1 + 32) removeFromSuperview];
}

uint64_t sub_1001D8734(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001D899C(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(unsigned __int8 *)(a1 + 56);
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001D8A48;
  v5[3] = &unk_100A44B70;
  id v4 = *(id *)(a1 + 48);
  void v5[4] = *(void *)(a1 + 40);
  id v6 = v4;
  char v7 = *(unsigned char *)(a1 + 56);
  [v2 dismissViewControllerAnimated:v3 completion:v5];
}

id sub_1001D8A48(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v3 = v2;
  if (v2) {
    (*((void (**)(id))v2 + 2))(v2);
  }

  id v4 = *(void **)(a1 + 32);
  uint64_t v5 = *(unsigned __int8 *)(a1 + 48);

  return [v4 presenterVisibleViewControllerDidChangeAnimated:v5];
}

id sub_1001D8BBC(uint64_t a1)
{
  return [*(id *)(a1 + 32) presenterDismissAllModalControllersAnimated:*(unsigned __int8 *)(a1 + 48) completion:*(void *)(a1 + 40)];
}

void sub_1001D8CF4(uint64_t a1)
{
  os_log_t v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    os_log_t v1 = v2;
  }
}

id sub_1001D8DC4(uint64_t a1, uint64_t a2)
{
  return [*(id *)(a1 + 32) addObject:a2];
}

id sub_1001D9440(uint64_t a1, void *a2)
{
  return [a2 popToRootViewControllerAnimated:*(unsigned __int8 *)(a1 + 32)];
}

id sub_1001D961C(uint64_t a1, void *a2)
{
  return [a2 popToRootViewControllerAnimated:*(unsigned __int8 *)(a1 + 32)];
}

id sub_1001D9EF8(uint64_t a1, uint64_t a2)
{
  id v4 = [*(id *)(a1 + 32) assetPresenterAssetViewController];
  if ([*(id *)(a1 + 40) isValid]) {
    BOOL v5 = v4 == 0;
  }
  else {
    BOOL v5 = 1;
  }
  if (!v5)
  {
    id v6 = [v4 asset];
    char v7 = +[BKBasePresentingViewController animatorForAsset:isCurrentBook:opening:largeCover:skipZoom:](BKAssetPresentingViewController, "animatorForAsset:isCurrentBook:opening:largeCover:skipZoom:", v6, a2, *(unsigned __int8 *)(a1 + 88), [*(id *)(a1 + 48) coverAnimationSourceUseLargeCover], 0);

    if (!v7) {
      goto LABEL_23;
    }
    goto LABEL_10;
  }
  if (!*(unsigned char *)(a1 + 88))
  {
    char v7 = 0;
    goto LABEL_23;
  }
  char v7 = +[BKBasePresentingViewController defaultAnimatorForOpening:1 skipReveal:1];
  if (v7)
  {
LABEL_10:
    if (objc_opt_respondsToSelector()) {
      id v8 = [*(id *)(a1 + 56) coverAnimationHostNeedsCrossfadeOnCloseCompletion];
    }
    else {
      id v8 = 0;
    }
    [v7 setCrossfadeOnCloseCompletion:v8];
    if (*(unsigned char *)(a1 + 88)) {
      [v4 setContentOpenAnimator:v7];
    }
    [*(id *)(a1 + 32) setAssetPresenterAnimator:v7];
    [v7 setCoverSource:*(void *)(a1 + 48)];
    v33[0] = _NSConcreteStackBlock;
    v33[1] = 3221225472;
    long long v33[2] = sub_1001DA264;
    _OWORD v33[3] = &unk_100A44268;
    id v9 = v4;
    id v34 = v9;
    [v7 setCleanupBlock:v33];
    id v10 = *(void **)(a1 + 64);
    long long v11 = [*(id *)(a1 + 32) assetPresenterAssetID];
    uint64_t v12 = *(void *)(a1 + 72);
    uint64_t v13 = *(void *)(a1 + 48);
    dispatch_time_t v14 = [*(id *)(a1 + 32) assetPresenterCoverImage];
    long long v15 = [v10 _coverImageForAssetID:v11 toViewController:v12 forAssetViewController:v9 source:v13 coverImage:v14];
    [v7 setCoverImage:v15];

    uint64_t v16 = [*(id *)(a1 + 32) assetPresenterCoverShadowImage];
    [v7 setCoverShadowImage:v16];

    id v17 = [v7 coverImage];

    if (v17)
    {
      uint64_t v18 = [v7 coverImage];
      [v18 size];
      double v20 = v19;
      double v22 = v21;

      if (v20 > 0.0 && v22 > 0.0) {
        [*(id *)(a1 + 32) setAssetPresenterCoverAspect:v22 / v20];
      }
    }
    uint64_t v24 = _NSConcreteStackBlock;
    uint64_t v25 = 3221225472;
    id v26 = sub_1001DA270;
    id v27 = &unk_100A4ACE8;
    uint64_t v28 = *(void *)(a1 + 64);
    id v29 = *(id *)(a1 + 48);
    char v32 = *(unsigned char *)(a1 + 88);
    id v30 = *(id *)(a1 + 80);
    id v31 = *(id *)(a1 + 72);
    [v7 setClosedCoverFrameBlock:&v24];
    [v7 setAssertions:0, v24, v25, v26, v27, v28];
    if (([*(id *)(a1 + 56) coverAnimationHostIsFullyVisible:*(void *)(a1 + 48)] & 1) == 0) {
      [*(id *)(a1 + 56) coverAnimationHostScrollToMakeVisible:*(void *)(a1 + 48)];
    }
  }
LABEL_23:

  return v7;
}

id sub_1001DA264(uint64_t a1)
{
  return [*(id *)(a1 + 32) setContentOpenAnimator:0];
}

double sub_1001DA270(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bookOpenAnimationHelper];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) bookOpenAnimationHelper];
    [v3 openAnimationSourceRect];
    double v5 = v4;
  }
  else
  {
    [*(id *)(a1 + 40) coverAnimationSourceInvalidateFrame];
    [*(id *)(a1 + 40) coverAnimationSourceFrame];
    double v5 = v6;
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    uint64_t v13 = 48;
    if (!*(unsigned char *)(a1 + 64)) {
      uint64_t v13 = 56;
    }
    id v3 = *(id *)(a1 + v13);
    dispatch_time_t v14 = [*(id *)(a1 + 40) coverAnimationSourceReferenceView];
    v20.origin.double x = CGRectZero.origin.x;
    v20.origin.double y = CGRectZero.origin.y;
    v20.size.double width = CGRectZero.size.width;
    v20.size.double height = CGRectZero.size.height;
    v19.origin.double x = v5;
    v19.origin.double y = v8;
    v19.size.double width = v10;
    v19.size.double height = v12;
    if (!CGRectEqualToRect(v19, v20))
    {
      long long v15 = [v3 view];

      if (v14 != v15)
      {
        uint64_t v16 = [v3 view];
        [v16 convertRect:v14 fromView:v5 toView:v8];
        double v5 = v17;
      }
    }
  }
  return v5;
}

void sub_1001DAFEC(uint64_t a1)
{
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001DB0E0;
  _OWORD v6[3] = &unk_100A44818;
  id v2 = *(void **)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v2;
  char v8 = *(unsigned char *)(a1 + 48);
  id v3 = objc_retainBlock(v6);
  double v4 = +[BURestrictionsProvider sharedInstance];
  if ([v4 isBookStoreAllowed])
  {
  }
  else
  {
    unsigned int v5 = [*(id *)(a1 + 32) _currentlySelectedTabIsStore];

    if (v5) {
      [*(id *)(a1 + 32) presenterSelectLibraryAllCollection];
    }
  }
  ((void (*)(void *))v3[2])(v3);
}

void sub_1001DB0E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) selectedNavigationController];
  id v3 = [v2 topViewController];
  double v4 = *(void **)(a1 + 40);

  unsigned int v5 = *(void **)(a1 + 32);
  if (v3 == v4)
  {
    if (([*(id *)(a1 + 32) _doesPreviousViewControllerSupportCurrentOrientation] & 1) == 0) {
      [*(id *)(a1 + 32) _forceOrientationToPortrait:0];
    }
    double v6 = *(void **)(a1 + 32);
    v9[0] = _NSConcreteStackBlock;
    v9[1] = 3221225472;
    void v9[2] = sub_1001DB22C;
    v9[3] = &unk_100A4AC08;
    char v10 = *(unsigned char *)(a1 + 48);
    [v6 _transition:v9 animator:0 completion:0];
  }
  else
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_1001DB254;
    void v7[3] = &unk_100A4AD38;
    id v8 = *(id *)(a1 + 40);
    [v5 _transition:v7 animator:0 completion:0];
  }
}

id sub_1001DB22C(uint64_t a1, void *a2)
{
  return [a2 popViewControllerAnimated:*(unsigned __int8 *)(a1 + 32)];
}

void sub_1001DB254(uint64_t a1, void *a2)
{
  id v7 = a2;
  id v3 = [v7 viewControllers];
  id v4 = [v3 indexOfObjectIdenticalTo:*(void *)(a1 + 32)];

  if (v4 != (id)0x7FFFFFFFFFFFFFFFLL)
  {
    unsigned int v5 = [v7 viewControllers];
    double v6 = [v5 subarrayWithRange:0, v4];
    [v7 setViewControllers:v6 animated:0];
  }
}

void sub_1001DB470(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v4 = sub_1001D7384();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1007EF988((uint64_t)v3, v4);
    }
  }
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  double v6 = v5;
  if (v5) {
    (*((void (**)(id, BOOL))v5 + 2))(v5, v3 == 0);
  }
}

void sub_1001DB994(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, id *location)
{
  objc_destroyWeak(location);
  objc_destroyWeak((id *)(v12 - 112));
  _Unwind_Resume(a1);
}

void sub_1001DB9BC(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained presenterUpdateReadingNowAssetVisibility:1 assetPresenter:*(void *)(a1 + 32)];
}

void sub_1001DBA10(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(void **)(a1 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001DBAA8;
  _OWORD v6[3] = &unk_100A4AD60;
  id v7 = v3;
  id v5 = v3;
  [v4 coverAnimationSourceCurrentBookWidgetPrepareImageWithCompletion:v6];
}

uint64_t sub_1001DBAA8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001DC070(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    unsigned int v4 = [WeakRetained testSequence];
    id v3 = v5;
    if (v4 == *(_DWORD *)(a1 + 48))
    {
      (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
      id v3 = v5;
    }
  }
}

void sub_1001DC2B8(id a1, PPTTestRunner *a2)
{
  id v2 = [(PPTTestRunner *)a2 testMachine];
  [v2 testFinished];
}

void sub_1001DC2FC(id a1, PPTTestRunner *a2)
{
  id v2 = [(PPTTestRunner *)a2 testMachine];
  [v2 handlerReceived];
}

void sub_1001DC340(id a1, PPTTestRunner *a2)
{
  id v2 = a2;
  id v3 = sub_10020FC30();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_INFO))
  {
    *(_WORD *)id v5 = 0;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_INFO, "TestRunner: Finished test", v5, 2u);
  }

  unsigned int v4 = [(PPTTestRunner *)v2 machine];

  [v4 testFinished];
}

id sub_1001DC3D0(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = *(void **)(a1 + 32);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1001DC484;
  v8[3] = &unk_100A4AE58;
  id v9 = v3;
  id v5 = v3;
  double v6 = [v4 createSafeBlock:v8];

  return v6;
}

void sub_1001DC484(uint64_t a1, void *a2)
{
  id v3 = a2;
  unsigned int v4 = [v3 testDelegate];
  id v5 = (objc_class *)objc_opt_class();
  double v6 = NSStringFromClass(v5);
  id v7 = +[NSString stringWithFormat:@"%@: %@", v6, *(void *)(a1 + 32)];
  [v3 setErrorMessage:v7];

  id v8 = sub_10020FC30();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_INFO))
  {
    uint64_t v9 = *(void *)(a1 + 32);
    *(_DWORD *)buf = 138543362;
    uint64_t v12 = v9;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_INFO, "TestRunner: Finished test with error: %{public}@", buf, 0xCu);
  }

  char v10 = [v3 machine];
  [v10 testError];
}

void sub_1001DD740(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 24));
  _Unwind_Resume(a1);
}

void sub_1001DD75C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v2 = WeakRetained;
  if (WeakRetained)
  {
    id v5 = WeakRetained;
    unsigned __int8 v3 = [WeakRetained contentLoaded];
    uint64_t v2 = v5;
    if ((v3 & 1) == 0)
    {
      [v5 setContentLoaded:1];
      unsigned int v4 = [v5 waitingForContentLoaded];
      uint64_t v2 = v5;
      if (v4)
      {
        [v5 setWaitingForContentLoaded:0];
        [v5 _performCrossFade];
        uint64_t v2 = v5;
      }
    }
  }
}

id sub_1001DDAD8(uint64_t a1)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001DDBA8;
  _OWORD v3[3] = &unk_100A43D60;
  uint64_t v4 = *(void *)(a1 + 32);
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001DDC08;
  v2[3] = &unk_100A44268;
  v2[4] = v4;
  return +[UIView animateWithDuration:0x20000 delay:v3 options:v2 animations:0.85 completion:0.0];
}

void sub_1001DDBA8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) fromViewController];
  os_log_t v1 = [v2 view];
  [v1 setAlpha:0.0];
}

id sub_1001DDC08(uint64_t a1)
{
  os_log_t v1 = *(void **)(*(void *)(a1 + 32) + 16);
  uint64_t v2 = [v1 transitionWasCancelled] ^ 1;

  return [v1 completeTransition:v2];
}

id sub_1001DDF18(uint64_t a1)
{
  double v1 = 1.0;
  if (!*(unsigned char *)(a1 + 40)) {
    double v1 = 0.0;
  }
  return [*(id *)(*(void *)(a1 + 32) + 40) setAlpha:v1];
}

void sub_1001DED54(uint64_t a1, void *a2)
{
  id v3 = a2;
  if (v3)
  {
    id v9 = v3;
    uint64_t v4 = [v3 assetReviewID];
    id v5 = +[BCAssetReview assetIDFromAssetReviewID:v4];

    double v6 = [*(id *)(a1 + 32) libraryAsset];
    id v7 = [v6 assetID];
    if (v5 == v7)
    {
      id v8 = [*(id *)(a1 + 32) assetReview];

      if (v8 == v9)
      {
LABEL_7:

        id v3 = v9;
        goto LABEL_8;
      }
      [*(id *)(a1 + 32) setAssetReview:v9];
      [*(id *)(a1 + 32) layoutIfNeeded];
      double v6 = [*(id *)(a1 + 40) collectionView];
      [v6 performBatchUpdates:&stru_100A4AEA0 completion:&stru_100A4AEC0];
    }
    else
    {
    }
    goto LABEL_7;
  }
LABEL_8:
}

void sub_1001DEE68(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  if (v6)
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    id v11[2] = sub_1001DEFEC;
    v11[3] = &unk_100A44610;
    id v12 = *(id *)(a1 + 32);
    id v13 = v5;
    id v14 = *(id *)(a1 + 40);
    id v15 = v6;
    id v7 = objc_retainBlock(v11);
    id v8 = objc_retainBlock(v7);
    if (v8)
    {
      if (+[NSThread isMainThread])
      {
        v8[2](v8);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001DF0D4;
        block[3] = &unk_100A442B8;
        char v10 = v8;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
  }
}

void sub_1001DEFEC(uint64_t a1)
{
  uint64_t v2 = BUProtocolCast();
  id v3 = *(void **)(a1 + 40);
  id v8 = v2;
  uint64_t v4 = [v2 libraryAsset];
  id v5 = [v4 assetID];
  if (v3 == v5)
  {
    id v6 = [*(id *)(a1 + 48) asset];
    id v7 = *(void **)(a1 + 56);

    if (v6 != v7)
    {
      if (objc_opt_respondsToSelector()) {
        [*(id *)(a1 + 48) setInitialAsset:*(void *)(a1 + 56)];
      }
      else {
        [*(id *)(a1 + 48) setAsset:*(void *)(a1 + 56)];
      }
      [*(id *)(a1 + 32) layoutIfNeeded];
    }
  }
  else
  {
  }
}

uint64_t sub_1001DF0D4(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001DFC18(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  if (v4 && os_log_type_enabled((os_log_t)&_os_log_default, OS_LOG_TYPE_ERROR)) {
    sub_1007EFA00(a1, (uint64_t)v4);
  }
}

void sub_1001E083C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) count];
  id v3 = [*(id *)(a1 + 40) count];
  id v4 = [*(id *)(a1 + 48) count];
  id v5 = [*(id *)(a1 + 56) count];
  if (*(unsigned char *)(a1 + 72)
    || (uint64_t v6 = (uint64_t)v2 + (void)v3 + (unint64_t)v5 + (void)v4, v6 > 40)
    || ([*(id *)(a1 + 64) collectionView],
        id v7 = objc_claimAutoreleasedReturnValue(),
        [v7 window],
        id v8 = objc_claimAutoreleasedReturnValue(),
        v8,
        v7,
        !v8))
  {
    id v12 = [*(id *)(a1 + 64) collectionView];
    [v12 reloadData];
  }
  else if (v6)
  {
    id v9 = [*(id *)(a1 + 64) collectionView];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1001E09DC;
    v13[3] = &unk_100A44358;
    id v10 = *(id *)(a1 + 32);
    uint64_t v11 = *(void *)(a1 + 64);
    id v14 = v10;
    uint64_t v15 = v11;
    id v16 = *(id *)(a1 + 40);
    id v17 = *(id *)(a1 + 48);
    id v18 = *(id *)(a1 + 56);
    [v9 performBatchUpdates:v13 completion:&stru_100A4AF30];
  }
}

void sub_1001E09DC(id *a1)
{
  if ([a1[4] count])
  {
    id v2 = [a1[5] collectionView];
    [v2 deleteSections:a1[4]];
  }
  if ([a1[6] count])
  {
    id v3 = [a1[5] collectionView];
    [v3 insertSections:a1[6]];
  }
  if ([a1[7] count])
  {
    id v4 = [a1[5] collectionView];
    [v4 deleteItemsAtIndexPaths:a1[7]];
  }
  if ([a1[8] count])
  {
    id v5 = [a1[5] collectionView];
    [v5 insertItemsAtIndexPaths:a1[8]];
  }
}

void sub_1001E0B78(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) collectionView];
  [v1 reloadData];
}

void sub_1001E0C60(uint64_t a1)
{
  uint64_t v1 = a1;
  id v2 = [*(id *)(a1 + 32) collectionView];
  id v3 = [v2 visibleCells];

  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v23;
    do
    {
      id v8 = 0;
      id v21 = v6;
      do
      {
        if (*(void *)v23 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v22 + 1) + 8 * (void)v8);
        id v10 = BUProtocolCast();
        uint64_t v11 = BUProtocolCast();
        id v12 = v11;
        if (v10) {
          BOOL v13 = v11 == 0;
        }
        else {
          BOOL v13 = 1;
        }
        if (!v13)
        {
          id v14 = [v11 libraryAsset];
          uint64_t v15 = [v14 assetID];

          if ([*(id *)(v1 + 40) containsObject:v15])
          {
            id v16 = [*(id *)(v1 + 32) booksDataSource];
            [v16 cachedResourceForAssetID:v15];
            uint64_t v17 = v7;
            uint64_t v18 = v1;
            CGRect v20 = v19 = v4;

            [v10 setAsset:v20];
            [v9 layoutIfNeeded];

            id v4 = v19;
            uint64_t v1 = v18;
            uint64_t v7 = v17;
          }

          id v6 = v21;
        }

        id v8 = (char *)v8 + 1;
      }
      while (v6 != v8);
      id v6 = [v4 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v6);
  }
}

void sub_1001E0F08(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) collectionView];
  [v1 reloadData];
}

void sub_1001E1020(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) collectionView];
  id v3 = [v2 visibleCells];

  long long v18 = 0u;
  long long v19 = 0u;
  long long v16 = 0u;
  long long v17 = 0u;
  id v4 = v3;
  id v5 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
  if (v5)
  {
    id v6 = v5;
    uint64_t v7 = *(void *)v17;
    do
    {
      for (uint64_t i = 0; i != v6; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v17 != v7) {
          objc_enumerationMutation(v4);
        }
        id v9 = *(void **)(*((void *)&v16 + 1) + 8 * i);
        id v10 = [v9 libraryAsset:v16];
        uint64_t v11 = *(void **)(a1 + 40);
        id v12 = [v10 assetID];
        LODWORD(v11) = [v11 containsObject:v12];

        if (v11)
        {
          BOOL v13 = [*(id *)(a1 + 32) booksDataSource];
          id v14 = [v10 assetID];
          uint64_t v15 = [v13 assetReviewForAssetID:v14];
          [v9 setAssetReview:v15];

          [v9 layoutIfNeeded];
        }
      }
      id v6 = [v4 countByEnumeratingWithState:&v16 objects:v20 count:16];
    }
    while (v6);
  }
}

void sub_1001E2C74(uint64_t a1)
{
  id v6 = [*(id *)(a1 + 32) seriesBooks];
  objc_opt_class();
  id v2 = [v6 anyObject];
  id v3 = BUDynamicCast();

  id v4 = [*(id *)(a1 + 40) priceManager];
  id v5 = [v6 valueForKey:@"storeID"];
  [v4 collectPricesForSeriesStoreIDs:v5 isAudiobookSeries:[v3 isAudiobook]];
}

void sub_1001E3D70(uint64_t a1)
{
  id v1 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    v1[2]();
    id v1 = v2;
  }
}

void sub_1001E3E7C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, ...)
{
  va_start(va, a7);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

uint64_t sub_1001E3E94(uint64_t result)
{
  *(unsigned char *)(*(void *)(*(void *)(result + 40) + 8) + 24) = *(void *)(*(void *)(result + 32) + 24) != 0;
  return result;
}

id sub_1001E5E4C(uint64_t a1)
{
  return [*(id *)(a1 + 32) layoutIfNeeded];
}

void sub_1001E5FF0(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001E6078;
  v2[3] = &unk_100A44120;
  id v1 = *(void **)(a1 + 40);
  v2[4] = *(void *)(a1 + 32);
  id v3 = v1;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

id sub_1001E6078(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setupBookshelfAnimationViewsWithCompletion:*(void *)(a1 + 40)];
}

id sub_1001E6084(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _setupBookshelfAnimationViewsWithCompletion:*(void *)(a1 + 40)];
}

void sub_1001E6130(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) bookshelfViewController];
  objc_opt_class();
  CGRect v20 = (void *)v2;
  id v3 = BUClassAndProtocolCast();
  id v21 = +[NSMutableArray array];
  id v4 = +[NSMutableArray array];
  +[CATransaction synchronize];
  long long v24 = 0u;
  long long v25 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  uint64_t v19 = a1;
  id v5 = [*(id *)(a1 + 32) bookshelfContentViews];
  id v6 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
  if (v6)
  {
    id v7 = v6;
    uint64_t v8 = *(void *)v23;
    do
    {
      for (uint64_t i = 0; i != v7; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v23 != v8) {
          objc_enumerationMutation(v5);
        }
        id v10 = *(void **)(*((void *)&v22 + 1) + 8 * i);
        if (v3) {
          unsigned int v11 = [v3 transitionViewIsSnapshottable:*(void *)(*((void *)&v22 + 1) + 8 * i)];
        }
        else {
          unsigned int v11 = 1;
        }
        id v12 = [v10 window];
        BOOL v13 = [v12 windowScene];

        if (v11 && [v13 activationState] != (id)2)
        {
          uint64_t v14 = [v10 snapshotViewAfterScreenUpdates:0];
          if (v14)
          {
            uint64_t v15 = (void *)v14;
            [v21 addObject:v14];
            [v10 center];
            [v15 setCenter:];
            long long v16 = [v10 superview];
            [v16 insertSubview:v15 belowSubview:v10];

            [v10 setAlpha:0.0];
            goto LABEL_15;
          }
          BCReportAssertionFailureWithMessage();
        }
        [v4 addObject:v10];
LABEL_15:
      }
      id v7 = [v5 countByEnumeratingWithState:&v22 objects:v26 count:16];
    }
    while (v7);
  }

  if ([*(id *)(v19 + 32) opening])
  {
    long long v17 = [*(id *)(v19 + 32) minifiedBarAnimator];
    long long v18 = [v17 minifiedBarAnimatorContainerView];

    if (v18) {
      [v4 addObject:v18];
    }
  }
  [*(id *)(v19 + 32) setBookshelfSnapshots:v21];
  [*(id *)(v19 + 32) setBookshelfLiveViews:v4];
  (*(void (**)(void))(*(void *)(v19 + 40) + 16))();
}

void sub_1001E66F8(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) bookViewController];
  id v3 = [v2 view];
  [v3 setAlpha:1.0];

  id v4 = [*(id *)(a1 + 32) bookshelfViewController];
  id v5 = [v4 view];
  [v5 setAlpha:1.0];

  id v6 = [*(id *)(a1 + 32) toViewController];
  id v7 = [v6 view];
  [v7 frame];
  CGRectMakeWithOriginSize();
  double v9 = v8;
  double v11 = v10;
  double v13 = v12;
  double v15 = v14;
  long long v16 = [*(id *)(a1 + 32) toViewController];
  long long v17 = [v16 view];
  [v17 setFrame:v9, v11, v13, v15];

  long long v32 = 0u;
  long long v33 = 0u;
  long long v30 = 0u;
  long long v31 = 0u;
  long long v18 = [*(id *)(a1 + 32) bookshelfContentViews];
  id v19 = [v18 countByEnumeratingWithState:&v30 objects:v34 count:16];
  if (v19)
  {
    id v20 = v19;
    uint64_t v21 = *(void *)v31;
    do
    {
      long long v22 = 0;
      do
      {
        if (*(void *)v31 != v21) {
          objc_enumerationMutation(v18);
        }
        [*(id *)(*((void *)&v30 + 1) + 8 * (void)v22) setAlpha:1.0];
        long long v22 = (char *)v22 + 1;
      }
      while (v20 != v22);
      id v20 = [v18 countByEnumeratingWithState:&v30 objects:v34 count:16];
    }
    while (v20);
  }

  long long v23 = [*(id *)(a1 + 32) fromViewController];
  long long v24 = BUProtocolCast();

  if (objc_opt_respondsToSelector()) {
    [v24 bookOpenRevealDidEnd];
  }
  long long v25 = [*(id *)(a1 + 32) toViewController];
  id v26 = [v25 im_ancestorViewControllerConformingToProtocol:&OBJC_PROTOCOL___BKAssetPresenting];
  id v27 = BUProtocolCast();

  if (objc_opt_respondsToSelector())
  {
    uint64_t v28 = [*(id *)(a1 + 32) containerView];
    [v27 transitionContextWillCompleteTransitionInContainerView:v28];
  }
  [*(id *)(a1 + 32) teardownViews:*(unsigned __int8 *)(a1 + 40)];
  id v29 = [*(id *)(a1 + 32) coverSource];
  [v29 coverAnimationSourceFinalize];
}

void sub_1001E69C8(uint64_t a1)
{
  if (!*(unsigned char *)(a1 + 40))
  {
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001E6AFC;
    v8[3] = &unk_100A43D60;
    void v8[4] = *(void *)(a1 + 32);
    +[UIView animateWithDuration:v8 animations:0.5];
  }
  uint64_t v2 = [*(id *)(a1 + 32) transitionContext];
  [v2 completeTransition:*(unsigned __int8 *)(a1 + 40)];

  if ([*(id *)(a1 + 32) opening])
  {
    id v3 = [*(id *)(a1 + 32) containerView];
    id v4 = [*(id *)(a1 + 32) fromViewController];
    id v5 = [v4 view];
    id v6 = [*(id *)(a1 + 32) toViewController];
    id v7 = [v6 view];
    [v3 insertSubview:v5 below:v7];
  }
}

void sub_1001E6AFC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) fromViewController];
  [v1 setNeedsWhitePointAdaptivityStyleUpdate];
}

id sub_1001E6D40(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _animateTransition];
}

void sub_1001E6ED8(uint64_t a1)
{
  if ([*(id *)(a1 + 32) interactive]) {
    BCReportAssertionFailureWithMessage();
  }
  if ([*(id *)(a1 + 32) opening])
  {
    *(unsigned char *)(*(void *)(a1 + 32) + 1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 1;
    uint64_t v2 = [*(id *)(a1 + 32) bookViewController];
    char v3 = objc_opt_respondsToSelector();

    if (v3)
    {
      id v4 = [*(id *)(a1 + 32) bookViewController];
      *(unsigned char *)(*(void *)(a1 + 32) + 1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = [v4 prefersStatusBarHiddenDuringTransition];
    }
    id v5 = [*(id *)(a1 + 32) toViewController];
    [v5 setNeedsStatusBarAppearanceUpdate];
  }
  [*(id *)(a1 + 32) animateNonInteractive];
  if ([*(id *)(a1 + 32) opening])
  {
    if ([*(id *)(a1 + 32) defersBookViewSetupForOpening])
    {
      id v6 = [*(id *)(a1 + 32) bookViewController];
      v8[0] = _NSConcreteStackBlock;
      v8[1] = 3221225472;
      void v8[2] = sub_1001E7054;
      v8[3] = &unk_100A43DD8;
      void v8[4] = *(void *)(a1 + 32);
      id v9 = v6;
      id v7 = v6;
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, v8);
    }
  }
}

uint64_t sub_1001E7054(uint64_t a1)
{
  [*(id *)(a1 + 32) _deferredSetupBookView];
  uint64_t result = objc_opt_respondsToSelector();
  if (result)
  {
    char v3 = *(void **)(a1 + 40);
    return (uint64_t)_[v3 bookOpenTransitionDidEnd];
  }
  return result;
}

void sub_1001E72A4(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) toViewController];
  [v1 minifiedBarAnimatePrepareTransitionToViewController:v2];
}

void sub_1001E72F8(uint64_t a1)
{
  double v2 = *(double *)(a1 + 48);
  if (v2 > 0.0)
  {
    double v3 = *(double *)(a1 + 56);
    v23[1] = 3221225472;
    v23[0] = _NSConcreteStackBlock;
    v23[2] = sub_1001E74C8;
    _OWORD v23[3] = &unk_100A43DD8;
    double v4 = v2 / v3;
    id v5 = *(id *)(a1 + 32);
    uint64_t v6 = *(void *)(a1 + 40);
    id v24 = v5;
    uint64_t v25 = v6;
    +[UIView addKeyframeWithRelativeStartTime:v23 relativeDuration:0.0 animations:v4];
  }
  double v7 = *(double *)(a1 + 64);
  if (v7 > 0.0)
  {
    double v8 = (*(double *)(a1 + 56) - v7 + -0.01) / *(double *)(a1 + 56);
    v20[0] = _NSConcreteStackBlock;
    v20[1] = 3221225472;
    void v20[2] = sub_1001E751C;
    _OWORD v20[3] = &unk_100A43DD8;
    id v9 = *(id *)(a1 + 32);
    uint64_t v10 = *(void *)(a1 + 40);
    id v21 = v9;
    uint64_t v22 = v10;
    +[UIView addKeyframeWithRelativeStartTime:v20 relativeDuration:v8 animations:0.01];
    double v11 = *(double *)(a1 + 56);
    double v12 = *(double *)(a1 + 64);
    double v13 = (v11 - v12) / v11;
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    void v17[2] = sub_1001E7570;
    v17[3] = &unk_100A43DD8;
    double v14 = v12 / v11;
    id v15 = *(id *)(a1 + 32);
    uint64_t v16 = *(void *)(a1 + 40);
    id v18 = v15;
    uint64_t v19 = v16;
    +[UIView addKeyframeWithRelativeStartTime:v17 relativeDuration:v13 animations:v14];
  }
}

void sub_1001E74C8(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) fromViewController];
  [v1 minifiedBarAnimatorAnimateHideIfNeededFromViewController:v2];
}

void sub_1001E751C(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) toViewController];
  [v1 minifiedBarAnimatorPrepareShowIfNeededToViewController:v2];
}

void sub_1001E7570(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  id v2 = [*(id *)(a1 + 40) toViewController];
  [v1 minifiedBarAnimatorAnimateShowIfNeededToViewController:v2 force:0];
}

id sub_1001E81B0(uint64_t a1)
{
  id v2 = [[BKApplicationShortcutController alloc] initWithLibrary:*(void *)(a1 + 32)];
  double v3 = (void *)qword_100B4A608;
  qword_100B4A608 = (uint64_t)v2;

  [(id)qword_100B4A608 setAnnotationProvider:*(void *)(a1 + 40)];
  double v4 = (void *)qword_100B4A608;

  return [v4 _updateShortcuts];
}

void sub_1001E83E0(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
}

void sub_1001E8408(uint64_t a1, void *a2)
{
  id v3 = a2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001E84C4;
  v5[3] = &unk_100A449F0;
  objc_copyWeak(&v7, (id *)(a1 + 32));
  id v6 = v3;
  id v4 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v5);

  objc_destroyWeak(&v7);
}

void sub_1001E84C4(uint64_t a1)
{
  id v2 = +[BKAppDelegate delegate];
  id v3 = [v2 appLaunchCoordinator];

  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001E85B8;
  _OWORD v4[3] = &unk_100A4ABC0;
  objc_copyWeak(&v6, (id *)(a1 + 40));
  id v5 = *(id *)(a1 + 32);
  [v3 appLaunchCoordinatorOnConditionMask:512 blockID:@"update shortcuts" performBlock:v4];

  objc_destroyWeak(&v6);
}

void sub_1001E85A4(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001E85B8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  id v3 = *(void **)(a1 + 32);
  id v6 = WeakRetained;
  if (WeakRetained)
  {
    [WeakRetained _performUpdateShortCutsWithCompletion:v3];
  }
  else
  {
    id v4 = objc_retainBlock(v3);
    id v5 = v4;
    if (v4) {
      (*((void (**)(id))v4 + 2))(v4);
    }
  }
}

void sub_1001E87BC(uint64_t a1, void *a2)
{
  id v3 = a2;
  uint64_t v20 = 0;
  id v21 = &v20;
  uint64_t v22 = 0x3032000000;
  long long v23 = sub_10000714C;
  id v24 = sub_100007274;
  id v25 = objc_alloc_init((Class)NSMutableArray);
  id v4 = [*(id *)(a1 + 32) annotationProvider];
  id v5 = [v4 newManagedObjectContext];

  if (v5)
  {
    id v6 = [*(id *)(a1 + 32) mainLibrary];
    id v7 = [v6 mostRecentlyOpenedBooks:3 inManagedObjectContext:v3];

    double v8 = [v7 valueForKey:@"objectID"];
    v17[0] = _NSConcreteStackBlock;
    v17[1] = 3221225472;
    void v17[2] = sub_1001E8A2C;
    v17[3] = &unk_100A4B060;
    id v18 = v5;
    uint64_t v19 = &v20;
    [v7 enumerateObjectsUsingBlock:v17];
  }
  else
  {
    double v8 = 0;
  }
  if ([(id)v21[5] count])
  {
    uint64_t v9 = v21[5];
    v13[0] = _NSConcreteStackBlock;
    v13[1] = 3221225472;
    void v13[2] = sub_1001E8C5C;
    v13[3] = &unk_100A4B178;
    uint64_t v10 = *(void *)(a1 + 32);
    uint64_t v16 = &v20;
    void v13[4] = v10;
    id v14 = v8;
    id v15 = *(id *)(a1 + 40);
    +[BCFutureValue futures:v9 notify:v13];
  }
  else
  {
    id v11 = objc_retainBlock(*(id *)(a1 + 40));
    double v12 = v11;
    if (v11) {
      (*((void (**)(id))v11 + 2))(v11);
    }
  }
  _Block_object_dispose(&v20, 8);
}

void sub_1001E8A0C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, ...)
{
  va_start(va, a15);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001E8A2C(uint64_t a1, void *a2)
{
  id v3 = a2;
  if ([v3 isValid])
  {
    id v4 = objc_opt_new();
    id v5 = +[NSMutableDictionary dictionary];
    id v6 = [v3 assetID];
    [v5 setObject:v6 forKeyedSubscript:off_100B21838];

    id v7 = [v3 title];
    if ((unint64_t)[v7 length] >= 0x81)
    {
      double v8 = +[NSBundle mainBundle];
      uint64_t v9 = [v8 localizedStringForKey:@"…" value:&stru_100A70340 table:0];

      uint64_t v10 = [v7 substringToIndex:128];
      uint64_t v11 = [v10 stringByAppendingString:v9];

      id v7 = (void *)v11;
    }
    [v5 setObject:v7 forKeyedSubscript:off_100B21840];
    uint64_t v12 = *(void *)(a1 + 32);
    id v15 = _NSConcreteStackBlock;
    uint64_t v16 = 3221225472;
    long long v17 = sub_1001E8C10;
    id v18 = &unk_100A4B038;
    id v19 = v5;
    id v20 = v4;
    id v13 = v4;
    id v14 = v5;
    +[BKBookProgressController progressStringForLibraryAsset:v3 annotationMOC:v12 completion:&v15];
    [*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) addObject:v13, v15, v16, v17, v18];
  }
}

id sub_1001E8C10(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setObject:a2 forKeyedSubscript:off_100B21848];
  uint64_t v4 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);

  return [v3 set:v4 error:0];
}

void sub_1001E8C5C(uint64_t a1)
{
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001E8D0C;
  _OWORD v4[3] = &unk_100A4B178;
  uint64_t v2 = *(void *)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  uint64_t v7 = *(void *)(a1 + 56);
  void v4[4] = v2;
  id v5 = v3;
  id v6 = *(id *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v4);
}

void sub_1001E8D0C(uint64_t a1)
{
  uint64_t v2 = [*(id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40) valueForKey:@"value"];
  id v3 = [v2 bu_arrayByRemovingNSNulls];

  uint64_t v4 = [*(id *)(a1 + 32) currentBookShortcuts];
  unsigned __int8 v5 = [v4 isEqualToArray:v3];

  if (v5)
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 48));
    id v7 = v6;
    if (v6) {
      (*((void (**)(id))v6 + 2))(v6);
    }
  }
  else
  {
    double v8 = +[NSMutableArray array];
    uint64_t v9 = [*(id *)(a1 + 32) mainLibrary];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _OWORD v12[2] = sub_1001E8E84;
    v12[3] = &unk_100A4B150;
    id v13 = *(id *)(a1 + 40);
    id v10 = v3;
    uint64_t v11 = *(void *)(a1 + 32);
    id v14 = v10;
    uint64_t v15 = v11;
    id v16 = v8;
    id v17 = *(id *)(a1 + 48);
    id v7 = v8;
    [v9 performBackgroundReadOnlyBlock:v12];
  }
}

void sub_1001E8E84(uint64_t a1, void *a2)
{
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_1001E8FF8;
  v15[3] = &unk_100A4B128;
  id v16 = a2;
  id v3 = *(void **)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  id v6 = *(void **)(a1 + 56);
  id v17 = v4;
  uint64_t v18 = v5;
  id v19 = v6;
  id v7 = v16;
  [v3 enumerateObjectsUsingBlock:v15];
  double v8 = *(void **)(a1 + 56);
  v11[0] = _NSConcreteStackBlock;
  v11[1] = 3221225472;
  id v11[2] = sub_1001E9664;
  v11[3] = &unk_100A45980;
  id v12 = v8;
  int8x16_t v10 = *(int8x16_t *)(a1 + 40);
  id v9 = (id)v10.i64[0];
  int8x16_t v13 = vextq_s8(v10, v10, 8uLL);
  id v14 = *(id *)(a1 + 64);
  +[BCFutureValue futures:v12 notify:v11];
}

void sub_1001E8FF8(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) existingObjectWithID:v3 error:0];
  if ([v4 isValid])
  {
    uint64_t v5 = [v4 assetID];

    if (v5)
    {
      v32[0] = 0;
      v32[1] = v32;
      void v32[2] = 0x3032000000;
      v32[3] = sub_10000714C;
      _OWORD v32[4] = sub_100007274;
      id v33 = 0;
      id v6 = *(void **)(a1 + 40);
      v29[0] = _NSConcreteStackBlock;
      v29[1] = 3221225472;
      v29[2] = sub_1001E930C;
      _OWORD v29[3] = &unk_100A4B088;
      id v7 = v4;
      id v30 = v7;
      long long v31 = v32;
      [v6 enumerateObjectsUsingBlock:v29];
      double v8 = objc_opt_new();
      CGSizeScaleToScreen();
      double v10 = v9;
      double v12 = v11;
      v27[0] = _NSConcreteStackBlock;
      v27[1] = 3221225472;
      v27[2] = sub_1001E93D8;
      void v27[3] = &unk_100A4B0B0;
      id v13 = v8;
      id v28 = v13;
      +[BKLibraryManager fetchImageForAsset:size:includeSpine:includeShadow:coverEffectsEnvironment:completion:](BKLibraryManager, "fetchImageForAsset:size:includeSpine:includeShadow:coverEffectsEnvironment:completion:", v7, 0, 0, 0, v27, v10, v12);
      id v14 = objc_opt_new();
      uint64_t v15 = [v7 title];
      id v16 = [v7 assetID];
      unsigned __int8 v17 = [v7 isAudiobook];
      v21[0] = _NSConcreteStackBlock;
      v21[1] = 3221225472;
      void v21[2] = sub_1001E9448;
      _OWORD v21[3] = &unk_100A4B100;
      void v21[4] = *(void *)(a1 + 48);
      unsigned __int8 v26 = v17;
      id v18 = v16;
      id v22 = v18;
      id v19 = v15;
      id v23 = v19;
      id v25 = v32;
      id v20 = v14;
      id v24 = v20;
      [v13 get:v21];
      [*(id *)(a1 + 56) addObject:v20];

      _Block_object_dispose(v32, 8);
    }
  }
}

void sub_1001E92DC(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001E930C(uint64_t a1, void *a2, uint64_t a3, unsigned char *a4)
{
  id v12 = a2;
  id v6 = [v12 objectForKeyedSubscript:off_100B21838];
  id v7 = [*(id *)(a1 + 32) assetID];
  unsigned int v8 = [v6 isEqualToString:v7];

  if (v8)
  {
    uint64_t v9 = [v12 objectForKeyedSubscript:off_100B21848];
    uint64_t v10 = *(void *)(*(void *)(a1 + 40) + 8);
    double v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;

    if (a4) {
      *a4 = 1;
    }
  }
}

void sub_1001E93D8(uint64_t a1, void *a2)
{
  uint64_t v2 = *(void **)(a1 + 32);
  +[UIImage imageWithCGImage:](UIImage, "imageWithCGImage:", [a2 CGImage]);
  id v3 = (id)objc_claimAutoreleasedReturnValue();
  [v2 set:v3 error:0];
}

void sub_1001E9448(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = *(NSObject **)(*(void *)(a1 + 32) + 40);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001E9540;
  block[3] = &unk_100A4B0D8;
  id v9 = v3;
  char v13 = *(unsigned char *)(a1 + 72);
  id v10 = *(id *)(a1 + 40);
  id v11 = *(id *)(a1 + 48);
  long long v7 = *(_OWORD *)(a1 + 56);
  id v5 = (id)v7;
  long long v12 = v7;
  id v6 = v3;
  dispatch_async(v4, block);
}

void sub_1001E9540(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (v2) {
    +[UIApplicationShortcutIcon iconWithCustomImage:v2 isTemplate:0];
  }
  else {
  id v6 = +[UIApplicationShortcutIcon iconWithTemplateImageName:@"PlaceholderNormal"];
  }
  id v3 = objc_opt_new();
  id v4 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 72)];
  [v3 setObject:v4 forKeyedSubscript:@"isAudiobook"];

  [v3 setObject:*(void *)(a1 + 40) forKeyedSubscript:@"assetID"];
  id v5 = [objc_alloc((Class)UIApplicationShortcutItem) initWithType:@"com.apple.iBooks.assetReading" localizedTitle:*(void *)(a1 + 48) localizedSubtitle:*(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40) icon:v6 userInfo:v3];
  [*(id *)(a1 + 56) set:v5 error:0];
}

void sub_1001E9664(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) valueForKey:@"value"];
  id v3 = [v2 bu_arrayByRemovingNSNulls];

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001E9754;
  block[3] = &unk_100A43D60;
  id v4 = v3;
  id v8 = v4;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
  [*(id *)(a1 + 40) setCurrentBookShortcuts:*(void *)(a1 + 48)];
  id v5 = objc_retainBlock(*(id *)(a1 + 56));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id))v5 + 2))(v5);
  }
}

void sub_1001E9754(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  [v2 setShortcutItems:*(void *)(a1 + 32)];
}

id sub_1001E9A80()
{
  if (qword_100B4A620 != -1) {
    dispatch_once(&qword_100B4A620, &stru_100A4B198);
  }
  v0 = (void *)qword_100B4A618;

  return v0;
}

void sub_1001E9AD4(id a1)
{
  os_log_t v1 = os_log_create("com.apple.iBooks", "BKAudiobooks.NowPlaying");
  id v2 = (void *)qword_100B4A618;
  qword_100B4A618 = (uint64_t)v1;
}

uint64_t sub_1001E9C8C(uint64_t result)
{
  uint64_t v1 = *(void *)(result + 32);
  if (*(_DWORD *)(v1 + 8) == *(_DWORD *)(result + 48) && *(_DWORD *)(v1 + 24) == *(_DWORD *)(result + 52)) {
    return (*(uint64_t (**)(void))(*(void *)(result + 40) + 16))();
  }
  return result;
}

void sub_1001E9DA0(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  id v3 = [WeakRetained testDelegate];
  [v3 stopTestWithTimeout];

  id v4 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
  id v5 = [v4 testDelegate];
  [v5 terminate];

  id v6 = [*(id *)(a1 + 32) onTestTimeout];

  if (v6)
  {
    long long v7 = [*(id *)(a1 + 32) onTestTimeout];
    v7[2]();
  }
  *(_DWORD *)(*(void *)(a1 + 32) + 8) = 0;
}

void sub_1001E9EF8(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (!*(_DWORD *)(v1 + 8))
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 16));
    id v4 = [WeakRetained testDelegate];
    unsigned int v5 = [v4 hasHandler];

    id v6 = *(_DWORD **)(a1 + 32);
    if (v5)
    {
      [v6 startTest];
    }
    else
    {
      v6[2] = 1;
      long long v7 = *(id **)(a1 + 32);
      id v8 = objc_loadWeakRetained(v7 + 2);
      id v9 = [v8 testDelegate];
      id v10 = [v9 handlerTimeout];
      v11[0] = _NSConcreteStackBlock;
      v11[1] = 3221225472;
      id v11[2] = sub_1001EA014;
      v11[3] = &unk_100A43D60;
      void v11[4] = *(void *)(a1 + 32);
      [v7 sleep:v10 completion:v11];
    }
  }
}

void sub_1001EA014(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) onHandlerTimeout];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) onHandlerTimeout];
    v3[2]();
  }
  *(_DWORD *)(*(void *)(a1 + 32) + 8) = 0;
}

_DWORD *sub_1001EA114(uint64_t a1)
{
  uint64_t result = *(_DWORD **)(a1 + 32);
  if (result[2] == 1) {
    return [result startTest];
  }
  return result;
}

void sub_1001EA1CC(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  if (*(_DWORD *)(v1 + 8) == 2)
  {
    id WeakRetained = objc_loadWeakRetained((id *)(v1 + 16));
    id v4 = [WeakRetained testDelegate];
    [v4 terminate];

    id v5 = objc_loadWeakRetained((id *)(*(void *)(a1 + 32) + 16));
    id v6 = [v5 testDelegate];
    unsigned int v7 = [v6 didTestFail];

    id v8 = *(void **)(a1 + 32);
    if (v7)
    {
      id v9 = [v8 onTestError];

      if (v9)
      {
        uint64_t v10 = [*(id *)(a1 + 32) onTestError];
LABEL_7:
        long long v12 = (void *)v10;
        (*(void (**)(void))(v10 + 16))();
      }
    }
    else
    {
      id v11 = [v8 onTestFinished];

      if (v11)
      {
        uint64_t v10 = [*(id *)(a1 + 32) onTestFinished];
        goto LABEL_7;
      }
    }
    *(_DWORD *)(*(void *)(a1 + 32) + 8) = 0;
  }
}

void sub_1001EA524(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, id location)
{
  objc_destroyWeak(v18);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001EA54C(uint64_t a1, void *a2)
{
  id v8 = a2;
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 56));
  if (WeakRetained)
  {
    id v4 = +[BKContextMenuProvider sharedProvider];
    id v5 = [WeakRetained bookshelfCVC];
    id v6 = [WeakRetained _dataModelForLibraryAsset:*(void *)(a1 + 32) fromSourceView:*(void *)(a1 + 40) inCollection:*(void *)(a1 + 48)];
    unsigned int v7 = [v4 menuElementsForViewController:v5 dataModel:v6];

    v8[2](v8, v7);
  }
  else
  {
    v8[2](v8, &__NSArray0__struct);
  }
}

void sub_1001EAD34(uint64_t a1, uint64_t a2)
{
  id v3 = [*(id *)(a1 + 32) libraryMutableAssetWithAssetID:*(void *)(a1 + 40) inManagedObjectContext:a2];
  uint64_t v21 = BKLibraryAssetMarkedLocation;
  uint64_t v22 = BALocationTypeFromLibraryFinish;
  id v4 = +[NSDictionary dictionaryWithObjects:&v22 forKeys:&v21 count:1];
  [v3 setFinishedStateUserSetsFinished:0 userInfo:v4];

  uint64_t v6 = *(void *)(a1 + 40);
  id v5 = *(void **)(a1 + 48);
  unsigned int v7 = [v3 dateFinished];
  [v5 willMarkAsset:v6 finished:1 finishedDate:v7];

  if ([*(id *)(a1 + 56) isOwned])
  {
    id v8 = [*(id *)(a1 + 56) storeID];
    if ([v8 length]) {
      uint64_t v9 = 1;
    }
    else {
      uint64_t v9 = 2;
    }
  }
  else
  {
    uint64_t v9 = 0;
  }
  id v10 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)[*(id *)(a1 + 56) contentType]);
  id v11 = +[BAEventReporter sharedReporter];
  id v12 = [v11 seriesTypeForContentID:*(void *)(a1 + 40)];

  if ([v3 isAudiobook])
  {
    char v13 = [v3 hasRACSupport];
    if ([v13 BOOLValue]) {
      uint64_t v14 = 1;
    }
    else {
      uint64_t v14 = 2;
    }
  }
  else
  {
    uint64_t v14 = 0;
  }
  uint64_t v15 = +[BAEventReporter sharedReporter];
  uint64_t v16 = *(void *)(a1 + 40);
  unsigned __int8 v17 = [v3 supplementalContentAssets];
  id v18 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v17 count]);
  [v15 emitMarkAsFinishedEventWithTracker:0 contentID:v16 contentAcquisitionType:v9 contentType:v10 supplementalContentCount:v18 seriesType:v12 productionType:v14];

  id v19 = *(void **)(a1 + 32);
  v20[0] = _NSConcreteStackBlock;
  v20[1] = 3221225472;
  void v20[2] = sub_1001EAFC0;
  _OWORD v20[3] = &unk_100A44840;
  void v20[4] = *(void *)(a1 + 64);
  [v19 performBlockOnWorkerQueue:v20];
}

void sub_1001EAFC0(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001EB038;
  block[3] = &unk_100A43D60;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001EB038(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bookshelfCVC];
  uint64_t v1 = [v2 layout];
  [v1 invalidateLayout];
}

void sub_1001EB20C(uint64_t a1, char a2)
{
  if (a2)
  {
    id v3 = *(void **)(a1 + 40);
    [v3 _showActionNotAvailableBecauseContentNotAvailableAlert];
  }
  else
  {
    id v5 = +[BSUIStoreServices sharedInstance];
    id v4 = [*(id *)(a1 + 32) storeID];
    [v5 showWriteAReviewForStoreId:v4 transaction:0];
  }
}

uint64_t sub_1001EB3A4(uint64_t a1, char a2)
{
  if (a2)
  {
    [*(id *)(a1 + 48) _showActionNotAvailableBecauseContentNotAvailableAlert];
  }
  else
  {
    id v3 = +[NSNumber numberWithDouble:*(double *)(a1 + 64)];
    id v4 = [*(id *)(a1 + 32) storeID];
    v6[0] = _NSConcreteStackBlock;
    v6[1] = 3221225472;
    v6[2] = sub_1001EB4D0;
    _OWORD v6[3] = &unk_100A4B210;
    id v7 = *(id *)(a1 + 32);
    id v8 = *(id *)(a1 + 40);
    uint64_t v9 = *(void *)(a1 + 64);
    +[BSUICloudAssetRatingsManager updateRating:v3 title:0 body:0 itemId:v4 shouldSuppressMetrics:0 completion:v6];
  }
  return (*(uint64_t (**)(void))(*(void *)(a1 + 56) + 16))();
}

void sub_1001EB4D0(uint64_t a1, char a2)
{
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001EB580;
  _OWORD v3[3] = &unk_100A4B1E8;
  char v7 = a2;
  id v4 = *(id *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

void sub_1001EB580(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56))
  {
    if ([*(id *)(a1 + 32) isOwned])
    {
      id v2 = [*(id *)(a1 + 32) storeID];
      if ([v2 length]) {
        uint64_t v3 = 1;
      }
      else {
        uint64_t v3 = 2;
      }
    }
    else
    {
      uint64_t v3 = 0;
    }
    id v4 = +[BAUtilities contentTypeFromAssetType:](BAUtilities, "contentTypeFromAssetType:", (int)[*(id *)(a1 + 32) contentType]);
    if ([*(id *)(a1 + 32) isAudiobook])
    {
      id v5 = [*(id *)(a1 + 32) hasRACSupport];
      if ([v5 BOOLValue]) {
        uint64_t v6 = 1;
      }
      else {
        uint64_t v6 = 2;
      }
    }
    else
    {
      uint64_t v6 = 0;
    }
    id v12 = +[BAEventReporter sharedReporter];
    char v7 = [*(id *)(a1 + 40) ba_analyticsTracker];
    id v8 = +[NSNumber numberWithDouble:*(double *)(a1 + 48)];
    uint64_t v9 = [*(id *)(a1 + 32) assetID];
    id v10 = [*(id *)(a1 + 32) supplementalContentAssets];
    id v11 = +[NSNumber numberWithUnsignedInteger:](NSNumber, "numberWithUnsignedInteger:", [v10 count]);
    [v12 emitRatingEventWithTracker:v7 rating:v8 contentID:v9 contentAcquisitionType:v3 contentType:v4 supplementalContentCount:v11 productionType:v6];
  }
}

void sub_1001EBB7C(uint64_t a1)
{
  id v4 = (void (**)(id, void *, void))objc_retainBlock(*(id *)(a1 + 40));
  if (v4)
  {
    id v2 = [*(id *)(a1 + 32) atAssetsInFlight];
    uint64_t v3 = [v2 allValues];
    v4[2](v4, v3, 0);
  }
}

void sub_1001EC05C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) atAssetsInFlight];
  id v4 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];

  uint64_t v3 = (void (**)(id, id, void))objc_retainBlock(*(id *)(a1 + 48));
  if (v4)
  {
    if (v3) {
      v3[2](v3, v4, 0);
    }
  }
  else if (v3)
  {
    v3[2](v3, 0, 0);
  }
}

void sub_1001EC1E4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) atAssetsInFlight];
  id v10 = [v2 objectForKeyedSubscript:*(void *)(a1 + 40)];

  if (v10)
  {
    unsigned int v3 = [v10 contentType];
    id v4 = @"Book";
    if (v3 == 6) {
      id v4 = @"Media";
    }
    id v5 = *(void **)(a1 + 32);
    uint64_t v6 = v4;
    char v7 = [v5 connection];
    [v7 prioritizeAsset:*(void *)(a1 + 40) forDataclass:v6];
  }
  id v8 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v9 = v8;
  if (v8) {
    (*((void (**)(id, void))v8 + 2))(v8, 0);
  }
}

void sub_1001EC2DC(void *a1, void *a2)
{
  id v17 = a2;
  unsigned int v3 = (void *)a1[4];
  id v4 = [v17 dataclass];
  id v5 = [v17 assetType];
  LODWORD(v3) = [v3 _supportsDataclass:v4 assetType:v5];

  uint64_t v6 = v17;
  if (v3)
  {
    char v7 = (void *)a1[5];
    id v8 = [v17 dataclass];
    [v7 addObject:v8];

    uint64_t v9 = (void *)a1[6];
    id v10 = [v17 identifier];
    [v9 setObject:v17 forKey:v10];

    id v11 = (void *)a1[7];
    id v12 = [v17 identifier];
    [v11 addObject:v12];

    [v17 downloadProgress];
    if (v13 >= 1.0)
    {
      uint64_t v15 = (void *)a1[8];
      uint64_t v6 = v17;
    }
    else
    {
      [v17 downloadProgress];
      uint64_t v6 = v17;
      if (v14 <= 0.0) {
        goto LABEL_7;
      }
      uint64_t v15 = (void *)a1[9];
    }
    uint64_t v16 = [v6 identifier];
    [v15 addObject:v16];

    uint64_t v6 = v17;
  }
LABEL_7:
}

void sub_1001EC42C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = objc_alloc((Class)BKLibraryDownloadStatus);
  id v5 = [v3 assetID];
  if (v5) {
    [v3 assetID];
  }
  else {
  uint64_t v6 = [v3 temporaryAssetID];
  }
  char v7 = [v3 atAsset];
  id v8 = [v7 totalBytes];
  uint64_t v9 = [v3 atAsset];
  id v10 = [v4 initWithAssetID:v6 state:5 progressValue:0 timeRemaining:v8 bytesDownloaded:[v9 totalBytes] fileSize:1.0];

  id v11 = +[NSNotificationCenter defaultCenter];
  uint64_t v12 = BKLibraryDownloadStatusNotification;
  uint64_t v13 = *(void *)(a1 + 32);
  uint64_t v16 = BKLibraryDownloadStatusKey;
  float v14 = +[NSSet setWithObject:v10];
  id v17 = v14;
  uint64_t v15 = +[NSDictionary dictionaryWithObjects:&v17 forKeys:&v16 count:1];
  [v11 postNotificationName:v12 object:v13 userInfo:v15];
}

void sub_1001EC5DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a3;
  uint64_t v6 = *(void **)(a1 + 32);
  id v7 = a2;
  id v8 = [v6 atAssetsInFlight];
  uint64_t v9 = [v8 objectForKeyedSubscript:v7];

  if (v9)
  {
    id v10 = BKATAssetLog();
    if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
      sub_1007EFC7C(v5, v10);
    }

    id v11 = [v9 assetID];
    if (v11) {
      [v9 assetID];
    }
    else {
    uint64_t v12 = [v9 temporaryAssetID];
    }

    [v5 downloadProgress];
    if (v13 != 0.0)
    {
      id v14 = [objc_alloc((Class)BKLibraryDownloadStatus) initWithAssetID:v12 state:4 progressValue:1 timeRemaining:[v5 totalBytes] bytesDownloaded:v13 fileSize:[v5 totalBytes]];
      uint64_t v15 = +[NSNotificationCenter defaultCenter];
      uint64_t v16 = BKLibraryDownloadStatusNotification;
      uint64_t v17 = *(void *)(a1 + 32);
      uint64_t v20 = BKLibraryDownloadStatusKey;
      id v18 = +[NSSet setWithObject:v14];
      uint64_t v21 = v18;
      id v19 = +[NSDictionary dictionaryWithObjects:&v21 forKeys:&v20 count:1];
      [v15 postNotificationName:v16 object:v17 userInfo:v19];
    }
  }
}

void sub_1001EC8DC(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) dataSourceAirTrafficEndedHandler];
  if (v1)
  {
    id v2 = v1;
    v1[2](v1, 1);
    uint64_t v1 = (void (**)(void, void))v2;
  }
}

void sub_1001EC9FC(uint64_t a1)
{
  id v2 = BKATAssetLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEBUG)) {
    sub_1007EFD60(a1, v2);
  }

  id v3 = [*(id *)(a1 + 32) atAssetIDs];
  if ([v3 count])
  {
  }
  else
  {
    id v4 = [*(id *)(a1 + 32) atAssetsInFlight];
    id v5 = [v4 count];

    if (!v5) {
      goto LABEL_9;
    }
  }
  uint64_t v6 = [*(id *)(a1 + 32) atAssetsInFlight];
  id v7 = [v6 allValues];

  uint64_t v8 = [*(id *)(a1 + 32) dataSourceAirTrafficEndedHandler];
  uint64_t v9 = (void *)v8;
  if (v8) {
    (*(void (**)(uint64_t, void))(v8 + 16))(v8, 0);
  }

  id v10 = [*(id *)(a1 + 32) libraryManager];
  [v10 libraryDataSource:*(void *)(a1 + 32) removedAssets:v7];

LABEL_9:
  id v11 = [*(id *)(a1 + 32) atAssetIDs];
  [v11 removeAllObjects];

  uint64_t v12 = [*(id *)(a1 + 32) atAssetsInFlight];
  [v12 removeAllObjects];

  dispatch_time_t v13 = dispatch_time(0, 1500000000);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001ECBA8;
  block[3] = &unk_100A43D60;
  void block[4] = *(void *)(a1 + 32);
  dispatch_after(v13, (dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001ECBA8(uint64_t a1)
{
  uint64_t v1 = [*(id *)(a1 + 32) dataSourceAirTrafficEndedHandler];
  if (v1)
  {
    id v2 = v1;
    v1[2](v1, 0);
    uint64_t v1 = (void (**)(void, void))v2;
  }
}

void sub_1001EE724(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) view];
  [v1 layoutIfNeeded];
}

void sub_1001EE768(uint64_t a1)
{
}

void sub_1001EE770(uint64_t a1)
{
  id v2 = objc_alloc_init((Class)TUIMutableTransactionOptions);
  [v2 setAnimate:1];
  [v2 setDuration:0.6];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001EE844;
  _OWORD v4[3] = &unk_100A4B300;
  id v5 = *(id *)(a1 + 32);
  id v3 = +[TUITransaction currentOrNewTransactionWithOptions:v2 block:v4];
}

id sub_1001EE844(uint64_t a1)
{
  return [*(id *)(a1 + 32) invalidate];
}

void sub_1001EE84C(uint64_t a1, void *a2)
{
  id v5 = a2;
  id v3 = [*(id *)(a1 + 32) traitCollection];
  id v4 = [v3 horizontalSizeClass];

  if (v4 != (id)1) {
    [v5 setHorizontalSizeClass:1];
  }
}

void sub_1001EE8C0(uint64_t a1)
{
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 3221225472;
  v2[2] = sub_1001EE964;
  v2[3] = &unk_100A43DD8;
  id v3 = *(id *)(a1 + 32);
  id v4 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v2);
}

void sub_1001EE964(uint64_t a1)
{
  [*(id *)(a1 + 32) cardStackTransitioningCardContentFinalizePreparationForOpen];
  id v2 = *(NSObject **)(a1 + 40);

  dispatch_group_leave(v2);
}

void sub_1001EE9A0(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 56)) {
    int64_t v2 = 5000000000;
  }
  else {
    int64_t v2 = 300000000;
  }
  id v3 = *(NSObject **)(a1 + 32);
  dispatch_time_t v4 = dispatch_time(0, v2);
  intptr_t v5 = dispatch_group_wait(v3, v4);
  uint64_t v6 = BCAugmentedExperienceSignpost();
  id v7 = v6;
  os_signpost_id_t v8 = *(void *)(a1 + 48);
  if (v8 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v6))
  {
    CFStringRef v9 = @"YES";
    if (!v5) {
      CFStringRef v9 = @"NO";
    }
    *(_DWORD *)buf = 138412290;
    CFStringRef v13 = v9;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v7, OS_SIGNPOST_INTERVAL_END, v8, "EOB.CardAnimation.prepareForOpen.wait", "Timeout: %@", buf, 0xCu);
  }

  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001EEB24;
  block[3] = &unk_100A442B8;
  id v11 = *(id *)(a1 + 40);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001EEB24(uint64_t a1)
{
  kdebug_trace();
  int64_t v2 = (void (**)(void))objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    v2[2]();
    int64_t v2 = v3;
  }
}

void sub_1001EEB98(uint64_t a1)
{
  int64_t v2 = BCAugmentedExperienceSignpost();
  id v3 = v2;
  os_signpost_id_t v4 = *(void *)(a1 + 32);
  if (v4 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v2))
  {
    *(_WORD *)intptr_t v5 = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v3, OS_SIGNPOST_INTERVAL_END, v4, "EOB.CardAnimation.prepareForOpen", "", v5, 2u);
  }
}

id sub_1001EEC98(uint64_t a1)
{
  return [*(id *)(a1 + 32) _setupCardDropShadowForPresented:1];
}

void sub_1001EEF60(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 224), 8);
  _Block_object_dispose((const void *)(v37 - 144), 8);
  _Unwind_Resume(a1);
}

void sub_1001EEF90(uint64_t a1)
{
  int64_t v2 = [*(id *)(a1 + 32) compactArtworkSource];
  id v3 = [*(id *)(a1 + 32) createCardArtworkSource];
  [*(id *)(a1 + 32) setCardArtworkSource:v3];
  if ([*(id *)(a1 + 32) isCoverTransition]) {
    [*(id *)(a1 + 32) hideCovers];
  }
  [*(id *)(a1 + 40) updateCardSize];
  [*(id *)(a1 + 32) _cardInitialTopOffset];
  *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) = v4;
  if (*(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 24) != 0.0)
  {
    intptr_t v5 = [*(id *)(a1 + 40) cardNavigationController];
    uint64_t v6 = [v5 view];
    [v6 frame];
    double v8 = v7;
    double v10 = v9;
    double v12 = v11;
    double v14 = v13;

    double v15 = v10 - *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    uint64_t v16 = [*(id *)(a1 + 40) cardNavigationController];
    uint64_t v17 = [v16 view];
    [v17 setFrame:v8, v15, v12, v14];
  }
  id v18 = [*(id *)(a1 + 40) cardNavigationController];
  id v19 = [v18 view];
  [v19 setAlpha:0.0];

  uint64_t v20 = [*(id *)(a1 + 40) closeButton];
  [v20 setAlpha:0.0];

  uint64_t v21 = [*(id *)(a1 + 40) view];
  [v21 layoutSubviews];

  uint64_t v22 = [[_BKEndOfBookCardTransitionSnapshotView alloc] initWithCompactViewController:*(void *)(a1 + 48)];
  id v23 = [*(id *)(a1 + 40) view];
  [v23 insertSubview:v22 atIndex:0];

  [*(id *)(a1 + 32) setSnapshotView:v22];
  [(_BKEndOfBookCardTransitionSnapshotView *)v22 layoutSubviews];
  [*(id *)(a1 + 32) _setupCardDropShadowForPresented:0];
  if ([*(id *)(a1 + 32) isCoverTransition])
  {
    id v24 = [*(id *)(a1 + 48) contentView];
    [v2 frame];
    double v26 = v25;
    double v28 = v27;
    double v30 = v29;
    double v32 = v31;
    id v33 = [v2 referenceView];
    [v24 convertRect:v33 fromView:v26 toView:v28];
    double v35 = v34;
    double v37 = v36;
    double v39 = v38;
    double v41 = v40;

    id v42 = [*(id *)(a1 + 40) view];
    [v3 frame];
    double v44 = v43;
    double v46 = v45;
    double v48 = v47;
    double v50 = v49;
    id v51 = [v3 referenceView];
    [v42 convertRect:v51 fromView:v44];
    CGFloat v53 = v52;
    double v55 = v54;
    CGFloat v57 = v56;
    CGFloat v59 = v58;

    double v60 = v55 + *(double *)(*(void *)(*(void *)(a1 + 56) + 8) + 24);
    id v61 = objc_alloc_init((Class)BCSheetTransitionCoverController);
    if ([*(id *)(a1 + 32) isCompositeCompactArtwork])
    {
      CGRectGetCenter();
      CGSizeScaledToFillInSize();
      CGRectMakeWithCenterAndSize();
      double v35 = v62;
      double v37 = v63;
      double v39 = v64;
      double v41 = v65;
      [v61 setupWithArtworkSource:v3];
      id v66 = [v61 coverView];
      [v66 setAlpha:0.0];
    }
    else
    {
      [v61 setupWithArtworkSource:v2 cardArtworkSource:v3 isDismiss:0];
    }
    [v61 configureCoverViewWithFrame:v35, v37, v39, v41];
    char v67 = [*(id *)(a1 + 40) view];
    id v68 = [v61 coverView];
    [v67 addSubview:v68];

    [*(id *)(a1 + 32) setCoverController:v61];
    CGRectGetCenterNoRounding();
    uint64_t v69 = *(void *)(*(void *)(a1 + 64) + 8);
    *(void *)(v69 + 32) = v70;
    *(void *)(v69 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v71;
    sub_1001EF420(&v76, v35, v37, v39, v41, v53, v60, v57, v59);
    BOOL v72 = *(_OWORD **)(*(void *)(a1 + 72) + 8);
    long long v74 = *(_OWORD *)&v76.c;
    long long v73 = *(_OWORD *)&v76.tx;
    v72[2] = *(_OWORD *)&v76.a;
    v72[3] = v74;
    _OWORD v72[4] = v73;
  }
  id v75 = [*(id *)(a1 + 48) view];
  [v75 setHidden:1];
}

CGAffineTransform *sub_1001EF420@<X0>(CGAffineTransform *a1@<X8>, CGFloat a2@<D0>, CGFloat a3@<D1>, CGFloat a4@<D2>, CGFloat a5@<D3>, CGFloat a6@<D4>, CGFloat a7@<D5>, CGFloat a8@<D6>, CGFloat a9@<D7>)
{
  v25.origin.double x = a6;
  v25.origin.double y = a7;
  v25.size.double width = a8;
  v25.size.double height = a9;
  double Width = CGRectGetWidth(v25);
  v26.origin.double x = a2;
  v26.origin.double y = a3;
  v26.size.double width = a4;
  v26.size.double height = a5;
  double v18 = Width / CGRectGetWidth(v26);
  v27.origin.double x = a6;
  v27.origin.double y = a7;
  v27.size.double width = a8;
  v27.size.double height = a9;
  double Height = CGRectGetHeight(v27);
  v28.origin.double x = a2;
  v28.origin.double y = a3;
  v28.size.double width = a4;
  v28.size.double height = a5;
  double v20 = Height / CGRectGetHeight(v28);

  return CGAffineTransformMakeScale(a1, v18, v20);
}

id sub_1001EF500(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _animateContentCrossfade:1];
}

void sub_1001EF848(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,uint64_t a32,uint64_t a33,uint64_t a34,uint64_t a35,uint64_t a36,char a37)
{
  _Block_object_dispose(&a37, 8);
  _Block_object_dispose((const void *)(v37 - 160), 8);
  _Unwind_Resume(a1);
}

void sub_1001EF870(uint64_t a1)
{
  int64_t v2 = [*(id *)(a1 + 32) createCompactArtworkSource];
  id v3 = [*(id *)(a1 + 32) createCardArtworkSource];
  [*(id *)(a1 + 32) setCompactArtworkSource:v2];
  uint64_t v4 = [*(id *)(a1 + 40) im_firstVisibleChildConformingToProtocol:&OBJC_PROTOCOL___BCSheetTransitioningArtworkHost includePresented:0];
  intptr_t v5 = v4;
  if (v4) {
    BOOL v6 = v3 == 0;
  }
  else {
    BOOL v6 = 1;
  }
  if (!v6 && [v4 visibilityOfArtworkSource:v3] != (id)2) {
    [*(id *)(a1 + 32) setCardArtworkSource:v3];
  }
  double v7 = [*(id *)(a1 + 32) cardArtworkSource];

  double v8 = [*(id *)(a1 + 40) transitioningCardContent];
  [*(id *)(a1 + 32) setCardContent:v8];

  if ([*(id *)(a1 + 32) isCoverTransition]) {
    [*(id *)(a1 + 32) hideCovers];
  }
  double v9 = [*(id *)(a1 + 32) cardContent];
  [v9 cardStackTransitioningCardContentPrepareForDismiss];

  double v10 = [[_BKEndOfBookCardTransitionSnapshotView alloc] initWithCompactViewController:*(void *)(a1 + 48)];
  [*(id *)(a1 + 40) cardSize];
  CGRectMakeWithSize();
  -[_BKEndOfBookCardTransitionSnapshotView setFrame:](v10, "setFrame:");
  double v11 = [*(id *)(a1 + 40) view];
  [v11 insertSubview:v10 atIndex:0];

  [*(id *)(a1 + 32) setSnapshotView:v10];
  [*(id *)(a1 + 32) _cardInitialTopOffset];
  -[_BKEndOfBookCardTransitionSnapshotView setSnapshotTopOffset:](v10, "setSnapshotTopOffset:");
  double v12 = [(_BKEndOfBookCardTransitionSnapshotView *)v10 snapshot];
  [v12 setAlpha:0.0];

  double v13 = [(_BKEndOfBookCardTransitionSnapshotView *)v10 closeButtonView];
  [v13 setAlpha:0.0];

  [(_BKEndOfBookCardTransitionSnapshotView *)v10 layoutSubviews];
  if ([*(id *)(a1 + 32) isCoverTransition])
  {
    double v14 = [*(id *)(a1 + 48) contentView];
    [v2 frame];
    double v16 = v15;
    double v18 = v17;
    double v20 = v19;
    double v22 = v21;
    id v23 = [v2 referenceView];
    [v14 convertRect:v23 fromView:v16];
    CGFloat v25 = v24;
    CGFloat v27 = v26;
    CGFloat v29 = v28;
    CGFloat v31 = v30;

    double v32 = [*(id *)(a1 + 40) view];
    [v7 frame];
    double v34 = v33;
    double v36 = v35;
    double v38 = v37;
    double v40 = v39;
    double v41 = [v7 referenceView];
    [v32 convertRect:v41 fromView:v34];
    double v43 = v42;
    double v45 = v44;
    double v47 = v46;
    double v49 = v48;

    id v50 = objc_alloc_init((Class)BCSheetTransitionCoverController);
    if ([*(id *)(a1 + 32) isCompositeCompactArtwork])
    {
      CGRectGetCenter();
      CGSizeScaledToFillInSize();
      CGRectMakeWithCenterAndSize();
      CGFloat v25 = v51;
      CGFloat v27 = v52;
      CGFloat v29 = v53;
      CGFloat v31 = v54;
      [v50 setupWithArtworkSource:v7];
    }
    else
    {
      [v50 setupWithArtworkSource:v2 cardArtworkSource:v7 isDismiss:1];
    }
    [v50 configureCoverViewWithFrame:v43, v45, v47, v49];
    double v55 = [*(id *)(a1 + 40) view];
    double v56 = [v50 coverView];
    [v55 addSubview:v56];

    [*(id *)(a1 + 32) setCoverController:v50];
    CGRectGetCenterNoRounding();
    uint64_t v57 = *(void *)(*(void *)(a1 + 56) + 8);
    *(void *)(v57 + 32) = v58;
    *(void *)(v57 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v59;
    sub_1001EF420(&v63, v43, v45, v47, v49, v25, v27, v29, v31);
    double v60 = *(_OWORD **)(*(void *)(a1 + 64) + 8);
    long long v62 = *(_OWORD *)&v63.c;
    long long v61 = *(_OWORD *)&v63.tx;
    v60[2] = *(_OWORD *)&v63.a;
    v60[3] = v62;
    void v60[4] = v61;
  }
}

id sub_1001EFC90(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _animateContentCrossfade:0];
}

void sub_1001F0100(uint64_t a1)
{
  if (*(unsigned char *)(a1 + 40)) {
    double v2 = 0.0;
  }
  else {
    double v2 = 1.0;
  }
  id v3 = [*(id *)(a1 + 32) snapshotView];
  uint64_t v4 = [v3 snapshot];
  [v4 setAlpha:v2];

  if (*(unsigned char *)(a1 + 40)) {
    double v5 = 0.0;
  }
  else {
    double v5 = 1.0;
  }
  id v7 = [*(id *)(a1 + 32) snapshotView];
  BOOL v6 = [v7 closeButtonView];
  [v6 setAlpha:v5];
}

void sub_1001F01C8(uint64_t a1, double a2)
{
  LOBYTE(a2) = *(unsigned char *)(a1 + 40);
  double v3 = (double)*(unint64_t *)&a2;
  uint64_t v4 = [*(id *)(a1 + 32) cardViewController];
  double v5 = [v4 cardNavigationController];
  BOOL v6 = [v5 view];
  [v6 setAlpha:v3];

  LOBYTE(v7) = *(unsigned char *)(a1 + 40);
  double v8 = (double)v7;
  double v9 = [*(id *)(a1 + 32) cardViewController];
  double v10 = [v9 closeButton];
  [v10 setAlpha:v8];

  if ([*(id *)(a1 + 32) isCompositeCompactArtwork])
  {
    LOBYTE(v11) = *(unsigned char *)(a1 + 40);
    double v12 = (double)v11;
    id v14 = [*(id *)(a1 + 32) coverController];
    double v13 = [v14 coverView];
    [v13 setAlpha:v12];
  }
}

void sub_1001F0A20(uint64_t a1)
{
  double v3 = (void (**)(id, void *))objc_retainBlock(*(id *)(a1 + 40));
  if (v3)
  {
    double v2 = [*(id *)(a1 + 32) buyParams];
    v3[2](v3, v2);
  }
}

void sub_1001F10D0(uint64_t a1)
{
  double v2 = +[BKLibraryManager defaultManager];
  id v8 = [v2 libraryAssetOnMainQueueWithPermanentOrTemporaryAssetID:*(void *)(*(void *)(a1 + 32) + 8)];

  double v3 = [v8 dataSourceIdentifier];
  if ([v3 isEqualToString:@"com.apple.ibooks.plist.untethered"])
  {
    unsigned int v4 = [v8 state];

    if (v4 != 1) {
      goto LABEL_7;
    }
    id v5 = objc_retainBlock(*(id *)(*(void *)(a1 + 32) + 16));
    BOOL v6 = v5;
    if (v5) {
      (*((void (**)(id, id))v5 + 2))(v5, v8);
    }

    uint64_t v7 = *(void *)(a1 + 32);
    double v3 = *(void **)(v7 + 16);
    *(void *)(v7 + 16) = 0;
  }

LABEL_7:
}

void sub_1001F1634(id a1)
{
  id v1 = objc_alloc_init(BKTestDriver);
  double v2 = (void *)qword_100B4A628;
  qword_100B4A628 = (uint64_t)v1;
}

void sub_1001F24FC(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  NSStringFromSelector(*(SEL *)(a1 + 64));
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  [v1 recordPaginationInfo:@"presentation" info:v2 renderTree:v3 pageCount:v4 errorLabel:v5];
}

void sub_1001F2664(uint64_t a1)
{
  id v1 = *(void **)(a1 + 32);
  uint64_t v2 = *(void *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 48);
  uint64_t v4 = *(void *)(a1 + 56);
  NSStringFromSelector(*(SEL *)(a1 + 64));
  id v5 = (id)objc_claimAutoreleasedReturnValue();
  [v1 recordPaginationInfo:@"pagination" info:v2 renderTree:v3 pageCount:v4 errorLabel:v5];
}

void sub_1001F279C(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = NSStringFromSelector(*(SEL *)(a1 + 48));
  id v5 = [v2 getBookInfo:v3 errorLabel:v4];

  if (v5)
  {
    BOOL v6 = *(void **)(a1 + 32);
    uint64_t v7 = NSStringFromSelector(*(SEL *)(a1 + 48));
    id v8 = [v6 getValueForKey:@"pagination-result-path" from:v5 errorLabel:v7];

    if (v8)
    {
      double v9 = *(void **)(a1 + 32);
      CFStringRef v14 = @"fail";
      double v10 = +[NSNumber numberWithBool:0];
      double v15 = v10;
      unint64_t v11 = +[NSDictionary dictionaryWithObjects:&v15 forKeys:&v14 count:1];
      double v12 = NSStringFromSelector(*(SEL *)(a1 + 48));
      [v9 createJsonFile:v8 content:v11 errorLabel:v12];

      double v13 = [*(id *)(a1 + 32) machine];
      [v13 paginationDidEnd];
    }
  }
}

id sub_1001F29E4(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBookController:*(void *)(a1 + 40)];
}

id sub_1001F2A7C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBookController:0];
}

void sub_1001F2B40(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) libraryController];
  uint64_t v3 = *(void **)(a1 + 40);

  if (v2 != v3)
  {
    [*(id *)(a1 + 32) setLibraryController:*(void *)(a1 + 40)];
    if (!*(void *)(*(void *)(a1 + 32) + 64))
    {
      uint64_t v4 = +[BKLibraryManager defaultManager];
      id v5 = [v4 predicateForLocalLibraryAssets];
      id v6 = [objc_alloc((Class)NSFetchRequest) initWithEntityName:@"BKLibraryAsset"];
      [v6 setPredicate:v5];
      uint64_t v7 = [v4 uiChildContext];
      id v10 = 0;
      id v8 = [v7 executeFetchRequest:v6 error:&v10];
      id v9 = v10;
      [*(id *)(a1 + 32) setBookList:v8];
    }
  }
}

void sub_1001F2E7C(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    id v3 = WeakRetained;
    (*(void (**)(void))(*(void *)(a1 + 32) + 16))();
    id WeakRetained = v3;
  }
}

void sub_1001F2EEC(id a1)
{
  id v4 = +[BKAppDelegate sceneManager];
  id v1 = [v4 currentSceneController];
  if (!v1) {
    BCReportAssertionFailureWithMessage();
  }
  id v2 = [v1 newShowURLTransaction];
  id v3 = [v4 libraryCollectionPresenter];
  [v3 showLibraryWithTransaction:v2];
}

void sub_1001F3048(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bookList];
  [v2 objectAtIndexedSubscript:[*(id *)(a1 + 32) currentBook]];
  id v8 = (id)objc_claimAutoreleasedReturnValue();

  id v3 = +[BKAppDelegate sceneManager];
  id v4 = [v3 currentSceneController];
  if (!v4) {
    BCReportAssertionFailureWithMessage();
  }
  id v5 = [v4 newShowAssetTransaction];
  id v6 = [v3 bookPresenter];
  uint64_t v7 = [v8 assetID];
  [v6 showAssetWithTransaction:v5 assetID:v7 location:0 options:0 completion:0];
}

void sub_1001F320C(uint64_t a1)
{
  int v1 = *(unsigned __int8 *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) machine];
  id v3 = v2;
  if (v1) {
    [v2 newPageIsReady];
  }
  else {
    [v2 pageTurnFailed];
  }
}

void sub_1001F32DC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  id v4 = [v2 bookController];
  if (v4)
  {
    id v3 = [*(id *)(a1 + 32) bookController];
    [v2 processPageTurnResult:[v3 turnPages:1, animated:1]];
  }
  else
  {
    [v2 processPageTurnResult:0];
  }
}

void sub_1001F33E0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bookController];
  [v2 turnToPageNumber:*(void *)(*(void *)(a1 + 32) + 80) animated:1];

  id v3 = *(void **)(a1 + 32);
  id v4 = [v3 queue];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001F34A8;
  v5[3] = &unk_100A43D60;
  void v5[4] = *(void *)(a1 + 32);
  [v3 dispatchInQueue:v4 async:v5];
}

void sub_1001F34A8(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) machine];
  [v1 firstPageRequested];
}

void sub_1001F35A0(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) bookController];

  if (v2)
  {
    id v3 = [*(id *)(a1 + 32) bookController];
    id v4 = (char *)[v3 currentPages];

    id v5 = [*(id *)(a1 + 32) bookController];
    [v5 currentPages];
    int v7 = v6;

    id v8 = [*(id *)(a1 + 32) bookController];
    id v40 = +[AETestDriver getBookKeyWithBookController:v8];

    id v9 = v40;
    if (v40)
    {
      id v10 = *(void **)(a1 + 32);
      unint64_t v11 = NSStringFromSelector(*(SEL *)(a1 + 40));
      double v12 = [v10 getBookInfo:v40 errorLabel:v11];

      if (v12)
      {
        double v13 = *(void **)(a1 + 32);
        CFStringRef v14 = NSStringFromSelector(*(SEL *)(a1 + 40));
        double v15 = [v13 getValueForKey:@"pages-path" from:v12 errorLabel:v14];

        if (v15)
        {
          double v16 = [*(id *)(a1 + 32) bookController];
          double v17 = +[AETestDriver getSnapshotsWithBookController:v16];

          if ([v17 count] == (id)1)
          {
            double v18 = v17;
            if (v7 < 1)
            {
              double v21 = @"page";
            }
            else
            {
              double v19 = @"page";
              unint64_t v20 = (unint64_t)v4;
              do
              {
                double v21 = +[NSString stringWithFormat:@"%@_%d", v19, v20];

                unint64_t v20 = (v20 + 1);
                double v19 = v21;
                --v7;
              }
              while (v7);
            }
            double v32 = +[NSString stringWithFormat:@"%@/%@.png", v15, v21];

            double v33 = [v12 objectForKey:@"pages"];
            [v33 addObject:v32];

            double v34 = *(void **)(a1 + 32);
            double v17 = v18;
            double v35 = [v18 firstObject];
            double v36 = UIImagePNGRepresentation(v35);
            double v37 = NSStringFromSelector(*(SEL *)(a1 + 40));
            [v34 createFile:v32 content:v36 errorLabel:v37];
          }
          else if ([v17 count] == (id)v7 && v7 >= 1)
          {
            uint64_t v22 = 0;
            uint64_t v38 = v7;
            double v39 = v4;
            do
            {
              +[NSString stringWithFormat:@"%@/page_%d.png", v15, &v4[v22]];
              v24 = id v23 = v15;
              CGFloat v25 = [v12 objectForKey:@"pages"];
              [v25 addObject:v24];

              double v26 = *(void **)(a1 + 32);
              CGFloat v27 = [v17 objectAtIndex:v22];
              double v28 = UIImagePNGRepresentation(v27);
              NSStringFromSelector(*(SEL *)(a1 + 40));
              CGFloat v29 = v12;
              v31 = double v30 = v17;
              [v26 createFile:v24 content:v28 errorLabel:v31];

              double v17 = v30;
              double v12 = v29;

              double v15 = v23;
              id v4 = v39;
              ++v22;
            }
            while (v38 != v22);
          }
        }
      }

      id v9 = v40;
    }
  }
}

void sub_1001F3EE0(id a1)
{
  id v1 = objc_alloc_init(BKAuthenticationAlertRequest);
  id v2 = (void *)qword_100B4A638;
  qword_100B4A638 = (uint64_t)v1;
}

void sub_1001F4048(uint64_t a1)
{
  long long v9 = 0u;
  long long v10 = 0u;
  long long v11 = 0u;
  long long v12 = 0u;
  id v2 = *(id *)(*(void *)(a1 + 32) + 8);
  id v3 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v10;
    do
    {
      int v6 = 0;
      do
      {
        if (*(void *)v10 != v5) {
          objc_enumerationMutation(v2);
        }
        (*(void (**)(void))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v6) + 16))(*(void *)(*((void *)&v9 + 1) + 8 * (void)v6));
        int v6 = (char *)v6 + 1;
      }
      while (v4 != v6);
      id v4 = [v2 countByEnumeratingWithState:&v9 objects:v13 count:16];
    }
    while (v4);
  }

  uint64_t v7 = *(void *)(a1 + 32);
  id v8 = *(void **)(v7 + 8);
  *(void *)(v7 + 8) = 0;
}

uint64_t sub_1001F42DC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001F42F0(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  if (*(unsigned char *)(v2 + 24) && *(unsigned char *)(a1 + 48))
  {
    id v3 = *(void (**)(void))(*(void *)(a1 + 40) + 16);
    v3();
  }
  else
  {
    *(unsigned char *)(v2 + 24) = 0;
    id v4 = *(void **)(*(void *)(a1 + 32) + 8);
    if (!v4)
    {
      id v5 = objc_alloc_init((Class)NSMutableSet);
      uint64_t v6 = *(void *)(a1 + 32);
      uint64_t v7 = *(void **)(v6 + 8);
      *(void *)(v6 + 8) = v5;

      id v4 = *(void **)(*(void *)(a1 + 32) + 8);
    }
    id v8 = [*(id *)(a1 + 40) copy];
    [v4 addObject:v8];

    uint64_t v9 = *(void *)(a1 + 32);
    if (!*(unsigned char *)(v9 + 25))
    {
      *(unsigned char *)(v9 + 25) = 1;
      block[0] = _NSConcreteStackBlock;
      block[1] = 3221225472;
      block[2] = sub_1001F4428;
      block[3] = &unk_100A43D60;
      void block[4] = *(void *)(a1 + 32);
      dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
    }
  }
}

void sub_1001F4428(uint64_t a1)
{
  uint64_t v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Sign In" value:&stru_100A70340 table:0];

  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"Not Now" value:&stru_100A70340 table:0];

  uint64_t v6 = +[NSBundle mainBundle];
  uint64_t v7 = [v6 localizedStringForKey:@"Sign In Required" value:&stru_100A70340 table:0];

  id v8 = +[NSBundle mainBundle];
  uint64_t v9 = [v8 localizedStringForKey:@"To access purchases in the Cloud, please sign in.", &stru_100A70340, 0 value table];

  long long v10 = +[UIAlertController alertControllerWithTitle:v7 message:v9 preferredStyle:1];
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_1001F4684;
  v15[3] = &unk_100A461B0;
  void v15[4] = *(void *)(a1 + 32);
  long long v11 = +[UIAlertAction actionWithTitle:v5 style:1 handler:v15];
  [v10 addAction:v11];

  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_1001F4718;
  v14[3] = &unk_100A461B0;
  void v14[4] = *(void *)(a1 + 32);
  long long v12 = +[UIAlertAction actionWithTitle:v3 style:0 handler:v14];
  [v10 addAction:v12];

  double v13 = +[BKAppDelegate currentSceneController];
  [v13 presentViewController:v10 animated:1 completion:0];
}

void sub_1001F4684(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  uint64_t v2 = *(NSObject **)(v1 + 32);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001F46F8;
  block[3] = &unk_100A43D60;
  void block[4] = v1;
  dispatch_async(v2, block);
}

id sub_1001F46F8(uint64_t a1)
{
  *(unsigned char *)(*(void *)(a1 + 32) + 24) = 1;
  *(unsigned char *)(*(void *)(a1 + 32) + 25) = 0;
  return [*(id *)(a1 + 32) _notifyHandlers:0];
}

void sub_1001F4718(uint64_t a1)
{
  uint64_t v2 = +[UIViewController jsa_topMostViewControllerForWindow:0];
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(NSObject **)(v3 + 32);
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001F47C4;
  _OWORD v6[3] = &unk_100A43DD8;
  void v6[4] = v3;
  id v7 = v2;
  id v5 = v2;
  dispatch_async(v4, v6);
}

void sub_1001F47C4(uint64_t a1)
{
  uint64_t v2 = *(void **)(*(void *)(a1 + 32) + 16);
  if (v2) {
    [v2 cancel];
  }
  id v3 = objc_alloc((Class)AMSAuthenticateRequest);
  id v4 = +[BUAccountsProvider sharedProvider];
  id v5 = [v4 activeStoreAccount];
  id v6 = [v3 initWithAccount:v5 options:0];

  id v7 = [objc_alloc((Class)AMSUIAuthenticateTask) initWithRequest:v6 presentingViewController:*(void *)(a1 + 40)];
  uint64_t v8 = [v7 performAuthentication];
  uint64_t v9 = *(void *)(a1 + 32);
  long long v10 = *(void **)(v9 + 16);
  *(void *)(v9 + 16) = v8;

  objc_initWeak(&location, *(id *)(a1 + 32));
  long long v11 = *(void **)(*(void *)(a1 + 32) + 16);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _OWORD v12[2] = sub_1001F492C;
  v12[3] = &unk_100A4B450;
  objc_copyWeak(&v13, &location);
  [v11 addFinishBlock:v12];
  objc_destroyWeak(&v13);
  objc_destroyWeak(&location);
}

void sub_1001F4910(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, id location)
{
  objc_destroyWeak(v14);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001F492C(uint64_t a1, void *a2, void *a3)
{
  id v4 = (id *)(a1 + 32);
  id v5 = a3;
  id v6 = a2;
  id WeakRetained = objc_loadWeakRetained(v4);
  [WeakRetained _handleAuthResult:v6 error:v5];
}

void sub_1001F4A3C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  *(unsigned char *)(*(void *)(a1 + 40) + 24) = v2 == 0;
  [*(id *)(a1 + 40) _notifyHandlers:v2 != 0];
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = *(void **)(v3 + 16);
  *(void *)(v3 + 16) = 0;

  *(unsigned char *)(*(void *)(a1 + 40) + 25) = 0;
}

void sub_1001F4D28(id a1, id a2)
{
  id v2 = a2;
  uint64_t v3 = +[BDSJaliscoDAAPClient sharedClient];
  id v4 = dispatch_get_global_queue(0, 0);
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_1001F4E04;
  void v7[3] = &unk_100A44120;
  id v8 = v3;
  id v9 = v2;
  id v5 = v2;
  id v6 = v3;
  dispatch_async(v4, v7);
}

void sub_1001F4E04(uint64_t a1)
{
  id v2 = _os_activity_create((void *)&_mh_execute_header, "BKAppLaunchJaliscoUpdate", (os_activity_t)&_os_activity_none, OS_ACTIVITY_FLAG_DEFAULT);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001F4ECC;
  _OWORD v3[3] = &unk_100A44120;
  id v4 = *(id *)(a1 + 32);
  id v5 = *(id *)(a1 + 40);
  os_activity_apply(v2, v3);
}

void sub_1001F4ECC(uint64_t a1)
{
  id v2 = *(void **)(a1 + 32);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001F4F78;
  _OWORD v3[3] = &unk_100A49868;
  id v4 = v2;
  id v5 = *(id *)(a1 + 40);
  [v4 updatePolitely:1 reason:7 completionWithError:v3];
}

void sub_1001F4F78(uint64_t a1, int a2, void *a3)
{
  id v5 = a3;
  id v6 = [v5 domain];
  if ([v6 isEqualToString:BLJaliscoDAAPClientErrorDomain])
  {
    id v7 = [v5 code];

    if (v7 == (id)5)
    {
      id v8 = sub_100045ED0();
      if (os_log_type_enabled(v8, OS_LOG_TYPE_ERROR)) {
        sub_1007EFE34(a2, v8);
      }

      id v9 = +[BKAuthenticationAlertRequest sharedRequester];
      v13[0] = _NSConcreteStackBlock;
      v13[1] = 3221225472;
      void v13[2] = sub_1001F515C;
      v13[3] = &unk_100A44AF8;
      id v14 = *(id *)(a1 + 32);
      id v15 = *(id *)(a1 + 40);
      [v9 requestAuthenticationPolitely:1 completion:v13];

      long long v10 = v14;
      goto LABEL_11;
    }
  }
  else
  {
  }
  long long v11 = sub_100045ED0();
  if (os_log_type_enabled(v11, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 67109120;
    int v17 = a2;
    _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_DEFAULT, "Updated BDSJaliscoDAAPClient on app launch : %{BOOL}d", buf, 8u);
  }

  id v12 = objc_retainBlock(*(id *)(a1 + 40));
  long long v10 = v12;
  if (v12) {
    (*((void (**)(id))v12 + 2))(v12);
  }
LABEL_11:
}

void sub_1001F515C(uint64_t a1, int a2)
{
  if (a2)
  {
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_1001F5240;
    void v7[3] = &unk_100A44638;
    uint64_t v3 = *(void **)(a1 + 32);
    id v8 = *(id *)(a1 + 40);
    [v3 updatePolitely:1 reason:7 completion:v7];
    id v4 = v8;
  }
  else
  {
    id v5 = sub_100045ED0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1007EFEB0(v5);
    }

    id v6 = objc_retainBlock(*(id *)(a1 + 40));
    id v4 = v6;
    if (v6) {
      (*((void (**)(id))v6 + 2))(v6);
    }
  }
}

void sub_1001F5240(uint64_t a1, int a2)
{
  id v4 = sub_100045ED0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "after auth retry Updated BDSJaliscoDAAPClient on app launch : %{BOOL}d", (uint8_t *)v7, 8u);
  }

  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id))v5 + 2))(v5);
  }
}

id sub_1001F54A4(uint64_t a1, void *a2, void *a3)
{
  id v4 = a3;
  id v5 = a2;
  id v6 = +[NSMutableDictionary dictionary];
  id v7 = +[NSBundle bundleForClass:objc_opt_class()];
  id v8 = +[UIColor colorNamed:@"BrandColor" inBundle:v7 compatibleWithTraitCollection:0];
  [v6 setObject:v8 forKeyedSubscript:NSForegroundColorAttributeName];

  id v9 = objc_alloc_init((Class)NSMutableParagraphStyle);
  [v9 setAlignment:1];
  [v9 setLineSpacing:4.0];
  [v6 setObject:v9 forKeyedSubscript:NSParagraphStyleAttributeName];
  if (v4)
  {
    long long v10 = [v7 pathForResource:v4 ofType:0];
    long long v11 = +[NSURL fileURLWithPath:v10];
    [v6 setObject:v11 forKeyedSubscript:NSLinkAttributeName];
  }
  id v12 = objc_alloc((Class)NSAttributedString);
  id v13 = [v6 copy];
  id v14 = [v12 initWithString:v5 attributes:v13];

  return v14;
}

void sub_1001F5924(_Unwind_Exception *a1, int a2, int a3, int a4, int a5, int a6, int a7, int a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, id location)
{
  objc_destroyWeak(v17);
  objc_destroyWeak(&location);
  _Unwind_Resume(a1);
}

void sub_1001F5950(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 7);
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001F5A1C;
  _OWORD v3[3] = &unk_100A44610;
  void v3[4] = WeakRetained;
  id v4 = a1[4];
  id v5 = a1[5];
  id v6 = a1[6];
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v3);
}

id sub_1001F5A1C(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _applicationOpenURL:*(void *)(a1 + 40) options:*(void *)(a1 + 48) sceneController:*(void *)(a1 + 56)];
}

void sub_1001F5ECC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 88));
  _Unwind_Resume(a1);
}

void sub_1001F5EE8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  if (WeakRetained)
  {
    uint64_t v2 = +[BAEventReporter sharedReporter];
    uint64_t v3 = [WeakRetained analyticsController];
    id v4 = [v3 applicationTracker];
    [v2 emitWidgetEngagementEventWithTracker:v4 widgetData:*(void *)(a1 + 32)];
  }
}

void sub_1001F6144(id a1)
{
  DarwinNotifyCenter = CFNotificationCenterGetDarwinNotifyCenter();

  CFNotificationCenterPostNotification(DarwinNotifyCenter, @"com.apple.books.plist.changed", 0, 0, 0);
}

id sub_1001F6180(uint64_t a1)
{
  return [*(id *)(a1 + 32) reload];
}

void sub_1001F6188(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) appLaunchCoordinator];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001F6230;
  _OWORD v3[3] = &unk_100A43D60;
  id v4 = *(id *)(a1 + 40);
  [v2 appLaunchCoordinatorPerformWhenLaunched:@"plistImporting cleanUpImportedFiles" block:v3];
}

id sub_1001F6230(uint64_t a1)
{
  return _[*(id *)(a1 + 32) cleanupImportedFiles];
}

id sub_1001F6238(uint64_t a1, uint64_t a2)
{
  [*(id *)(a1 + 32) setCurrentQueueGeneration:a2];
  id v4 = *(void **)(a1 + 40);

  return [v4 setCurrentQueueGeneration:a2];
}

id sub_1001F6280(uint64_t a1)
{
  [*(id *)(a1 + 32) reload];
  [*(id *)(a1 + 40) reload];
  [*(id *)(a1 + 48) reload];
  uint64_t v2 = *(void **)(a1 + 56);

  return [v2 reload];
}

void sub_1001F62CC(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) ubiquitousDocumentsController];
  [v1 migrateBooksToUbiquityIfNeededWithCompletion:0];
}

void sub_1001F6314(id *a1, int a2)
{
  [a1[4] reload];
  if (a2
    && (([a1[5] hasDigestChangedSinceFetch] & 1) != 0
     || [a1[6] hasDigestChangedSinceFetch]))
  {
    [a1[5] reload];
    [a1[6] reload];
    id v4 = +[BKLibraryManager defaultManager];
    v5[0] = _NSConcreteStackBlock;
    v5[1] = 3221225472;
    v5[2] = sub_1001F6410;
    v5[3] = &unk_100A43F68;
    objc_copyWeak(&v6, a1 + 7);
    [v4 addCustomOperationBlock:v5];

    objc_destroyWeak(&v6);
  }
}

void sub_1001F63FC(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  _Unwind_Resume(a1);
}

void sub_1001F6410(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  id v1 = [WeakRetained ubiquitousDocumentsController];
  [v1 migrateBooksToUbiquityIfNeededWithCompletion:0];
}

id sub_1001F646C(uint64_t a1)
{
  return [*(id *)(a1 + 32) deleteAssetIDs:completion:];
}

BLDownloadQueueUIManagerProtocol *__cdecl sub_1001F6474(id a1)
{
  id v1 = +[JSABridge sharedInstance];
  uint64_t v2 = [v1 windowManager];

  return (BLDownloadQueueUIManagerProtocol *)v2;
}

void sub_1001F64C8(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _applicationDidEnterBackground:*(void *)(a1 + 32)];
}

void sub_1001F6518(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _applicationWillResignActive:*(void *)(a1 + 32)];
}

void sub_1001F6568(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained _applicationWillResignFrontmost:*(void *)(a1 + 32)];
}

void sub_1001F65B8(uint64_t a1)
{
  uint64_t v2 = sub_100045ED0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_ERROR)) {
    sub_1007EFF2C();
  }

  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  [WeakRetained signalConditionSatisfied:14];
}

id sub_1001F6618(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 40));
  [WeakRetained signalConditionSatisfied:14];

  uint64_t v3 = *(void **)(a1 + 32);

  return [v3 invalidate];
}

void sub_1001F6674(id a1)
{
  id v2 = +[JSABridge sharedInstance];
  id v1 = [v2 currentPackage];
  [v1 startEviction];
}

void sub_1001F6A48(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, ...)
{
  va_start(va, a17);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001F6A6C(id a1)
{
  v3[0] = AEAudioBookForceAudiobookPlayIfCurrentAsset;
  v3[1] = @"BKBookPresentWithoutAnimations";
  v4[0] = &__kCFBooleanTrue;
  v4[1] = &__kCFBooleanTrue;
  v3[2] = AEAudiobookOptionsShouldBeginPlaybackInBackground;
  v4[2] = &__kCFBooleanTrue;
  uint64_t v1 = +[NSDictionary dictionaryWithObjects:v4 forKeys:v3 count:3];
  id v2 = (void *)qword_100B4A658;
  qword_100B4A658 = v1;
}

void sub_1001F6B1C(uint64_t a1)
{
  if ([*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40) length])
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    v10[2] = sub_1001F6CD4;
    v10[3] = &unk_100A46410;
    void v10[4] = *(void *)(a1 + 32);
    long long v7 = *(_OWORD *)(a1 + 40);
    id v2 = (id)v7;
    long long v11 = v7;
    uint64_t v3 = objc_retainBlock(v10);
    if (v3)
    {
      if (+[NSThread isMainThread])
      {
        ((void (*)(void *))v3[2])(v3);
      }
      else
      {
        block[0] = _NSConcreteStackBlock;
        block[1] = 3221225472;
        block[2] = sub_1001F70D8;
        block[3] = &unk_100A442B8;
        id v9 = v3;
        dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
      }
    }
  }
  else
  {
    id v4 = BooksSiriLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_ERROR)) {
      sub_1007EFFC8();
    }

    id v5 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 40));
    if (v5)
    {
      id v6 = [objc_alloc((Class)INPlayMediaIntentResponse) initWithCode:6 userActivity:0];
      v5[2](v5, v6);
    }
  }
}

void sub_1001F6CD4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) sceneManager];
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 3221225472;
  v5[2] = sub_1001F6D88;
  v5[3] = &unk_100A4B8D0;
  void v5[4] = *(void *)(a1 + 32);
  long long v4 = *(_OWORD *)(a1 + 40);
  id v3 = (id)v4;
  long long v6 = v4;
  [v2 requestPrimaryScene:v5];
}

void sub_1001F6D88(uint64_t a1, void *a2)
{
  id v3 = [a2 newShowURLTransaction];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _OWORD v12[2] = sub_1001F6ED4;
  v12[3] = &unk_100A44688;
  void v12[4] = *(void *)(a1 + 48);
  [v3 whenCancelled:v12];
  long long v4 = [*(id *)(a1 + 32) sceneManager];
  id v5 = [v4 bookPresenter];
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(*(void *)(v6 + 8) + 40);
  uint64_t v8 = qword_100B4A658;
  v9[0] = _NSConcreteStackBlock;
  v9[1] = 3221225472;
  void v9[2] = sub_1001F6F84;
  v9[3] = &unk_100A4B8A8;
  uint64_t v11 = v6;
  id v10 = *(id *)(a1 + 40);
  [v5 showAssetWithTransaction:v3 assetID:v7 location:0 options:v8 completion:v9];
}

void sub_1001F6ED4(uint64_t a1)
{
  id v2 = BooksSiriLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 40);
    int v4 = 138477827;
    uint64_t v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Playback tx cancelled for assetID:%{private}@", (uint8_t *)&v4, 0xCu);
  }
}

void sub_1001F6F84(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  uint64_t v5 = BooksSiriLog();
  uint64_t v6 = v5;
  if (v4)
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_ERROR)) {
      sub_1007EFFFC((uint64_t)v4, v6);
    }

    uint64_t v7 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
    if (v7)
    {
      id v8 = objc_alloc((Class)INPlayMediaIntentResponse);
      uint64_t v9 = 6;
LABEL_10:
      id v11 = [v8 initWithCode:v9 userActivity:0];
      v7[2](v7, v11);
    }
  }
  else
  {
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v10 = *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40);
      int v12 = 138477827;
      uint64_t v13 = v10;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Playback succeeded for assetID:%{private}@", (uint8_t *)&v12, 0xCu);
    }

    uint64_t v7 = (void (**)(id, id))objc_retainBlock(*(id *)(a1 + 32));
    if (v7)
    {
      id v8 = objc_alloc((Class)INPlayMediaIntentResponse);
      uint64_t v9 = 4;
      goto LABEL_10;
    }
  }
}

uint64_t sub_1001F70D8(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001F70E8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) identifier];
  id v3 = [v2 length];

  if (v3)
  {
    id v4 = [*(id *)(a1 + 32) identifier];
    uint64_t v9 = +[NSURL URLWithString:v4];

    uint64_t v5 = [v9 bu_assetIDFromURL];
    uint64_t v6 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v7 = *(void **)(v6 + 40);
    *(void *)(v6 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v5;

    (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
  }
  else
  {
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    id v11[2] = sub_1001F7240;
    v11[3] = &unk_100A4B920;
    void v11[4] = *(void *)(a1 + 40);
    *(_OWORD *)uint64_t v10 = *(_OWORD *)(a1 + 48);
    id v8 = v10[0];
    long long v12 = *(_OWORD *)v10;
    +[BKRecentBooksProvider recentBooksAssetIDs:v11];
  }
}

void sub_1001F7240(uint64_t a1, void *a2)
{
  id v3 = a2;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001F7300;
  block[3] = &unk_100A4A3E0;
  uint64_t v4 = *(void *)(a1 + 32);
  id v9 = v3;
  uint64_t v10 = v4;
  long long v7 = *(_OWORD *)(a1 + 40);
  id v5 = (id)v7;
  long long v11 = v7;
  id v6 = v3;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

uint64_t sub_1001F7300(uint64_t a1)
{
  long long v13 = 0u;
  long long v14 = 0u;
  long long v15 = 0u;
  long long v16 = 0u;
  id v2 = *(id *)(a1 + 32);
  id v3 = [v2 countByEnumeratingWithState:&v13 objects:v19 count:16];
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = *(void *)v14;
    while (2)
    {
      for (uint64_t i = 0; i != v4; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v14 != v5) {
          objc_enumerationMutation(v2);
        }
        long long v7 = *(void **)(*((void *)&v13 + 1) + 8 * i);
        id v8 = [*(id *)(a1 + 40) libraryAssetProvider];
        id v9 = [v8 libraryAssetOnMainQueueWithAssetID:v7];

        if ([v9 isAudiobook]
          && (([v9 streamable] & 1) != 0 || objc_msgSend(v9, "isLocal")))
        {
          objc_storeStrong((id *)(*(void *)(*(void *)(a1 + 56) + 8) + 40), v7);
          uint64_t v10 = BooksSiriLog();
          if (os_log_type_enabled(v10, OS_LOG_TYPE_DEFAULT))
          {
            uint64_t v11 = *(void *)(*(void *)(*(void *)(a1 + 56) + 8) + 40);
            *(_DWORD *)buf = 138477827;
            uint64_t v18 = v11;
            _os_log_impl((void *)&_mh_execute_header, v10, OS_LOG_TYPE_DEFAULT, "Current audiobook assetID:%{private}@", buf, 0xCu);
          }

          goto LABEL_15;
        }
      }
      id v4 = [v2 countByEnumeratingWithState:&v13 objects:v19 count:16];
      if (v4) {
        continue;
      }
      break;
    }
  }
LABEL_15:

  return (*(uint64_t (**)(void))(*(void *)(a1 + 48) + 16))();
}

void sub_1001F76D0(id *a1)
{
  id v2 = [a1[4] sceneManager];
  id v3 = a1 + 5;
  id v4 = [a1[5] type];
  unsigned int v5 = [v4 isEqual:@"com.apple.iBooks.openStoreSearch"];

  if (v5)
  {
    id v6 = sub_100045ED0();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
    {
      *(_WORD *)buf = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "Performing shortcut: Search store", buf, 2u);
    }

    v36[0] = _NSConcreteStackBlock;
    v36[1] = 3221225472;
    v36[2] = sub_1001F7BA4;
    v36[3] = &unk_100A4B970;
    id v37 = v2;
    id v38 = a1[6];
    [v37 requestPrimaryScene:v36];

    id v7 = v37;
  }
  else
  {
    id v8 = [*v3 type];
    unsigned int v9 = [v8 isEqual:@"com.apple.iBooks.assetReading"];

    uint64_t v10 = sub_100045ED0();
    uint64_t v11 = v10;
    if (v9)
    {
      if (os_log_type_enabled(v10, OS_LOG_TYPE_INFO))
      {
        *(_WORD *)buf = 0;
        _os_log_impl((void *)&_mh_execute_header, v11, OS_LOG_TYPE_INFO, "Performing shortcut: Read book", buf, 2u);
      }

      objc_opt_class();
      long long v12 = [*v3 userInfo];
      long long v13 = [v12 objectForKeyedSubscript:@"assetID"];
      BUDynamicCast();
      id v7 = (id)objc_claimAutoreleasedReturnValue();

      if ([v7 length])
      {
        v32[0] = _NSConcreteStackBlock;
        v32[1] = 3221225472;
        void v32[2] = sub_1001F7D00;
        v32[3] = &unk_100A4B998;
        id v14 = v2;
        id v33 = v14;
        id v15 = v7;
        id v34 = v15;
        id v35 = a1[6];
        long long v16 = objc_retainBlock(v32);
        int v17 = [v14 sceneInfoPresentingAssetID:v15];
        uint64_t v18 = BCSceneLog();
        BOOL v19 = os_log_type_enabled(v18, OS_LOG_TYPE_INFO);
        if (v17)
        {
          if (v19)
          {
            *(_DWORD *)buf = 138412290;
            id v40 = v15;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Performing shortcut: Requesting scene with assetID=%@", buf, 0xCu);
          }

          v29[0] = _NSConcreteStackBlock;
          v29[1] = 3221225472;
          v29[2] = sub_1001F7E44;
          _OWORD v29[3] = &unk_100A4B9C0;
          unint64_t v20 = (id *)&v31;
          CGFloat v31 = v16;
          id v30 = v17;
          double v21 = v16;
          [v14 requestSceneWithAssetID:v15 completion:v29];
        }
        else
        {
          if (v19)
          {
            *(_WORD *)buf = 0;
            _os_log_impl((void *)&_mh_execute_header, v18, OS_LOG_TYPE_INFO, "Performing shortcut: Requesting primary scene", buf, 2u);
          }

          v27[0] = _NSConcreteStackBlock;
          v27[1] = 3221225472;
          v27[2] = sub_1001F7EA0;
          void v27[3] = &unk_100A4A6F8;
          unint64_t v20 = (id *)&v28;
          double v28 = v16;
          double v26 = v16;
          [v14 requestPrimaryScene:v27];
        }

        CGFloat v25 = v33;
      }
      else
      {
        id v23 = sub_100045ED0();
        if (os_log_type_enabled(v23, OS_LOG_TYPE_ERROR)) {
          sub_1007F0074();
        }

        id v24 = objc_retainBlock(a1[6]);
        CGFloat v25 = v24;
        if (v24) {
          (*((void (**)(id, void))v24 + 2))(v24, 0);
        }
      }
    }
    else
    {
      if (os_log_type_enabled(v10, OS_LOG_TYPE_ERROR)) {
        sub_1007F00A8(a1 + 5, v11);
      }

      id v22 = objc_retainBlock(a1[6]);
      id v7 = v22;
      if (v22) {
        (*((void (**)(id, void))v22 + 2))(v22, 0);
      }
    }
  }
}

void sub_1001F7BA4(uint64_t a1, void *a2)
{
  id v3 = [a2 newShowURLTransaction];
  id v4 = [*(id *)(a1 + 32) bookPresenter];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001F7C88;
  _OWORD v6[3] = &unk_100A45338;
  id v7 = *(id *)(a1 + 32);
  id v8 = v3;
  id v9 = *(id *)(a1 + 40);
  id v5 = v3;
  [v4 closeAllPresentersForSingleSceneWithTransaction:v5 animated:0 completion:v6];
}

void sub_1001F7C88(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) storePresenter];
  [v2 showStoreSearchWithTransaction:*(void *)(a1 + 40)];

  id v3 = objc_retainBlock(*(id *)(a1 + 48));
  if (v3)
  {
    id v4 = v3;
    (*((void (**)(id, uint64_t))v3 + 2))(v3, 1);
    id v3 = v4;
  }
}

void sub_1001F7D00(uint64_t a1, void *a2)
{
  id v3 = [a2 newShowAssetTransaction];
  id v4 = [*(id *)(a1 + 32) bookPresenter];
  uint64_t v5 = *(void *)(a1 + 40);
  v10[0] = @"BKBookPresentingForceLargeCover";
  v10[1] = AEAudiobookOptionsShouldNotAutoplayKey;
  v11[0] = &__kCFBooleanTrue;
  v11[1] = &__kCFBooleanFalse;
  id v6 = +[NSDictionary dictionaryWithObjects:v11 forKeys:v10 count:2];
  [v4 showAssetWithTransaction:v3 assetID:v5 location:0 options:v6 completion:0];

  id v7 = [v3 synchronizer];

  [v7 waitForCompletionWithTimeout:0.5];
  id v8 = objc_retainBlock(*(id *)(a1 + 48));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id, uint64_t))v8 + 2))(v8, 1);
  }
}

void sub_1001F7E44(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 40);
  id v2 = [*(id *)(a1 + 32) sceneController];
  (*(void (**)(uint64_t, id))(v1 + 16))(v1, v2);
}

uint64_t sub_1001F7EA0(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

uint64_t sub_1001F7EB0(void *a1)
{
  if (!a1) {
    return 0xFFFFFFFFLL;
  }
  if ([a1 caseInsensitiveCompare:@"ibooks"]) {
    return 0xFFFFFFFFLL;
  }
  return 3;
}

void sub_1001F7F88(uint64_t a1)
{
  id v2 = BCSignpostLibrary();
  os_signpost_id_t v3 = os_signpost_id_generate(v2);
  id v4 = v2;
  uint64_t v5 = v4;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v4))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v5, OS_SIGNPOST_INTERVAL_BEGIN, v3, "Post-Library Reload", "", buf, 2u);
  }

  id v6 = sub_100045ED0();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_DEFAULT, "Running Post-Library Reload launch jobs", buf, 2u);
  }

  objc_initWeak(&location, *(id *)(a1 + 32));
  id v7 = objc_alloc((Class)BKLibraryAssetModificationDateManager);
  uint64_t v8 = *(void *)(a1 + 40);
  id v9 = [*(id *)(a1 + 32) sharedAnnotationProvider];
  id v10 = [v7 initWithLibraryManager:v8 annotationProvider:v9];
  [*(id *)(a1 + 32) setLibraryAssetModificationDateManager:v10];

  id v11 = [objc_alloc((Class)BKLibraryAssetPostProcessor) initWithLibraryManager:*(void *)(a1 + 40)];
  [*(id *)(a1 + 32) setLibraryAssetPostProcessor:v11];

  dispatch_time_t v12 = dispatch_time(0, 5000000000);
  long long v13 = [*(id *)(a1 + 32) workloopUtilityQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001F86F4;
  block[3] = &unk_100A43F68;
  objc_copyWeak(&v49, &location);
  dispatch_after(v12, v13, block);

  id v14 = [*(id *)(a1 + 32) libraryAssetIsNewManager];
  [v14 updateStaleEpubIDs];

  id v15 = [*(id *)(a1 + 32) libraryAssetIsNewManager];
  [v15 resetIsNewIfNeeded];

  long long v16 = [*(id *)(a1 + 32) libraryAssetIsNewManager];
  [v16 migrateAudiobookProgressIfNeeded];

  [*(id *)(a1 + 32) importMigratedBooks];
  int v17 = [*(id *)(a1 + 32) sharedAnnotationProvider];
  +[BKBookProgressController preWarmWithAnnotationProvider:v17];

  uint64_t v18 = [*(id *)(a1 + 32) mainLibrary];
  BOOL v19 = [*(id *)(a1 + 32) sharedAnnotationProvider];
  +[BKApplicationShortcutController preWarmWithLibrary:v18 annotationProvider:v19];

  unint64_t v20 = [*(id *)(a1 + 32) ubiquityStatusMonitor];
  [v20 restartObserving];

  double v21 = [*(id *)(a1 + 32) liverpoolStatusMonitor];
  [v21 restartObserving];

  id v22 = sub_100045ED0();
  if (os_log_type_enabled(v22, OS_LOG_TYPE_INFO))
  {
    id v23 = [*(id *)(a1 + 32) liverpoolStatusMonitor];
    unsigned int v24 = [v23 isCloudKitEnabled];
    CGFloat v25 = "NO";
    if (v24) {
      CGFloat v25 = "YES";
    }
    *(_DWORD *)buf = 136315138;
    double v52 = v25;
    _os_log_impl((void *)&_mh_execute_header, v22, OS_LOG_TYPE_INFO, "DidFinishUpgrading: Is user opted in: %s", buf, 0xCu);
  }
  [*(id *)(a1 + 32) _startObservingNotifications];
  id v26 = objc_alloc((Class)BUCoalescingCallBlock);
  v46[0] = _NSConcreteStackBlock;
  v46[1] = 3221225472;
  v46[2] = sub_1001F874C;
  _OWORD v46[3] = &unk_100A451B8;
  objc_copyWeak(&v47, &location);
  id v27 = [v26 initWithNotifyBlock:v46 blockDescription:@"BKAppDelegate"];
  uint64_t v28 = *(void *)(a1 + 32);
  CGFloat v29 = *(void **)(v28 + 256);
  *(void *)(v28 + 256) = v27;

  [*(id *)(*(void *)(a1 + 32) + 256) setCoalescingDelay:1.0];
  [*(id *)(a1 + 32) _signalEnableSyncCheck];
  +[BCCloudKitController registerForSecureNotifications];
  uint64_t v30 = *(void *)(a1 + 32);
  CGFloat v31 = +[BKLibraryAssetStatusController sharedController];
  [v31 setStoreDelegate:v30];

  v45[0] = _NSConcreteStackBlock;
  v45[1] = 3221225472;
  void v45[2] = sub_1001F87C8;
  _OWORD v45[3] = &unk_100A43D60;
  _OWORD v45[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v45);
  double v32 = +[BLJaliscoDAAPClient sharedClient];
  [v32 setDelegate:*(void *)(a1 + 32)];
  +[BKLibraryIndexer setup];
  v44[0] = _NSConcreteStackBlock;
  v44[1] = 3221225472;
  v44[2] = sub_1001F8864;
  _OWORD v44[3] = &unk_100A43D60;
  _OWORD v44[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, v44);

  id v33 = +[BKLibraryFileSizeManager sharedInstance];
  [v33 purgeUnusedCacheEntries];

  [*(id *)(a1 + 32) setFinishedAssetRemovalThreshold:86400.0];
  id v34 = +[NSUserDefaults standardUserDefaults];
  unsigned int v35 = [v34 BOOLForKey:@"BKLibraryFinishedAssetForceEarlyThreshold"];

  if (v35) {
    [*(id *)(a1 + 32) setFinishedAssetRemovalThreshold:10.0];
  }
  double v36 = sub_100045ED0();
  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEFAULT))
  {
    [*(id *)(a1 + 32) finishedAssetRemovalThreshold];
    *(_DWORD *)buf = 134217984;
    double v52 = v37;
    _os_log_impl((void *)&_mh_execute_header, v36, OS_LOG_TYPE_DEFAULT, "Finished asset removal threshhold is %f", buf, 0xCu);
  }

  id v38 = [BKFinishedAssetManager alloc];
  double v39 = [*(id *)(a1 + 32) libraryManager];
  id v40 = [(BKFinishedAssetManager *)v38 initWithLibraryManager:v39];
  [*(id *)(a1 + 32) setFinishedAssetManager:v40];

  [*(id *)(a1 + 40) updateMostRecentPurchaseDateCacheFromLibrary];
  double v41 = v5;
  double v42 = v41;
  if (v3 - 1 <= 0xFFFFFFFFFFFFFFFDLL && os_signpost_enabled(v41))
  {
    *(_WORD *)buf = 0;
    _os_signpost_emit_with_name_impl((void *)&_mh_execute_header, v42, OS_SIGNPOST_INTERVAL_END, v3, "Post-Library Reload", "", buf, 2u);
  }

  double v43 = sub_100045ED0();
  if (os_log_type_enabled(v43, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)buf = 0;
    _os_log_impl((void *)&_mh_execute_header, v43, OS_LOG_TYPE_DEFAULT, "Completed all Post-Library Reload launch jobs", buf, 2u);
  }

  objc_destroyWeak(&v47);
  objc_destroyWeak(&v49);
  objc_destroyWeak(&location);
}

void sub_1001F8698(_Unwind_Exception *a1)
{
  objc_destroyWeak(v2);
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v3 - 152));
  _Unwind_Resume(a1);
}

void sub_1001F86F4(uint64_t a1)
{
  id WeakRetained = objc_loadWeakRetained((id *)(a1 + 32));
  uint64_t v1 = [WeakRetained libraryAssetPostProcessor];
  [v1 performPostProcessing];
}

void sub_1001F874C(uint64_t a1, void *a2)
{
  id v2 = (id *)(a1 + 32);
  id v3 = a2;
  id WeakRetained = objc_loadWeakRetained(v2);
  [WeakRetained _updateEnableSync];

  id v6 = objc_retainBlock(v3);
  uint64_t v5 = v6;
  if (v6)
  {
    (*((void (**)(id))v6 + 2))(v6);
    uint64_t v5 = v6;
  }
}

void sub_1001F87C8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) storeController];
  [v2 startAllowingRefreshUpdateCount];

  id v3 = [*(id *)(a1 + 32) storeController];
  [v3 refreshUpdateCountAsync];

  id v4 = [*(id *)(a1 + 32) sceneManager];
  [v4 saveStateClosing:0];

  id v5 = [*(id *)(a1 + 32) bookletMigrationManager];
  [v5 migrateIfNeeded];
}

id sub_1001F8864(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 32);
  id v2 = *(void **)(v1 + 120);
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001F88E8;
  void v4[3] = &unk_100A43D60;
  void v4[4] = v1;
  return [v2 appLaunchCoordinatorPerformWhenLaunched:@"startIndexing library" block:v4];
}

void sub_1001F88E8(uint64_t a1)
{
  dispatch_time_t v2 = dispatch_time(0, 10000000000);
  id v3 = [*(id *)(a1 + 32) workloopUtilityQueue];
  dispatch_after(v2, v3, &stru_100A4B9E0);
}

void sub_1001F8960(id a1)
{
}

void sub_1001F896C(uint64_t a1)
{
}

id sub_1001F8974(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _reloadLibraryForLaunch];
}

void sub_1001F897C(uint64_t a1)
{
  id v4 = (void (**)(void))objc_retainBlock(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40));
  if (v4) {
    v4[2]();
  }
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
}

void sub_1001F89F4(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v2 = sub_100045ED0();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
    {
      *(_WORD *)id v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Library Reload: Launched from CarPlay. Starting library reload right away.", v7, 2u);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    id v3 = objc_retainBlock(*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
    id v4 = v3;
    if (v3) {
      (*((void (**)(id))v3 + 2))(v3);
    }
    uint64_t v5 = *(void *)(*(void *)(a1 + 40) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  }
}

void sub_1001F8AC0(uint64_t a1)
{
  uint64_t v2 = +[UIApplication sharedApplication];
  id v3 = [v2 applicationState];

  id v4 = sub_100045ED0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    int v10 = 134217984;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "Library Reload: applicationState after delay: %ld", (uint8_t *)&v10, 0xCu);
  }

  if (v3 == (id)2 && !*(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24))
  {
    uint64_t v5 = sub_100045ED0();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      LOWORD(v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, "Library Reload: Launched in background. Starting library reload right away.", (uint8_t *)&v10, 2u);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = 1;
    id v6 = objc_retainBlock(*(id *)(*(void *)(*(void *)(a1 + 40) + 8) + 40));
    id v7 = v6;
    if (v6) {
      (*((void (**)(id))v6 + 2))(v6);
    }
    uint64_t v8 = *(void *)(*(void *)(a1 + 40) + 8);
    id v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  }
}

void sub_1001F8C38(uint64_t a1)
{
  if (!*(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24))
  {
    uint64_t v2 = sub_100045ED0();
    if (os_log_type_enabled(v2, OS_LOG_TYPE_FAULT)) {
      sub_1007F0144(a1, v2);
    }

    *(unsigned char *)(*(void *)(*(void *)(a1 + 40) + 8) + 24) = 1;
    id v3 = objc_retainBlock(*(id *)(*(void *)(*(void *)(a1 + 48) + 8) + 40));
    id v4 = v3;
    if (v3) {
      (*((void (**)(id))v3 + 2))(v3);
    }
    uint64_t v5 = *(void *)(*(void *)(a1 + 48) + 8);
    id v6 = *(void **)(v5 + 40);
    *(void *)(v5 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  }
}

void sub_1001F8CE4(uint64_t a1)
{
  id v4 = (void (**)(void))objc_retainBlock(*(id *)(*(void *)(*(void *)(a1 + 32) + 8) + 40));
  if (v4) {
    v4[2]();
  }
  uint64_t v2 = *(void *)(*(void *)(a1 + 32) + 8);
  id v3 = *(void **)(v2 + 40);
  *(void *)(v2 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
}

void sub_1001F8D5C(id a1)
{
  +[AETestDriver prewarm];

  +[BKTestDriver prewarm];
}

void sub_1001F8D94(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) storeController];
  [v1 downloadQueueReload];
}

uint64_t sub_1001F9004(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001F9194(_Unwind_Exception *a1)
{
  objc_destroyWeak(v1);
  objc_destroyWeak((id *)(v2 - 56));
  _Unwind_Resume(a1);
}

void sub_1001F91B0(id *a1)
{
  id WeakRetained = objc_loadWeakRetained(a1 + 6);
  if ([a1[4] welcomeScreenShouldShow]
    && ([WeakRetained appLaunchCoordinator],
        id v3 = objc_claimAutoreleasedReturnValue(),
        unsigned int v4 = [v3 appLaunchCoordinatorIsConditionSatisfied:6],
        v3,
        v4))
  {
    uint64_t v5 = [WeakRetained sceneManager];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001F92D4;
    v8[3] = &unk_100A4B970;
    id v9 = a1[4];
    id v10 = a1[5];
    [v5 requestPrimaryScene:v8];
  }
  else
  {
    id v6 = objc_retainBlock(a1[5]);
    id v7 = v6;
    if (v6) {
      (*((void (**)(id))v6 + 2))(v6);
    }
  }
}

void sub_1001F92D4(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  BUDynamicCast();
  id v4 = (id)objc_claimAutoreleasedReturnValue();

  [v4 _showWelcomeScreen:*(void *)(a1 + 32) completion:*(void *)(a1 + 40)];
}

uint64_t sub_1001F9350(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001F9414(uint64_t a1)
{
  id v1 = [*(id *)(a1 + 32) ubiquitousDocumentsController];
  [v1 migrateBooksToUbiquityIfNeededWithCompletion:0];
}

void sub_1001F95C0(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) libraryAssetProvider];
  [v2 clearAgingDocumentInbox];

  [*(id *)(a1 + 32) saveStateClosing:1];
  id v3 = +[BCBackgroundTaskAssertion sharedAssertion];
  [v3 releaseAssertionForIdentifier:*(void *)(a1 + 40)];
}

void sub_1001F9640(id a1)
{
  id v1 = sub_100045ED0();
  if (os_log_type_enabled(v1, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)uint64_t v2 = 0;
    _os_log_impl((void *)&_mh_execute_header, v1, OS_LOG_TYPE_DEFAULT, "Updated BDSJaliscoDAAPClient on app launch", v2, 2u);
  }
}

void sub_1001F9738(id a1, int64_t a2, NSError *a3)
{
  id v4 = a3;
  uint64_t v5 = sub_100045ED0();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v6)
    {
      int v8 = 138412290;
      int64_t v9 = (int64_t)v4;
      id v7 = "Error flushing Jet events: %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v8, 0xCu);
    }
  }
  else if (v6)
  {
    int v8 = 134217984;
    int64_t v9 = a2;
    id v7 = "Flushed %ld Jet events";
    goto LABEL_6;
  }
}

id sub_1001F9900(uint64_t a1)
{
  return _[*(id *)(a1 + 32) _applicationWillTerminate:*(void *)(a1 + 40)];
}

void sub_1001F9A4C(id a1, int64_t a2, NSError *a3)
{
  id v4 = a3;
  uint64_t v5 = sub_100045ED0();
  BOOL v6 = os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT);
  if (v4)
  {
    if (v6)
    {
      int v8 = 138412290;
      int64_t v9 = (int64_t)v4;
      id v7 = "Error flushing Jet events: %@";
LABEL_6:
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v7, (uint8_t *)&v8, 0xCu);
    }
  }
  else if (v6)
  {
    int v8 = 134217984;
    int64_t v9 = a2;
    id v7 = "Flushed %ld Jet events";
    goto LABEL_6;
  }
}

void sub_1001F9B30(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  BUDynamicCast();
  id v7 = (id)objc_claimAutoreleasedReturnValue();

  if (v7)
  {
    id v4 = [v7 analyticsManager];
    [v4 appWillTerminate];

    uint64_t v5 = [v7 analyticsManager];
    BOOL v6 = [v5 analyticsController];
    [v6 waitForSessionEnd:*(double *)(a1 + 32)];
  }
}

void sub_1001F9BEC(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) appLaunchCoordinator];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001F9C88;
  void v3[3] = &unk_100A44268;
  void v3[4] = *(void *)(a1 + 32);
  [v2 appLaunchCoordinatorOnConditionMask:1089 blockID:@"_signalExtendedLaunchComplete" performBlock:v3];
}

id sub_1001F9C88(uint64_t a1)
{
  return [*(id *)(a1 + 32) _signalExtendedLaunchComplete];
}

id sub_1001F9F04(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 120) signalConditionSatisfied:1];
}

void sub_1001F9FB4(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) appLaunchCoordinator];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001FA060;
  void v4[3] = &unk_100A43DD8;
  id v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 appLaunchCoordinatorPerformWhenLaunched:@"presentBookMigrationNotice" block:v4];
}

void sub_1001FA060(uint64_t a1)
{
  uint64_t v2 = [*(id *)(a1 + 32) sceneManager];
  id v3 = [v2 currentSceneController];

  id v4 = [v3 newTransactionWithName:BCTransactionNameShowHUD];
  id v5 = v4;
  if (v4)
  {
    uint64_t v7 = BCTransactionOptionsTransactionKey;
    id v8 = v4;
    BOOL v6 = +[NSDictionary dictionaryWithObjects:&v8 forKeys:&v7 count:1];
  }
  else
  {
    BOOL v6 = &__NSDictionary0__struct;
  }
  +[BSUINoticeViewController presentNoticeForMigratingBooksCollection:*(void *)(a1 + 40) options:v6];
}

id sub_1001FA1C8(uint64_t a1)
{
  id result = [*(id *)(*(void *)(a1 + 32) + 120) appLaunchCoordinatorIsConditionSatisfied:13];
  if ((result & 1) == 0)
  {
    id v3 = *(void **)(*(void *)(a1 + 32) + 120);
    return [v3 signalConditionSatisfied:13];
  }
  return result;
}

id sub_1001FA338(uint64_t a1)
{
  return [*(id *)(a1 + 32) _iCloudStatusChanged];
}

void sub_1001FA6DC()
{
  v0 = +[UIApplication sharedApplication];
  id v2 = [v0 delegate];

  id v1 = [v2 airTrafficController];
  [v1 airTrafficStarted];
}

void sub_1001FA750()
{
  v0 = +[UIApplication sharedApplication];
  id v2 = [v0 delegate];

  id v1 = [v2 airTrafficController];
  [v1 airTrafficEnded];
}

void sub_1001FA7C4()
{
  v0 = +[UIApplication sharedApplication];
  id v2 = [v0 delegate];

  id v1 = [v2 libraryAssetProvider];
  [v1 managedBooksDidChange];
}

id sub_1001FA838(uint64_t a1)
{
  id v2 = +[NSNotificationCenter defaultCenter];
  [v2 addObserver:*(void *)(a1 + 32) selector:"networkReachabilityChanged:" name:@"kNetworkReachabilityChangedNotification" object:0];

  id v3 = [*(id *)(a1 + 32) networkReachability];
  [v3 startNotifier];

  return +[BCCloudKitDatabaseController startInternetConnectionReachabilityNotifier];
}

id sub_1001FA8BC(uint64_t a1)
{
  id v2 = sub_100045ED0();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Received tcc change notification.", v4, 2u);
  }

  return [*(id *)(a1 + 32) _signalEnableSyncCheck];
}

void sub_1001FA930(id a1)
{
  id v1 = +[BKAudiobookPlayerMuxingObserver sharedInstance];
}

uint64_t sub_1001FA958(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001FACA4(id a1, UIAlertAction *a2)
{
  id v2 = a2;
  exit(1);
}

void sub_1001FAD74(uint64_t a1)
{
  id v2 = +[CKNotification notificationFromRemoteNotificationDictionary:*(void *)(a1 + 32)];
  id v3 = +[BCCloudKitController instanceForCKNotification:v2];
  id v4 = sub_100045ED0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [v2 containerIdentifier];
    int v6 = 138543362;
    uint64_t v7 = v5;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "application:didReceiveRemoteNotification: for container %{public}@", (uint8_t *)&v6, 0xCu);
  }
  [v3 handleRemoteNotification:*(void *)(a1 + 32)];
}

id sub_1001FAEFC(uint64_t a1)
{
  return [*(id *)(a1 + 32) _signalEnableSyncCheck];
}

id *sub_1001FB050(id *result, int a2)
{
  if ((a2 & 0xFFFFFFFD) == 1) {
    return (id *)[result[4] mergeSyncSidecar];
  }
  return result;
}

uint64_t sub_1001FB068(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001FB100(uint64_t a1)
{
  id v5 = objc_alloc_init((Class)NSOperationQueue);
  [v5 setMaxConcurrentOperationCount:1];
  [v5 setQualityOfService:17];
  id v2 = [BKLibraryImportMigratedBooksOperation alloc];
  id v3 = [*(id *)(a1 + 32) libraryAssetProvider];
  id v4 = [(BKLibraryImportMigratedBooksOperation *)v2 initWithLibraryAssetProvider:v3];

  [v5 addOperation:v4];
}

void sub_1001FB2E8(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va, a11);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1001FB300(uint64_t a1, void *a2)
{
  id v3 = *(void **)(a1 + 32);
  id v4 = a2;
  id v5 = [v3 mainLibrary];
  int v6 = [v5 libraryAssetWithAssetID:*(void *)(a1 + 40) inManagedObjectContext:v4];

  if (v6)
  {
    uint64_t v7 = [*(id *)(a1 + 32) mainLibrary];
    v8[0] = _NSConcreteStackBlock;
    v8[1] = 3221225472;
    void v8[2] = sub_1001FB41C;
    v8[3] = &unk_100A4BBC0;
    uint64_t v12 = *(void *)(a1 + 64);
    id v9 = *(id *)(a1 + 48);
    id v10 = *(id *)(a1 + 56);
    id v11 = *(id *)(a1 + 40);
    [v7 assetForLibraryAsset:v6 completion:v8];
  }
}

void sub_1001FB41C(void *a1, void *a2)
{
  id v3 = [a2 url];
  if (v3)
  {
    uint64_t v7 = v3;
    id v4 = +[AEPluginRegistry sharedInstance];
    id v5 = [v4 pluginForURL:v7];

    if (v5)
    {
      int v6 = [v5 helperForURL:v7 withOptions:0];
      if (objc_opt_respondsToSelector()) {
        *(unsigned char *)(*(void *)(a1[7] + 8) + 24) = [v6 acknowledgeAnnotationProvider:a1[4] willMergeAnnotationsWithAssertVersionMismatch:a1[5] assetID:a1[6] assetURL:v7];
      }
    }
    id v3 = v7;
  }
}

void sub_1001FB67C(uint64_t a1)
{
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001FB6F4;
  block[3] = &unk_100A43D60;
  void block[4] = *(void *)(a1 + 32);
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1001FB6F4(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) appLaunchCoordinator];
  v3[0] = _NSConcreteStackBlock;
  v3[1] = 3221225472;
  v3[2] = sub_1001FB78C;
  void v3[3] = &unk_100A43D60;
  void v3[4] = *(void *)(a1 + 32);
  [v2 appLaunchCoordinatorPerformWhenLaunched:@"reload Ubiquity Data Sources" block:v3];
}

void sub_1001FB78C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) ubiquityStatusMonitor];
  unsigned int v3 = [v2 isICloudDriveEnabled];

  id v4 = *(void **)(a1 + 32);
  if (v3)
  {
    id v5 = [v4 sceneManager];
    int v6 = [v5 criticalAlertCoordinator];
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_1001FB878;
    void v7[3] = &unk_100A43D60;
    void v7[4] = *(void *)(a1 + 32);
    [v6 invokeAfterCriticalAlertDismisses:v7];
  }
  else
  {
    [v4 _reloadUbiquityDataSources];
  }
}

id sub_1001FB878(uint64_t a1)
{
  return [*(id *)(a1 + 32) _reloadUbiquityDataSources];
}

intptr_t sub_1001FB880(uint64_t a1)
{
  id v2 = BDSCloudKitLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    *(_WORD *)id v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Deleted local copies of cloud data in response to logout.", v4, 2u);
  }

  [*(id *)(a1 + 32) acknowledgeiCloudIdentity];
  return dispatch_semaphore_signal(*(dispatch_semaphore_t *)(a1 + 40));
}

void sub_1001FBB60(_Unwind_Exception *a1)
{
  _Block_object_dispose((const void *)(v1 - 96), 8);
  _Unwind_Resume(a1);
}

void sub_1001FBB80(uint64_t a1)
{
  if (*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) != UIBackgroundTaskInvalid)
  {
    id v2 = +[UIApplication sharedApplication];
    [v2 endBackgroundTask:*(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24)];

    *(void *)(*(void *)(*(void *)(a1 + 32) + 8) + 24) = UIBackgroundTaskInvalid;
  }
}

uint64_t sub_1001FBBFC(uint64_t a1)
{
  return (*(uint64_t (**)(void))(*(void *)(a1 + 32) + 16))();
}

void sub_1001FBC0C(void *a1)
{
  id v2 = [[BKDatabaseBackupFileManager alloc] initWithLibraryManager:a1[4] annotationProvider:a1[5]];
  [(BKDatabaseBackupFileManager *)v2 rewriteBackupFileWithCompletionBlock:a1[6]];
}

void sub_1001FBF54(id a1, BKLibraryManagedObjectContext *a2)
{
}

void sub_1001FBF64(uint64_t a1)
{
  id v2 = +[BDSJaliscoDAAPClient sharedClient];
  v4[0] = _NSConcreteStackBlock;
  v4[1] = 3221225472;
  v4[2] = sub_1001FC00C;
  void v4[3] = &unk_100A4A6D0;
  unsigned int v3 = *(void **)(a1 + 40);
  void v4[4] = *(void *)(a1 + 32);
  id v5 = v3;
  [v2 resetStaleJaliscoDatabaseWithCompletion:v4];
}

void sub_1001FC00C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = sub_100045ED0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    *(_DWORD *)buf = 138412290;
    id v9 = v3;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "App finished resetStaleJaliscoDatabase after clientDetectedStoreChangeAndAccountChange error:%@", buf, 0xCu);
  }

  [*(id *)(a1 + 32) _logIfError:v3 operation:@"deleting jalisco store after clientDetectedStoreChangeAndAccountChange"];
  id v5 = +[BLJaliscoDAAPClient sharedClient];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_1001FC154;
  _OWORD v6[3] = &unk_100A44268;
  id v7 = *(id *)(a1 + 40);
  [v5 refreshStoreWithCompletion:v6];
}

void sub_1001FC154(uint64_t a1, int a2)
{
  id v4 = sub_100045ED0();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    v7[0] = 67109120;
    v7[1] = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "refreshStoreWithCompletion : %{BOOL}d", (uint8_t *)v7, 8u);
  }

  id v5 = +[BDSJaliscoDAAPClient sharedClient];
  [v5 updatePolitelyAfterSignOut:1 reason:6 completion:&stru_100A4BC48];

  int v6 = +[BKLibraryDataSourceJaliscoDAAPClientProxy sharedproxy];
  [v6 clientDetectedStoreChange:*(void *)(a1 + 32)];
}

void sub_1001FC250(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = sub_100045ED0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "App finished updatePolitelyAfterSignOut success:%{BOOL}d", (uint8_t *)v4, 8u);
  }
}

void sub_1001FC458(id a1, BKLibraryManagedObjectContext *a2)
{
}

void sub_1001FC468(uint64_t a1)
{
  BOOL v2 = +[BDSJaliscoDAAPClient sharedClient];
  [v2 updatePolitelyAfterSignIn:1 reason:6 completion:&stru_100A4BC88];

  id v3 = +[BKLibraryDataSourceJaliscoDAAPClientProxy sharedproxy];
  [v3 clientDetectedStoreChange:*(void *)(a1 + 32)];
}

void sub_1001FC4EC(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = sub_100045ED0();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "App finished updatePolitelyAfterSignIn success:%{BOOL}d", (uint8_t *)v4, 8u);
  }
}

void sub_1001FC668(uint64_t a1)
{
  BOOL v2 = +[NSBundle mainBundle];
  id v3 = [v2 localizedStringForKey:@"Update Required" value:&stru_100A70340 table:0];
  id v4 = +[NSBundle mainBundle];
  id v5 = [v4 localizedStringForKey:@"To continue to see purchases from other devices available for download in your library, please update to the latest version of Apple Books.", &stru_100A70340, 0 value table];
  id v11 = +[UIAlertController alertControllerWithTitle:v3 message:v5 preferredStyle:1];

  int v6 = +[NSBundle mainBundle];
  id v7 = [v6 localizedStringForKey:@"OK" value:&stru_100A70340 table:0];
  id v8 = +[UIAlertAction actionWithTitle:v7 style:1 handler:0];
  [v11 addAction:v8];

  id v9 = [*(id *)(a1 + 32) sceneManager];
  id v10 = [v9 currentSceneController];
  [v10 presentViewController:v11 animated:1 completion:0];
}

void sub_1001FCC2C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19, uint64_t a20,uint64_t a21,uint64_t a22,uint64_t a23,uint64_t a24,uint64_t a25,uint64_t a26,uint64_t a27,uint64_t a28,uint64_t a29,uint64_t a30,uint64_t a31,char a32)
{
}

void sub_1001FCC54(uint64_t a1, void *a2)
{
  id v3 = *(NSObject **)(a1 + 32);
  id v4 = a2;
  dispatch_group_enter(v3);
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1001FCD1C;
  v8[3] = &unk_100A4BCD8;
  id v5 = *(id *)(a1 + 40);
  uint64_t v6 = *(void *)(a1 + 48);
  uint64_t v7 = *(void *)(a1 + 56);
  id v9 = v5;
  uint64_t v10 = v6;
  uint64_t v12 = v7;
  id v13 = v4;
  id v11 = *(id *)(a1 + 32);
  [v4 deleteCloudDataWithCompletion:v8];
}

void sub_1001FCD1C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001FCDE8;
  block[3] = &unk_100A4BCB0;
  id v5 = *(NSObject **)(a1 + 32);
  void block[4] = *(void *)(a1 + 40);
  id v10 = v4;
  uint64_t v12 = *(void *)(a1 + 64);
  long long v8 = *(_OWORD *)(a1 + 48);
  id v6 = (id)v8;
  long long v11 = v8;
  id v7 = v4;
  dispatch_async(v5, block);
}

void sub_1001FCDE8(uint64_t a1)
{
  BOOL v2 = *(void **)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  id v4 = NSStringFromClass(*(Class *)(a1 + 64));
  id v5 = +[NSString stringWithFormat:@"deleting %@ core data stores", v4];
  [v2 _logIfError:v3 operation:v5];

  id v6 = *(void **)(a1 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v9 = *(void *)(v7 + 40);
    long long v8 = (id *)(v7 + 40);
    if (!v9) {
      objc_storeStrong(v8, v6);
    }
  }
  id v10 = *(NSObject **)(a1 + 48);

  dispatch_group_leave(v10);
}

void sub_1001FCEA0(uint64_t a1, void *a2)
{
  id v3 = a2;
  dispatch_group_enter(*(dispatch_group_t *)(a1 + 32));
  v8[0] = _NSConcreteStackBlock;
  v8[1] = 3221225472;
  void v8[2] = sub_1001FCF6C;
  v8[3] = &unk_100A4BD50;
  id v4 = *(id *)(a1 + 40);
  uint64_t v5 = *(void *)(a1 + 48);
  uint64_t v6 = *(void *)(a1 + 56);
  id v9 = v4;
  uint64_t v10 = v5;
  id v11 = v3;
  uint64_t v13 = v6;
  id v12 = *(id *)(a1 + 32);
  id v7 = v3;
  [v7 deleteCloudDataWithCompletion:v8];
}

void sub_1001FCF6C(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1001FD044;
  block[3] = &unk_100A4BD28;
  uint64_t v5 = *(NSObject **)(a1 + 32);
  uint64_t v6 = *(void **)(a1 + 48);
  void block[4] = *(void *)(a1 + 40);
  id v11 = v4;
  id v12 = v6;
  long long v9 = *(_OWORD *)(a1 + 56);
  id v7 = (id)v9;
  long long v13 = v9;
  id v8 = v4;
  dispatch_async(v5, block);
}

void sub_1001FD044(void *a1)
{
  BOOL v2 = (void *)a1[4];
  uint64_t v3 = a1[5];
  id v4 = (objc_class *)objc_opt_class();
  uint64_t v5 = NSStringFromClass(v4);
  uint64_t v6 = +[NSString stringWithFormat:@"deleting %@ core data stores", v5];
  [v2 _logIfError:v3 operation:v6];

  id v7 = (void *)a1[5];
  if (v7)
  {
    uint64_t v8 = *(void *)(a1[8] + 8);
    uint64_t v10 = *(void *)(v8 + 40);
    long long v9 = (id *)(v8 + 40);
    if (!v10) {
      objc_storeStrong(v9, v7);
    }
  }
  id v11 = a1[7];

  dispatch_group_leave(v11);
}

void sub_1001FD100(uint64_t a1)
{
  id v2 = objc_retainBlock(*(id *)(a1 + 32));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, BOOL))v2 + 2))(v2, *(void *)(*(void *)(*(void *)(a1 + 40) + 8) + 40) == 0);
    id v2 = v3;
  }
}

void sub_1001FE17C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [*(id *)(a1 + 32) assetCache];
  uint64_t v5 = [v4 assetFromCacheID:v3];

  if (v5)
  {
    uint64_t v6 = BKLibraryDataSourceMediaLibraryLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_1007F05D8((uint64_t)v3, v5);
    }

    id v7 = [*(id *)(a1 + 32) removed];
    [v7 setObject:v5 forKeyedSubscript:v3];

    uint64_t v8 = [*(id *)(a1 + 32) updated];
    [v8 setObject:0 forKeyedSubscript:v3];
  }
  long long v9 = [*(id *)(a1 + 32) assetCache];
  [v9 uncacheAsset:v5 cacheID:v3];
}

void sub_1001FE71C(uint64_t a1)
{
  id v2 = +[NSMutableArray array];
  [*(id *)(a1 + 32) q_willJoinPlistContentsOnFetch];
  id v3 = *(void **)(a1 + 32);
  id v54 = 0;
  id v4 = [v3 q_plistContentsArrayWithError:&v54];
  id v5 = v54;
  [*(id *)(a1 + 32) q_didJoinPlistContentsOnFetch];
  if (v5)
  {
    [*(id *)(a1 + 32) q_clearAssetCaches];
    uint64_t v6 = BKLibraryLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_DEBUG)) {
      sub_1007F0724(a1 + 32);
    }

    id v7 = objc_retainBlock(*(id *)(a1 + 40));
    id v8 = v7;
    if (v7) {
      (*((void (**)(id, void, id))v7 + 2))(v7, 0, v5);
    }
    goto LABEL_34;
  }
  double v45 = (id *)(a1 + 32);
  uint64_t v41 = a1;
  id v9 = [objc_alloc((Class)NSMutableDictionary) initWithCapacity:[v4 count]];
  id v44 = [objc_alloc((Class)NSMutableArray) initWithCapacity:[v4 count]];
  long long v50 = 0u;
  long long v51 = 0u;
  long long v52 = 0u;
  long long v53 = 0u;
  double v42 = v4;
  id v10 = v4;
  id v11 = [v10 countByEnumeratingWithState:&v50 objects:v56 count:16];
  if (!v11) {
    goto LABEL_18;
  }
  id v12 = v11;
  uint64_t v13 = *(void *)v51;
  do
  {
    for (uint64_t i = 0; i != v12; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v51 != v13) {
        objc_enumerationMutation(v10);
      }
      uint64_t v15 = *(void *)(*((void *)&v50 + 1) + 8 * i);
      id v16 = +[BKPlistAsset newBlankAsset];
      [*v45 _setPropertiesOfAsset:v16 withPlistEntry:v15];
      [v2 addObject:v16];
      int v17 = [v16 assetID];
      id v18 = [v17 length];

      if (v18)
      {
        BOOL v19 = [v16 assetID];
        [v9 setObject:v16 forKey:v19];

        uint64_t v20 = [v16 assetID];
      }
      else
      {
        double v21 = [v16 temporaryAssetID];
        id v22 = [v21 length];

        if (!v22) {
          goto LABEL_16;
        }
        id v23 = [v16 temporaryAssetID];
        [v9 setObject:v16 forKey:v23];

        uint64_t v20 = [v16 temporaryAssetID];
      }
      unsigned int v24 = (void *)v20;
      [v44 addObject:v20];

LABEL_16:
    }
    id v12 = [v10 countByEnumeratingWithState:&v50 objects:v56 count:16];
  }
  while (v12);
LABEL_18:

  double v43 = v2;
  [*v45 q_processAssetStateChanges:v2];
  CGFloat v25 = [*v45 assetCache];
  id v26 = [*v45 assetCacheByTemporaryAssetID];
  [*v45 q_clearAssetCaches];
  long long v48 = 0u;
  long long v49 = 0u;
  long long v46 = 0u;
  long long v47 = 0u;
  id v8 = v9;
  id v27 = [v8 countByEnumeratingWithState:&v46 objects:v55 count:16];
  if (v27)
  {
    id v28 = v27;
    uint64_t v29 = *(void *)v47;
    do
    {
      for (j = 0; j != v28; j = (char *)j + 1)
      {
        if (*(void *)v47 != v29) {
          objc_enumerationMutation(v8);
        }
        uint64_t v31 = *(void *)(*((void *)&v46 + 1) + 8 * (void)j);
        double v32 = [v8 objectForKeyedSubscript:v31, v41];
        id v33 = [v32 assetID];
        id v34 = [v33 length];

        if (v34) {
          [v25 setObject:v32 forKey:v31];
        }
        unsigned int v35 = [v32 temporaryAssetID];
        if ([v35 length]) {
          [v26 setObject:v32 forKey:v35];
        }
      }
      id v28 = [v8 countByEnumeratingWithState:&v46 objects:v55 count:16];
    }
    while (v28);
  }

  double v36 = BKLibraryLog();
  if (os_log_type_enabled(v36, OS_LOG_TYPE_DEBUG)) {
    sub_1007F067C();
  }

  id v2 = v43;
  id v37 = [v43 valueForKey:@"assetID"];
  id v38 = [v37 bu_arrayByRemovingNSNulls];

  [*(id *)(v41 + 32) _addAssetIDsToCacheManager:v43];
  id v39 = objc_retainBlock(*(id *)(v41 + 40));
  id v40 = v39;
  id v5 = 0;
  if (v39) {
    (*((void (**)(id, void *, void))v39 + 2))(v39, v38, 0);
  }

  id v4 = v42;
LABEL_34:
}

void sub_1001FF184(id *a1)
{
  id v85 = objc_alloc_init((Class)NSMutableSet);
  id v2 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [a1[4] count]);
  long long v99 = 0u;
  long long v100 = 0u;
  long long v101 = 0u;
  long long v102 = 0u;
  id v3 = a1[4];
  id v4 = [v3 countByEnumeratingWithState:&v99 objects:v106 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v100;
    do
    {
      id v7 = 0;
      do
      {
        if (*(void *)v100 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v99 + 1) + 8 * (void)v7);
        id v9 = [a1[5] assetCache];
        uint64_t v10 = [v9 objectForKey:v8];
        if (v10)
        {
          id v11 = (void *)v10;

LABEL_9:
          [v2 addObject:v11];

          goto LABEL_10;
        }
        id v12 = [a1[5] assetCacheByTemporaryAssetID];
        id v11 = [v12 objectForKey:v8];

        if (v11) {
          goto LABEL_9;
        }
        uint64_t v13 = +[NSNull null];
        [v2 addObject:v13];

        [v85 addObject:v8];
LABEL_10:
        id v7 = (char *)v7 + 1;
      }
      while (v5 != v7);
      id v14 = [v3 countByEnumeratingWithState:&v99 objects:v106 count:16];
      id v5 = v14;
    }
    while (v14);
  }

  uint64_t v15 = v85;
  if (![v85 count])
  {
    id v22 = BKLibraryLog();
    if (os_log_type_enabled(v22, OS_LOG_TYPE_DEBUG)) {
      sub_1007F07A8();
    }

    kdebug_trace();
    id v23 = objc_retainBlock(a1[6]);
    id v18 = v23;
    if (v23) {
      (*((void (**)(id, void *, void))v23 + 2))(v23, v2, 0);
    }
    goto LABEL_78;
  }
  id v16 = a1[5];
  uint8_t v77 = a1 + 5;
  id v98 = 0;
  int v17 = [v16 q_plistContentsArrayWithError:&v98];
  id v18 = v98;
  if (v18)
  {
    BOOL v19 = BKLibraryLog();
    if (os_log_type_enabled(v19, OS_LOG_TYPE_DEBUG)) {
      sub_1007F0914((uint64_t)v77);
    }

    kdebug_trace();
    id v20 = objc_retainBlock(a1[6]);
    id v21 = v20;
    if (v20) {
      (*((void (**)(id, void, id))v20 + 2))(v20, 0, v18);
    }
    goto LABEL_77;
  }
  long long v80 = objc_opt_new();
  unsigned int v24 = v85;
  uint64_t v78 = objc_opt_new();
  long long v94 = 0u;
  long long v95 = 0u;
  long long v96 = 0u;
  long long v97 = 0u;
  id v75 = v17;
  id obj = v17;
  CGFloat v25 = a1 + 5;
  id v83 = [obj countByEnumeratingWithState:&v94 objects:v105 count:16];
  if (!v83) {
    goto LABEL_50;
  }
  long long v81 = v2;
  uint64_t v82 = *(void *)v95;
  id v26 = off_100A3C000;
  do
  {
    for (uint64_t i = 0; i != v83; uint64_t i = (char *)i + 1)
    {
      if (*(void *)v95 != v82) {
        objc_enumerationMutation(obj);
      }
      uint64_t v28 = *(void *)(*((void *)&v94 + 1) + 8 * i);
      unsigned __int8 v29 = [*v25 _isSupplementalPDFFromPlistEntry:v28 v75];
      uint64_t v30 = [(__objc2_class *)v26[153] storeIdFromPlistEntry:v28];
      uint64_t v31 = v30;
      if (!v30 || (v29 & 1) != 0)
      {
        id v32 = [(__objc2_class *)v26[153] uniqueIdFromPlistEntry:v28];
      }
      else
      {
        id v32 = v30;
      }
      id v33 = v32;
      id v34 = v26;
      unsigned int v35 = [(__objc2_class *)v26[153] temporaryItemIdentifierFromPlistEntry:v28];
      if (([v24 containsObject:v33] & 1) == 0
        && ![v24 containsObject:v35])
      {
        id v36 = +[BKPlistAsset newBlankAsset];
        [*v25 _setPropertiesOfAsset:v36 withPlistEntry:v28];
        uint64_t v39 = [v36 assetID];
        if (v39)
        {
          id v40 = (void *)v39;
          uint64_t v41 = [v36 assetID];
          unsigned int v42 = [v85 containsObject:v41];

          unsigned int v24 = v85;
          if (v42)
          {
            double v43 = [v36 assetID];
            [v80 setObject:v36 forKey:v43];
            goto LABEL_45;
          }
        }
        uint64_t v44 = [v36 temporaryAssetID];
        if (v44)
        {
          double v45 = (void *)v44;
          uint64_t v46 = [v36 temporaryAssetID];
          long long v47 = v24;
          long long v48 = (void *)v46;
          unsigned int v49 = [v47 containsObject:v46];

          if (v49)
          {
            double v43 = [v36 temporaryAssetID];
            [v78 setObject:v36 forKey:v43];
            unsigned int v24 = v85;
LABEL_45:
          }
          else
          {
            unsigned int v24 = v85;
          }
        }
        CGFloat v25 = a1 + 5;
        goto LABEL_48;
      }
      id v36 = +[BKPlistAsset newBlankAsset];
      [*v25 _setPropertiesOfAsset:v36 withPlistEntry:v28];
      id v37 = [v36 assetID];

      if (v37)
      {
        id v38 = [v36 assetID];
        [v80 setObject:v36 forKey:v38];
      }
      if (v35) {
        [v78 setObject:v36 forKey:v35];
      }
LABEL_48:

      id v26 = v34;
      id v2 = v81;
    }
    id v83 = [obj countByEnumeratingWithState:&v94 objects:v105 count:16];
  }
  while (v83);
LABEL_50:

  long long v50 = (char *)[a1[4] count];
  if (v50)
  {
    long long v51 = v50;
    for (j = 0; j != v51; ++j)
    {
      long long v53 = [v2 objectAtIndexedSubscript:j];
      id v54 = +[NSNull null];

      if (v53 == v54)
      {
        double v55 = [a1[4] objectAtIndexedSubscript:j];
        double v56 = [v80 objectForKeyedSubscript:v55];
        if (v56
          || ([v78 objectForKeyedSubscript:v55],
              (double v56 = objc_claimAutoreleasedReturnValue()) != 0))
        {
          [v2 setObject:v56 atIndexedSubscript:j];
        }
      }
    }
  }
  uint64_t v57 = [*v77 assetCache];
  long long v90 = 0u;
  long long v91 = 0u;
  long long v92 = 0u;
  long long v93 = 0u;
  id v21 = v80;
  id v58 = [v21 countByEnumeratingWithState:&v90 objects:v104 count:16];
  if (v58)
  {
    id v59 = v58;
    uint64_t v60 = *(void *)v91;
    do
    {
      for (k = 0; k != v59; k = (char *)k + 1)
      {
        if (*(void *)v91 != v60) {
          objc_enumerationMutation(v21);
        }
        uint64_t v62 = *(void *)(*((void *)&v90 + 1) + 8 * (void)k);
        CGAffineTransform v63 = [v21 objectForKeyedSubscript:v62];
        [v57 setObject:v63 forKey:v62];
      }
      id v59 = [v21 countByEnumeratingWithState:&v90 objects:v104 count:16];
    }
    while (v59);
  }
  id v84 = v57;

  double v64 = [*v77 assetCacheByTemporaryAssetID];
  long long v86 = 0u;
  long long v87 = 0u;
  long long v88 = 0u;
  long long v89 = 0u;
  id v65 = v78;
  id v66 = [v65 countByEnumeratingWithState:&v86 objects:v103 count:16];
  if (v66)
  {
    id v67 = v66;
    uint64_t v68 = *(void *)v87;
    do
    {
      for (m = 0; m != v67; m = (char *)m + 1)
      {
        if (*(void *)v87 != v68) {
          objc_enumerationMutation(v65);
        }
        uint64_t v70 = *(void *)(*((void *)&v86 + 1) + 8 * (void)m);
        uint64_t v71 = [v65 objectForKeyedSubscript:v70];
        [v64 setObject:v71 forKey:v70];
      }
      id v67 = [v65 countByEnumeratingWithState:&v86 objects:v103 count:16];
    }
    while (v67);
  }

  [*v77 q_processAssetStateChanges:v2];
  BOOL v72 = BKLibraryLog();
  if (os_log_type_enabled(v72, OS_LOG_TYPE_DEBUG)) {
    sub_1007F086C();
  }

  kdebug_trace();
  id v73 = objc_retainBlock(a1[6]);
  long long v74 = v73;
  uint64_t v15 = v85;
  int v17 = v76;
  if (v73) {
    (*((void (**)(id, void *, void))v73 + 2))(v73, v2, 0);
  }

  id v18 = 0;
LABEL_77:

LABEL_78:
}

void sub_1001FFC48(id *a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = objc_retainBlock(a1[7]);
  uint64_t v8 = v7;
  if (v7) {
    (*((void (**)(id, id, void, id))v7 + 2))(v7, v5, 0, v6);
  }

  if (a1[4])
  {
    id v9 = [a1[5] itunesuQueue];
    v12[0] = _NSConcreteStackBlock;
    v12[1] = 3221225472;
    _OWORD v12[2] = sub_1001FFD6C;
    v12[3] = &unk_100A44610;
    id v13 = a1[4];
    id v14 = a1[6];
    id v10 = v5;
    id v11 = a1[5];
    id v15 = v10;
    id v16 = v11;
    dispatch_async(v9, v12);
  }
}

void sub_1001FFD6C(void *a1)
{
  id v2 = +[BLEduCloudContainer sharedEduCloudContainer];
  id v3 = [v2 bookItemForPermlink:a1[4]];
  id v4 = v3;
  if (v3)
  {
    id v5 = [v3 itunesuAssetID];
    unsigned __int8 v6 = [v5 isEqualToString:a1[5]];

    if ((v6 & 1) == 0)
    {
      id v7 = (UIImage *)a1[6];
      if (v7)
      {
        uint64_t v8 = UIImageJPEGRepresentation(v7, 0.0);
      }
      else
      {
        uint64_t v8 = 0;
      }
      [v4 _setCloudCoverImageData:v8];
      [v4 setItunesuAssetID:a1[5]];
      id v11 = 0;
      [v2 updateBookItem:v4 error:&v11];
      id v9 = v11;
      if (v9)
      {
        id v10 = BKLibraryLog();
        if (os_log_type_enabled(v10, OS_LOG_TYPE_DEBUG)) {
          sub_1007F0998();
        }
      }
    }
  }
}

void sub_100200148(uint64_t a1, uint64_t a2, void *a3)
{
  id v7 = a3;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  unsigned __int8 v6 = v5;
  if (v5) {
    (*((void (**)(id, uint64_t, id))v5 + 2))(v5, a2, v7);
  }
}

void sub_1002002A0(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = BUDynamicCast();
  id v5 = v4;
  if (v4)
  {
    if ([v4 isRestoring]) {
      [*(id *)(a1 + 32) _prioritizeRestorePlistAsset:v5];
    }
  }
  else
  {
    unsigned __int8 v6 = BKLibraryLog();
    if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR)) {
      sub_1007F0AD0(a1);
    }
  }
  id v7 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v8 = v7;
  if (v7) {
    (*((void (**)(id, id, void, void))v7 + 2))(v7, v3, 0, 0);
  }
}

void sub_1002004C0(uint64_t a1, void *a2, void *a3)
{
  id v10 = a2;
  id v5 = a3;
  if (v5
    || [v10 count] == (id)1
    && ([v10 firstObject],
        uint64_t v8 = objc_claimAutoreleasedReturnValue(),
        unsigned int v9 = [v8 conformsToProtocol:&OBJC_PROTOCOL___BKAsset],
        v8,
        v9))
  {
    unsigned __int8 v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
    if (!v6) {
      goto LABEL_9;
    }
    id v7 = [v10 firstObject];
    v6[2](v6, v7, v5);
  }
  else
  {
    unsigned __int8 v6 = (void (**)(id, void *, id))objc_retainBlock(*(id *)(a1 + 32));
    if (!v6) {
      goto LABEL_9;
    }
    id v7 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorInvalidAssetError userInfo:0];
    v6[2](v6, 0, v7);
  }

LABEL_9:
}

void sub_1002007D8(id *a1)
{
  if ([a1[4] length])
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100200968;
    v10[3] = &unk_100A4BE78;
    id v2 = a1[5];
    id v11 = a1[4];
    id v12 = a1[6];
    [v2 q_asyncReplacePlistEntries:v10 notify:1 completion:a1[7]];
    id v3 = [a1[5] updateAssetMetadataQueue];
    block[0] = _NSConcreteStackBlock;
    block[1] = 3221225472;
    block[2] = sub_100200A5C;
    block[3] = &unk_100A443C8;
    id v4 = a1[6];
    void block[4] = a1[5];
    id v8 = v4;
    id v9 = a1[4];
    dispatch_async(v3, block);
  }
  else
  {
    id v5 = objc_retainBlock(a1[7]);
    if (v5)
    {
      id v6 = v5;
      (*((void (**)(id, void, void))v5 + 2))(v5, 0, 0);
      id v5 = v6;
    }
  }
}

id sub_100200968(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[IMLibraryPlist assetIDFromPlistEntry:v3];
  if ([v4 isEqualToString:*(void *)(a1 + 32)])
  {
    id v5 = [v3 mutableCopy];
    uint64_t v6 = *(void *)(a1 + 40);
    id v7 = +[IMLibraryPlist keyNameForTitle];
    [v5 setObject:v6 forKey:v7];

    uint64_t v8 = *(void *)(a1 + 40);
    id v9 = +[IMLibraryPlist keyNameForSortTitle];
    [v5 setObject:v8 forKey:v9];
  }
  else
  {
    id v5 = 0;
  }
  id v10 = [v5 copy];

  return v10;
}

void sub_100200A5C(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) assetMetadataCache];
  [v2 saveTitle:*(void *)(a1 + 40) author:0 genre:0 language:0 pageProgressionDirection:0 forAssetID:*(void *)(a1 + 48)];
}

void sub_100200C9C(uint64_t a1)
{
  if ([*(id *)(a1 + 32) length])
  {
    v10[0] = _NSConcreteStackBlock;
    v10[1] = 3221225472;
    void v10[2] = sub_100200E0C;
    v10[3] = &unk_100A4BEA0;
    id v2 = *(void **)(a1 + 40);
    id v11 = *(id *)(a1 + 32);
    char v12 = *(unsigned char *)(a1 + 56);
    v7[0] = _NSConcreteStackBlock;
    v7[1] = 3221225472;
    _DWORD v7[2] = sub_100200ED0;
    void v7[3] = &unk_100A44B98;
    *(_OWORD *)id v5 = *(_OWORD *)(a1 + 32);
    id v3 = v5[0];
    int8x16_t v8 = vextq_s8(*(int8x16_t *)v5, *(int8x16_t *)v5, 8uLL);
    id v9 = *(id *)(a1 + 48);
    [v2 q_asyncReplacePlistEntries:v10 notify:1 completion:v7];
  }
  else
  {
    id v4 = objc_retainBlock(*(id *)(a1 + 48));
    if (v4)
    {
      id v6 = v4;
      (*((void (**)(id, void, void))v4 + 2))(v4, 0, 0);
      id v4 = v6;
    }
  }
}

id sub_100200E0C(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = +[IMLibraryPlist assetIDFromPlistEntry:v3];
  if ([v4 isEqualToString:*(void *)(a1 + 32)])
  {
    id v5 = [v3 mutableCopy];
    id v6 = +[NSNumber numberWithBool:*(unsigned __int8 *)(a1 + 40)];
    [v5 setObject:v6 forKeyedSubscript:@"Ephemeral"];
  }
  else
  {
    id v5 = 0;
  }
  id v7 = [v5 copy];

  return v7;
}

void sub_100200ED0(uint64_t a1, char a2, void *a3)
{
  id v5 = a3;
  id v6 = [*(id *)(a1 + 32) assetsQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100200FB4;
  block[3] = &unk_100A4ACC0;
  id v7 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v11 = v7;
  id v8 = *(id *)(a1 + 48);
  char v14 = a2;
  id v12 = v5;
  id v13 = v8;
  id v9 = v5;
  dispatch_async(v6, block);
}

void sub_100200FB4(uint64_t a1)
{
  [*(id *)(a1 + 32) q_evictFromAssetCaches:*(void *)(a1 + 40)];
  id v2 = objc_retainBlock(*(id *)(a1 + 56));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 64), *(void *)(a1 + 48));
    id v2 = v3;
  }
}

id sub_1002010CC(uint64_t a1, uint64_t a2)
{
  return _[*(id *)(a1 + 32) reloadInGroup:a2];
}

void sub_1002011D0(uint64_t a1, void *a2)
{
  [a2 bu_arrayByRemovingNSNulls];
  id v4 = (id)objc_claimAutoreleasedReturnValue();
  if ([v4 count])
  {
    id v3 = [*(id *)(a1 + 32) libraryManager];
    [v3 libraryDataSource:*(void *)(a1 + 32) addedAssets:v4];
  }
}

void sub_100201CC8(uint64_t a1)
{
  id v2 = [*(id *)(a1 + 32) assetCache];
  char v14 = [*(id *)(a1 + 32) assetCacheByTemporaryAssetID];
  long long v17 = 0u;
  long long v18 = 0u;
  long long v19 = 0u;
  long long v20 = 0u;
  id v3 = *(id *)(a1 + 40);
  id v4 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
  if (v4)
  {
    id v5 = v4;
    uint64_t v6 = *(void *)v18;
    do
    {
      for (uint64_t i = 0; i != v5; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v18 != v6) {
          objc_enumerationMutation(v3);
        }
        uint64_t v8 = *(void *)(*((void *)&v17 + 1) + 8 * i);
        id v9 = [*(id *)(a1 + 40) objectForKeyedSubscript:v8, v14];
        objc_opt_class();
        id v10 = BUDynamicCast();
        [v2 setObject:v10 forKey:v8];
        id v11 = [v10 temporaryAssetID];
        if (v11) {
          [v14 setObject:v10 forKey:v11];
        }
      }
      id v5 = [v3 countByEnumeratingWithState:&v17 objects:v21 count:16];
    }
    while (v5);
  }

  id v12 = *(void **)(a1 + 32);
  v15[0] = _NSConcreteStackBlock;
  v15[1] = 3221225472;
  void v15[2] = sub_100201ECC;
  v15[3] = &unk_100A46D88;
  uint64_t v13 = *(void *)(a1 + 48);
  id v16 = *(id *)(a1 + 56);
  [v12 q_asyncAddAssetDictionaries:v13 completion:v15];
}

void sub_100201ECC(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, uint64_t, void))v1 + 2))(v1, 1, 0);
    id v1 = v2;
  }
}

void sub_100202144(uint64_t *a1)
{
  if ([(id)a1[4] count])
  {
    uint64_t v3 = a1[4];
    id v2 = (void *)a1[5];
    uint64_t v4 = a1[6];
    [v2 q_asyncRemovePlistAssets:v3 notify:1 completion:v4];
  }
  else
  {
    id v5 = objc_retainBlock((id)a1[6]);
    if (v5)
    {
      id v6 = v5;
      (*((void (**)(id, uint64_t, void))v5 + 2))(v5, 1, 0);
      id v5 = v6;
    }
  }
}

void sub_100202540(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, ...)
{
  va_start(va1, a11);
  va_start(va, a11);
  uint64_t v13 = va_arg(va1, void);
  uint64_t v15 = va_arg(va1, void);
  uint64_t v16 = va_arg(va1, void);
  uint64_t v17 = va_arg(va1, void);
  uint64_t v18 = va_arg(va1, void);
  uint64_t v19 = va_arg(va1, void);
  _Block_object_dispose(va, 8);
  _Block_object_dispose(va1, 8);
  _Block_object_dispose((const void *)(v11 - 112), 8);
  _Unwind_Resume(a1);
}

void sub_100202580(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 32) assetCache];
  uint64_t v4 = (uint64_t *)(a1 + 40);
  id v5 = [v3 objectForKey:*(void *)(a1 + 40)];

  if (v5)
  {
    uint64_t v6 = [v5 coverWritingMode];
    uint64_t v7 = *(void *)(*(void *)(a1 + 48) + 8);
    uint64_t v8 = *(void **)(v7 + 40);
    *(void *)(v7 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v6;

    uint64_t v9 = [v5 language];
    uint64_t v10 = *(void *)(*(void *)(a1 + 56) + 8);
    uint64_t v11 = *(void **)(v10 + 40);
    *(void *)(v10 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;

    uint64_t v12 = [v5 pageProgressionDirection];
    uint64_t v13 = *(void *)(*(void *)(a1 + 64) + 8);
    char v14 = *(void **)(v13 + 40);
    *(void *)(v13 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v12;
  }
  else
  {
    uint64_t v15 = BKLibraryLog();
    if (os_log_type_enabled(v15, OS_LOG_TYPE_DEFAULT))
    {
      uint64_t v16 = [*v2 identifier];
      uint64_t v17 = *v4;
      *(_DWORD *)buf = 138543874;
      id v34 = v16;
      __int16 v35 = 2160;
      uint64_t v36 = 1752392040;
      __int16 v37 = 2112;
      uint64_t v38 = v17;
      _os_log_impl((void *)&_mh_execute_header, v15, OS_LOG_TYPE_DEFAULT, "%{public}@: coverWritingModeLanguageAndPageProgressionDirectionFromAssetID: Asset is not in cache, reading full plist from disk. assetID: %{mask.hash}@", buf, 0x20u);
    }
    id v18 = *v2;
    id v32 = 0;
    uint64_t v19 = [v18 q_plistContentsWithError:&v32];
    id v20 = v32;
    if (v20)
    {
      id v21 = BKLibraryLog();
      if (os_log_type_enabled(v21, OS_LOG_TYPE_ERROR)) {
        sub_1007F0F0C();
      }
    }
    else
    {
      id v21 = +[IMLibraryPlist entryForAssetID:*v4 contents:v19];
      if (v21)
      {
        uint64_t v22 = +[IMLibraryPlist coverWritingModeFromPlistEntry:v21];
        uint64_t v23 = *(void *)(*(void *)(a1 + 48) + 8);
        unsigned int v24 = *(void **)(v23 + 40);
        *(void *)(v23 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v22;

        uint64_t v25 = +[IMLibraryPlist languageFromPlistEntry:v21];
        uint64_t v26 = *(void *)(*(void *)(a1 + 56) + 8);
        id v27 = *(void **)(v26 + 40);
        *(void *)(v26 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v25;

        uint64_t v28 = +[IMLibraryPlist pageProgressionFromPlistEntry:v21];
        uint64_t v29 = *(void *)(*(void *)(a1 + 64) + 8);
        uint64_t v30 = *(void **)(v29 + 40);
        *(void *)(v29 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v28;

        [*(id *)(a1 + 32) q_refreshAssetCachesFromPlistContents:v19];
      }
      else
      {
        uint64_t v31 = BKLibraryLog();
        if (os_log_type_enabled(v31, OS_LOG_TYPE_ERROR)) {
          sub_1007F0DF4(v2, v4, v31);
        }
      }
    }
  }
}

void sub_10020298C(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, ...)
{
  va_start(va, a9);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_1002029A4(void *a1)
{
  id v2 = (void *)a1[4];
  id v14 = 0;
  uint64_t v3 = [v2 q_plistContentsWithError:&v14];
  id v4 = v14;
  id v5 = v4;
  if (v3) {
    BOOL v6 = v4 == 0;
  }
  else {
    BOOL v6 = 0;
  }
  if (v6)
  {
    uint64_t v7 = +[IMLibraryPlist entryForAssetID:a1[5] contents:v3];
    uint64_t v8 = *(void *)(a1[7] + 8);
    uint64_t v9 = *(void **)(v8 + 40);
    *(void *)(v8 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v7;

    if (!*(void *)(*(void *)(a1[7] + 8) + 40))
    {
      uint64_t v10 = +[NSURL URLWithString:a1[6]];
      uint64_t v11 = +[IMLibraryPlist entryForAssetURL:v10 contents:v3];
      uint64_t v12 = *(void *)(a1[7] + 8);
      uint64_t v13 = *(void **)(v12 + 40);
      *(void *)(v12 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v11;
    }
  }
}

void sub_100204770(_Unwind_Exception *a1)
{
  if (v1) {
    objc_end_catch();
  }
  _Unwind_Resume(a1);
}

void sub_100204788(uint64_t a1, int a2)
{
  if (a2) {
    objc_terminate();
  }
  JUMPOUT(0x100204794);
}

void sub_10020583C(uint64_t a1)
{
  id v8 = +[BCCacheManager defaultCacheManager];
  id v2 = [*(id *)(a1 + 32) valueForKey:@"assetID"];
  uint64_t v3 = [*(id *)(a1 + 32) valueForKey:@"temporaryAssetID"];
  id v4 = [v2 arrayByAddingObjectsFromArray:v3];

  id v5 = [v4 bu_arrayByRemovingNSNulls];

  BOOL v6 = +[NSSet setWithArray:v5];
  [v8 incrementVersionForIdentifiers:v6];
  uint64_t v7 = [*(id *)(a1 + 40) libraryManager];
  [v7 libraryDataSource:*(void *)(a1 + 40) updatedAssets:*(void *)(a1 + 32)];
}

void sub_100205C00(uint64_t a1)
{
  uint64_t v1 = a1;
  id v2 = [*(id *)(a1 + 32) plist];
  long long v48 = [v2 directory];
  uint64_t v44 = +[BLLockFile iTunesSyncLockFile];
  double v45 = v2;
  if ([v44 tryLock:0])
  {
    uint64_t v3 = [*(id *)(v1 + 32) plist];
    id v4 = [v3 contents];
  }
  else
  {
    id v4 = 0;
  }
  long long v60 = 0u;
  long long v61 = 0u;
  long long v59 = 0u;
  long long v58 = 0u;
  id obj = *(id *)(v1 + 40);
  id v49 = [obj countByEnumeratingWithState:&v58 objects:v63 count:16];
  if (v49)
  {
    uint64_t v5 = *(void *)v59;
    BOOL v6 = off_100A3C000;
    uint64_t v46 = *(void *)v59;
    do
    {
      for (uint64_t i = 0; i != v49; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v59 != v5) {
          objc_enumerationMutation(obj);
        }
        id v8 = *(void **)(*((void *)&v58 + 1) + 8 * i);
        uint64_t v9 = [(__objc2_class *)v6[153] lookupAssetURLStringFromAssetID:v8 contents:v4];
        if (![v9 length])
        {
          uint64_t v10 = [*(id *)(v1 + 48) objectForKey:v8];
          if (v10)
          {
            uint64_t v11 = v6[153];
            uint64_t v12 = +[NSURL fileURLWithPath:v10];
            uint64_t v13 = [(__objc2_class *)v11 entryForAssetURL:v12 contents:v4];

            if (v13)
            {
              id v14 = v10;

              uint64_t v9 = v14;
            }
          }
        }
        if ([v8 length] && objc_msgSend(v9, "length"))
        {
          uint64_t v15 = v1;
          uint64_t v16 = v4;
          uint64_t v17 = +[NSURL fileURLWithPath:v9];
          id v18 = [v17 path];
          uint64_t v19 = [v18 lastPathComponent];

          if ([v19 length])
          {
            [*(id *)(v1 + 56) addObject:v8];
            [*(id *)(v1 + 64) addObject:v19];
            id v20 = [*(id *)(v1 + 32) assetCache];
            uint64_t v21 = [v20 objectForKey:v8];
            if (v21)
            {
              uint64_t v22 = (void *)v21;

              goto LABEL_20;
            }
            uint64_t v23 = [*(id *)(v1 + 32) assetCacheByTemporaryAssetID];
            uint64_t v22 = [v23 objectForKey:v8];

            if (v22)
            {
LABEL_20:
              [*(id *)(v15 + 72) addObject:v22];
            }
          }

          id v4 = v16;
          uint64_t v5 = v46;
          uint64_t v1 = v15;
          BOOL v6 = off_100A3C000;
        }
        if ([v9 length])
        {
          unsigned int v24 = [v9 lastPathComponent];
          uint64_t v25 = [v48 stringByAppendingPathComponent:v24];

          uint64_t v26 = [*(id *)(v1 + 32) fullPathToAssetID];
          [v26 removeObjectForKey:v25];
        }
      }
      id v49 = [obj countByEnumeratingWithState:&v58 objects:v63 count:16];
    }
    while (v49);
  }

  id v27 = [*(id *)(v1 + 32) booksRootPath];
  if ([*(id *)(v1 + 64) count])
  {
    uint64_t v28 = [*(id *)(v1 + 64) allObjects];
    uint64_t v29 = v45;
    [v45 addDeletedFiles:v28];

    long long v56 = 0u;
    long long v57 = 0u;
    long long v54 = 0u;
    long long v55 = 0u;
    id v30 = *(id *)(v1 + 56);
    id v31 = [v30 countByEnumeratingWithState:&v54 objects:v62 count:16];
    if (v31)
    {
      id v32 = v31;
      uint64_t v33 = *(void *)v55;
      do
      {
        for (j = 0; j != v32; j = (char *)j + 1)
        {
          if (*(void *)v55 != v33) {
            objc_enumerationMutation(v30);
          }
          [*(id *)(v1 + 32) q_evictFromAssetCaches:*(void *)(*((void *)&v54 + 1) + 8 * (void)j)];
        }
        id v32 = [v30 countByEnumeratingWithState:&v54 objects:v62 count:16];
      }
      while (v32);
    }

    __int16 v35 = *(void **)(v1 + 32);
    uint64_t v36 = *(void **)(v1 + 64);
    v50[0] = _NSConcreteStackBlock;
    v50[1] = 3221225472;
    v50[2] = sub_100206154;
    _OWORD v50[3] = &unk_100A499D0;
    id v51 = v36;
    id v37 = v27;
    uint64_t v38 = *(void *)(v1 + 32);
    id v52 = v37;
    uint64_t v53 = v38;
    [v35 q_asyncRemovePlistPaths:v51 completion:v50];
    uint64_t v39 = [*(id *)(v1 + 32) libraryManager];
    [v39 libraryDataSource:*(void *)(v1 + 32) removedAssets:*(void *)(v1 + 72)];

    [*(id *)(v1 + 32) _removeAssetIDsFromCacheManager:*(void *)(v1 + 72)];
    id v40 = objc_retainBlock(*(id *)(v1 + 80));
    uint64_t v41 = v40;
    if (v40) {
      (*((void (**)(id, uint64_t, void))v40 + 2))(v40, 1, 0);
    }

    unsigned int v42 = v51;
  }
  else
  {
    id v43 = objc_retainBlock(*(id *)(v1 + 80));
    unsigned int v42 = v43;
    uint64_t v29 = v45;
    if (v43) {
      (*((void (**)(id, uint64_t, void))v43 + 2))(v43, 1, 0);
    }
  }
}

void sub_100206154(uint64_t a1, int a2)
{
  if (a2)
  {
    long long v18 = 0u;
    long long v19 = 0u;
    long long v16 = 0u;
    long long v17 = 0u;
    id v3 = *(id *)(a1 + 32);
    id v4 = [v3 countByEnumeratingWithState:&v16 objects:v24 count:16];
    if (v4)
    {
      id v6 = v4;
      uint64_t v7 = *(void *)v17;
      *(void *)&long long v5 = 138412546;
      long long v14 = v5;
      do
      {
        id v8 = 0;
        do
        {
          if (*(void *)v17 != v7) {
            objc_enumerationMutation(v3);
          }
          uint64_t v9 = [*(id *)(a1 + 40) stringByAppendingPathComponent:*(void *)(*((void *)&v16 + 1) + 8 * (void)v8) v14];
          uint64_t v10 = +[NSURL fileURLWithPath:v9];

          uint64_t v11 = *(void **)(a1 + 48);
          id v15 = 0;
          [v11 removeFileWithURL:v10 error:&v15];
          id v12 = v15;
          if (v12)
          {
            uint64_t v13 = BKLibraryLog();
            if (os_log_type_enabled(v13, OS_LOG_TYPE_DEBUG))
            {
              *(_DWORD *)buf = v14;
              uint64_t v21 = v10;
              __int16 v22 = 2112;
              id v23 = v12;
              _os_log_debug_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEBUG, "Error: failed to remove: [URL: %@] [Error: %@]", buf, 0x16u);
            }
          }
          id v8 = (char *)v8 + 1;
        }
        while (v6 != v8);
        id v6 = [v3 countByEnumeratingWithState:&v16 objects:v24 count:16];
      }
      while (v6);
    }
  }
}

id sub_100206634(uint64_t a1, uint64_t a2)
{
  id v3 = +[IMLibraryPlist assetIDFromPlistEntry:a2];
  id v4 = [*(id *)(a1 + 32) containsObject:v3];

  return v4;
}

id sub_10020672C(uint64_t a1, uint64_t a2)
{
  id v3 = +[IMLibraryPlist folderNameFromPlistEntry:a2];
  id v4 = [*(id *)(a1 + 32) containsObject:v3];

  return v4;
}

void sub_100206848(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10020699C;
  v14[3] = &unk_100A43D60;
  void v14[4] = *(void *)(a1 + 32);
  id v3 = [v2 beginBackgroundTaskWithName:@"BKLibraryDataSourcePlist Remove" expirationHandler:v14];
  id v4 = [*(id *)(a1 + 32) ioQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002069A8;
  block[3] = &unk_100A4BF68;
  long long v5 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v6 = v5;
  char v13 = *(unsigned char *)(a1 + 56);
  id v9 = v2;
  id v10 = v6;
  id v12 = v3;
  id v11 = *(id *)(a1 + 48);
  id v7 = v2;
  dispatch_async(v4, block);
}

id sub_10020699C(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBackgroundTaskCancelled:1];
}

void sub_1002069A8(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  [*(id *)(a1 + 32) setStartQueueGeneration:[*(id *)(a1 + 32) currentQueueGeneration]];
  id v3 = [*v2 plist];
  id v4 = [v3 contents];
  long long v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    id v6 = +[NSDictionary dictionary];
  }
  long long v47 = v6;

  id v7 = [*(id *)(a1 + 32) plist];
  id v8 = [v7 unfilteredContents];
  id v9 = +[IMLibraryPlist keyNameForBooksArray];
  id v10 = [v8 objectForKey:v9];
  id v45 = [v10 count];

  id v11 = [*(id *)(a1 + 32) plist];
  uint64_t v44 = [v11 path];

  [*(id *)(a1 + 32) setBackgroundTaskCancelled:0];
  unint64_t v12 = 0;
  char v13 = off_100A3C000;
  uint64_t v46 = v2;
  while (1)
  {
    id v15 = [(__objc2_class *)v13[52] iTunesSyncLockFile];
    if ([v15 tryLock:1])
    {
      long long v48 = v14;
      long long v16 = +[NSMutableArray array];
      long long v17 = +[IMLibraryPlist keyNameForBooksArray];
      long long v18 = [v47 objectForKey:v17];

      long long v56 = 0u;
      long long v57 = 0u;
      long long v54 = 0u;
      long long v55 = 0u;
      id v19 = v18;
      id v20 = [v19 countByEnumeratingWithState:&v54 objects:v68 count:16];
      if (v20)
      {
        id v21 = v20;
        uint64_t v22 = 0;
        uint64_t v23 = *(void *)v55;
        do
        {
          for (uint64_t i = 0; i != v21; uint64_t i = (char *)i + 1)
          {
            if (*(void *)v55 != v23) {
              objc_enumerationMutation(v19);
            }
            uint64_t v25 = *(void *)(*((void *)&v54 + 1) + 8 * i);
            if ((*(unsigned int (**)(void))(*(void *)(a1 + 48) + 16))()) {
              ++v22;
            }
            else {
              [v16 addObject:v25];
            }
          }
          id v21 = [v19 countByEnumeratingWithState:&v54 objects:v68 count:16];
        }
        while (v21);
      }
      else
      {
        uint64_t v22 = 0;
      }

      id v27 = [v19 count];
      int v28 = (int)v27;
      if (v22 > 0 || v45 > v27)
      {
        uint64_t v29 = [v47 mutableCopyWithZone:0];
        id v30 = +[IMLibraryPlist keyNameForBooksArray];
        [v29 setObject:v16 forKey:v30];

        id v31 = BKLibraryLog();
        id v2 = v46;
        if (os_log_type_enabled(v31, OS_LOG_TYPE_DEBUG))
        {
          id v43 = [*v46 identifier];
          unsigned int v39 = [v16 count];
          *(_DWORD *)buf = 138544386;
          uint64_t v59 = (uint64_t)v43;
          __int16 v60 = 2114;
          long long v61 = v44;
          __int16 v62 = 1024;
          unsigned int v63 = v39;
          __int16 v64 = 1024;
          int v65 = v22;
          __int16 v66 = 1024;
          int v67 = v45 - v28;
          _os_log_debug_impl((void *)&_mh_execute_header, v31, OS_LOG_TYPE_DEBUG, "%{public}@ Rewriting the plist: %{public}@ -- [%d Remaining] [Removed: %d] [Filtered: %d]", buf, 0x28u);
        }
        LODWORD(v26) = [*(id *)(a1 + 32) q_rewritePlistDictionary:v29 path:v44 notify:*(unsigned __int8 *)(a1 + 72)];
        long long v14 = v48;
      }
      else
      {
        uint64_t v29 = BKLibraryLog();
        id v2 = v46;
        long long v14 = v48;
        if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
        {
          id v37 = [*v46 identifier];
          unsigned int v38 = [v16 count];
          *(_DWORD *)buf = 138543874;
          uint64_t v59 = (uint64_t)v37;
          __int16 v60 = 2114;
          long long v61 = v44;
          __int16 v62 = 1024;
          unsigned int v63 = v38;
          _os_log_debug_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "%{public}@ No need to rewrite %{public}@. {Nothing removed} %d entries", buf, 0x1Cu);
        }
        LODWORD(v26) = 1;
      }

      char v13 = off_100A3C000;
    }
    else
    {
      LODWORD(v26) = 0;
    }

    id v32 = BKLibraryLog();
    if (os_log_type_enabled(v32, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v34 = [*v2 identifier];
      __int16 v35 = (void *)v34;
      *(_DWORD *)buf = 138543874;
      uint64_t v36 = "NO";
      if (v26) {
        uint64_t v36 = "YES";
      }
      uint64_t v59 = v34;
      __int16 v60 = 2082;
      long long v61 = v36;
      __int16 v62 = 1024;
      unsigned int v63 = v12 + 1;
      _os_log_debug_impl((void *)&_mh_execute_header, v32, OS_LOG_TYPE_DEBUG, "%{public}@ -- rewrite succeeded: %{public}s -- Try # %d", buf, 0x1Cu);
    }
    char v33 = v12 > 3 ? 1 : v26;
    if (v33) {
      break;
    }
    if ([*v2 backgroundTaskCancelled])
    {
      uint64_t v26 = BKLibraryLog();
      if (os_log_type_enabled((os_log_t)v26, OS_LOG_TYPE_ERROR)) {
        sub_1007F1588((uint64_t)v2);
      }

      LOBYTE(v26) = 0;
      break;
    }
    usleep(0x61A8u);
    ++v12;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100206FAC;
  block[3] = &unk_100A4A128;
  id v40 = *(id *)(a1 + 40);
  unsigned int v42 = *(void **)(a1 + 56);
  uint64_t v41 = *(void *)(a1 + 64);
  id v50 = v40;
  uint64_t v52 = v41;
  id v51 = v42;
  char v53 = v26;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100206FAC(uint64_t a1)
{
  [*(id *)(a1 + 32) endBackgroundTask:*(void *)(a1 + 48)];
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), 0);
    id v2 = v3;
  }
}

void sub_1002070E4(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_100207238;
  v14[3] = &unk_100A43D60;
  void v14[4] = *(void *)(a1 + 32);
  id v3 = [v2 beginBackgroundTaskWithName:@"BKLibraryDataSourcePlist Replace" expirationHandler:v14];
  id v4 = [*(id *)(a1 + 32) ioQueue];
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100207244;
  block[3] = &unk_100A4BF68;
  long long v5 = *(void **)(a1 + 40);
  void block[4] = *(void *)(a1 + 32);
  id v6 = v5;
  char v13 = *(unsigned char *)(a1 + 56);
  id v9 = v2;
  id v10 = v6;
  id v12 = v3;
  id v11 = *(id *)(a1 + 48);
  id v7 = v2;
  dispatch_async(v4, block);
}

id sub_100207238(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBackgroundTaskCancelled:1];
}

void sub_100207244(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  [*(id *)(a1 + 32) setStartQueueGeneration:[*(id *)(a1 + 32) currentQueueGeneration]];
  id v3 = [*v2 plist];
  id v4 = [v3 contents];
  long long v5 = v4;
  if (v4)
  {
    id v6 = v4;
  }
  else
  {
    id v6 = +[NSDictionary dictionary];
  }
  id v7 = v6;

  id v8 = [*(id *)(a1 + 32) plist];
  id v43 = [v8 path];

  [*(id *)(a1 + 32) setBackgroundTaskCancelled:0];
  unint64_t v9 = 0;
  id v10 = off_100A3C000;
  *(void *)&long long v11 = 138544130;
  long long v42 = v11;
  uint64_t v44 = v2;
  id v45 = v7;
  while (1)
  {
    char v13 = [(__objc2_class *)v10[52] iTunesSyncLockFile];
    if (![v13 tryLock:1])
    {
      LODWORD(v29) = 0;
      goto LABEL_26;
    }
    uint64_t v46 = v12;
    unint64_t v47 = v9;
    long long v14 = +[NSMutableArray array];
    id v15 = +[IMLibraryPlist keyNameForBooksArray];
    long long v16 = [v7 objectForKey:v15];

    long long v55 = 0u;
    long long v56 = 0u;
    long long v53 = 0u;
    long long v54 = 0u;
    id v17 = v16;
    id v18 = [v17 countByEnumeratingWithState:&v53 objects:v65 count:16];
    if (!v18)
    {

LABEL_22:
      id v27 = BKLibraryLog();
      if (os_log_type_enabled(v27, OS_LOG_TYPE_DEBUG))
      {
        __int16 v35 = [*v2 identifier];
        unsigned int v36 = [v14 count];
        *(_DWORD *)buf = 138543874;
        uint64_t v58 = (uint64_t)v35;
        __int16 v59 = 2114;
        __int16 v60 = v43;
        __int16 v61 = 1024;
        unsigned int v62 = v36;
        _os_log_debug_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEBUG, "%{public}@ No need to rewrite %{public}@. {Nothing replaced} %d entries", buf, 0x1Cu);
      }
      LODWORD(v29) = 1;
      goto LABEL_25;
    }
    id v19 = v18;
    uint64_t v20 = 0;
    uint64_t v21 = *(void *)v54;
    do
    {
      for (uint64_t i = 0; i != v19; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v54 != v21) {
          objc_enumerationMutation(v17);
        }
        uint64_t v23 = *(void **)(*((void *)&v53 + 1) + 8 * i);
        unsigned int v24 = (*(void (**)(void))(*(void *)(a1 + 48) + 16))();
        if (v24)
        {
          ++v20;
          uint64_t v25 = v14;
          uint64_t v26 = v24;
        }
        else
        {
          uint64_t v25 = v14;
          uint64_t v26 = v23;
        }
        [v25 addObject:v26];
      }
      id v19 = [v17 countByEnumeratingWithState:&v53 objects:v65 count:16];
    }
    while (v19);

    id v2 = v44;
    id v7 = v45;
    if (v20 < 1) {
      goto LABEL_22;
    }
    id v27 = [v45 mutableCopy];
    int v28 = +[IMLibraryPlist keyNameForBooksArray];
    [v27 setObject:v14 forKey:v28];

    uint64_t v29 = BKLibraryLog();
    if (os_log_type_enabled(v29, OS_LOG_TYPE_DEBUG))
    {
      id v37 = [*v44 identifier];
      unsigned int v38 = [v14 count];
      *(_DWORD *)buf = v42;
      uint64_t v58 = (uint64_t)v37;
      __int16 v59 = 2114;
      __int16 v60 = v43;
      __int16 v61 = 1024;
      unsigned int v62 = v38;
      __int16 v63 = 1024;
      int v64 = v20;
      _os_log_debug_impl((void *)&_mh_execute_header, v29, OS_LOG_TYPE_DEBUG, "%{public}@ Rewriting the plist: %{public}@ -- [Total: %d] [Replaced: %d]", buf, 0x22u);
    }
    LODWORD(v29) = [*(id *)(a1 + 32) q_rewritePlistDictionary:v27 path:v43 notify:*(unsigned __int8 *)(a1 + 72)];
LABEL_25:
    id v12 = v46;

    id v10 = off_100A3C000;
    unint64_t v9 = v47;
LABEL_26:

    id v30 = BKLibraryLog();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v32 = [*v2 identifier];
      char v33 = (void *)v32;
      *(_DWORD *)buf = 138543874;
      uint64_t v34 = "NO";
      if (v29) {
        uint64_t v34 = "YES";
      }
      uint64_t v58 = v32;
      __int16 v59 = 2082;
      __int16 v60 = v34;
      __int16 v61 = 1024;
      unsigned int v62 = v9 + 1;
      _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "%{public}@ -- rewrite succeeded: %{public}s -- Try # %d", buf, 0x1Cu);
    }
    if (v9 > 3) {
      char v31 = 1;
    }
    else {
      char v31 = (char)v29;
    }
    if (v31) {
      goto LABEL_39;
    }
    if ([*v2 backgroundTaskCancelled]) {
      break;
    }
    usleep(0x61A8u);
    ++v9;
  }
  uint64_t v29 = BKLibraryLog();
  if (os_log_type_enabled(v29, OS_LOG_TYPE_ERROR)) {
    sub_1007F1588((uint64_t)v2);
  }

  LOBYTE(v29) = 0;
LABEL_39:
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_1002077C4;
  block[3] = &unk_100A4A128;
  id v39 = *(id *)(a1 + 40);
  uint64_t v41 = *(void **)(a1 + 56);
  uint64_t v40 = *(void *)(a1 + 64);
  id v49 = v39;
  uint64_t v51 = v40;
  id v50 = v41;
  char v52 = (char)v29;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_1002077C4(uint64_t a1)
{
  [*(id *)(a1 + 32) endBackgroundTask:*(void *)(a1 + 48)];
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), 0);
    id v2 = v3;
  }
}

void sub_1002078F4(uint64_t a1)
{
  id v2 = +[UIApplication sharedApplication];
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _OWORD v12[2] = sub_100207A40;
  v12[3] = &unk_100A43D60;
  void v12[4] = *(void *)(a1 + 32);
  id v3 = [v2 beginBackgroundTaskWithName:@"BKLibraryDataSourcePlist Add" expirationHandler:v12];
  id v4 = [*(id *)(a1 + 32) ioQueue];
  v7[0] = _NSConcreteStackBlock;
  v7[1] = 3221225472;
  _DWORD v7[2] = sub_100207A4C;
  void v7[3] = &unk_100A4A430;
  long long v5 = *(void **)(a1 + 40);
  void v7[4] = *(void *)(a1 + 32);
  id v8 = v5;
  id v9 = v2;
  id v11 = v3;
  id v10 = *(id *)(a1 + 48);
  id v6 = v2;
  dispatch_async(v4, v7);
}

id sub_100207A40(uint64_t a1)
{
  return [*(id *)(a1 + 32) setBackgroundTaskCancelled:1];
}

void sub_100207A4C(uint64_t a1)
{
  uint64_t v1 = a1;
  id v2 = (id *)(a1 + 32);
  [*(id *)(a1 + 32) setStartQueueGeneration:[*(id *)(a1 + 32) currentQueueGeneration]];
  [*v2 setBackgroundTaskCancelled:0];
  unint64_t v3 = 0;
  id v4 = off_100A3C000;
  long long v5 = off_100A3C000;
  *(void *)&long long v6 = 138543618;
  long long v43 = v6;
  while (1)
  {
    id v8 = [(__objc2_class *)v4[52] iTunesSyncLockFile];
    if ([v8 tryLock:1])
    {
      id v9 = [*v2 plist];
      id v10 = [v9 contents];
      id v11 = v10;
      uint64_t v46 = v7;
      unint64_t v47 = v3;
      if (v10)
      {
        id v12 = v10;
      }
      else
      {
        id v12 = +[NSDictionary dictionary];
      }
      long long v14 = v12;

      id v15 = [*v2 plist];
      long long v16 = [v15 path];

      id v17 = [(__objc2_class *)v5[153] keyNameForBooksArray];
      id v18 = [v14 objectForKey:v17];

      id v45 = v18;
      if (v18)
      {
        id v19 = [v18 mutableCopyWithZone:0];
      }
      else
      {
        id v19 = +[NSMutableArray array];
      }
      uint64_t v20 = v19;
      [v19 addObjectsFromArray:*(void *)(v1 + 40), v43];
      id v21 = [v14 mutableCopyWithZone:0];
      uint64_t v22 = [(__objc2_class *)v5[153] keyNameForBooksArray];
      [v21 setObject:v20 forKey:v22];

      uint64_t v23 = BKLibraryLog();
      uint64_t v44 = v14;
      if (os_log_type_enabled(v23, OS_LOG_TYPE_DEBUG))
      {
        id v37 = [*v2 identifier];
        unsigned int v38 = [v20 count];
        *(_DWORD *)buf = v43;
        uint64_t v54 = (uint64_t)v37;
        __int16 v55 = 1024;
        LODWORD(v56) = v38;
        _os_log_debug_impl((void *)&_mh_execute_header, v23, OS_LOG_TYPE_DEBUG, "%{public}@ Trying to rewritePlistDictionary: %d entries", buf, 0x12u);
      }
      unsigned int v13 = [*(id *)(v1 + 32) q_rewritePlistDictionary:v21 path:v16 notify:1];
      unsigned int v24 = v2;
      uint64_t v25 = *(void **)(v1 + 40);
      [(__objc2_class *)v5[153] keyNameForPath];
      v27 = uint64_t v26 = v5;
      int v28 = [v25 valueForKey:v27];

      uint64_t v29 = [*(id *)(v1 + 32) plist];
      [v29 removeDeletedPaths:v28];

      long long v5 = v26;
      id v2 = v24;

      id v7 = v46;
      unint64_t v3 = v47;
      id v4 = off_100A3C000;
    }
    else
    {
      unsigned int v13 = 0;
    }

    id v30 = BKLibraryLog();
    if (os_log_type_enabled(v30, OS_LOG_TYPE_DEBUG))
    {
      uint64_t v32 = [*v2 identifier];
      char v33 = v5;
      uint64_t v34 = v1;
      __int16 v35 = (void *)v32;
      *(_DWORD *)buf = 138543874;
      unsigned int v36 = "NO";
      if (v13) {
        unsigned int v36 = "YES";
      }
      uint64_t v54 = v32;
      __int16 v55 = 2082;
      long long v56 = v36;
      __int16 v57 = 1024;
      int v58 = v3 + 1;
      _os_log_debug_impl((void *)&_mh_execute_header, v30, OS_LOG_TYPE_DEBUG, "%{public}@ -- rewrite succeeded: %{public}s -- Try # %d", buf, 0x1Cu);

      uint64_t v1 = v34;
      long long v5 = v33;
    }

    char v31 = v3 > 3 ? 1 : v13;
    if (v31) {
      break;
    }
    if ([*v2 backgroundTaskCancelled])
    {
      id v39 = BKLibraryLog();
      if (os_log_type_enabled(v39, OS_LOG_TYPE_ERROR)) {
        sub_1007F1588((uint64_t)v2);
      }

      LOBYTE(v13) = 0;
      break;
    }
    usleep(0x61A8u);
    ++v3;
  }
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100207ED0;
  block[3] = &unk_100A4A128;
  id v40 = *(id *)(v1 + 48);
  long long v42 = *(void **)(v1 + 56);
  uint64_t v41 = *(void *)(v1 + 64);
  id v49 = v40;
  uint64_t v51 = v41;
  id v50 = v42;
  char v52 = v13;
  dispatch_async((dispatch_queue_t)&_dispatch_main_q, block);
}

void sub_100207ED0(uint64_t a1)
{
  [*(id *)(a1 + 32) endBackgroundTask:*(void *)(a1 + 48)];
  id v2 = objc_retainBlock(*(id *)(a1 + 40));
  if (v2)
  {
    id v3 = v2;
    (*((void (**)(id, void, void))v2 + 2))(v2, *(unsigned __int8 *)(a1 + 56), 0);
    id v2 = v3;
  }
}

void sub_100208190(uint64_t a1, void *a2)
{
  id v3 = a2;
  objc_opt_class();
  id v4 = [v3 firstObject];

  BUDynamicCast();
  id v6 = (id)objc_claimAutoreleasedReturnValue();

  long long v5 = v6;
  if (v6)
  {
    [*(id *)(a1 + 32) _prioritizeRestorePlistAsset:v6];
    long long v5 = v6;
  }
}

void sub_100208654(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x16u);
}

uint64_t sub_10020868C(uint64_t a1)
{
  return *(void *)a1;
}

void sub_1002088A4(uint64_t a1)
{
  if ([*(id *)(a1 + 32) isEqualToString:@"chapterProgress"])
  {
    uint64_t v2 = [*(id *)(*(void *)(a1 + 40) + 8) objectForKey:*(void *)(a1 + 48)];
    uint64_t v3 = *(void *)(*(void *)(a1 + 64) + 8);
    id v4 = *(void **)(v3 + 40);
    *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;

    uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    if (!v5)
    {
      id v6 = [[BKLibraryAudiobookProgress alloc] initWithKind:*(void *)(a1 + 32) instance:*(void *)(a1 + 48) parameters:*(void *)(a1 + 56)];
      uint64_t v7 = *(void *)(*(void *)(a1 + 64) + 8);
      id v8 = *(void **)(v7 + 40);
      *(void *)(v7 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v6;

      uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    }
    id v9 = *(void **)(a1 + 48);
    uint64_t v10 = *(void **)(*(void *)(a1 + 40) + 8);
  }
  else
  {
    if (![*(id *)(a1 + 32) isEqualToString:@"timeRemaining"]) {
      return;
    }
    uint64_t v11 = [*(id *)(*(void *)(a1 + 40) + 16) objectForKey:*(void *)(a1 + 48)];
    uint64_t v12 = *(void *)(*(void *)(a1 + 64) + 8);
    unsigned int v13 = *(void **)(v12 + 40);
    *(void *)(v12 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v11;

    uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    if (!v5)
    {
      long long v14 = [[BKLibraryAudiobookProgress alloc] initWithKind:*(void *)(a1 + 32) instance:*(void *)(a1 + 48) parameters:*(void *)(a1 + 56)];
      uint64_t v15 = *(void *)(*(void *)(a1 + 64) + 8);
      long long v16 = *(void **)(v15 + 40);
      *(void *)(v15 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v14;

      uint64_t v5 = *(void *)(*(void *)(*(void *)(a1 + 64) + 8) + 40);
    }
    id v9 = *(void **)(a1 + 48);
    uint64_t v10 = *(void **)(*(void *)(a1 + 40) + 16);
  }
  id v17 = [v9 stringValue];
  [v10 setObject:v5 forKey:];
}

void sub_100209028(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100209050(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
}

void sub_100209260(_Unwind_Exception *a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, ...)
{
  va_start(va, a16);
  _Block_object_dispose(va, 8);
  _Unwind_Resume(a1);
}

void sub_100209288(uint64_t a1)
{
  id v2 = [*(id *)(*(void *)(a1 + 32) + 8) copy];
  uint64_t v3 = *(void *)(*(void *)(a1 + 40) + 8);
  id v4 = *(void **)(v3 + 40);
  *(void *)(v3 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
}

id sub_10020936C(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) addObject:*(void *)(a1 + 40)];
}

id sub_100209410(uint64_t a1)
{
  return [*(id *)(*(void *)(a1 + 32) + 8) removeObject:*(void *)(a1 + 40)];
}

void sub_10020996C(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_100209B20(uint64_t a1)
{
  id v2 = (id *)(a1 + 32);
  uint64_t v3 = [*(id *)(a1 + 32) fetchCompletion];

  if (v3)
  {
    id v4 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v4, OS_LOG_TYPE_FAULT)) {
      sub_1007F16AC(v2, v4);
    }
  }
  uint64_t v5 = [*v2 fetchCompletion];
  id v6 = (void *)v5;
  if (v5) {
    (*(void (**)(uint64_t, void, void))(v5 + 16))(v5, 0, 0);
  }
  [*(id *)(a1 + 32) setFetchCompletion:0];

  [*(id *)(a1 + 32) setLibraryAssetMonitor:0];
  uint64_t v7 = +[BLJaliscoDAAPClient sharedClient];
  id v8 = [*(id *)(a1 + 56) copy];
  [*(id *)(a1 + 32) setFetchCompletion:v8];

  id v9 = _os_activity_create((void *)&_mh_execute_header, "Books/BKLibraryDataSourceJaliscoUpdate", (os_activity_t)&_os_activity_current, OS_ACTIVITY_FLAG_DEFAULT);
  v12[0] = _NSConcreteStackBlock;
  v12[1] = 3221225472;
  _OWORD v12[2] = sub_100209CC8;
  v12[3] = &unk_100A44610;
  uint64_t v10 = *(void **)(a1 + 40);
  void v12[4] = *(void *)(a1 + 32);
  id v13 = v7;
  id v14 = v10;
  id v15 = *(id *)(a1 + 48);
  id v11 = v7;
  os_activity_apply(v9, v12);
}

void sub_100209CC8(uint64_t a1)
{
  id v2 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [*(id *)(a1 + 32) identifier];
    *(_DWORD *)buf = 138412290;
    id v11 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "Books/BKLibraryDataSourceJaliscoUpdate %@ fetchAssetIDsWithPredicate updatePolitely", buf, 0xCu);
  }
  id v4 = +[BDSJaliscoDAAPClient sharedClient];
  v6[0] = _NSConcreteStackBlock;
  v6[1] = 3221225472;
  v6[2] = sub_100209E38;
  _OWORD v6[3] = &unk_100A45B10;
  uint64_t v5 = *(void **)(a1 + 40);
  void v6[4] = *(void *)(a1 + 32);
  id v7 = v5;
  id v8 = *(id *)(a1 + 48);
  id v9 = *(id *)(a1 + 56);
  [v4 updatePolitely:0 reason:6 completion:v6];
}

void sub_100209E38(uint64_t a1, char a2)
{
  uint64_t v3 = *(void *)(a1 + 32);
  id v4 = *(NSObject **)(v3 + 48);
  block[0] = _NSConcreteStackBlock;
  block[1] = 3221225472;
  block[2] = sub_100209EFC;
  block[3] = &unk_100A45460;
  void block[4] = v3;
  char v9 = a2;
  id v6 = *(id *)(a1 + 40);
  id v7 = *(id *)(a1 + 48);
  id v8 = *(id *)(a1 + 56);
  dispatch_async(v4, block);
}

id sub_100209EFC(uint64_t a1)
{
  id v2 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v3 = [*(id *)(a1 + 32) identifier];
    int v4 = *(unsigned __int8 *)(a1 + 64);
    *(_DWORD *)buf = 138412546;
    id v14 = v3;
    __int16 v15 = 1024;
    LODWORD(v16) = v4;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%@ fetchAssetIDsWithPredicate updatePolitely returned success: %{BOOL}d", buf, 0x12u);
  }
  id v5 = objc_alloc((Class)BCRemoteManagedObjectIDMonitor);
  id v6 = [*(id *)(a1 + 40) persistentStoreCoordinator];
  id v7 = [*(id *)(a1 + 40) currentJaliscoHistoryToken];
  id v8 = [v5 initWithCoordinator:v6 entityName:@"BLJaliscoServerItem" historyToken:v7 predicate:*(void *)(a1 + 48) mapProperty:@"storeID" propertiesOfInterest:0 observer:*(void *)(a1 + 32)];
  [*(id *)(a1 + 32) setLibraryAssetMonitor:v8];

  char v9 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v9, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v10 = [*(id *)(a1 + 32) identifier];
    id v11 = [*(id *)(a1 + 32) libraryAssetMonitor];
    *(_DWORD *)buf = 138412546;
    id v14 = v10;
    __int16 v15 = 2112;
    long long v16 = v11;
    _os_log_impl((void *)&_mh_execute_header, v9, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor libraryAssetMonitor assigned to %@", buf, 0x16u);
  }
  return [*(id *)(a1 + 32) setBookletItemsPredicate:*(void *)(a1 + 56)];
}

void sub_10020A2A0(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    id v8 = [*(id *)(a1 + 32) identifier];
    int v11 = 138412546;
    uint64_t v12 = v8;
    __int16 v13 = 2112;
    id v14 = v5;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ [JaliscoDS] fetchAssetIDsWithCompletion: assetIDs %@", (uint8_t *)&v11, 0x16u);
  }
  kdebug_trace();
  id v9 = objc_retainBlock(*(id *)(a1 + 40));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(id, id, id))v9 + 2))(v9, v5, v6);
  }
}

void sub_10020A4BC(id *a1)
{
  id v2 = +[BLJaliscoDAAPClient sharedClient];
  id v3 = [v2 newManagedObjectContext];
  int v4 = +[NSSet setWithArray:a1[4]];
  long long v53 = v2;
  uint64_t v5 = [v2 fetchRequestForStoreIDs:v4];

  id v67 = 0;
  uint64_t v54 = v3;
  id v6 = [v3 executeFetchRequest:v5 error:&v67];
  id v51 = v67;
  id v7 = [v6 bu_arrayByRemovingItemsWithDuplicateValuesForKey:@"storeID"];

  id v8 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
  {
    id v9 = [a1[5] identifier];
    uint64_t v10 = [v7 componentsJoinedByString:@", "];
    *(_DWORD *)buf = 138412802;
    uint64_t v70 = v9;
    __int16 v71 = 2112;
    uint64_t v72 = v5;
    __int16 v73 = 2112;
    long long v74 = v10;
    _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ [JaliscoDS] fetchAssetsWithIDs --- unsortedJaliscoServerItems fetch:%@ items:%@", buf, 0x20u);
  }
  char v52 = (void *)v5;

  int v11 = +[NSMutableArray arrayWithCapacity:](NSMutableArray, "arrayWithCapacity:", [v7 count]);
  int v58 = a1;
  uint64_t v12 = (char *)[a1[4] count];
  if (v12)
  {
    __int16 v13 = v12;
    for (uint64_t i = 0; i != v13; ++i)
    {
      __int16 v15 = +[NSNull null];
      [v11 setObject:v15 atIndexedSubscript:i];
    }
  }
  long long v65 = 0u;
  long long v66 = 0u;
  long long v63 = 0u;
  long long v64 = 0u;
  id v16 = v7;
  id v17 = [v16 countByEnumeratingWithState:&v63 objects:v79 count:16];
  __int16 v55 = v16;
  long long v56 = v11;
  if (v17)
  {
    id v18 = v17;
    uint64_t v19 = *(void *)v64;
    do
    {
      for (j = 0; j != v18; j = (char *)j + 1)
      {
        if (*(void *)v64 != v19) {
          objc_enumerationMutation(v16);
        }
        id v21 = *(void **)(*((void *)&v63 + 1) + 8 * (void)j);
        uint64_t v22 = [v21 storeID];
        id v23 = [v58[4] indexOfObject:v22];
        if (v23 != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          id v24 = v23;
          uint64_t v25 = [v58[5] identifier];
          id v26 = +[BKJaliscoAsset newAssetFromServerItem:v21 dataSourceIdentifier:v25];

          [v11 setObject:v26 atIndexedSubscript:v24];
          id v27 = BKLibraryDataSourceJaliscoLog();
          if (os_log_type_enabled(v27, OS_LOG_TYPE_DEFAULT))
          {
            int v28 = [v58[5] identifier];
            uint64_t v29 = [v26 storeID];
            id v30 = [v26 title];
            char v31 = [v26 expectedDate];
            *(_DWORD *)buf = 138413314;
            uint64_t v70 = v28;
            __int16 v71 = 2160;
            uint64_t v72 = 1752392040;
            __int16 v73 = 2112;
            long long v74 = v29;
            __int16 v75 = 2112;
            CGAffineTransform v76 = v30;
            __int16 v77 = 2112;
            uint64_t v78 = v31;
            _os_log_impl((void *)&_mh_execute_header, v27, OS_LOG_TYPE_DEFAULT, "%@ fetch -- asset storeID: %{mask.hash}@ title: %@ expectedDate: %@", buf, 0x34u);

            int v11 = v56;
            id v16 = v55;
          }
        }
      }
      id v18 = [v16 countByEnumeratingWithState:&v63 objects:v79 count:16];
    }
    while (v18);
  }

  id v32 = v58[5];
  char v33 = +[NSSet setWithArray:v58[4]];
  uint64_t v34 = [v32 _bookletItemsForStoreIDSet:v33 moc:v54 dedupe:1];

  long long v61 = 0u;
  long long v62 = 0u;
  long long v59 = 0u;
  long long v60 = 0u;
  id obj = v34;
  id v35 = [obj countByEnumeratingWithState:&v59 objects:v68 count:16];
  if (v35)
  {
    id v36 = v35;
    uint64_t v37 = *(void *)v60;
    do
    {
      for (k = 0; k != v36; k = (char *)k + 1)
      {
        if (*(void *)v60 != v37) {
          objc_enumerationMutation(obj);
        }
        id v39 = *(void **)(*((void *)&v59 + 1) + 8 * (void)k);
        id v40 = [v39 storeID];
        id v41 = [v58[4] indexOfObject:v40];
        if (v41 != (id)0x7FFFFFFFFFFFFFFFLL)
        {
          id v42 = v41;
          long long v43 = [v58[5] _supplementalAssetFromServerBookletItem:v39];
          [v11 setObject:v43 atIndexedSubscript:v42];
          uint64_t v44 = BKLibraryDataSourceJaliscoLog();
          if (os_log_type_enabled(v44, OS_LOG_TYPE_DEFAULT))
          {
            id v45 = [v58[5] identifier];
            uint64_t v46 = [v39 title];
            *(_DWORD *)buf = 138413058;
            uint64_t v70 = v45;
            __int16 v71 = 2160;
            uint64_t v72 = 1752392040;
            __int16 v73 = 2112;
            long long v74 = v40;
            __int16 v75 = 2112;
            CGAffineTransform v76 = v46;
            _os_log_impl((void *)&_mh_execute_header, v44, OS_LOG_TYPE_DEFAULT, "%@ fetch -- booklet storeID: %{mask.hash}@ title: %@", buf, 0x2Au);

            int v11 = v56;
          }
        }
      }
      id v36 = [obj countByEnumeratingWithState:&v59 objects:v68 count:16];
    }
    while (v36);
  }

  unint64_t v47 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v47, OS_LOG_TYPE_DEFAULT))
  {
    long long v48 = [v58[5] identifier];
    *(_DWORD *)buf = 138412546;
    uint64_t v70 = v48;
    __int16 v71 = 2112;
    uint64_t v72 = (uint64_t)v11;
    _os_log_impl((void *)&_mh_execute_header, v47, OS_LOG_TYPE_DEFAULT, "%@ [JaliscoDS] fetchAssetsWithIDs --- sortedAssets %@", buf, 0x16u);
  }
  kdebug_trace();
  id v49 = objc_retainBlock(v58[6]);
  id v50 = v49;
  if (v49) {
    (*((void (**)(id, void *, void))v49 + 2))(v49, v11, 0);
  }
}

void sub_10020ADE8(uint64_t a1)
{
  id v2 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) identifier];
    uint64_t v4 = *(void *)(a1 + 40);
    uint64_t v5 = *(void *)(a1 + 48);
    *(_DWORD *)buf = 138412802;
    long long v43 = v3;
    __int16 v44 = 2112;
    uint64_t v45 = v4;
    __int16 v46 = 2112;
    uint64_t v47 = v5;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%@ resolveLibraryAsset: (assetID:%@, title:%@)", buf, 0x20u);
  }
  id v6 = +[BLJaliscoDAAPClient sharedClient];
  id v7 = [v6 newManagedObjectContext];

  id v8 = *(void **)(a1 + 32);
  uint64_t v9 = *(void *)(a1 + 56);
  if (*(unsigned char *)(a1 + 88))
  {
    uint64_t v10 = [v8 _bookletItemForStoreID:v9 moc:v7];
    id v11 = v10;
    if (v10)
    {
      uint64_t v12 = [v10 parentItem];
      __int16 v13 = [v12 storeDownloadParameters];

      id v14 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 64) longLongValue]);
      __int16 v15 = +[BLPurchaseRequest requestWithBuyParameters:v13 storeIdentifier:v14];

      id v16 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 56) longLongValue]);
      id v17 = +[NSSet setWithObject:v16];
      [v15 setStoreIdentifiersToDownload:v17];

      [v15 setAudiobook:1];
      [v15 setSupplementalContent:1];
      id v18 = [*(id *)(a1 + 72) userInitiated];

      if (v18)
      {
        uint64_t v19 = [*(id *)(a1 + 72) userInitiated];
        [v15 setUserInitiated:[v19 BOOLValue]];
      }
      uint64_t v20 = +[JSABridge sharedInstance];
      id v21 = [v20 windowManager];

      uint64_t v22 = +[BLDownloadQueue sharedInstance];
      v39[0] = _NSConcreteStackBlock;
      v39[1] = 3221225472;
      v39[2] = sub_10020B38C;
      _OWORD v39[3] = &unk_100A46998;
      v39[4] = *(void *)(a1 + 32);
      id v11 = v11;
      id v40 = v11;
      id v41 = *(id *)(a1 + 80);
      [v22 purchaseWithRequest:v15 uiManager:v21 completion:v39];

      goto LABEL_19;
    }
    id v24 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      sub_1007F17E0();
    }
  }
  else
  {
    id v23 = [v8 _serverItemForStoreID:v9 moc:v7];
    id v11 = v23;
    if (v23 && ([v23 isDeleted] & 1) == 0)
    {
      uint64_t v25 = [*(id *)(a1 + 32) identifier];
      id v26 = +[BKJaliscoAsset newAssetFromServerItem:v11 dataSourceIdentifier:v25];

      id v27 = [v11 storeDownloadParameters];
      int v28 = +[NSNumber numberWithLongLong:](NSNumber, "numberWithLongLong:", [*(id *)(a1 + 56) longLongValue]);
      __int16 v13 = +[BLPurchaseRequest requestWithBuyParameters:v27 storeIdentifier:v28];

      uint64_t v29 = [v11 isAudiobook];
      [v13 setAudiobook:[v29 BOOLValue]];

      id v30 = [*(id *)(a1 + 72) userInitiated];

      if (v30)
      {
        char v31 = [*(id *)(a1 + 72) userInitiated];
        [v13 setUserInitiated:[v31 BOOLValue]];
      }
      id v32 = +[JSABridge sharedInstance];
      __int16 v15 = [v32 windowManager];

      char v33 = +[BLDownloadQueue sharedInstance];
      v36[0] = _NSConcreteStackBlock;
      v36[1] = 3221225472;
      v36[2] = sub_10020B648;
      v36[3] = &unk_100A4A5D0;
      void v36[4] = *(void *)(a1 + 32);
      id v34 = *(id *)(a1 + 80);
      id v37 = v26;
      id v38 = v34;
      id v35 = v26;
      [v33 purchaseWithRequest:v13 uiManager:v15 completion:v36];

      goto LABEL_19;
    }
    id v24 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v24, OS_LOG_TYPE_ERROR)) {
      sub_1007F1744();
    }
  }

  __int16 v13 = (void (**)(void, void, void, void))objc_retainBlock(*(id *)(a1 + 80));
  if (v13)
  {
    __int16 v15 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorAssetIDNotInCacheError userInfo:0];
    ((void (**)(void, void, uint64_t, void *))v13)[2](v13, 0, 1, v15);
LABEL_19:
  }
}

void sub_10020B38C(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v6 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [*(id *)(a1 + 32) identifier];
    *(_DWORD *)buf = 138543618;
    id v18 = v7;
    __int16 v19 = 2112;
    id v20 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%{public}@ Purchase completed. error:%@", buf, 0x16u);
  }
  id v8 = [*(id *)(a1 + 32) _supplementalAssetFromServerBookletItem:*(void *)(a1 + 40)];
  id v9 = objc_retainBlock(*(id *)(a1 + 48));
  uint64_t v10 = v9;
  if (v9) {
    (*((void (**)(id, void *, uint64_t, id))v9 + 2))(v9, v8, 1, v5);
  }

  id v11 = [*(id *)(a1 + 32) plistWriter];
  id v16 = v8;
  uint64_t v12 = +[NSArray arrayWithObjects:&v16 count:1];
  v14[0] = _NSConcreteStackBlock;
  v14[1] = 3221225472;
  void v14[2] = sub_10020B554;
  v14[3] = &unk_100A43E90;
  void v14[4] = *(void *)(a1 + 32);
  id v15 = v8;
  id v13 = v8;
  [v11 removePlistAssets:v12 completion:v14];
}

void sub_10020B554(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id v6 = [*(id *)(a1 + 32) identifier];
    id v7 = [*(id *)(a1 + 40) assetID];
    int v8 = 138543874;
    id v9 = v6;
    __int16 v10 = 2112;
    id v11 = v7;
    __int16 v12 = 2112;
    id v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%{public}@ Deleted equivalent asset with assetID:%@ from books.plist error: %@", (uint8_t *)&v8, 0x20u);
  }
}

void sub_10020B648(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  id v5 = a4;
  id v6 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v6, OS_LOG_TYPE_INFO))
  {
    id v7 = [*(id *)(a1 + 32) identifier];
    *(_DWORD *)buf = 138412546;
    id v17 = v7;
    __int16 v18 = 2112;
    id v19 = v5;
    _os_log_impl((void *)&_mh_execute_header, v6, OS_LOG_TYPE_INFO, "%@ Purchase completed. error:%@", buf, 0x16u);
  }
  id v8 = objc_retainBlock(*(id *)(a1 + 48));
  id v9 = v8;
  if (v8) {
    (*((void (**)(id, void, uint64_t, id))v8 + 2))(v8, *(void *)(a1 + 40), 1, v5);
  }

  __int16 v10 = [*(id *)(a1 + 32) plistWriter];
  uint64_t v15 = *(void *)(a1 + 40);
  id v11 = +[NSArray arrayWithObjects:&v15 count:1];
  v13[0] = _NSConcreteStackBlock;
  v13[1] = 3221225472;
  void v13[2] = sub_10020B7F8;
  v13[3] = &unk_100A43E90;
  __int16 v12 = *(void **)(a1 + 40);
  void v13[4] = *(void *)(a1 + 32);
  id v14 = v12;
  [v10 removePlistAssets:v11 completion:v13];
}

void sub_10020B7F8(uint64_t a1, uint64_t a2, void *a3)
{
  id v4 = a3;
  id v5 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v5, OS_LOG_TYPE_INFO))
  {
    id v6 = [*(id *)(a1 + 32) identifier];
    id v7 = [*(id *)(a1 + 40) assetID];
    int v8 = 138412802;
    id v9 = v6;
    __int16 v10 = 2112;
    id v11 = v7;
    __int16 v12 = 2112;
    id v13 = v4;
    _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_INFO, "%@ Deleted equivalent asset with assetID:%@ from books.plist error: %@", (uint8_t *)&v8, 0x20u);
  }
}

void sub_10020BAC0(uint64_t a1)
{
  id v2 = +[BLJaliscoDAAPClient sharedClient];
  id v3 = [v2 newManagedObjectContext];

  uint64_t v4 = *(void *)(a1 + 32);
  if (*(unsigned char *)(a1 + 64))
  {
    if (v4)
    {
      id v5 = [*(id *)(a1 + 40) _bookletItemForStoreID:v4 moc:v3];
      id v6 = [*(id *)(a1 + 40) _supplementalAssetFromServerBookletItem:v5];
      if (!v6)
      {
        id v7 = BKLibraryDataSourceJaliscoLog();
        if (os_log_type_enabled(v7, OS_LOG_TYPE_ERROR)) {
          sub_1007F17E0();
        }

        int v8 = (void (**)(void, void, void))objc_retainBlock(*(id *)(a1 + 56));
        if (v8)
        {
          id v9 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorAssetIDNotInCacheError userInfo:0];
          ((void (**)(void, void, void *))v8)[2](v8, 0, v9);
        }
LABEL_24:

        goto LABEL_25;
      }
LABEL_22:
      id v17 = objc_retainBlock(*(id *)(a1 + 56));
      int v8 = (void (**)(void, void, void))v17;
      if (v17) {
        (*((void (**)(id, id, void))v17 + 2))(v17, v6, 0);
      }
      goto LABEL_24;
    }
  }
  else if (v4)
  {
    __int16 v10 = [*(id *)(a1 + 40) _serverItemForStoreID:v4 moc:v3];
    id v5 = v10;
    if (!v10 || ([v10 isDeleted] & 1) != 0)
    {
      id v11 = BKLibraryDataSourceJaliscoLog();
      if (os_log_type_enabled(v11, OS_LOG_TYPE_ERROR)) {
        sub_1007F1944();
      }

      id v6 = objc_retainBlock(*(id *)(a1 + 56));
      if (!v6) {
        goto LABEL_25;
      }
      int v8 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorAssetIDNotInCacheError userInfo:0];
      (*((void (**)(id, void, void))v6 + 2))(v6, 0, v8);
      goto LABEL_24;
    }
    id v13 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v13, OS_LOG_TYPE_DEFAULT))
    {
      id v14 = [*(id *)(a1 + 40) identifier];
      uint64_t v15 = *(void *)(a1 + 32);
      int v18 = 138412802;
      id v19 = v14;
      __int16 v20 = 2160;
      uint64_t v21 = 1752392040;
      __int16 v22 = 2112;
      uint64_t v23 = v15;
      _os_log_impl((void *)&_mh_execute_header, v13, OS_LOG_TYPE_DEFAULT, "%@ asset found for storeId: %{mask.hash}@", (uint8_t *)&v18, 0x20u);
    }
    id v16 = [*(id *)(a1 + 40) identifier];
    id v6 = +[BKJaliscoAsset newAssetFromServerItem:v5 dataSourceIdentifier:v16];

    goto LABEL_22;
  }
  __int16 v12 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v12, OS_LOG_TYPE_ERROR)) {
    sub_1007F186C(a1, a1 + 32, v12);
  }

  id v5 = (void (**)(void, void, void))objc_retainBlock(*(id *)(a1 + 56));
  if (v5)
  {
    id v6 = +[NSError errorWithDomain:kBKLibraryDataSourceDomain code:kBKLibraryDataSourceErrorAssetIDNotInCacheError userInfo:0];
    ((void (**)(void, void, id))v5)[2](v5, 0, v6);
LABEL_25:
  }
}

void sub_10020BF34(uint64_t a1, void *a2)
{
  id v3 = a2;
  id v4 = [v3 count];
  if (v4)
  {
    id v5 = v4;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 3221225472;
    void v11[2] = sub_10020C0C4;
    v11[3] = &unk_100A4A5A8;
    id v6 = *(void **)(a1 + 32);
    id v12 = *(id *)(a1 + 40);
    id v14 = v5;
    id v13 = *(id *)(a1 + 48);
    [v6 fetchAssetsWithIDs:v3 completion:v11];

    id v7 = v12;
  }
  else
  {
    int v8 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      [*(id *)(a1 + 40) time];
      id v9 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
      *(_DWORD *)buf = 138412290;
      id v16 = v9;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "MRP: %@ for 0 jalisco books", buf, 0xCu);
    }
    id v10 = objc_retainBlock(*(id *)(a1 + 48));
    id v7 = v10;
    if (v10) {
      (*((void (**)(id, void))v10 + 2))(v10, 0);
    }
  }
}

void sub_10020C0C4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  id v7 = [v5 bu_arrayByRemovingNSNulls];
  long long v21 = 0u;
  long long v22 = 0u;
  long long v23 = 0u;
  long long v24 = 0u;
  id v8 = [v7 countByEnumeratingWithState:&v21 objects:v29 count:16];
  if (v8)
  {
    id v9 = v8;
    id v10 = 0;
    uint64_t v11 = *(void *)v22;
    do
    {
      for (uint64_t i = 0; i != v9; uint64_t i = (char *)i + 1)
      {
        if (*(void *)v22 != v11) {
          objc_enumerationMutation(v7);
        }
        id v13 = [*(id *)(*((void *)&v21 + 1) + 8 * i) purchaseDate];
        id v14 = v13;
        if (!v10 || [v13 compare:v10] == (id)1)
        {
          id v15 = v14;

          id v10 = v15;
        }
      }
      id v9 = [v7 countByEnumeratingWithState:&v21 objects:v29 count:16];
    }
    while (v9);
  }
  else
  {
    id v10 = 0;
  }
  id v16 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v16, OS_LOG_TYPE_DEFAULT))
  {
    [*(id *)(a1 + 32) time];
    id v17 = +[NSNumber numberWithDouble:](NSNumber, "numberWithDouble:");
    int v18 = +[NSNumber numberWithUnsignedInteger:*(void *)(a1 + 48)];
    *(_DWORD *)buf = 138412546;
    id v26 = v17;
    __int16 v27 = 2112;
    int v28 = v18;
    _os_log_impl((void *)&_mh_execute_header, v16, OS_LOG_TYPE_DEFAULT, "MRP: %@ for %@ jalisco books", buf, 0x16u);
  }
  id v19 = objc_retainBlock(*(id *)(a1 + 40));
  __int16 v20 = v19;
  if (v19) {
    (*((void (**)(id, void *))v19 + 2))(v19, v10);
  }
}

void sub_10020C5A8(id a1, BOOL a2)
{
  BOOL v2 = a2;
  id v3 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v3, OS_LOG_TYPE_DEFAULT))
  {
    v4[0] = 67109120;
    v4[1] = v2;
    _os_log_impl((void *)&_mh_execute_header, v3, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourceJalisco updated jalisco after purchase %{BOOL}d}", (uint8_t *)v4, 8u);
  }
}

void sub_10020CADC(uint64_t a1, void *a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = *(void **)(a1 + 40);
  id v4 = a2;
  id v6 = [v3 identifier];
  id v5 = +[BKJaliscoAsset newAssetFromServerItem:v4 dataSourceIdentifier:v6];

  [v2 addObject:v5];
}

void sub_10020CCB0(uint64_t a1, uint64_t a2)
{
  BOOL v2 = *(void **)(a1 + 32);
  id v3 = [*(id *)(a1 + 40) _supplementalAssetFromServerBookletItem:a2];
  [v2 addObject:v3];
}

void sub_10020CF18(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

void sub_10020CFA8(_Unwind_Exception *a1)
{
  objc_sync_exit(v1);
  _Unwind_Resume(a1);
}

id sub_10020D030(uint64_t a1)
{
  BOOL v2 = *(unsigned char **)(a1 + 32);
  if (v2[10])
  {
    uint64_t v3 = 1;
  }
  else
  {
    id v4 = +[BLJaliscoDAAPClient sharedClient];
    uint64_t v3 = (uint64_t)[v4 isInitiallyLoadingJalisco];

    BOOL v2 = *(unsigned char **)(a1 + 32);
  }

  return _[v2 setProcessingAuthentication:v3];
}

void *sub_10020D16C(void *result)
{
  uint64_t v1 = result;
  uint64_t v3 = result[4];
  uint64_t v2 = result[5];
  uint64_t v4 = *(void *)(v2 + 56);
  if (v3 == v4)
  {
    id v5 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [(id)v1[5] identifier];
      id v7 = [(id)v1[6] deletedObjects];
      id v13 = [v7 count];
      id v9 = [(id)v1[6] addedObjects];
      id v14 = [v9 count];
      uint64_t v11 = [(id)v1[6] updatedObjects];
      int v15 = 138413058;
      id v16 = v6;
      __int16 v17 = 2048;
      id v18 = v13;
      __int16 v19 = 2048;
      id v20 = v14;
      __int16 v21 = 2048;
      id v22 = [v11 count];
      id v12 = "%@ managedObjectBackgroundMonitor:didSaveNotify: (deleted: %ld, added: %ld, updated: %ld). Will process and "
            "notify library of changes.";
      goto LABEL_7;
    }
  }
  else
  {
    if (v3 != *(void *)(v2 + 64)) {
      return result;
    }
    id v5 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v5, OS_LOG_TYPE_DEFAULT))
    {
      id v6 = [(id)v1[5] identifier];
      id v7 = [(id)v1[6] deletedObjects];
      id v8 = [v7 count];
      id v9 = [(id)v1[6] addedObjects];
      id v10 = [v9 count];
      uint64_t v11 = [(id)v1[6] updatedObjects];
      int v15 = 138413058;
      id v16 = v6;
      __int16 v17 = 2048;
      id v18 = v8;
      __int16 v19 = 2048;
      id v20 = v10;
      __int16 v21 = 2048;
      id v22 = [v11 count];
      id v12 = "%@ Booklet managedObjectBackgroundMonitor:didSaveNotify: (deleted: %ld, added: %ld, updated: %ld). Will proc"
            "ess and notify library of changes.";
LABEL_7:
      _os_log_impl((void *)&_mh_execute_header, v5, OS_LOG_TYPE_DEFAULT, v12, (uint8_t *)&v15, 0x2Au);
    }
  }

  return [(id)v1[5] _processLibraryAssetChanges:v1[6] bookletItems:v3 != v4];
}

void sub_10020D4F8(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v4 = (id *)(a1 + 40);
  uint64_t v3 = *(void *)(a1 + 40);
  if (v2 == *(void *)(v3 + 56))
  {
    id v8 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v8, OS_LOG_TYPE_DEFAULT))
    {
      id v9 = [*(id *)(a1 + 40) identifier];
      long long v48 = [*(id *)(a1 + 48) deletedObjects];
      id v10 = [v48 count];
      uint64_t v11 = [*(id *)(a1 + 48) addedObjects];
      id v12 = [v11 count];
      id v13 = [*(id *)(a1 + 48) updatedObjects];
      id v14 = [v13 count];
      int v15 = [*(id *)(a1 + 40) fetchCompletion];
      *(_DWORD *)buf = 138413314;
      CFStringRef v16 = @"have";
      id v51 = v9;
      if (!v15) {
        CFStringRef v16 = @"nil";
      }
      __int16 v52 = 2048;
      id v53 = v10;
      __int16 v54 = 2048;
      id v55 = v12;
      __int16 v56 = 2048;
      id v57 = v14;
      __int16 v58 = 2112;
      CFStringRef v59 = v16;
      _os_log_impl((void *)&_mh_execute_header, v8, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor:fetchNotify: (deleted: %ld, added: %ld, updated: %ld). %@ fetchCompletion", buf, 0x34u);
    }
    __int16 v17 = [*(id *)(a1 + 48) addedObjects];
    id v7 = [v17 bu_arrayByRemovingDuplicates];

    id v18 = +[BCCacheManager defaultCacheManager];
    [v18 addProductProfileIDs:v7 priority:3];

    id v19 = [v7 mutableCopy];
    [*(id *)(a1 + 40) setMonitoredStoreIDs:v19];

    id v20 = +[BLJaliscoDAAPClient sharedClient];
    id v21 = objc_alloc((Class)BCRemoteManagedObjectIDMonitor);
    id v22 = [v20 persistentStoreCoordinator];
    long long v23 = [v20 currentJaliscoHistoryToken];
    long long v24 = [*(id *)(a1 + 40) bookletItemsPredicate];
    id v25 = [v21 initWithCoordinator:v22 entityName:@"BLJaliscoServerBookletItem" historyToken:v23 predicate:v24 mapProperty:@"storeID" propertiesOfInterest:0 observer:*(void *)(a1 + 40)];
    [*(id *)(a1 + 40) setBookletAssetMonitor:v25];

    id v26 = BKLibraryDataSourceJaliscoLog();
    if (os_log_type_enabled(v26, OS_LOG_TYPE_DEFAULT))
    {
      __int16 v27 = [*v4 identifier];
      int v28 = [*v4 bookletAssetMonitor];
      *(_DWORD *)buf = 138412546;
      id v51 = v27;
      __int16 v52 = 2112;
      id v53 = v28;
      _os_log_impl((void *)&_mh_execute_header, v26, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor bookletAssetMonitor assigned to %@", buf, 0x16u);
    }
  }
  else
  {
    uint64_t v5 = *(void *)(v3 + 64);
    id v6 = BKLibraryDataSourceJaliscoLog();
    id v7 = v6;
    if (v2 == v5)
    {
      if (os_log_type_enabled(v6, OS_LOG_TYPE_DEFAULT))
      {
        uint64_t v29 = [*(id *)(a1 + 40) identifier];
        id v49 = [*(id *)(a1 + 48) deletedObjects];
        id v30 = [v49 count];
        char v31 = [*(id *)(a1 + 48) addedObjects];
        id v32 = [v31 count];
        char v33 = [*(id *)(a1 + 48) updatedObjects];
        id v34 = [v33 count];
        id v35 = [*(id *)(a1 + 40) fetchCompletion];
        *(_DWORD *)buf = 138413314;
        CFStringRef v36 = @"have";
        id v51 = v29;
        if (!v35) {
          CFStringRef v36 = @"nil";
        }
        __int16 v52 = 2048;
        id v53 = v30;
        __int16 v54 = 2048;
        id v55 = v32;
        __int16 v56 = 2048;
        id v57 = v34;
        __int16 v58 = 2112;
        CFStringRef v59 = v36;
        _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "%@ Booklet managedObjectBackgroundMonitor:fetchNotify: (deleted: %ld, added: %ld, updated: %ld). %@ fetchCompletion", buf, 0x34u);
      }
      id v37 = [*(id *)(a1 + 40) monitoredStoreIDs];
      id v38 = [*(id *)(a1 + 48) addedObjects];
      id v39 = [v38 bu_arrayByRemovingDuplicates];
      [v37 addObjectsFromArray:v39];

      id v40 = [*(id *)(a1 + 40) fetchCompletion];

      if (v40)
      {
        id v41 = BKLibraryDataSourceJaliscoLog();
        if (os_log_type_enabled(v41, OS_LOG_TYPE_DEFAULT))
        {
          id v42 = [*v4 identifier];
          long long v43 = [*v4 monitoredStoreIDs];
          __int16 v44 = [v43 componentsJoinedByString:@", "];
          *(_DWORD *)buf = 138412546;
          id v51 = v42;
          __int16 v52 = 2112;
          id v53 = v44;
          _os_log_impl((void *)&_mh_execute_header, v41, OS_LOG_TYPE_DEFAULT, "%@ managedObjectBackgroundMonitor:fetchNotify: Calling completion with %@", buf, 0x16u);
        }
      }
      uint64_t v45 = [*v4 fetchCompletion];
      if (v45)
      {
        __int16 v46 = [*v4 monitoredStoreIDs];
        id v47 = [v46 copy];
        ((void (**)(void, id, void))v45)[2](v45, v47, 0);
      }
      [*v4 setFetchCompletion:0];

      id v7 = [*v4 monitoredStoreIDs];
      [v7 removeAllObjects];
    }
    else if (os_log_type_enabled(v6, OS_LOG_TYPE_ERROR))
    {
      sub_1007F1A68((uint64_t)v4);
    }
  }
}

void sub_10020E3BC(uint64_t a1, void *a2)
{
  id v10 = a2;
  id v3 = [*(id *)(a1 + 32) countForObject:v10];
  uint64_t v4 = v10;
  if (!v3)
  {
    uint64_t v5 = *(void **)(a1 + 40);
    if (*(unsigned char *)(a1 + 56))
    {
      id v6 = [BKLibrarySupplementalAsset alloc];
      id v7 = [*(id *)(a1 + 48) identifier];
      id v8 = [(BKLibrarySupplementalAsset *)v6 initWithParentAsset:0 dataSourceIdentifier:v7 storeID:v10 title:0 downloadParams:0 size:0];
    }
    else
    {
      id v7 = [*(id *)(a1 + 48) identifier];
      id v8 = +[BKJaliscoAsset newAssetWithStoreID:v10 dataSourceIdentifier:v7];
    }
    id v9 = v8;
    [v5 addObject:v8];

    uint64_t v4 = v10;
  }
}

void sub_10020E4AC(id *a1, void *a2)
{
  id v5 = a2;
  id v3 = [a1[4] countForObject:v5];
  if (v3 < [a1[5] countForObject:v5]) {
    BCReportAssertionFailureWithMessage();
  }
  id v4 = [a1[5] countForObject:v5];
  if (v4 >= [a1[4] countForObject:v5]) {
    [a1[6] addObject:v5];
  }
}

void sub_10020E698(uint64_t a1)
{
  uint64_t v2 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v2, OS_LOG_TYPE_DEFAULT))
  {
    id v3 = [*(id *)(a1 + 32) identifier];
    int v4 = 138412290;
    id v5 = v3;
    _os_log_impl((void *)&_mh_execute_header, v2, OS_LOG_TYPE_DEFAULT, "%@ clientDetectedStoreChange reload complete!", (uint8_t *)&v4, 0xCu);
  }
}

void sub_10020E9A4(uint64_t a1, void *a2, uint64_t a3)
{
  id v7 = a2;
  id v5 = objc_retainBlock(*(id *)(a1 + 32));
  id v6 = v5;
  if (v5) {
    (*((void (**)(id, id, uint64_t))v5 + 2))(v5, v7, a3);
  }
}

void sub_10020EAD0(uint64_t a1)
{
  id v1 = objc_retainBlock(*(id *)(a1 + 32));
  if (v1)
  {
    id v2 = v1;
    (*((void (**)(id, uint64_t))v1 + 2))(v1, 1);
    id v1 = v2;
  }
}

void sub_10020EBF0(uint64_t a1, int a2)
{
  int v4 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v4, OS_LOG_TYPE_DEFAULT))
  {
    id v5 = [*(id *)(a1 + 32) identifier];
    int v8 = 138543618;
    id v9 = v5;
    __int16 v10 = 1024;
    int v11 = a2;
    _os_log_impl((void *)&_mh_execute_header, v4, OS_LOG_TYPE_DEFAULT, "%{public}@ reloadPurchaseItemStoreID completed, success=%{BOOL}d", (uint8_t *)&v8, 0x12u);
  }
  if (a2)
  {
    [*(id *)(a1 + 32) updatePurchaseItemsWithCompletion:*(void *)(a1 + 40)];
  }
  else
  {
    id v6 = objc_retainBlock(*(id *)(a1 + 40));
    id v7 = v6;
    if (v6) {
      (*((void (**)(id, void))v6 + 2))(v6, 0);
    }
  }
}

void sub_10020F1DC(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  id v7 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = [v5 componentsJoinedByString:@", "];
    int v12 = 138412802;
    uint64_t v13 = v8;
    __int16 v14 = 2112;
    int v15 = v9;
    __int16 v16 = 2112;
    id v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourceJaliscoPurchases %@ fetchAssets:[%@] error%@", (uint8_t *)&v12, 0x20u);
  }
  id v10 = objc_retainBlock(*(id *)(a1 + 40));
  int v11 = v10;
  if (v10) {
    (*((void (**)(id, id, id))v10 + 2))(v10, v5, v6);
  }
}

void sub_10020F6A4(uint64_t a1, void *a2, void *a3)
{
  id v5 = a2;
  id v6 = a3;
  kdebug_trace();
  id v7 = BKLibraryDataSourceJaliscoLog();
  if (os_log_type_enabled(v7, OS_LOG_TYPE_DEFAULT))
  {
    uint64_t v8 = *(void *)(a1 + 32);
    id v9 = [v5 componentsJoinedByString:@", "];
    int v12 = 138412802;
    uint64_t v13 = v8;
    __int16 v14 = 2112;
    int v15 = v9;
    __int16 v16 = 2112;
    id v17 = v6;
    _os_log_impl((void *)&_mh_execute_header, v7, OS_LOG_TYPE_DEFAULT, "BKLibraryDataSourceJaliscoPreorders %@ fetchAssets:[%@] error%@", (uint8_t *)&v12, 0x20u);
  }
  id v10 = objc_retainBlock(*(id *)(a1 + 40));
  int v11 = v10;
  if (v10) {
    (*((void (**)(id, id, id))v10 + 2))(v10, v5, v6);
  }
}

void sub_10020F850(void *a1, uint64_t a2, uint64_t a3, const char *a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint8_t a9)
{
  _os_log_error_impl(a1, v9, OS_LOG_TYPE_ERROR, a4, &a9, 0x20u);
}

uint64_t sub_10020F870(uint64_t a1)
{
  return *(void *)a1;
}

id sub_10020FC30()
{
  return +[BCPPTConfig os_log];
}

unint64_t sub_10020FD8C(uint64_t a1)
{
  return sub_100210028(a1, &qword_100B24E48, (uint64_t *)&unk_100B24E50, (uint64_t (*)(void))sub_100326560);
}

unint64_t sub_10020FDB4(uint64_t a1)
{
  return sub_10020FE04(a1, &qword_100B24E38, &qword_100B24E40, (uint64_t (*)(void))sub_1003265E8);
}

unint64_t sub_10020FDDC(uint64_t a1)
{
  return sub_10020FE04(a1, &qword_100B24E28, &qword_100B24E30, (uint64_t (*)(void))sub_1003265EC);
}

unint64_t sub_10020FE04(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_100058D18(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    int v12 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a3);
  uint64_t v11 = sub_1007FF2E0();
  int v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  __int16 v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_1007F21D0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    _OWORD v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210000(uint64_t a1)
{
  return sub_100210028(a1, &qword_100B24E18, &qword_100B24E20, (uint64_t (*)(void))sub_100326684);
}

unint64_t sub_100210028(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void))
{
  uint64_t v29 = a4;
  uint64_t v7 = sub_100058D18(a2);
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)&v28 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    int v12 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a3);
  uint64_t v11 = sub_1007FF2E0();
  int v12 = (void *)v11;
  uint64_t v13 = *(void *)(a1 + 16);
  if (!v13)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v12;
  }
  __int16 v14 = &v10[*(int *)(v7 + 48)];
  uint64_t v15 = v11 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v8 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v28 = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v8 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v17, (uint64_t)v10, a2);
    char v19 = *v10;
    unint64_t result = v29(*v10);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(unsigned char *)(v12[6] + result) = v19;
    uint64_t v23 = v12[7];
    uint64_t v24 = sub_1007F21D0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v14, v24);
    uint64_t v25 = v12[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    _OWORD v12[2] = v27;
    v17 += v18;
    if (!--v13)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210224(uint64_t a1)
{
  return sub_100210274(a1, &qword_100B24CA0, &qword_100B24CA8, sub_100043790);
}

unint64_t sub_10021024C(uint64_t a1)
{
  return sub_100210274(a1, (uint64_t *)&unk_100B2C5C0, &qword_100B24A60, sub_100043790);
}

unint64_t sub_100210274(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v8 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a2);
  uint64_t v7 = sub_1007FF2E0();
  uint64_t v8 = (void *)v7;
  uint64_t v9 = *(void *)(a1 + 16);
  if (!v9)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v8;
  }
  uint64_t v10 = v7 + 64;
  uint64_t v11 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10005B044(v11, (uint64_t)&v18, a3);
    uint64_t v12 = v18;
    unint64_t result = a4(v18);
    if (v14) {
      break;
    }
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    *(void *)(v8[6] + 8 * result) = v12;
    unint64_t result = (unint64_t)sub_10005E614(&v19, (_OWORD *)(v8[7] + 32 * result));
    uint64_t v15 = v8[2];
    BOOL v16 = __OFADD__(v15, 1);
    uint64_t v17 = v15 + 1;
    if (v16) {
      goto LABEL_11;
    }
    void v8[2] = v17;
    v11 += 40;
    if (!--v9)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002103A4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    id v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B24A68);
  id v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  int v4 = (unsigned char *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 2);
    uint64_t v6 = *((void *)v4 - 1);
    char v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10005E0B0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(unsigned char *)(v2[7] + result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 24;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002104B8(uint64_t a1)
{
  return sub_100210028(a1, &qword_100B24E08, &qword_100B24E10, (uint64_t (*)(void))sub_1003266C8);
}

unint64_t sub_1002104E0(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18((uint64_t *)&unk_100B2C4A0);
  uint64_t v2 = sub_1007FF2E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10005B044(v6, (uint64_t)v15, (uint64_t *)&unk_100B24680);
    unint64_t result = sub_100073DE8((uint64_t)v15);
    if (v8) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v9 = v3[6] + 40 * result;
    long long v10 = v15[0];
    long long v11 = v15[1];
    *(void *)(v9 + 32) = v16;
    *(_OWORD *)uint64_t v9 = v10;
    *(_OWORD *)(v9 + 16) = v11;
    unint64_t result = sub_1000513B8((uint64_t)&v17, v3[7] + 32 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 72;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210624(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18((uint64_t *)&unk_100B24EE0);
  uint64_t v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 56);
  while (1)
  {
    uint64_t v5 = *(v4 - 3);
    uint64_t v6 = *(v4 - 2);
    uint64_t v8 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10005E0B0(v5, v6);
    if (v10) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    long long v11 = (uint64_t *)(v2[6] + 16 * result);
    *long long v11 = v5;
    v11[1] = v6;
    uint64_t v12 = (void *)(v2[7] + 16 * result);
    *uint64_t v12 = v8;
    v12[1] = v7;
    uint64_t v13 = v2[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v4 += 4;
    v2[2] = v15;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210748(uint64_t a1)
{
  return sub_100211498(a1, &qword_100B24D80);
}

unint64_t sub_100210754(uint64_t a1)
{
  return sub_100210028(a1, &qword_100B24DF8, &qword_100B24E00, (uint64_t (*)(void))sub_1003268A4);
}

unint64_t sub_10021077C(uint64_t a1)
{
  return sub_100210274(a1, &qword_100B24CB0, &qword_100B24CB8, sub_100043790);
}

unint64_t sub_1002107A4(uint64_t a1)
{
  return sub_100210274(a1, &qword_100B24C90, &qword_100B24C98, sub_100043790);
}

unint64_t sub_1002107CC(uint64_t a1)
{
  return sub_100210028(a1, &qword_100B24DE8, &qword_100B24DF0, (uint64_t (*)(void))sub_1003268E8);
}

unint64_t sub_1002107F4(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18((uint64_t *)&unk_100B2C690);
  uint64_t v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    swift_bridgeObjectRetain();
    unint64_t result = sub_10005E0B0(v5, v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v10 = (uint64_t *)(v2[6] + 16 * result);
    *char v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210908(uint64_t a1)
{
  return sub_10020FE04(a1, &qword_100B24DD8, &qword_100B24DE0, (uint64_t (*)(void))sub_1003269BC);
}

unint64_t sub_100210930(uint64_t a1)
{
  return sub_10020FE04(a1, &qword_100B24DC8, &qword_100B24DD0, (uint64_t (*)(void))sub_100326A70);
}

unint64_t sub_100210958(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B25260);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B25268);
  uint64_t v6 = sub_1007FF2E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  char v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v12, (uint64_t)v5, &qword_100B25260);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_100326B00();
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    long long v19 = (void *)(v7[6] + 16 * result);
    *long long v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_1007F7D90();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210B64(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B25258);
  uint64_t v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 2);
    uint64_t v6 = *(v4 - 1);
    uint64_t v7 = *v4;
    unint64_t result = sub_100326B00();
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = (void *)(v2[6] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    *(void *)(v2[7] + 8 * result) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 3;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210C70(uint64_t a1)
{
  return sub_1002117E4(a1, (uint64_t *)&unk_100B24C80);
}

unint64_t sub_100210C7C(uint64_t a1)
{
  return sub_1002117E4(a1, (uint64_t *)&unk_100B24EC0);
}

unint64_t sub_100210C88(uint64_t a1)
{
  return sub_1002117E4(a1, (uint64_t *)&unk_100B2C650);
}

unint64_t sub_100210C94(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B24C78);
  uint64_t v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (void **)(a1 + 40);
  while (1)
  {
    uint64_t v5 = *v4;
    id v6 = *(v4 - 1);
    id v7 = v5;
    unint64_t result = sub_100043790(v6);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v2[6] + v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v6;
    *(void *)(v2[7] + v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v7;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v2[2] = v13;
    v4 += 2;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210DA0(uint64_t a1)
{
  return sub_100210EF0(a1, &qword_100B24908);
}

unint64_t sub_100210DAC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B246F0);
  uint64_t v2 = sub_1007FF2E0();
  uint64_t v3 = (void *)v2;
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  uint64_t v5 = v2 + 64;
  uint64_t v6 = a1 + 32;
  swift_retain();
  while (1)
  {
    sub_10005B044(v6, (uint64_t)&v15, &qword_100B246F8);
    uint64_t v7 = v15;
    uint64_t v8 = v16;
    unint64_t result = sub_10005E0B0(v15, v16);
    if (v10) {
      break;
    }
    *(void *)(v5 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v7;
    v11[1] = v8;
    unint64_t result = sub_1000513B8((uint64_t)&v17, v3[7] + 32 * result);
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v6 += 48;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100210EE4(uint64_t a1)
{
  return sub_100210EF0(a1, &qword_100B24BB0);
}

unint64_t sub_100210EF0(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a2);
  uint64_t v3 = (void *)sub_1007FF2E0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_unknownObjectRetain();
    unint64_t result = sub_10005E0B0(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v11 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100211008(uint64_t a1)
{
  return sub_10020FE04(a1, &qword_100B24DB8, &qword_100B24DC0, (uint64_t (*)(void))sub_100326B74);
}

unint64_t sub_100211030(uint64_t a1)
{
  return sub_100210274(a1, &qword_100B24E88, &qword_100B24E90, sub_100043790);
}

unint64_t sub_100211058(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B249C8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B249D0);
  uint64_t v6 = sub_1007FF2E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v12, (uint64_t)v5, &qword_100B249C8);
    unint64_t result = sub_100326450((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1007F2BF0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_10021124C(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B24A28);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v24 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B24A30);
  uint64_t v6 = sub_1007FF2E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = &v5[*(int *)(v2 + 48)];
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v24[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v12, (uint64_t)v5, &qword_100B24A28);
    unint64_t result = sub_100326C14((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1007F62F0();
    (*(void (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    uint64_t v19 = v7[7];
    uint64_t v20 = sub_1007F63E0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v20 - 8) + 32))(v19 + *(void *)(*(void *)(v20 - 8) + 72) * v16, v9, v20);
    uint64_t v21 = v7[2];
    BOOL v22 = __OFADD__(v21, 1);
    uint64_t v23 = v21 + 1;
    if (v22) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v23;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100211480(uint64_t a1)
{
  return sub_1002117E4(a1, (uint64_t *)&unk_100B24A50);
}

unint64_t sub_10021148C(uint64_t a1)
{
  return sub_100211498(a1, &qword_100B24E70);
}

unint64_t sub_100211498(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a2);
  uint64_t v3 = (void *)sub_1007FF2E0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (void **)(a1 + 48);
  while (1)
  {
    uint64_t v6 = (uint64_t)*(v5 - 2);
    uint64_t v7 = (uint64_t)*(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    id v9 = v8;
    unint64_t result = sub_10005E0B0(v6, v7);
    if (v11) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v3[6] + 16 * result);
    *uint64_t v12 = v6;
    v12[1] = v7;
    *(void *)(v3[7] + 8 * result) = v9;
    uint64_t v13 = v3[2];
    BOOL v14 = __OFADD__(v13, 1);
    uint64_t v15 = v13 + 1;
    if (v14) {
      goto LABEL_11;
    }
    v3[2] = v15;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002115B0(uint64_t a1)
{
  return sub_100211600(a1, &qword_100B24DA8, &qword_100B24DB0, (uint64_t (*)(uint64_t))sub_1003328C8);
}

unint64_t sub_1002115D8(uint64_t a1)
{
  return sub_100211600(a1, &qword_100B24D98, &qword_100B24DA0, (uint64_t (*)(uint64_t))sub_1003328C8);
}

unint64_t sub_100211600(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(uint64_t))
{
  uint64_t v8 = sub_100058D18(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8 - 8);
  char v11 = (char *)v28 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v13 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a3);
  uint64_t v12 = sub_1007FF2E0();
  uint64_t v13 = (void *)v12;
  uint64_t v14 = *(void *)(a1 + 16);
  if (!v14)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v13;
  }
  uint64_t v15 = v12 + 64;
  unint64_t v16 = (*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80);
  v28[1] = a1;
  uint64_t v17 = a1 + v16;
  uint64_t v18 = *(void *)(v9 + 72);
  swift_retain();
  while (1)
  {
    uint64_t v19 = sub_10005B044(v17, (uint64_t)v11, a2);
    unint64_t result = a4(v19);
    if (v21) {
      break;
    }
    unint64_t v22 = result;
    *(void *)(v15 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v23 = v13[7];
    uint64_t v24 = sub_1007F21D0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v24 - 8) + 32))(v23 + *(void *)(*(void *)(v24 - 8) + 72) * v22, v11, v24);
    uint64_t v25 = v13[2];
    BOOL v26 = __OFADD__(v25, 1);
    uint64_t v27 = v25 + 1;
    if (v26) {
      goto LABEL_11;
    }
    void v13[2] = v27;
    v17 += v18;
    if (!--v14)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002117D8(uint64_t a1)
{
  return sub_1002117E4(a1, &qword_100B24900);
}

unint64_t sub_1002117E4(uint64_t a1, uint64_t *a2)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v3 = &_swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(a2);
  uint64_t v3 = (void *)sub_1007FF2E0();
  uint64_t v4 = *(void *)(a1 + 16);
  if (!v4)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v3;
  }
  swift_retain();
  uint64_t v5 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v6 = *(v5 - 2);
    uint64_t v7 = *(v5 - 1);
    uint64_t v8 = *v5;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    unint64_t result = sub_10005E0B0(v6, v7);
    if (v10) {
      break;
    }
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    char v11 = (uint64_t *)(v3[6] + 16 * result);
    *char v11 = v6;
    v11[1] = v7;
    *(void *)(v3[7] + 8 * result) = v8;
    uint64_t v12 = v3[2];
    BOOL v13 = __OFADD__(v12, 1);
    uint64_t v14 = v12 + 1;
    if (v13) {
      goto LABEL_11;
    }
    v3[2] = v14;
    v5 += 3;
    if (!--v4)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_1002118FC(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18((uint64_t *)&unk_100B2C5A0);
  uint64_t v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (char *)(a1 + 64);
  while (1)
  {
    uint64_t v5 = *((void *)v4 - 4);
    uint64_t v6 = *((void *)v4 - 3);
    uint64_t v7 = *((void *)v4 - 2);
    uint64_t v8 = *((void *)v4 - 1);
    char v9 = *v4;
    swift_bridgeObjectRetain();
    sub_1002199F8(v7, v8, v9);
    unint64_t result = sub_10005E0B0(v5, v6);
    if (v11) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v12 = (uint64_t *)(v2[6] + 16 * result);
    *uint64_t v12 = v5;
    v12[1] = v6;
    uint64_t v13 = v2[7] + 24 * result;
    *(void *)uint64_t v13 = v7;
    *(void *)(v13 + 8) = v8;
    *(unsigned char *)(v13 + 16) = v9;
    uint64_t v14 = v2[2];
    BOOL v15 = __OFADD__(v14, 1);
    uint64_t v16 = v14 + 1;
    if (v15) {
      goto LABEL_11;
    }
    v2[2] = v16;
    v4 += 40;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100211A40(uint64_t a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B24910);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18((uint64_t *)&unk_100B32FD0);
  uint64_t v6 = sub_1007FF2E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (uint64_t)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v12, (uint64_t)v5, (uint64_t *)&unk_100B24910);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_10005E0B0(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = type metadata accessor for NoteHighlight(0);
    unint64_t result = sub_100218504(v9, v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100211C28(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B24998);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B249A0);
  uint64_t v6 = sub_1007FF2E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v22[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v12, (uint64_t)v5, &qword_100B24998);
    unint64_t result = sub_100326CE8((uint64_t)v5);
    if (v15) {
      break;
    }
    unint64_t v16 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v17 = v7[6];
    uint64_t v18 = sub_1007F5A90();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v18 - 8) + 32))(v17 + *(void *)(*(void *)(v18 - 8) + 72) * v16, v5, v18);
    *(void *)(v7[7] + 8 * v16) = *(void *)&v5[v9];
    uint64_t v19 = v7[2];
    BOOL v20 = __OFADD__(v19, 1);
    uint64_t v21 = v19 + 1;
    if (v20) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v21;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100211E1C(uint64_t a1)
{
  return sub_10020FE04(a1, &qword_100B24D88, &qword_100B24D90, (uint64_t (*)(void))sub_1003265E8);
}

unint64_t sub_100211E44(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B249A8);
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (void *)((char *)v25 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  if (!*(void *)(a1 + 16))
  {
    uint64_t v7 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18(&qword_100B249B0);
  uint64_t v6 = sub_1007FF2E0();
  uint64_t v7 = (void *)v6;
  uint64_t v8 = *(void *)(a1 + 16);
  if (!v8)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v7;
  }
  uint64_t v9 = (char *)v5 + *(int *)(v2 + 48);
  uint64_t v10 = v6 + 64;
  unint64_t v11 = (*(unsigned __int8 *)(v3 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  v25[1] = a1;
  uint64_t v12 = a1 + v11;
  uint64_t v13 = *(void *)(v3 + 72);
  swift_retain();
  while (1)
  {
    sub_10005B044(v12, (uint64_t)v5, &qword_100B249A8);
    uint64_t v14 = *v5;
    uint64_t v15 = v5[1];
    unint64_t result = sub_10005E0B0(*v5, v15);
    if (v17) {
      break;
    }
    unint64_t v18 = result;
    *(void *)(v10 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8)) |= 1 << result;
    uint64_t v19 = (uint64_t *)(v7[6] + 16 * result);
    *uint64_t v19 = v14;
    v19[1] = v15;
    uint64_t v20 = v7[7];
    uint64_t v21 = sub_1007F68C0();
    unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v21 - 8) + 32))(v20 + *(void *)(*(void *)(v21 - 8) + 72) * v18, v9, v21);
    uint64_t v22 = v7[2];
    BOOL v23 = __OFADD__(v22, 1);
    uint64_t v24 = v22 + 1;
    if (v23) {
      goto LABEL_11;
    }
    _DWORD v7[2] = v24;
    v12 += v13;
    if (!--v8)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

unint64_t sub_100212044(uint64_t a1)
{
  if (!*(void *)(a1 + 16))
  {
    uint64_t v2 = _swiftEmptyDictionarySingleton;
    goto LABEL_9;
  }
  sub_100058D18((uint64_t *)&unk_100B24E60);
  uint64_t v2 = (void *)sub_1007FF2E0();
  uint64_t v3 = *(void *)(a1 + 16);
  if (!v3)
  {
LABEL_9:
    swift_bridgeObjectRelease();
    return (unint64_t)v2;
  }
  swift_retain();
  uint64_t v4 = (uint64_t *)(a1 + 48);
  while (1)
  {
    uint64_t v5 = *(v4 - 1);
    uint64_t v6 = *v4;
    id v7 = (id)*(v4 - 2);
    swift_bridgeObjectRetain();
    unint64_t result = sub_10032700C((uint64_t)v7);
    if (v9) {
      break;
    }
    *(void *)((char *)v2 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    *(void *)(v2[6] + 8 * result) = v7;
    uint64_t v10 = (void *)(v2[7] + 16 * result);
    *uint64_t v10 = v5;
    v10[1] = v6;
    uint64_t v11 = v2[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      goto LABEL_11;
    }
    v4 += 3;
    v2[2] = v13;
    if (!--v3)
    {
      swift_release();
      goto LABEL_9;
    }
  }
  __break(1u);
LABEL_11:
  __break(1u);
  return result;
}

uint64_t variable initialization expression of InfoBar.MessageQueue.resolveTask()
{
  return 0;
}

uint64_t variable initialization expression of SearchBar.Coordinator.isEditing()
{
  return 0;
}

uint64_t variable initialization expression of InfoBar.Content.action()
{
  return 0;
}

void *variable initialization expression of InfoBar.MessageQueue.timedMessages()
{
  return &_swiftEmptyArrayStorage;
}

void *variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.cancellables()
{
  return &_swiftEmptySetSingleton;
}

double variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.buyButtonProvider@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 32) = 0;
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  return result;
}

double variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.skipCumulativeDelta()
{
  return 0.0;
}

uint64_t variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.supportedSkipAmounts()
{
  return sub_100217484((uint64_t)&off_100A4CD30);
}

uint64_t variable initialization expression of AudiobookNowPlayingFullscreenTouchViewController.downloadState()
{
  return 3;
}

void *variable initialization expression of SplitViewContentHostingController.cachedControllers()
{
  return &_swiftEmptyDictionarySingleton;
}

uint64_t variable initialization expression of SplitViewContentHostingController.userSelectedItemSubject()
{
  return sub_100215038(&qword_100B23570);
}

uint64_t variable initialization expression of SplitViewContentHostingController.accessibilityPopToRootUserSelectedItemSubject()
{
  return sub_100215038(&qword_100B23578);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.navigationBarStyle()
{
  return sub_100215038((uint64_t *)&unk_100B23580);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.scrollOffsetInsetPublisher()
{
  return sub_100215038((uint64_t *)&unk_100B2D810);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.undockingViewControllerPublisher()
{
  return sub_100215038((uint64_t *)&unk_100B23590);
}

uint64_t variable initialization expression of ToolbarNavigationProvider.isPresentingCardsPublisher()
{
  return sub_100215038(&qword_100B2D820);
}

CGFloat variable initialization expression of EdgeInsetPublisher._insets()
{
  return UIEdgeInsetsZero.top;
}

uint64_t variable initialization expression of REActionMenuState.safeAreaInsetsPublisher()
{
  type metadata accessor for EdgeInsetPublisher(0);
  uint64_t v0 = swift_allocObject();
  type metadata accessor for UIEdgeInsets(0);
  sub_1007F7810();
  return v0;
}

id variable initialization expression of REActionMenuState.scrubberMarkerController()
{
  return sub_10021244C((uint64_t (*)(void))type metadata accessor for ScrubberMarkerController);
}

uint64_t variable initialization expression of REActionMenuState.snapshotQueue()
{
  return sub_1002150F8((void (*)(void))&static DispatchQoS.userInitiated.getter, 0xD00000000000001BLL, 0x8000000100902FD0);
}

uint64_t variable initialization expression of REActionMenuState.chapterTitleSubject()
{
  return sub_1007F77E0();
}

uint64_t variable initialization expression of REActionMenuState.pagesLeftInChapterStringSubject()
{
  return sub_1007F77E0();
}

uint64_t BKLibraryBookshelfCollectionViewController.canBecomeFirstResponder.getter()
{
  return 1;
}

uint64_t variable initialization expression of REActionMenuState.movementState()
{
  return 0;
}

uint64_t variable initialization expression of ScrubberStatePublisher._scrubberState()
{
  return 0;
}

uint64_t variable initialization expression of REActionMenuState.closedSubject()
{
  return sub_100212FBC();
}

unint64_t variable initialization expression of REActionMenuState.state()
{
  return 0x8000000000000000;
}

double variable initialization expression of REActionMenuState.scrubPositionDeltaMinimum()
{
  return 0.01;
}

id variable initialization expression of PalettePresentationInteraction.tapGestureRecognizer()
{
  id v0 = objc_allocWithZone((Class)UITapGestureRecognizer);

  return [v0 init];
}

id variable initialization expression of PalettePresentationInteraction.panGestureRecognizer()
{
  id v0 = objc_allocWithZone((Class)UIPanGestureRecognizer);

  return [v0 init];
}

id variable initialization expression of EngagementManager.metadata()
{
  return sub_10021244C((uint64_t (*)(void))type metadata accessor for EngagementManagerMetadata);
}

id sub_10021244C(uint64_t (*a1)(void))
{
  id v1 = objc_allocWithZone((Class)a1(0));

  return [v1 init];
}

double variable initialization expression of NowPlayingIndicatorView.levelCornerRadius()
{
  return 0.5;
}

double variable initialization expression of NowPlayingIndicatorView.minimumLevelHeight()
{
  return 3.0;
}

double variable initialization expression of NowPlayingIndicatorView.maximumLevelHeight()
{
  return 13.0;
}

id variable initialization expression of NowPlayingIndicatorView.levelGuttersColor()
{
  id v0 = [self whiteColor];
  id v1 = [v0 colorWithAlphaComponent:0.2];

  return v1;
}

id variable initialization expression of NowPlayingIndicatorView.levelColor()
{
  id v0 = [self whiteColor];

  return v0;
}

double variable initialization expression of QuoteSharingSegmentedControl._defaultImageWidth()
{
  return 44.0;
}

void variable initialization expression of BKSharedWithYouProvider.dynamicArray()
{
}

uint64_t variable initialization expression of ContextMenuProvider.swipeActionItems()
{
  sub_100058D18((uint64_t *)&unk_100B33210);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10085CCC0;
  uint64_t ThisActionItem = type metadata accessor for ReadThisActionItem();
  uint64_t v2 = sub_100217B24((unint64_t *)&unk_100B235F0, (void (*)(uint64_t))type metadata accessor for ReadThisActionItem);
  *(void *)(v0 + 32) = ThisActionItem;
  *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  uint64_t v3 = type metadata accessor for MarkAsFinishedActionItem();
  uint64_t v4 = sub_100217B24((unint64_t *)&unk_100B33220, (void (*)(uint64_t))type metadata accessor for MarkAsFinishedActionItem);
  *(void *)(v0 + 48) = v3;
  *(void *)(v0 + 56) = v4;
  uint64_t v5 = type metadata accessor for MarkAsStillReadingActionItem();
  uint64_t v6 = sub_100217B24((unint64_t *)&unk_100B23600, (void (*)(uint64_t))type metadata accessor for MarkAsStillReadingActionItem);
  *(void *)(v0 + 64) = v5;
  *(void *)(v0 + 72) = v6;
  uint64_t ActionItem = type metadata accessor for AddToWantToReadActionItem();
  uint64_t v8 = sub_100217B24((unint64_t *)&unk_100B33230, (void (*)(uint64_t))type metadata accessor for AddToWantToReadActionItem);
  *(void *)(v0 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = ActionItem;
  *(void *)(v0 + 88) = v8;
  uint64_t v9 = type metadata accessor for RemoveFromWantToReadActionItem();
  uint64_t v10 = sub_100217B24((unint64_t *)&unk_100B23610, (void (*)(uint64_t))type metadata accessor for RemoveFromWantToReadActionItem);
  *(void *)(v0 + 96) = v9;
  *(void *)(v0 + 104) = v10;
  uint64_t v11 = type metadata accessor for ExplicitDeclineActionItem();
  uint64_t v12 = sub_100217B24((unint64_t *)&unk_100B33240, (void (*)(uint64_t))type metadata accessor for ExplicitDeclineActionItem);
  *(void *)(v0 + 112) = v11;
  *(void *)(v0 + 12UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v12;
  *(void *)(v0 + 128) = type metadata accessor for AppShareActionItem();
  *(void *)(v0 + 136) = &protocol witness table for ShareActionItem;
  uint64_t v13 = type metadata accessor for ListenSampleActionItem();
  uint64_t v14 = sub_100217B24((unint64_t *)&unk_100B23620, (void (*)(uint64_t))type metadata accessor for ListenSampleActionItem);
  *(void *)(v0 + 144) = v13;
  *(void *)(v0 + 152) = v14;
  Sampleuint64_t ActionItem = type metadata accessor for ReadSampleActionItem();
  uint64_t v16 = sub_100217B24((unint64_t *)&unk_100B33250, (void (*)(uint64_t))type metadata accessor for ReadSampleActionItem);
  *(void *)(v0 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = SampleActionItem;
  *(void *)(v0 + 168) = v16;
  return v0;
}

uint64_t variable initialization expression of ContextMenuProvider.actionItems()
{
  sub_100058D18((uint64_t *)&unk_100B33210);
  uint64_t v0 = swift_allocObject();
  *(_OWORD *)(v0 + 16) = xmmword_10085CCD0;
  uint64_t v1 = type metadata accessor for AddToCollectionActionItem();
  uint64_t v2 = sub_100217B24((unint64_t *)&unk_100B23630, (void (*)(uint64_t))type metadata accessor for AddToCollectionActionItem);
  *(void *)(v0 + 32) = v1;
  *(void *)(v0 + 4UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v2;
  uint64_t ActionItem = type metadata accessor for AddToWantToReadActionItem();
  uint64_t v4 = sub_100217B24((unint64_t *)&unk_100B33230, (void (*)(uint64_t))type metadata accessor for AddToWantToReadActionItem);
  *(void *)(v0 + 48) = ActionItem;
  *(void *)(v0 + 56) = v4;
  *(void *)(v0 + 64) = type metadata accessor for AppShareActionItem();
  *(void *)(v0 + 72) = &protocol witness table for ShareActionItem;
  uint64_t v5 = type metadata accessor for CancelDownloadActionItem();
  uint64_t v6 = sub_100217B24((unint64_t *)&unk_100B33260, (void (*)(uint64_t))type metadata accessor for CancelDownloadActionItem);
  *(void *)(v0 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v5;
  *(void *)(v0 + 88) = v6;
  unint64_t v7 = sub_10007BFA0();
  *(void *)(v0 + 96) = &type metadata for CloseAudiobookMiniPlayerActionItem;
  *(void *)(v0 + 104) = v7;
  uint64_t v8 = type metadata accessor for CopyLinkActionItem();
  uint64_t v9 = sub_100217B24((unint64_t *)&unk_100B33270, (void (*)(uint64_t))type metadata accessor for CopyLinkActionItem);
  *(void *)(v0 + 112) = v8;
  *(void *)(v0 + 12UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v9;
  uint64_t v10 = type metadata accessor for DislikeActionItem();
  uint64_t v11 = sub_100217B24((unint64_t *)&unk_100B23650, (void (*)(uint64_t))type metadata accessor for DislikeActionItem);
  *(void *)(v0 + 128) = v10;
  *(void *)(v0 + 136) = v11;
  uint64_t v12 = type metadata accessor for DownloadActionItem();
  uint64_t v13 = sub_100217B24((unint64_t *)&unk_100B33280, (void (*)(uint64_t))type metadata accessor for DownloadActionItem);
  *(void *)(v0 + 144) = v12;
  *(void *)(v0 + 152) = v13;
  uint64_t v14 = type metadata accessor for EditFinishedDateActionItem();
  uint64_t v15 = sub_100217B24((unint64_t *)&unk_100B23660, (void (*)(uint64_t))type metadata accessor for EditFinishedDateActionItem);
  *(void *)(v0 + 16UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v14;
  *(void *)(v0 + 168) = v15;
  Sampleuint64_t ActionItem = type metadata accessor for GetSampleActionItem();
  uint64_t v17 = sub_100217B24((unint64_t *)&unk_100B33290, (void (*)(uint64_t))type metadata accessor for GetSampleActionItem);
  *(void *)(v0 + 176) = SampleActionItem;
  *(void *)(v0 + 184) = v17;
  uint64_t ThisActionItem = type metadata accessor for ReadThisActionItem();
  uint64_t v19 = sub_100217B24((unint64_t *)&unk_100B235F0, (void (*)(uint64_t))type metadata accessor for ReadThisActionItem);
  *(void *)(v0 + 192) = ThisActionItem;
  *(void *)(v0 + 20UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v19;
  uint64_t v20 = type metadata accessor for ExplicitDeclineActionItem();
  uint64_t v21 = sub_100217B24((unint64_t *)&unk_100B33240, (void (*)(uint64_t))type metadata accessor for ExplicitDeclineActionItem);
  *(void *)(v0 + 208) = v20;
  *(void *)(v0 + 216) = v21;
  uint64_t v22 = type metadata accessor for GiftActionItem();
  uint64_t v23 = sub_100217B24((unint64_t *)&unk_100B23670, (void (*)(uint64_t))type metadata accessor for GiftActionItem);
  *(void *)(v0 + 224) = v22;
  *(void *)(v0 + 232) = v23;
  uint64_t v24 = type metadata accessor for MultipleGiftActionItem();
  uint64_t v25 = sub_100217B24((unint64_t *)&unk_100B332A0, (void (*)(uint64_t))type metadata accessor for MultipleGiftActionItem);
  *(void *)(v0 + 24UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v24;
  *(void *)(v0 + 248) = v25;
  *(void *)(v0 + 256) = sub_1007F2F20();
  *(void *)(v0 + 264) = &protocol witness table for LikeActionItem;
  uint64_t v26 = type metadata accessor for ListenSampleActionItem();
  uint64_t v27 = sub_100217B24((unint64_t *)&unk_100B23620, (void (*)(uint64_t))type metadata accessor for ListenSampleActionItem);
  *(void *)(v0 + 272) = v26;
  *(void *)(v0 + 28UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v27;
  uint64_t v28 = type metadata accessor for MarkAsFinishedActionItem();
  uint64_t v29 = sub_100217B24((unint64_t *)&unk_100B33220, (void (*)(uint64_t))type metadata accessor for MarkAsFinishedActionItem);
  *(void *)(v0 + 288) = v28;
  *(void *)(v0 + 296) = v29;
  uint64_t v30 = type metadata accessor for MarkAsStillReadingActionItem();
  uint64_t v31 = sub_100217B24((unint64_t *)&unk_100B23600, (void (*)(uint64_t))type metadata accessor for MarkAsStillReadingActionItem);
  *(void *)(v0 + 304) = v30;
  *(void *)(v0 + 312) = v31;
  uint64_t v32 = type metadata accessor for OpenProductPageActionItem();
  uint64_t v33 = sub_100217B24((unint64_t *)&unk_100B23680, (void (*)(uint64_t))type metadata accessor for OpenProductPageActionItem);
  *(void *)(v0 + 32UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v32;
  *(void *)(v0 + 328) = v33;
  *(void *)(v0 + 336) = sub_1007F34F0();
  *(void *)(v0 + 344) = &protocol witness table for RateAndReviewActionItem;
  uint64_t v34 = type metadata accessor for ReadSampleActionItem();
  uint64_t v35 = sub_100217B24((unint64_t *)&unk_100B33250, (void (*)(uint64_t))type metadata accessor for ReadSampleActionItem);
  *(void *)(v0 + 352) = v34;
  *(void *)(v0 + 36UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v35;
  uint64_t v36 = type metadata accessor for RemoveActionItem();
  uint64_t v37 = sub_100217B24((unint64_t *)&unk_100B332B0, (void (*)(uint64_t))type metadata accessor for RemoveActionItem);
  *(void *)(v0 + 368) = v36;
  *(void *)(v0 + 376) = v37;
  uint64_t v38 = type metadata accessor for RemoveFromContinueActionItem();
  uint64_t v39 = sub_100217B24((unint64_t *)&unk_100B23690, (void (*)(uint64_t))type metadata accessor for RemoveFromContinueActionItem);
  *(void *)(v0 + 384) = v38;
  *(void *)(v0 + 392) = v39;
  uint64_t v40 = type metadata accessor for RemoveFromWantToReadActionItem();
  uint64_t v41 = sub_100217B24((unint64_t *)&unk_100B23610, (void (*)(uint64_t))type metadata accessor for RemoveFromWantToReadActionItem);
  *(void *)(v0 + 40UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v40;
  *(void *)(v0 + 408) = v41;
  uint64_t v42 = type metadata accessor for RenameActionItem();
  uint64_t v43 = sub_100217B24((unint64_t *)&unk_100B332C0, (void (*)(uint64_t))type metadata accessor for RenameActionItem);
  *(void *)(v0 + 416) = v42;
  *(void *)(v0 + 424) = v43;
  uint64_t v44 = type metadata accessor for ReportAnIssueActionItem();
  uint64_t v45 = sub_100217B24((unint64_t *)&unk_100B236A0, (void (*)(uint64_t))type metadata accessor for ReportAnIssueActionItem);
  *(void *)(v0 + 432) = v44;
  *(void *)(v0 + 44UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v45;
  uint64_t v46 = type metadata accessor for ViewSupplementalContentActionItem();
  uint64_t v47 = sub_100217B24((unint64_t *)&unk_100B332D0, (void (*)(uint64_t))type metadata accessor for ViewSupplementalContentActionItem);
  *(void *)(v0 + 448) = v46;
  *(void *)(v0 + 456) = v47;
  *(void *)(v0 + 464) = sub_1007F3500();
  *(void *)(v0 + 472) = &protocol witness table for SharedWithYouActionItem;
  uint64_t v48 = type metadata accessor for InternalTapToRadarActionItem();
  uint64_t v49 = sub_100217B24((unint64_t *)&unk_100B236B0, (void (*)(uint64_t))type metadata accessor for InternalTapToRadarActionItem);
  *(void *)(v0 + 48UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v48;
  *(void *)(v0 + 488) = v49;
  uint64_t v50 = type metadata accessor for InternalEOBExperienceItem();
  uint64_t v51 = sub_100217B24((unint64_t *)&unk_100B332E0, (void (*)(uint64_t))type metadata accessor for InternalEOBExperienceItem);
  *(void *)(v0 + 496) = v50;
  *(void *)(v0 + 504) = v51;
  return v0;
}

uint64_t variable initialization expression of SeriesListModeManager.filterPublishers()
{
  return sub_100212F70(&qword_100B344C0);
}

uint64_t variable initialization expression of SeriesListModeManager.sortPublishers()
{
  return sub_100212F70((uint64_t *)&unk_100B236D0);
}

uint64_t variable initialization expression of SeriesListModeManager.filterOptions()
{
  return sub_100212F70(&qword_100B344E0);
}

uint64_t variable initialization expression of SeriesListModeManager.previousSortOrders()
{
  return sub_100212F70((uint64_t *)&unk_100B236E0);
}

uint64_t sub_100212F70(uint64_t *a1)
{
  sub_100058D18(a1);
  uint64_t result = swift_allocObject();
  *(_DWORD *)(result + 24) = 0;
  *(void *)(result + 16) = _swiftEmptyDictionarySingleton;
  return result;
}

uint64_t variable initialization expression of CloseBookAnimator.crossFadeContent()
{
  return 0;
}

uint64_t variable initialization expression of BookReaderStateManager.isOrientationLockedSubject()
{
  return sub_100212FBC();
}

uint64_t sub_100212FBC()
{
  return sub_1007F77E0();
}

uint64_t variable initialization expression of ChromeStyle._colorScheme@<X0>(uint64_t a1@<X8>)
{
  return sub_100213318((unsigned int *)&enum case for ColorScheme.light(_:), (uint64_t (*)(void))&type metadata accessor for ColorScheme, a1);
}

uint64_t variable initialization expression of ChromeStyle._verticalSizeClass@<X0>(uint64_t a1@<X8>)
{
  return sub_100213318((unsigned int *)&enum case for UserInterfaceSizeClass.regular(_:), (uint64_t (*)(void))&type metadata accessor for UserInterfaceSizeClass, a1);
}

uint64_t variable initialization expression of ChromeStyle.controlFont()
{
  return sub_100213074((unsigned int *)&enum case for Font.TextStyle.body(_:));
}

uint64_t variable initialization expression of ChromeStyle.controlSubtitleFont()
{
  return sub_100213074((unsigned int *)&enum case for Font.TextStyle.caption(_:));
}

uint64_t sub_100213074(unsigned int *a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B494F0);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v12 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1007F90F0();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v12 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, void, uint64_t))(v6 + 104))(v8, *a1, v5);
  uint64_t v9 = sub_1007F8FC0();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v4, 1, 1, v9);
  uint64_t v10 = sub_1007F9050();
  sub_100217B6C((uint64_t)v4);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v10;
}

uint64_t variable initialization expression of InfoBar.Message.currentVisibleStartTime@<X0>(uint64_t a1@<X8>)
{
  return sub_1002153F8((uint64_t (*)(void))&type metadata accessor for Date, a1);
}

unint64_t variable initialization expression of PersonalizationEventDonor.config()
{
  return sub_10005DB1C((uint64_t)_swiftEmptyArrayStorage, &qword_100B2C5D0, (uint64_t *)&unk_100B24ED0, (uint64_t (*)(uint64_t *, unint64_t))sub_10005E614);
}

uint64_t variable initialization expression of PersonalizationEventDonor.defaultMaxCount()
{
  return 2000;
}

double variable initialization expression of PersonalizationEventDonor.defaultAgeToExpire()
{
  return 31536000.0;
}

uint64_t variable initialization expression of PersonalizationEventDonor.finishingBookAutomatically()
{
  return 2;
}

uint64_t variable initialization expression of BookProviderService.logger()
{
  return sub_1007F6BB0();
}

uint64_t variable initialization expression of ExplicitDeclineActionItem.type@<X0>(uint64_t a1@<X8>)
{
  return sub_100213318((unsigned int *)&enum case for ContextActionType.explicitDecline(_:), (uint64_t (*)(void))&type metadata accessor for ContextActionType, a1);
}

uint64_t sub_100213318@<X0>(unsigned int *a1@<X0>, uint64_t (*a2)(void)@<X1>, uint64_t a3@<X8>)
{
  uint64_t v4 = *a1;
  uint64_t v5 = a2(0);
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 104);

  return v6(a3, v4, v5);
}

uint64_t variable initialization expression of ScrubberMarkerController.markerPageRange()
{
  return 1;
}

id variable initialization expression of ToolbarButton.backgroundView()
{
  type metadata accessor for BackdropView();
  id v0 = [objc_allocWithZone((Class)swift_getObjCClassFromMetadata()) init];
  id v1 = [v0 layer];
  [v1 setCornerRadius:6.0];

  id v2 = [v0 layer];
  [v2 setCornerCurve:kCACornerCurveContinuous];

  [v0 setUserInteractionEnabled:0];
  [v0 setClipsToBounds:1];
  [v0 setAutoresizingMask:18];
  id v3 = [objc_allocWithZone((Class)UIView) init];
  id v4 = [self secondarySystemBackgroundColor];
  [v3 setBackgroundColor:v4];

  [v3 setUserInteractionEnabled:0];
  [v3 setAutoresizingMask:18];
  [v0 bounds];
  [v3 setFrame:];
  [v0 addSubview:v3];

  return v0;
}

id variable initialization expression of ToolbarButton.highlightView()
{
  id v0 = [objc_allocWithZone((Class)UIView) init];
  id v1 = [self clearColor];
  [v0 setBackgroundColor:v1];

  id v2 = [v0 layer];
  [v2 setCornerRadius:6.0];

  id v3 = [v0 layer];
  [v3 setCornerCurve:kCACornerCurveContinuous];

  [v0 setUserInteractionEnabled:0];
  [v0 setAutoresizingMask:18];
  return v0;
}

double variable initialization expression of BookReaderHostLayoutController.capturedSafeAreaInsets@<D0>(uint64_t a1@<X8>)
{
  double result = 0.0;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of MiniPlayerHostingTabBarController.appearanceState()
{
  return 128;
}

uint64_t variable initialization expression of TabBarController.rootBarEventSubject()
{
  return sub_100215038(&qword_100B47B00);
}

id variable initialization expression of TabBarController.isCreatingContentForNavigationController()
{
  id v0 = [self weakObjectsHashTable];

  return v0;
}

uint64_t variable initialization expression of BookReaderModuleHost.appIntentsInfoTracker()
{
  type metadata accessor for AppIntentsAssetViewControllerInfoTracker();
  uint64_t v0 = swift_allocObject();
  swift_unknownObjectWeakInit();
  sub_100058D18((uint64_t *)&unk_100B23700);
  sub_1007F7810();
  *(void *)(v0 + OBJC_IVAR____TtC5Books40AppIntentsAssetViewControllerInfoTracker_task) = 0;
  swift_unknownObjectWeakAssign();
  return v0;
}

id variable initialization expression of BookReaderModuleHost.appIntentsInfo()
{
  id v0 = objc_allocWithZone((Class)BCAppIntentsAssetViewControllerInfo);

  return [v0 init];
}

uint64_t variable initialization expression of BookReaderModuleHost.log()
{
  return sub_1007FED90();
}

uint64_t variable initialization expression of BookReaderModuleHost.hostID()
{
  uint64_t v0 = sub_1007F2BF0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  id v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  _s5Books7InfoBarO7MessageC2id10Foundation4UUIDVvpfi_0();
  uint64_t v4 = sub_1007F2BB0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  return v4;
}

uint64_t variable initialization expression of AnnotationProviderService.annotationsChangeSubject()
{
  return sub_100215038((uint64_t *)&unk_100B23710);
}

uint64_t variable initialization expression of AnnotationProviderService.bookmarkChangeSubject()
{
  return sub_100215038(&qword_100B3F220);
}

uint64_t variable initialization expression of AnnotationProviderService.highlightChangeSubject()
{
  return sub_100215038(&qword_100B23720);
}

uint64_t variable initialization expression of MainContentViewController.toolbarHeightPublisher()
{
  return sub_1007F77E0();
}

uint64_t variable initialization expression of MainContentViewController.keyboardObserver()
{
  return 0;
}

double variable initialization expression of LibraryCollectionTitleView.minHeightThatCountsAsVisible()
{
  return 20.0;
}

id variable initialization expression of YearInReviewEligibilityService.setupPromise()
{
  id v0 = objc_allocWithZone((Class)AMSMutablePromise);

  return [v0 init];
}

uint64_t variable initialization expression of CarPlayDataManager.accessQueue()
{
  uint64_t v0 = sub_1007FE6D0();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1007FD6E0();
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_1007FE740();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)v7 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10004A860(0, (unint64_t *)&qword_100B235A0);
  (*(void (**)(char *, void, uint64_t))(v3 + 104))(v5, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v2);
  sub_1007FD6B0();
  v7[1] = _swiftEmptyArrayStorage;
  sub_100217B24((unint64_t *)&unk_100B3A510, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100058D18((uint64_t *)&unk_100B235B0);
  sub_100043334((unint64_t *)&qword_100B3A520, (uint64_t *)&unk_100B235B0);
  sub_1007FEF40();
  return sub_1007FE770();
}

uint64_t variable initialization expression of BookReaderAccessoryHighlightsController.currentUnderlinePercent()
{
  return 0;
}

void variable initialization expression of ReadingActivityService.dailyGoal()
{
  uint64_t v0 = sub_1007F4630();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v15 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007F4620();
  sub_1007F4600();
  uint64_t v5 = v4;
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v16[3] = &type metadata for Double;
  v16[0] = v5;
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  v15[1] = 0x6D614E6775626564;
  _OWORD v15[2] = 0xE900000000000065;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = 0xD000000000000020;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0x8000000100903090;
  sub_100073CA4(inited);
  uint64_t v7 = sub_10005DA74(v16, (uint64_t)&type metadata for Double);
  uint64_t v8 = *(&type metadata for Double - 1);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v15 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v8 + 16))(v10);
  uint64_t v11 = sub_1007FF460();
  (*(void (**)(char *, void *))(v8 + 8))(v10, &type metadata for Double);
  _s5Books15CurrentPageViewVwxx_0((uint64_t)v16);
  id v12 = objc_allocWithZone((Class)BSUIDynamicValue);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v14 = [v12 initWithValue:v11 options:isa];
  swift_unknownObjectRelease();

  if (!v14) {
    __break(1u);
  }
}

void variable initialization expression of ReadingActivityService.booksFinishedGoal()
{
  uint64_t v0 = sub_1007F4630();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)v14 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_1007F4620();
  uint64_t v4 = sub_1007F4610();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  void v15[3] = &type metadata for Int;
  v15[0] = v4;
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  v14[1] = 0x6D614E6775626564;
  void v14[2] = 0xE900000000000065;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = 0xD000000000000028;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0x80000001009030C0;
  sub_100073CA4(inited);
  uint64_t v6 = sub_10005DA74(v15, (uint64_t)&type metadata for Int);
  uint64_t v7 = *(&type metadata for Int - 1);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v7 + 16))(v9);
  uint64_t v10 = sub_1007FF460();
  (*(void (**)(char *, void *))(v7 + 8))(v9, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0((uint64_t)v15);
  id v11 = objc_allocWithZone((Class)BSUIDynamicValue);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithValue:v10 options:isa];
  swift_unknownObjectRelease();

  if (!v13) {
    __break(1u);
  }
}

void variable initialization expression of ReadingActivityService.finishedAssets()
{
}

void variable initialization expression of ReadingActivityService.finishedAssetsData()
{
}

void variable initialization expression of ReadingActivityService.finishedAssetYear()
{
}

void variable initialization expression of ReadingActivityService.finishedAssetAllTimeCount()
{
}

void variable initialization expression of ReadingActivityService.finishedAssetsAfterCurrentYearCount()
{
}

void variable initialization expression of ReadingActivityService.finishedAssetsPriorToCurrentYearCount()
{
}

void variable initialization expression of ReadingActivityService.isDailyGoalCompleted()
{
}

void variable initialization expression of ReadingActivityService.readingTimeToday()
{
}

void variable initialization expression of ReadingActivityService.readingIndicatorTimeToday()
{
}

void variable initialization expression of ReadingActivityService.readingHistory()
{
}

void sub_100214258(uint64_t a1, uint64_t a2)
{
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  sub_100073CA4(inited);
  id v5 = objc_allocWithZone((Class)BSUIDynamicArray);
  sub_100058D18((uint64_t *)&unk_100B235E0);
  Class isa = sub_1007FDFE0().super.isa;
  Class v7 = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v8 = [v5 initWithArray:isa options:v7];

  if (!v8) {
    __break(1u);
  }
}

void variable initialization expression of ReadingActivityService.didSeeWelcomeExperience()
{
}

void sub_1002143AC(uint64_t a1, uint64_t a2)
{
  void v14[3] = &type metadata for Bool;
  LOBYTE(v14[0]) = 0;
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  v13[1] = 0x6D614E6775626564;
  void v13[2] = 0xE900000000000065;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  sub_100073CA4(inited);
  id v5 = sub_10005DA74(v14, (uint64_t)&type metadata for Bool);
  uint64_t v6 = *(&type metadata for Bool - 1);
  __chkstk_darwin(v5);
  id v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  uint64_t v9 = sub_1007FF460();
  (*(void (**)(char *, void *))(v6 + 8))(v8, &type metadata for Bool);
  _s5Books15CurrentPageViewVwxx_0((uint64_t)v14);
  id v10 = objc_allocWithZone((Class)BSUIDynamicValue);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithValue:v9 options:isa];
  swift_unknownObjectRelease();

  if (!v12) {
    __break(1u);
  }
}

void variable initialization expression of ReadingActivityService.allTimeRecordStreakData()
{
}

void sub_1002145CC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B23730);
  void v15[3] = v4;
  v15[0] = _swiftEmptyDictionarySingleton;
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  v14[1] = 0x6D614E6775626564;
  void v14[2] = 0xE900000000000065;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  sub_100073CA4(inited);
  if (v4)
  {
    uint64_t v6 = sub_10005DA74(v15, v4);
    uint64_t v7 = *(void *)(v4 - 8);
    __chkstk_darwin(v6);
    uint64_t v9 = (char *)v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v7 + 16))(v9);
    uint64_t v10 = sub_1007FF460();
    (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v4);
    _s5Books15CurrentPageViewVwxx_0((uint64_t)v15);
  }
  else
  {
    uint64_t v10 = 0;
  }
  id v11 = objc_allocWithZone((Class)BSUIDynamicValue);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v13 = [v11 initWithValue:v10 options:isa];
  swift_unknownObjectRelease();

  if (!v13) {
    __break(1u);
  }
}

uint64_t variable initialization expression of ReadingActivityService.readingHistoryPublisher()
{
  uint64_t v0 = sub_100058D18(&qword_100B23738);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v5 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1007F4710();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56))(v2, 1, 1, v3);
  sub_100058D18(&qword_100B23740);
  swift_allocObject();
  return sub_1007F77E0();
}

void variable initialization expression of ReadingActivityService.booksPerYear()
{
}

void variable initialization expression of ReadingActivityService.timeReadPerMonth()
{
}

void sub_1002148F0(uint64_t a1, uint64_t a2)
{
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  sub_100073CA4(inited);
  id v5 = objc_allocWithZone((Class)BSUIDynamicValue);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v7 = [v5 initWithValue:0 options:isa];

  if (!v7) {
    __break(1u);
  }
}

void variable initialization expression of ReadingActivityService.finishedAssetCountByYear()
{
}

void sub_100214A20(uint64_t a1, uint64_t a2)
{
  void v14[3] = &type metadata for Int;
  v14[0] = 0;
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  v13[1] = 0x6D614E6775626564;
  void v13[2] = 0xE900000000000065;
  sub_1007FF050();
  *(void *)(inited + 96) = &type metadata for String;
  *(void *)(inited + 72) = a1;
  *(void *)(inited + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = a2;
  sub_100073CA4(inited);
  id v5 = sub_10005DA74(v14, (uint64_t)&type metadata for Int);
  uint64_t v6 = *(&type metadata for Int - 1);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *))(v6 + 16))(v8);
  uint64_t v9 = sub_1007FF460();
  (*(void (**)(char *, void *))(v6 + 8))(v8, &type metadata for Int);
  _s5Books15CurrentPageViewVwxx_0((uint64_t)v14);
  id v10 = objc_allocWithZone((Class)BSUIDynamicValue);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  id v12 = [v10 initWithValue:v9 options:isa];
  swift_unknownObjectRelease();

  if (!v12) {
    __break(1u);
  }
}

double variable initialization expression of ReadingActivityService.goalsModule@<D0>(_OWORD *a1@<X8>)
{
  double result = 0.0;
  a1[3] = 0u;
  a1[4] = 0u;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

double variable initialization expression of ReadingActivityService.booksFinishedModule@<D0>(uint64_t a1@<X8>)
{
  *(void *)(a1 + 112) = 0;
  double result = 0.0;
  *(_OWORD *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0u;
  *(_OWORD *)(a1 + 96) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)(a1 + 64) = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)a1 = 0u;
  return result;
}

double variable initialization expression of SidebarViewModel._programmaticSelection@<D0>(uint64_t a1@<X8>)
{
  *(_OWORD *)(a1 + 32) = 0u;
  *(_OWORD *)(a1 + 48) = 0u;
  *(_OWORD *)a1 = 0u;
  *(_OWORD *)(a1 + 16) = 0u;
  *(void *)&double result = 16711422;
  *(_OWORD *)(a1 + 64) = xmmword_10085CCF0;
  *(unsigned char *)(a1 + 8UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = 0;
  return result;
}

id variable initialization expression of SidebarViewModel._accountInfo@<X0>(uint64_t a1@<X8>)
{
  id result = [objc_allocWithZone((Class)CNContact) init];
  *(void *)a1 = 0;
  *(void *)(a1 + 8) = 0xE000000000000000;
  *(unsigned char *)(a1 + 16) = 0;
  *(void *)(a1 + 24) = result;
  *(unsigned char *)(a1 + 32) = 1;
  return result;
}

uint64_t variable initialization expression of SidebarViewModel.AccountInfo.displayText()
{
  return 0;
}

id variable initialization expression of SidebarViewModel.AccountInfo.contact()
{
  id v0 = objc_allocWithZone((Class)CNContact);

  return [v0 init];
}

uint64_t variable initialization expression of RootBarStandardItemsManager.cacheAccessQueue()
{
  uint64_t v0 = sub_1007FE6D0();
  __chkstk_darwin(v0);
  uint64_t v1 = sub_1007FE740();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v7 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1007FD6E0();
  __chkstk_darwin(v5 - 8);
  sub_10004A860(0, (unint64_t *)&qword_100B235A0);
  sub_1007FD6D0();
  (*(void (**)(char *, void, uint64_t))(v2 + 104))(v4, enum case for OS_dispatch_queue.AutoreleaseFrequency.workItem(_:), v1);
  v7[1] = _swiftEmptyArrayStorage;
  sub_100217B24((unint64_t *)&unk_100B3A510, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100058D18((uint64_t *)&unk_100B235B0);
  sub_100043334((unint64_t *)&qword_100B3A520, (uint64_t *)&unk_100B235B0);
  sub_1007FEF40();
  return sub_1007FE770();
}

uint64_t variable initialization expression of PriceTrackingService._bridge()
{
  return 0x656764697262;
}

uint64_t variable initialization expression of PriceTrackingService._priceTracker()
{
  return 0x6172546563697270;
}

unint64_t variable initialization expression of PriceTrackingService._addToWTRDelegate()
{
  return 0xD000000000000010;
}

uint64_t variable initialization expression of PriceTrackingService._stateChanges()
{
  return 0x6168436574617473;
}

uint64_t _s5Books30YearInReviewEligibilityServiceC11_setupState33_7B264D70199A5E6B58C4E74855217919LL13BookDataStore26MutableObservableContainerCyAA0f5SetupH0OGvpfi_0()
{
  return sub_1007F4AF0();
}

uint64_t variable initialization expression of PageSnapshotLoader.pageIndexChanged()
{
  return sub_100215038(&qword_100B23748);
}

uint64_t sub_100215038(uint64_t *a1)
{
  return sub_1007F77A0();
}

uint64_t variable initialization expression of PageSnapshotLoader.logger()
{
  return sub_1007FED90();
}

uint64_t variable initialization expression of DownloadPurchaseMonitor.queue()
{
  return sub_1002150F8((void (*)(void))&static DispatchQoS.unspecified.getter, 0xD00000000000001ELL, 0x8000000100903470);
}

uint64_t sub_1002150F8(void (*a1)(void), uint64_t a2, uint64_t a3)
{
  v11[1] = a2;
  void v11[2] = a3;
  uint64_t v4 = sub_1007FE740();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1007FE6D0();
  __chkstk_darwin(v8);
  uint64_t v9 = sub_1007FD6E0();
  __chkstk_darwin(v9 - 8);
  sub_10004A860(0, (unint64_t *)&qword_100B235A0);
  a1();
  v11[3] = _swiftEmptyArrayStorage;
  sub_100217B24((unint64_t *)&unk_100B3A510, (void (*)(uint64_t))&type metadata accessor for OS_dispatch_queue.Attributes);
  sub_100058D18((uint64_t *)&unk_100B235B0);
  sub_100043334((unint64_t *)&qword_100B3A520, (uint64_t *)&unk_100B235B0);
  sub_1007FEF40();
  (*(void (**)(char *, void, uint64_t))(v5 + 104))(v7, enum case for OS_dispatch_queue.AutoreleaseFrequency.inherit(_:), v4);
  return sub_1007FE770();
}

uint64_t variable initialization expression of FinishedAssetManager.logger()
{
  return sub_1007F6BB0();
}

unint64_t variable initialization expression of BookReaderAccessoryHighlightsController.resolveStates()
{
  return sub_1002118FC((uint64_t)_swiftEmptyArrayStorage);
}

id variable initialization expression of BookReaderAccessoryHighlightsController.highlightRenderingController()
{
  id v0 = [objc_allocWithZone((Class)AEHighlightRenderingController) init];
  [v0 setCanUseFilters:1];
  return v0;
}

uint64_t variable initialization expression of BookReaderAccessoryHighlightsController.currentTheme@<X0>(uint64_t a1@<X8>)
{
  return sub_1002153F8((uint64_t (*)(void))&type metadata accessor for BookThemeEntity, a1);
}

uint64_t sub_1002153F8@<X0>(uint64_t (*a1)(void)@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = a1(0);
  uint64_t v4 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);

  return v4(a2, 1, 1, v3);
}

uint64_t variable initialization expression of BookReaderAccessoryHighlightsController.interactiveHighlight()
{
  return 0;
}

unint64_t variable initialization expression of ChapterScrubbingState.pageImageLoaders()
{
  return sub_100217058(_swiftEmptyArrayStorage, &qword_100B2C6C0);
}

uint64_t variable initialization expression of ObjectGraphHost.dependenciesPromise()
{
  return sub_1007FD9E0();
}

uint64_t sub_1002154D4(uint64_t a1, uint64_t a2)
{
  return sub_100216B54(a1, a2, (uint64_t (*)(uint64_t))&String._bridgeToObjectiveC());
}

_WORD *sub_100215500@<X0>(_WORD *result@<X0>, uint64_t a2@<X8>)
{
  *(_WORD *)a2 = *result;
  *(unsigned char *)(a2 + 2) = 0;
  return result;
}

void sub_100215510(_WORD *a1@<X8>)
{
  *a1 = *v1;
}

id sub_10021551C()
{
  return *v0;
}

uint64_t sub_100215524@<X0>(uint64_t result@<X0>, void *a2@<X8>)
{
  *a2 = result;
  return result;
}

void sub_10021552C(void *a1@<X8>)
{
  *a1 = 0;
}

void *sub_100215534@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 | *result;
  return result;
}

void *sub_100215548@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 ^ *result;
  return result;
}

void *sub_10021555C@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *v2 & *result;
  if (v3) {
    *v2 &= ~*result;
  }
  *(void *)a2 = v3;
  *(unsigned char *)(a2 + 8) = v3 == 0;
  return result;
}

uint64_t *sub_100215588@<X0>(uint64_t *result@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = *result;
  uint64_t v4 = *v2;
  *v2 |= *result;
  uint64_t v5 = v4 & v3;
  *(void *)a2 = v5;
  *(unsigned char *)(a2 + 8) = v5 == 0;
  return result;
}

void *sub_1002155AC(void *result)
{
  *v1 ^= *result;
  return result;
}

void *sub_1002155C0@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & ~*result;
  return result;
}

BOOL sub_1002155D4(void *a1)
{
  return (*v1 & *a1) == 0;
}

BOOL sub_1002155E8()
{
  return *v0 == 0;
}

uint64_t sub_1002155F8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  return SetAlgebra.init<A>(_:)(a1, a4, a2, a5, a3);
}

void *sub_100215610(void *result)
{
  *v1 &= ~*result;
  return result;
}

BOOL sub_100215624(void *a1)
{
  return (*v1 & ~*a1) == 0;
}

BOOL sub_100215638(void *a1)
{
  return (*a1 & ~*v1) == 0;
}

BOOL sub_100215650(void *a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = *v2 & *a2;
  if (v4 != *a2) {
    *v2 |= v3;
  }
  *a1 = v3;
  return v4 != v3;
}

uint64_t sub_100215680(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25148, type metadata accessor for AudiobookPlayerError);

  return Error<>._domain.getter(a1, v2);
}

uint64_t sub_1002156EC(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25148, type metadata accessor for AudiobookPlayerError);

  return Error<>._code.getter(a1, v2);
}

uint64_t sub_10021575C(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);

  return _BridgedStoredNSError._getEmbeddedNSError()(a1, v2);
}

void *sub_1002157C8@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *v2 & *result;
  return result;
}

void *sub_1002157DC(void *result)
{
  *v1 |= *result;
  return result;
}

void *sub_1002157F0(void *result)
{
  *v1 &= *result;
  return result;
}

uint64_t sub_100215808(uint64_t a1, id *a2)
{
  uint64_t result = sub_1007FDC50();
  *a2 = 0;
  return result;
}

uint64_t sub_100215880(uint64_t a1, id *a2)
{
  char v3 = sub_1007FDC60();
  *a2 = 0;
  return v3 & 1;
}

uint64_t sub_100215900@<X0>(void *a1@<X8>)
{
  sub_1007FDC70();
  NSString v2 = sub_1007FDC30();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100215944(uint64_t a1, uint64_t a2)
{
  return sub_100216B54(a1, a2, (uint64_t (*)(uint64_t))&String.hashValue.getter);
}

uint64_t sub_100215964()
{
  return sub_1007F5570();
}

uint64_t sub_1002159B0()
{
  return sub_1007F5560();
}

Swift::Int sub_100215A08()
{
  return sub_1007FF600();
}

Swift::Int sub_100215A70()
{
  Swift::UInt v1 = *v0;
  sub_1007FF5C0();
  sub_1007FF5D0(v1);
  return sub_1007FF600();
}

void sub_100215AB8()
{
  sub_1007FF5D0(*v0);
}

Swift::Int sub_100215AE4()
{
  Swift::UInt v1 = *v0;
  sub_1007FF5C0();
  sub_1007FF5D0(v1);
  return sub_1007FF600();
}

void *sub_100215B28@<X0>(void *result@<X0>, uint64_t a2@<X8>)
{
  *(void *)a2 = *result;
  *(unsigned char *)(a2 + 8) = 0;
  return result;
}

void sub_100215B38(void *a1@<X8>)
{
  *a1 = *v1;
}

uint64_t sub_100215B44()
{
  return sub_1007FDC70();
}

uint64_t sub_100215B54(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);

  return _BridgedStoredNSError.errorCode.getter(a1, v2);
}

uint64_t sub_100215BC0(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);

  return _BridgedStoredNSError.errorUserInfo.getter(a1, v2);
}

uint64_t sub_100215C2C(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);
  id v5 = a1;

  return _BridgedStoredNSError.init(_bridgedNSError:)(v5, a2, v4);
}

uint64_t sub_100215CBC()
{
  id v1 = *v0;
  uint64_t v2 = sub_1007FEB40();

  return v2;
}

uint64_t sub_100215CF4(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);

  return _BridgedStoredNSError.hash(into:)(a1, a2, v4);
}

Swift::Int sub_100215D70()
{
  return sub_1007FF600();
}

uint64_t sub_100215DD0@<X0>(uint64_t a1@<X0>, uint64_t *a2@<X8>)
{
  uint64_t v3 = sub_1002199C0(a1);
  uint64_t result = swift_bridgeObjectRelease();
  *a2 = v3;
  return result;
}

void *sub_100215E10@<X0>(void *result@<X0>, void *a2@<X8>)
{
  *a2 = *result;
  return result;
}

uint64_t sub_100215E1C()
{
  swift_getWitnessTable();

  return sub_1007F5550();
}

BOOL sub_100215E88(void *a1, void *a2)
{
  return *a1 == *a2;
}

uint64_t sub_100215E9C(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25200, type metadata accessor for Identifier);
  uint64_t v3 = sub_100217B24(&qword_100B25208, type metadata accessor for Identifier);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100215F58(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B251B0, type metadata accessor for AssetActivityItemProviderProperty);
  uint64_t v3 = sub_100217B24(&qword_100B251B8, type metadata accessor for AssetActivityItemProviderProperty);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216014(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B251C0, type metadata accessor for BLDownloadQueueProperty);
  uint64_t v3 = sub_100217B24(&qword_100B251C8, type metadata accessor for BLDownloadQueueProperty);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1002160D0(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B251D0, type metadata accessor for OpenExternalURLOptionsKey);
  uint64_t v3 = sub_100217B24(&qword_100B251D8, type metadata accessor for OpenExternalURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_10021618C(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25238, type metadata accessor for MCatalogRequestRelationship);
  uint64_t v3 = sub_100217B24(&qword_100B25240, type metadata accessor for MCatalogRequestRelationship);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216248(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B249F8, type metadata accessor for BCDefaultCollectionID);
  uint64_t v3 = sub_100217B24(&qword_100B24A00, type metadata accessor for BCDefaultCollectionID);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216304(uint64_t a1)
{
  uint64_t v2 = sub_100217B24((unint64_t *)&qword_100B25210, type metadata accessor for Key);
  uint64_t v3 = sub_100217B24(&qword_100B25218, type metadata accessor for Key);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1002163C0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);

  return static _BridgedStoredNSError.== infix(_:_:)(a1, a2, a3, v6);
}

uint64_t sub_100216444(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B24A18, type metadata accessor for FigaroKey);
  uint64_t v3 = sub_100217B24(&qword_100B24A20, type metadata accessor for FigaroKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216500(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25290, type metadata accessor for ActivityType);
  uint64_t v3 = sub_100217B24(&qword_100B25298, type metadata accessor for ActivityType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1002165BC(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B251E0, _s3__C10OptionsKeyVMa_0);
  uint64_t v3 = sub_100217B24(&qword_100B251E8, _s3__C10OptionsKeyVMa_0);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216678(uint64_t a1)
{
  uint64_t v2 = sub_100217B24((unint64_t *)&qword_100B251F0, type metadata accessor for OpenURLOptionsKey);
  uint64_t v3 = sub_100217B24(&qword_100B251F8, type metadata accessor for OpenURLOptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216734(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B249E8, type metadata accessor for BDSCloudAssetType);
  uint64_t v3 = sub_100217B24(&qword_100B249F0, type metadata accessor for BDSCloudAssetType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1002167F0(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B249D8, type metadata accessor for BDSLibraryContentAssetType);
  uint64_t v3 = sub_100217B24(&qword_100B249E0, type metadata accessor for BDSLibraryContentAssetType);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_1002168AC(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B24A08, type metadata accessor for NSKeyValueChangeKey);
  uint64_t v3 = sub_100217B24(&qword_100B24A10, type metadata accessor for NSKeyValueChangeKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216968(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B25190, type metadata accessor for OptionsKey);
  uint64_t v3 = sub_100217B24(&qword_100B25198, type metadata accessor for OptionsKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216A24@<X0>(void *a1@<X8>)
{
  NSString v2 = sub_1007FDC30();
  uint64_t result = swift_bridgeObjectRelease();
  *a1 = v2;
  return result;
}

uint64_t sub_100216A6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007FDC70();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_100216A98(uint64_t a1)
{
  uint64_t v2 = sub_100217B24(&qword_100B251A0, type metadata accessor for BSUIAssetKey);
  uint64_t v3 = sub_100217B24(&qword_100B251A8, type metadata accessor for BSUIAssetKey);

  return _SwiftNewtypeWrapper<>._toCustomAnyHashable()(a1, v2, v3, &protocol witness table for String);
}

uint64_t sub_100216B54(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  uint64_t v4 = sub_1007FDC70();
  uint64_t v5 = a3(v4);
  swift_bridgeObjectRelease();
  return v5;
}

uint64_t sub_100216B98()
{
  sub_1007FDC70();
  sub_1007FDDA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100216BEC()
{
  sub_1007FDC70();
  sub_1007FF5C0();
  sub_1007FDDA0();
  Swift::Int v0 = sub_1007FF600();
  swift_bridgeObjectRelease();
  return v0;
}

uint64_t sub_100216C60()
{
  uint64_t v0 = sub_1007FDC70();
  uint64_t v2 = v1;
  if (v0 == sub_1007FDC70() && v2 == v3) {
    char v5 = 1;
  }
  else {
    char v5 = sub_1007FF470();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v5 & 1;
}

unint64_t sub_100216CEC(void *a1)
{
  return sub_100217058(a1, &qword_100B2C6C0);
}

unint64_t sub_100216CF8(void *a1)
{
  uint64_t v1 = a1[2];
  if (!v1) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_100058D18((uint64_t *)&unk_100B2C5E0);
  uint64_t v3 = (void *)sub_1007FF2E0();
  uint64_t v5 = a1[4];
  uint64_t v4 = a1[5];
  unint64_t result = sub_1003355B8(v5);
  if (v7)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_bridgeObjectRetain();
    return (unint64_t)v3;
  }
  uint64_t v8 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v3 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v9 = 8 * result;
    *(void *)(v3[6] + v9) = v5;
    *(void *)(v3[7] + v9) = v4;
    uint64_t v10 = v3[2];
    BOOL v11 = __OFADD__(v10, 1);
    uint64_t v12 = v10 + 1;
    if (v11) {
      break;
    }
    v3[2] = v12;
    if (!--v1) {
      goto LABEL_8;
    }
    id v13 = v8 + 2;
    uint64_t v5 = *(v8 - 1);
    uint64_t v14 = *v8;
    swift_bridgeObjectRetain();
    unint64_t result = sub_1003355B8(v5);
    uint64_t v8 = v13;
    uint64_t v4 = v14;
    if (v15) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100216DF8(uint64_t a1)
{
  return sub_100216E70(a1, &qword_100B24EA8, (uint64_t *)&unk_100B24EB0, (uint64_t (*)(void))sub_100326524, (uint64_t (*)(void))&type metadata accessor for ContentMessage.CFIUpdate);
}

unint64_t sub_100216E34(uint64_t a1)
{
  return sub_100216E70(a1, &qword_100B24E98, &qword_100B24EA0, (uint64_t (*)(void))sub_100326524, (uint64_t (*)(void))&type metadata accessor for CFIRange);
}

unint64_t sub_100216E70(uint64_t a1, uint64_t *a2, uint64_t *a3, uint64_t (*a4)(void), uint64_t (*a5)(void))
{
  uint64_t v26 = a5;
  uint64_t v27 = a4;
  uint64_t v8 = sub_100058D18(a2);
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  BOOL v11 = (uint64_t (**)(void))((char *)&v26 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = *(void *)(a1 + 16);
  if (v12)
  {
    sub_100058D18(a3);
    id v13 = (void *)sub_1007FF2E0();
    uint64_t v14 = (char *)v11 + *(int *)(v8 + 48);
    uint64_t v15 = a1 + ((*(unsigned __int8 *)(v9 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v9 + 80));
    uint64_t v16 = *(void *)(v9 + 72);
    while (1)
    {
      sub_10005B044(v15, (uint64_t)v11, a2);
      uint64_t v17 = *v11;
      unint64_t result = v27(*v11);
      if (v19) {
        break;
      }
      unint64_t v20 = result;
      *(void *)((char *)v13 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
      *(void *)(v13[6] + 8 * result) = v17;
      uint64_t v21 = v13[7];
      uint64_t v22 = v26(0);
      unint64_t result = (*(uint64_t (**)(unint64_t, char *, uint64_t))(*(void *)(v22 - 8) + 32))(v21 + *(void *)(*(void *)(v22 - 8) + 72) * v20, v14, v22);
      uint64_t v23 = v13[2];
      BOOL v24 = __OFADD__(v23, 1);
      uint64_t v25 = v23 + 1;
      if (v24) {
        goto LABEL_10;
      }
      void v13[2] = v25;
      v15 += v16;
      if (!--v12) {
        return (unint64_t)v13;
      }
    }
    __break(1u);
LABEL_10:
    __break(1u);
  }
  else
  {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  return result;
}

unint64_t sub_10021704C(void *a1)
{
  return sub_100217058(a1, &qword_100B24E80);
}

unint64_t sub_100217058(void *a1, uint64_t *a2)
{
  uint64_t v2 = a1[2];
  if (!v2) {
    return (unint64_t)_swiftEmptyDictionarySingleton;
  }
  sub_100058D18(a2);
  uint64_t v4 = (void *)sub_1007FF2E0();
  uint64_t v6 = a1[4];
  uint64_t v5 = a1[5];
  unint64_t result = sub_100326524(v6);
  if (v8)
  {
LABEL_7:
    __break(1u);
LABEL_8:
    swift_retain();
    return (unint64_t)v4;
  }
  uint64_t v9 = a1 + 7;
  while (1)
  {
    *(void *)((char *)v4 + ((result >> 3) & 0x1FFFFFFFFFFFFFF8) + 64) |= 1 << result;
    uint64_t v10 = 8 * result;
    *(void *)(v4[6] + v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v6;
    *(void *)(v4[7] + v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v5;
    uint64_t v11 = v4[2];
    BOOL v12 = __OFADD__(v11, 1);
    uint64_t v13 = v11 + 1;
    if (v12) {
      break;
    }
    _DWORD v4[2] = v13;
    if (!--v2) {
      goto LABEL_8;
    }
    uint64_t v14 = v9 + 2;
    uint64_t v6 = *(v9 - 1);
    uint64_t v15 = *v9;
    swift_retain();
    unint64_t result = sub_100326524(v6);
    uint64_t v9 = v14;
    uint64_t v5 = v15;
    if (v16) {
      goto LABEL_7;
    }
  }
  __break(1u);
  return result;
}

unint64_t sub_100217154(uint64_t a1)
{
  return sub_100216E70(a1, (uint64_t *)&unk_100B248F0, (uint64_t *)&unk_100B32F40, (uint64_t (*)(void))sub_1003355B8, (uint64_t (*)(void))&type metadata accessor for StoreBookTasteInfo);
}

unint64_t sub_100217190(uint64_t a1)
{
  return sub_100216E70(a1, &qword_100B249B8, &qword_100B249C0, (uint64_t (*)(void))sub_1003355B8, (uint64_t (*)(void))&type metadata accessor for StoreBookRating);
}

unint64_t sub_1002171D0(unint64_t result)
{
  unint64_t v1 = result;
  unint64_t v2 = result >> 62;
  if (result >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1007FF290();
    unint64_t result = swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100058D18(&qword_100B24A78);
      unint64_t result = sub_1007FF090();
      uint64_t v3 = (unsigned char *)result;
      uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1007FF290();
      unint64_t result = swift_bridgeObjectRelease();
      if (!v5) {
        return (unint64_t)v3;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((result & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = v1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return (unint64_t)v3;
  }
LABEL_9:
  unint64_t v7 = 0;
  char v8 = v3 + 56;
  unint64_t v21 = v1 & 0xC000000000000001;
  unint64_t v19 = v1 + 32;
  uint64_t v20 = v1 & 0xFFFFFFFFFFFFFF8;
  while (v21)
  {
    unint64_t result = sub_1007FF120();
    unint64_t v9 = result;
    BOOL v10 = __OFADD__(v7++, 1);
    if (v10) {
      goto LABEL_25;
    }
LABEL_18:
    sub_1007F7750();
    sub_100217B24(&qword_100B24A80, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
    unint64_t result = sub_1007FDAA0();
    uint64_t v11 = -1 << v3[32];
    unint64_t v12 = result & ~v11;
    unint64_t v13 = v12 >> 6;
    uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
    uint64_t v15 = 1 << v12;
    if (((1 << v12) & v14) != 0)
    {
      uint64_t v16 = ~v11;
      sub_100217B24(&qword_100B24A88, (void (*)(uint64_t))&type metadata accessor for AnyCancellable);
      while (1)
      {
        unint64_t result = sub_1007FDB40();
        if (result) {
          break;
        }
        unint64_t v12 = (v12 + 1) & v16;
        unint64_t v13 = v12 >> 6;
        uint64_t v14 = *(void *)&v8[8 * (v12 >> 6)];
        uint64_t v15 = 1 << v12;
        if ((v14 & (1 << v12)) == 0) {
          goto LABEL_22;
        }
      }
      unint64_t result = swift_release();
    }
    else
    {
LABEL_22:
      *(void *)&v8[8 * v13] = v15 | v14;
      *(void *)(*((void *)v3 + 6) + 8 * v12) = v9;
      uint64_t v17 = *((void *)v3 + 2);
      BOOL v10 = __OFADD__(v17, 1);
      uint64_t v18 = v17 + 1;
      if (v10) {
        goto LABEL_26;
      }
      *((void *)v3 + 2) = v18;
    }
    if (v7 == v5) {
      return (unint64_t)v3;
    }
  }
  if (v7 >= *(void *)(v20 + 16)) {
    goto LABEL_27;
  }
  unint64_t v9 = *(void *)(v19 + 8 * v7);
  unint64_t result = swift_retain();
  BOOL v10 = __OFADD__(v7++, 1);
  if (!v10) {
    goto LABEL_18;
  }
LABEL_25:
  __break(1u);
LABEL_26:
  __break(1u);
LABEL_27:
  __break(1u);
  return result;
}

uint64_t sub_100217484(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100058D18(&qword_100B24F80);
    uint64_t v3 = sub_1007FF090();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    uint64_t v7 = ~(-1 << *(unsigned char *)(v3 + 32));
    while (1)
    {
      uint64_t v8 = *(void *)(v6 + 8 * v4);
      uint64_t result = sub_1007FF5B0();
      unint64_t v10 = result & v7;
      unint64_t v11 = (result & (unint64_t)v7) >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * v11);
      uint64_t v13 = 1 << (result & v7);
      uint64_t v14 = *(void *)(v3 + 48);
      if ((v13 & v12) != 0)
      {
        while (*(void *)(v14 + 8 * v10) != v8)
        {
          unint64_t v10 = (v10 + 1) & v7;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            goto LABEL_7;
          }
        }
      }
      else
      {
LABEL_7:
        *(void *)(v5 + 8 * v11) = v13 | v12;
        *(void *)(v14 + 8 * v1UIAccessibilityPostNotification(UIAccessibilityScreenChangedNotification, 0) = v8;
        uint64_t v15 = *(void *)(v3 + 16);
        BOOL v16 = __OFADD__(v15, 1);
        uint64_t v17 = v15 + 1;
        if (v16)
        {
          __break(1u);
          return result;
        }
        *(void *)(v3 + 16) = v17;
      }
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (uint64_t)&_swiftEmptySetSingleton;
}

uint64_t sub_100217594()
{
  return swift_getOpaqueTypeMetadata2();
}

uint64_t sub_100217628()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002176B8()
{
  return sub_1002176E8(&qword_100B234B0, &qword_100B234B8, (void (*)(void))sub_100217764);
}

uint64_t sub_1002176E8(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100043378(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100217764()
{
  unint64_t result = qword_100B234C0;
  if (!qword_100B234C0)
  {
    sub_100043378(&qword_100B234C8);
    sub_100217804();
    sub_100043334(&qword_100B23538, &qword_100B23540);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B234C0);
  }
  return result;
}

unint64_t sub_100217804()
{
  unint64_t result = qword_100B234D0;
  if (!qword_100B234D0)
  {
    sub_100043378(&qword_100B234D8);
    sub_1002176E8(&qword_100B234E0, &qword_100B234E8, (void (*)(void))sub_1002178AC);
    sub_1002179EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B234D0);
  }
  return result;
}

unint64_t sub_1002178AC()
{
  unint64_t result = qword_100B234F0;
  if (!qword_100B234F0)
  {
    sub_100043378(&qword_100B234F8);
    sub_10021794C();
    sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B234F0);
  }
  return result;
}

unint64_t sub_10021794C()
{
  unint64_t result = qword_100B23500;
  if (!qword_100B23500)
  {
    sub_100043378(&qword_100B23508);
    sub_100043334((unint64_t *)&unk_100B23510, &qword_100B33930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B23500);
  }
  return result;
}

unint64_t sub_1002179EC()
{
  unint64_t result = qword_100B23530;
  if (!qword_100B23530)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B23530);
  }
  return result;
}

unint64_t sub_100217A40()
{
  unint64_t result = qword_100B23550;
  if (!qword_100B23550)
  {
    sub_100043378(&qword_100B23548);
    sub_100217B24(&qword_100B23558, (void (*)(uint64_t))type metadata accessor for TipContentView);
    sub_100043334((unint64_t *)&qword_100B23560, (uint64_t *)&unk_100B2C9F0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B23550);
  }
  return result;
}

void type metadata accessor for UIEdgeInsets(uint64_t a1)
{
}

uint64_t sub_100217B24(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100217B6C(uint64_t a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B494F0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void type metadata accessor for CGImage(uint64_t a1)
{
}

void type metadata accessor for BDSLibraryContentAssetType(uint64_t a1)
{
}

void type metadata accessor for BDSCloudAssetType(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceSizeClass(uint64_t a1)
{
}

void type metadata accessor for UIVibrancyEffectStyle(uint64_t a1)
{
}

void type metadata accessor for ScrollPosition(uint64_t a1)
{
}

void type metadata accessor for NavigationDirection(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceStyle(uint64_t a1)
{
}

void type metadata accessor for Attributes(uint64_t a1)
{
}

void type metadata accessor for AnimationCurve(uint64_t a1)
{
}

void type metadata accessor for NSKeyValueChangeKey(uint64_t a1)
{
}

void type metadata accessor for BookLayoutMode(uint64_t a1)
{
}

void type metadata accessor for TouchType(uint64_t a1)
{
}

__n128 initializeWithTake for DeepLinkIntent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  *a1 = *a2;
  return result;
}

void type metadata accessor for CGPoint(uint64_t a1)
{
}

void type metadata accessor for BKAssetState(uint64_t a1)
{
}

void type metadata accessor for AEAssetViewControllerDownloadState(uint64_t a1)
{
}

void type metadata accessor for UNAuthorizationStatus(uint64_t a1)
{
}

void type metadata accessor for FigaroKey(uint64_t a1)
{
}

void type metadata accessor for BCAnalyticsViewLifeCycleState(uint64_t a1)
{
}

void type metadata accessor for UIDeviceOrientation(uint64_t a1)
{
}

uint64_t sub_100217D68(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 16)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100217D88(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 16) = v3;
  return result;
}

void type metadata accessor for CGSize(uint64_t a1)
{
}

void type metadata accessor for UIInterfaceOrientation(uint64_t a1)
{
}

__n128 initializeWithTake for ExperimentIDEntry(_OWORD *a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *a1 = *(_OWORD *)a2;
  a1[1] = v3;
  return result;
}

void type metadata accessor for CGRect(uint64_t a1)
{
}

uint64_t initializeBufferWithCopyOfBuffer for ExperimentIDEntry(uint64_t *a1, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *a1 = *a2;
  uint64_t v3 = v2 + 16;
  swift_retain();
  return v3;
}

uint64_t sub_100217E2C(uint64_t a1, int a2)
{
  if (a2 && *(unsigned char *)(a1 + 32)) {
    return (*(_DWORD *)a1 + 1);
  }
  else {
    return 0;
  }
}

uint64_t sub_100217E4C(uint64_t result, int a2, int a3)
{
  if (a2)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)__n128 result = (a2 - 1);
    *(void *)(result + 8) = 0;
    if (!a3) {
      return result;
    }
    char v3 = 1;
  }
  else
  {
    if (!a3) {
      return result;
    }
    char v3 = 0;
  }
  *(unsigned char *)(result + 32) = v3;
  return result;
}

void type metadata accessor for FeedNavigationBarStyle(uint64_t a1)
{
}

uint64_t sub_100217E8C()
{
  return sub_100217B24(&qword_100B245B8, type metadata accessor for UIInterfaceOrientation);
}

uint64_t sub_100217ED4()
{
  return sub_100217B24(&qword_100B245C0, type metadata accessor for FigaroKey);
}

uint64_t sub_100217F1C()
{
  return sub_100217B24(&qword_100B245C8, type metadata accessor for FigaroKey);
}

uint64_t sub_100217F64()
{
  return sub_100217B24(&qword_100B245D0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100217FAC()
{
  return sub_100217B24(&qword_100B245D8, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_100217FF4()
{
  return sub_100217B24(&qword_100B245E0, type metadata accessor for NSKeyValueChangeKey);
}

uint64_t sub_10021803C()
{
  return sub_100217B24(&qword_100B245E8, type metadata accessor for Attributes);
}

uint64_t sub_100218084()
{
  return sub_100217B24(&qword_100B245F0, type metadata accessor for Attributes);
}

uint64_t sub_1002180CC()
{
  return sub_100217B24(&qword_100B245F8, type metadata accessor for Attributes);
}

uint64_t sub_100218114()
{
  return sub_100217B24(&qword_100B24600, type metadata accessor for Attributes);
}

uint64_t sub_10021815C()
{
  return sub_100217B24(&qword_100B24608, type metadata accessor for BCDefaultCollectionID);
}

uint64_t sub_1002181A4()
{
  return sub_100217B24(&qword_100B24610, type metadata accessor for BCDefaultCollectionID);
}

uint64_t sub_1002181EC()
{
  return sub_100217B24(&qword_100B24620, type metadata accessor for ScrollPosition);
}

uint64_t sub_100218234()
{
  return sub_100217B24(&qword_100B24628, type metadata accessor for ScrollPosition);
}

uint64_t sub_10021827C()
{
  return sub_100217B24(&qword_100B24630, type metadata accessor for ScrollPosition);
}

uint64_t sub_1002182C4()
{
  return sub_100217B24(&qword_100B24638, type metadata accessor for ScrollPosition);
}

uint64_t sub_10021830C()
{
  return sub_100217B24(&qword_100B24640, type metadata accessor for BDSCloudAssetType);
}

uint64_t sub_100218354()
{
  return sub_100217B24(&qword_100B24648, type metadata accessor for BDSCloudAssetType);
}

uint64_t sub_10021839C()
{
  return sub_100217B24(&qword_100B24650, type metadata accessor for BDSCloudAssetType);
}

uint64_t sub_1002183E4()
{
  return sub_100217B24(&qword_100B24658, type metadata accessor for BDSLibraryContentAssetType);
}

uint64_t sub_10021842C()
{
  return sub_100217B24(&qword_100B24660, type metadata accessor for BDSLibraryContentAssetType);
}

uint64_t sub_100218474()
{
  return sub_100217B24(&qword_100B24668, type metadata accessor for BDSLibraryContentAssetType);
}

uint64_t sub_1002184BC()
{
  return sub_100217B24((unint64_t *)&unk_100B24670, type metadata accessor for FigaroKey);
}

uint64_t sub_100218504(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = type metadata accessor for NoteHighlight(0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

void *sub_100218568(uint64_t a1)
{
  uint64_t v2 = sub_1007F2D70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  uint64_t v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100058D18(&qword_100B24EF8);
    uint64_t v9 = sub_1007FF090();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    uint64_t v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    uint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100217B24(&qword_100B24F00, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
      uint64_t v16 = sub_1007FDAA0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100217B24(&qword_100B24F08, (void (*)(uint64_t))&type metadata accessor for Calendar.Component);
          char v23 = sub_1007FDB40();
          BOOL v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        __n128 result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_100218880(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1007FF290();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100058D18(&qword_100B24F10);
      uint64_t v3 = (void *)sub_1007FF090();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1007FF290();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v43 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      while (1)
      {
        uint64_t v9 = sub_1007FF120();
        BOOL v10 = __OFADD__(v8++, 1);
        if (v10)
        {
          __break(1u);
          goto LABEL_36;
        }
        uint64_t v11 = v9;
        Swift::Int v12 = sub_1007FEB10(v3[5]);
        uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
        unint64_t v14 = v12 & ~v13;
        unint64_t v15 = v14 >> 6;
        uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
        uint64_t v17 = 1 << v14;
        if (((1 << v14) & v16) != 0) {
          break;
        }
LABEL_20:
        *(void *)&v7[8 * v15] = v17 | v16;
        *(void *)(v3[6] + 8 * v14) = v11;
        uint64_t v23 = v3[2];
        BOOL v10 = __OFADD__(v23, 1);
        uint64_t v24 = v23 + 1;
        if (v10) {
          goto LABEL_37;
        }
        v3[2] = v24;
        if (v8 == v5) {
          return;
        }
      }
      sub_10004A860(0, &qword_100B24F18);
      id v18 = *(id *)(v3[6] + 8 * v14);
      char v19 = sub_1007FEB20();

      if ((v19 & 1) == 0)
      {
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = sub_1007FEB20();

          if (v22) {
            goto LABEL_11;
          }
        }
        uint64_t v5 = v43;
        goto LABEL_20;
      }
LABEL_11:
      swift_unknownObjectRelease();
      uint64_t v5 = v43;
      if (v8 == v43) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  unint64_t v41 = a1 + 32;
  uint64_t v42 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v42)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(v41 + 8 * v25);
    Swift::Int v28 = sub_1007FEB10(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      sub_10004A860(0, &qword_100B24F18);
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = sub_1007FEB20();

      if (v35)
      {
LABEL_24:

        goto LABEL_25;
      }
      uint64_t v36 = ~v29;
      while (1)
      {
        unint64_t v30 = (v30 + 1) & v36;
        unint64_t v31 = v30 >> 6;
        uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
        uint64_t v33 = 1 << v30;
        if ((v32 & (1 << v30)) == 0) {
          break;
        }
        id v37 = *(id *)(v3[6] + 8 * v30);
        char v38 = sub_1007FEB20();

        if (v38) {
          goto LABEL_24;
        }
      }
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v3sub_1007E6FC4(2, 18, 1, 0) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_25:
    if (++v25 == v43) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

void *sub_100218BDC(uint64_t a1)
{
  uint64_t v2 = sub_1007F8770();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100058D18(&qword_100B25220);
    uint64_t v9 = sub_1007FF090();
    uint64_t v10 = 0;
    Swift::Int v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    unint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100217B24(&qword_100B25228, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
      uint64_t v16 = sub_1007FDAA0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100217B24(&qword_100B25230, (void (*)(uint64_t))&type metadata accessor for PresentationDetent);
          char v23 = sub_1007FDB40();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        __n128 result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void sub_100218EF4(unint64_t a1)
{
  unint64_t v2 = a1 >> 62;
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t v6 = sub_1007FF290();
    swift_bridgeObjectRelease();
    if (v6)
    {
LABEL_3:
      sub_100058D18(&qword_100B24A70);
      uint64_t v3 = (void *)sub_1007FF090();
      uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
      if (!v2) {
        goto LABEL_4;
      }
LABEL_8:
      swift_bridgeObjectRetain();
      uint64_t v5 = sub_1007FF290();
      swift_bridgeObjectRelease();
      if (!v5) {
        return;
      }
      goto LABEL_9;
    }
  }
  else if (*(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
  {
    goto LABEL_3;
  }
  uint64_t v3 = &_swiftEmptySetSingleton;
  uint64_t v4 = a1 & 0xFFFFFFFFFFFFFF8;
  if (v2) {
    goto LABEL_8;
  }
LABEL_4:
  uint64_t v5 = *(void *)(v4 + 16);
  if (!v5) {
    return;
  }
LABEL_9:
  uint64_t v7 = (char *)(v3 + 7);
  uint64_t v42 = v5;
  if ((a1 & 0xC000000000000001) != 0)
  {
    uint64_t v8 = 0;
    while (1)
    {
      uint64_t v9 = sub_1007FF120();
      BOOL v10 = __OFADD__(v8++, 1);
      if (v10)
      {
        __break(1u);
        goto LABEL_36;
      }
      uint64_t v11 = v9;
      Swift::Int v12 = sub_1007FEB10(v3[5]);
      uint64_t v13 = -1 << *((unsigned char *)v3 + 32);
      unint64_t v14 = v12 & ~v13;
      unint64_t v15 = v14 >> 6;
      uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
      uint64_t v17 = 1 << v14;
      if (((1 << v14) & v16) != 0)
      {
        type metadata accessor for BKTapActionView();
        id v18 = *(id *)(v3[6] + 8 * v14);
        char v19 = sub_1007FEB20();

        if (v19)
        {
LABEL_11:
          swift_unknownObjectRelease();
          goto LABEL_12;
        }
        uint64_t v20 = ~v13;
        while (1)
        {
          unint64_t v14 = (v14 + 1) & v20;
          unint64_t v15 = v14 >> 6;
          uint64_t v16 = *(void *)&v7[8 * (v14 >> 6)];
          uint64_t v17 = 1 << v14;
          if ((v16 & (1 << v14)) == 0) {
            break;
          }
          id v21 = *(id *)(v3[6] + 8 * v14);
          char v22 = sub_1007FEB20();

          if (v22) {
            goto LABEL_11;
          }
        }
      }
      *(void *)&v7[8 * v15] = v17 | v16;
      *(void *)(v3[6] + 8 * v14) = v11;
      uint64_t v23 = v3[2];
      BOOL v10 = __OFADD__(v23, 1);
      uint64_t v24 = v23 + 1;
      if (v10) {
        goto LABEL_37;
      }
      v3[2] = v24;
LABEL_12:
      if (v8 == v42) {
        return;
      }
    }
  }
  uint64_t v25 = 0;
  uint64_t v41 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (v25 != v41)
  {
    Swift::Int v26 = v3[5];
    id v27 = *(id *)(a1 + 32 + 8 * v25);
    Swift::Int v28 = sub_1007FEB10(v26);
    uint64_t v29 = -1 << *((unsigned char *)v3 + 32);
    unint64_t v30 = v28 & ~v29;
    unint64_t v31 = v30 >> 6;
    uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
    uint64_t v33 = 1 << v30;
    if (((1 << v30) & v32) != 0)
    {
      type metadata accessor for BKTapActionView();
      id v34 = *(id *)(v3[6] + 8 * v30);
      char v35 = sub_1007FEB20();

      if (v35) {
        goto LABEL_23;
      }
      uint64_t v36 = ~v29;
      unint64_t v30 = (v30 + 1) & v36;
      unint64_t v31 = v30 >> 6;
      uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
      uint64_t v33 = 1 << v30;
      if ((v32 & (1 << v30)) != 0)
      {
        while (1)
        {
          id v37 = *(id *)(v3[6] + 8 * v30);
          char v38 = sub_1007FEB20();

          if (v38) {
            break;
          }
          unint64_t v30 = (v30 + 1) & v36;
          unint64_t v31 = v30 >> 6;
          uint64_t v32 = *(void *)&v7[8 * (v30 >> 6)];
          uint64_t v33 = 1 << v30;
          if ((v32 & (1 << v30)) == 0) {
            goto LABEL_31;
          }
        }
LABEL_23:

        uint64_t v5 = v42;
        goto LABEL_24;
      }
LABEL_31:
      uint64_t v5 = v42;
    }
    *(void *)&v7[8 * v31] = v33 | v32;
    *(void *)(v3[6] + 8 * v3sub_1007E6FC4(2, 18, 1, 0) = v27;
    uint64_t v39 = v3[2];
    BOOL v10 = __OFADD__(v39, 1);
    uint64_t v40 = v39 + 1;
    if (v10) {
      goto LABEL_38;
    }
    v3[2] = v40;
LABEL_24:
    if (++v25 == v5) {
      return;
    }
  }
LABEL_36:
  __break(1u);
LABEL_37:
  __break(1u);
LABEL_38:
  __break(1u);
}

Swift::Int sub_10021924C(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100058D18(&qword_100B24E78);
    uint64_t v3 = sub_1007FF090();
    uint64_t v4 = 0;
    uint64_t v5 = v3 + 56;
    uint64_t v6 = a1 + 32;
    while (1)
    {
      Swift::UInt v7 = *(unsigned __int8 *)(v6 + v4);
      sub_1007FF5C0();
      sub_1007FF5D0(v7);
      Swift::Int result = sub_1007FF600();
      uint64_t v9 = -1 << *(unsigned char *)(v3 + 32);
      unint64_t v10 = result & ~v9;
      unint64_t v11 = v10 >> 6;
      uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
      uint64_t v13 = 1 << v10;
      uint64_t v14 = *(void *)(v3 + 48);
      if (((1 << v10) & v12) != 0)
      {
        if (*(unsigned __int8 *)(v14 + v10) == v7) {
          goto LABEL_3;
        }
        uint64_t v15 = ~v9;
        while (1)
        {
          unint64_t v10 = (v10 + 1) & v15;
          unint64_t v11 = v10 >> 6;
          uint64_t v12 = *(void *)(v5 + 8 * (v10 >> 6));
          uint64_t v13 = 1 << v10;
          if ((v12 & (1 << v10)) == 0) {
            break;
          }
          if (*(unsigned __int8 *)(v14 + v10) == v7) {
            goto LABEL_3;
          }
        }
      }
      *(void *)(v5 + 8 * v11) = v13 | v12;
      *(unsigned char *)(v14 + v1sub_1007E6FC4(2, 18, 1, 0) = v7;
      uint64_t v16 = *(void *)(v3 + 16);
      BOOL v17 = __OFADD__(v16, 1);
      uint64_t v18 = v16 + 1;
      if (v17)
      {
        __break(1u);
        return result;
      }
      *(void *)(v3 + 16) = v18;
LABEL_3:
      if (++v4 == v1) {
        return v3;
      }
    }
  }
  return (Swift::Int)&_swiftEmptySetSingleton;
}

void *sub_100219390(uint64_t a1)
{
  uint64_t v2 = sub_1007F6060();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100058D18(&qword_100B24A38);
    uint64_t v9 = sub_1007FF090();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100217B24(&qword_100B24A40, (void (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType);
      uint64_t v16 = sub_1007FDAA0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100217B24(&qword_100B24A48, (void (*)(uint64_t))&type metadata accessor for ClusteringOptions.MediaType);
          char v23 = sub_1007FDB40();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        Swift::Int result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

void *sub_1002196A8(uint64_t a1)
{
  uint64_t v2 = sub_1007F5A90();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  id v37 = (char *)&v30 - v7;
  uint64_t v8 = *(void *)(a1 + 16);
  if (v8)
  {
    sub_100058D18((uint64_t *)&unk_100B24980);
    uint64_t v9 = sub_1007FF090();
    uint64_t v10 = 0;
    uint64_t v12 = *(void (**)(char *, uint64_t, uint64_t))(v3 + 16);
    uint64_t v11 = v3 + 16;
    char v35 = v12;
    uint64_t v36 = v9 + 56;
    uint64_t v13 = *(unsigned __int8 *)(v11 + 64);
    uint64_t v32 = v8;
    uint64_t v33 = a1 + ((v13 + 32) & ~v13);
    uint64_t v14 = *(void *)(v11 + 56);
    uint64_t v15 = (void (**)(char *, uint64_t))(v11 - 8);
    unint64_t v31 = (uint64_t (**)(unint64_t, char *, uint64_t))(v11 + 16);
    while (1)
    {
      uint64_t v34 = v10;
      v35(v37, v33 + v14 * v10, v2);
      sub_100217B24((unint64_t *)&unk_100B2C550, (void (*)(uint64_t))&type metadata accessor for Methodology);
      uint64_t v16 = sub_1007FDAA0();
      uint64_t v17 = ~(-1 << *(unsigned char *)(v9 + 32));
      unint64_t v18 = v16 & v17;
      unint64_t v19 = (v16 & (unint64_t)v17) >> 6;
      uint64_t v20 = *(void *)(v36 + 8 * v19);
      uint64_t v21 = 1 << (v16 & v17);
      if ((v21 & v20) != 0)
      {
        while (1)
        {
          uint64_t v22 = v11;
          v35(v5, *(void *)(v9 + 48) + v18 * v14, v2);
          sub_100217B24(&qword_100B24990, (void (*)(uint64_t))&type metadata accessor for Methodology);
          char v23 = sub_1007FDB40();
          uint64_t v24 = *v15;
          (*v15)(v5, v2);
          if (v23) {
            break;
          }
          unint64_t v18 = (v18 + 1) & v17;
          unint64_t v19 = v18 >> 6;
          uint64_t v20 = *(void *)(v36 + 8 * (v18 >> 6));
          uint64_t v21 = 1 << v18;
          uint64_t v11 = v22;
          if ((v20 & (1 << v18)) == 0) {
            goto LABEL_8;
          }
        }
        v24(v37, v2);
        uint64_t v11 = v22;
      }
      else
      {
LABEL_8:
        uint64_t v25 = v37;
        *(void *)(v36 + 8 * v19) = v21 | v20;
        Swift::Int result = (void *)(*v31)(*(void *)(v9 + 48) + v18 * v14, v25, v2);
        uint64_t v27 = *(void *)(v9 + 16);
        BOOL v28 = __OFADD__(v27, 1);
        uint64_t v29 = v27 + 1;
        if (v28)
        {
          __break(1u);
          return result;
        }
        *(void *)(v9 + 16) = v29;
      }
      uint64_t v10 = v34 + 1;
      if (v34 + 1 == v32) {
        return (void *)v9;
      }
    }
  }
  return &_swiftEmptySetSingleton;
}

uint64_t sub_1002199C0(uint64_t a1)
{
  uint64_t v1 = *(void *)(a1 + 16);
  if (!v1) {
    return 0;
  }
  uint64_t result = 0;
  uint64_t v4 = (uint64_t *)(a1 + 32);
  do
  {
    uint64_t v6 = *v4++;
    uint64_t v5 = v6;
    if ((v6 & ~result) == 0) {
      uint64_t v5 = 0;
    }
    result |= v5;
    --v1;
  }
  while (v1);
  return result;
}

uint64_t sub_1002199F8(uint64_t a1, uint64_t a2, char a3)
{
  if (a3)
  {
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  else
  {
    return swift_retain();
  }
}

void type metadata accessor for OptionsKey(uint64_t a1)
{
}

void type metadata accessor for BSUIAssetKey(uint64_t a1)
{
}

void type metadata accessor for CFString(uint64_t a1)
{
}

void type metadata accessor for AssetActivityItemProviderProperty(uint64_t a1)
{
}

void type metadata accessor for BLDownloadQueueProperty(uint64_t a1)
{
}

void type metadata accessor for UIKeyboardType(uint64_t a1)
{
}

void type metadata accessor for BKLibraryDownloadState(uint64_t a1)
{
}

void type metadata accessor for LargeTitleDisplayMode(uint64_t a1)
{
}

void type metadata accessor for OpenExternalURLOptionsKey(uint64_t a1)
{
}

void _s3__C10OptionsKeyVMa_0(uint64_t a1)
{
}

void type metadata accessor for OpenURLOptionsKey(uint64_t a1)
{
}

void type metadata accessor for CGColor(uint64_t a1)
{
}

void type metadata accessor for AudiobookPlayerError(uint64_t a1)
{
}

void type metadata accessor for BERestorationSnapshotAppearance(uint64_t a1)
{
}

void type metadata accessor for Identifier(uint64_t a1)
{
}

void type metadata accessor for Key(uint64_t a1)
{
}

void type metadata accessor for BKSceneType(uint64_t a1)
{
}

void type metadata accessor for BSUIAddToWTRDelegatePriceTrackingOptInType(uint64_t a1)
{
}

void type metadata accessor for MCatalogRequestRelationship(uint64_t a1)
{
}

void type metadata accessor for DeleteActionItem(uint64_t a1)
{
}

void type metadata accessor for AEAnnotationTheme_PageTheme(uint64_t a1)
{
}

void type metadata accessor for UIUserInterfaceIdiom(uint64_t a1)
{
}

uint64_t sub_100219BFC()
{
  return sub_100217B24(&qword_100B25038, type metadata accessor for AEAnnotationTheme_PageTheme);
}

uint64_t sub_100219C44()
{
  return sub_100217B24(&qword_100B25040, type metadata accessor for MCatalogRequestRelationship);
}

uint64_t sub_100219C8C()
{
  return sub_100217B24(&qword_100B25048, type metadata accessor for MCatalogRequestRelationship);
}

uint64_t sub_100219CD4()
{
  return sub_100217B24(&qword_100B25050, type metadata accessor for MCatalogRequestRelationship);
}

uint64_t sub_100219D1C()
{
  return sub_100217B24(&qword_100B25058, type metadata accessor for Key);
}

uint64_t sub_100219D64()
{
  return sub_100217B24(&qword_100B25060, type metadata accessor for Key);
}

uint64_t sub_100219DAC()
{
  return sub_100217B24(&qword_100B25068, type metadata accessor for Identifier);
}

uint64_t sub_100219DF4()
{
  return sub_100217B24(&qword_100B25070, type metadata accessor for Identifier);
}

uint64_t sub_100219E3C()
{
  return sub_100217B24(&qword_100B25078, type metadata accessor for Identifier);
}

uint64_t sub_100219E84()
{
  return sub_100217B24((unint64_t *)&unk_100B25080, type metadata accessor for AudiobookPlayerError);
}

uint64_t sub_100219ECC()
{
  return sub_100217B24((unint64_t *)&unk_100B36E70, type metadata accessor for AudiobookPlayerError);
}

uint64_t sub_100219F14()
{
  return sub_100217B24(&qword_100B25090, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_100219F5C()
{
  return sub_100217B24(&qword_100B25098, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_100219FA4()
{
  return sub_100217B24(&qword_100B250A0, _s3__C10OptionsKeyVMa_0);
}

uint64_t sub_100219FEC()
{
  return sub_100217B24(&qword_100B250A8, _s3__C10OptionsKeyVMa_0);
}

uint64_t sub_10021A034()
{
  return sub_100217B24(&qword_100B250B0, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10021A07C()
{
  return sub_100217B24(&qword_100B250B8, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10021A0C4()
{
  return sub_100217B24(&qword_100B250C0, type metadata accessor for BLDownloadQueueProperty);
}

uint64_t sub_10021A10C()
{
  return sub_100217B24(&qword_100B250C8, type metadata accessor for BLDownloadQueueProperty);
}

uint64_t sub_10021A154()
{
  return sub_100217B24(&qword_100B250D0, type metadata accessor for AssetActivityItemProviderProperty);
}

uint64_t sub_10021A19C()
{
  return sub_100217B24(&qword_100B250D8, type metadata accessor for AssetActivityItemProviderProperty);
}

uint64_t sub_10021A1E4()
{
  return sub_100217B24(&qword_100B250E0, type metadata accessor for AssetActivityItemProviderProperty);
}

uint64_t sub_10021A22C()
{
  return sub_100217B24(&qword_100B250E8, type metadata accessor for BSUIAssetKey);
}

uint64_t sub_10021A274()
{
  return sub_100217B24(&qword_100B250F0, type metadata accessor for BSUIAssetKey);
}

uint64_t sub_10021A2BC()
{
  return sub_100217B24(&qword_100B250F8, type metadata accessor for OptionsKey);
}

uint64_t sub_10021A304()
{
  return sub_100217B24(&qword_100B25100, type metadata accessor for OptionsKey);
}

uint64_t sub_10021A34C()
{
  return sub_100217B24(&qword_100B25108, type metadata accessor for OptionsKey);
}

uint64_t sub_10021A394()
{
  return sub_100217B24((unint64_t *)&unk_100B25110, type metadata accessor for BSUIAssetKey);
}

uint64_t sub_10021A3DC()
{
  return sub_100217B24(&qword_100B47CF0, type metadata accessor for CFString);
}

uint64_t sub_10021A424()
{
  return sub_100217B24(&qword_100B25120, type metadata accessor for CFString);
}

uint64_t sub_10021A46C()
{
  return sub_100217B24(&qword_100B25128, type metadata accessor for BLDownloadQueueProperty);
}

uint64_t sub_10021A4B4()
{
  return sub_100217B24(&qword_100B25130, type metadata accessor for OpenExternalURLOptionsKey);
}

uint64_t sub_10021A4FC()
{
  return sub_100217B24(&qword_100B25138, _s3__C10OptionsKeyVMa_0);
}

uint64_t sub_10021A544()
{
  return sub_100217B24(&qword_100B25140, type metadata accessor for OpenURLOptionsKey);
}

uint64_t sub_10021A58C()
{
  return sub_100217B24(&qword_100B25148, type metadata accessor for AudiobookPlayerError);
}

uint64_t sub_10021A5D4()
{
  return sub_100217B24(&qword_100B25150, type metadata accessor for AudiobookPlayerError);
}

uint64_t sub_10021A61C()
{
  return sub_100217B24(&qword_100B25158, type metadata accessor for AudiobookPlayerError);
}

uint64_t sub_10021A664()
{
  return sub_100217B24(&qword_100B25160, type metadata accessor for Code);
}

void type metadata accessor for Code(uint64_t a1)
{
}

uint64_t sub_10021A6C0()
{
  return sub_100217B24(&qword_100B25168, type metadata accessor for Code);
}

unint64_t sub_10021A70C()
{
  unint64_t result = qword_100B25170;
  if (!qword_100B25170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25170);
  }
  return result;
}

uint64_t sub_10021A760()
{
  return sub_100217B24(&qword_100B25178, type metadata accessor for Code);
}

uint64_t sub_10021A7A8()
{
  return sub_100217B24(&qword_100B25180, type metadata accessor for AudiobookPlayerError);
}

uint64_t sub_10021A7F0()
{
  return sub_100217B24(&qword_100B25188, type metadata accessor for Key);
}

void type metadata accessor for BE_WKPaginationMode(uint64_t a1)
{
}

void type metadata accessor for ActivityType(uint64_t a1)
{
}

uint64_t sub_10021A860()
{
  return sub_100217B24(&qword_100B25278, type metadata accessor for ActivityType);
}

uint64_t sub_10021A8A8()
{
  return sub_100217B24(&qword_100B25280, type metadata accessor for ActivityType);
}

uint64_t sub_10021A8F0()
{
  return sub_100217B24(&qword_100B25288, type metadata accessor for ActivityType);
}

void type metadata accessor for Style(uint64_t a1)
{
}

uint64_t sub_10021AA24()
{
  swift_getObjectType();
  sub_100058D18(qword_100B25728);
  uint64_t v1 = sub_1007FDD00();
  uint64_t v3 = v2;
  sub_1007FF0D0(86);
  v7._countAndFlagsBits = v1;
  v7._object = v3;
  sub_1007FDDE0(v7);
  swift_bridgeObjectRelease();
  v8._countAndFlagsBits = 0x3D656C746974203ALL;
  v8._object = (void *)0xE800000000000000;
  sub_1007FDDE0(v8);
  uint64_t v4 = *(void *)(v0 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title);
  uint64_t v5 = *(void **)(v0 + OBJC_IVAR____TtC5Books20CarPlayAudiobookData_title + 8);
  swift_bridgeObjectRetain();
  v9._countAndFlagsBits = v4;
  v9._object = v5;
  sub_1007FDDE0(v9);
  swift_bridgeObjectRelease();
  v10._object = (void *)0x8000000100904F50;
  v10._countAndFlagsBits = 0xD000000000000013;
  sub_1007FDDE0(v10);
  v11._countAndFlagsBits = sub_1007FF430();
  sub_1007FDDE0(v11);
  swift_bridgeObjectRelease();
  v12._object = (void *)0x8000000100904F70;
  v12._countAndFlagsBits = 0xD000000000000013;
  sub_1007FDDE0(v12);
  v13._countAndFlagsBits = sub_1007FF430();
  sub_1007FDDE0(v13);
  swift_bridgeObjectRelease();
  v14._countAndFlagsBits = 0x746E657272756320;
  v14._object = (void *)0xEE003D7865646E49;
  sub_1007FDDE0(v14);
  v15._countAndFlagsBits = sub_1007FF430();
  sub_1007FDDE0(v15);
  swift_bridgeObjectRelease();
  v16._countAndFlagsBits = 0x63616279616C7020;
  v16._object = (void *)0xEE003D657461526BLL;
  sub_1007FDDE0(v16);
  sub_1007FE220();
  return 0;
}

id sub_10021ACC8()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for CarPlayAudiobookData();
  return [super dealloc];
}

uint64_t type metadata accessor for CarPlayAudiobookData()
{
  return self;
}

uint64_t sub_10021AD70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 48);
}

void sub_10021AD78()
{
  sub_10021C488();
  if (v0 <= 0x3F)
  {
    swift_checkMetadataState();
    if (v1 <= 0x3F) {
      swift_initStructMetadata();
    }
  }
}

void *sub_10021AE58(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1007F7EF0();
  uint64_t v7 = *(void *)(v6 - 8);
  if (*(void *)(v7 + 64) <= 8uLL) {
    uint64_t v8 = 8;
  }
  else {
    uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  uint64_t v9 = *(void *)(a3 + 16);
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = *(_DWORD *)(v10 + 80);
  uint64_t v12 = v8 + v11 + 1;
  uint64_t v13 = *(void *)(v10 + 64);
  unsigned int v14 = v11 | *(_DWORD *)(v7 + 80) & 0xF8;
  if (v14 > 7
    || ((*(_DWORD *)(v7 + 80) | *(_DWORD *)(v10 + 80)) & 0x100000) != 0
    || ((v13 + (v12 & ~v11) + 87) & 0xFFFFFFFFFFFFFFF8) + 9 > 0x18)
  {
    uint64_t v17 = *(void *)a2;
    *a1 = *(void *)a2;
    a1 = (void *)(v17 + (((v14 | 7) + 16) & ~(unint64_t)(v14 | 7)));
    swift_retain();
  }
  else
  {
    unsigned int v18 = a2[v8];
    unsigned int v19 = v18 - 2;
    if (v18 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v20 = v8;
      }
      else {
        uint64_t v20 = 4;
      }
      switch(v20)
      {
        case 1:
          int v21 = *a2;
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 2:
          int v21 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_25;
          }
          goto LABEL_23;
        case 3:
          int v21 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_23;
          }
          goto LABEL_25;
        case 4:
          int v21 = *(_DWORD *)a2;
          if (v8 < 4) {
LABEL_23:
          }
            unsigned int v18 = (v21 | (v19 << (8 * v8))) + 2;
          else {
LABEL_25:
          }
            unsigned int v18 = v21 + 2;
          break;
        default:
          break;
      }
    }
    uint64_t v22 = ~v11;
    if (v18 == 1)
    {
      (*(void (**)(void *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      char v23 = 1;
    }
    else
    {
      *a1 = *(void *)a2;
      swift_retain();
      char v23 = 0;
    }
    *((unsigned char *)a1 + v8) = v23;
    unint64_t v24 = ((unint64_t)a1 + v12) & v22;
    unint64_t v25 = (unint64_t)&a2[v12] & v22;
    (*(void (**)(unint64_t, unint64_t, uint64_t))(v10 + 16))(v24, v25, v9);
    unint64_t v26 = (v24 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v27 = (v25 + v13 + 7) & 0xFFFFFFFFFFFFFFF8;
    uint64_t v28 = *(void *)v27;
    *(unsigned char *)(v26 + 8) = *(unsigned char *)(v27 + 8);
    *(void *)unint64_t v26 = v28;
    unint64_t v29 = (v24 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v30 = (v25 + v13 + 23) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v28) = *(unsigned char *)(v30 + 8);
    *(void *)unint64_t v29 = *(void *)v30;
    *(unsigned char *)(v29 + 8) = v28;
    unint64_t v31 = (v24 + v13 + 39) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v32 = (v25 + v13 + 39) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v28) = *(unsigned char *)(v32 + 8);
    *(void *)unint64_t v31 = *(void *)v32;
    *(unsigned char *)(v31 + 8) = v28;
    unint64_t v33 = (v24 + v13 + 55) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v34 = (v25 + v13 + 55) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v28) = *(unsigned char *)(v34 + 8);
    *(void *)unint64_t v33 = *(void *)v34;
    *(unsigned char *)(v33 + 8) = v28;
    unint64_t v35 = (v24 + v13 + 71) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v36 = (v25 + v13 + 71) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v28) = *(unsigned char *)(v36 + 8);
    *(void *)unint64_t v35 = *(void *)v36;
    *(unsigned char *)(v35 + 8) = v28;
    unint64_t v37 = (v24 + v13 + 87) & 0xFFFFFFFFFFFFFFF8;
    unint64_t v38 = (v25 + v13 + 87) & 0xFFFFFFFFFFFFFFF8;
    LOBYTE(v35) = *(unsigned char *)(v38 + 8);
    *(void *)unint64_t v37 = *(void *)v38;
    *(unsigned char *)(v37 + 8) = v35;
  }
  return a1;
}

uint64_t sub_10021B180(unsigned __int8 *a1, uint64_t a2)
{
  uint64_t v4 = sub_1007F7EF0();
  if (*(void *)(*(void *)(v4 - 8) + 64) <= 8uLL) {
    uint64_t v5 = 8;
  }
  else {
    uint64_t v5 = *(void *)(*(void *)(v4 - 8) + 64);
  }
  unsigned int v6 = a1[v5];
  unsigned int v7 = v6 - 2;
  if (v6 >= 2)
  {
    if (v5 <= 3) {
      uint64_t v8 = v5;
    }
    else {
      uint64_t v8 = 4;
    }
    switch(v8)
    {
      case 1:
        int v9 = *a1;
        goto LABEL_13;
      case 2:
        int v9 = *(unsigned __int16 *)a1;
        goto LABEL_13;
      case 3:
        int v9 = *(unsigned __int16 *)a1 | (a1[2] << 16);
        goto LABEL_13;
      case 4:
        int v9 = *(_DWORD *)a1;
LABEL_13:
        int v10 = (v9 | (v7 << (8 * v5))) + 2;
        unsigned int v6 = v9 + 2;
        if (v5 < 4) {
          unsigned int v6 = v10;
        }
        break;
      default:
        break;
    }
  }
  if (v6 == 1) {
    (*(void (**)(unsigned __int8 *, uint64_t))(*(void *)(v4 - 8) + 8))(a1, v4);
  }
  else {
    swift_release();
  }
  uint64_t v11 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v12 = *(uint64_t (**)(unint64_t))(v11 + 8);
  unint64_t v13 = (unint64_t)&a1[v5 + 1 + *(unsigned __int8 *)(v11 + 80)] & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);

  return v12(v13);
}

void *sub_10021B308(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1007F7EF0();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 16))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    *a1 = *(void *)a2;
    swift_retain();
    char v12 = 0;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 16;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v7 + v15 + 1;
  unint64_t v17 = ((unint64_t)a1 + v16) & ~v15;
  unint64_t v18 = (unint64_t)&a2[v16] & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v13 + 16))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 48);
  uint64_t v20 = v19 + v17;
  uint64_t v21 = v19 + v18;
  unint64_t v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = v24;
  unint64_t v25 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v27) = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v27;
  unint64_t v30 = (v20 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v21 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v27) = *(unsigned char *)(v31 + 8);
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = v27;
  unint64_t v32 = (v20 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v21 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v27) = *(unsigned char *)(v33 + 8);
  *(void *)unint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = v27;
  unint64_t v34 = (v20 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v21 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v32) = *(unsigned char *)(v35 + 8);
  *(void *)unint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = v32;
  return a1;
}

unsigned __int8 *sub_10021B5A0(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1007F7EF0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 16))(a1, a2, v6);
      a1[v8] = 1;
    }
    else
    {
LABEL_36:
      *(void *)a1 = *(void *)a2;
      a1[v8] = 0;
      swift_retain();
    }
  }
  unint64_t v17 = *(void *)(*(void *)(sub_1007F7EF0() - 8) + 64);
  if (v17 <= 8) {
    unint64_t v17 = 8;
  }
  uint64_t v18 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v19 = v18 + 24;
  uint64_t v20 = *(unsigned __int8 *)(v18 + 80);
  uint64_t v21 = v17 + v20 + 1;
  unint64_t v22 = (unint64_t)&a1[v21] & ~v20;
  unint64_t v23 = (unint64_t)&a2[v21] & ~v20;
  (*(void (**)(unint64_t, unint64_t))(v18 + 24))(v22, v23);
  uint64_t v24 = *(void *)(v19 + 40);
  uint64_t v25 = v24 + v22;
  uint64_t v26 = v24 + v23;
  unint64_t v27 = (v25 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v28 = (v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v29 = *(void *)v28;
  *(unsigned char *)(v27 + 8) = *(unsigned char *)(v28 + 8);
  *(void *)unint64_t v27 = v29;
  unint64_t v30 = (v25 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v32 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = *(unsigned char *)(v31 + 8);
  *(void *)unint64_t v30 = v32;
  unint64_t v33 = (v25 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v34 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v32) = *(unsigned char *)(v34 + 8);
  *(void *)unint64_t v33 = *(void *)v34;
  *(unsigned char *)(v33 + 8) = v32;
  unint64_t v35 = (v25 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v36 = (v26 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v32) = *(unsigned char *)(v36 + 8);
  *(void *)unint64_t v35 = *(void *)v36;
  *(unsigned char *)(v35 + 8) = v32;
  unint64_t v37 = (v25 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v38 = (v26 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v32) = *(unsigned char *)(v38 + 8);
  *(void *)unint64_t v37 = *(void *)v38;
  *(unsigned char *)(v37 + 8) = v32;
  unint64_t v39 = (v25 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v40 = (v26 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v37) = *(unsigned char *)(v40 + 8);
  *(void *)unint64_t v39 = *(void *)v40;
  *(unsigned char *)(v39 + 8) = v37;
  return a1;
}

void *sub_10021B944(void *a1, unsigned __int8 *a2, uint64_t a3)
{
  uint64_t v6 = sub_1007F7EF0();
  if (*(void *)(*(void *)(v6 - 8) + 64) <= 8uLL) {
    uint64_t v7 = 8;
  }
  else {
    uint64_t v7 = *(void *)(*(void *)(v6 - 8) + 64);
  }
  unsigned int v8 = a2[v7];
  unsigned int v9 = v8 - 2;
  if (v8 >= 2)
  {
    if (v7 <= 3) {
      uint64_t v10 = v7;
    }
    else {
      uint64_t v10 = 4;
    }
    switch(v10)
    {
      case 1:
        int v11 = *a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 2:
        int v11 = *(unsigned __int16 *)a2;
        if (v7 >= 4) {
          goto LABEL_18;
        }
        goto LABEL_14;
      case 3:
        int v11 = *(unsigned __int16 *)a2 | (a2[2] << 16);
        if (v7 < 4) {
          goto LABEL_14;
        }
        goto LABEL_18;
      case 4:
        int v11 = *(_DWORD *)a2;
        if (v7 < 4)
        {
LABEL_14:
          unsigned int v8 = (v11 | (v9 << (8 * v7))) + 2;
          break;
        }
LABEL_18:
        if (v11 != -1) {
          goto LABEL_19;
        }
        goto LABEL_16;
      default:
        break;
    }
  }
  if (v8 == 1)
  {
LABEL_16:
    (*(void (**)(void *, unsigned __int8 *, uint64_t))(*(void *)(v6 - 8) + 32))(a1, a2, v6);
    char v12 = 1;
  }
  else
  {
LABEL_19:
    char v12 = 0;
    *a1 = *(void *)a2;
  }
  *((unsigned char *)a1 + v7) = v12;
  uint64_t v13 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v14 = v13 + 32;
  uint64_t v15 = *(unsigned __int8 *)(v13 + 80);
  uint64_t v16 = v7 + v15 + 1;
  unint64_t v17 = ((unint64_t)a1 + v16) & ~v15;
  unint64_t v18 = (unint64_t)&a2[v16] & ~v15;
  (*(void (**)(unint64_t, unint64_t))(v13 + 32))(v17, v18);
  uint64_t v19 = *(void *)(v14 + 32);
  uint64_t v20 = v19 + v17;
  uint64_t v21 = v19 + v18;
  unint64_t v22 = (v20 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v23 = (v21 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v24 = *(void *)v23;
  *(unsigned char *)(v22 + 8) = *(unsigned char *)(v23 + 8);
  *(void *)unint64_t v22 = v24;
  unint64_t v25 = (v20 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v26 = (v21 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v27 = *(void *)v26;
  *(unsigned char *)(v25 + 8) = *(unsigned char *)(v26 + 8);
  *(void *)unint64_t v25 = v27;
  unint64_t v28 = (v20 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v21 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v27) = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = v27;
  unint64_t v30 = (v20 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v31 = (v21 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v27) = *(unsigned char *)(v31 + 8);
  *(void *)unint64_t v30 = *(void *)v31;
  *(unsigned char *)(v30 + 8) = v27;
  unint64_t v32 = (v20 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v33 = (v21 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v27) = *(unsigned char *)(v33 + 8);
  *(void *)unint64_t v32 = *(void *)v33;
  *(unsigned char *)(v32 + 8) = v27;
  unint64_t v34 = (v20 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v21 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v32) = *(unsigned char *)(v35 + 8);
  *(void *)unint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = v32;
  return a1;
}

unsigned __int8 *sub_10021BBD8(unsigned __int8 *a1, unsigned __int8 *a2, uint64_t a3)
{
  if (a1 != a2)
  {
    uint64_t v6 = sub_1007F7EF0();
    uint64_t v7 = *(void *)(v6 - 8);
    if (*(void *)(v7 + 64) <= 8uLL) {
      uint64_t v8 = 8;
    }
    else {
      uint64_t v8 = *(void *)(*(void *)(v6 - 8) + 64);
    }
    unsigned int v9 = a1[v8];
    unsigned int v10 = v9 - 2;
    if (v9 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v11 = v8;
      }
      else {
        uint64_t v11 = 4;
      }
      switch(v11)
      {
        case 1:
          int v12 = *a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 2:
          int v12 = *(unsigned __int16 *)a1;
          if (v8 >= 4) {
            goto LABEL_19;
          }
          goto LABEL_15;
        case 3:
          int v12 = *(unsigned __int16 *)a1 | (a1[2] << 16);
          if (v8 < 4) {
            goto LABEL_15;
          }
          goto LABEL_19;
        case 4:
          int v12 = *(_DWORD *)a1;
          if (v8 < 4)
          {
LABEL_15:
            unsigned int v9 = (v12 | (v10 << (8 * v8))) + 2;
            break;
          }
LABEL_19:
          if (v12 != -1) {
            goto LABEL_20;
          }
          goto LABEL_17;
        default:
          break;
      }
    }
    if (v9 == 1) {
LABEL_17:
    }
      (*(void (**)(unsigned __int8 *, uint64_t))(v7 + 8))(a1, v6);
    else {
LABEL_20:
    }
      swift_release();
    unsigned int v13 = a2[v8];
    unsigned int v14 = v13 - 2;
    if (v13 >= 2)
    {
      if (v8 <= 3) {
        uint64_t v15 = v8;
      }
      else {
        uint64_t v15 = 4;
      }
      switch(v15)
      {
        case 1:
          int v16 = *a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 2:
          int v16 = *(unsigned __int16 *)a2;
          if (v8 >= 4) {
            goto LABEL_35;
          }
          goto LABEL_31;
        case 3:
          int v16 = *(unsigned __int16 *)a2 | (a2[2] << 16);
          if (v8 < 4) {
            goto LABEL_31;
          }
          goto LABEL_35;
        case 4:
          int v16 = *(_DWORD *)a2;
          if (v8 < 4)
          {
LABEL_31:
            unsigned int v13 = (v16 | (v14 << (8 * v8))) + 2;
            break;
          }
LABEL_35:
          if (v16 != -1) {
            goto LABEL_36;
          }
          goto LABEL_33;
        default:
          break;
      }
    }
    if (v13 == 1)
    {
LABEL_33:
      (*(void (**)(unsigned __int8 *, unsigned __int8 *, uint64_t))(v7 + 32))(a1, a2, v6);
      char v17 = 1;
    }
    else
    {
LABEL_36:
      char v17 = 0;
      *(void *)a1 = *(void *)a2;
    }
    a1[v8] = v17;
  }
  unint64_t v18 = *(void *)(*(void *)(sub_1007F7EF0() - 8) + 64);
  if (v18 <= 8) {
    unint64_t v18 = 8;
  }
  uint64_t v19 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v20 = v19 + 40;
  uint64_t v21 = *(unsigned __int8 *)(v19 + 80);
  uint64_t v22 = v18 + v21 + 1;
  unint64_t v23 = (unint64_t)&a1[v22] & ~v21;
  unint64_t v24 = (unint64_t)&a2[v22] & ~v21;
  (*(void (**)(unint64_t, unint64_t))(v19 + 40))(v23, v24);
  uint64_t v25 = *(void *)(v20 + 24);
  uint64_t v26 = v25 + v23;
  uint64_t v27 = v25 + v24;
  unint64_t v28 = (v26 + 7) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v29 = (v27 + 7) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v30 = *(void *)v29;
  *(unsigned char *)(v28 + 8) = *(unsigned char *)(v29 + 8);
  *(void *)unint64_t v28 = v30;
  unint64_t v31 = (v26 + 23) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v32 = (v27 + 23) & 0xFFFFFFFFFFFFFFF8;
  uint64_t v33 = *(void *)v32;
  *(unsigned char *)(v31 + 8) = *(unsigned char *)(v32 + 8);
  *(void *)unint64_t v31 = v33;
  unint64_t v34 = (v26 + 39) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v35 = (v27 + 39) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v33) = *(unsigned char *)(v35 + 8);
  *(void *)unint64_t v34 = *(void *)v35;
  *(unsigned char *)(v34 + 8) = v33;
  unint64_t v36 = (v26 + 55) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v37 = (v27 + 55) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v33) = *(unsigned char *)(v37 + 8);
  *(void *)unint64_t v36 = *(void *)v37;
  *(unsigned char *)(v36 + 8) = v33;
  unint64_t v38 = (v26 + 71) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v39 = (v27 + 71) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v33) = *(unsigned char *)(v39 + 8);
  *(void *)unint64_t v38 = *(void *)v39;
  *(unsigned char *)(v38 + 8) = v33;
  unint64_t v40 = (v26 + 87) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v41 = (v27 + 87) & 0xFFFFFFFFFFFFFFF8;
  LOBYTE(v38) = *(unsigned char *)(v41 + 8);
  *(void *)unint64_t v40 = *(void *)v41;
  *(unsigned char *)(v40 + 8) = v38;
  return a1;
}

uint64_t sub_10021BF78(unsigned __int8 *a1, unsigned int a2, uint64_t a3)
{
  unint64_t v6 = *(void *)(*(void *)(sub_1007F7EF0() - 8) + 64);
  uint64_t v7 = 8;
  if (v6 > 8) {
    uint64_t v7 = v6;
  }
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v9 = *(_DWORD *)(v8 + 84);
  uint64_t v10 = *(unsigned __int8 *)(v8 + 80);
  if (v9 <= 0xFE) {
    unsigned int v11 = 254;
  }
  else {
    unsigned int v11 = *(_DWORD *)(v8 + 84);
  }
  if (!a2) {
    return 0;
  }
  uint64_t v12 = v7 + v10 + 1;
  if (v11 < a2)
  {
    unint64_t v13 = ((*(void *)(v8 + 64) + (v12 & ~v10) + 87) & 0xFFFFFFFFFFFFFFF8) + 9;
    if (v13 < 4) {
      unsigned int v14 = ((a2 - v11 + 255) >> (8 * v13)) + 1;
    }
    else {
      unsigned int v14 = 2;
    }
    if (v14 >= 0x10000) {
      unsigned int v15 = 4;
    }
    else {
      unsigned int v15 = 2;
    }
    if (v14 < 0x100) {
      unsigned int v15 = 1;
    }
    if (v14 >= 2) {
      uint64_t v16 = v15;
    }
    else {
      uint64_t v16 = 0;
    }
    switch(v16)
    {
      case 1:
        int v17 = a1[v13];
        if (!a1[v13]) {
          break;
        }
        goto LABEL_24;
      case 2:
        int v17 = *(unsigned __int16 *)&a1[v13];
        if (*(_WORD *)&a1[v13]) {
          goto LABEL_24;
        }
        break;
      case 3:
        __break(1u);
        JUMPOUT(0x10021C158);
      case 4:
        int v17 = *(_DWORD *)&a1[v13];
        if (!v17) {
          break;
        }
LABEL_24:
        int v19 = (v17 - 1) << (8 * v13);
        if (v13 >= 4) {
          int v19 = 0;
        }
        if (((*(_DWORD *)(v8 + 64) + (v12 & ~v10) + 87) & 0xFFFFFFF8) == 0xFFFFFFF8) {
          int v20 = *a1;
        }
        else {
          int v20 = *(_DWORD *)a1;
        }
        return v11 + (v20 | v19) + 1;
      default:
        break;
    }
  }
  if (v9 > 0xFE)
  {
    uint64_t v22 = *(uint64_t (**)(unint64_t))(v8 + 48);
    return v22((unint64_t)&a1[v12] & ~v10);
  }
  else
  {
    unsigned int v21 = a1[v7];
    if (v21 >= 2) {
      return (v21 ^ 0xFF) + 1;
    }
    else {
      return 0;
    }
  }
}

void sub_10021C16C(unsigned char *a1, uint64_t a2, unsigned int a3, uint64_t a4)
{
  unint64_t v8 = *(void *)(*(void *)(sub_1007F7EF0() - 8) + 64);
  uint64_t v9 = 8;
  if (v8 > 8) {
    uint64_t v9 = v8;
  }
  uint64_t v10 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v11 = *(_DWORD *)(v10 + 84);
  uint64_t v12 = *(unsigned __int8 *)(v10 + 80);
  if (v11 <= 0xFE) {
    unsigned int v13 = 254;
  }
  else {
    unsigned int v13 = *(_DWORD *)(v10 + 84);
  }
  size_t v14 = v9 + 1;
  uint64_t v15 = v9 + 1 + v12;
  size_t v16 = ((*(void *)(v10 + 64) + (v15 & ~v12) + 87) & 0xFFFFFFFFFFFFFFF8) + 9;
  char v17 = 8 * v16;
  if (v13 >= a3)
  {
    int v20 = 0;
    if (v13 >= a2)
    {
LABEL_19:
      uint64_t v21 = ~v12;
      switch(v20)
      {
        case 1:
          a1[v16] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_36;
        case 2:
          *(_WORD *)&a1[v16] = 0;
          if (!a2) {
            return;
          }
          goto LABEL_36;
        case 3:
          goto LABEL_59;
        case 4:
          *(_DWORD *)&a1[v16] = 0;
          goto LABEL_35;
        default:
LABEL_35:
          if (a2)
          {
LABEL_36:
            if (v11 > 0xFE)
            {
              uint64_t v26 = *(void (**)(unint64_t, uint64_t))(v10 + 56);
              v26((unint64_t)&a1[v15] & v21, a2);
            }
            else if (a2 > 0xFE)
            {
              if (v14 <= 3) {
                int v27 = ~(-1 << (8 * v14));
              }
              else {
                int v27 = -1;
              }
              if (v9 != -1)
              {
                int v28 = v27 & (a2 - 255);
                if (v14 <= 3) {
                  int v29 = v9 + 1;
                }
                else {
                  int v29 = 4;
                }
                bzero(a1, v14);
                switch(v29)
                {
                  case 2:
                    *(_WORD *)a1 = v28;
                    break;
                  case 3:
                    *(_WORD *)a1 = v28;
                    a1[2] = BYTE2(v28);
                    break;
                  case 4:
                    *(_DWORD *)a1 = v28;
                    break;
                  default:
                    *a1 = v28;
                    break;
                }
              }
            }
            else
            {
              a1[v9] = -(char)a2;
            }
          }
          break;
      }
      return;
    }
  }
  else
  {
    if (v16 <= 3) {
      unsigned int v18 = ((a3 - v13 + 255) >> v17) + 1;
    }
    else {
      unsigned int v18 = 2;
    }
    if (v18 >= 0x10000) {
      int v19 = 4;
    }
    else {
      int v19 = 2;
    }
    if (v18 < 0x100) {
      int v19 = 1;
    }
    if (v18 >= 2) {
      int v20 = v19;
    }
    else {
      int v20 = 0;
    }
    if (v13 >= a2) {
      goto LABEL_19;
    }
  }
  unsigned int v22 = ~v13 + a2;
  unsigned int v23 = (~(_BYTE)v13 + a2);
  if (v16 < 4) {
    int v24 = (v22 >> v17) + 1;
  }
  else {
    int v24 = 1;
  }
  if (v16 >= 4) {
    unsigned int v25 = v22;
  }
  else {
    unsigned int v25 = v23;
  }
  bzero(a1, v16);
  if (v16 == 1) {
    *a1 = v25;
  }
  else {
    *(_DWORD *)a1 = v25;
  }
  switch(v20)
  {
    case 1:
      a1[v16] = v24;
      break;
    case 2:
      *(_WORD *)&a1[v16] = v24;
      break;
    case 3:
LABEL_59:
      __break(1u);
      JUMPOUT(0x10021C438);
    case 4:
      *(_DWORD *)&a1[v16] = v24;
      break;
    default:
      return;
  }
}

uint64_t type metadata accessor for EdgeHuggingView()
{
  return sub_100018A04();
}

void sub_10021C488()
{
  if (!qword_100B2CE60[0])
  {
    sub_1007F7EF0();
    unint64_t v0 = sub_1007F7B50();
    if (!v1) {
      atomic_store(v0, qword_100B2CE60);
    }
  }
}

uint64_t sub_10021C4E0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10021C524@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v20 = a1;
  uint64_t v22 = a2;
  sub_100043378(&qword_100B40980);
  uint64_t v23 = *(void *)(a1 + 16);
  sub_100043378(&qword_100B257B0);
  sub_1007F8070();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  sub_1007F8A60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = swift_getWitnessTable();
  uint64_t v3 = swift_getWitnessTable();
  uint64_t v47 = swift_getWitnessTable();
  uint64_t v48 = swift_getWitnessTable();
  uint64_t v45 = v3;
  uint64_t v46 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1007F9BD0();
  sub_1007F8070();
  sub_1007F8A60();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getWitnessTable();
  sub_1007F9BD0();
  sub_1007F8A60();
  uint64_t v43 = swift_getWitnessTable();
  unint64_t v44 = sub_100221424();
  uint64_t v41 = swift_getWitnessTable();
  uint64_t v42 = v41;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v4 = sub_1007F9CB0();
  void v17[2] = sub_1007F8070();
  v17[3] = sub_1007F8070();
  v17[1] = sub_1007F8070();
  sub_1007F8070();
  swift_getTupleTypeMetadata2();
  sub_1007FA060();
  sub_1007F8A60();
  swift_getTupleTypeMetadata2();
  sub_1007FA060();
  uint64_t v19 = v4;
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  sub_1007F8A60();
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v37 = v18;
  unint64_t v38 = &protocol witness table for _FlexFrameLayout;
  uint64_t v35 = swift_getWitnessTable();
  unint64_t v36 = &protocol witness table for _PaddingLayout;
  uint64_t v33 = swift_getWitnessTable();
  unint64_t v34 = &protocol witness table for _PaddingLayout;
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v5 = swift_getWitnessTable();
  uint64_t v29 = swift_getWitnessTable();
  uint64_t v30 = swift_getWitnessTable();
  uint64_t v27 = v5;
  uint64_t v28 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v6 = sub_1007F9C90();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)v17 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v17 - v11;
  uint64_t v13 = *(void *)(v20 + 24);
  uint64_t v24 = v23;
  uint64_t v25 = v13;
  uint64_t v26 = v21;
  sub_10021D54C();
  uint64_t v14 = swift_getWitnessTable();
  sub_1003D2398(v10, v6, v14);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v7 + 8);
  v15(v10, v6);
  sub_1003D2398(v12, v6, v14);
  return ((uint64_t (*)(char *, uint64_t))v15)(v12, v6);
}

uint64_t sub_10021CC44@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  uint64_t v17 = a1;
  uint64_t v18 = a3;
  uint64_t v19 = a4;
  sub_100043378(&qword_100B40980);
  uint64_t v16 = sub_100043378(&qword_100B257B0);
  sub_1007F8070();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  sub_1007F8A60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v34 = swift_getWitnessTable();
  uint64_t v5 = swift_getWitnessTable();
  uint64_t v31 = swift_getWitnessTable();
  uint64_t v32 = swift_getWitnessTable();
  uint64_t v29 = v5;
  uint64_t v30 = swift_getWitnessTable();
  swift_getWitnessTable();
  sub_1007F9BD0();
  sub_1007F8070();
  sub_1007F8A60();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getWitnessTable();
  sub_1007F9BD0();
  sub_1007F8A60();
  uint64_t v27 = swift_getWitnessTable();
  unint64_t v28 = sub_100221424();
  uint64_t v25 = swift_getWitnessTable();
  uint64_t v26 = v25;
  uint64_t v23 = swift_getWitnessTable();
  uint64_t v24 = swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v6 = sub_1007F9CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v16 - v11;
  uint64_t v20 = a2;
  uint64_t v21 = v18;
  uint64_t v22 = v17;
  type metadata accessor for EdgeHuggingView();
  sub_10021D1D0();
  uint64_t v13 = swift_getWitnessTable();
  sub_1003D2398(v10, v6, v13);
  uint64_t v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  sub_1003D2398(v12, v6, v13);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_10021D0D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v6 = *(void *)(a2 - 8);
  __chkstk_darwin(a1);
  uint64_t v8 = (char *)&v11 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = type metadata accessor for EdgeHuggingView();
  sub_1003D2398(a1 + *(int *)(v9 + 36), a2, a3);
  sub_1003D2398(v8, a2, a3);
  return (*(uint64_t (**)(char *, uint64_t))(v6 + 8))(v8, a2);
}

uint64_t sub_10021D1D0()
{
  return sub_1007F9CA0();
}

uint64_t sub_10021D54C()
{
  return sub_1007F9C80();
}

uint64_t sub_10021D7F8@<X0>(uint64_t a1@<X0>, void (*a2)(void)@<X1>, void (*a3)(char *, uint64_t)@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, void *a7@<X6>, uint64_t a8@<X8>)
{
  v173 = a7;
  uint64_t v154 = a4;
  uint64_t v155 = a6;
  v157 = a2;
  v158 = a3;
  uint64_t v156 = a1;
  uint64_t v168 = a8;
  swift_getTupleTypeMetadata3();
  uint64_t v9 = sub_1007FA060();
  uint64_t v146 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  v145 = (char *)&v136 - v10;
  uint64_t v11 = sub_1007F8070();
  swift_getTupleTypeMetadata2();
  uint64_t v12 = sub_1007FA060();
  uint64_t v144 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v143 = (char *)&v136 - v13;
  uint64_t v169 = v14;
  uint64_t v170 = v9;
  uint64_t v15 = sub_1007F8A60();
  uint64_t v150 = *(void *)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v152 = (uint64_t)&v136 - v16;
  swift_getTupleTypeMetadata2();
  uint64_t v17 = sub_1007FA060();
  uint64_t v142 = *(void *)(v17 - 8);
  uint64_t v18 = __chkstk_darwin(v17);
  uint64_t v141 = (char *)&v136 - v19;
  uint64_t v153 = v11;
  uint64_t v148 = *(void *)(v11 - 8);
  uint64_t v20 = __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v136 - ((v21 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  v160 = (void (*)(char *, uint64_t))((char *)&v136 - v23);
  uint64_t v24 = sub_1007F8070();
  uint64_t v25 = sub_1007F8070();
  uint64_t v26 = sub_1007F8070();
  uint64_t v166 = v17;
  uint64_t v27 = sub_1007F8A60();
  uint64_t v149 = *(void *)(v27 - 8);
  uint64_t v28 = __chkstk_darwin(v27);
  uint64_t v151 = (uint64_t)&v136 - v29;
  uint64_t v159 = a5;
  uint64_t v30 = *(void *)(a5 - 8);
  uint64_t v31 = __chkstk_darwin(v28);
  uint64_t v33 = (char *)&v136 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v34 = __chkstk_darwin(v31);
  unint64_t v36 = (char *)&v136 - v35;
  uint64_t v171 = v24;
  uint64_t v138 = *(void *)(v24 - 8);
  uint64_t v37 = __chkstk_darwin(v34);
  uint64_t v39 = (char *)&v136 - v38;
  uint64_t v172 = v25;
  uint64_t v139 = *(void *)(v25 - 8);
  uint64_t v40 = __chkstk_darwin(v37);
  uint64_t v42 = (char *)&v136 - v41;
  uint64_t v164 = v26;
  uint64_t v140 = *(void *)(v26 - 8);
  uint64_t v43 = __chkstk_darwin(v40);
  uint64_t v45 = (char *)&v136 - ((v44 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v43);
  v147 = (char *)&v136 - v46;
  uint64_t v165 = v47;
  uint64_t v167 = v15;
  uint64_t v48 = sub_1007F8A60();
  uint64_t v162 = *(void *)(v48 - 8);
  uint64_t v163 = v48;
  __chkstk_darwin(v48);
  v161 = (char *)&v136 - v49;
  uint64_t v50 = type metadata accessor for EdgeHuggingView();
  char v51 = *(unsigned char *)(v156 + *(int *)(v50 + 40) + 8);
  __int16 v52 = (uint64_t *)(v156 + *(int *)(v50 + 44));
  uint64_t v156 = *v52;
  char v53 = *((unsigned char *)v52 + 8);
  if ((v51 & 1) == 0)
  {
    v157();
    if ((v53 & 1) == 0)
    {
      sub_1007F9F10();
      uint64_t v110 = (uint64_t)v173;
      uint64_t v111 = v159;
      sub_1007F96D0();
      (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v111);
      sub_1007F8F00();
      uint64_t v182 = v110;
      v183 = &protocol witness table for _FlexFrameLayout;
      uint64_t v112 = v171;
      uint64_t WitnessTable = swift_getWitnessTable();
      sub_1007F9790();
      (*(void (**)(char *, uint64_t))(v138 + 8))(v39, v112);
      sub_1007F8F10();
      uint64_t v180 = WitnessTable;
      v181 = &protocol witness table for _PaddingLayout;
      uint64_t v114 = v172;
      uint64_t v115 = swift_getWitnessTable();
      sub_1007F9790();
      (*(void (**)(char *, uint64_t))(v139 + 8))(v42, v114);
      uint64_t v178 = v115;
      v179 = &protocol witness table for _PaddingLayout;
      uint64_t v116 = v164;
      uint64_t v117 = swift_getWitnessTable();
      v118 = v147;
      sub_1003D2398(v45, v116, v117);
      id v119 = *(void (**)(char *, uint64_t))(v140 + 8);
      v119(v45, v116);
      id v120 = v119;
      v160 = v119;
      sub_1003D2398(v118, v116, v117);
      uint64_t v121 = swift_getWitnessTable();
      sub_1002BF70C((uint64_t)v45, v116);
      v120(v45, v116);
      uint64_t v176 = v117;
      uint64_t v177 = v121;
      uint64_t v122 = v165;
      uint64_t v159 = swift_getWitnessTable();
      uint64_t v123 = swift_getWitnessTable();
      uint64_t v124 = swift_getWitnessTable();
      uint64_t v174 = v123;
      uint64_t v175 = v124;
      uint64_t v125 = v122;
      swift_getWitnessTable();
      uint64_t v69 = v161;
      uint64_t v126 = v151;
      sub_1002BF70C(v151, v125);
      (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v126, v125);
      v160(v147, v116);
      uint64_t v109 = (uint64_t)v173;
      goto LABEL_10;
    }
    sub_1007F8F00();
    uint64_t v70 = v159;
    uint64_t v71 = (uint64_t)v173;
    sub_1007F9790();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v36, v70);
    uint64_t v194 = v71;
    uint64_t v72 = v71;
    v195 = &protocol witness table for _PaddingLayout;
    __int16 v73 = (void *)v153;
    uint64_t v74 = swift_getWitnessTable();
    __int16 v75 = (char *)v160;
    sub_1003D2398(v22, v73, v74);
    uint64_t v76 = v148;
    uint64_t v78 = v148 + 8;
    __int16 v77 = *(void (**)(char *, void *))(v148 + 8);
    v77(v22, v73);
    v158 = (void (*)(char *, uint64_t))v77;
    uint64_t v159 = v78;
    (*(void (**)(char *, char *, void *))(v76 + 16))(v22, v75, v73);
    uint64_t v238 = v156;
    char v239 = 1;
    v240 = v22;
    v241 = (char *)&v238;
    v233 = v73;
    long long v79 = v73;
    v234 = &type metadata for Spacer;
    v230 = (void *)v74;
    v231 = &protocol witness table for Spacer;
    uint64_t v80 = (uint64_t)v141;
    sub_1003D23D4((uint64_t)&v240, 2uLL, (uint64_t)&v233);
    v77(v22, v79);
    uint64_t v192 = v72;
    v193 = &protocol witness table for _FlexFrameLayout;
    uint64_t v190 = swift_getWitnessTable();
    v191 = &protocol witness table for _PaddingLayout;
    uint64_t v188 = swift_getWitnessTable();
    v189 = &protocol witness table for _PaddingLayout;
    uint64_t v81 = v164;
    uint64_t v82 = swift_getWitnessTable();
    uint64_t v83 = v166;
    uint64_t v84 = swift_getWitnessTable();
    uint64_t v85 = v151;
    sub_1002BF804(v80, v81, v83);
    (*(void (**)(uint64_t, uint64_t))(v142 + 8))(v80, v83);
    uint64_t v186 = v82;
    uint64_t v187 = v84;
    uint64_t v86 = v165;
    swift_getWitnessTable();
    uint64_t v87 = swift_getWitnessTable();
    uint64_t v88 = swift_getWitnessTable();
    uint64_t v184 = v87;
    uint64_t v185 = v88;
    swift_getWitnessTable();
    uint64_t v69 = v161;
    sub_1002BF70C(v85, v86);
    (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v85, v86);
    long long v89 = (char *)v160;
    uint64_t v90 = v153;
    goto LABEL_7;
  }
  if ((v52[1] & 1) == 0)
  {
    long long v91 = v36;
    v157();
    sub_1007F8F10();
    uint64_t v92 = v159;
    uint64_t v93 = (uint64_t)v173;
    sub_1007F9790();
    (*(void (**)(char *, uint64_t))(v30 + 8))(v91, v92);
    uint64_t v206 = v93;
    v207 = &protocol witness table for _PaddingLayout;
    long long v94 = (void *)v153;
    uint64_t v95 = swift_getWitnessTable();
    long long v96 = (char *)v160;
    sub_1003D2398(v22, v94, v95);
    uint64_t v97 = v148;
    uint64_t v98 = v148 + 8;
    long long v99 = *(void (**)(char *, void *))(v148 + 8);
    v99(v22, v94);
    v158 = (void (*)(char *, uint64_t))v99;
    uint64_t v159 = v98;
    uint64_t v238 = 0;
    char v239 = 1;
    v240 = (char *)&v238;
    (*(void (**)(char *, char *, void *))(v97 + 16))(v22, v96, v94);
    v241 = v22;
    v233 = &type metadata for Spacer;
    v234 = v94;
    v230 = &protocol witness table for Spacer;
    v231 = (void *)v95;
    uint64_t v100 = (uint64_t)v143;
    sub_1003D23D4((uint64_t)&v240, 2uLL, (uint64_t)&v233);
    v99(v22, v94);
    uint64_t v101 = v169;
    uint64_t v102 = swift_getWitnessTable();
    uint64_t v103 = swift_getWitnessTable();
    sub_1002BF70C(v100, v101);
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v100, v101);
    uint64_t v204 = v93;
    v205 = &protocol witness table for _FlexFrameLayout;
    uint64_t v202 = swift_getWitnessTable();
    v203 = &protocol witness table for _PaddingLayout;
    uint64_t v200 = swift_getWitnessTable();
    v201 = &protocol witness table for _PaddingLayout;
    uint64_t v104 = swift_getWitnessTable();
    uint64_t v105 = swift_getWitnessTable();
    uint64_t v198 = v104;
    uint64_t v199 = v105;
    uint64_t v106 = v165;
    swift_getWitnessTable();
    uint64_t v196 = v102;
    uint64_t v197 = v103;
    uint64_t v107 = v167;
    swift_getWitnessTable();
    uint64_t v69 = v161;
    uint64_t v108 = v152;
    sub_1002BF804(v152, v106, v107);
    (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v108, v107);
    long long v89 = (char *)v160;
    uint64_t v90 = (uint64_t)v94;
LABEL_7:
    v158(v89, v90);
    goto LABEL_8;
  }
  v157();
  __int16 v54 = v36;
  long long v137 = v36;
  id v55 = (void *)v159;
  __int16 v56 = v173;
  sub_1003D2398(v33, v159, v173);
  id v57 = *(void (**)(char *, void *))(v30 + 8);
  v57(v33, v55);
  __int16 v58 = v57;
  v158 = (void (*)(char *, uint64_t))v57;
  v160 = (void (*)(char *, uint64_t))(v30 + 8);
  uint64_t v59 = v156;
  uint64_t v238 = v156;
  char v239 = 1;
  v240 = (char *)&v238;
  (*(void (**)(char *, char *, void *))(v30 + 16))(v33, v54, v55);
  uint64_t v236 = v59;
  char v237 = 1;
  v241 = v33;
  v242 = &v236;
  v233 = &type metadata for Spacer;
  v234 = v55;
  v235 = &type metadata for Spacer;
  v230 = &protocol witness table for Spacer;
  v231 = v56;
  v232 = &protocol witness table for Spacer;
  uint64_t v60 = (uint64_t)v145;
  sub_1003D23D4((uint64_t)&v240, 3uLL, (uint64_t)&v233);
  v58(v33, v55);
  uint64_t v61 = v169;
  v157 = (void (*)(void))swift_getWitnessTable();
  uint64_t v62 = v170;
  uint64_t v63 = swift_getWitnessTable();
  uint64_t v64 = v152;
  sub_1002BF804(v60, v61, v62);
  (*(void (**)(uint64_t, uint64_t))(v146 + 8))(v60, v62);
  v228 = v56;
  v229 = &protocol witness table for _FlexFrameLayout;
  uint64_t v226 = swift_getWitnessTable();
  v227 = &protocol witness table for _PaddingLayout;
  uint64_t v224 = swift_getWitnessTable();
  v225 = &protocol witness table for _PaddingLayout;
  uint64_t v65 = swift_getWitnessTable();
  uint64_t v66 = swift_getWitnessTable();
  uint64_t v222 = v65;
  uint64_t v223 = v66;
  uint64_t v67 = v165;
  swift_getWitnessTable();
  v220 = v157;
  uint64_t v221 = v63;
  uint64_t v68 = v167;
  swift_getWitnessTable();
  uint64_t v69 = v161;
  sub_1002BF804(v64, v67, v68);
  (*(void (**)(uint64_t, uint64_t))(v150 + 8))(v64, v68);
  v158(v137, (uint64_t)v55);
LABEL_8:
  uint64_t v109 = (uint64_t)v173;
LABEL_10:
  uint64_t v218 = v109;
  v219 = &protocol witness table for _FlexFrameLayout;
  uint64_t v216 = swift_getWitnessTable();
  v217 = &protocol witness table for _PaddingLayout;
  uint64_t v214 = swift_getWitnessTable();
  v215 = &protocol witness table for _PaddingLayout;
  uint64_t v127 = swift_getWitnessTable();
  uint64_t v128 = swift_getWitnessTable();
  uint64_t v212 = v127;
  uint64_t v213 = v128;
  uint64_t v129 = swift_getWitnessTable();
  uint64_t v130 = swift_getWitnessTable();
  uint64_t v131 = swift_getWitnessTable();
  uint64_t v210 = v130;
  uint64_t v211 = v131;
  uint64_t v132 = swift_getWitnessTable();
  uint64_t v208 = v129;
  uint64_t v209 = v132;
  uint64_t v133 = v163;
  uint64_t v134 = swift_getWitnessTable();
  sub_1003D2398(v69, v133, v134);
  return (*(uint64_t (**)(char *, uint64_t))(v162 + 8))(v69, v133);
}

uint64_t sub_10021EB3C@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X8>)
{
  uint64_t v96 = a7;
  uint64_t v107 = a6;
  uint64_t v106 = a4;
  uint64_t v97 = a3;
  uint64_t v95 = a2;
  uint64_t v105 = a1;
  uint64_t v104 = a8;
  swift_getTupleTypeMetadata3();
  v87[2] = sub_1007FA060();
  v87[1] = swift_getWitnessTable();
  uint64_t v9 = sub_1007F9BD0();
  uint64_t v89 = *(void *)(v9 - 8);
  uint64_t v10 = __chkstk_darwin(v9);
  uint64_t v88 = (char *)v87 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v90 = (char *)v87 - v12;
  sub_100043378(&qword_100B40980);
  sub_100043378(&qword_100B257B0);
  uint64_t v98 = a5;
  sub_1007F8070();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  sub_1007F8A60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v132 = WitnessTable;
  uint64_t v133 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v130 = v16;
  uint64_t v131 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v128 = v15;
  uint64_t v129 = v18;
  swift_getWitnessTable();
  uint64_t v108 = sub_1007F9BD0();
  uint64_t v19 = sub_1007F8070();
  uint64_t v20 = sub_1007F8A60();
  uint64_t v94 = *(void *)(v20 - 8);
  uint64_t v21 = __chkstk_darwin(v20);
  uint64_t v92 = (char *)v87 - v22;
  uint64_t v100 = v19;
  uint64_t v93 = *(void *)(v19 - 8);
  uint64_t v23 = __chkstk_darwin(v21);
  uint64_t v25 = (char *)v87 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v23);
  long long v91 = (char *)v87 - v26;
  uint64_t v27 = (int *)type metadata accessor for EdgeHuggingView();
  uint64_t v28 = *((void *)v27 - 1);
  uint64_t v29 = __chkstk_darwin(v27);
  uint64_t v31 = (char *)v87 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v29);
  uint64_t v33 = (char *)v87 - v32;
  uint64_t v99 = v20;
  uint64_t v109 = v9;
  uint64_t v103 = sub_1007F8A60();
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v35 = (char *)v87 - v34;
  LOBYTE(v2sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(v105 + v27[12] + 8);
  unint64_t v36 = *(void (**)(char *))(v28 + 16);
  uint64_t v37 = v105;
  v36(v33);
  uint64_t v101 = v35;
  if (v20)
  {
    char v38 = v33[v27[13] + 8];
    uint64_t v39 = *(void (**)(char *, int *))(v28 + 8);
    v39(v33, v27);
    if (v38)
    {
      uint64_t v40 = v37 + v27[15];
      char v41 = *(unsigned char *)(v40 + 8);
      ((void (*)(char *, uint64_t, int *))v36)(v31, v37, v27);
      if (v41)
      {
        char v42 = v31[v27[14] + 8];
        uint64_t v43 = ((uint64_t (*)(char *, int *))v39)(v31, v27);
        uint64_t v44 = v99;
        uint64_t v45 = v98;
        uint64_t v46 = v97;
        uint64_t v47 = v96;
        uint64_t v48 = v95;
        if (v42)
        {
          __chkstk_darwin(v43);
          v87[-6] = v106;
          v87[-5] = v49;
          v87[-4] = v107;
          v87[-3] = v50;
          uint64_t v85 = v51;
          uint64_t v86 = v52;
          sub_1007F86A0();
          uint64_t v53 = (uint64_t)v88;
          sub_1007F9BC0();
          uint64_t v54 = v109;
          uint64_t v55 = swift_getWitnessTable();
          __int16 v56 = v90;
          sub_1003D2398(v53, v54, v55);
          id v57 = *(void (**)(uint64_t, uint64_t))(v89 + 8);
          v57(v53, v54);
          sub_1003D2398(v56, v54, v55);
          uint64_t v58 = swift_getWitnessTable();
          unint64_t v59 = sub_100221424();
          uint64_t v126 = v58;
          unint64_t v127 = v59;
          uint64_t v124 = swift_getWitnessTable();
          uint64_t v125 = v124;
          swift_getWitnessTable();
          uint64_t v60 = v101;
          sub_1002BF804(v53, v44, v54);
          v57(v53, v54);
          v57((uint64_t)v90, v54);
LABEL_10:
          uint64_t v69 = v103;
          uint64_t v70 = v102;
          goto LABEL_11;
        }
      }
      else
      {
        v39(v31, v27);
        uint64_t v44 = v99;
        uint64_t v45 = v98;
        uint64_t v46 = v97;
        uint64_t v47 = v96;
        uint64_t v48 = v95;
      }
      sub_10021FA3C(*(void *)(v37 + v27[14]), *(unsigned __int8 *)(v37 + v27[14] + 8), *(void *)v40, *(unsigned __int8 *)(v40 + 8), v48, v46, (uint64_t)v27, v45, (uint64_t)v25, v47);
      uint64_t v71 = swift_getWitnessTable();
      unint64_t v72 = sub_100221424();
      uint64_t v116 = v71;
      unint64_t v117 = v72;
      uint64_t v73 = v100;
      uint64_t v74 = swift_getWitnessTable();
      __int16 v75 = v91;
      sub_1003D2398(v25, v73, v74);
      uint64_t v76 = *(void (**)(char *, uint64_t))(v93 + 8);
      v76(v25, v73);
      sub_1003D2398(v75, v73, v74);
      uint64_t v77 = v44;
      uint64_t v78 = (uint64_t)v92;
      sub_1002BF804((uint64_t)v25, v73, v73);
      v76(v25, v73);
      uint64_t v114 = v74;
      uint64_t v115 = v74;
      swift_getWitnessTable();
      swift_getWitnessTable();
      uint64_t v60 = v101;
      sub_1002BF70C(v78, v77);
      (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v78, v77);
      v76(v75, v73);
      goto LABEL_10;
    }
  }
  else
  {
    (*(void (**)(char *, int *))(v28 + 8))(v33, v27);
  }
  sub_10021F890(v95, v97, (uint64_t)v27, v98, v96, (uint64_t)v25);
  uint64_t v61 = swift_getWitnessTable();
  unint64_t v62 = sub_100221424();
  uint64_t v112 = v61;
  unint64_t v113 = v62;
  uint64_t v63 = v100;
  uint64_t v64 = swift_getWitnessTable();
  uint64_t v65 = v91;
  sub_1003D2398(v25, v63, v64);
  uint64_t v66 = *(void (**)(char *, uint64_t))(v93 + 8);
  v66(v25, v63);
  sub_1003D2398(v65, v63, v64);
  uint64_t v67 = (uint64_t)v92;
  sub_1002BF70C((uint64_t)v25, v63);
  v66(v25, v63);
  uint64_t v110 = v64;
  uint64_t v111 = v64;
  uint64_t v68 = v99;
  swift_getWitnessTable();
  swift_getWitnessTable();
  uint64_t v60 = v101;
  sub_1002BF70C(v67, v68);
  (*(void (**)(uint64_t, uint64_t))(v94 + 8))(v67, v68);
  v66(v65, v63);
  uint64_t v69 = v103;
  uint64_t v70 = v102;
LABEL_11:
  uint64_t v79 = swift_getWitnessTable();
  unint64_t v80 = sub_100221424();
  uint64_t v122 = v79;
  unint64_t v123 = v80;
  uint64_t v120 = swift_getWitnessTable();
  uint64_t v121 = v120;
  uint64_t v81 = swift_getWitnessTable();
  uint64_t v82 = swift_getWitnessTable();
  uint64_t v118 = v81;
  uint64_t v119 = v82;
  uint64_t v83 = swift_getWitnessTable();
  sub_1003D2398(v60, v69, v83);
  return (*(uint64_t (**)(char *, uint64_t))(v70 + 8))(v60, v69);
}

uint64_t sub_10021F890@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v24 = a2;
  uint64_t v25 = a4;
  uint64_t v23 = a1;
  uint64_t v10 = sub_1007F7EF0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  uint64_t v14 = (char *)&v22 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)&v22 - v15;
  sub_1007A644C((uint64_t)&v22 - v15);
  (*(void (**)(char *, void, uint64_t))(v11 + 104))(v14, enum case for LayoutDirection.leftToRight(_:), v10);
  char v17 = sub_1007F7EE0();
  uint64_t v18 = *(void (**)(char *, uint64_t))(v11 + 8);
  v18(v14, v10);
  v18(v16, v10);
  uint64_t v19 = 48;
  if (v17) {
    uint64_t v20 = 52;
  }
  else {
    uint64_t v20 = 48;
  }
  if ((v17 & 1) == 0) {
    uint64_t v19 = 52;
  }
  return sub_10021FA3C(*(void *)(v6 + *(int *)(a3 + v19)), *(unsigned __int8 *)(v6 + *(int *)(a3 + v19) + 8), *(void *)(v6 + *(int *)(a3 + v20)), *(unsigned __int8 *)(v6 + *(int *)(a3 + v20) + 8), v23, v24, a3, v25, a6, a5);
}

uint64_t sub_10021FA3C@<X0>(uint64_t a1@<X0>, int a2@<W1>, uint64_t a3@<X2>, int a4@<W3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>, uint64_t a10)
{
  uint64_t v26 = a8;
  uint64_t v28 = a7;
  uint64_t v34 = a6;
  uint64_t v33 = a5;
  int v32 = a4;
  uint64_t v31 = a3;
  int v30 = a2;
  uint64_t v29 = a1;
  uint64_t v37 = a9;
  uint64_t v27 = a10;
  uint64_t v36 = sub_1007F7EF0();
  uint64_t v10 = *(void *)(v36 - 8);
  __chkstk_darwin(v36);
  uint64_t v12 = (char *)&v26 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100043378(&qword_100B40980);
  sub_100043378(&qword_100B257B0);
  sub_1007F8070();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  swift_getTupleTypeMetadata3();
  sub_1007FA060();
  sub_1007F8A60();
  sub_1007F8A60();
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v14 = swift_getWitnessTable();
  uint64_t v53 = WitnessTable;
  uint64_t v54 = v14;
  uint64_t v15 = swift_getWitnessTable();
  uint64_t v16 = swift_getWitnessTable();
  uint64_t v17 = swift_getWitnessTable();
  uint64_t v51 = v16;
  uint64_t v52 = v17;
  uint64_t v18 = swift_getWitnessTable();
  uint64_t v49 = v15;
  uint64_t v50 = v18;
  swift_getWitnessTable();
  uint64_t v19 = sub_1007F9BD0();
  uint64_t v20 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  uint64_t v22 = (char *)&v26 - v21;
  uint64_t v23 = *(void *)(v28 + 24);
  uint64_t v38 = *(void *)(v28 + 16);
  uint64_t v39 = v26;
  uint64_t v40 = v23;
  uint64_t v41 = v27;
  uint64_t v42 = v29;
  char v43 = v30 & 1;
  uint64_t v44 = v31;
  char v45 = v32 & 1;
  uint64_t v46 = v33;
  uint64_t v47 = v34;
  uint64_t v48 = v35;
  sub_1007F86A0();
  sub_1007F9BC0();
  swift_getKeyPath();
  uint64_t v24 = v36;
  (*(void (**)(char *, void, uint64_t))(v10 + 104))(v12, enum case for LayoutDirection.leftToRight(_:), v36);
  swift_getWitnessTable();
  sub_1007F92E0();
  swift_release();
  (*(void (**)(char *, uint64_t))(v10 + 8))(v12, v24);
  return (*(uint64_t (**)(char *, uint64_t))(v20 + 8))(v22, v19);
}

uint64_t sub_10021FEF0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v8 = *(void *)(a4 - 8);
  uint64_t v9 = __chkstk_darwin(a1);
  uint64_t v11 = (char *)v17 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = (void (*)(void))__chkstk_darwin(v9);
  uint64_t v14 = (char *)v17 - v13;
  v12();
  sub_1003D2398(v11, a4, a6);
  uint64_t v15 = *(void (**)(char *, uint64_t))(v8 + 8);
  v15(v11, a4);
  uint64_t v21 = 0;
  char v22 = 1;
  v23[0] = &v21;
  (*(void (**)(char *, char *, uint64_t))(v8 + 16))(v11, v14, a4);
  uint64_t v19 = 0;
  char v20 = 1;
  v23[1] = v11;
  v23[2] = &v19;
  v18[0] = &type metadata for Spacer;
  v18[1] = a4;
  void v18[2] = &type metadata for Spacer;
  v17[1] = &protocol witness table for Spacer;
  void v17[2] = a6;
  v17[3] = &protocol witness table for Spacer;
  sub_1003D23D4((uint64_t)v23, 3uLL, (uint64_t)v18);
  v15(v14, a4);
  return ((uint64_t (*)(char *, uint64_t))v15)(v11, a4);
}

uint64_t sub_1002200AC@<X0>(void ***a1@<X0>, int a2@<W1>, void ***a3@<X2>, int a4@<W3>, void (*a5)(uint64_t)@<X4>, uint64_t a6@<X5>, void (*a7)(char *, uint64_t)@<X6>, uint64_t a8@<X8>, uint64_t a9, uint64_t a10, void (*a11)(char *, uint64_t))
{
  v161 = a7;
  v158 = a5;
  uint64_t v159 = a6;
  LODWORD(v16sub_1007E6FC4(2, 18, 1, 0) = a4;
  uint64_t v170 = a8;
  uint64_t v171 = a3;
  LODWORD(v157) = a2;
  uint64_t v150 = a1;
  uint64_t v162 = (void (*)(char *, uint64_t))a11;
  sub_100043378(&qword_100B257B0);
  uint64_t v11 = sub_1007F8070();
  swift_getTupleTypeMetadata3();
  uint64_t v12 = sub_1007FA060();
  uint64_t v149 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  v147 = (char *)&v141 - v13;
  uint64_t v14 = sub_100043378(&qword_100B40980);
  swift_getTupleTypeMetadata3();
  uint64_t v15 = sub_1007FA060();
  uint64_t v148 = *(void ****)(v15 - 8);
  __chkstk_darwin(v15);
  uint64_t v146 = (char *)&v141 - v16;
  uint64_t v169 = v12;
  uint64_t v17 = sub_1007F8A60();
  uint64_t v152 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v151 = (char *)&v141 - v18;
  swift_getTupleTypeMetadata3();
  uint64_t v19 = sub_1007FA060();
  uint64_t v145 = *(void *)(v19 - 8);
  __chkstk_darwin(v19);
  v143 = (char *)&v141 - v20;
  uint64_t v155 = (void ***)v14;
  swift_getTupleTypeMetadata3();
  uint64_t v21 = sub_1007FA060();
  uint64_t v144 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v142 = (char *)&v141 - v22;
  uint64_t v173 = v23;
  uint64_t v167 = v19;
  uint64_t v24 = sub_1007F8A60();
  uint64_t v153 = *(void *)(v24 - 8);
  __chkstk_darwin(v24);
  uint64_t v154 = (uint64_t)&v141 - v25;
  uint64_t v26 = sub_1007F7EF0();
  uint64_t v156 = *(void *)(v26 - 8);
  uint64_t v27 = __chkstk_darwin(v26);
  uint64_t v29 = (char *)&v141 - ((v28 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v30 = *(void *)(a9 - 8);
  uint64_t v31 = __chkstk_darwin(v27);
  uint64_t v33 = (char *)&v141 - ((v32 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v176 = v11;
  uint64_t v34 = *(void *)(v11 - 8);
  uint64_t v35 = __chkstk_darwin(v31);
  uint64_t v172 = (char *)&v141 - ((v36 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v35);
  uint64_t v174 = (char *)&v141 - v37;
  uint64_t v166 = v24;
  uint64_t v168 = v17;
  uint64_t v38 = sub_1007F8A60();
  uint64_t v164 = *(void *)(v38 - 8);
  uint64_t v165 = v38;
  uint64_t v39 = __chkstk_darwin(v38);
  uint64_t v175 = v15;
  uint64_t v163 = (char *)&v141 - v40;
  if (v157)
  {
    v158(v39);
    swift_getKeyPath();
    sub_1007A644C((uint64_t)v29);
    uint64_t v70 = (void (*)(void, void))v162;
    sub_1007F92E0();
    swift_release();
    (*(void (**)(char *, uint64_t))(v156 + 8))(v29, v26);
    (*(void (**)(char *, uint64_t))(v30 + 8))(v33, a9);
    unint64_t v71 = sub_100221424();
    v161 = (void (*)(char *, uint64_t))(v34 + 8);
    if (v160)
    {
      v230 = v70;
      unint64_t v231 = v71;
      uint64_t v115 = v176;
      uint64_t WitnessTable = swift_getWitnessTable();
      unint64_t v117 = v174;
      uint64_t v118 = v172;
      sub_1003D2398(v172, v115, WitnessTable);
      uint64_t v119 = *(void (**)(char *, uint64_t))(v34 + 8);
      v119(v118, v115);
      uint64_t v120 = v119;
      uint64_t v162 = v119;
      uint64_t v121 = v171;
      v232 = v171;
      LOBYTE(v233) = 1;
      uint64_t v210 = (void **)&v232;
      (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v118, v117, v115);
      v207 = v121;
      LOBYTE(v208) = 1;
      uint64_t v211 = v118;
      uint64_t v212 = &v207;
      uint64_t v187 = &type metadata for Spacer;
      uint64_t v188 = v115;
      v189 = (void ***)&type metadata for Spacer;
      uint64_t v238 = (void ***)&protocol witness table for Spacer;
      uint64_t v239 = WitnessTable;
      v240 = (void ***)&protocol witness table for Spacer;
      uint64_t v122 = (uint64_t)v147;
      sub_1003D23D4((uint64_t)&v210, 3uLL, (uint64_t)&v187);
      v120(v118, v115);
      uint64_t v123 = v175;
      uint64_t v124 = swift_getWitnessTable();
      uint64_t v125 = v169;
      uint64_t v126 = swift_getWitnessTable();
      uint64_t v127 = (uint64_t)v151;
      sub_1002BF804(v122, v123, v125);
      (*(void (**)(uint64_t, uint64_t))(v149 + 8))(v122, v125);
      uint64_t v128 = swift_getWitnessTable();
      uint64_t v129 = swift_getWitnessTable();
      uint64_t v228 = v128;
      uint64_t v229 = v129;
      uint64_t v130 = v166;
      swift_getWitnessTable();
      uint64_t v226 = v124;
      uint64_t v227 = v126;
      uint64_t v131 = v168;
      swift_getWitnessTable();
      uint64_t v68 = v163;
      sub_1002BF804(v127, v130, v131);
      (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v127, v131);
      v162(v174, v115);
      goto LABEL_9;
    }
    uint64_t v218 = v70;
    unint64_t v219 = v71;
    uint64_t v72 = v176;
    uint64_t v160 = swift_getWitnessTable();
    uint64_t v73 = v174;
    uint64_t v74 = v172;
    sub_1003D2398(v172, v72, v160);
    uint64_t v162 = *(void (**)(char *, uint64_t))(v34 + 8);
    v162(v74, v72);
    sub_1007F9F10();
    sub_1007F7CA0();
    __int16 v75 = v187;
    char v76 = v188;
    uint64_t v77 = v189;
    unsigned __int8 v78 = v190;
    unint64_t v80 = v191;
    uint64_t v79 = v192;
    uint64_t v184 = 0;
    LOBYTE(v185) = 1;
    uint64_t v238 = (void ***)&v184;
    uint64_t v81 = v73;
    uint64_t v82 = v176;
    (*(void (**)(char *, char *, uint64_t))(v34 + 16))(v74, v81, v176);
    uint64_t v210 = 0;
    LOBYTE(v211) = 1;
    uint64_t v212 = v75;
    char v213 = v76;
    uint64_t v214 = v77;
    unsigned __int8 v215 = v78;
    uint64_t v216 = v80;
    v217 = v79;
    uint64_t v239 = (uint64_t)v74;
    v240 = &v210;
    v232 = (void ***)&type metadata for Spacer;
    uint64_t v233 = v82;
    uint64_t v83 = v82;
    v234 = v155;
    v207 = (void ***)&protocol witness table for Spacer;
    uint64_t v208 = v160;
    uint64_t v209 = (void **)sub_100221544();
    uint64_t v84 = (uint64_t)v146;
    sub_1003D23D4((uint64_t)&v238, 3uLL, (uint64_t)&v232);
    v162(v74, v83);
    uint64_t v85 = v175;
    uint64_t v86 = swift_getWitnessTable();
    uint64_t v87 = swift_getWitnessTable();
    uint64_t v88 = (uint64_t)v151;
    sub_1002BF70C(v84, v85);
    ((void (*)(uint64_t, uint64_t))v148[1])(v84, v85);
    uint64_t v89 = swift_getWitnessTable();
    uint64_t v90 = swift_getWitnessTable();
    uint64_t v205 = v89;
    uint64_t v206 = v90;
    uint64_t v91 = v166;
    swift_getWitnessTable();
    uint64_t v203 = v86;
    uint64_t v204 = v87;
    uint64_t v92 = v168;
    swift_getWitnessTable();
    uint64_t v68 = v163;
    sub_1002BF804(v88, v91, v92);
    (*(void (**)(uint64_t, uint64_t))(v152 + 8))(v88, v92);
  }
  else
  {
    uint64_t v151 = (char *)v26;
    uint64_t v152 = v34;
    uint64_t v41 = v158;
    uint64_t v157 = a9;
    sub_1007F9F10();
    uint64_t v42 = (void (**)(char *, char *))(v156 + 8);
    char v43 = (void (**)(char *, uint64_t))(v30 + 8);
    if (v160)
    {
      uint64_t v93 = sub_1007F7CA0();
      uint64_t v160 = (uint64_t)v187;
      LODWORD(v156) = v188;
      uint64_t v150 = v189;
      LODWORD(v149) = v190;
      v147 = v192;
      uint64_t v148 = v191;
      v41(v93);
      swift_getKeyPath();
      sub_1007A644C((uint64_t)v29);
      uint64_t v94 = v172;
      uint64_t v95 = v157;
      uint64_t v96 = (void (*)(void, void))v162;
      sub_1007F92E0();
      swift_release();
      (*v42)(v29, v151);
      (*v43)(v33, v95);
      unint64_t v97 = sub_100221424();
      v201 = v96;
      unint64_t v202 = v97;
      uint64_t v98 = v176;
      uint64_t v99 = swift_getWitnessTable();
      uint64_t v100 = v174;
      sub_1003D2398(v94, v98, v99);
      uint64_t v101 = v152;
      uint64_t v102 = (void (*)(void, void))(v152 + 8);
      uint64_t v103 = *(void (**)(char *, uint64_t))(v152 + 8);
      v103(v94, v98);
      v161 = v103;
      uint64_t v162 = (void (*)(char *, uint64_t))v102;
      uint64_t v104 = v171;
      uint64_t v210 = (void **)v171;
      LOBYTE(v211) = 1;
      uint64_t v212 = (void *)v160;
      char v213 = v156;
      uint64_t v214 = v150;
      unsigned __int8 v215 = v149;
      uint64_t v216 = v148;
      v217 = v147;
      uint64_t v238 = &v210;
      (*(void (**)(char *, char *, uint64_t))(v101 + 16))(v94, v100, v98);
      uint64_t v184 = v104;
      LOBYTE(v185) = 1;
      uint64_t v239 = (uint64_t)v94;
      v240 = (void ***)&v184;
      v232 = v155;
      uint64_t v233 = v98;
      uint64_t v105 = v98;
      v234 = (void ***)&type metadata for Spacer;
      v207 = (void ***)sub_100221544();
      uint64_t v208 = v99;
      uint64_t v209 = (void **)&protocol witness table for Spacer;
      uint64_t v106 = (uint64_t)v143;
      sub_1003D23D4((uint64_t)&v238, 3uLL, (uint64_t)&v232);
      v103(v94, v105);
      uint64_t v107 = v173;
      uint64_t v108 = swift_getWitnessTable();
      uint64_t v109 = v167;
      uint64_t v110 = swift_getWitnessTable();
      uint64_t v111 = v154;
      sub_1002BF804(v106, v107, v109);
      (*(void (**)(uint64_t, uint64_t))(v145 + 8))(v106, v109);
      uint64_t v199 = v108;
      uint64_t v200 = v110;
      uint64_t v112 = v166;
      swift_getWitnessTable();
      uint64_t v113 = swift_getWitnessTable();
      uint64_t v114 = swift_getWitnessTable();
      uint64_t v197 = v113;
      uint64_t v198 = v114;
      swift_getWitnessTable();
      uint64_t v68 = v163;
      sub_1002BF70C(v111, v112);
      (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v111, v112);
      v161(v174, v176);
      goto LABEL_9;
    }
    uint64_t v44 = sub_1007F7CA0();
    uint64_t v160 = (uint64_t)v232;
    LODWORD(v156) = v233;
    uint64_t v150 = v234;
    LODWORD(v149) = v235;
    v147 = v237;
    uint64_t v148 = v236;
    v41(v44);
    swift_getKeyPath();
    sub_1007A644C((uint64_t)v29);
    char v45 = v172;
    uint64_t v46 = v157;
    uint64_t v47 = (void (*)(void, void))v162;
    sub_1007F92E0();
    swift_release();
    (*v42)(v29, v151);
    (*v43)(v33, v46);
    unint64_t v48 = sub_100221424();
    v195 = v47;
    unint64_t v196 = v48;
    uint64_t v49 = v176;
    uint64_t v159 = swift_getWitnessTable();
    uint64_t v50 = v174;
    sub_1003D2398(v45, v49, v159);
    uint64_t v51 = v152;
    uint64_t v52 = *(void (**)(void, void))(v152 + 8);
    v161 = (void (*)(char *, uint64_t))(v152 + 8);
    uint64_t v162 = (void (*)(char *, uint64_t))v52;
    v52(v45, v49);
    sub_1007F9F10();
    sub_1007F7CA0();
    uint64_t v53 = v238;
    LOBYTE(v46) = v239;
    uint64_t v54 = v240;
    char v55 = v241;
    uint64_t v56 = v242;
    uint64_t v57 = v243;
    uint64_t v210 = 0;
    LOBYTE(v211) = 1;
    uint64_t v212 = (void *)v160;
    char v213 = v156;
    uint64_t v214 = v150;
    unsigned __int8 v215 = v149;
    uint64_t v216 = v148;
    v217 = v147;
    v207 = &v210;
    uint64_t v58 = v50;
    uint64_t v59 = v176;
    (*(void (**)(char *, char *, uint64_t))(v51 + 16))(v45, v58, v176);
    LOBYTE(v188) = 1;
    v189 = v53;
    unsigned __int8 v190 = v46;
    v191 = v54;
    LOBYTE(v192) = v55;
    uint64_t v193 = v56;
    uint64_t v194 = v57;
    uint64_t v208 = (uint64_t)v45;
    uint64_t v209 = (void **)&v187;
    uint64_t v184 = v155;
    uint64_t v185 = v59;
    uint64_t v60 = v59;
    uint64_t v186 = v155;
    uint64_t v187 = 0;
    unint64_t v181 = sub_100221544();
    uint64_t v182 = v159;
    unint64_t v183 = v181;
    uint64_t v61 = (uint64_t)v142;
    sub_1003D23D4((uint64_t)&v207, 3uLL, (uint64_t)&v184);
    v162(v45, v60);
    uint64_t v62 = v173;
    uint64_t v63 = swift_getWitnessTable();
    uint64_t v64 = swift_getWitnessTable();
    sub_1002BF70C(v61, v62);
    (*(void (**)(uint64_t, uint64_t))(v144 + 8))(v61, v62);
    uint64_t v179 = v63;
    uint64_t v180 = v64;
    uint64_t v65 = v166;
    swift_getWitnessTable();
    uint64_t v66 = swift_getWitnessTable();
    uint64_t v67 = swift_getWitnessTable();
    uint64_t v177 = v66;
    uint64_t v178 = v67;
    swift_getWitnessTable();
    uint64_t v68 = v163;
    uint64_t v69 = v154;
    sub_1002BF70C(v154, v65);
    (*(void (**)(uint64_t, uint64_t))(v153 + 8))(v69, v65);
  }
  v162(v174, v176);
LABEL_9:
  uint64_t v132 = swift_getWitnessTable();
  uint64_t v133 = swift_getWitnessTable();
  uint64_t v224 = v132;
  uint64_t v225 = v133;
  uint64_t v134 = swift_getWitnessTable();
  uint64_t v135 = swift_getWitnessTable();
  uint64_t v136 = swift_getWitnessTable();
  uint64_t v222 = v135;
  uint64_t v223 = v136;
  uint64_t v137 = swift_getWitnessTable();
  uint64_t v220 = v134;
  uint64_t v221 = v137;
  uint64_t v138 = v165;
  uint64_t v139 = swift_getWitnessTable();
  sub_1003D2398(v68, v138, v139);
  return (*(uint64_t (**)(char *, uint64_t))(v164 + 8))(v68, v138);
}

uint64_t sub_100221404()
{
  return sub_1007F93A0();
}

unint64_t sub_100221424()
{
  unint64_t result = qword_100B257B8;
  if (!qword_100B257B8)
  {
    sub_100043378(&qword_100B257B0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B257B8);
  }
  return result;
}

uint64_t sub_100221480@<X0>(uint64_t a1@<X8>)
{
  return sub_10021CC44(v1[4], v1[2], v1[3], a1);
}

uint64_t sub_10022148C()
{
  return sub_1002214C8((uint64_t (*)(void, void, void, void, void, void, void))sub_10021D7F8);
}

uint64_t sub_1002214A4()
{
  return sub_10021D0D8(v0[4], v0[2], v0[3]);
}

uint64_t sub_1002214B0()
{
  return sub_1002214C8((uint64_t (*)(void, void, void, void, void, void, void))sub_10021EB3C);
}

uint64_t sub_1002214C8(uint64_t (*a1)(void, void, void, void, void, void, void))
{
  return a1(v1[6], v1[7], v1[8], v1[2], v1[3], v1[4], v1[5]);
}

uint64_t sub_1002214E4()
{
  return sub_10021FEF0(v0[6], v0[7], v0[2], v0[3], v0[4], v0[5]);
}

uint64_t sub_1002214F4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002200AC(*(void ****)(v1 + 48), *(unsigned __int8 *)(v1 + 56), *(void ****)(v1 + 64), *(unsigned __int8 *)(v1 + 72), *(void (**)(uint64_t))(v1 + 80), *(void *)(v1 + 88), *(void (**)(char *, uint64_t))(v1 + 96), a1, *(void *)(v1 + 24), *(void *)(v1 + 32), *(void (**)(char *, uint64_t))(v1 + 40));
}

unint64_t sub_100221544()
{
  unint64_t result = qword_100B257C0;
  if (!qword_100B257C0)
  {
    sub_100043378(&qword_100B40980);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B257C0);
  }
  return result;
}

uint64_t sub_1002215B8()
{
  return swift_getWitnessTable();
}

uint64_t sub_100221B1C()
{
  uint64_t v0 = sub_1007F6BC0();
  sub_10002A6A8(v0, qword_100B257C8);
  sub_10005B838(v0, (uint64_t)qword_100B257C8);
  return sub_1007F6BB0();
}

uint64_t sub_100221BA0()
{
  uint64_t v0 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v0 - 8);
  objc_super v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1007F2820();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007F2CE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1007FDBF0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1007F2840();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1007F2390();
  sub_10002A6A8(v10, qword_100B754F8);
  sub_10005B838(v10, (uint64_t)qword_100B754F8);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1007F2860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1007F2380();
}

unint64_t sub_100221E78()
{
  uint64_t v0 = sub_100058D18(&qword_100B258D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v99 = (char *)v86 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v2 - 8);
  uint64_t v105 = (char *)v86 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v102 = sub_1007F2820();
  uint64_t v4 = *(void *)(v102 - 8);
  __chkstk_darwin(v102);
  uint64_t v6 = (char *)v86 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007F2CE0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v86 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007FDBF0();
  __chkstk_darwin(v10 - 8);
  uint64_t v12 = (char *)v86 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1007F2840();
  uint64_t v106 = v13;
  uint64_t v14 = *(void *)(v13 - 8);
  __chkstk_darwin(v13);
  uint64_t v89 = (char *)v86 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058D18(&qword_100B258E0);
  uint64_t v16 = (int *)(sub_100058D18(&qword_100B24E48) - 8);
  uint64_t v17 = *(void *)v16;
  uint64_t v97 = *(void *)(*(void *)v16 + 72);
  uint64_t v95 = v16;
  unint64_t v18 = (*(unsigned __int8 *)(v17 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v17 + 80);
  uint64_t v19 = swift_allocObject();
  uint64_t v88 = v19;
  *(_OWORD *)(v19 + 16) = xmmword_10085F7B0;
  uint64_t v104 = (unsigned char *)(v19 + v18);
  uint64_t v87 = v19 + v18 + v16[14];
  *(unsigned char *)(v19 + v18) = 0;
  sub_1007FDB70();
  sub_1007F2C80();
  unsigned int v103 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v107 = *(void (**)(char *))(v4 + 104);
  uint64_t v101 = v4 + 104;
  uint64_t v20 = v6;
  uint64_t v21 = v6;
  uint64_t v22 = v102;
  v107(v21);
  sub_1007F2860();
  uint64_t v98 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v14 + 56);
  v98(v105, 1, 1, v13);
  uint64_t v91 = sub_1007F21A0();
  uint64_t v23 = *(void *)(v91 - 8);
  uint64_t v90 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v23 + 56);
  uint64_t v93 = v23 + 56;
  v90(v99, 1, 1, v91);
  sub_100058D18(&qword_100B26BB0);
  uint64_t v100 = v14 + 56;
  *(_OWORD *)(swift_allocObject() + 16) = xmmword_10085CCE0;
  sub_1007FDB70();
  uint64_t v24 = v9;
  sub_1007F2C80();
  uint64_t v25 = v20;
  uint64_t v26 = v20;
  uint64_t v27 = v103;
  uint64_t v28 = (void (*)(char *, uint64_t, uint64_t))v107;
  ((void (*)(char *, void, uint64_t))v107)(v26, v103, v22);
  sub_1007F2860();
  sub_1007F21B0();
  uint64_t v29 = v97;
  uint64_t v87 = (uint64_t)&v104[v97 + v95[14]];
  v104[v97] = 1;
  uint64_t v92 = v12;
  sub_1007FDB70();
  uint64_t v94 = v24;
  sub_1007F2C80();
  v28(v25, v27, v22);
  sub_1007F2860();
  uint64_t v30 = v98;
  v98(v105, 1, 1, v106);
  uint64_t v31 = v90;
  v90(v99, 1, 1, v91);
  sub_1007F21C0();
  uint64_t v87 = 2 * v29;
  uint64_t v32 = v104;
  v104[2 * v29] = 2;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v96 = v25;
  uint64_t v33 = v102;
  ((void (*)(char *, void, uint64_t))v107)(v25, v103, v102);
  sub_1007F2860();
  uint64_t v34 = v106;
  v30(v105, 1, 1, v106);
  v31(v99, 1, 1, v91);
  sub_1007F21C0();
  uint64_t v35 = v97;
  uint64_t v36 = v32;
  uint64_t v37 = &v32[v87 + v97];
  uint64_t v38 = v95;
  uint64_t v87 = (uint64_t)&v37[v95[14]];
  *uint64_t v37 = 3;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v39 = v107;
  ((void (*)(char *, void, uint64_t))v107)(v96, v103, v33);
  sub_1007F2860();
  v98(v105, 1, 1, v34);
  uint64_t v40 = v90;
  uint64_t v41 = v91;
  v90(v99, 1, 1, v91);
  sub_1007F21C0();
  uint64_t v87 = 4 * v35;
  uint64_t v42 = &v36[4 * v35];
  v86[1] = &v42[v38[14]];
  *uint64_t v42 = 4;
  sub_1007FDB70();
  sub_1007F2C80();
  char v43 = v96;
  uint64_t v44 = v103;
  ((void (*)(char *, void, uint64_t))v39)(v96, v103, v102);
  char v45 = v43;
  sub_1007F2860();
  v98(v105, 1, 1, v106);
  uint64_t v46 = v99;
  v40(v99, 1, 1, v41);
  sub_1007F21C0();
  uint64_t v47 = v104;
  unint64_t v48 = &v104[v87 + v97];
  uint64_t v49 = v95;
  uint64_t v87 = (uint64_t)&v48[v95[14]];
  *unint64_t v48 = 5;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v50 = v45;
  uint64_t v51 = v102;
  uint64_t v52 = v107;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v50, v44, v102);
  sub_1007F2860();
  uint64_t v53 = v105;
  v98(v105, 1, 1, v106);
  v90(v46, 1, 1, v91);
  sub_1007F21C0();
  uint64_t v54 = &v47[6 * v97];
  uint64_t v93 = (uint64_t)&v54[v49[14]];
  *uint64_t v54 = 6;
  sub_1007FDB70();
  sub_1007F2C80();
  char v55 = v96;
  ((void (*)(char *, void, uint64_t))v52)(v96, v103, v51);
  sub_1007F2860();
  uint64_t v56 = v98;
  v98(v53, 1, 1, v106);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v93 = 8 * v97;
  uint64_t v57 = &v104[7 * v97];
  uint64_t v58 = v95;
  uint64_t v91 = (uint64_t)&v57[v95[14]];
  *uint64_t v57 = 7;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v59 = v103;
  ((void (*)(char *, void, uint64_t))v107)(v55, v103, v102);
  sub_1007F2860();
  uint64_t v60 = v106;
  v56(v53, 1, 1, v106);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v61 = v104;
  uint64_t v91 = (uint64_t)&v104[v93 + v58[14]];
  v104[v93] = 8;
  sub_1007FDB70();
  sub_1007F2C80();
  ((void (*)(char *, uint64_t, uint64_t))v107)(v96, v59, v102);
  sub_1007F2860();
  uint64_t v62 = v60;
  uint64_t v63 = v98;
  v98(v53, 1, 1, v62);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v64 = v97;
  uint64_t v65 = &v61[v93 + v97];
  uint64_t v66 = v95;
  uint64_t v93 = (uint64_t)&v65[v95[14]];
  *uint64_t v65 = 9;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v67 = v103;
  ((void (*)(char *, void, uint64_t))v107)(v96, v103, v102);
  sub_1007F2860();
  v63(v53, 1, 1, v106);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v68 = &v104[10 * v64];
  uint64_t v93 = (uint64_t)&v68[v66[14]];
  unsigned char *v68 = 10;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v69 = v102;
  ((void (*)(char *, uint64_t, uint64_t))v107)(v96, v67, v102);
  sub_1007F2860();
  uint64_t v70 = v98;
  v98(v105, 1, 1, v106);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v71 = v97;
  uint64_t v72 = &v104[11 * v97];
  uint64_t v73 = v95;
  uint64_t v93 = (uint64_t)&v72[v95[14]];
  unsigned char *v72 = 11;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v74 = v103;
  uint64_t v75 = v69;
  char v76 = (void (*)(char *, uint64_t, uint64_t))v107;
  ((void (*)(char *, void, uint64_t))v107)(v96, v103, v75);
  sub_1007F2860();
  v70(v105, 1, 1, v106);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v77 = &v104[12 * v71];
  uint64_t v93 = (uint64_t)&v77[v73[14]];
  *uint64_t v77 = 12;
  sub_1007FDB70();
  sub_1007F2C80();
  unsigned __int8 v78 = v96;
  uint64_t v79 = v102;
  v76(v96, v74, v102);
  unint64_t v80 = v78;
  sub_1007F2860();
  uint64_t v82 = v105;
  uint64_t v81 = v106;
  uint64_t v83 = v98;
  v98(v105, 1, 1, v106);
  sub_1007F2180();
  sub_1007F21C0();
  uint64_t v84 = &v104[13 * v97];
  uint64_t v104 = &v84[v95[14]];
  unsigned char *v84 = 13;
  sub_1007FDB70();
  sub_1007F2C80();
  ((void (*)(char *, void, uint64_t))v107)(v80, v103, v79);
  sub_1007F2860();
  v83(v82, 1, 1, v81);
  sub_1007F2180();
  sub_1007F21C0();
  unint64_t result = sub_10020FD8C(v88);
  qword_100B75510 = result;
  return result;
}

unint64_t sub_1002230C8(char a1)
{
  unint64_t result = 0x626154656D6F68;
  switch(a1)
  {
    case 1:
      unint64_t result = 0x547972617262696CLL;
      break;
    case 2:
      unint64_t result = 0x726F74536B6F6F62;
      break;
    case 3:
      unint64_t result = 0xD000000000000011;
      break;
    case 4:
      unint64_t result = 0x6154686372616573;
      break;
    case 5:
      unint64_t result = 0x62615461676E616DLL;
      break;
    case 6:
    case 7:
    case 10:
    case 13:
      unint64_t result = 0xD000000000000014;
      break;
    case 8:
      unint64_t result = 0xD000000000000012;
      break;
    case 9:
      unint64_t result = 0x6C6F43736B6F6F62;
      break;
    case 11:
      unint64_t result = 0x6C6C6F4373666470;
      break;
    case 12:
      unint64_t result = 0xD000000000000013;
      break;
    default:
      return result;
  }
  return result;
}

uint64_t sub_100223284(char *a1, char *a2)
{
  char v2 = *a2;
  unint64_t v3 = sub_1002230C8(*a1);
  uint64_t v5 = v4;
  if (v3 == sub_1002230C8(v2) && v5 == v6) {
    char v8 = 1;
  }
  else {
    char v8 = sub_1007FF470();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v8 & 1;
}

unint64_t sub_100223314()
{
  unint64_t result = qword_100B257E0;
  if (!qword_100B257E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B257E0);
  }
  return result;
}

Swift::Int sub_100223368()
{
  char v1 = *v0;
  sub_1007FF5C0();
  sub_1002230C8(v1);
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  return sub_1007FF600();
}

uint64_t sub_1002233CC()
{
  sub_1002230C8(*v0);
  sub_1007FDDA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100223420()
{
  char v1 = *v0;
  sub_1007FF5C0();
  sub_1002230C8(v1);
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  return sub_1007FF600();
}

uint64_t sub_100223480@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_1002249D0(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

unint64_t sub_1002234B0@<X0>(unint64_t *a1@<X8>)
{
  unint64_t result = sub_1002230C8(*v1);
  *a1 = result;
  a1[1] = v4;
  return result;
}

unint64_t sub_1002234E0()
{
  unint64_t result = qword_100B257E8;
  if (!qword_100B257E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B257E8);
  }
  return result;
}

unint64_t sub_100223538()
{
  unint64_t result = qword_100B257F0;
  if (!qword_100B257F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B257F0);
  }
  return result;
}

unint64_t sub_100223590()
{
  unint64_t result = qword_100B257F8;
  if (!qword_100B257F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B257F8);
  }
  return result;
}

void *sub_1002235E4()
{
  return &protocol witness table for String;
}

unint64_t sub_1002235F4()
{
  unint64_t result = qword_100B25800;
  if (!qword_100B25800)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25800);
  }
  return result;
}

unint64_t sub_10022364C()
{
  unint64_t result = qword_100B25808;
  if (!qword_100B25808)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25808);
  }
  return result;
}

unint64_t sub_1002236A4()
{
  unint64_t result = qword_100B25810;
  if (!qword_100B25810)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25810);
  }
  return result;
}

unint64_t sub_1002236FC()
{
  unint64_t result = qword_100B25818;
  if (!qword_100B25818)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25818);
  }
  return result;
}

uint64_t sub_100223754@<X0>(uint64_t a1@<X8>)
{
  return sub_1002242B8(&qword_100B22478, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100B754F8, a1);
}

uint64_t sub_10022378C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_1002237DC()
{
  unint64_t result = qword_100B25820;
  if (!qword_100B25820)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25820);
  }
  return result;
}

uint64_t sub_100223830(uint64_t a1)
{
  unint64_t v2 = sub_1002237DC();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100223880()
{
  unint64_t result = qword_100B25828;
  if (!qword_100B25828)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25828);
  }
  return result;
}

unint64_t sub_1002238D8()
{
  unint64_t result = qword_100B25830;
  if (!qword_100B25830)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25830);
  }
  return result;
}

unint64_t sub_100223930()
{
  unint64_t result = qword_100B25838;
  if (!qword_100B25838)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25838);
  }
  return result;
}

uint64_t sub_100223984()
{
  if (qword_100B22480 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_1002239E0(uint64_t a1)
{
  unint64_t v2 = sub_1002236FC();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100223A2C()
{
  return sub_100043334(&qword_100B25840, &qword_100B25848);
}

void sub_100223A68(void *a1@<X8>)
{
  *a1 = &off_100A4C3E0;
}

unint64_t sub_100223A7C()
{
  unint64_t result = qword_100B25850;
  if (!qword_100B25850)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25850);
  }
  return result;
}

uint64_t sub_100223AD0()
{
  uint64_t v0 = sub_1007F2820();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1007F2CE0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1007FDBF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1007F2840();
  sub_10002A6A8(v6, qword_100B75518);
  sub_10005B838(v6, (uint64_t)qword_100B75518);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1007F2860();
}

uint64_t sub_100223CB0()
{
  return sub_1007F1EB0();
}

uint64_t sub_100223CD4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v3[3] = a2;
  void v3[4] = a3;
  v3[2] = a1;
  sub_1007FE100();
  void v3[5] = sub_1007FE0F0();
  uint64_t v5 = sub_1007FE0A0();
  return _swift_task_switch(sub_100223D70, v5, v4);
}

uint64_t sub_100223D70()
{
  swift_release();
  sub_1007F1E90();
  switch(*(unsigned char *)(v0 + 48))
  {
    case 1:
      uint64_t v1 = (void *)sub_100224A1C();
      sub_100263AB0(1);
      break;
    case 2:
      uint64_t v1 = (void *)sub_100224A1C();
      sub_100263AB0(2);
      break;
    case 3:
      uint64_t v1 = (void *)sub_100224A1C();
      sub_100263AB0(3);
      break;
    case 4:
      uint64_t v1 = (void *)sub_100224A1C();
      sub_100263AB0(4);
      break;
    case 5:
      uint64_t v1 = (void *)sub_100224A1C();
      sub_100263AB0(5);
      break;
    case 6:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 0;
      goto LABEL_16;
    case 7:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 1;
      goto LABEL_16;
    case 8:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 2;
      goto LABEL_16;
    case 9:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 3;
      goto LABEL_16;
    case 0xA:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 4;
      goto LABEL_16;
    case 0xB:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 5;
      goto LABEL_16;
    case 0xC:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 6;
      goto LABEL_16;
    case 0xD:
      uint64_t v1 = (void *)sub_100224A1C();
      char v2 = 7;
LABEL_16:
      sub_10026436C(v2);
      break;
    default:
      uint64_t v1 = (void *)sub_100224A1C();
      sub_100263AB0(0);
      break;
  }

  sub_1007F1DD0();
  unint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100224024@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1007F1E90();
  *a1 = v3;
  return result;
}

uint64_t sub_100224060()
{
  return sub_1007F1EA0();
}

void (*sub_100224098(void *a1))(void *a1)
{
  char v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = sub_1007F1E80();
  return sub_1002240F4;
}

void sub_1002240F4(void *a1)
{
  uint64_t v1 = (void *)*a1;
  (*(void (**)(void, void))(*a1 + 32))(*a1, 0);

  free(v1);
}

unint64_t sub_100224144()
{
  unint64_t result = qword_100B25858;
  if (!qword_100B25858)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25858);
  }
  return result;
}

unint64_t sub_10022419C()
{
  unint64_t result = qword_100B25860;
  if (!qword_100B25860)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25860);
  }
  return result;
}

unint64_t sub_1002241F4()
{
  unint64_t result = qword_100B25868;
  if (!qword_100B25868)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25868);
  }
  return result;
}

uint64_t sub_100224248()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100224264()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100224280@<X0>(uint64_t a1@<X8>)
{
  return sub_1002242B8(&qword_100B22488, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100B75518, a1);
}

uint64_t sub_1002242B8@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10005B838(v7, a3);
  uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_100224360()
{
  uint64_t v0 = sub_100058D18(&qword_100B258C0);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100058D18(&qword_100B258C8);
  __chkstk_darwin(v1);
  sub_1007F2270();
  v3._countAndFlagsBits = 0x206F74206E65704FLL;
  v3._object = (void *)0xE800000000000000;
  sub_1007F2260(v3);
  swift_getKeyPath();
  sub_100058D18(&qword_100B258D0);
  sub_1007F2250();
  swift_release();
  v4._countAndFlagsBits = 0;
  v4._object = (void *)0xE000000000000000;
  sub_1007F2260(v4);
  sub_1007F2290();
  return sub_1007F2240();
}

uint64_t sub_1002244F8(uint64_t a1)
{
  uint64_t v5 = *v1;
  uint64_t v4 = v1[1];
  uint64_t v6 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v6;
  *uint64_t v6 = v2;
  v6[1] = sub_1000366AC;
  return sub_100223CD4(a1, v5, v4);
}

uint64_t sub_1002245A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100224B9C();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_1002245CC(uint64_t a1)
{
  unint64_t v2 = sub_100224144();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

uint64_t destroy for DeepLinkIntent()
{
  swift_release();

  return swift_release();
}

void *_s5Books14DeepLinkIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for DeepLinkIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  return a1;
}

_OWORD *assignWithTake for DeepLinkIntent(_OWORD *a1, _OWORD *a2)
{
  *a1 = *a2;
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for DeepLinkIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for DeepLinkIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkIntent()
{
  return &type metadata for DeepLinkIntent;
}

uint64_t getEnumTagSinglePayload for DeepLinkItem(unsigned __int8 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xF3) {
    goto LABEL_17;
  }
  if (a2 + 13 >= 0xFFFF00) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 13) >> 8 < 0xFF) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = *(unsigned __int16 *)(a1 + 1);
      if (!*(_WORD *)(a1 + 1)) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 8)) - 13;
    }
    int v4 = a1[1];
    if (a1[1]) {
      return (*a1 | (v4 << 8)) - 13;
    }
  }
LABEL_17:
  unsigned int v6 = *a1;
  BOOL v7 = v6 >= 0xE;
  int v8 = v6 - 14;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

unsigned char *storeEnumTagSinglePayload for DeepLinkItem(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 13 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 13) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF2)
  {
    unsigned int v6 = ((a2 - 243) >> 8) + 1;
    *uint64_t result = a2 + 13;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100224910);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 13;
        break;
    }
  }
  return result;
}

uint64_t sub_100224938(unsigned __int8 *a1)
{
  return *a1;
}

unsigned char *sub_100224940(unsigned char *result, char a2)
{
  *uint64_t result = a2;
  return result;
}

ValueMetadata *type metadata accessor for DeepLinkItem()
{
  return &type metadata for DeepLinkItem;
}

uint64_t sub_100224958()
{
  return sub_100043334(&qword_100B25878, &qword_100B25880);
}

uint64_t sub_100224994()
{
  return sub_100043334((unint64_t *)&qword_100B26AE0, &qword_100B25888);
}

uint64_t sub_1002249D0(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100A4C270;
  v6._object = a2;
  unint64_t v4 = sub_1007FF320(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 0xE) {
    return 14;
  }
  else {
    return v4;
  }
}

uint64_t sub_100224A1C()
{
  sub_1007F1BA0();
  id v0 = [v8 primarySceneController];

  id v1 = [v0 rootBarCoordinator];
  if (v1)
  {
    type metadata accessor for RootBarCoordinator();
    uint64_t result = swift_dynamicCastClass();
    if (result) {
      return result;
    }
    swift_unknownObjectRelease();
  }
  if (qword_100B22470 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1007F6BC0();
  sub_10005B838(v3, (uint64_t)qword_100B257C8);
  unint64_t v4 = sub_1007F6BA0();
  os_log_type_t v5 = sub_1007FE3C0();
  if (os_log_type_enabled(v4, v5))
  {
    Swift::String v6 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)Swift::String v6 = 0;
    _os_log_impl((void *)&_mh_execute_header, v4, v5, "Failed getting root bar coordinator.", v6, 2u);
    swift_slowDealloc();
  }

  sub_1002250C0();
  swift_allocError();
  unsigned char *v7 = 0;
  return swift_willThrow();
}

uint64_t sub_100224B9C()
{
  uint64_t v0 = sub_1007F22A0();
  uint64_t v28 = *(void *)(v0 - 8);
  uint64_t v29 = v0;
  __chkstk_darwin(v0);
  uint64_t v27 = (char *)v23 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100058D18(&qword_100B25890);
  uint64_t v3 = __chkstk_darwin(v2 - 8);
  uint64_t v26 = (char *)v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v25 = (char *)v23 - v5;
  uint64_t v6 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v6 - 8);
  uint64_t v24 = (char *)v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1007F2820();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v12 = sub_1007F2CE0();
  __chkstk_darwin(v12 - 8);
  uint64_t v13 = sub_1007FDBF0();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1007F2840();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  v23[1] = sub_100058D18(&qword_100B258A0);
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v16 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(char *, uint64_t, uint64_t))(v9 + 104);
  v17(v11, enum case for LocalizedStringResource.BundleDescription.main(_:), v8);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v17(v11, v16, v8);
  unint64_t v18 = v24;
  sub_1007F2860();
  (*(void (**)(char *, void, uint64_t, uint64_t))(v15 + 56))(v18, 0, 1, v14);
  LOBYTE(v3sub_1007E6FC4(2, 18, 1, 0) = 14;
  uint64_t v19 = sub_1007F1DA0();
  uint64_t v20 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56);
  v20(v25, 1, 1, v19);
  v20(v26, 1, 1, v19);
  (*(void (**)(char *, void, uint64_t))(v28 + 104))(v27, enum case for InputConnectionBehavior.default(_:), v29);
  sub_1002237DC();
  uint64_t v21 = sub_1007F1EF0();
  sub_100058D18(&qword_100B258A8);
  sub_1007F1C60();
  long long v30 = 0u;
  long long v31 = 0u;
  uint64_t v32 = 0;
  sub_1007F1C50();
  sub_1007F1BB0();
  return v21;
}

unint64_t sub_1002250C0()
{
  unint64_t result = qword_100B258B8;
  if (!qword_100B258B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B258B8);
  }
  return result;
}

uint64_t sub_100225114@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007F1EB0();
  *a1 = result;
  return result;
}

uint64_t sub_100225140(uint64_t a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = a1;
  int v5 = *(_DWORD *)(*(void *)(a3 - 8) + 80);
  if ((v5 & 0x20000) != 0)
  {
    uint64_t v18 = *a2;
    *(void *)uint64_t v4 = *a2;
    uint64_t v4 = v18 + ((v5 + 16) & ~(unint64_t)v5);
    swift_retain();
  }
  else
  {
    long long v7 = *(_OWORD *)(a2 + 3);
    *(_OWORD *)(a1 + 24) = v7;
    (**(void (***)(uint64_t, uint64_t *))(v7 - 8))(a1, a2);
    long long v8 = *((_OWORD *)a2 + 4);
    *(_OWORD *)(v4 + 64) = v8;
    (**(void (***)(uint64_t, uint64_t))(v8 - 8))(v4 + 40, (uint64_t)(a2 + 5));
    uint64_t v9 = (void *)a2[10];
    *(void *)(v4 + 8sub_1007E6FC4(2, 18, 1, 0) = v9;
    long long v10 = *((_OWORD *)a2 + 7);
    *(_OWORD *)(v4 + 112) = v10;
    uint64_t v11 = v10;
    uint64_t v12 = **(void (***)(uint64_t, uint64_t, uint64_t))(v10 - 8);
    id v13 = v9;
    v12(v4 + 88, (uint64_t)(a2 + 11), v11);
    uint64_t v14 = *(int *)(a3 + 32);
    uint64_t v15 = v4 + v14;
    uint64_t v16 = (uint64_t)a2 + v14;
    uint64_t v17 = sub_1007F3110();
    (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v17 - 8) + 16))(v15, v16, v17);
  }
  return v4;
}

uint64_t sub_100225310(uint64_t a1, uint64_t a2)
{
  _s5Books15CurrentPageViewVwxx_0(a1);
  _s5Books15CurrentPageViewVwxx_0(a1 + 40);

  _s5Books15CurrentPageViewVwxx_0(a1 + 88);
  uint64_t v4 = a1 + *(int *)(a2 + 32);
  uint64_t v5 = sub_1007F3110();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t))(*(void *)(v5 - 8) + 8);

  return v6(v4, v5);
}

uint64_t sub_10022539C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v6 = *(_OWORD *)(a2 + 24);
  *(_OWORD *)(a1 + 24) = v6;
  (**(void (***)(void))(v6 - 8))();
  long long v7 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 64) = v7;
  (**(void (***)(uint64_t, uint64_t))(v7 - 8))(a1 + 40, a2 + 40);
  long long v8 = *(void **)(a2 + 80);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v8;
  long long v9 = *(_OWORD *)(a2 + 112);
  *(_OWORD *)(a1 + 112) = v9;
  uint64_t v10 = v9;
  uint64_t v11 = **(void (***)(uint64_t, uint64_t, uint64_t))(v9 - 8);
  id v12 = v8;
  v11(a1 + 88, a2 + 88, v10);
  uint64_t v13 = *(int *)(a3 + 32);
  uint64_t v14 = a1 + v13;
  uint64_t v15 = a2 + v13;
  uint64_t v16 = sub_1007F3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 16))(v14, v15, v16);
  return a1;
}

uint64_t *sub_100225514(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  sub_1002255C0(a1, a2);
  sub_1002255C0(a1 + 5, a2 + 5);
  long long v6 = (void *)a1[10];
  long long v7 = (void *)a2[10];
  a1[10] = (uint64_t)v7;
  id v8 = v7;

  sub_1002255C0(a1 + 11, a2 + 11);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = (char *)a1 + v9;
  uint64_t v11 = (char *)a2 + v9;
  uint64_t v12 = sub_1007F3110();
  (*(void (**)(char *, char *, uint64_t))(*(void *)(v12 - 8) + 24))(v10, v11, v12);
  return a1;
}

uint64_t *sub_1002255C0(uint64_t *result, uint64_t *a2)
{
  if (result != a2)
  {
    uint64_t v3 = result;
    uint64_t v4 = result[3];
    uint64_t v5 = a2[3];
    if (v4 == v5)
    {
      uint64_t v10 = *(void *)(v4 - 8);
      if ((*(unsigned char *)(v10 + 82) & 2) != 0)
      {
        uint64_t v12 = *a2;
        swift_retain();
        uint64_t result = (uint64_t *)swift_release();
        uint64_t *v3 = v12;
      }
      else
      {
        uint64_t v11 = *(uint64_t (**)(void))(v10 + 24);
        return (uint64_t *)v11();
      }
    }
    else
    {
      result[3] = v5;
      result[4] = a2[4];
      uint64_t v6 = *(void *)(v4 - 8);
      uint64_t v7 = *(void *)(v5 - 8);
      uint64_t v8 = v7;
      int v9 = *(_DWORD *)(v7 + 80);
      if ((*(unsigned char *)(v6 + 82) & 2) != 0)
      {
        if ((v9 & 0x20000) != 0)
        {
          *uint64_t result = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v7 + 16))(result, a2, v5);
        }
        return (uint64_t *)swift_release();
      }
      else
      {
        (*(void (**)(unsigned char *, uint64_t *, uint64_t))(v6 + 32))(v13, result, v4);
        if ((v9 & 0x20000) != 0)
        {
          uint64_t *v3 = *a2;
          swift_retain();
        }
        else
        {
          (*(void (**)(uint64_t *, uint64_t *, uint64_t))(v8 + 16))(v3, a2, v5);
        }
        return (uint64_t *)(*(uint64_t (**)(unsigned char *, uint64_t))(v6 + 8))(v13, v4);
      }
    }
  }
  return result;
}

uint64_t sub_1002257F0(uint64_t a1, uint64_t a2, uint64_t a3)
{
  long long v4 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  uint64_t v5 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v5;
  long long v6 = *(_OWORD *)(a2 + 88);
  long long v7 = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 120);
  *(_OWORD *)(a1 + 104) = v7;
  uint64_t v8 = *(int *)(a3 + 32);
  uint64_t v9 = a1 + v8;
  uint64_t v10 = a2 + v8;
  *(_OWORD *)(a1 + 88) = v6;
  uint64_t v11 = sub_1007F3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 32))(v9, v10, v11);
  return a1;
}

uint64_t sub_1002258A4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  _s5Books15CurrentPageViewVwxx_0(a1);
  long long v6 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v6;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  _s5Books15CurrentPageViewVwxx_0(a1 + 40);
  *(_OWORD *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  long long v7 = *(void **)(a1 + 80);
  uint64_t v8 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v8;

  _s5Books15CurrentPageViewVwxx_0(a1 + 88);
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(_OWORD *)(a1 + 104) = *(_OWORD *)(a2 + 104);
  *(void *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 120);
  uint64_t v9 = *(int *)(a3 + 32);
  uint64_t v10 = a1 + v9;
  uint64_t v11 = a2 + v9;
  uint64_t v12 = sub_1007F3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v12 - 8) + 40))(v10, v11, v12);
  return a1;
}

uint64_t sub_10022597C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100225990);
}

uint64_t sub_100225990(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1007F3110();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100225A40(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100225A54);
}

uint64_t sub_100225A54(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1007F3110();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

double sub_100225AFC@<D0>(_OWORD *a1@<X8>)
{
  sub_10005DA74((void *)(v1 + 40), *(void *)(v1 + 64));
  sub_1007F3760();
  if (v5)
  {
    sub_100226600((uint64_t)v4);
  }
  else
  {
    sub_1000419B0(v4, (uint64_t)v6);
    sub_1000419B0(v6, (uint64_t)v4);
    sub_100058D18(&qword_100B32670);
    sub_100058D18(qword_100B259A0);
    if (swift_dynamicCast()) {
      return result;
    }
  }
  double result = 0.0;
  a1[1] = 0u;
  a1[2] = 0u;
  *a1 = 0u;
  return result;
}

uint64_t sub_100225BC4()
{
  sub_100225AFC(&v12);
  if (!v13)
  {
    sub_100226654((uint64_t)&v12);
LABEL_17:
    char v10 = 0;
    return v10 & 1;
  }
  sub_1002266B4(&v12, &v14);
  sub_10005DA74(&v14, v15);
  sub_1007F3670();
  if ((sub_1007F3290() & 1) == 0 || (sub_10005DA74(&v14, v15), (sub_1002FE25C() & 1) == 0))
  {
LABEL_16:
    _s5Books15CurrentPageViewVwxx_0((uint64_t)&v14);
    goto LABEL_17;
  }
  id v0 = [self sharedInstance];
  id v1 = [v0 currentAudiobook];
  if (!v1)
  {
LABEL_15:

    goto LABEL_16;
  }
  uint64_t v2 = v1;
  id v3 = [v1 assetID];
  uint64_t v4 = sub_1007FDC70();
  uint64_t v6 = v5;

  sub_10005DA74(&v14, v15);
  if (v4 != sub_1007F3630() || v6 != v7)
  {
    char v8 = sub_1007FF470();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (v8) {
      goto LABEL_10;
    }
    swift_unknownObjectRelease();
    goto LABEL_15;
  }
  swift_bridgeObjectRelease_n();
LABEL_10:
  unsigned __int8 v9 = [v2 isSG];
  sub_1002266CC((uint64_t)&v14, (uint64_t)&v12);
  if (v9)
  {
    char v10 = 1;
  }
  else
  {
    sub_10005DA74(&v12, v13);
    char v10 = sub_1002FE528();
  }

  swift_unknownObjectRelease();
  _s5Books15CurrentPageViewVwxx_0((uint64_t)&v12);
  _s5Books15CurrentPageViewVwxx_0((uint64_t)&v14);
  return v10 & 1;
}

uint64_t sub_100225DC8()
{
  v1[13] = v0;
  uint64_t v2 = sub_1007F6BC0();
  v1[14] = v2;
  v1[15] = *(void *)(v2 - 8);
  v1[16] = swift_task_alloc();
  sub_1007FE100();
  v1[17] = sub_1007FE0F0();
  uint64_t v4 = sub_1007FE0A0();
  v1[18] = v4;
  v1[19] = v3;
  return _swift_task_switch(sub_100225EBC, v4, v3);
}

uint64_t sub_100225EBC()
{
  id v1 = *(void **)(v0 + 104);
  uint64_t v2 = (void *)v1[10];
  *(void *)(v0 + 16sub_1007E6FC4(2, 18, 1, 0) = v2;
  if (!v2)
  {
    swift_release();
    goto LABEL_5;
  }
  sub_10005DA74(v1 + 5, v1[8]);
  id v3 = v2;
  sub_1007F3760();
  if (*(unsigned char *)(v0 + 56))
  {

    swift_release();
    sub_100226600(v0 + 16);
LABEL_5:
    sub_1007F6B30();
    uint64_t v4 = sub_1007F6BA0();
    os_log_type_t v5 = sub_1007FE3C0();
    if (os_log_type_enabled(v4, v5))
    {
      uint64_t v6 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v6 = 0;
      _os_log_impl((void *)&_mh_execute_header, v4, v5, "ReportAnIssueActionItem tracker does not exist.", v6, 2u);
      swift_slowDealloc();
    }
    uint64_t v8 = *(void *)(v0 + 120);
    uint64_t v7 = *(void *)(v0 + 128);
    uint64_t v9 = *(void *)(v0 + 112);

    (*(void (**)(uint64_t, uint64_t))(v8 + 8))(v7, v9);
    swift_task_dealloc();
    char v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
  sub_1000419B0((long long *)(v0 + 16), v0 + 64);
  sub_10045B914((uint64_t)v3, (void *)(v0 + 64));
  sub_10005DA74((void *)(v0 + 64), *(void *)(v0 + 88));
  uint64_t v12 = sub_1007F3630();
  uint64_t v14 = v13;
  sub_10005DA74((void *)(v0 + 64), *(void *)(v0 + 88));
  uint64_t v15 = sub_1007F35F0();
  if (v16) {
    uint64_t v17 = 0;
  }
  else {
    uint64_t v17 = v15;
  }
  id v18 = [objc_allocWithZone((Class)NSNumber) initWithInteger:v17];
  *(void *)(v0 + 168) = v18;
  objc_allocWithZone((Class)sub_100058D18(&qword_100B25998));
  id v19 = v3;
  uint64_t v20 = (void *)swift_task_alloc();
  *(void *)(v0 + 176) = v20;
  *uint64_t v20 = v0;
  v20[1] = sub_100226170;
  return sub_1006251A4(v12, v14, (uint64_t)v18, (uint64_t)v19);
}

uint64_t sub_100226170(uint64_t a1)
{
  uint64_t v2 = *v1;
  id v3 = *(void **)(*v1 + 168);
  uint64_t v4 = *(void **)(*v1 + 160);
  *(void *)(*v1 + 184) = a1;
  swift_task_dealloc();

  uint64_t v5 = *(void *)(v2 + 152);
  uint64_t v6 = *(void *)(v2 + 144);
  return _swift_task_switch(sub_1002262D0, v6, v5);
}

uint64_t sub_1002262D0()
{
  id v1 = (void *)v0[23];
  uint64_t v2 = (void *)v0[20];
  id v3 = (void *)v0[13];
  swift_release();
  sub_10005DA74(v3, v3[3]);
  sub_1007F2E90();

  _s5Books15CurrentPageViewVwxx_0((uint64_t)(v0 + 8));
  swift_task_dealloc();
  uint64_t v4 = (uint64_t (*)(void))v0[1];
  return v4();
}

uint64_t sub_100226394@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = v2 + *(int *)(a1 + 32);
  uint64_t v5 = sub_1007F3110();
  uint64_t v6 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v5 - 8) + 16);

  return v6(a2, v4, v5);
}

uint64_t sub_100226420()
{
  id v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000366AC;
  return sub_100225DC8();
}

uint64_t ExplicitDeclineActionItem.data.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10005DAB8(v1, a1);
}

uint64_t ExplicitDeclineActionItem.context.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10005DAB8(v1 + 40, a1);
}

void *ExplicitDeclineActionItem.tracker.getter()
{
  uint64_t v1 = *(void **)(v0 + 80);
  id v2 = v1;
  return v1;
}

uint64_t ExplicitDeclineActionItem.figaroProvider.getter@<X0>(uint64_t a1@<X8>)
{
  return sub_10005DAB8(v1 + 88, a1);
}

uint64_t sub_100226534@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  uint64_t v11 = a6 + *(int *)(a5 + 32);
  uint64_t v12 = enum case for ContextActionType.reportConcern(_:);
  uint64_t v13 = sub_1007F3110();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104))(v11, v12, v13);
  sub_1000419B0(a1, a6 + 40);
  sub_1000419B0(a2, a6);
  *(void *)(a6 + 8sub_1007E6FC4(2, 18, 1, 0) = a3;

  return sub_1000419B0(a4, a6 + 88);
}

uint64_t sub_100226600(uint64_t a1)
{
  return a1;
}

uint64_t sub_100226654(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B34F10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

_OWORD *sub_1002266B4(long long *a1, _OWORD *a2)
{
  long long v2 = *a1;
  long long v3 = a1[2];
  a2[1] = a1[1];
  a2[2] = v3;
  *a2 = v2;
  return a2;
}

uint64_t sub_1002266CC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a1 + 24);
  *(void *)(a2 + 24) = v3;
  *(_OWORD *)(a2 + 32) = *(_OWORD *)(a1 + 32);
  (**(void (***)(uint64_t, uint64_t))(v3 - 8))(a2, a1);
  return a2;
}

uint64_t sub_100226730(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_allocateGenericValueMetadata(a1, a2, a3, 32);
}

uint64_t sub_100226738()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    swift_initStructMetadata();
    return 0;
  }
  return result;
}

uint64_t *sub_1002267E8(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(a3 + 16);
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = *(_DWORD *)(v5 + 80);
  unint64_t v7 = ((v6 + 24) & ~v6) + *(void *)(v5 + 64);
  int v8 = *(_DWORD *)(v5 + 80) & 0x100000;
  uint64_t v9 = *a2;
  *a1 = *a2;
  if (v6 > 7 || v8 != 0 || v7 > 0x18)
  {
    a1 = (uint64_t *)(v9 + ((v6 & 0xF8 ^ 0x1F8) & (v6 + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v12 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v13 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v12 = *v13;
    uint64_t v14 = (void *)(((unint64_t)v12 + 15) & 0xFFFFFFFFFFFFFFF8);
    uint64_t v15 = (void *)(((unint64_t)v13 + 15) & 0xFFFFFFFFFFFFFFF8);
    *uint64_t v14 = *v15;
    uint64_t v16 = ((unint64_t)v14 + v6 + 8) & ~v6;
    uint64_t v17 = ((unint64_t)v15 + v6 + 8) & ~v6;
    id v18 = *(void (**)(uint64_t, uint64_t, uint64_t))(v5 + 16);
    swift_retain();
    swift_retain();
    v18(v16, v17, v4);
  }
  return a1;
}

uint64_t sub_100226924(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = a1 + 15;
  swift_release();
  swift_release();
  uint64_t v4 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v5 = *(uint64_t (**)(unint64_t))(v4 + 8);
  unint64_t v6 = ((((v3 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + *(unsigned __int8 *)(v4 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);

  return v5(v6);
}

void *sub_1002269A8(void *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v5 = *a2;
  unint64_t v4 = (unint64_t)a2 + 15;
  *a1 = v5;
  unint64_t v6 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *(void *)(v4 & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(((unint64_t)v6 + 15) & 0xFFFFFFFFFFFFFFF8);
  int v8 = (void *)(((v4 & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v7 = *v8;
  uint64_t v9 = *(void *)(a3 + 16);
  char v10 = *(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 16);
  uint64_t v11 = *(unsigned __int8 *)(*(void *)(v9 - 8) + 80);
  uint64_t v12 = ((unint64_t)v7 + v11 + 8) & ~v11;
  uint64_t v13 = ((unint64_t)v8 + v11 + 8) & ~v11;
  swift_retain();
  swift_retain();
  v10(v12, v13, v9);
  return a1;
}

void *sub_100226A6C(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_retain();
  swift_release();
  unint64_t v6 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  unint64_t v7 = (v5 & 0xFFFFFFFFFFFFFFF8) + 15;
  *(void *)unint64_t v6 = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  v6 += 15;
  swift_retain();
  swift_release();
  *(void *)(v6 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v7 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 24))((*(unsigned __int8 *)(v8 + 80) + 8 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 8 + (v7 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

void *sub_100226B38(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  unint64_t v4 = (void *)(((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v5 = (void *)(((unint64_t)a2 + 15) & 0xFFFFFFFFFFFFFFF8);
  void *v4 = *v5;
  unint64_t v6 = (void *)(((unint64_t)v4 + 15) & 0xFFFFFFFFFFFFFFF8);
  unint64_t v7 = (void *)(((unint64_t)v5 + 15) & 0xFFFFFFFFFFFFFFF8);
  *unint64_t v6 = *v7;
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 32))(((unint64_t)v6 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), ((unint64_t)v7 + *(unsigned __int8 *)(v8 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

void *sub_100226BCC(void *a1, void *a2, uint64_t a3)
{
  unint64_t v5 = (unint64_t)a2 + 15;
  *a1 = *a2;
  swift_release();
  unint64_t v6 = ((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8;
  v5 &= 0xFFFFFFFFFFFFFFF8;
  uint64_t v7 = *(void *)v5;
  v5 += 15;
  *(void *)unint64_t v6 = v7;
  v6 += 15;
  swift_release();
  *(void *)(v6 & 0xFFFFFFFFFFFFFFF8) = *(void *)(v5 & 0xFFFFFFFFFFFFFFF8);
  uint64_t v8 = *(void *)(*(void *)(a3 + 16) - 8);
  (*(void (**)(unint64_t, unint64_t))(v8 + 40))((*(unsigned __int8 *)(v8 + 80) + 8 + (v6 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80), (*(unsigned __int8 *)(v8 + 80) + 8 + (v5 & 0xFFFFFFFFFFFFFFF8)) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80));
  return a1;
}

uint64_t sub_100226C80(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(unsigned __int8 *)(v4 + 80);
  if (v5 <= 0x7FFFFFFF) {
    unsigned int v7 = 0x7FFFFFFF;
  }
  else {
    unsigned int v7 = *(_DWORD *)(v4 + 84);
  }
  if (!a2) {
    return 0;
  }
  int v8 = a2 - v7;
  if (a2 <= v7) {
    goto LABEL_23;
  }
  uint64_t v9 = ((v6 + 24) & ~v6) + *(void *)(*(void *)(*(void *)(a3 + 16) - 8) + 64);
  char v10 = 8 * v9;
  if (v9 <= 3)
  {
    unsigned int v13 = ((v8 + ~(-1 << v10)) >> v10) + 1;
    if (HIWORD(v13))
    {
      int v11 = *(_DWORD *)((char *)a1 + v9);
      if (!v11) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 > 0xFF)
    {
      int v11 = *(unsigned __int16 *)((char *)a1 + v9);
      if (!*(unsigned __int16 *)((char *)a1 + v9)) {
        goto LABEL_23;
      }
      goto LABEL_15;
    }
    if (v13 < 2)
    {
LABEL_23:
      if ((v5 & 0x80000000) != 0) {
        return (*(uint64_t (**)(unint64_t))(v4 + 48))(((((((unint64_t)a1 + 15) & 0xFFFFFFFFFFFFFFF8)
      }
                                                                        + 15) & 0xFFFFFFFFFFFFFFF8)
                                                                      + v6
                                                                      + 8) & ~v6);
      uint64_t v15 = *(void *)a1;
      if (*(void *)a1 >= 0xFFFFFFFFuLL) {
        LODWORD(v15) = -1;
      }
      return (v15 + 1);
    }
  }
  int v11 = *((unsigned __int8 *)a1 + v9);
  if (!*((unsigned char *)a1 + v9)) {
    goto LABEL_23;
  }
LABEL_15:
  int v14 = (v11 - 1) << v10;
  if (v9 > 3) {
    int v14 = 0;
  }
  if (v9)
  {
    if (v9 > 3) {
      LODWORD(v9) = 4;
    }
    switch((int)v9)
    {
      case 2:
        LODWORD(v9) = *a1;
        break;
      case 3:
        LODWORD(v9) = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        LODWORD(v9) = *(_DWORD *)a1;
        break;
      default:
        LODWORD(v9) = *(unsigned __int8 *)a1;
        break;
    }
  }
  return v7 + (v9 | v14) + 1;
}

void sub_100226E30(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  if (v7 <= 0x7FFFFFFF) {
    unsigned int v8 = 0x7FFFFFFF;
  }
  else {
    unsigned int v8 = *(_DWORD *)(v6 + 84);
  }
  uint64_t v9 = *(unsigned __int8 *)(v6 + 80);
  size_t v10 = ((v9 + 24) & ~v9) + *(void *)(*(void *)(*(void *)(a4 + 16) - 8) + 64);
  BOOL v11 = a3 >= v8;
  unsigned int v12 = a3 - v8;
  if (v12 != 0 && v11)
  {
    if (v10 <= 3)
    {
      unsigned int v16 = ((v12 + ~(-1 << (8 * v10))) >> (8 * v10)) + 1;
      if (HIWORD(v16))
      {
        int v13 = 4;
      }
      else if (v16 >= 0x100)
      {
        int v13 = 2;
      }
      else
      {
        int v13 = v16 > 1;
      }
    }
    else
    {
      int v13 = 1;
    }
  }
  else
  {
    int v13 = 0;
  }
  if (v8 < a2)
  {
    unsigned int v14 = ~v8 + a2;
    if (v10 < 4)
    {
      int v15 = (v14 >> (8 * v10)) + 1;
      if (v10)
      {
        int v17 = v14 & ~(-1 << (8 * v10));
        bzero(a1, v10);
        if (v10 == 3)
        {
          *(_WORD *)a1 = v17;
          a1[2] = BYTE2(v17);
        }
        else if (v10 == 2)
        {
          *(_WORD *)a1 = v17;
        }
        else
        {
          *a1 = v17;
        }
      }
    }
    else
    {
      bzero(a1, v10);
      *(_DWORD *)a1 = v14;
      int v15 = 1;
    }
    switch(v13)
    {
      case 1:
        a1[v10] = v15;
        return;
      case 2:
        *(_WORD *)&a1[v10] = v15;
        return;
      case 3:
        goto LABEL_42;
      case 4:
        *(_DWORD *)&a1[v10] = v15;
        return;
      default:
        return;
    }
  }
  switch(v13)
  {
    case 1:
      a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v10] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_42:
      __break(1u);
      JUMPOUT(0x10022709CLL);
    case 4:
      *(_DWORD *)&a1[v10] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        if ((v7 & 0x80000000) != 0)
        {
          unint64_t v19 = (((((unint64_t)(a1 + 15) & 0xFFFFFFFFFFFFFFF8) + 15) & 0xFFFFFFFFFFFFFFF8) + v9 + 8) & ~v9;
          uint64_t v20 = *(void (**)(unint64_t))(v6 + 56);
          v20(v19);
        }
        else
        {
          if ((a2 & 0x80000000) != 0) {
            uint64_t v18 = a2 ^ 0x80000000;
          }
          else {
            uint64_t v18 = a2 - 1;
          }
          *(void *)a1 = v18;
        }
      }
      return;
  }
}

uint64_t type metadata accessor for ContrastingLeadingTrailingColorsView()
{
  return sub_100018A04();
}

uint64_t sub_1002270DC()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100227120@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v3 = v2;
  uint64_t v44 = a2;
  uint64_t v5 = *(void *)(a1 - 8);
  uint64_t v6 = *(void *)(v5 + 64);
  uint64_t v7 = __chkstk_darwin(a1);
  char v43 = (char *)&v32 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = __chkstk_darwin(v7);
  size_t v10 = (char *)&v32 - v9;
  uint64_t v11 = *(void *)(v8 + 16);
  sub_100043378(&qword_100B2CC50);
  uint64_t v34 = v11;
  uint64_t v12 = sub_1007F8070();
  uint64_t v13 = *(void *)(a1 + 24);
  uint64_t v14 = sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
  uint64_t v49 = v13;
  uint64_t v50 = v14;
  uint64_t v33 = v13;
  uint64_t v41 = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v45 = v12;
  uint64_t v46 = v12;
  uint64_t v40 = WitnessTable;
  uint64_t v47 = WitnessTable;
  uint64_t v48 = WitnessTable;
  uint64_t v39 = type metadata accessor for ContrastingLeadingTrailingView();
  uint64_t v42 = *(void *)(v39 - 8);
  uint64_t v16 = __chkstk_darwin(v39);
  uint64_t v37 = (double *)((char *)&v32 - ((v17 + 15) & 0xFFFFFFFFFFFFFFF0));
  __chkstk_darwin(v16);
  uint64_t v38 = (char *)&v32 - v18;
  double v19 = *(double *)(v3 + 16);
  uint64_t v35 = *(void (**)(char *, uint64_t, uint64_t))(v5 + 16);
  uint64_t v36 = v3;
  v35(v10, v3, a1);
  unint64_t v20 = (*(unsigned __int8 *)(v5 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80);
  uint64_t v21 = swift_allocObject();
  *(void *)(v21 + 16) = v11;
  *(void *)(v21 + 24) = v13;
  uint64_t v22 = *(void (**)(unint64_t, char *, uint64_t))(v5 + 32);
  v22(v21 + v20, v10, a1);
  uint64_t v23 = v43;
  v35(v43, v36, a1);
  uint64_t v24 = swift_allocObject();
  uint64_t v25 = v33;
  *(void *)(v24 + 16) = v34;
  *(void *)(v24 + 24) = v25;
  v22(v24 + v20, v23, a1);
  uint64_t v26 = v37;
  sub_100227878((uint64_t (*)(uint64_t, uint64_t, uint64_t, uint64_t))sub_10022793C, (void (*)(uint64_t))sub_100227958, v37, v19);
  uint64_t v27 = v39;
  uint64_t v28 = swift_getWitnessTable();
  uint64_t v29 = v38;
  sub_1003D2398(v26, v27, v28);
  long long v30 = *(void (**)(double *, uint64_t))(v42 + 8);
  v30(v26, v27);
  sub_1003D2398(v29, v27, v28);
  return ((uint64_t (*)(char *, uint64_t))v30)(v29, v27);
}

uint64_t sub_1002274D8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100043378(&qword_100B2CC50);
  uint64_t v4 = sub_1007F8070();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  size_t v10 = (char *)v15 - v9;
  type metadata accessor for ContrastingLeadingTrailingColorsView();
  sub_1007F9400();
  uint64_t v11 = sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
  v15[0] = a3;
  v15[1] = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1003D2398(v8, v4, WitnessTable);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_1003D2398(v10, v4, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
}

uint64_t sub_1002276A8(uint64_t a1, uint64_t a2, uint64_t a3)
{
  sub_100043378(&qword_100B2CC50);
  uint64_t v4 = sub_1007F8070();
  uint64_t v5 = *(void *)(v4 - 8);
  uint64_t v6 = __chkstk_darwin(v4);
  uint64_t v8 = (char *)v15 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v6);
  size_t v10 = (char *)v15 - v9;
  type metadata accessor for ContrastingLeadingTrailingColorsView();
  sub_1007F9400();
  uint64_t v11 = sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
  v15[0] = a3;
  v15[1] = v11;
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1003D2398(v8, v4, WitnessTable);
  uint64_t v13 = *(void (**)(char *, uint64_t))(v5 + 8);
  v13(v8, v4);
  sub_1003D2398(v10, v4, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v13)(v10, v4);
}

uint64_t sub_100227878@<X0>(uint64_t (*a1)(uint64_t, uint64_t, uint64_t, uint64_t)@<X0>, void (*a2)(uint64_t)@<X2>, double *a3@<X8>, double a4@<D0>)
{
  *a3 = a4;
  uint64_t v6 = type metadata accessor for ContrastingLeadingTrailingView();
  uint64_t v10 = a1(v6, v7, v8, v9);
  a2(v10);
  swift_release();
  return swift_release();
}

uint64_t type metadata accessor for ContrastingLeadingTrailingView()
{
  return swift_getGenericMetadata();
}

uint64_t sub_10022793C()
{
  return sub_100227970(sub_1002274D8);
}

uint64_t sub_100227958()
{
  return sub_100227970(sub_1002276A8);
}

uint64_t sub_100227970(uint64_t (*a1)(uint64_t, uint64_t, uint64_t))
{
  uint64_t v2 = *(void *)(v1 + 16);
  uint64_t v3 = *(void *)(v1 + 24);
  uint64_t v4 = *(void *)(type metadata accessor for ContrastingLeadingTrailingColorsView() - 8);
  uint64_t v5 = v1 + ((*(unsigned __int8 *)(v4 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80));

  return a1(v5, v2, v3);
}

uint64_t sub_100227A10()
{
  uint64_t result = swift_checkMetadataState();
  if (v1 <= 0x3F)
  {
    uint64_t result = swift_checkMetadataState();
    if (v2 <= 0x3F)
    {
      swift_initStructMetadata();
      return 0;
    }
  }
  return result;
}

uint64_t *sub_100227AF0(uint64_t *a1, uint64_t *a2, uint64_t a3)
{
  uint64_t v3 = a1;
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unint64_t v5 = *(_DWORD *)(v4 + 80);
  uint64_t v6 = *(void *)(v4 + 64);
  uint64_t v7 = *(void *)(a3 + 24);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(_DWORD *)(v8 + 80);
  uint64_t v10 = v6 + v9;
  if ((v9 | v5) > 7
    || ((*(_DWORD *)(v8 + 80) | *(_DWORD *)(v4 + 80)) & 0x100000) != 0
    || ((v6 + v9 + ((v5 + 8) & ~v5)) & ~v9) + *(void *)(v8 + 64) > 0x18)
  {
    uint64_t v13 = *a2;
    uint64_t *v3 = *a2;
    uint64_t v3 = (uint64_t *)(v13 + (((v9 | v5) & 0xF8 ^ 0x1F8) & ((v9 | v5) + 16)));
    swift_retain();
  }
  else
  {
    uint64_t v14 = ~v9;
    *a1 = *a2;
    uint64_t v15 = ((unint64_t)a1 + v5 + 8) & ~v5;
    uint64_t v16 = ((unint64_t)a2 + v5 + 8) & ~v5;
    (*(void (**)(uint64_t, uint64_t))(v4 + 16))(v15, v16);
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v8 + 16))((v15 + v10) & v14, (v16 + v10) & v14, v7);
  }
  return v3;
}

uint64_t sub_100227C8C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(*(void *)(a2 + 16) - 8);
  uint64_t v4 = v3 + 8;
  unint64_t v5 = (a1 + *(unsigned __int8 *)(v3 + 80) + 8) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  (*(void (**)(unint64_t))(v3 + 8))(v5);
  uint64_t v6 = *(void *)(*(void *)(a2 + 24) - 8);
  uint64_t v7 = *(uint64_t (**)(unint64_t))(v6 + 8);
  unint64_t v8 = (v5 + *(void *)(v4 + 56) + *(unsigned __int8 *)(v6 + 80)) & ~(unint64_t)*(unsigned __int8 *)(v6 + 80);

  return v7(v8);
}

void *sub_100227D40(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 16;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 16))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 16))((*(void *)(v6 + 48) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 48) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

void *sub_100227E14(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 24;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 24))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 24))((*(void *)(v6 + 40) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 40) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

void *sub_100227EE8(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 32;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 32))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 32))((*(void *)(v6 + 32) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 32) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

void *sub_100227FBC(void *a1, void *a2, uint64_t a3)
{
  *a1 = *a2;
  uint64_t v5 = *(void *)(*(void *)(a3 + 16) - 8);
  uint64_t v6 = v5 + 40;
  uint64_t v7 = *(unsigned __int8 *)(v5 + 80);
  uint64_t v8 = ((unint64_t)a1 + v7 + 8) & ~v7;
  uint64_t v9 = ((unint64_t)a2 + v7 + 8) & ~v7;
  (*(void (**)(uint64_t, uint64_t))(v5 + 40))(v8, v9);
  uint64_t v10 = *(void *)(*(void *)(a3 + 24) - 8);
  (*(void (**)(unint64_t, unint64_t))(v10 + 40))((*(void *)(v6 + 24) + *(unsigned __int8 *)(v10 + 80) + v8) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80), (*(void *)(v6 + 24) + *(unsigned __int8 *)(v10 + 80) + v9) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80));
  return a1;
}

uint64_t sub_100228090(unsigned __int16 *a1, unsigned int a2, uint64_t a3)
{
  uint64_t v4 = *(void *)(*(void *)(a3 + 16) - 8);
  unsigned int v5 = *(_DWORD *)(v4 + 84);
  uint64_t v6 = *(void *)(a3 + 24);
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = *(unsigned int *)(v7 + 84);
  uint64_t v9 = *(unsigned __int8 *)(v4 + 80);
  uint64_t v10 = *(void *)(v4 + 64);
  uint64_t v11 = *(unsigned __int8 *)(v7 + 80);
  if (v8 <= v5) {
    unsigned int v12 = *(_DWORD *)(v4 + 84);
  }
  else {
    unsigned int v12 = *(_DWORD *)(v7 + 84);
  }
  if (!a2) {
    return 0;
  }
  unsigned int v13 = a2 - v12;
  if (a2 <= v12) {
    goto LABEL_24;
  }
  uint64_t v14 = ((v10 + v11 + ((v9 + 8) & ~v9)) & ~v11) + *(void *)(*(void *)(v6 - 8) + 64);
  char v15 = 8 * v14;
  if (v14 <= 3)
  {
    unsigned int v17 = ((v13 + ~(-1 << v15)) >> v15) + 1;
    if (HIWORD(v17))
    {
      int v16 = *(_DWORD *)((char *)a1 + v14);
      if (!v16) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 > 0xFF)
    {
      int v16 = *(unsigned __int16 *)((char *)a1 + v14);
      if (!*(unsigned __int16 *)((char *)a1 + v14)) {
        goto LABEL_24;
      }
      goto LABEL_14;
    }
    if (v17 < 2)
    {
LABEL_24:
      if (v12)
      {
        uint64_t v21 = ((unint64_t)a1 + v9 + 8) & ~v9;
        if (v5 >= v8) {
          return (*(uint64_t (**)(uint64_t))(v4 + 48))(v21);
        }
        else {
          return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v7 + 48))((v21 + v10 + v11) & ~v11, v8, v6);
        }
      }
      return 0;
    }
  }
  int v16 = *((unsigned __int8 *)a1 + v14);
  if (!*((unsigned char *)a1 + v14)) {
    goto LABEL_24;
  }
LABEL_14:
  int v18 = (v16 - 1) << v15;
  if (v14 > 3) {
    int v18 = 0;
  }
  if (v14)
  {
    if (v14 <= 3) {
      int v19 = v14;
    }
    else {
      int v19 = 4;
    }
    switch(v19)
    {
      case 2:
        int v20 = *a1;
        break;
      case 3:
        int v20 = *a1 | (*((unsigned __int8 *)a1 + 2) << 16);
        break;
      case 4:
        int v20 = *(_DWORD *)a1;
        break;
      default:
        int v20 = *(unsigned __int8 *)a1;
        break;
    }
  }
  else
  {
    int v20 = 0;
  }
  return v12 + (v20 | v18) + 1;
}

void sub_1002282AC(char *a1, unsigned int a2, unsigned int a3, uint64_t a4)
{
  uint64_t v6 = *(void *)(*(void *)(a4 + 16) - 8);
  unsigned int v7 = *(_DWORD *)(v6 + 84);
  uint64_t v8 = *(void *)(a4 + 24);
  uint64_t v9 = *(void *)(v8 - 8);
  unsigned int v10 = *(_DWORD *)(v9 + 84);
  uint64_t v11 = *(unsigned __int8 *)(v6 + 80);
  uint64_t v12 = *(void *)(v6 + 64);
  uint64_t v13 = *(unsigned __int8 *)(v9 + 80);
  if (v10 <= v7) {
    unsigned int v14 = *(_DWORD *)(v6 + 84);
  }
  else {
    unsigned int v14 = *(_DWORD *)(v9 + 84);
  }
  size_t v15 = ((v12 + v13 + ((v11 + 8) & ~v11)) & ~v13) + *(void *)(*(void *)(v8 - 8) + 64);
  BOOL v16 = a3 >= v14;
  unsigned int v17 = a3 - v14;
  if (v17 != 0 && v16)
  {
    if (v15 <= 3)
    {
      unsigned int v21 = ((v17 + ~(-1 << (8 * v15))) >> (8 * v15)) + 1;
      if (HIWORD(v21))
      {
        int v18 = 4;
      }
      else if (v21 >= 0x100)
      {
        int v18 = 2;
      }
      else
      {
        int v18 = v21 > 1;
      }
    }
    else
    {
      int v18 = 1;
    }
  }
  else
  {
    int v18 = 0;
  }
  if (v14 < a2)
  {
    unsigned int v19 = ~v14 + a2;
    if (v15 < 4)
    {
      int v20 = (v19 >> (8 * v15)) + 1;
      if (v15)
      {
        int v22 = v19 & ~(-1 << (8 * v15));
        bzero(a1, v15);
        if (v15 == 3)
        {
          *(_WORD *)a1 = v22;
          a1[2] = BYTE2(v22);
        }
        else if (v15 == 2)
        {
          *(_WORD *)a1 = v22;
        }
        else
        {
          *a1 = v22;
        }
      }
    }
    else
    {
      bzero(a1, v15);
      *(_DWORD *)a1 = v19;
      int v20 = 1;
    }
    switch(v18)
    {
      case 1:
        a1[v15] = v20;
        return;
      case 2:
        *(_WORD *)&a1[v15] = v20;
        return;
      case 3:
        goto LABEL_41;
      case 4:
        *(_DWORD *)&a1[v15] = v20;
        return;
      default:
        return;
    }
  }
  switch(v18)
  {
    case 1:
      a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 2:
      *(_WORD *)&a1[v15] = 0;
      if (!a2) {
        return;
      }
      goto LABEL_24;
    case 3:
LABEL_41:
      __break(1u);
      JUMPOUT(0x100228598);
    case 4:
      *(_DWORD *)&a1[v15] = 0;
      goto LABEL_23;
    default:
LABEL_23:
      if (a2)
      {
LABEL_24:
        unint64_t v23 = (unint64_t)&a1[v11 + 8] & ~v11;
        if (v7 >= v10)
        {
          uint64_t v26 = *(void (**)(unint64_t))(v6 + 56);
          v26(v23);
        }
        else
        {
          unint64_t v24 = (v23 + v12 + v13) & ~v13;
          uint64_t v25 = *(void (**)(unint64_t))(v9 + 56);
          v25(v24);
        }
      }
      return;
  }
}

uint64_t sub_1002285C0()
{
  return swift_getWitnessTable();
}

uint64_t sub_10022868C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_1002286D0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  v16[1] = a2;
  uint64_t v4 = *(void *)(a1 + 16);
  sub_100043378(&qword_100B25AA8);
  sub_1007F8070();
  uint64_t v5 = *(void *)(a1 + 24);
  sub_100043378(&qword_100B25AB0);
  sub_1007F8070();
  swift_getTupleTypeMetadata2();
  sub_1007FA060();
  swift_getWitnessTable();
  uint64_t v6 = sub_1007F9CB0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  unsigned int v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)v16 - v11;
  sub_1007F9F20();
  void v16[4] = v4;
  void v16[5] = v5;
  long long v17 = *(_OWORD *)(a1 + 32);
  uint64_t v18 = v2;
  sub_1007F9CA0();
  uint64_t WitnessTable = swift_getWitnessTable();
  sub_1003D2398(v10, v6, WitnessTable);
  unsigned int v14 = *(void (**)(char *, uint64_t))(v7 + 8);
  v14(v10, v6);
  sub_1003D2398(v12, v6, WitnessTable);
  return ((uint64_t (*)(char *, uint64_t))v14)(v12, v6);
}

uint64_t sub_1002288F8@<X0>(uint64_t a1@<X1>, uint64_t a2@<X2>, uint64_t a3@<X3>, uint64_t a4@<X4>, uint64_t a5@<X8>)
{
  uint64_t v59 = a5;
  sub_100043378(&qword_100B25AB0);
  uint64_t v57 = sub_1007F8070();
  uint64_t v58 = *(void *)(v57 - 8);
  uint64_t v9 = __chkstk_darwin(v57);
  char v55 = (char *)v49 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v9);
  uint64_t v56 = (char *)v49 - v11;
  sub_100043378(&qword_100B25AA8);
  uint64_t v12 = sub_1007F8070();
  uint64_t v61 = *(void *)(v12 - 8);
  uint64_t v13 = __chkstk_darwin(v12);
  size_t v15 = (char *)v49 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v13);
  uint64_t v60 = (char *)v49 - v16;
  uint64_t v65 = a1;
  *(void *)&long long v66 = a2;
  v49[1] = a2;
  *((void *)&v66 + 1) = a3;
  uint64_t v67 = a4;
  _OWORD v49[3] = type metadata accessor for ContrastingLeadingTrailingView();
  uint64_t v17 = sub_1007F86A0();
  sub_100228EFC((uint64_t)&v65);
  uint64_t v18 = v65;
  char v19 = v67;
  uint64_t v20 = v68;
  char v21 = BYTE8(v68);
  uint64_t v22 = v70;
  char v23 = v71;
  long long v54 = v66;
  long long v24 = v69;
  uint64_t v65 = v17;
  *(void *)&long long v66 = 0;
  BYTE8(v66) = 1;
  uint64_t v67 = v18;
  long long v68 = v54;
  LOBYTE(v69) = v19;
  *((void *)&v69 + 1) = v20;
  LOBYTE(v7sub_1007E6FC4(2, 18, 1, 0) = v21;
  long long v71 = v24;
  uint64_t v72 = v22;
  LOBYTE(v73) = v23;
  sub_100058D18(&qword_100B25AB8);
  v49[2] = &protocol conformance descriptor for HStack<A>;
  sub_100043334(&qword_100B25AC0, &qword_100B25AB8);
  sub_1007F9690();
  swift_release();
  swift_release();
  v49[0] = &protocol conformance descriptor for _MaskEffect<A>;
  uint64_t v25 = sub_100043334(&qword_100B25AC8, &qword_100B25AA8);
  uint64_t v74 = a3;
  uint64_t v75 = v25;
  uint64_t v51 = v12;
  uint64_t WitnessTable = swift_getWitnessTable();
  uint64_t v50 = v15;
  sub_1003D2398(v15, v12, WitnessTable);
  uint64_t v53 = *(void (**)(char *, uint64_t))(v61 + 8);
  *(void *)&long long v54 = v61 + 8;
  v53(v15, v12);
  uint64_t v26 = sub_1007F86A0();
  sub_100228FB0((uint64_t)&v65);
  uint64_t v27 = v65;
  char v28 = v66;
  uint64_t v29 = *((void *)&v66 + 1);
  char v30 = v67;
  uint64_t v31 = v68;
  char v32 = BYTE8(v68);
  uint64_t v33 = v70;
  uint64_t v34 = v71;
  long long v35 = v69;
  uint64_t v65 = v26;
  *(void *)&long long v66 = 0;
  BYTE8(v66) = 0;
  uint64_t v67 = v27;
  LOBYTE(v68) = v28;
  *((void *)&v68 + 1) = v29;
  LOBYTE(v69) = v30;
  *((void *)&v69 + 1) = v31;
  LOBYTE(v7sub_1007E6FC4(2, 18, 1, 0) = v32;
  long long v71 = v35;
  uint64_t v72 = v33;
  uint64_t v73 = v34;
  sub_100058D18(&qword_100B25AD0);
  sub_100043334(&qword_100B25AD8, &qword_100B25AD0);
  uint64_t v36 = v55;
  sub_1007F9690();
  swift_release();
  swift_release();
  uint64_t v37 = sub_100043334(&qword_100B25AE0, &qword_100B25AB0);
  void v64[2] = a4;
  v64[3] = v37;
  uint64_t v38 = v57;
  uint64_t v39 = swift_getWitnessTable();
  uint64_t v40 = v56;
  sub_1003D2398(v36, v38, v39);
  uint64_t v41 = v58;
  uint64_t v42 = *(void (**)(char *, uint64_t))(v58 + 8);
  char v43 = v36;
  v42(v36, v38);
  uint64_t v44 = v50;
  uint64_t v45 = v60;
  uint64_t v46 = v51;
  (*(void (**)(char *, char *, uint64_t))(v61 + 16))(v50, v60, v51);
  uint64_t v65 = (uint64_t)v44;
  (*(void (**)(char *, char *, uint64_t))(v41 + 16))(v43, v40, v38);
  *(void *)&long long v66 = v43;
  v64[0] = v46;
  v64[1] = v38;
  uint64_t v62 = WitnessTable;
  uint64_t v63 = v39;
  sub_1003D23D4((uint64_t)&v65, 2uLL, (uint64_t)v64);
  v42(v40, v38);
  uint64_t v47 = (uint64_t (*)(char *, uint64_t))v53;
  v53(v45, v46);
  v42(v43, v38);
  return v47(v44, v46);
}

double sub_100228EFC@<D0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1007F9950();
  uint64_t KeyPath = swift_getKeyPath();
  sub_1007F9F10();
  sub_1007F7CA0();
  *(void *)a1 = KeyPath;
  *(void *)(a1 + 8) = v2;
  *(void *)(a1 + 16) = v5;
  *(unsigned char *)(a1 + 24) = v6;
  *(void *)(a1 + 32) = v7;
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v8;
  double result = *(double *)&v9;
  *(_OWORD *)(a1 + 48) = v9;
  *(void *)(a1 + 64) = 0;
  *(unsigned char *)(a1 + 72) = 1;
  return result;
}

uint64_t sub_100228FB0@<X0>(uint64_t a1@<X8>)
{
  sub_1007F9F10();
  sub_1007F7CA0();
  uint64_t v2 = sub_1007F9950();
  uint64_t result = swift_getKeyPath();
  *(void *)a1 = 0;
  *(unsigned char *)(a1 + 8) = 1;
  *(void *)(a1 + 16) = v4;
  *(unsigned char *)(a1 + 24) = v5;
  *(void *)(a1 + 32) = v6;
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v7;
  *(void *)(a1 + 48) = v8;
  *(void *)(a1 + 56) = v9;
  *(void *)(a1 + 64) = result;
  *(void *)(a1 + 72) = v2;
  return result;
}

uint64_t sub_100229070@<X0>(uint64_t a1@<X8>)
{
  return sub_1002288F8(v1[2], v1[3], v1[4], v1[5], a1);
}

uint64_t sub_100229088()
{
  sub_100043378(&qword_100B25AA8);
  sub_1007F8070();
  sub_100043378(&qword_100B25AB0);
  sub_1007F8070();
  swift_getTupleTypeMetadata2();
  sub_1007FA060();
  swift_getWitnessTable();
  sub_1007F9CB0();

  return swift_getWitnessTable();
}

Swift::Int sub_100229164()
{
  return sub_1007FF600();
}

void sub_1002291A8()
{
}

Swift::Int sub_1002291D0()
{
  return sub_1007FF600();
}

uint64_t sub_100229210()
{
  uint64_t v1 = sub_100058D18((uint64_t *)&unk_100B294B0);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100058D18(&qword_100B25BB0);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058D18(&qword_100B25BB8);
  swift_allocObject();
  uint64_t v8 = sub_1007F77A0();
  *(void *)(v0 + 16) = v8;
  *(void *)(v0 + 24) = &_swiftEmptySetSingleton;
  v11[0] = v8;
  sub_10007A6D0();
  swift_retain();
  id v12 = (id)sub_1007FE750();
  uint64_t v9 = sub_1007FE700();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v9 - 8) + 56))(v3, 1, 1, v9);
  sub_100043334(&qword_100B25BC0, &qword_100B25BB8);
  sub_100229824();
  sub_1007F7970();
  sub_10022987C((uint64_t)v3);

  swift_release();
  sub_100043334(&qword_100B25BC8, &qword_100B25BB0);
  sub_1007F79C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  swift_beginAccess();
  sub_1007F7720();
  swift_endAccess();
  swift_release();
  return v0;
}

void sub_1002294C4()
{
  id v0 = [self sceneManager];
  void v2[4] = sub_100229590;
  void v2[5] = 0;
  v2[0] = _NSConcreteStackBlock;
  v2[1] = 1107296256;
  v2[2] = sub_10000B4B4;
  v2[3] = &unk_100A4EB98;
  uint64_t v1 = _Block_copy(v2);
  [v0 requestPrimaryScene:v1];
  _Block_release(v1);
}

void sub_100229590(void *a1)
{
  uint64_t v2 = self;
  id v3 = [a1 bk_window];
  id v4 = [v2 jsa_topMostViewControllerForWindow:v3];

  [v4 dismissViewControllerAnimated:1 completion:0];
}

uint64_t sub_100229634()
{
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t type metadata accessor for ReportIssueRouter()
{
  return self;
}

uint64_t _s13RoutingActionOwet(unsigned int *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if ((a2 + 1) >= 0x10000) {
    int v2 = 4;
  }
  else {
    int v2 = 2;
  }
  if ((a2 + 1) < 0x100) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4) {
    return *a1;
  }
  if (v3 == 2) {
    return *(unsigned __int16 *)a1;
  }
  return *(unsigned __int8 *)a1;
}

unsigned char *_s13RoutingActionOwst(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x100229788);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *_s13RoutingActionOMa()
{
  return &_s13RoutingActionON;
}

unint64_t sub_1002297C4()
{
  unint64_t result = qword_100B25B90;
  if (!qword_100B25B90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25B90);
  }
  return result;
}

uint64_t sub_100229818()
{
  return swift_retain();
}

unint64_t sub_100229824()
{
  unint64_t result = qword_100B297C0;
  if (!qword_100B297C0)
  {
    sub_10007A6D0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B297C0);
  }
  return result;
}

uint64_t sub_10022987C(uint64_t a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B294B0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

void sub_1002298DC(unint64_t a1)
{
  id v3 = [v1 navigationBar];
  unsigned int v4 = [v3 prefersLargeTitles];

  if (v4)
  {
    id v5 = [v1 viewControllers];
    sub_100229A6C();
    uint64_t v6 = sub_1007FDFF0();

    if ((v6 & 0xC000000000000001) == 0)
    {
      if ((a1 & 0x8000000000000000) != 0)
      {
        __break(1u);
      }
      else if (*(void *)((v6 & 0xFFFFFFFFFFFFFF8) + 0x10) > a1)
      {
        id v7 = *(id *)(v6 + 8 * a1 + 32);
LABEL_6:
        uint64_t v8 = v7;
        swift_bridgeObjectRelease();
        id v9 = [v8 navigationItem];
        id v10 = [v9 largeTitleDisplayMode];

        if (v10)
        {
          id v11 = [v8 navigationItem];
          [v11 largeTitleDisplayMode];

          return;
        }
        if (!a1)
        {

          return;
        }
        if (!__OFSUB__(a1, 1))
        {
          sub_1002298DC(a1 - 1);

          return;
        }
        goto LABEL_16;
      }
      __break(1u);
LABEL_16:
      __break(1u);
      return;
    }
    id v7 = (id)sub_1007FF120();
    goto LABEL_6;
  }
}

unint64_t sub_100229A6C()
{
  unint64_t result = qword_100B2D950;
  if (!qword_100B2D950)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100B2D950);
  }
  return result;
}

BOOL sub_100229AAC(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2) & 1) == 0;
}

Swift::Int sub_100229AC4()
{
  Swift::UInt v1 = *v0;
  sub_1007FF5C0();
  sub_1007FF5D0(v1);
  return sub_1007FF600();
}

void sub_100229B0C()
{
  sub_1007FF5D0(*v0);
}

Swift::Int sub_100229B38()
{
  Swift::UInt v1 = *v0;
  sub_1007FF5C0();
  sub_1007FF5D0(v1);
  return sub_1007FF600();
}

uint64_t sub_100229B7C(float a1)
{
  if (qword_100B22490 != -1) {
    swift_once();
  }
  uint64_t v2 = (void *)qword_100B25BD0;
  Class isa = sub_1007FE1F0().super.super.isa;
  id v4 = [v2 stringForObjectValue:isa];

  if (v4)
  {
    uint64_t v5 = sub_1007FDC70();
  }
  else
  {
    sub_100058D18((uint64_t *)&unk_100B25EC0);
    uint64_t v6 = swift_allocObject();
    *(_OWORD *)(v6 + 16) = xmmword_10085CCE0;
    *(void *)(v6 + 56) = &type metadata for Float;
    *(void *)(v6 + 64) = &protocol witness table for Float;
    *(float *)(v6 + 32) = a1;
    uint64_t v5 = sub_1007FDCA0();
  }
  v8._countAndFlagsBits = 38851;
  v8._object = (void *)0xA200000000000000;
  sub_1007FDDE0(v8);
  return v5;
}

uint64_t sub_100229CA4(float a1)
{
  uint64_t v2 = sub_1007F2CE0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v4 = __chkstk_darwin(v2);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  Swift::String v8 = (char *)v26 - v7;
  uint64_t v9 = sub_1007FDBF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  size_t v15 = (char *)v26 - v14;
  if (a1 == 0.5 || a1 == 1.0 || a1 == 1.5 || a1 == 2.0 || a1 == 3.0)
  {
    sub_1007FDB70();
    sub_1007F2C80();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    [self bundleForClass:ObjCClassFromMetadata];
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    uint64_t v17 = sub_1007FDCF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  }
  else
  {
    sub_1007FDB70();
    sub_1007F2C80();
    (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
    type metadata accessor for BundleFinder();
    uint64_t v19 = swift_getObjCClassFromMetadata();
    id v20 = [self bundleForClass:v19];
    (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v2);
    sub_1007FDCF0();
    (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v2);
    (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
    sub_100058D18((uint64_t *)&unk_100B25EC0);
    uint64_t v21 = swift_allocObject();
    v26[0] = xmmword_10085CCE0;
    *(_OWORD *)(v21 + 16) = xmmword_10085CCE0;
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = v26[0];
    *(void *)(v22 + 56) = &type metadata for Float;
    *(void *)(v22 + 64) = &protocol witness table for Float;
    *(float *)(v22 + 32) = a1;
    uint64_t v23 = sub_1007FDCA0();
    uint64_t v25 = v24;
    *(void *)(v21 + 56) = &type metadata for String;
    *(void *)(v21 + 64) = sub_10005FBC0();
    *(void *)(v21 + 32) = v23;
    *(void *)(v21 + 4sub_1007E6FC4(2, 18, 1, 0) = v25;
    uint64_t v17 = sub_1007FDCA0();
    swift_bridgeObjectRelease();
  }
  return v17;
}

id sub_10022A3FC()
{
  id v0 = [objc_allocWithZone((Class)NSNumberFormatter) init];
  [v0 setNumberStyle:1];
  [v0 setMaximumFractionDigits:1];
  [v0 setMinimumFractionDigits:0];
  id result = [v0 setUsesGroupingSeparator:0];
  qword_100B25BD0 = (uint64_t)v0;
  return result;
}

double sub_10022A488()
{
  return sub_10022AAE8();
}

BOOL sub_10022A49C(float *a1, float *a2)
{
  return *a1 == *a2;
}

uint64_t sub_10022A4B0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022A524()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022A598()
{
  return sub_10022AA68();
}

uint64_t sub_10022A5AC()
{
  return sub_10022AA68();
}

uint64_t (*sub_10022A5C0())()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  if (!v2) {
    return 0;
  }
  uint64_t v0 = swift_allocObject();
  *(void *)(v0 + 16) = v2;
  *(void *)(v0 + 24) = v3;
  return sub_10022DED8;
}

double sub_10022A678()
{
  return sub_10022AAE8();
}

double sub_10022A68C()
{
  return sub_10022AAE8();
}

uint64_t sub_10022A6A0()
{
  return sub_10022AA68();
}

uint64_t sub_10022A6B4()
{
  return sub_10022A7F0();
}

uint64_t sub_10022A6C8()
{
  return sub_10022A870();
}

uint64_t sub_10022A6DC()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022A750()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A764()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A778()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A78C()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A7A0()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A7B4()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A7C8()
{
  return sub_10022B0F4();
}

uint64_t sub_10022A7DC()
{
  return sub_10022A7F0();
}

uint64_t sub_10022A7F0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022A85C()
{
  return sub_10022A870();
}

uint64_t sub_10022A870()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022A8E0()
{
  return sub_10022B0F4();
}

double sub_10022A8F4()
{
  return sub_10022AAE8();
}

double sub_10022A908()
{
  return sub_10022AAE8();
}

uint64_t sub_10022A91C()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

double sub_10022A990()
{
  return sub_10022AAE8();
}

double sub_10022A9A4()
{
  return sub_10022AAE8();
}

double sub_10022A9B8()
{
  return sub_10022AAE8();
}

double sub_10022A9CC()
{
  return sub_10022AAE8();
}

float sub_10022A9E0()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022AA54()
{
  return sub_10022AA68();
}

uint64_t sub_10022AA68()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

double sub_10022AAD4()
{
  return sub_10022AAE8();
}

double sub_10022AAE8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

float sub_10022AB54()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022ABC8()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();

  return swift_release();
}

uint64_t sub_10022AC40()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022ACB4()
{
  swift_bridgeObjectRelease();

  return swift_deallocClassInstance();
}

Swift::Int sub_10022ACEC()
{
  sub_1007FF5C0();
  swift_bridgeObjectRetain();
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  if ((*(void *)(v0 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v1 = *(void *)(v0 + 32);
  }
  else {
    Swift::UInt64 v1 = 0;
  }
  sub_1007FF5F0(v1);
  return sub_1007FF600();
}

uint64_t sub_10022AD64@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007FF100();
  *a1 = result;
  return result;
}

uint64_t sub_10022AD90()
{
  return sub_10022A7F0();
}

Swift::Int sub_10022ADA4()
{
  return sub_10022ACEC();
}

void sub_10022ADC8()
{
  uint64_t v1 = *v0;
  swift_bridgeObjectRetain();
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  if ((*(void *)(v1 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v1 + 32);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1007FF5F0(v2);
}

Swift::Int sub_10022AE2C()
{
  uint64_t v1 = *v0;
  sub_1007FF5C0();
  swift_bridgeObjectRetain();
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  if ((*(void *)(v1 + 32) & 0x7FFFFFFFFFFFFFFFLL) != 0) {
    Swift::UInt64 v2 = *(void *)(v1 + 32);
  }
  else {
    Swift::UInt64 v2 = 0;
  }
  sub_1007FF5F0(v2);
  return sub_1007FF600();
}

BOOL sub_10022AEA4(uint64_t a1, uint64_t a2)
{
  double v2 = *(double *)(*(void *)a1 + 32);
  double v3 = *(double *)(*(void *)a2 + 32);
  if (*(void *)(*(void *)a1 + 16) == *(void *)(*(void *)a2 + 16)
    && *(void *)(*(void *)a1 + 24) == *(void *)(*(void *)a2 + 24))
  {
    return v2 == v3;
  }
  char v5 = sub_1007FF470();
  BOOL result = 0;
  if (v5) {
    return v2 == v3;
  }
  return result;
}

uint64_t sub_10022AF00()
{
  return sub_10022A7F0();
}

Swift::Int sub_10022AF14()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1007FF5C0();
  swift_bridgeObjectRetain();
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  sub_1007FF5D0((Swift::UInt)[v1 hash]);
  return sub_1007FF600();
}

void sub_10022AF94()
{
  uint64_t v1 = *(void **)(v0 + 16);
  swift_bridgeObjectRetain();
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  sub_1007FF5D0((Swift::UInt)[v1 hash]);
}

Swift::Int sub_10022AFFC()
{
  uint64_t v1 = *(void **)(v0 + 16);
  sub_1007FF5C0();
  swift_bridgeObjectRetain();
  sub_1007FDDA0();
  swift_bridgeObjectRelease();
  sub_1007FF5D0((Swift::UInt)[v1 hash]);
  return sub_1007FF600();
}

id sub_10022B078(void *a1, void *a2)
{
  double v2 = (void *)a1[2];
  uint64_t v3 = a2[2];
  if (*a1 == *a2 && a1[1] == a2[1]) {
    return [v2 isEqual:v3];
  }
  char v5 = sub_1007FF470();
  id result = 0;
  if (v5) {
    return [v2 isEqual:v3];
  }
  return result;
}

uint64_t sub_10022B0E0()
{
  return sub_10022B0F4();
}

uint64_t sub_10022B0F4()
{
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  return v1;
}

uint64_t sub_10022B160()
{
  uint64_t v0 = sub_1007F2CE0();
  uint64_t v30 = *(void *)(v0 - 8);
  uint64_t v1 = __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v28 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v1);
  char v5 = (char *)&v28 - v4;
  uint64_t v6 = sub_1007FDBF0();
  uint64_t v29 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v28 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v11 = (char *)&v28 - v10;
  swift_getKeyPath();
  swift_getKeyPath();
  sub_1007F7850();
  swift_release();
  swift_release();
  sub_10022DF20();
  char v12 = sub_1007FE2B0();
  swift_bridgeObjectRelease();
  if ((v12 & 1) != 0
    && (swift_getKeyPath(),
        swift_getKeyPath(),
        sub_1007F7850(),
        swift_release(),
        swift_release(),
        char v13 = sub_1007FE2B0(),
        swift_bridgeObjectRelease(),
        (v13 & 1) != 0))
  {
    sub_1007FDB70();
    sub_1007F2C80();
    uint64_t v14 = v29;
    (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v9, v11, v6);
    type metadata accessor for BundleFinder();
    uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
    id v16 = [self bundleForClass:ObjCClassFromMetadata];
    uint64_t v17 = v30;
    (*(void (**)(char *, char *, uint64_t))(v30 + 16))(v3, v5, v0);
    sub_1007FDCF0();
    (*(void (**)(char *, uint64_t))(v17 + 8))(v5, v0);
    (*(void (**)(char *, uint64_t))(v14 + 8))(v11, v6);
    sub_100058D18((uint64_t *)&unk_100B25EC0);
    uint64_t v18 = swift_allocObject();
    *(_OWORD *)(v18 + 16) = xmmword_10085FEF0;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1007F7850();
    swift_release();
    swift_release();
    uint64_t v19 = v31;
    uint64_t v20 = v32;
    *(void *)(v18 + 56) = &type metadata for String;
    unint64_t v21 = sub_10005FBC0();
    *(void *)(v18 + 64) = v21;
    *(void *)(v18 + 32) = v19;
    *(void *)(v18 + 4sub_1007E6FC4(2, 18, 1, 0) = v20;
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1007F7850();
    swift_release();
    swift_release();
    uint64_t v22 = v31;
    uint64_t v23 = v32;
    *(void *)(v18 + 96) = &type metadata for String;
    *(void *)(v18 + 104) = v21;
    *(void *)(v18 + 72) = v22;
    *(void *)(v18 + 8sub_1007E6FC4(2, 18, 1, 0) = v23;
    uint64_t v24 = sub_1007FDCA0();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_getKeyPath();
    swift_getKeyPath();
    sub_1007F7850();
    swift_release();
    swift_release();
    char v25 = sub_1007FE2B0();
    swift_bridgeObjectRelease();
    if ((v25 & 1) != 0
      || (swift_getKeyPath(),
          swift_getKeyPath(),
          sub_1007F7850(),
          swift_release(),
          swift_release(),
          char v26 = sub_1007FE2B0(),
          swift_bridgeObjectRelease(),
          (v26 & 1) != 0))
    {
      swift_getKeyPath();
      swift_getKeyPath();
      sub_1007F7850();
      swift_release();
      swift_release();
      return v31;
    }
    else
    {
      return 0;
    }
  }
  return v24;
}

id sub_10022B71C()
{
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v125 = sub_100058D18((uint64_t *)&unk_100B29830);
  uint64_t v124 = *(void *)(v125 - 8);
  __chkstk_darwin(v125);
  uint64_t v123 = (char *)&v94 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v122 = sub_100058D18((uint64_t *)&unk_100B25EE0);
  uint64_t v121 = *(void *)(v122 - 8);
  __chkstk_darwin(v122);
  uint64_t v120 = (char *)&v94 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v119 = sub_100058D18(&qword_100B29880);
  uint64_t v118 = *(void *)(v119 - 8);
  __chkstk_darwin(v119);
  unint64_t v117 = (char *)&v94 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v116 = sub_100058D18(&qword_100B25EF0);
  uint64_t v115 = *(void *)(v116 - 8);
  __chkstk_darwin(v116);
  uint64_t v114 = (char *)&v94 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v113 = sub_100058D18(&qword_100B25EF8);
  uint64_t v112 = *(void *)(v113 - 8);
  __chkstk_darwin(v113);
  uint64_t v111 = (char *)&v94 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v110 = sub_100058D18(&qword_100B25F00);
  uint64_t v109 = *(void *)(v110 - 8);
  __chkstk_darwin(v110);
  uint64_t v108 = (char *)&v94 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v107 = sub_100058D18(&qword_100B25F08);
  uint64_t v106 = *(void *)(v107 - 8);
  __chkstk_darwin(v107);
  uint64_t v105 = (char *)&v94 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v131 = sub_100058D18((uint64_t *)&unk_100B25F10);
  uint64_t v138 = *(void *)(v131 - 8);
  __chkstk_darwin(v131);
  uint64_t v104 = (char *)&v94 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v103 = sub_100058D18((uint64_t *)&unk_100B298A0);
  uint64_t v102 = *(void *)(v103 - 8);
  __chkstk_darwin(v103);
  uint64_t v101 = (char *)&v94 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v133 = sub_100058D18((uint64_t *)&unk_100B25F20);
  uint64_t v135 = *(void *)(v133 - 8);
  __chkstk_darwin(v133);
  uint64_t v99 = (char *)&v94 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v132 = sub_100058D18(&qword_100B33660);
  uint64_t v134 = *(void *)(v132 - 8);
  __chkstk_darwin(v132);
  uint64_t v129 = (char *)&v94 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v97 = (void (*)(char *, char *, uint64_t))sub_100058D18((uint64_t *)&unk_100B25F30);
  uint64_t v96 = *((void *)v97 - 1);
  __chkstk_darwin(v97);
  uint64_t v95 = (char *)&v94 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v130 = sub_100058D18((uint64_t *)&unk_100B29860);
  uint64_t v137 = *(void *)(v130 - 8);
  __chkstk_darwin(v130);
  uint64_t v136 = (char *)&v94 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v100 = (void (*)(char *, char *, uint64_t))sub_100058D18(&qword_100B25F40);
  uint64_t v14 = *((void *)v100 - 1);
  __chkstk_darwin(v100);
  id v16 = (char *)&v94 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = sub_100058D18(&qword_100B25F48);
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v20 = (char *)&v94 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v21 = sub_100058D18((uint64_t *)&unk_100B25F50);
  uint64_t v127 = v21;
  uint64_t v22 = *(void *)(v21 - 8);
  __chkstk_darwin(v21);
  uint64_t v24 = (char *)&v94 - ((v23 + 15) & 0xFFFFFFFFFFFFFFF0);
  char v25 = &v0[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__absolutePlayedInterval];
  *(void *)&v141[0] = 0;
  char v26 = v0;
  sub_1007F7810();
  uint64_t v128 = *(void (**)(char *, char *, uint64_t))(v22 + 32);
  v128(v25, v24, v21);
  uint64_t v27 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__artwork];
  *(void *)&v141[0] = 0;
  sub_100058D18(&qword_100B25D50);
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v18 + 32))(v27, v20, v17);
  uint64_t v28 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__assetID];
  v141[0] = 0uLL;
  sub_100058D18(&qword_100B25D60);
  sub_1007F7810();
  (*(void (**)(char *, char *, void *))(v14 + 32))(v28, v16, v100);
  uint64_t v29 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__audiobookTitle];
  *(void *)&v141[0] = 0;
  *((void *)&v141[0] + 1) = 0xE000000000000000;
  uint64_t v30 = v136;
  sub_1007F7810();
  uint64_t v31 = v137 + 32;
  uint64_t v32 = *(void (**)(char *, char *, uint64_t))(v137 + 32);
  uint64_t v33 = v130;
  v32(v29, v30, v130);
  uint64_t v34 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__authorName];
  *(void *)&v141[0] = 0;
  *((void *)&v141[0] + 1) = 0xE000000000000000;
  sub_1007F7810();
  uint64_t v35 = v33;
  v32(v34, v30, v33);
  uint64_t v137 = v31;
  uint64_t v100 = v32;
  uint64_t v36 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__backgroundColorClosure];
  v141[0] = 0uLL;
  sub_100058D18(&qword_100B25D78);
  uint64_t v37 = v95;
  sub_1007F7810();
  (*(void (**)(char *, char *, void *))(v96 + 32))(v36, v37, v97);
  uint64_t v38 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__bufferedProportion];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  uint64_t v39 = v127;
  uint64_t v98 = v22 + 32;
  uint64_t v40 = v128;
  v128(v38, v24, v127);
  uint64_t v41 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterPlayedProportion];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  v40(v41, v24, v39);
  uint64_t v42 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapterTitle];
  *(void *)&v141[0] = 0;
  *((void *)&v141[0] + 1) = 0xE000000000000000;
  char v43 = v136;
  sub_1007F7810();
  v32(v42, v43, v35);
  uint64_t v44 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__currentChapterIndex];
  *(void *)&v141[0] = 0;
  uint64_t v45 = v129;
  sub_1007F7810();
  uint64_t v46 = *(void (**)(char *, char *, uint64_t))(v134 + 32);
  v134 += 32;
  uint64_t v97 = v46;
  v46(v44, v45, v132);
  uint64_t v47 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__downloadProgress];
  *(void *)&v141[0] = 0;
  BYTE8(v141[0]) = 1;
  uint64_t v96 = sub_100058D18(&qword_100B25D90);
  uint64_t v48 = v99;
  sub_1007F7810();
  uint64_t v49 = *(char **)(v135 + 32);
  v135 += 32;
  uint64_t v95 = v49;
  ((void (*)(char *, char *, uint64_t))v49)(v47, v48, v133);
  uint64_t v50 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__downloadState];
  LOBYTE(v141[0]) = 3;
  sub_100058D18((uint64_t *)&unk_100B25DA0);
  uint64_t v51 = v101;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v102 + 32))(v50, v51, v103);
  uint64_t v52 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isFirstEverLaunch];
  LOBYTE(v141[0]) = 0;
  uint64_t v53 = v104;
  sub_1007F7810();
  uint64_t v54 = v138 + 32;
  char v55 = *(void (**)(char *, char *, uint64_t))(v138 + 32);
  uint64_t v56 = v131;
  v55(v52, v53, v131);
  uint64_t v57 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isLoadingResources];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v57, v53, v56);
  uint64_t v58 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPlaying];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v58, v53, v56);
  uint64_t v59 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isPreview];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v59, v53, v56);
  uint64_t v60 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isScrubbing];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v60, v53, v56);
  uint64_t v61 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isSkipping];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v61, v53, v56);
  uint64_t v62 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isStalling];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v62, v53, v56);
  uint64_t v138 = v54;
  uint64_t v63 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__listeningSessionStartChapterIndex];
  *(void *)&v141[0] = 0;
  uint64_t v64 = v129;
  sub_1007F7810();
  v97(v63, v64, v132);
  uint64_t v65 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__listeningSessionStartTimeProportion];
  *(void *)&v141[0] = 0;
  BYTE8(v141[0]) = 1;
  sub_1007F7810();
  ((void (*)(char *, char *, uint64_t))v95)(v65, v48, v133);
  long long v66 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__multipleRoutes];
  LOBYTE(v141[0]) = 1;
  sub_1007F7810();
  v55(v66, v53, v56);
  uint64_t v67 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipBackwardInterval];
  *(void *)&v141[0] = 0x402E000000000000;
  sub_1007F7810();
  uint64_t v68 = v127;
  long long v69 = v128;
  v128(v67, v24, v127);
  uint64_t v70 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skipForwardInterval];
  *(void *)&v141[0] = 0x402E000000000000;
  sub_1007F7810();
  v69(v70, v24, v68);
  long long v71 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playButtonState];
  LOBYTE(v141[0]) = 0;
  uint64_t v72 = v105;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v106 + 32))(v71, v72, v107);
  uint64_t v73 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playedInterval];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  v69(v73, v24, v68);
  uint64_t v74 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__skippingCumulativeDelta];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  v69(v74, v24, v68);
  uint64_t v75 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerInitialDuration];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  v69(v75, v24, v68);
  char v76 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerRemainingTime];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  v69(v76, v24, v68);
  uint64_t v77 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__playbackRate];
  LODWORD(v141[0]) = 0;
  unsigned __int8 v78 = v108;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v109 + 32))(v77, v78, v110);
  uint64_t v79 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__widestRateString];
  *(void *)&v141[0] = 0;
  *((void *)&v141[0] + 1) = 0xE000000000000000;
  unint64_t v80 = v136;
  sub_1007F7810();
  v100(v79, v80, v130);
  uint64_t v81 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__toPlayInterval];
  *(void *)&v141[0] = 0;
  sub_1007F7810();
  v69(v81, v24, v68);
  uint64_t v82 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__volume];
  LODWORD(v141[0]) = 1065353216;
  uint64_t v83 = v111;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v112 + 32))(v82, v83, v113);
  uint64_t v84 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__buyButtonProvider];
  uint64_t v142 = 0;
  memset(v141, 0, sizeof(v141));
  sub_10022DF74((uint64_t)v141, (uint64_t)v140);
  sub_100058D18(&qword_100B25DD0);
  uint64_t v85 = v114;
  sub_1007F7810();
  sub_10022DFDC((uint64_t)v141);
  (*(void (**)(char *, char *, uint64_t))(v115 + 32))(v84, v85, v116);
  uint64_t v86 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__sleepTimerSelectedOption];
  *(void *)&v141[0] = 0;
  uint64_t v87 = v117;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v118 + 32))(v86, v87, v119);
  uint64_t v88 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__chapters];
  *(void *)&v141[0] = _swiftEmptyArrayStorage;
  sub_100058D18(&qword_100B25DE8);
  uint64_t v89 = v120;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v121 + 32))(v88, v89, v122);
  uint64_t v90 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__supplementalContents];
  *(void *)&v141[0] = _swiftEmptyArrayStorage;
  sub_100058D18(&qword_100B294A0);
  uint64_t v91 = v123;
  sub_1007F7810();
  (*(void (**)(char *, char *, uint64_t))(v124 + 32))(v90, v91, v125);
  uint64_t v92 = &v26[OBJC_IVAR____TtC5Books28AudiobookNowPlayingViewModel__isSG];
  LOBYTE(v141[0]) = 0;
  sub_1007F7810();
  v55(v92, v53, v131);

  v139.receiver = v26;
  v139.super_class = ObjectType;
  return [super init];
}

id AudiobookNowPlayingFullscreenTouchViewController.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)swift_getObjectType();
  return [super dealloc];
}

uint64_t sub_10022D318()
{
  return type metadata accessor for AudiobookNowPlayingViewModel();
}

uint64_t type metadata accessor for AudiobookNowPlayingViewModel()
{
  uint64_t result = qword_100B25D30;
  if (!qword_100B25D30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10022D36C()
{
  sub_10022D8B8(319, &qword_100B25D40);
  if (v0 <= 0x3F)
  {
    sub_10022D900(319, (unint64_t *)&qword_100B25D48, &qword_100B25D50);
    if (v1 <= 0x3F)
    {
      sub_10022D900(319, &qword_100B25D58, &qword_100B25D60);
      if (v2 <= 0x3F)
      {
        sub_10022D8B8(319, &qword_100B25D68);
        if (v3 <= 0x3F)
        {
          sub_10022D900(319, &qword_100B25D70, &qword_100B25D78);
          if (v4 <= 0x3F)
          {
            sub_10022D8B8(319, (unint64_t *)&qword_100B25D80);
            if (v5 <= 0x3F)
            {
              sub_10022D900(319, &qword_100B25D88, &qword_100B25D90);
              if (v6 <= 0x3F)
              {
                sub_10022D900(319, &qword_100B25D98, (uint64_t *)&unk_100B25DA0);
                if (v7 <= 0x3F)
                {
                  sub_10022D8B8(319, (unint64_t *)&qword_100B3DCA0);
                  if (v8 <= 0x3F)
                  {
                    sub_10022D8B8(319, &qword_100B25DB0);
                    if (v9 <= 0x3F)
                    {
                      sub_10022D8B8(319, &qword_100B25DB8);
                      if (v10 <= 0x3F)
                      {
                        sub_10022D8B8(319, &qword_100B25DC0);
                        if (v11 <= 0x3F)
                        {
                          sub_10022D900(319, (unint64_t *)&qword_100B25DC8, &qword_100B25DD0);
                          if (v12 <= 0x3F)
                          {
                            sub_10022D8B8(319, &qword_100B25DD8);
                            if (v13 <= 0x3F)
                            {
                              sub_10022D900(319, &qword_100B25DE0, &qword_100B25DE8);
                              if (v14 <= 0x3F)
                              {
                                sub_10022D900(319, (unint64_t *)&unk_100B25DF0, &qword_100B294A0);
                                if (v15 <= 0x3F) {
                                  swift_updateClassMetadata2();
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
}

void sub_10022D8B8(uint64_t a1, unint64_t *a2)
{
  if (!*a2)
  {
    unint64_t v3 = sub_1007F7880();
    if (!v4) {
      atomic_store(v3, a2);
    }
  }
}

void sub_10022D900(uint64_t a1, unint64_t *a2, uint64_t *a3)
{
  if (!*a2)
  {
    sub_100043378(a3);
    unint64_t v4 = sub_1007F7880();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

uint64_t type metadata accessor for AudiobookNowPlayingViewModel.Chapter()
{
  return self;
}

ValueMetadata *type metadata accessor for AudiobookNowPlaying()
{
  return &type metadata for AudiobookNowPlaying;
}

uint64_t destroy for AudiobookNowPlayingViewModel.SupplementalContent()
{
  swift_bridgeObjectRelease();

  return swift_unknownObjectRelease();
}

void *_s5Books28AudiobookNowPlayingViewModelC19SupplementalContentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_unknownObjectRetain();
  return a1;
}

void *assignWithCopy for AudiobookNowPlayingViewModel.SupplementalContent(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_unknownObjectRetain();
  swift_unknownObjectRelease();
  return a1;
}

__n128 initializeWithTake for AudiobookNowPlayingViewModel.SupplementalContent(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u64[0] = a2[1].n128_u64[0];
  *a1 = result;
  return result;
}

uint64_t assignWithTake for AudiobookNowPlayingViewModel.SupplementalContent(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_unknownObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for AudiobookNowPlayingViewModel.SupplementalContent(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for AudiobookNowPlayingViewModel.SupplementalContent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlayingViewModel.SupplementalContent()
{
  return &type metadata for AudiobookNowPlayingViewModel.SupplementalContent;
}

ValueMetadata *type metadata accessor for AudiobookNowPlaying.PlaybackRate()
{
  return &type metadata for AudiobookNowPlaying.PlaybackRate;
}

unsigned char *storeEnumTagSinglePayload for AudiobookNowPlaying.ButtonState(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x10022DC3CLL);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

unsigned char *sub_10022DC64(unsigned char *result, char a2)
{
  *__n128 result = a2 & 1;
  return result;
}

ValueMetadata *type metadata accessor for AudiobookNowPlaying.ButtonState()
{
  return &type metadata for AudiobookNowPlaying.ButtonState;
}

unint64_t sub_10022DC84()
{
  unint64_t result = qword_100B25EA8;
  if (!qword_100B25EA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25EA8);
  }
  return result;
}

unint64_t sub_10022DCDC()
{
  unint64_t result = qword_100B25EB0;
  if (!qword_100B25EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25EB0);
  }
  return result;
}

unint64_t sub_10022DD34()
{
  unint64_t result = qword_100B25EB8;
  if (!qword_100B25EB8)
  {
    type metadata accessor for AudiobookNowPlayingViewModel.Chapter();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B25EB8);
  }
  return result;
}

void *sub_10022DD88()
{
  return &protocol witness table for ObjectIdentifier;
}

void *sub_10022DD94()
{
  return &protocol witness table for ObservableObjectPublisher;
}

uint64_t sub_10022DDA0@<X0>(uint64_t *a1@<X8>)
{
  swift_getObjectType();
  uint64_t result = sub_1007F7780();
  *a1 = result;
  return result;
}

uint64_t sub_10022DEA0()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10022DED8()
{
  return sub_1005A8E68(*(void (**)(uint64_t *__return_ptr))(v0 + 16));
}

unint64_t sub_10022DF20()
{
  unint64_t result = qword_100B268F0;
  if (!qword_100B268F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B268F0);
  }
  return result;
}

uint64_t sub_10022DF74(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B25DD0);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10022DFDC(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B25DD0);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_10022E06C()
{
  *(void *)(v1 + 16) = v0;
  return _swift_task_switch(sub_10022E08C, 0, 0);
}

uint64_t sub_10022E08C()
{
  id v1 = [*(id *)(*(void *)(v0 + 16) + 16) activeCookiesForDefaultURL];
  if (!v1) {
    goto LABEL_7;
  }
  uint64_t v2 = v1;
  sub_10022E7C8();
  uint64_t v3 = sub_1007FDA70();

  if (!*(void *)(v3 + 16) || (unint64_t v4 = sub_10005E0B0(0x62615F7078, 0xE500000000000000), (v5 & 1) == 0))
  {
    swift_bridgeObjectRelease();
LABEL_7:
    id v7 = 0;
    goto LABEL_8;
  }
  id v6 = *(id *)(*(void *)(v3 + 56) + 8 * v4);
  swift_bridgeObjectRelease();
  id v7 = [v6 value];
  if (v7)
  {
    uint64_t v8 = sub_1007FDC70();
    uint64_t v10 = v9;

    unint64_t v11 = sub_10022E808(v8, v10);
    swift_bridgeObjectRelease();
    id v7 = (id)sub_10022EAE4((uint64_t)v11);
    uint64_t v15 = v14;
    swift_bridgeObjectRelease();

    goto LABEL_9;
  }

LABEL_8:
  uint64_t v15 = 0;
LABEL_9:
  unint64_t v12 = *(uint64_t (**)(id, uint64_t))(v0 + 8);
  return v12(v7, v15);
}

uint64_t sub_10022E258()
{
  swift_release();
  swift_release();

  return swift_deallocClassInstance();
}

uint64_t sub_10022E2A0()
{
  uint64_t v2 = *v0;
  uint64_t v3 = (void *)swift_task_alloc();
  *(void *)(v1 + 16) = v3;
  void *v3 = v1;
  v3[1] = sub_10022E348;
  v3[2] = v2;
  return _swift_task_switch(sub_10022E08C, 0, 0);
}

uint64_t sub_10022E348(uint64_t a1, uint64_t a2)
{
  uint64_t v10 = *v3;
  uint64_t v6 = swift_task_dealloc();
  uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t))(v10 + 8);
  if (!v2)
  {
    uint64_t v6 = a1;
    uint64_t v7 = a2;
  }
  return v8(v6, v7);
}

uint64_t sub_10022E458(void *a1, void *a2)
{
  uint64_t v2 = a1[2];
  uint64_t v3 = a1[3];
  uint64_t v4 = a2[2];
  uint64_t v5 = a2[3];
  BOOL v6 = *a1 == *a2 && a1[1] == a2[1];
  if (v6 || (char v7 = sub_1007FF470(), result = 0, (v7 & 1) != 0))
  {
    if (v2 == v4 && v3 == v5)
    {
      return 1;
    }
    else
    {
      return sub_1007FF470();
    }
  }
  return result;
}

uint64_t sub_10022E508@<X0>(long long *a1@<X0>, uint64_t *a2@<X1>, uint64_t *a3@<X8>)
{
  char v25 = a2;
  uint64_t v5 = sub_100058D18(&qword_100B26158);
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v21 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = *((void *)a1 + 2);
  uint64_t v10 = *((void *)a1 + 3);
  long long v22 = *a1;
  uint64_t v23 = v9;
  uint64_t v24 = v10;
  sub_1007F5610();
  void v21[2] = 58;
  _OWORD v21[3] = 0xE100000000000000;
  sub_10022ED54();
  sub_10022DF20();
  sub_100043334((unint64_t *)&qword_100B26168, &qword_100B26158);
  sub_1007FE2F0();
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  sub_10022EDA8();
  uint64_t v11 = sub_1007FEE90();
  swift_bridgeObjectRelease();
  if (*(void *)(v11 + 16) == 2)
  {
    swift_bridgeObjectRetain();
    uint64_t v12 = sub_1007FDD40();
    uint64_t v14 = v13;
    uint64_t result = swift_bridgeObjectRelease();
    if (*(void *)(v11 + 16) < 2uLL)
    {
      __break(1u);
    }
    else
    {
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v16 = sub_1007FDD40();
      uint64_t v18 = v17;
      uint64_t result = swift_bridgeObjectRelease();
      *a3 = v12;
      a3[1] = v14;
      a3[2] = v16;
      a3[3] = v18;
    }
  }
  else
  {
    sub_10022EDFC();
    uint64_t v19 = swift_allocError();
    *uint64_t v20 = v11;
    uint64_t result = swift_willThrow();
    uint64_t *v25 = v19;
  }
  return result;
}

uint64_t EditionStringFlatteningService.__deallocating_deinit()
{
  return swift_deallocClassInstance();
}

unint64_t sub_10022E7C8()
{
  unint64_t result = qword_100B26150;
  if (!qword_100B26150)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100B26150);
  }
  return result;
}

void *sub_10022E808(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v6 = sub_100058D18(&qword_100B26158);
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v24 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  *(void *)&long long v26 = a1;
  *((void *)&v26 + 1) = a2;
  sub_1007F5610();
  uint64_t v30 = 0;
  unint64_t v31 = 0xE000000000000000;
  sub_10022ECAC();
  sub_10022DF20();
  sub_100043334((unint64_t *)&qword_100B26168, &qword_100B26158);
  sub_1007FE2F0();
  (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
  sub_10022ED00();
  uint64_t v10 = sub_1007FEE90();
  swift_bridgeObjectRelease();
  int64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v30 = _swiftEmptyArrayStorage;
    sub_100404BF0(0, v11, 0);
    uint64_t v12 = v30;
    uint64_t v24 = v10;
    uint64_t v13 = (uint64_t *)(v10 + 56);
    while (1)
    {
      uint64_t v14 = *(v13 - 1);
      uint64_t v15 = *v13;
      long long v26 = *(_OWORD *)(v13 - 3);
      uint64_t v27 = v14;
      uint64_t v28 = v15;
      swift_bridgeObjectRetain();
      sub_10022E508(&v26, &v32, v29);
      if (v3) {
        break;
      }
      uint64_t v25 = 0;
      swift_bridgeObjectRelease();
      uint64_t v16 = v29[0];
      uint64_t v17 = v29[1];
      uint64_t v19 = v29[2];
      uint64_t v18 = v29[3];
      uint64_t v30 = v12;
      unint64_t v21 = v12[2];
      unint64_t v20 = v12[3];
      if (v21 >= v20 >> 1)
      {
        sub_100404BF0(v20 > 1, v21 + 1, 1);
        uint64_t v12 = v30;
      }
      void v12[2] = v21 + 1;
      long long v22 = &v12[4 * v21];
      v22[4] = v16;
      v22[5] = v17;
      v22[6] = v19;
      v22[7] = v18;
      v13 += 4;
      --v11;
      uint64_t v3 = v25;
      if (!v11)
      {
        swift_bridgeObjectRelease();
        return v12;
      }
    }
    swift_bridgeObjectRelease();
    swift_release();
    swift_bridgeObjectRelease();
  }
  else
  {
    swift_bridgeObjectRelease();
    return _swiftEmptyArrayStorage;
  }
  return v12;
}

uint64_t sub_10022EAE4(uint64_t a1)
{
  int64_t v1 = *(void *)(a1 + 16);
  if (v1)
  {
    sub_100057B2C(0, v1, 0);
    uint64_t v3 = (void **)(a1 + 56);
    do
    {
      uint64_t v4 = (uint64_t)*(v3 - 1);
      uint64_t v5 = *v3;
      uint64_t v13 = (uint64_t)*(v3 - 3);
      uint64_t v14 = (uint64_t)*(v3 - 2);
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      v15._countAndFlagsBits = 58;
      v15._object = (void *)0xE100000000000000;
      sub_1007FDDE0(v15);
      swift_bridgeObjectRetain();
      v16._countAndFlagsBits = v4;
      v16._object = v5;
      sub_1007FDDE0(v16);
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      unint64_t v7 = _swiftEmptyArrayStorage[2];
      unint64_t v6 = _swiftEmptyArrayStorage[3];
      if (v7 >= v6 >> 1) {
        sub_100057B2C(v6 > 1, v7 + 1, 1);
      }
      v3 += 4;
      _swiftEmptyArrayStorage[2] = v7 + 1;
      uint64_t v8 = &_swiftEmptyArrayStorage[2 * v7];
      void v8[4] = v13;
      void v8[5] = v14;
      --v1;
    }
    while (v1);
  }
  sub_100058D18((uint64_t *)&unk_100B27110);
  sub_100043334((unint64_t *)&qword_100B2D430, (uint64_t *)&unk_100B27110);
  uint64_t v9 = sub_1007FDAF0();
  int64_t v11 = v10;
  swift_bridgeObjectRelease();
  v17._countAndFlagsBits = v9;
  v17._object = v11;
  sub_1007FDDE0(v17);
  swift_bridgeObjectRelease();
  v18._countAndFlagsBits = 125;
  v18._object = (void *)0xE100000000000000;
  sub_1007FDDE0(v18);
  return 123;
}

unint64_t sub_10022ECAC()
{
  unint64_t result = qword_100B26160;
  if (!qword_100B26160)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26160);
  }
  return result;
}

unint64_t sub_10022ED00()
{
  unint64_t result = qword_100B33970;
  if (!qword_100B33970)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B33970);
  }
  return result;
}

unint64_t sub_10022ED54()
{
  unint64_t result = qword_100B26170;
  if (!qword_100B26170)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26170);
  }
  return result;
}

unint64_t sub_10022EDA8()
{
  unint64_t result = qword_100B26178;
  if (!qword_100B26178)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26178);
  }
  return result;
}

unint64_t sub_10022EDFC()
{
  unint64_t result = qword_100B26180;
  if (!qword_100B26180)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26180);
  }
  return result;
}

void *initializeBufferWithCopyOfBuffer for ExperimentIDsCookieParser.Errors(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t destroy for ExperimentIDsCookieParser.Errors()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for ExperimentIDsCookieParser.Errors(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *initializeWithTake for ExperimentIDsCookieParser.Errors(void *result, void *a2)
{
  *unint64_t result = *a2;
  return result;
}

void *assignWithTake for ExperimentIDsCookieParser.Errors(void *a1, void *a2)
{
  *a1 = *a2;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentIDsCookieParser.Errors(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 8)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExperimentIDsCookieParser.Errors(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)unint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 8) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)unint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 8) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentIDsCookieParser.Errors()
{
  return &type metadata for ExperimentIDsCookieParser.Errors;
}

uint64_t destroy for ExperimentIDEntry()
{
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

void *initializeWithCopy for ExperimentIDEntry(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  uint64_t v4 = a2[3];
  a1[2] = a2[2];
  a1[3] = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

void *assignWithCopy for ExperimentIDEntry(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  a1[3] = a2[3];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *assignWithTake for ExperimentIDEntry(void *a1, void *a2)
{
  uint64_t v4 = a2[1];
  *a1 = *a2;
  a1[1] = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = a2[3];
  a1[2] = a2[2];
  a1[3] = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for ExperimentIDEntry(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 32)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for ExperimentIDEntry(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 16) = 0;
    *(void *)(result + 24) = 0;
    *(void *)unint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 32) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 32) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for ExperimentIDEntry()
{
  return &type metadata for ExperimentIDEntry;
}

uint64_t sub_10022F16C(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_retain();
  }
  return result;
}

uint64_t destroy for HistoryButton(uint64_t a1)
{
  sub_10022F1DC(*(void *)(a1 + 16), *(unsigned char *)(a1 + 24));
  sub_10022F1DC(*(void *)(a1 + 32), *(unsigned char *)(a1 + 40));
  swift_bridgeObjectRelease();
  swift_release();

  return swift_release();
}

uint64_t sub_10022F1DC(uint64_t a1, char a2)
{
  if ((a2 & 1) == 0) {
    return swift_release();
  }
  return result;
}

uint64_t initializeWithCopy for HistoryButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a2;
  uint64_t v5 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v5;
  uint64_t v6 = *(void *)(a2 + 16);
  char v7 = *(unsigned char *)(a2 + 24);
  id v8 = v4;
  sub_10022F16C(v6, v7);
  *(void *)(a1 + 16) = v6;
  *(unsigned char *)(a1 + 24) = v7;
  uint64_t v9 = *(void *)(a2 + 32);
  char v10 = *(unsigned char *)(a2 + 40);
  sub_10022F16C(v9, v10);
  *(void *)(a1 + 32) = v9;
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v10;
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v12 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v12;
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t assignWithCopy for HistoryButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  uint64_t v5 = *(void **)a2;
  *(void *)a1 = *(void *)a2;
  id v6 = v5;

  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  uint64_t v7 = *(void *)(a2 + 16);
  char v8 = *(unsigned char *)(a2 + 24);
  sub_10022F16C(v7, v8);
  uint64_t v9 = *(void *)(a1 + 16);
  char v10 = *(unsigned char *)(a1 + 24);
  *(void *)(a1 + 16) = v7;
  *(unsigned char *)(a1 + 24) = v8;
  sub_10022F1DC(v9, v10);
  uint64_t v11 = *(void *)(a2 + 32);
  char v12 = *(unsigned char *)(a2 + 40);
  sub_10022F16C(v11, v12);
  uint64_t v13 = *(void *)(a1 + 32);
  char v14 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = v11;
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v12;
  sub_10022F1DC(v13, v14);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v15 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v15;
  swift_retain();
  swift_release();
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  *(void *)(a1 + 96) = *(void *)(a2 + 96);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for HistoryButton(uint64_t a1, long long *a2)
{
  long long v2 = *a2;
  long long v3 = a2[2];
  *(_OWORD *)(a1 + 16) = a2[1];
  *(_OWORD *)(a1 + 32) = v3;
  *(_OWORD *)a1 = v2;
  __n128 result = (__n128)a2[3];
  long long v5 = a2[4];
  long long v6 = a2[6];
  *(_OWORD *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = a2[5];
  *(_OWORD *)(a1 + 96) = v6;
  *(__n128 *)(a1 + 48) = result;
  *(_OWORD *)(a1 + 64) = v5;
  return result;
}

uint64_t assignWithTake for HistoryButton(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void **)a1;
  *(void *)a1 = *(void *)a2;

  char v5 = *(unsigned char *)(a2 + 24);
  uint64_t v6 = *(void *)(a1 + 16);
  char v7 = *(unsigned char *)(a1 + 24);
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  *(unsigned char *)(a1 + 24) = v5;
  sub_10022F1DC(v6, v7);
  char v8 = *(unsigned char *)(a2 + 40);
  uint64_t v9 = *(void *)(a1 + 32);
  char v10 = *(unsigned char *)(a1 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v8;
  sub_10022F1DC(v9, v10);
  uint64_t v11 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v11;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
  swift_release();
  *(_OWORD *)(a1 + 88) = *(_OWORD *)(a2 + 88);
  *(void *)(a1 + 104) = *(void *)(a2 + 104);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for HistoryButton(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 112)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 56);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for HistoryButton(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 104) = 0;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 112) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 56) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 112) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryButton()
{
  return &type metadata for HistoryButton;
}

uint64_t sub_10022F524()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10022F540@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v96 = a1;
  uint64_t v85 = sub_1007F8A80();
  uint64_t v83 = *(void *)(v85 - 8);
  __chkstk_darwin(v85);
  uint64_t v81 = (char *)&v77 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v79 = sub_100058D18(&qword_100B26220);
  uint64_t v4 = *(void *)(v79 - 8);
  __chkstk_darwin(v79);
  uint64_t v6 = (char *)&v77 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v78 = sub_100058D18(&qword_100B26210);
  __chkstk_darwin(v78);
  char v8 = (char *)&v77 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v80 = sub_100058D18(&qword_100B261F8);
  __chkstk_darwin(v80);
  char v10 = (char *)&v77 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v86 = sub_100058D18(&qword_100B26240);
  uint64_t v84 = *(void *)(v86 - 8);
  __chkstk_darwin(v86);
  uint64_t v82 = (char *)&v77 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v88 = sub_100058D18(&qword_100B261E0);
  __chkstk_darwin(v88);
  uint64_t v87 = (char *)&v77 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v92 = sub_100058D18(&qword_100B26248);
  uint64_t v90 = *(void *)(v92 - 8);
  __chkstk_darwin(v92);
  uint64_t v89 = (char *)&v77 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v94 = sub_100058D18(&qword_100B261D8);
  uint64_t v14 = __chkstk_darwin(v94);
  uint64_t v91 = (char *)&v77 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v16 = __chkstk_darwin(v14);
  uint64_t v93 = (char *)&v77 - v17;
  __chkstk_darwin(v16);
  uint64_t v95 = (char *)&v77 - v18;
  long long v102 = *(_OWORD *)(v1 + 88);
  unint64_t v103 = *(void *)(v1 + 104);
  long long v97 = *(_OWORD *)(v1 + 88);
  unint64_t v98 = *(void *)(v1 + 104);
  sub_100058D18(&qword_100B26250);
  sub_1007F9B30();
  double v19 = 0.0;
  double v20 = 0.0;
  if (v100 != 0.0)
  {
    if (qword_100B22E20 != -1) {
      swift_once();
    }
    double v21 = *(double *)&static REConstants.tapTargetSize;
    long long v97 = v102;
    unint64_t v98 = v103;
    sub_1007F9B30();
    if ((v21 - v100) * 0.5 < 0.0) {
      double v20 = 0.0;
    }
    else {
      double v20 = (v21 - v100) * 0.5;
    }
  }
  long long v97 = v102;
  unint64_t v98 = v103;
  uint64_t v22 = sub_1007F9B30();
  if (v101 != 0.0)
  {
    if (qword_100B22E20 != -1) {
      swift_once();
    }
    double v23 = *(double *)&static REConstants.tapTargetSize;
    long long v97 = v102;
    unint64_t v98 = v103;
    uint64_t v22 = sub_1007F9B30();
    if ((v23 - v101) * 0.5 < 0.0) {
      double v19 = 0.0;
    }
    else {
      double v19 = (v23 - v101) * 0.5;
    }
  }
  __chkstk_darwin(v22);
  *(&v77 - 4) = v1;
  *((double *)&v77 - 3) = v19;
  *((double *)&v77 - 2) = v20;
  swift_retain();
  sub_100058D18(&qword_100B26258);
  sub_10023214C();
  sub_1007F9B90();
  unsigned __int8 v24 = sub_1007F8F00();
  unsigned __int8 v25 = sub_1007F8F10();
  char v26 = sub_1007F8F30();
  sub_1007F8F30();
  if (sub_1007F8F30() != v24) {
    char v26 = sub_1007F8F30();
  }
  sub_1007F8F30();
  if (sub_1007F8F30() != v25) {
    char v26 = sub_1007F8F30();
  }
  uint64_t v27 = (uint64_t)v87;
  sub_1007F7A30();
  uint64_t v29 = v28;
  uint64_t v31 = v30;
  uint64_t v33 = v32;
  uint64_t v35 = v34;
  uint64_t v36 = v79;
  (*(void (**)(char *, char *, uint64_t))(v4 + 16))(v8, v6, v79);
  uint64_t v37 = &v8[*(int *)(v78 + 36)];
  *uint64_t v37 = v26;
  *((void *)v37 + 1) = v29;
  *((void *)v37 + 2) = v31;
  *((void *)v37 + 3) = v33;
  *((void *)v37 + 4) = v35;
  v37[40] = 0;
  (*(void (**)(char *, uint64_t))(v4 + 8))(v6, v36);
  unsigned __int8 v38 = sub_1007F8F20();
  unsigned __int8 v39 = sub_1007F8F40();
  char v40 = sub_1007F8F30();
  sub_1007F8F30();
  if (sub_1007F8F30() != v38) {
    char v40 = sub_1007F8F30();
  }
  sub_1007F8F30();
  if (sub_1007F8F30() != v39) {
    char v40 = sub_1007F8F30();
  }
  sub_1007F7A30();
  uint64_t v42 = v41;
  uint64_t v44 = v43;
  uint64_t v46 = v45;
  uint64_t v48 = v47;
  sub_10005B044((uint64_t)v8, (uint64_t)v10, &qword_100B26210);
  uint64_t v49 = &v10[*(int *)(v80 + 36)];
  *uint64_t v49 = v40;
  *((void *)v49 + 1) = v42;
  *((void *)v49 + 2) = v44;
  *((void *)v49 + 3) = v46;
  *((void *)v49 + 4) = v48;
  v49[40] = 0;
  sub_10005AFE8((uint64_t)v8, &qword_100B26210);
  uint64_t v50 = v81;
  sub_1007F8250();
  sub_100232964(&qword_100B26200, &qword_100B261F8, (void (*)(void))sub_1002320A0);
  sub_100232B20(&qword_100B26228, (void (*)(uint64_t))&type metadata accessor for HighlightHoverEffect);
  uint64_t v51 = v82;
  uint64_t v52 = v85;
  sub_1007F92F0();
  (*(void (**)(char *, uint64_t))(v83 + 8))(v50, v52);
  sub_10005AFE8((uint64_t)v10, &qword_100B261F8);
  uint64_t v53 = *(void **)v2;
  if (*(void *)v2)
  {
    swift_getKeyPath();
    swift_getKeyPath();
    id v54 = v53;
    sub_1007F7850();

    swift_release();
    swift_release();
    uint64_t v55 = v97;
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v57 = v84;
    uint64_t v58 = v86;
    (*(void (**)(uint64_t, char *, uint64_t))(v84 + 16))(v27, v51, v86);
    uint64_t v59 = v88;
    uint64_t v60 = (uint64_t *)(v27 + *(int *)(v88 + 36));
    uint64_t *v60 = KeyPath;
    v60[1] = v55;
    (*(void (**)(char *, uint64_t))(v57 + 8))(v51, v58);
    if (qword_100B22E68 != -1) {
      swift_once();
    }
    uint64_t v61 = sub_100058D18(&qword_100B261E8);
    sub_10005B838(v61, (uint64_t)qword_100B75C68);
    unint64_t v62 = sub_100231F50();
    uint64_t v63 = sub_100043334(&qword_100B26230, &qword_100B261E8);
    uint64_t v64 = v89;
    sub_1007F93F0();
    sub_10005AFE8(v27, &qword_100B261E0);
    double v100 = COERCE_DOUBLE(sub_100230F60());
    double v101 = v65;
    *(void *)&long long v97 = v59;
    *((void *)&v97 + 1) = v61;
    unint64_t v98 = v62;
    uint64_t v99 = v63;
    swift_getOpaqueTypeConformance2();
    sub_10022ED00();
    uint64_t v67 = (uint64_t)v91;
    uint64_t v66 = v92;
    sub_1007F94E0();
    swift_bridgeObjectRelease();
    (*(void (**)(char *, uint64_t))(v90 + 8))(v64, v66);
    *(void *)&long long v97 = sub_1002312F8(*(void *)(v2 + 48), *(void *)(v2 + 56));
    *((void *)&v97 + 1) = v68;
    uint64_t v69 = (uint64_t)v93;
    sub_1007F7FA0();
    swift_bridgeObjectRelease();
    sub_10005AFE8(v67, &qword_100B261D8);
    uint64_t v70 = *(void *)(v2 + 32);
    char v71 = *(unsigned char *)(v2 + 40);
    sub_10022F16C(v70, v71);
    sub_1007A6698(v70, v71);
    sub_10022F1DC(v70, v71);
    uint64_t v72 = (uint64_t)v95;
    sub_1007F7FE0();
    sub_10005AFE8(v69, &qword_100B261D8);
    uint64_t v73 = swift_getKeyPath();
    uint64_t v74 = v96;
    sub_10005B044(v72, v96, &qword_100B261D8);
    uint64_t v75 = v74 + *(int *)(sub_100058D18(&qword_100B26190) + 36);
    *(void *)uint64_t v75 = v73;
    *(unsigned char *)(v75 + 8) = 0;
    return sub_10005AFE8(v72, &qword_100B261D8);
  }
  else
  {
    type metadata accessor for ChromeStyle();
    sub_100232B20((unint64_t *)&qword_100B2CAD0, (void (*)(uint64_t))type metadata accessor for ChromeStyle);
    uint64_t result = sub_1007F8260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100230130@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>, double a3@<D0>, double a4@<D1>)
{
  uint64_t v139 = a2;
  uint64_t v138 = sub_100058D18(&qword_100B263F8);
  __chkstk_darwin(v138);
  char v8 = &v120[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v129 = sub_100058D18(&qword_100B262C0);
  __chkstk_darwin(v129);
  uint64_t v130 = &v120[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v125 = sub_100058D18(&qword_100B26370);
  __chkstk_darwin(v125);
  uint64_t v11 = &v120[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = sub_1007F9D40();
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = &v120[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v124 = sub_100058D18(&qword_100B262D0);
  __chkstk_darwin(v124);
  uint64_t v127 = &v120[-((v15 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v126 = sub_100058D18(&qword_100B262B0);
  __chkstk_darwin(v126);
  uint64_t v128 = &v120[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v131 = sub_100058D18(&qword_100B262A0);
  __chkstk_darwin(v131);
  uint64_t v135 = &v120[-((v17 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v133 = sub_100058D18(&qword_100B26290);
  __chkstk_darwin(v133);
  uint64_t v134 = &v120[-((v18 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v137 = sub_100058D18(&qword_100B26280);
  uint64_t v19 = __chkstk_darwin(v137);
  uint64_t v132 = &v120[-((v20 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v19);
  uint64_t v136 = &v120[-v21];
  uint64_t v22 = *(void *)(a1 + 16);
  char v23 = *(unsigned char *)(a1 + 24);
  sub_10022F16C(v22, v23);
  uint64_t v24 = sub_1007A648C(v22, v23);
  sub_10022F1DC(v22, v23);
  if (v24 == 2)
  {
    double v122 = a3;
    double v123 = a4;
    sub_100230D38((uint64_t)v140);
    long long v153 = v140[6];
    long long v154 = v140[7];
    long long v155 = v140[8];
    long long v156 = v140[9];
    long long v149 = v140[2];
    long long v150 = v140[3];
    long long v151 = v140[4];
    long long v152 = v140[5];
    long long v147 = v140[0];
    long long v148 = v140[1];
    int v121 = sub_1007F8F50();
    sub_1007F7A30();
    uint64_t v26 = v25;
    uint64_t v28 = v27;
    uint64_t v30 = v29;
    uint64_t v32 = v31;
    char v141 = 0;
    char v33 = sub_1007F8EE0();
    sub_1007F7A30();
    uint64_t v35 = v34;
    uint64_t v37 = v36;
    uint64_t v39 = v38;
    uint64_t v41 = v40;
    char v42 = v141;
    char v142 = 0;
    type metadata accessor for ChromeStyle();
    sub_100232B20((unint64_t *)&qword_100B2CAD0, (void (*)(uint64_t))type metadata accessor for ChromeStyle);
    uint64_t v43 = sub_1007F8270();
    v146[6] = v153;
    v146[7] = v154;
    v146[8] = v155;
    v146[9] = v156;
    v146[2] = v149;
    v146[3] = v150;
    v146[4] = v151;
    v146[5] = v152;
    v146[0] = v147;
    v146[1] = v148;
    LOWORD(v146[10]) = 257;
    *(_DWORD *)((char *)&v146[10] + 2) = *(_DWORD *)&v145[5];
    WORD3(v146[10]) = v145[7];
    BYTE8(v146[10]) = v121;
    *(_DWORD *)((char *)&v146[10] + 9) = *(_DWORD *)v145;
    HIDWORD(v146[10]) = *(_DWORD *)((char *)&v145[1] + 1);
    *(void *)&v146[11] = v26;
    *((void *)&v146[11] + 1) = v28;
    *(void *)&v146[12] = v30;
    *((void *)&v146[12] + 1) = v32;
    LOBYTE(v146[13]) = v42;
    *(_DWORD *)((char *)&v146[13] + 1) = *(_DWORD *)v144;
    DWORD1(v146[13]) = *(_DWORD *)&v144[3];
    BYTE8(v146[13]) = v33;
    HIDWORD(v146[13]) = *(_DWORD *)&v143[3];
    *(_DWORD *)((char *)&v146[13] + 9) = *(_DWORD *)v143;
    *(void *)&v146[14] = v35;
    *((void *)&v146[14] + 1) = v37;
    *(void *)&v146[15] = v39;
    *((void *)&v146[15] + 1) = v41;
    LOBYTE(v146[16]) = v142;
    *((void *)&v146[16] + 1) = 0x3FF0000000000000;
    *(void *)&v146[17] = v43;
    *((void *)&v146[17] + 1) = v44;
    uint64_t v45 = enum case for RoundedCornerStyle.continuous(_:);
    uint64_t v46 = sub_1007F8790();
    (*(void (**)(unsigned char *, uint64_t, uint64_t))(*(void *)(v46 - 8) + 104))(v14, v45, v46);
    sub_100232C58((uint64_t)v14, (uint64_t)v11);
    *(_WORD *)&v11[*(int *)(v125 + 36)] = 256;
    uint64_t v47 = v127;
    sub_10005B044((uint64_t)v11, (uint64_t)&v127[*(int *)(v124 + 36)], &qword_100B26370);
    memcpy(v47, v146, 0x120uLL);
    sub_100232CBC((uint64_t)v146);
    sub_10005AFE8((uint64_t)v11, &qword_100B26370);
    sub_100232E7C((uint64_t)v14);
    sub_100232ED8((uint64_t)v146);
    uint64_t v48 = (_OWORD *)swift_allocObject();
    long long v49 = *(_OWORD *)(a1 + 80);
    v48[5] = *(_OWORD *)(a1 + 64);
    v48[6] = v49;
    v48[7] = *(_OWORD *)(a1 + 96);
    long long v50 = *(_OWORD *)(a1 + 16);
    v48[1] = *(_OWORD *)a1;
    v48[2] = v50;
    long long v51 = *(_OWORD *)(a1 + 48);
    _OWORD v48[3] = *(_OWORD *)(a1 + 32);
    _OWORD v48[4] = v51;
    sub_100232B88(a1);
    uint64_t v52 = sub_1007F9F10();
    id v54 = v53;
    uint64_t v55 = v130;
    sub_10005B044((uint64_t)v47, (uint64_t)v130, &qword_100B262D0);
    uint64_t v56 = (uint64_t (**)@<X0>(uint64_t *@<X8>))&v55[*(int *)(v129 + 36)];
    *uint64_t v56 = sub_1003A7D28;
    v56[1] = 0;
    v56[2] = (uint64_t (*)@<X0>(uint64_t *@<X8>))v52;
    _OWORD v56[3] = v54;
    uint64_t v57 = swift_allocObject();
    *(void *)(v57 + 16) = sub_100232B84;
    *(void *)(v57 + 24) = v48;
    uint64_t v58 = v128;
    sub_10005B044((uint64_t)v55, (uint64_t)v128, &qword_100B262C0);
    uint64_t v59 = (uint64_t (**)(double *))&v58[*(int *)(v126 + 36)];
    *uint64_t v59 = sub_1002332F8;
    v59[1] = (uint64_t (*)(double *))v57;
    sub_10005AFE8((uint64_t)v55, &qword_100B262C0);
    sub_10005AFE8((uint64_t)v47, &qword_100B262D0);
    LOBYTE(v55) = sub_1007F8F00();
    unsigned __int8 v60 = sub_1007F8F10();
    char v61 = sub_1007F8F30();
    sub_1007F8F30();
    if (sub_1007F8F30() != v55) {
      char v61 = sub_1007F8F30();
    }
    sub_1007F8F30();
    if (sub_1007F8F30() != v60) {
      char v61 = sub_1007F8F30();
    }
    uint64_t v62 = (uint64_t)v135;
    sub_1007F7A30();
    uint64_t v64 = v63;
    uint64_t v66 = v65;
    uint64_t v68 = v67;
    uint64_t v70 = v69;
    sub_10005B044((uint64_t)v58, v62, &qword_100B262B0);
    uint64_t v71 = v62 + *(int *)(v131 + 36);
    *(unsigned char *)uint64_t v71 = v61;
    *(void *)(v71 + 8) = v64;
    *(void *)(v71 + 16) = v66;
    *(void *)(v71 + 24) = v68;
    *(void *)(v71 + 32) = v70;
    *(unsigned char *)(v71 + 4sub_1007E6FC4(2, 18, 1, 0) = 0;
    sub_10005AFE8((uint64_t)v58, &qword_100B262B0);
    unsigned __int8 v72 = sub_1007F8F20();
    unsigned __int8 v73 = sub_1007F8F40();
    char v74 = sub_1007F8F30();
    sub_1007F8F30();
    if (sub_1007F8F30() != v72) {
      char v74 = sub_1007F8F30();
    }
    sub_1007F8F30();
    if (sub_1007F8F30() != v73) {
      char v74 = sub_1007F8F30();
    }
    sub_1007F7A30();
    uint64_t v76 = v75;
    uint64_t v78 = v77;
    uint64_t v80 = v79;
    uint64_t v82 = v81;
    uint64_t v83 = v134;
    sub_10005B044(v62, (uint64_t)v134, &qword_100B262A0);
    uint64_t v84 = &v83[*(int *)(v133 + 36)];
    unsigned char *v84 = v74;
    *((void *)v84 + 1) = v76;
    *((void *)v84 + 2) = v78;
    *((void *)v84 + 3) = v80;
    *((void *)v84 + 4) = v82;
    v84[40] = 0;
    sub_10005AFE8(v62, &qword_100B262A0);
    uint64_t v85 = v132;
    sub_10005B044((uint64_t)v83, (uint64_t)v132, &qword_100B26290);
    v85[*(int *)(v137 + 36)] = 0;
    sub_10005AFE8((uint64_t)v83, &qword_100B26290);
    uint64_t v86 = v136;
    sub_1002330C8((uint64_t)v85, (uint64_t)v136);
    sub_10005B044((uint64_t)v86, (uint64_t)v8, &qword_100B26280);
    swift_storeEnumTagMultiPayload();
    sub_100058D18(&qword_100B263B0);
    sub_100232280();
    sub_100232868();
    sub_1007F8A50();
    return sub_10005AFE8((uint64_t)v86, &qword_100B26280);
  }
  else
  {
    sub_100230D38((uint64_t)&v147);
    v146[6] = v153;
    v146[7] = v154;
    v146[8] = v155;
    v146[9] = v156;
    v146[2] = v149;
    v146[3] = v150;
    v146[4] = v151;
    v146[5] = v152;
    v146[0] = v147;
    v146[1] = v148;
    uint64_t v88 = (_OWORD *)swift_allocObject();
    long long v89 = *(_OWORD *)(a1 + 80);
    v88[5] = *(_OWORD *)(a1 + 64);
    v88[6] = v89;
    v88[7] = *(_OWORD *)(a1 + 96);
    long long v90 = *(_OWORD *)(a1 + 16);
    v88[1] = *(_OWORD *)a1;
    v88[2] = v90;
    long long v91 = *(_OWORD *)(a1 + 48);
    v88[3] = *(_OWORD *)(a1 + 32);
    v88[4] = v91;
    sub_100232B88(a1);
    uint64_t v92 = sub_1007F9F10();
    uint64_t v94 = v93;
    uint64_t v95 = swift_allocObject();
    *(void *)(v95 + 16) = sub_100232B84;
    *(void *)(v95 + 24) = v88;
    unsigned __int8 v96 = sub_1007F8F00();
    unsigned __int8 v97 = sub_1007F8F10();
    char v98 = sub_1007F8F30();
    sub_1007F8F30();
    if (sub_1007F8F30() != v96) {
      char v98 = sub_1007F8F30();
    }
    sub_1007F8F30();
    if (sub_1007F8F30() != v97) {
      char v98 = sub_1007F8F30();
    }
    sub_1007F7A30();
    uint64_t v100 = v99;
    uint64_t v102 = v101;
    uint64_t v104 = v103;
    uint64_t v106 = v105;
    unsigned __int8 v107 = sub_1007F8F20();
    unsigned __int8 v108 = sub_1007F8F40();
    char v109 = sub_1007F8F30();
    sub_1007F8F30();
    if (sub_1007F8F30() != v107) {
      char v109 = sub_1007F8F30();
    }
    sub_1007F8F30();
    if (sub_1007F8F30() != v108) {
      char v109 = sub_1007F8F30();
    }
    LOBYTE(v145[0]) = 0;
    sub_1007F7A30();
    char v110 = v145[0];
    LOBYTE(v140[0]) = 0;
    long long v111 = v146[7];
    *((_OWORD *)v8 + 6) = v146[6];
    *((_OWORD *)v8 + 7) = v111;
    long long v112 = v146[9];
    *((_OWORD *)v8 + 8) = v146[8];
    *((_OWORD *)v8 + 9) = v112;
    long long v113 = v146[3];
    *((_OWORD *)v8 + 2) = v146[2];
    *((_OWORD *)v8 + 3) = v113;
    long long v114 = v146[5];
    *((_OWORD *)v8 + 4) = v146[4];
    *((_OWORD *)v8 + 5) = v114;
    long long v115 = v146[1];
    *(_OWORD *)char v8 = v146[0];
    *((_OWORD *)v8 + 1) = v115;
    *((_WORD *)v8 + 8sub_1007E6FC4(2, 18, 1, 0) = 257;
    *((void *)v8 + 21) = sub_1003A7D28;
    *((void *)v8 + 22) = 0;
    *((void *)v8 + 23) = v92;
    *((void *)v8 + 24) = v94;
    *((void *)v8 + 25) = sub_100232C50;
    *((void *)v8 + 26) = v95;
    v8[216] = v98;
    *((void *)v8 + 28) = v100;
    *((void *)v8 + 29) = v102;
    *((void *)v8 + 3sub_1007E6FC4(2, 18, 1, 0) = v104;
    *((void *)v8 + 31) = v106;
    v8[256] = v110;
    v8[264] = v109;
    *((void *)v8 + 34) = v116;
    *((void *)v8 + 35) = v117;
    *((void *)v8 + 36) = v118;
    *((void *)v8 + 37) = v119;
    *((_WORD *)v8 + 152) = 0;
    swift_storeEnumTagMultiPayload();
    sub_100058D18(&qword_100B263B0);
    sub_100232280();
    sub_100232868();
    return sub_1007F8A50();
  }
}

uint64_t sub_100230D38@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v24 = sub_1007F86A0();
  sub_100231628(v2, (uint64_t)v26);
  uint64_t v4 = *(void *)(v2 + 56);
  uint64_t v5 = *(void **)v2;
  if (*(void *)v2)
  {
    uint64_t v6 = v26[0];
    uint64_t v7 = v26[1];
    uint64_t v8 = v26[3];
    uint64_t v21 = v26[4];
    uint64_t v22 = v26[2];
    uint64_t v19 = v26[6];
    uint64_t v20 = v26[5];
    uint64_t v17 = v26[8];
    uint64_t v18 = v26[7];
    uint64_t v23 = *(void *)(v2 + 48);
    char v25 = v27;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    id v9 = v5;
    sub_1007F7850();

    swift_release();
    swift_release();
    uint64_t v10 = v26[0];
    uint64_t KeyPath = swift_getKeyPath();
    uint64_t v12 = *(void *)(v2 + 16);
    char v13 = *(unsigned char *)(v2 + 24);
    sub_10022F16C(v12, v13);
    sub_1007A648C(v12, v13);
    sub_10022F1DC(v12, v13);
    if (sub_1007FE5C0()) {
      uint64_t v14 = sub_1007F90D0();
    }
    else {
      uint64_t v14 = sub_1007F8F70();
    }
    uint64_t v15 = v14;
    uint64_t result = swift_getKeyPath();
    *(void *)a1 = v24;
    *(void *)(a1 + 8) = 0;
    *(unsigned char *)(a1 + 16) = 0;
    *(void *)(a1 + 24) = v6;
    *(void *)(a1 + 32) = v7;
    *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v22;
    *(void *)(a1 + 48) = v8;
    *(void *)(a1 + 56) = v21;
    *(void *)(a1 + 64) = v20;
    *(void *)(a1 + 72) = v19;
    *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v18;
    *(void *)(a1 + 88) = v17;
    *(unsigned char *)(a1 + 96) = v25;
    *(void *)(a1 + 104) = 0;
    *(void *)(a1 + 112) = v23;
    *(void *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = v4;
    *(void *)(a1 + 128) = KeyPath;
    *(void *)(a1 + 136) = v10;
    *(void *)(a1 + 144) = result;
    *(void *)(a1 + 152) = v15;
  }
  else
  {
    type metadata accessor for ChromeStyle();
    sub_100232B20((unint64_t *)&qword_100B2CAD0, (void (*)(uint64_t))type metadata accessor for ChromeStyle);
    swift_bridgeObjectRetain();
    uint64_t result = sub_1007F8260();
    __break(1u);
  }
  return result;
}

uint64_t sub_100230F60()
{
  uint64_t v22 = sub_1007F2CE0();
  uint64_t v1 = *(void *)(v22 - 8);
  uint64_t v2 = __chkstk_darwin(v22);
  uint64_t v21 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v2);
  uint64_t v5 = (char *)&v20 - v4;
  uint64_t v6 = sub_1007FDBF0();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v8 = __chkstk_darwin(v6);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v8);
  uint64_t v12 = (char *)&v20 - v11;
  uint64_t v13 = *(void *)(v0 + 32);
  char v14 = *(unsigned char *)(v0 + 40);
  sub_10022F16C(v13, v14);
  char v15 = sub_1007A6698(v13, v14);
  sub_10022F1DC(v13, v14);
  if (v15) {
    return 0;
  }
  uint64_t v20 = v7;
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, char *, uint64_t))(v7 + 16))(v10, v12, v6);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v18 = v22;
  (*(void (**)(char *, char *, uint64_t))(v1 + 16))(v21, v5, v22);
  uint64_t v16 = sub_1007FDCF0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v5, v18);
  (*(void (**)(char *, uint64_t))(v20 + 8))(v12, v6);
  return v16;
}

uint64_t sub_1002312F8(uint64_t a1, uint64_t a2)
{
  uint64_t v27 = a1;
  uint64_t v28 = a2;
  uint64_t v26 = sub_1007F2CE0();
  uint64_t v3 = *(void *)(v26 - 8);
  uint64_t v4 = __chkstk_darwin(v26);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v8 = (char *)&v26 - v7;
  uint64_t v9 = sub_1007FDBF0();
  uint64_t v10 = *(void *)(v9 - 8);
  uint64_t v11 = __chkstk_darwin(v9);
  uint64_t v13 = (char *)&v26 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  char v15 = (char *)&v26 - v14;
  uint64_t v16 = *(void *)(v2 + 32);
  char v17 = *(unsigned char *)(v2 + 40);
  sub_10022F16C(v16, v17);
  char v18 = sub_1007A6698(v16, v17);
  sub_10022F1DC(v16, v17);
  if (v18) {
    return 0;
  }
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, char *, uint64_t))(v10 + 16))(v13, v15, v9);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v21 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v22 = v26;
  (*(void (**)(char *, char *, uint64_t))(v3 + 16))(v6, v8, v26);
  sub_1007FDCF0();
  (*(void (**)(char *, uint64_t))(v3 + 8))(v8, v22);
  (*(void (**)(char *, uint64_t))(v10 + 8))(v15, v9);
  sub_100058D18((uint64_t *)&unk_100B25EC0);
  uint64_t v23 = swift_allocObject();
  *(_OWORD *)(v23 + 16) = xmmword_10085CCE0;
  *(void *)(v23 + 56) = &type metadata for String;
  *(void *)(v23 + 64) = sub_10005FBC0();
  uint64_t v24 = v28;
  *(void *)(v23 + 32) = v27;
  *(void *)(v23 + 4sub_1007E6FC4(2, 18, 1, 0) = v24;
  swift_bridgeObjectRetain();
  uint64_t v19 = sub_1007FDC40();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return v19;
}

double sub_100231628@<D0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  if (*(unsigned char *)(a1 + 64))
  {
    sub_1007F9A60();
    long long v15 = *(_OWORD *)(a1 + 48);
    sub_10022ED00();
    swift_bridgeObjectRetain();
    uint64_t v4 = sub_1007F91F0();
    uint64_t v6 = v5;
    char v8 = v7 & 1;
    swift_retain();
    sub_100232E6C(32, 0xE100000000000000, 0);
    swift_bridgeObjectRetain();
    sub_100232E6C(v4, v6, v8);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100232E6C(v4, v6, v8);
    swift_bridgeObjectRetain();
    sub_100233060(v4, v6, v8);
    swift_bridgeObjectRelease();
    sub_100233060(32, 0xE100000000000000, 0);
    swift_release();
    swift_bridgeObjectRelease();
    sub_100058D18(&qword_100B26400);
    sub_100058D18(&qword_100B26408);
    sub_100043334(&qword_100B26410, &qword_100B26400);
    sub_100043334(&qword_100B26418, &qword_100B26408);
    sub_1007F8A50();
    sub_100233060(v4, v6, v8);
    swift_release();
  }
  else
  {
    long long v15 = *(_OWORD *)(a1 + 48);
    sub_10022ED00();
    swift_bridgeObjectRetain();
    uint64_t v9 = sub_1007F91F0();
    uint64_t v11 = v10;
    char v13 = v12 & 1;
    sub_1007F9A60();
    sub_100232E6C(v9, v11, v13);
    swift_bridgeObjectRetain();
    sub_100232E6C(32, 0xE100000000000000, 0);
    swift_bridgeObjectRetain();
    swift_retain();
    sub_100232E6C(v9, v11, v13);
    swift_bridgeObjectRetain();
    sub_100233060(32, 0xE100000000000000, 0);
    swift_bridgeObjectRelease();
    sub_100233060(v9, v11, v13);
    swift_bridgeObjectRelease();
    sub_100058D18(&qword_100B26400);
    sub_100058D18(&qword_100B26408);
    sub_100043334(&qword_100B26410, &qword_100B26400);
    sub_100043334(&qword_100B26418, &qword_100B26408);
    sub_1007F8A50();
    swift_release();
    sub_100233060(v9, v11, v13);
  }
  swift_bridgeObjectRelease();
  double result = *(double *)&v15;
  *(_OWORD *)a2 = v15;
  *(_OWORD *)(a2 + 16) = v16;
  *(_OWORD *)(a2 + 32) = v17;
  *(_OWORD *)(a2 + 48) = v18;
  *(void *)(a2 + 64) = v19;
  *(unsigned char *)(a2 + 72) = v20;
  return result;
}

uint64_t sub_100231A18()
{
  uint64_t v1 = sub_100058D18(&qword_100B26188);
  __chkstk_darwin(v1);
  uint64_t v3 = (char *)v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100058D18(&qword_100B26190);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)v11 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  long long v7 = v0[5];
  void v11[4] = v0[4];
  void v11[5] = v7;
  v11[6] = v0[6];
  long long v8 = v0[1];
  v11[0] = *v0;
  v11[1] = v8;
  long long v9 = v0[3];
  void v11[2] = v0[2];
  void v11[3] = v9;
  sub_10022F540((uint64_t)v6);
  sub_10005B044((uint64_t)v6, (uint64_t)v3, &qword_100B26190);
  swift_storeEnumTagMultiPayload();
  sub_100058D18(&qword_100B26198);
  sub_100231B8C();
  sub_100231D80();
  sub_1007F8A50();
  return sub_10005AFE8((uint64_t)v6, &qword_100B26190);
}

unint64_t sub_100231B8C()
{
  unint64_t result = qword_100B261A0;
  if (!qword_100B261A0)
  {
    sub_100043378(&qword_100B26198);
    sub_100043378(&qword_100B261A8);
    sub_1007F8B30();
    sub_100231CBC();
    sub_100232B20((unint64_t *)&qword_100B40D60, (void (*)(uint64_t))&type metadata accessor for BorderlessButtonStyle);
    swift_getOpaqueTypeConformance2();
    sub_100232B20(qword_100B28FA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B261A0);
  }
  return result;
}

unint64_t sub_100231CBC()
{
  unint64_t result = qword_100B261B0;
  if (!qword_100B261B0)
  {
    sub_100043378(&qword_100B261A8);
    sub_100043334(&qword_100B261B8, &qword_100B261C0);
    sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B261B0);
  }
  return result;
}

unint64_t sub_100231D80()
{
  unint64_t result = qword_100B261C8;
  if (!qword_100B261C8)
  {
    sub_100043378(&qword_100B26190);
    sub_100231E20();
    sub_100043334((unint64_t *)&unk_100B2D1F0, &qword_100B26238);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B261C8);
  }
  return result;
}

unint64_t sub_100231E20()
{
  unint64_t result = qword_100B261D0;
  if (!qword_100B261D0)
  {
    sub_100043378(&qword_100B261D8);
    sub_100043378(&qword_100B261E0);
    sub_100043378(&qword_100B261E8);
    sub_100231F50();
    sub_100043334(&qword_100B26230, &qword_100B261E8);
    swift_getOpaqueTypeConformance2();
    sub_100232B20(qword_100B28FA0, (void (*)(uint64_t))&type metadata accessor for AccessibilityAttachmentModifier);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B261D0);
  }
  return result;
}

unint64_t sub_100231F50()
{
  unint64_t result = qword_100B261F0;
  if (!qword_100B261F0)
  {
    sub_100043378(&qword_100B261E0);
    sub_100043378(&qword_100B261F8);
    sub_1007F8A80();
    sub_100232964(&qword_100B26200, &qword_100B261F8, (void (*)(void))sub_1002320A0);
    sub_100232B20(&qword_100B26228, (void (*)(uint64_t))&type metadata accessor for HighlightHoverEffect);
    swift_getOpaqueTypeConformance2();
    sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B261F0);
  }
  return result;
}

unint64_t sub_1002320A0()
{
  unint64_t result = qword_100B26208;
  if (!qword_100B26208)
  {
    sub_100043378(&qword_100B26210);
    sub_100043334(&qword_100B26218, &qword_100B26220);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26208);
  }
  return result;
}

uint64_t sub_100232140@<X0>(uint64_t a1@<X8>)
{
  return sub_100230130(*(void *)(v1 + 16), a1, *(double *)(v1 + 24), *(double *)(v1 + 32));
}

unint64_t sub_10023214C()
{
  unint64_t result = qword_100B26260;
  if (!qword_100B26260)
  {
    sub_100043378(&qword_100B26258);
    sub_1002321F8(&qword_100B26268, &qword_100B26270, (void (*)(void))sub_100232280, (void (*)(void))sub_100232868);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26260);
  }
  return result;
}

uint64_t sub_1002321F8(unint64_t *a1, uint64_t *a2, void (*a3)(void), void (*a4)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100043378(a2);
    a3();
    a4();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100232280()
{
  unint64_t result = qword_100B26278;
  if (!qword_100B26278)
  {
    sub_100043378(&qword_100B26280);
    sub_100232964(&qword_100B26288, &qword_100B26290, (void (*)(void))sub_10023234C);
    sub_100043334(&qword_100B26398, &qword_100B263A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26278);
  }
  return result;
}

uint64_t sub_10023234C()
{
  return sub_100232964(&qword_100B26298, &qword_100B262A0, (void (*)(void))sub_10023237C);
}

unint64_t sub_10023237C()
{
  unint64_t result = qword_100B262A8;
  if (!qword_100B262A8)
  {
    sub_100043378(&qword_100B262B0);
    sub_10023241C();
    sub_100043334(&qword_100B26388, &qword_100B26390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B262A8);
  }
  return result;
}

unint64_t sub_10023241C()
{
  unint64_t result = qword_100B262B8;
  if (!qword_100B262B8)
  {
    sub_100043378(&qword_100B262C0);
    sub_1002324BC();
    sub_100043334(&qword_100B26378, &qword_100B26380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B262B8);
  }
  return result;
}

unint64_t sub_1002324BC()
{
  unint64_t result = qword_100B262C8;
  if (!qword_100B262C8)
  {
    sub_100043378(&qword_100B262D0);
    sub_10023255C();
    sub_100043334(&qword_100B26368, &qword_100B26370);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B262C8);
  }
  return result;
}

unint64_t sub_10023255C()
{
  unint64_t result = qword_100B262D8;
  if (!qword_100B262D8)
  {
    sub_100043378(&qword_100B262E0);
    sub_100232964(&qword_100B262E8, &qword_100B262F0, (void (*)(void))sub_100232604);
    sub_1002179EC();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B262D8);
  }
  return result;
}

uint64_t sub_100232604()
{
  return sub_100232964(&qword_100B262F8, &qword_100B26300, (void (*)(void))sub_100232634);
}

uint64_t sub_100232634()
{
  return sub_100232964(&qword_100B26308, &qword_100B26310, (void (*)(void))sub_100232664);
}

unint64_t sub_100232664()
{
  unint64_t result = qword_100B26318;
  if (!qword_100B26318)
  {
    sub_100043378(&qword_100B26320);
    sub_100232704();
    sub_100043334((unint64_t *)&unk_100B23510, &qword_100B33930);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26318);
  }
  return result;
}

unint64_t sub_100232704()
{
  unint64_t result = qword_100B26328;
  if (!qword_100B26328)
  {
    sub_100043378(&qword_100B26330);
    sub_1002327A4();
    sub_100043334((unint64_t *)&unk_100B23520, &qword_100B2CC50);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26328);
  }
  return result;
}

unint64_t sub_1002327A4()
{
  unint64_t result = qword_100B26338;
  if (!qword_100B26338)
  {
    sub_100043378(&qword_100B26340);
    sub_100043334(&qword_100B26348, &qword_100B26350);
    sub_100043334(&qword_100B26358, &qword_100B26360);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26338);
  }
  return result;
}

unint64_t sub_100232868()
{
  unint64_t result = qword_100B263A8;
  if (!qword_100B263A8)
  {
    sub_100043378(&qword_100B263B0);
    sub_100232964(&qword_100B263B8, &qword_100B263C0, (void (*)(void))sub_100232934);
    sub_100043334(&qword_100B26398, &qword_100B263A0);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B263A8);
  }
  return result;
}

uint64_t sub_100232934()
{
  return sub_100232964(&qword_100B263C8, &qword_100B263D0, (void (*)(void))sub_1002329E0);
}

uint64_t sub_100232964(unint64_t *a1, uint64_t *a2, void (*a3)(void))
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_100043378(a2);
    a3();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_1002329E0()
{
  unint64_t result = qword_100B263D8;
  if (!qword_100B263D8)
  {
    sub_100043378(&qword_100B263E0);
    sub_100232A80();
    sub_100043334(&qword_100B26388, &qword_100B26390);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B263D8);
  }
  return result;
}

unint64_t sub_100232A80()
{
  unint64_t result = qword_100B263E8;
  if (!qword_100B263E8)
  {
    sub_100043378(&qword_100B263F0);
    sub_100232634();
    sub_100043334(&qword_100B26378, &qword_100B26380);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B263E8);
  }
  return result;
}

uint64_t sub_100232B20(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100232B88(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 16);
  char v3 = *(unsigned char *)(a1 + 24);
  uint64_t v4 = *(void *)(a1 + 32);
  char v5 = *(unsigned char *)(a1 + 40);
  id v6 = *(id *)a1;
  sub_10022F16C(v2, v3);
  sub_10022F16C(v4, v5);
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

uint64_t sub_100232C18()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100232C50(double *a1)
{
  return sub_100715164(a1, *(uint64_t (**)(double, double))(v1 + 16));
}

uint64_t sub_100232C58(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_1007F9D40();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_100232CBC(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 272);
  sub_100232D6C(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  id v3 = v2;
  swift_retain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

uint64_t sub_100232D6C(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_retain();
    sub_100232E6C(a2, a3, a4 & 1);
    swift_bridgeObjectRetain();
    sub_100232E6C(a6, a7, a8 & 1);
    return swift_bridgeObjectRetain();
  }
  else
  {
    sub_100232E6C(a1, a2, a3 & 1);
    swift_bridgeObjectRetain();
    sub_100232E6C(a5, a6, a7 & 1);
    swift_bridgeObjectRetain();
    return swift_retain();
  }
}

uint64_t sub_100232E6C(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_retain();
  }
  else {
    return swift_bridgeObjectRetain();
  }
}

uint64_t sub_100232E7C(uint64_t a1)
{
  uint64_t v2 = sub_1007F9D40();
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100232ED8(uint64_t a1)
{
  uint64_t v2 = *(void **)(a1 + 272);
  sub_100232F88(*(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), *(void *)(a1 + 88), *(unsigned char *)(a1 + 96));
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();

  return a1;
}

uint64_t sub_100232F88(uint64_t a1, uint64_t a2, uint64_t a3, char a4, uint64_t a5, uint64_t a6, uint64_t a7, char a8, uint64_t a9, char a10)
{
  if (a10)
  {
    swift_release();
    sub_100233060(a2, a3, a4 & 1);
    swift_bridgeObjectRelease();
    sub_100233060(a6, a7, a8 & 1);
  }
  else
  {
    sub_100233060(a1, a2, a3 & 1);
    swift_bridgeObjectRelease();
    sub_100233060(a5, a6, a7 & 1);
    swift_release();
  }

  return swift_bridgeObjectRelease();
}

uint64_t sub_100233060(uint64_t a1, uint64_t a2, char a3)
{
  if (a3) {
    return swift_release();
  }
  else {
    return swift_bridgeObjectRelease();
  }
}

uint64_t sub_100233074()
{
  return sub_1007F9B40();
}

uint64_t sub_1002330C8(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B26280);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 32))(a2, a1, v4);
  return a2;
}

unsigned char *storeEnumTagSinglePayload for HistoryButton.ArrowDirection(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *uint64_t result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100233214);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *uint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for HistoryButton.ArrowDirection()
{
  return &type metadata for HistoryButton.ArrowDirection;
}

uint64_t sub_10023324C()
{
  return sub_1002321F8(&qword_100B26420, &qword_100B26428, (void (*)(void))sub_100231B8C, (void (*)(void))sub_100231D80);
}

unint64_t sub_1002332A0()
{
  unint64_t result = qword_100B26430;
  if (!qword_100B26430)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26430);
  }
  return result;
}

uint64_t sub_1002332FC(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62) {
    goto LABEL_14;
  }
  unint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  swift_bridgeObjectRetain();
  if (v5)
  {
    while (!__OFSUB__(v5--, 1))
    {
      if ((a1 & 0xC000000000000001) != 0)
      {
        id v6 = (id)sub_1007FF120();
LABEL_5:
        long long v7 = v6;
        [v2 insertChildMenu:v6 atStartOfMenuForIdentifier:a2];

        if (!v5) {
          goto LABEL_15;
        }
      }
      else
      {
        if ((v5 & 0x8000000000000000) != 0) {
          goto LABEL_12;
        }
        if (v5 < *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10))
        {
          id v6 = *(id *)(a1 + 32 + 8 * v5);
          goto LABEL_5;
        }
LABEL_13:
        __break(1u);
LABEL_14:
        swift_bridgeObjectRetain();
        unint64_t v5 = sub_1007FF290();
        if (!v5) {
          goto LABEL_15;
        }
      }
    }
    __break(1u);
LABEL_12:
    __break(1u);
    goto LABEL_13;
  }
LABEL_15:

  return swift_bridgeObjectRelease();
}

uint64_t sub_100233408(unint64_t a1, uint64_t a2)
{
  if (a1 >> 62)
  {
    swift_bridgeObjectRetain();
    uint64_t result = sub_1007FF290();
    uint64_t v5 = result;
    if (!result) {
      goto LABEL_10;
    }
  }
  else
  {
    uint64_t v5 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    uint64_t result = swift_bridgeObjectRetain();
    if (!v5) {
      goto LABEL_10;
    }
  }
  if (v5 < 1)
  {
    __break(1u);
    return result;
  }
  for (uint64_t i = 0; i != v5; ++i)
  {
    if ((a1 & 0xC000000000000001) != 0) {
      id v8 = (id)sub_1007FF120();
    }
    else {
      id v8 = *(id *)(a1 + 8 * i + 32);
    }
    long long v9 = v8;
    [v2 insertChildMenu:v8 atEndOfMenuForIdentifier:a2];
  }
LABEL_10:

  return swift_bridgeObjectRelease();
}

void sub_1002334FC(unint64_t a1, uint64_t a2)
{
  int v3 = v2;
  id v6 = [v2 menuForIdentifier:a2];
  if (v6)
  {
    long long v7 = v6;
    id v8 = [v6 children];
    sub_100233644();
    sub_1007FDFF0();

    swift_bridgeObjectRetain();
    sub_100414AAC(a1);
    Class isa = sub_1007FDFE0().super.isa;
    swift_bridgeObjectRelease();
    id v10 = [v7 menuByReplacingChildren:isa];

    [v3 replaceMenuForIdentifier:a2 withMenu:v10];
  }
}

unint64_t sub_100233644()
{
  unint64_t result = qword_100B296B0;
  if (!qword_100B296B0)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100B296B0);
  }
  return result;
}

uint64_t sub_100233684()
{
  uint64_t v0 = sub_1007F6BC0();
  sub_10002A6A8(v0, qword_100B26438);
  sub_10005B838(v0, (uint64_t)qword_100B26438);
  sub_100007DA8();
  return sub_1007FED90();
}

uint64_t sub_1002336F8()
{
  uint64_t v0 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1007F2820();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007F2CE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1007FDBF0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1007F2840();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1007F2390();
  sub_10002A6A8(v10, qword_100B75530);
  sub_10005B838(v10, (uint64_t)qword_100B75530);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1007F2860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1007F2380();
}

unint64_t sub_1002339D0()
{
  uint64_t v0 = sub_100058D18(&qword_100B258D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v37 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v2 - 8);
  uint64_t v36 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v32 = sub_1007F2820();
  uint64_t v4 = *(void *)(v32 - 8);
  __chkstk_darwin(v32);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007F2CE0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007FDBF0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1007F2840();
  uint64_t v27 = v11;
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100058D18((uint64_t *)&unk_100B26700);
  char v12 = (int *)(sub_100058D18(&qword_100B24E38) - 8);
  uint64_t v13 = *(void *)v12;
  uint64_t v34 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v35 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_10085FEF0;
  unint64_t v16 = v15 + v14;
  unint64_t v29 = v15 + v14 + v12[14];
  *(unsigned char *)(v15 + v14) = 0;
  sub_1007FDB70();
  uint64_t v26 = v9;
  sub_1007F2C80();
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  long long v17 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  char v33 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  long long v18 = v6;
  sub_1007F2860();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v38 += 56;
  uint64_t v28 = v19;
  char v20 = v36;
  v19(v36, 1, 1, v11);
  uint64_t v21 = sub_1007F21A0();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v37;
  v22(v37, 1, 1, v21);
  sub_1007F21C0();
  uint64_t v24 = (unsigned char *)(v16 + v34);
  v34 += v16 + v12[14];
  *uint64_t v24 = 1;
  sub_1007FDB70();
  sub_1007F2C80();
  v33(v18, v30, v32);
  sub_1007F2860();
  v28(v20, 1, 1, v27);
  v22(v23, 1, 1, v21);
  sub_1007F21C0();
  unint64_t result = sub_10020FDB4(v35);
  qword_100B75548 = result;
  return result;
}

uint64_t sub_100233EF0(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return sub_1007B1260(*a1, *a2);
}

unint64_t sub_100233F00()
{
  unint64_t result = qword_100B26450;
  if (!qword_100B26450)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26450);
  }
  return result;
}

Swift::Int sub_100233F54()
{
  return sub_1007FF600();
}

uint64_t sub_100233FDC()
{
  sub_1007FDDA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100234050()
{
  return sub_1007FF600();
}

uint64_t sub_1002340D4@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1002384CC(a1, (Swift::OpaquePointer)&off_100A4C5B0, a2);
}

void sub_1002340E0(uint64_t *a1@<X8>)
{
  uint64_t v2 = 0x6563655274736F6DLL;
  if (*v1) {
    uint64_t v2 = 0x6369666963657073;
  }
  unint64_t v3 = 0xEA0000000000746ELL;
  if (*v1) {
    unint64_t v3 = 0xE800000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_100234128()
{
  unint64_t result = qword_100B26458;
  if (!qword_100B26458)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26458);
  }
  return result;
}

unint64_t sub_100234180()
{
  unint64_t result = qword_100B26460;
  if (!qword_100B26460)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26460);
  }
  return result;
}

unint64_t sub_1002341D8()
{
  unint64_t result = qword_100B26468;
  if (!qword_100B26468)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26468);
  }
  return result;
}

unint64_t sub_100234230()
{
  unint64_t result = qword_100B26470;
  if (!qword_100B26470)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26470);
  }
  return result;
}

unint64_t sub_100234288()
{
  unint64_t result = qword_100B26478;
  if (!qword_100B26478)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26478);
  }
  return result;
}

unint64_t sub_1002342E0()
{
  unint64_t result = qword_100B26480;
  if (!qword_100B26480)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26480);
  }
  return result;
}

unint64_t sub_100234338()
{
  unint64_t result = qword_100B26488;
  if (!qword_100B26488)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26488);
  }
  return result;
}

uint64_t sub_10023438C@<X0>(uint64_t a1@<X8>)
{
  return sub_1002387F8(&qword_100B224A0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100B75530, a1);
}

uint64_t sub_1002343C4(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002388B4(a1, a2, a3, (void (*)(void))sub_1002343DC);
}

unint64_t sub_1002343DC()
{
  unint64_t result = qword_100B26490;
  if (!qword_100B26490)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26490);
  }
  return result;
}

uint64_t sub_100234430(uint64_t a1)
{
  unint64_t v2 = sub_1002343DC();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100234480()
{
  unint64_t result = qword_100B26498;
  if (!qword_100B26498)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26498);
  }
  return result;
}

unint64_t sub_1002344D8()
{
  unint64_t result = qword_100B264A0;
  if (!qword_100B264A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264A0);
  }
  return result;
}

unint64_t sub_100234530()
{
  unint64_t result = qword_100B264A8;
  if (!qword_100B264A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264A8);
  }
  return result;
}

uint64_t sub_100234584(uint64_t a1, uint64_t a2)
{
  return sub_100238AD4(a1, a2, &qword_100B224A8);
}

uint64_t sub_1002345A8(uint64_t a1)
{
  unint64_t v2 = sub_100234338();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_1002345F4()
{
  return sub_100043334(&qword_100B264B0, &qword_100B264B8);
}

void sub_100234630(void *a1@<X8>)
{
  *a1 = &off_100A4C600;
}

unint64_t sub_100234644()
{
  unint64_t result = qword_100B264C0;
  if (!qword_100B264C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264C0);
  }
  return result;
}

unint64_t sub_10023469C()
{
  unint64_t result = qword_100B264C8;
  if (!qword_100B264C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264C8);
  }
  return result;
}

uint64_t sub_1002346F0()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_10023470C()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100234728()
{
  uint64_t v0 = sub_1007F2820();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1007F2CE0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1007FDBF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1007F2840();
  sub_10002A6A8(v6, qword_100B75550);
  sub_10005B838(v6, (uint64_t)qword_100B75550);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1007F2860();
}

uint64_t sub_100234908()
{
  return sub_1007F1EB0();
}

uint64_t sub_10023492C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v28 = a1;
  uint64_t v1 = sub_100058D18(&qword_100B266B0);
  uint64_t v2 = *(void *)(v1 - 8);
  uint64_t v26 = v1;
  uint64_t v27 = v2;
  uint64_t v3 = __chkstk_darwin(v1);
  uint64_t v24 = (char *)v22 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v25 = (char *)v22 - v5;
  uint64_t v6 = sub_100058D18(&qword_100B266B8);
  uint64_t v31 = *(void *)(v6 - 8);
  uint64_t v7 = __chkstk_darwin(v6);
  uint64_t v9 = (char *)v22 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = __chkstk_darwin(v7);
  char v12 = (char *)v22 - v11;
  __chkstk_darwin(v10);
  uint64_t v23 = (char *)v22 - v13;
  char v33 = 0;
  uint64_t v30 = sub_100058D18(&qword_100B266C0);
  v22[0] = sub_10023B5CC();
  unint64_t v29 = sub_1002342E0();
  v22[1] = sub_100043334(&qword_100B266C8, &qword_100B266C0);
  sub_1007F2400();
  sub_100043334(&qword_100B266D0, &qword_100B266B8);
  sub_1007F23D0();
  uint64_t v14 = v31 + 8;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v31 + 8);
  v15(v12, v6);
  uint64_t v31 = v14;
  char v32 = 1;
  sub_1007F2400();
  sub_1007F23D0();
  v15(v9, v6);
  unint64_t v16 = v24;
  sub_1007F2440();
  sub_100043334(&qword_100B266D8, &qword_100B266B0);
  long long v17 = v25;
  uint64_t v18 = v26;
  sub_1007F23D0();
  uint64_t v19 = *(void (**)(char *, uint64_t))(v27 + 8);
  v19(v16, v18);
  char v20 = v23;
  sub_1007F23C0();
  v19(v17, v18);
  v15(v12, v6);
  return ((uint64_t (*)(char *, uint64_t))v15)(v20, v6);
}

uint64_t sub_100234DC8@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = sub_100058D18(&qword_100B266E0);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100058D18(&qword_100B266E8);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100058D18(&qword_100B266C0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_10023B5CC();
  sub_1007F2270();
  v13._countAndFlagsBits = 0x206E65704FLL;
  v13._object = (void *)0xE500000000000000;
  sub_1007F2260(v13);
  swift_getKeyPath();
  sub_100058D18(&qword_100B266F0);
  sub_1007F2250();
  swift_release();
  v14._countAndFlagsBits = 32;
  v14._object = (void *)0xE100000000000000;
  sub_1007F2260(v14);
  swift_getKeyPath();
  sub_100058D18(&qword_100B266F8);
  sub_1007F2250();
  swift_release();
  v15._countAndFlagsBits = 0;
  v15._object = (void *)0xE000000000000000;
  sub_1007F2260(v15);
  sub_1007F2290();
  sub_1007F2240();
  sub_100043334(&qword_100B266C8, &qword_100B266C0);
  sub_1007F22C0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1007F22B0();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_1002350D4@<X0>(uint64_t a1@<X8>)
{
  v12[1] = a1;
  uint64_t v1 = sub_100058D18(&qword_100B266E0);
  __chkstk_darwin(v1 - 8);
  uint64_t v2 = sub_100058D18(&qword_100B266E8);
  __chkstk_darwin(v2);
  uint64_t v3 = sub_100058D18(&qword_100B266C0);
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = (char *)v12 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v12 - v8;
  sub_10023B5CC();
  sub_1007F2270();
  v13._countAndFlagsBits = 0x206E65704FLL;
  v13._object = (void *)0xE500000000000000;
  sub_1007F2260(v13);
  swift_getKeyPath();
  sub_100058D18(&qword_100B266F0);
  sub_1007F2250();
  swift_release();
  v14._countAndFlagsBits = 0;
  v14._object = (void *)0xE000000000000000;
  sub_1007F2260(v14);
  sub_1007F2290();
  sub_1007F2240();
  sub_100043334(&qword_100B266C8, &qword_100B266C0);
  sub_1007F22C0();
  uint64_t v10 = *(void (**)(char *, uint64_t))(v4 + 8);
  v10(v7, v3);
  sub_1007F22B0();
  return ((uint64_t (*)(char *, uint64_t))v10)(v9, v3);
}

uint64_t sub_10023539C(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  v4[46] = a3;
  v4[47] = a4;
  v4[44] = a1;
  v4[45] = a2;
  sub_100058D18(&qword_100B25890);
  v4[48] = swift_task_alloc();
  uint64_t v5 = sub_1007F1BC0();
  v4[49] = v5;
  v4[50] = *(void *)(v5 - 8);
  v4[51] = swift_task_alloc();
  sub_1007FE100();
  v4[52] = sub_1007FE0F0();
  uint64_t v7 = sub_1007FE0A0();
  v4[53] = v7;
  v4[54] = v6;
  return _swift_task_switch(sub_1002354C4, v7, v6);
}

uint64_t sub_1002354C4()
{
  sub_1007F1E90();
  if (*(unsigned char *)(v0 + 568))
  {
    sub_1007F1E90();
    uint64_t v1 = *(void *)(v0 + 16);
    uint64_t v2 = *(void *)(v0 + 24);
    *(void *)(v0 + 456) = v1;
    *(void *)(v0 + 464) = v2;
    uint64_t v3 = *(void *)(v0 + 32);
    uint64_t v4 = *(void *)(v0 + 40);
    *(void *)(v0 + 472) = v3;
    *(void *)(v0 + 48sub_1007E6FC4(2, 18, 1, 0) = v4;
    uint64_t v5 = *(void *)(v0 + 48);
    uint64_t v6 = *(void *)(v0 + 56);
    *(void *)(v0 + 488) = v5;
    *(void *)(v0 + 496) = v6;
    uint64_t v7 = *(void *)(v0 + 64);
    uint64_t v8 = *(void *)(v0 + 72);
    *(void *)(v0 + 504) = v7;
    *(void *)(v0 + 512) = v8;
    uint64_t v9 = *(void *)(v0 + 80);
    uint64_t v10 = *(void *)(v0 + 88);
    *(void *)(v0 + 52sub_1007E6FC4(2, 18, 1, 0) = v9;
    *(void *)(v0 + 528) = v10;
    uint64_t v11 = *(void *)(v0 + 96);
    uint64_t v12 = *(void *)(v0 + 104);
    *(void *)(v0 + 536) = v11;
    *(void *)(v0 + 544) = v12;
    if (v2)
    {
      *(void *)(v0 + 112) = v1;
      *(void *)(v0 + 12sub_1007E6FC4(2, 18, 1, 0) = v2;
      *(unsigned char *)(v0 + 128) = v3 & 1;
      *(void *)(v0 + 136) = v4;
      *(void *)(v0 + 144) = v5;
      *(void *)(v0 + 152) = v6;
      *(void *)(v0 + 16sub_1007E6FC4(2, 18, 1, 0) = v7;
      *(void *)(v0 + 168) = v8;
      *(void *)(v0 + 176) = v9;
      *(void *)(v0 + 184) = v10;
      *(void *)(v0 + 192) = v11;
      *(void *)(v0 + 20sub_1007E6FC4(2, 18, 1, 0) = v12;
      sub_1007F1BA0();
      Swift::String v13 = (void *)swift_task_alloc();
      *(void *)(v0 + 552) = v13;
      *Swift::String v13 = v0;
      v13[1] = sub_100235980;
      return sub_10053F444(v0 + 112);
    }
    else
    {
      uint64_t v16 = *(void *)(v0 + 408);
      uint64_t v17 = *(void *)(v0 + 392);
      uint64_t v18 = *(void *)(v0 + 400);
      uint64_t v19 = *(void *)(v0 + 384);
      swift_release();
      sub_1007F1EB0();
      uint64_t v20 = sub_1007F1DA0();
      (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v19, 1, 1, v20);
      sub_1007F1EC0();
      swift_release();
      sub_10005AFE8(v19, &qword_100B25890);
      sub_10023B620();
      swift_allocError();
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 16))(v21, v16, v17);
      swift_willThrow();
      (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v16, v17);
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v22 = *(uint64_t (**)(void))(v0 + 8);
      return v22();
    }
  }
  else
  {
    sub_1007F1BA0();
    Swift::String v15 = (void *)swift_task_alloc();
    *(void *)(v0 + 44sub_1007E6FC4(2, 18, 1, 0) = v15;
    void *v15 = v0;
    v15[1] = sub_1002357A0;
    return sub_10053EA9C();
  }
}

uint64_t sub_1002357A0()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 448) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 424);
    uint64_t v4 = *(void *)(v2 + 432);
    uint64_t v5 = sub_100235BD8;
  }
  else
  {

    swift_unknownObjectRelease();
    *(void *)(v2 + 32sub_1007E6FC4(2, 18, 1, 0) = *(void *)(v2 + 232);
    sub_100071814(v2 + 320);
    *(void *)(v2 + 328) = *(void *)(v2 + 240);
    sub_100071814(v2 + 328);
    uint64_t v3 = *(void *)(v2 + 424);
    uint64_t v4 = *(void *)(v2 + 432);
    uint64_t v5 = sub_1002358FC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_1002358FC()
{
  swift_release();
  sub_1007F1DD0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100235980()
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 56sub_1007E6FC4(2, 18, 1, 0) = v0;
  swift_task_dealloc();
  if (v0)
  {
    uint64_t v3 = *(void *)(v2 + 424);
    uint64_t v4 = *(void *)(v2 + 432);
    uint64_t v5 = sub_100235C90;
  }
  else
  {

    swift_unknownObjectRelease();
    *(void *)(v2 + 312) = *(void *)(v2 + 272);
    sub_100071814(v2 + 312);
    *(void *)(v2 + 344) = *(void *)(v2 + 280);
    sub_100071814(v2 + 344);
    uint64_t v3 = *(void *)(v2 + 424);
    uint64_t v4 = *(void *)(v2 + 432);
    uint64_t v5 = sub_100235ADC;
  }
  return _swift_task_switch(v5, v3, v4);
}

uint64_t sub_100235ADC()
{
  uint64_t v2 = v0[57];
  uint64_t v1 = v0[58];
  swift_release();
  sub_10005F0E4(v2, v1);
  sub_1007F1DD0();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100235BD8()
{
  swift_release();

  swift_unknownObjectRelease();
  *(void *)(v0 + 336) = *(void *)(v0 + 232);
  sub_100071814(v0 + 336);
  *(void *)(v0 + 304) = *(void *)(v0 + 240);
  sub_100071814(v0 + 304);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100235C90()
{
  uint64_t v1 = *(void *)(v0 + 456);
  uint64_t v2 = *(void *)(v0 + 464);
  swift_release();

  swift_unknownObjectRelease();
  *(void *)(v0 + 296) = *(void *)(v0 + 272);
  sub_100071814(v0 + 296);
  *(void *)(v0 + 288) = *(void *)(v0 + 280);
  sub_100071814(v0 + 288);
  sub_10005F0E4(v1, v2);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = *(uint64_t (**)(void))(v0 + 8);
  return v3();
}

uint64_t sub_100235DC4@<X0>(uint64_t a1@<X8>)
{
  return sub_1002387F8(&qword_100B224B0, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100B75550, a1);
}

uint64_t sub_100235E00(uint64_t a1, uint64_t a2)
{
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v4 = sub_100058D18(&qword_100B266A0);
  uint64_t v5 = sub_100043334(&qword_100B266A8, &qword_100B266A0);

  return ParameterSummarySwitchCondition.init(_:_:)(KeyPath, sub_10023492C, 0, v4, a2, v5);
}

uint64_t sub_100235EB8(uint64_t a1)
{
  uint64_t v4 = *v1;
  uint64_t v5 = v1[1];
  uint64_t v6 = v1[2];
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v7;
  void *v7 = v2;
  v7[1] = sub_1000366AC;
  return sub_10023539C(a1, v4, v5, v6);
}

uint64_t sub_100235F6C@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_100239C90();
  *a1 = result;
  a1[1] = v3;
  a1[2] = v4;
  return result;
}

uint64_t sub_100235F98(uint64_t a1)
{
  unint64_t v2 = sub_10023B5CC();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

unint64_t sub_100235FD8()
{
  unint64_t result = qword_100B2CB90;
  if (!qword_100B2CB90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B2CB90);
  }
  return result;
}

uint64_t sub_10023602C()
{
  sub_100058D18(&qword_100B26658);
  sub_1007F1C60();
  sub_1007F1C50();
  uint64_t result = sub_1007F1BB0();
  qword_100B75568 = result;
  return result;
}

uint64_t sub_100236094()
{
  uint64_t v0 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v0 - 8);
  unint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1007F2820();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007F2CE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1007FDBF0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1007F2840();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1007F2390();
  sub_10002A6A8(v10, qword_100B75570);
  sub_10005B838(v10, (uint64_t)qword_100B75570);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1007F2860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1007F2380();
}

uint64_t sub_100236360@<X0>(uint64_t a1@<X8>)
{
  v21[1] = a1;
  uint64_t v1 = sub_100058D18(&qword_100B258D8);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)v21 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100058D18(&qword_100B25898);
  uint64_t v5 = __chkstk_darwin(v4 - 8);
  uint64_t v7 = (char *)v21 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v21 - v8;
  uint64_t v10 = sub_1007F2840();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = __chkstk_darwin(v10);
  Swift::String v14 = (char *)v21 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v16 = (char *)v21 - v15;
  sub_1007F1DF0();
  if (!v22) {
    swift_bridgeObjectRetain();
  }
  sub_1007F2810();
  sub_1007F1DF0();
  uint64_t v17 = v22;
  swift_bridgeObjectRelease();
  if (!v17)
  {
    uint64_t v19 = 1;
    goto LABEL_7;
  }
  uint64_t result = sub_1007F1DF0();
  if (v22)
  {
    sub_1007F2810();
    uint64_t v19 = 0;
LABEL_7:
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v11 + 56))(v9, v19, 1, v10);
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v14, v16, v10);
    sub_10023B4FC((uint64_t)v9, (uint64_t)v7);
    uint64_t v20 = sub_1007F21A0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(v3, 1, 1, v20);
    sub_1007F21C0();
    sub_10005AFE8((uint64_t)v9, &qword_100B25898);
    return (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v16, v10);
  }
  __break(1u);
  return result;
}

uint64_t sub_100236640@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B26930);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v20 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self defaultManager];
  NSString v6 = sub_1007FDC30();
  id v7 = [v5 libraryAssetOnMainQueueWithAssetID:v6];

  if (v7)
  {
    id v8 = [v7 storeID];
    if (v8)
    {
      uint64_t v9 = v8;
      id v10 = [self storeURLForBookStoreId:v8 isAudiobook:0];

      if (v10)
      {
        sub_1007F2990();

        uint64_t v11 = sub_1007F29D0();
        (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v4, 0, 1, v11);
      }
      else
      {

        uint64_t v19 = sub_1007F29D0();
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v19 - 8) + 56))(v4, 1, 1, v19);
      }
      return sub_100058CB4((uint64_t)v4, a1, (uint64_t *)&unk_100B26930);
    }
  }
  if (qword_100B22498 != -1) {
    swift_once();
  }
  uint64_t v12 = sub_1007F6BC0();
  sub_10005B838(v12, (uint64_t)qword_100B26438);
  uint64_t v13 = sub_1007F6BA0();
  os_log_type_t v14 = sub_1007FE3B0();
  if (os_log_type_enabled(v13, v14))
  {
    uint64_t v15 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v15 = 0;
    _os_log_impl((void *)&_mh_execute_header, v13, v14, "Failed fetching storeID", v15, 2u);
    swift_slowDealloc();
  }

  uint64_t v16 = sub_1007F29D0();
  uint64_t v17 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v16 - 8) + 56);

  return v17(a1, 1, 1, v16);
}

unint64_t sub_10023693C()
{
  unint64_t result = qword_100B264D8;
  if (!qword_100B264D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264D8);
  }
  return result;
}

uint64_t sub_100236990()
{
  uint64_t v0 = sub_100058D18(&qword_100B26678);
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v6 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100058D18(&qword_100B26680);
  __chkstk_darwin(v4);
  sub_100235FD8();
  sub_1007F2330();
  v7._object = (void *)0x8000000100906610;
  v7._countAndFlagsBits = 0xD00000000000001FLL;
  sub_1007F2320(v7);
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for _EntityURLRepresentation.StringInterpolation.Token.id<A>(_:), v0);
  sub_1007F2310();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  v8._countAndFlagsBits = 0;
  v8._object = (void *)0xE000000000000000;
  sub_1007F2320(v8);
  return sub_1007F2340();
}

unint64_t sub_100236B50()
{
  unint64_t result = qword_100B264E0;
  if (!qword_100B264E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264E0);
  }
  return result;
}

unint64_t sub_100236BA8()
{
  unint64_t result = qword_100B264E8;
  if (!qword_100B264E8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264E8);
  }
  return result;
}

unint64_t sub_100236C00()
{
  unint64_t result = qword_100B264F0;
  if (!qword_100B264F0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264F0);
  }
  return result;
}

unint64_t sub_100236C58()
{
  unint64_t result = qword_100B264F8;
  if (!qword_100B264F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B264F8);
  }
  return result;
}

void *sub_100236CAC()
{
  return &protocol witness table for String;
}

uint64_t sub_100236CB8@<X0>(void *a1@<X8>)
{
  if (qword_100B224B8 != -1) {
    swift_once();
  }
  *a1 = qword_100B75568;

  return swift_retain();
}

uint64_t sub_100236D24()
{
  sub_10023B564();
  uint64_t v2 = sub_1007F22D0();
  uint64_t v3 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
  return sub_10023B5B8(v3, v0, v2, v1);
}

unint64_t sub_100236DBC()
{
  unint64_t result = qword_100B26508;
  if (!qword_100B26508)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26508);
  }
  return result;
}

unint64_t sub_100236E14()
{
  unint64_t result = qword_100B26510;
  if (!qword_100B26510)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26510);
  }
  return result;
}

unint64_t sub_100236E6C()
{
  unint64_t result = qword_100B26518;
  if (!qword_100B26518)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26518);
  }
  return result;
}

unint64_t sub_100236EC4()
{
  unint64_t result = qword_100B26520;
  if (!qword_100B26520)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26520);
  }
  return result;
}

void *sub_100236F18()
{
  return &protocol witness table for String;
}

uint64_t sub_100236F24@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1[1];
  *a1 = *v1;
  a1[1] = v2;
  return swift_bridgeObjectRetain();
}

uint64_t sub_100236F30@<X0>(uint64_t a1@<X8>)
{
  return sub_1002387F8(&qword_100B224C0, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100B75570, a1);
}

uint64_t sub_100236F68()
{
  return sub_100043334(&qword_100B26528, &qword_100B26530);
}

uint64_t sub_100236FA4(uint64_t a1)
{
  unint64_t v2 = sub_100235FD8();

  return static AppEntity.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100236FF4()
{
  unint64_t result = qword_100B26538;
  if (!qword_100B26538)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26538);
  }
  return result;
}

uint64_t sub_10023704C(uint64_t a1)
{
  unint64_t v2 = sub_100236EC4();

  return InstanceDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100237098(uint64_t a1, uint64_t a2, uint64_t a3)
{
  v4[9] = a1;
  v4[10] = a2;
  uint64_t v5 = *v3;
  v4[11] = a3;
  v4[12] = v5;
  return _swift_task_switch(sub_1002370C0, 0, 0);
}

uint64_t sub_1002370C0()
{
  uint64_t v1 = v0[11];
  sub_1007F1BA0();
  unint64_t v2 = (void *)swift_task_alloc();
  v0[13] = v2;
  void *v2 = v0;
  v2[1] = sub_100237174;
  uint64_t v3 = v0[10];
  return sub_1005402F8(v3, v1);
}

uint64_t sub_100237174(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 72);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  *(void *)(v3 + 64) = *(void *)(v3 + 40);
  sub_100071814(v3 + 64);
  *(void *)(v3 + 56) = *(void *)(v3 + 48);
  sub_100071814(v3 + 56);
  void *v4 = a1;
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100237324()
{
  unint64_t result = qword_100B26548;
  if (!qword_100B26548)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26548);
  }
  return result;
}

unint64_t sub_10023737C()
{
  unint64_t result = qword_100B26550[0];
  if (!qword_100B26550[0])
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100B26550);
  }
  return result;
}

uint64_t sub_1002373D0@<X0>(uint64_t *a1@<X8>)
{
  sub_100058D18(&qword_100B26658);
  sub_1007F1C60();
  sub_1007F1C50();
  uint64_t result = sub_1007F1BB0();
  *a1 = result;
  return result;
}

uint64_t sub_100237440(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 8sub_1007E6FC4(2, 18, 1, 0) = v3;
  return _swift_task_switch(sub_100237464, 0, 0);
}

uint64_t sub_100237464()
{
  sub_1007F1BA0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_10023750C;
  uint64_t v2 = *(void *)(v0 + 72);
  return sub_10053FC78(v2);
}

uint64_t sub_10023750C(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *v1;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  *(void *)(v3 + 64) = *(void *)(v3 + 40);
  sub_100071814(v3 + 64);
  *(void *)(v3 + 56) = *(void *)(v3 + 48);
  sub_100071814(v3 + 56);
  uint64_t v5 = *(uint64_t (**)(uint64_t))(v4 + 8);
  return v5(a1);
}

uint64_t sub_10023769C(uint64_t a1)
{
  uint64_t v3 = *v1;
  *(void *)(v2 + 72) = a1;
  *(void *)(v2 + 8sub_1007E6FC4(2, 18, 1, 0) = v3;
  return _swift_task_switch(sub_1002376C0, 0, 0);
}

uint64_t sub_1002376C0()
{
  sub_1007F1BA0();
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 88) = v1;
  void *v1 = v0;
  v1[1] = sub_100237768;
  return sub_1005402F8(0, 0);
}

uint64_t sub_100237768(uint64_t a1)
{
  uint64_t v3 = *v1;
  uint64_t v4 = *(void **)(*v1 + 72);
  uint64_t v5 = *v1;
  swift_task_dealloc();

  swift_unknownObjectRelease();
  *(void *)(v3 + 64) = *(void *)(v3 + 40);
  sub_100071814(v3 + 64);
  *(void *)(v3 + 56) = *(void *)(v3 + 48);
  sub_100071814(v3 + 56);
  void *v4 = a1;
  uint64_t v6 = *(uint64_t (**)(void))(v5 + 8);
  return v6();
}

unint64_t sub_100237918()
{
  unint64_t result = qword_100B26568;
  if (!qword_100B26568)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26568);
  }
  return result;
}

unint64_t sub_100237970()
{
  unint64_t result = qword_100B26570[0];
  if (!qword_100B26570[0])
  {
    sub_100043378(&qword_100B3A250);
    sub_100236E6C();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, qword_100B26570);
  }
  return result;
}

uint64_t sub_1002379E4(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v5;
  unint64_t v6 = sub_100236C58();
  void *v5 = v2;
  v5[1] = sub_100007434;
  return EntityQuery.results()(a1, a2, v6);
}

uint64_t sub_100237A98(uint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v3 + 16) = v7;
  void *v7 = v3;
  v7[1] = sub_1000366AC;
  return DynamicOptionsProvider.defaultResult()(a1, a2, a3);
}

uint64_t sub_100237B50()
{
  uint64_t v0 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1007F2820();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007F2CE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1007FDBF0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1007F2840();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1007F2390();
  sub_10002A6A8(v10, qword_100B75588);
  sub_10005B838(v10, (uint64_t)qword_100B75588);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1007F2860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1007F2380();
}

unint64_t sub_100237E2C()
{
  uint64_t v0 = sub_100058D18(&qword_100B258D8);
  __chkstk_darwin(v0 - 8);
  uint64_t v36 = (char *)&v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v2 - 8);
  uint64_t v35 = (char *)&v26 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v37 = sub_1007F2820();
  uint64_t v4 = *(void *)(v37 - 8);
  __chkstk_darwin(v37);
  uint64_t v6 = (char *)&v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007F2CE0();
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v26 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007FDBF0();
  __chkstk_darwin(v10 - 8);
  uint64_t v11 = sub_1007F2840();
  uint64_t v27 = v11;
  uint64_t v38 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  sub_100058D18(&qword_100B26668);
  uint64_t v12 = (int *)(sub_100058D18(&qword_100B24E28) - 8);
  uint64_t v13 = *(void *)v12;
  uint64_t v33 = *(void *)(*(void *)v12 + 72);
  unint64_t v14 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v15 = swift_allocObject();
  uint64_t v34 = v15;
  *(_OWORD *)(v15 + 16) = xmmword_10085FEF0;
  unint64_t v16 = v15 + v14;
  unint64_t v29 = v15 + v14 + v12[14];
  *(unsigned char *)(v15 + v14) = 0;
  sub_1007FDB70();
  uint64_t v26 = v9;
  sub_1007F2C80();
  unsigned int v30 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v17 = *(void (**)(void))(v4 + 104);
  uint64_t v31 = v4 + 104;
  char v32 = (void (*)(char *, void, uint64_t))v17;
  v17(v6);
  uint64_t v18 = v6;
  sub_1007F2860();
  uint64_t v19 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v38 + 56);
  v38 += 56;
  uint64_t v28 = v19;
  uint64_t v20 = v35;
  v19(v35, 1, 1, v11);
  uint64_t v21 = sub_1007F21A0();
  uint64_t v22 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v21 - 8) + 56);
  uint64_t v23 = v36;
  v22(v36, 1, 1, v21);
  sub_1007F21C0();
  uint64_t v24 = (unsigned char *)(v16 + v33);
  v33 += v16 + v12[14];
  *uint64_t v24 = 1;
  sub_1007FDB70();
  sub_1007F2C80();
  v32(v18, v30, v37);
  sub_1007F2860();
  v28(v20, 1, 1, v27);
  v22(v23, 1, 1, v21);
  sub_1007F21C0();
  unint64_t result = sub_10020FDDC(v34);
  qword_100B755A0 = result;
  return result;
}

uint64_t sub_100238318(char *a1, char *a2)
{
  return sub_1007B0E9C(*a1, *a2);
}

unint64_t sub_100238328()
{
  unint64_t result = qword_100B26588;
  if (!qword_100B26588)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26588);
  }
  return result;
}

Swift::Int sub_10023837C()
{
  return sub_1007FF600();
}

uint64_t sub_1002383F0()
{
  sub_1007FDDA0();

  return swift_bridgeObjectRelease();
}

Swift::Int sub_100238450()
{
  return sub_1007FF600();
}

uint64_t sub_1002384C0@<X0>(uint64_t *a1@<X0>, char *a2@<X8>)
{
  return sub_1002384CC(a1, (Swift::OpaquePointer)&off_100A4C678, a2);
}

uint64_t sub_1002384CC@<X0>(uint64_t *a1@<X0>, Swift::OpaquePointer a2@<X3>, char *a3@<X8>)
{
  v9._countAndFlagsBits = *a1;
  uint64_t v4 = (void *)a1[1];
  v9._object = v4;
  Swift::Int v6 = sub_1007FF320(a2, v9);
  uint64_t result = swift_bridgeObjectRelease();
  if (v6 == 1) {
    char v8 = 1;
  }
  else {
    char v8 = 2;
  }
  if (!v6) {
    char v8 = 0;
  }
  *a3 = v8;
  return result;
}

void sub_100238528(uint64_t *a1@<X8>)
{
  uint64_t v2 = 1802465122;
  if (*v1) {
    uint64_t v2 = 6710384;
  }
  unint64_t v3 = 0xE400000000000000;
  if (*v1) {
    unint64_t v3 = 0xE300000000000000;
  }
  *a1 = v2;
  a1[1] = v3;
}

unint64_t sub_10023855C()
{
  unint64_t result = qword_100B26590;
  if (!qword_100B26590)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26590);
  }
  return result;
}

unint64_t sub_1002385B4()
{
  unint64_t result = qword_100B26598;
  if (!qword_100B26598)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26598);
  }
  return result;
}

unint64_t sub_10023860C()
{
  unint64_t result = qword_100B265A0;
  if (!qword_100B265A0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265A0);
  }
  return result;
}

unint64_t sub_100238664()
{
  unint64_t result = qword_100B265A8;
  if (!qword_100B265A8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265A8);
  }
  return result;
}

unint64_t sub_1002386BC()
{
  unint64_t result = qword_100B265B0;
  if (!qword_100B265B0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265B0);
  }
  return result;
}

unint64_t sub_100238714()
{
  unint64_t result = qword_100B265B8;
  if (!qword_100B265B8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265B8);
  }
  return result;
}

unint64_t sub_10023876C()
{
  unint64_t result = qword_100B265C0;
  if (!qword_100B265C0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265C0);
  }
  return result;
}

uint64_t sub_1002387C0@<X0>(uint64_t a1@<X8>)
{
  return sub_1002387F8(&qword_100B224C8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100B75588, a1);
}

uint64_t sub_1002387F8@<X0>(void *a1@<X2>, uint64_t (*a2)(void)@<X3>, uint64_t a3@<X4>, uint64_t a4@<X8>)
{
  if (*a1 != -1) {
    swift_once();
  }
  uint64_t v7 = a2(0);
  uint64_t v8 = sub_10005B838(v7, a3);
  Swift::String v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 16);

  return v9(a4, v8, v7);
}

uint64_t sub_10023889C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return sub_1002388B4(a1, a2, a3, (void (*)(void))sub_100238908);
}

uint64_t sub_1002388B4(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(void))
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100238908()
{
  unint64_t result = qword_100B265C8;
  if (!qword_100B265C8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265C8);
  }
  return result;
}

uint64_t sub_10023895C(uint64_t a1)
{
  unint64_t v2 = sub_100238908();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_1002389AC()
{
  unint64_t result = qword_100B265D0;
  if (!qword_100B265D0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265D0);
  }
  return result;
}

unint64_t sub_100238A04()
{
  unint64_t result = qword_100B265D8;
  if (!qword_100B265D8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265D8);
  }
  return result;
}

unint64_t sub_100238A5C()
{
  unint64_t result = qword_100B265E0;
  if (!qword_100B265E0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265E0);
  }
  return result;
}

uint64_t sub_100238AB0(uint64_t a1, uint64_t a2)
{
  return sub_100238AD4(a1, a2, &qword_100B224D0);
}

uint64_t sub_100238AD4(uint64_t a1, uint64_t a2, void *a3)
{
  if (*a3 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100238B24(uint64_t a1)
{
  unint64_t v2 = sub_10023876C();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100238B70()
{
  return sub_100043334(&qword_100B265E8, &qword_100B265F0);
}

void sub_100238BAC(void *a1@<X8>)
{
  *a1 = &off_100A4C6C8;
}

unint64_t sub_100238BC0()
{
  unint64_t result = qword_100B265F8;
  if (!qword_100B265F8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B265F8);
  }
  return result;
}

Swift::Int sub_100238C14()
{
  sub_1007FF5C0();
  sub_1007FDDA0();
  sub_1007F1DF0();
  if (v1)
  {
    sub_1007FF5E0(1u);
    swift_bridgeObjectRetain();
    sub_1007FDDA0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1007FF5E0(0);
  }
  sub_1007F1DF0();
  if (v1)
  {
    sub_1007FF5E0(1u);
    swift_bridgeObjectRetain();
    sub_1007FDDA0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1007FF5E0(0);
  }
  return sub_1007FF600();
}

void sub_100238D18()
{
  sub_1007FDDA0();
  sub_1007F1DF0();
  if (v0)
  {
    sub_1007FF5E0(1u);
    swift_bridgeObjectRetain();
    sub_1007FDDA0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1007FF5E0(0);
  }
  sub_1007F1DF0();
  if (v0)
  {
    sub_1007FF5E0(1u);
    swift_bridgeObjectRetain();
    sub_1007FDDA0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1007FF5E0(0);
  }
}

Swift::Int sub_100238E10()
{
  sub_1007FF5C0();
  sub_1007FDDA0();
  sub_1007F1DF0();
  if (v1)
  {
    sub_1007FF5E0(1u);
    swift_bridgeObjectRetain();
    sub_1007FDDA0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1007FF5E0(0);
  }
  sub_1007F1DF0();
  if (v1)
  {
    sub_1007FF5E0(1u);
    swift_bridgeObjectRetain();
    sub_1007FDDA0();
    swift_bridgeObjectRelease_n();
  }
  else
  {
    sub_1007FF5E0(0);
  }
  return sub_1007FF600();
}

uint64_t sub_100238F20(_OWORD *a1, _OWORD *a2)
{
  long long v2 = a1[3];
  void v9[2] = a1[2];
  v9[3] = v2;
  long long v3 = a1[5];
  void v9[4] = a1[4];
  v9[5] = v3;
  long long v4 = a1[1];
  v9[0] = *a1;
  v9[1] = v4;
  long long v5 = a2[3];
  void v10[2] = a2[2];
  v10[3] = v5;
  long long v6 = a2[5];
  void v10[4] = a2[4];
  void v10[5] = v6;
  long long v7 = a2[1];
  v10[0] = *a2;
  v10[1] = v7;
  return sub_100239B04(v9, v10) & 1;
}

ValueMetadata *type metadata accessor for BookAppEntityContentType()
{
  return &type metadata for BookAppEntityContentType;
}

ValueMetadata *type metadata accessor for BookEntityStringQuery()
{
  return &type metadata for BookEntityStringQuery;
}

uint64_t destroy for BookAppEntity()
{
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();

  return swift_bridgeObjectRelease();
}

uint64_t initializeWithCopy for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  uint64_t v5 = *(void *)(a2 + 48);
  *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 40);
  *(void *)(a1 + 48) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  *(void *)(a1 + 64) = v6;
  uint64_t v7 = *(void *)(a2 + 80);
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v7;
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t assignWithCopy for BookAppEntity(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_retain();
  swift_release();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_retain();
  swift_release();
  *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_retain();
  swift_release();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  swift_retain();
  swift_release();
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_retain();
  swift_release();
  *(void *)(a1 + 64) = *(void *)(a2 + 64);
  swift_retain();
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_retain();
  swift_release();
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = *(void *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

__n128 initializeWithTake for BookAppEntity(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 64) = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v5;
  *(__n128 *)(a1 + 32) = result;
  *(_OWORD *)(a1 + 48) = v4;
  return result;
}

uint64_t assignWithTake for BookAppEntity(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 16) = *(unsigned char *)(a2 + 16);
  swift_release();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 40);
  swift_release();
  swift_release();
  *(_OWORD *)(a1 + 56) = *(_OWORD *)(a2 + 56);
  swift_release();
  *(void *)(a1 + 72) = *(void *)(a2 + 72);
  swift_release();
  uint64_t v5 = *(void *)(a2 + 88);
  *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 80);
  *(void *)(a1 + 88) = v5;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for BookAppEntity(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 96)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for BookAppEntity(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 88) = 0;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 96) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 96) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookAppEntity()
{
  return &type metadata for BookAppEntity;
}

uint64_t destroy for OpenBookIntent()
{
  swift_release();
  swift_release();

  return swift_release();
}

void *_s5Books14OpenBookIntentVwCP_0(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  a1[2] = a2[2];
  swift_retain();
  swift_retain();
  swift_retain();
  return a1;
}

void *assignWithCopy for OpenBookIntent(void *a1, void *a2)
{
  *a1 = *a2;
  swift_retain();
  swift_release();
  a1[1] = a2[1];
  swift_retain();
  swift_release();
  a1[2] = a2[2];
  swift_retain();
  swift_release();
  return a1;
}

uint64_t assignWithTake for OpenBookIntent(uint64_t a1, uint64_t a2)
{
  *(_OWORD *)a1 = *(_OWORD *)a2;
  swift_release();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_release();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenBookIntent(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 24)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenBookIntent(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)(result + 8) = 0;
    *(void *)(result + 16) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 24) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)__n128 result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 24) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenBookIntent()
{
  return &type metadata for OpenBookIntent;
}

unsigned char *_s5Books24BookAppEntityContentTypeOwst_0(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 1 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 8) + 1;
    *__n128 result = a2 + 1;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100239630);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *__n128 result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for OpenBookIntent.OpenMode()
{
  return &type metadata for OpenBookIntent.OpenMode;
}

uint64_t sub_100239668()
{
  return sub_100043334(&qword_100B26600, &qword_100B26608);
}

uint64_t sub_1002396A4()
{
  return sub_100043334((unint64_t *)&qword_100B26AE0, &qword_100B25888);
}

uint64_t sub_1002396E0(uint64_t a1, uint64_t *a2)
{
  *(void *)(v2 + 16) = a1;
  sub_100058D18((uint64_t *)&unk_100B26930);
  *(void *)(v2 + 24) = swift_task_alloc();
  uint64_t v4 = swift_task_alloc();
  uint64_t v5 = *a2;
  uint64_t v6 = a2[1];
  *(void *)(v2 + 32) = v4;
  *(void *)(v2 + 4sub_1007E6FC4(2, 18, 1, 0) = v5;
  *(void *)(v2 + 48) = v6;
  *(unsigned char *)(v2 + 8sub_1007E6FC4(2, 18, 1, 0) = *((unsigned char *)a2 + 16);
  *(_OWORD *)(v2 + 56) = *((_OWORD *)a2 + 5);
  return _swift_task_switch(sub_1002397A0, 0, 0);
}

uint64_t sub_1002397A0()
{
  int v1 = *(unsigned __int8 *)(v0 + 80);
  uint64_t v2 = *(void *)(v0 + 16);
  uint64_t v3 = sub_1007F29D0();
  uint64_t v4 = *(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v3 - 8) + 56);
  v4(v2, 1, 1, v3);
  if (v1 == 1)
  {
    sub_1007FE100();
    *(void *)(v0 + 72) = sub_1007FE0F0();
    uint64_t v6 = sub_1007FE0A0();
    return _swift_task_switch(sub_1002399DC, v6, v5);
  }
  else
  {
    if (*(void *)(v0 + 64))
    {
      uint64_t v7 = self;
      NSString v8 = sub_1007FDC30();
      id v9 = [v7 storeURLForBookStoreId:v8 isAudiobook:0];

      if (v9)
      {
        sub_1007F2990();

        uint64_t v10 = 0;
      }
      else
      {
        uint64_t v10 = 1;
      }
      uint64_t v13 = *(void *)(v0 + 16);
      uint64_t v12 = *(void *)(v0 + 24);
      sub_10005AFE8(v13, (uint64_t *)&unk_100B26930);
      v4(v12, v10, 1, v3);
      sub_100058CB4(v12, v13, (uint64_t *)&unk_100B26930);
    }
    else
    {
      uint64_t v11 = *(void *)(v0 + 16);
      sub_10005AFE8(v11, (uint64_t *)&unk_100B26930);
      v4(v11, 1, 1, v3);
    }
    swift_task_dealloc();
    swift_task_dealloc();
    unint64_t v14 = *(uint64_t (**)(void))(v0 + 8);
    return v14();
  }
}

uint64_t sub_1002399DC()
{
  uint64_t v1 = *(void *)(v0 + 32);
  swift_release();
  sub_100236640(v1);
  return _swift_task_switch(sub_100239A64, 0, 0);
}

uint64_t sub_100239A64()
{
  uint64_t v1 = v0[4];
  uint64_t v2 = v0[2];
  sub_10005AFE8(v2, (uint64_t *)&unk_100B26930);
  sub_100058CB4(v1, v2, (uint64_t *)&unk_100B26930);
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

uint64_t sub_100239B04(void *a1, void *a2)
{
  BOOL v2 = *a1 == *a2 && a1[1] == a2[1];
  if (v2 || (char v3 = 0, (sub_1007FF470() & 1) != 0))
  {
    sub_1007F1DF0();
    sub_1007F1DF0();
    if (v5)
    {
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
    }
    sub_1007F1DF0();
    sub_1007F1DF0();
    if (v5)
    {
      swift_bridgeObjectRelease();
      char v3 = 1;
      swift_bridgeObjectRelease();
    }
    else
    {
      char v3 = 1;
    }
  }
  return v3 & 1;
}

uint64_t sub_100239C90()
{
  uint64_t v0 = sub_1007F22A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v54 = v0;
  uint64_t v55 = v1;
  __chkstk_darwin(v0);
  uint64_t v53 = (char *)&v35 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100058D18(&qword_100B25890);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v52 = (char *)&v35 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  long long v51 = (char *)&v35 - v6;
  uint64_t v7 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v7 - 8);
  long long v50 = (char *)&v35 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1007F2820();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = (char *)&v35 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_1007F2CE0();
  __chkstk_darwin(v13 - 8);
  uint64_t v14 = sub_1007FDBF0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1007F2840();
  uint64_t v41 = v15;
  uint64_t v16 = *(void *)(v15 - 8);
  uint64_t v17 = __chkstk_darwin(v15);
  uint64_t v48 = (char *)&v35 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  long long v49 = (char *)&v35 - v19;
  uint64_t v47 = sub_100058D18(&qword_100B26648);
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v10 + 104);
  unsigned int v37 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v38 = v9;
  v21(v12, enum case for LocalizedStringResource.BundleDescription.main(_:), v9);
  uint64_t v36 = v21;
  uint64_t v39 = v10 + 104;
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v21(v12, v20, v9);
  uint64_t v22 = v50;
  sub_1007F2860();
  uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v16 + 56);
  uint64_t v40 = v16 + 56;
  char v42 = v23;
  v23(v22, 0, 1, v15);
  LOBYTE(v56) = 0;
  uint64_t v24 = sub_1007F1DA0();
  char v25 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v24 - 8) + 56);
  uint64_t v44 = v25;
  v25(v51, 1, 1, v24);
  v25(v52, 1, 1, v24);
  unsigned int v45 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v26 = *(void (**)(void))(v55 + 104);
  v55 += 104;
  uint64_t v46 = (void (*)(char *, void, uint64_t))v26;
  v26(v53);
  sub_1002343DC();
  uint64_t v47 = sub_1007F1EF0();
  uint64_t v43 = sub_100058D18(&qword_100B26650);
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v27 = v37;
  uint64_t v28 = v38;
  unint64_t v29 = v36;
  v36(v12, v37, v38);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v30 = v27;
  v29(v12, v27, v28);
  uint64_t v31 = v50;
  sub_1007F2860();
  v42(v31, 0, 1, v41);
  long long v60 = 0u;
  long long v61 = 0u;
  long long v58 = 0u;
  long long v59 = 0u;
  long long v56 = 0u;
  long long v57 = 0u;
  sub_1007FDB70();
  sub_1007F2C80();
  v29(v12, v30, v28);
  sub_1007F2860();
  char v32 = v51;
  sub_1007F1DB0();
  uint64_t v33 = v44;
  v44(v32, 0, 1, v24);
  v33(v52, 1, 1, v24);
  v46(v53, v45, v54);
  sub_100235FD8();
  sub_1007F1F10();
  sub_100058D18(&qword_100B26658);
  sub_1007F1C60();
  long long v56 = 0u;
  long long v57 = 0u;
  *(void *)&long long v58 = 0;
  sub_1007F1C50();
  sub_1007F1BB0();
  return v47;
}

uint64_t sub_10023A4A8(char a1, uint64_t a2)
{
  long long v57 = (void *)a2;
  int v56 = a1 & 1;
  uint64_t v2 = sub_1007F22A0();
  uint64_t v3 = *(void *)(v2 - 8);
  uint64_t v63 = v2;
  uint64_t v64 = v3;
  __chkstk_darwin(v2);
  uint64_t v62 = &v42[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_100058D18(&qword_100B25890);
  __chkstk_darwin(v5 - 8);
  long long v61 = &v42[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  long long v60 = &v42[-v8];
  uint64_t v9 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v9 - 8);
  long long v59 = &v42[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v11 = sub_1007F2820();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = &v42[-((v13 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v15 = sub_1007F2CE0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1007FDBF0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_1007F2840();
  uint64_t v48 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  uint64_t v55 = &v42[-((v19 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v20);
  long long v58 = &v42[-v21];
  uint64_t v50 = sub_100058D18(&qword_100B26648);
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v22 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v23 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v43 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v44 = v11;
  v23(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  unsigned int v45 = v23;
  uint64_t v46 = v12 + 104;
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v23(v14, v22, v11);
  uint64_t v24 = v59;
  sub_1007F2860();
  char v25 = *(void (**)(unsigned char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v47 = v18 + 56;
  long long v49 = v25;
  v25(v24, 0, 1, v17);
  LOBYTE(v65) = 0;
  uint64_t v26 = sub_1007F1DA0();
  uint64_t v27 = *(void *)(v26 - 8);
  uint64_t v28 = *(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v27 + 56);
  long long v51 = v28;
  uint64_t v52 = v27 + 56;
  v28(v60, 1, 1, v26);
  v28(v61, 1, 1, v26);
  unsigned int v53 = enum case for InputConnectionBehavior.default(_:);
  unint64_t v29 = *(void (**)(void))(v64 + 104);
  v64 += 104;
  uint64_t v54 = (void (*)(unsigned char *, void, uint64_t))v29;
  v29(v62);
  sub_1002343DC();
  uint64_t v30 = sub_1007F1EF0();
  uint64_t v50 = sub_100058D18(&qword_100B26650);
  swift_retain();
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v31 = v43;
  uint64_t v32 = v44;
  uint64_t v33 = v45;
  v45(v14, v43, v44);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v34 = v31;
  uint64_t v35 = v31;
  uint64_t v36 = v32;
  v33(v14, v34, v32);
  unsigned int v37 = v59;
  sub_1007F2860();
  v49(v37, 0, 1, v48);
  long long v69 = 0u;
  long long v70 = 0u;
  long long v67 = 0u;
  long long v68 = 0u;
  long long v65 = 0u;
  long long v66 = 0u;
  sub_1007FDB70();
  sub_1007F2C80();
  v33(v14, v35, v36);
  sub_1007F2860();
  uint64_t v38 = v60;
  sub_1007F1DB0();
  uint64_t v39 = v51;
  v51(v38, 0, 1, v26);
  v39(v61, 1, 1, v26);
  v54(v62, v53, v63);
  sub_100235FD8();
  sub_1007F1F10();
  sub_100058D18(&qword_100B26658);
  sub_1007F1C60();
  long long v65 = 0u;
  long long v66 = 0u;
  *(void *)&long long v67 = 0;
  swift_retain();
  sub_1007F1C50();
  sub_1007F1BB0();
  LOBYTE(v65) = v56;
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1007F1EA0();
  swift_release();
  swift_release();
  uint64_t v40 = v57;
  sub_100058CB4((uint64_t)v57, (uint64_t)&v65, &qword_100B26660);
  swift_retain();
  swift_retain();
  swift_retain();
  sub_10023B4A0(v40, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10005F038);
  sub_1007F1EA0();
  sub_10023B4A0(v40, (void (*)(void, void, void, void, void, void, void, void, void, void, void, void))sub_10005F0E4);
  swift_release_n();
  swift_release_n();
  swift_release_n();
  return v30;
}

uint64_t sub_10023ADD0@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, void *a9@<X8>, unsigned __int8 a10)
{
  uint64_t v41 = a6;
  uint64_t v42 = a8;
  uint64_t v45 = a1;
  uint64_t v46 = a7;
  uint64_t v39 = a2;
  uint64_t v40 = a5;
  uint64_t v37 = a3;
  uint64_t v38 = a4;
  unsigned int v43 = a9;
  int v44 = a10;
  uint64_t v10 = sub_1007F2820();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v31 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1007F2CE0();
  __chkstk_darwin(v14 - 8);
  uint64_t v15 = sub_1007FDBF0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1007F2840();
  __chkstk_darwin(v16 - 8);
  sub_100058D18(&qword_100B26610);
  uint64_t v36 = sub_1007F1E60();
  swift_retain();
  uint64_t v35 = sub_1007F1E60();
  swift_retain();
  uint64_t v34 = sub_1007F1E60();
  swift_retain();
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v17 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v18 = *(void (**)(char *, uint64_t, uint64_t))(v11 + 104);
  uint64_t v31 = v11 + 104;
  v18(v13, enum case for LocalizedStringResource.BundleDescription.main(_:), v10);
  sub_1007F2860();
  uint64_t v33 = sub_1007F1E50();
  sub_100058D18(&qword_100B26618);
  swift_retain();
  uint64_t v32 = sub_1007F1E40();
  sub_100058D18(&qword_100B26620);
  swift_retain();
  sub_1007FDB70();
  sub_1007F2C80();
  v18(v13, v17, v10);
  sub_1007F2860();
  sub_100238908();
  uint64_t v19 = sub_1007F1E10();
  sub_100058D18(&qword_100B26628);
  swift_retain();
  sub_1007FDB70();
  sub_1007F2C80();
  v18(v13, v17, v10);
  sub_1007F2860();
  sub_100043334(&qword_100B26638, &qword_100B26640);
  uint64_t v20 = sub_1007F1E20();
  uint64_t v47 = v37;
  uint64_t v48 = v38;
  swift_retain_n();
  uint64_t v21 = v39;
  swift_bridgeObjectRetain_n();
  uint64_t v22 = v36;
  swift_retain();
  uint64_t v23 = v35;
  swift_retain();
  uint64_t v24 = v34;
  swift_retain();
  uint64_t v25 = v33;
  swift_retain();
  uint64_t v26 = v32;
  swift_retain();
  swift_retain();
  sub_1007F1E00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  uint64_t v47 = v40;
  uint64_t v48 = v41;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1007F1E00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  LOBYTE(v47) = 0;
  uint64_t v27 = v42;
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1007F1E00();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRelease();
  swift_release();
  swift_bridgeObjectRelease_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  swift_release_n();
  uint64_t result = swift_release_n();
  unint64_t v29 = v43;
  *unsigned int v43 = v45;
  v29[1] = v21;
  *((unsigned char *)v29 + 16) = v44;
  _OWORD v29[3] = v22;
  uint64_t v29[4] = v23;
  v29[5] = v24;
  void v29[6] = v25;
  v29[7] = v26;
  v29[8] = v19;
  uint64_t v30 = v46;
  v29[9] = v20;
  v29[10] = v30;
  v29[11] = v27;
  return result;
}

void *sub_10023B4A0(void *a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, void))
{
  return a1;
}

uint64_t sub_10023B4FC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B25898);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

unint64_t sub_10023B564()
{
  unint64_t result = qword_100B26670;
  if (!qword_100B26670)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26670);
  }
  return result;
}

uint64_t sub_10023B5B8(uint64_t (*a1)(uint64_t, uint64_t), uint64_t a2, uint64_t a3, uint64_t a4)
{
  return a1(a3, a4);
}

unint64_t sub_10023B5CC()
{
  unint64_t result = qword_100B26688;
  if (!qword_100B26688)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, &qword_100B26688);
  }
  return result;
}

unint64_t sub_10023B620()
{
  unint64_t result = qword_100B26698;
  if (!qword_100B26698)
  {
    sub_1007F1BC0();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26698);
  }
  return result;
}

uint64_t sub_10023B678@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007F1EB0();
  *a1 = result;
  return result;
}

uint64_t sub_10023B6A4@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007F1EB0();
  *a1 = result;
  return result;
}

uint64_t sub_10023B6D8()
{
  uint64_t v0 = sub_1007F2CE0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1007FDBF0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v13 - v6;
  sub_1007FDB70();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v8(v4, v7, v1);
  sub_1007F2C80();
  uint64_t v9 = sub_1007FDCD0();
  v13[1] = v10;
  uint64_t v14 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v7, v1);
  sub_1007FDB70();
  v8(v4, v7, v1);
  sub_1007F2C80();
  sub_1007FDCD0();
  v11(v7, v1);
  return v14;
}

uint64_t sub_10023B9A0()
{
  uint64_t v0 = sub_1007F2CE0();
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_1007FDBF0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v13 - v6;
  sub_1007FDB70();
  uint64_t v8 = *(void (**)(char *, char *, uint64_t))(v2 + 16);
  v8(v4, v7, v1);
  sub_1007F2C80();
  uint64_t v9 = sub_1007FDCD0();
  v13[1] = v10;
  uint64_t v14 = v9;
  uint64_t v11 = *(void (**)(char *, uint64_t))(v2 + 8);
  v11(v7, v1);
  sub_1007FDB70();
  v8(v4, v7, v1);
  sub_1007F2C80();
  sub_1007FDCD0();
  v11(v7, v1);
  return v14;
}

uint64_t sub_10023BC68()
{
  uint64_t v0 = sub_1007F6BC0();
  sub_10002A6A8(v0, qword_100B26710);
  sub_10005B838(v0, (uint64_t)qword_100B26710);
  sub_10004A860(0, (unint64_t *)&qword_100B30EF0);
  return sub_1007FED90();
}

id sub_10023BCEC(unint64_t a1, uint64_t a2, uint64_t a3)
{
  uint64_t v4 = v3;
  unint64_t v7 = a1;
  if (a1 >> 62) {
    goto LABEL_24;
  }
  uint64_t v8 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
  while (1)
  {
    if (!v8)
    {
LABEL_20:
      sub_1007FD190();
      return (id)swift_bridgeObjectRelease();
    }
    id result = (id)sub_100404C20(0, v8 & ~(v8 >> 63), 0);
    if (v8 < 0) {
      break;
    }
    uint64_t v26 = a2;
    uint64_t v27 = v4;
    uint64_t v28 = a3;
    uint64_t v29 = v8;
    uint64_t v10 = 0;
    unint64_t v30 = v7;
    unint64_t v31 = v7 & 0xC000000000000001;
    while (v8 != v10)
    {
      if (v31)
      {
        uint64_t v11 = (void *)sub_1007FF120();
      }
      else
      {
        uint64_t v11 = *(void **)(v7 + 8 * v10 + 32);
        swift_unknownObjectRetain();
      }
      id v12 = [v11 annotationLocation:v26, v27, v28];
      if (v12)
      {
        uint64_t v13 = v12;
        uint64_t v14 = sub_1007FDC70();
        uint64_t v16 = v15;
      }
      else
      {
        uint64_t v14 = 0;
        uint64_t v16 = 0;
      }
      id result = [v11 annotationSelectedText];
      if (!result) {
        goto LABEL_26;
      }
      uint64_t v17 = result;
      uint64_t v32 = sub_1007FDC70();
      a3 = v18;

      id v19 = [v11 annotationNote];
      if (v19)
      {
        uint64_t v20 = v19;
        uint64_t v21 = v16;
        uint64_t v4 = sub_1007FDC70();
        a2 = v22;
        swift_unknownObjectRelease();
      }
      else
      {
        uint64_t v21 = v16;
        swift_unknownObjectRelease();
        uint64_t v4 = 0;
        a2 = 0;
      }
      unint64_t v24 = _swiftEmptyArrayStorage[2];
      unint64_t v23 = _swiftEmptyArrayStorage[3];
      if (v24 >= v23 >> 1) {
        sub_100404C20(v23 > 1, v24 + 1, 1);
      }
      ++v10;
      _swiftEmptyArrayStorage[2] = v24 + 1;
      uint64_t v25 = &_swiftEmptyArrayStorage[6 * v24];
      void v25[4] = v14;
      v25[5] = v21;
      v25[6] = v32;
      v25[7] = a3;
      v25[8] = v4;
      v25[9] = a2;
      uint64_t v8 = v29;
      unint64_t v7 = v30;
      if (v29 == v10) {
        goto LABEL_20;
      }
    }
    __break(1u);
LABEL_24:
    swift_bridgeObjectRetain();
    uint64_t v8 = sub_1007FF290();
    swift_bridgeObjectRelease();
  }
  __break(1u);
LABEL_26:
  __break(1u);
  return result;
}

double sub_10023BF50@<D0>(uint64_t a1@<X2>, uint64_t a2@<X3>, _OWORD *a3@<X8>)
{
  NSString v6 = sub_1007FDC30();
  id v7 = (id)(*(uint64_t (**)(uint64_t, NSString, uint64_t))(a2 + 16))(a2, v6, a1);

  if (v7)
  {
    sub_1007FEEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    double result = 0.0;
    *a3 = 0u;
    a3[1] = 0u;
  }
  return result;
}

void sub_10023BFEC(uint64_t a1)
{
  uint64_t v3 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v30 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  uint64_t v7 = *(void *)(a1 + 16);
  [*(id *)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider) setShareType:v7 != 1];
  uint64_t v8 = *(void **)(v1 + v6);
  if (v7)
  {
    unsigned int v43 = _swiftEmptyArrayStorage;
    unint64_t v31 = v8;
    id v9 = v8;
    sub_1007FF190();
    Class v40 = (Class)type metadata accessor for AnnotationWrapper(0);
    uint64_t v10 = (uint64_t *)(a1 + 72);
    uint64_t v32 = v5;
    do
    {
      uint64_t v41 = v10;
      uint64_t v39 = v7;
      uint64_t v11 = *(v10 - 5);
      uint64_t v34 = *(v10 - 4);
      uint64_t v35 = v11;
      uint64_t v12 = *(v10 - 3);
      uint64_t v13 = *(v10 - 2);
      uint64_t v14 = *(v10 - 1);
      uint64_t v36 = v12;
      uint64_t v37 = v14;
      uint64_t v15 = *v41;
      uint64_t v16 = (char *)objc_allocWithZone(v40);
      uint64_t v17 = &v16[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationLocation];
      *(void *)uint64_t v17 = 0;
      *((void *)v17 + 1) = 0;
      uint64_t v18 = &v16[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationNote];
      *(void *)uint64_t v18 = 0;
      *((void *)v18 + 1) = 0;
      id v19 = &v16[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationRepresentativeText];
      *(void *)id v19 = 0;
      *((void *)v19 + 1) = 0;
      uint64_t v20 = (uint64_t)&v16[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationCreationDate];
      uint64_t v21 = sub_1007F2BA0();
      uint64_t v22 = *(void (**)(void))(*(void *)(v21 - 8) + 56);
      ((void (*)(uint64_t, uint64_t, uint64_t, uint64_t))v22)(v20, 1, 1, v21);
      uint64_t v38 = &v16[OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationModificationDate];
      v22();
      uint64_t v33 = *((void *)v17 + 1);
      uint64_t v23 = v34;
      *(void *)uint64_t v17 = v35;
      *((void *)v17 + 1) = v23;
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain_n();
      unint64_t v24 = v16;
      swift_bridgeObjectRelease();
      *(void *)id v19 = v36;
      *((void *)v19 + 1) = v13;
      swift_bridgeObjectRelease();
      *(void *)uint64_t v18 = v37;
      *((void *)v18 + 1) = v15;
      uint64_t v25 = (uint64_t)v32;
      swift_bridgeObjectRelease();
      sub_1007F2B90();
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v22)(v25, 0, 1, v21);
      swift_beginAccess();
      sub_10023E148(v25, v20);
      swift_endAccess();
      sub_1007F2B90();
      ((void (*)(uint64_t, void, uint64_t, uint64_t))v22)(v25, 0, 1, v21);
      uint64_t v26 = (uint64_t)v38;
      swift_beginAccess();
      sub_10023E148(v25, v26);
      swift_endAccess();

      v42.receiver = v24;
      v42.super_class = v40;
      [super init];
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_1007FF170();
      sub_1007FF1A0();
      uint64_t v27 = v39;
      sub_1007FF1B0();
      sub_1007FF180();
      uint64_t v10 = v41 + 6;
      uint64_t v7 = v27 - 1;
    }
    while (v7);
    uint64_t v8 = v31;
  }
  else
  {
    id v28 = v8;
  }
  sub_100058D18(&qword_100B268C0);
  Class isa = sub_1007FDFE0().super.isa;
  swift_bridgeObjectRelease();
  [v8 setAnnotations:isa];
}

uint64_t sub_10023C384()
{
  uint64_t v1 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  uint64_t v2 = *(void **)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider);
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    id v3 = v2;
    char v4 = sub_1007FB370();
    swift_unknownObjectRelease();
  }
  else
  {
    id v5 = v2;
    char v4 = 0;
  }
  [v2 setCitationsAllowed:v4 & 1];

  id v6 = [*(id *)(v0 + v1) pasteboardString];
  uint64_t v7 = sub_1007FDC70();

  return v7;
}

uint64_t sub_10023C45C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  id v5 = *(void **)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider);
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    id v6 = v5;
    char v7 = sub_1007FB370();
    swift_unknownObjectRelease();
  }
  else
  {
    id v8 = v5;
    char v7 = 0;
  }
  [v5 setCitationsAllowed:v7 & 1];

  id v9 = (uint64_t (**)(id, NSString, void))[*(id *)(v1 + v4) propertySource];
  uint64_t v10 = AEAssetActivityItemProviderPropertyStoreShortUrl;
  NSString v11 = sub_1007FDC30();
  id v12 = (id)v9[2](v9, v11, v10);

  if (v12)
  {
    sub_1007FEEC0();
    swift_unknownObjectRelease();
    _Block_release(v9);
  }
  else
  {
    _Block_release(v9);
    long long v21 = 0u;
    long long v22 = 0u;
  }
  sub_1000513B8((uint64_t)&v21, (uint64_t)&v23);
  if (v24)
  {
    sub_10005E614(&v23, &v25);
    if (v26)
    {
LABEL_9:
      sub_10005E614(&v25, v27);
      sub_10005E614(v27, &v25);
      uint64_t v13 = sub_1007F29D0();
      int v14 = swift_dynamicCast();
      return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v13 - 8) + 56))(a1, v14 ^ 1u, 1, v13);
    }
  }
  else
  {
    uint64_t v16 = (uint64_t (**)(id, NSString, void))[*(id *)(v2 + v4) propertySource];
    uint64_t v17 = AEAssetActivityItemProviderPropertyStoreUrl;
    NSString v18 = sub_1007FDC30();
    id v19 = (id)v16[2](v16, v18, v17);

    if (v19)
    {
      sub_1007FEEC0();
      swift_unknownObjectRelease();
      _Block_release(v16);
    }
    else
    {
      _Block_release(v16);
      long long v21 = 0u;
      long long v22 = 0u;
    }
    sub_1000513B8((uint64_t)&v21, (uint64_t)&v25);
    sub_10005AFE8((uint64_t)&v23, (uint64_t *)&unk_100B269C0);
    if (v26) {
      goto LABEL_9;
    }
  }
  sub_10005AFE8((uint64_t)&v25, (uint64_t *)&unk_100B269C0);
  uint64_t v20 = sub_1007F29D0();
  return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v20 - 8) + 56))(a1, 1, 1, v20);
}

id sub_10023C748()
{
  uint64_t v1 = v0;
  uint64_t v47 = sub_1007FD700();
  uint64_t v2 = *(void *)(v47 - 8);
  uint64_t v3 = __chkstk_darwin(v47);
  id v5 = (char *)v46 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  char v7 = (char *)v46 - v6;
  uint64_t v8 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  id v9 = *(void **)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider);
  if (swift_unknownObjectWeakLoadStrong())
  {
    swift_getObjectType();
    id v10 = v9;
    char v11 = sub_1007FB370();
    swift_unknownObjectRelease();
  }
  else
  {
    id v12 = v9;
    char v11 = 0;
  }
  [v9 setCitationsAllowed:v11 & 1];

  uint64_t v13 = swift_allocObject();
  sub_100058D18(&qword_100B29550);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10085CCE0;
  uint64_t v15 = *(void **)(v1 + v8);
  uint64_t v16 = sub_10004A860(0, (unint64_t *)&unk_100B26910);
  *(void *)(v13 + 16) = v14;
  *(void *)(v14 + 56) = v16;
  *(void *)(v14 + 32) = v15;
  uint64_t v17 = *(void **)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_progressKitController);
  NSString v18 = &unk_10085F000;
  if (v17)
  {
    v46[0] = v8;
    id v19 = v15;
    id v20 = v17;
    long long v21 = dispatch_group_create();
    dispatch_group_enter(v21);
    uint64_t v22 = swift_allocObject();
    *(void *)(v22 + 16) = v13;
    *(void *)(v22 + 24) = v21;
    uint64_t v52 = sub_10023E44C;
    uint64_t v53 = v22;
    aBlock = _NSConcreteStackBlock;
    uint64_t v49 = 1107296256;
    uint64_t v50 = sub_10000EEC8;
    long long v51 = &unk_100A4F328;
    long long v23 = _Block_copy(&aBlock);
    v46[1] = v13;
    swift_retain();
    uint64_t v24 = v21;
    swift_release();
    [v20 activeContextWithCompletion:v23];
    _Block_release(v23);
    sub_1007FD6F0();
    sub_1007FD760();
    long long v25 = *(void (**)(char *, uint64_t))(v2 + 8);
    uint64_t v26 = v5;
    uint64_t v27 = v47;
    v25(v26, v47);
    sub_1007FE690();
    v25(v7, v27);
    if (sub_1007FD680())
    {
      id v28 = v24;
      if (qword_100B224D8 != -1) {
        swift_once();
      }
      uint64_t v29 = sub_1007F6BC0();
      sub_10005B838(v29, (uint64_t)qword_100B26710);
      uint64_t v30 = sub_1007F6BA0();
      os_log_type_t v31 = sub_1007FE3C0();
      BOOL v32 = os_log_type_enabled(v30, v31);
      NSString v18 = &unk_10085F000;
      uint64_t v33 = v20;
      uint64_t v8 = v46[0];
      if (v32)
      {
        uint64_t v34 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v34 = 0;
        _os_log_impl((void *)&_mh_execute_header, v30, v31, "timed out waiting for progress kit current context", v34, 2u);
        swift_slowDealloc();
      }
      else
      {
      }
    }
    else
    {

      NSString v18 = (void *)&unk_10085F000;
      uint64_t v8 = v46[0];
    }
  }
  else
  {
    id v35 = v15;
  }
  swift_beginAccess();
  uint64_t v36 = *(void **)(v1 + v8);
  swift_bridgeObjectRetain();
  id v37 = [v36 shareType];
  id v38 = [*(id *)(v1 + v8) propertySource];
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = v38;
  id v40 = objc_allocWithZone((Class)IMActivityController);
  Class isa = sub_1007FDFE0().super.isa;
  swift_bridgeObjectRelease();
  uint64_t v52 = sub_10023E288;
  uint64_t v53 = v39;
  aBlock = _NSConcreteStackBlock;
  uint64_t v49 = v18[450];
  uint64_t v50 = sub_10023E290;
  long long v51 = &unk_100A4F2D8;
  objc_super v42 = _Block_copy(&aBlock);
  id v43 = [v40 initWithActivityItems:isa applicationActivities:0 shareType:v37 propertySource:v42 tracker:0];

  _Block_release(v42);
  swift_release();
  [v43 setManagedBook:[*(id *)(v1 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_book) isManagedBook]];
  id v44 = [v43 viewController];
  swift_release();

  return v44;
}

void sub_10023CCE4(void *a1, uint64_t a2, dispatch_group_t group)
{
  if (a1)
  {
    id v5 = (void **)(a2 + 16);
    uint64_t v12 = sub_10004A860(0, (unint64_t *)&unk_100B26920);
    *(void *)&long long v11 = a1;
    swift_beginAccess();
    uint64_t v6 = *v5;
    id v7 = a1;
    char isUniquelyReferenced_nonNull_native = swift_isUniquelyReferenced_nonNull_native();
    char *v5 = v6;
    if ((isUniquelyReferenced_nonNull_native & 1) == 0)
    {
      uint64_t v6 = sub_1006BB8C4(0, v6[2] + 1, 1, v6);
      char *v5 = v6;
    }
    unint64_t v10 = v6[2];
    unint64_t v9 = v6[3];
    if (v10 >= v9 >> 1)
    {
      uint64_t v6 = sub_1006BB8C4((void *)(v9 > 1), v10 + 1, 1, v6);
      char *v5 = v6;
    }
    long long v6[2] = v10 + 1;
    sub_10005E614(&v11, &v6[4 * v10 + 4]);
    swift_endAccess();
  }
  dispatch_group_leave(group);
}

id sub_10023CE20()
{
  return sub_10023DEE8(type metadata accessor for AssetActivityItemProviderWrapper);
}

uint64_t sub_10023CEC0()
{
  return type metadata accessor for AssetActivityItemProviderWrapper(0);
}

uint64_t type metadata accessor for AssetActivityItemProviderWrapper(uint64_t a1)
{
  return sub_10003D5C8(a1, (uint64_t *)&unk_100B26780);
}

void sub_10023CEE8()
{
  sub_10023E098(319, &qword_100B26790, (void (*)(uint64_t))&type metadata accessor for URL);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

uint64_t sub_10023CFC0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  sub_100058D18((uint64_t *)&unk_100B328C0);
  uint64_t inited = swift_initStackObject();
  *(void *)(inited + 32) = a3;
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  *(void *)(inited + 4sub_1007E6FC4(2, 18, 1, 0) = a4;
  *(void *)(inited + 48) = a1;
  *(void *)(inited + 64) = 0;
  *(void *)(inited + 72) = 0;
  *(void *)(inited + 56) = a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  sub_10023BFEC(inited);
  swift_setDeallocating();
  sub_100058D18((uint64_t *)&unk_100B268E0);
  return swift_arrayDestroy();
}

void sub_10023D080()
{
  uint64_t v1 = OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider;
  [*(id *)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider) setShareType:2];
  id v2 = *(id *)(v0 + v1);
  sub_100058D18(&qword_100B268C0);
  Class isa = sub_1007FDFE0().super.isa;
  [v2 setAnnotations:isa];
}

void sub_10023D118()
{
}

uint64_t sub_10023D12C()
{
  id v1 = [*(id *)(v0 + OBJC_IVAR____TtC5Books32AssetActivityItemProviderWrapper_itemProvider) annotations];
  sub_100058D18(&qword_100B268C0);
  sub_1007FDFF0();

  sub_100058D18(&qword_100B268C8);
  sub_10023E0EC();
  LOBYTE(v1) = sub_1007FE2B0();
  swift_bridgeObjectRelease();
  return v1 & 1;
}

id sub_10023D1D8(void *a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B26900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v12[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1007FD660();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v12[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return 0;
  }
  id result = [a1 annotationLocation];
  if (result)
  {
    unint64_t v10 = result;
    sub_1007FDC70();

    if (swift_unknownObjectWeakLoadStrong())
    {
      swift_getObjectType();
      sub_1007FB4E0();
      swift_bridgeObjectRelease();
      swift_unknownObjectRelease();
      (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
      (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
      uint64_t v11 = sub_1007FD5E0();
      (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
      id result = (id)(v11 + 1);
      if (__OFADD__(v11, 1)) {
        __break(1u);
      }
    }
    else
    {
      swift_bridgeObjectRelease();
      (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
      sub_10005AFE8((uint64_t)v4, (uint64_t *)&unk_100B26900);
      return 0;
    }
  }
  return result;
}

uint64_t sub_10023D494(void *a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B26900);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = &v14[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v5 = sub_1007FD660();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = &v14[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  if (!a1) {
    return 0;
  }
  id v9 = [a1 annotationLocation];
  if (!v9) {
    return 0;
  }
  sub_1007FDC70();

  if (!swift_unknownObjectWeakLoadStrong())
  {
    swift_bridgeObjectRelease();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v6 + 56))(v4, 1, 1, v5);
    sub_10005AFE8((uint64_t)v4, (uint64_t *)&unk_100B26900);
    return 0;
  }
  swift_getObjectType();
  sub_1007FB4E0();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  (*(void (**)(unsigned char *, void, uint64_t, uint64_t))(v6 + 56))(v4, 0, 1, v5);
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v6 + 32))(v8, v4, v5);
  if (!swift_unknownObjectWeakLoadStrong())
  {
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  swift_getObjectType();
  uint64_t v12 = sub_1007FD5E0();
  BOOL v13 = __OFADD__(v12, 1);
  uint64_t result = v12 + 1;
  if (!v13)
  {
    uint64_t v10 = sub_1007FB410();
    (*(void (**)(unsigned char *, uint64_t))(v6 + 8))(v8, v5);
    swift_unknownObjectRelease();
    return v10;
  }
  __break(1u);
  return result;
}

uint64_t sub_10023D8DC(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  if (a3)
  {
    uint64_t v6 = sub_1007FDC70();
  }
  else
  {
    uint64_t v6 = 0;
    uint64_t v7 = 0;
  }
  uint64_t v8 = (uint64_t *)(a1 + *a4);
  uint64_t *v8 = v6;
  v8[1] = v7;

  return swift_bridgeObjectRelease();
}

Class sub_10023DA7C(uint64_t a1, uint64_t a2, void *a3)
{
  uint64_t v5 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v13 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = a1 + *a3;
  swift_beginAccess();
  sub_10023E1B0(v8, (uint64_t)v7);
  uint64_t v9 = sub_1007F2BA0();
  uint64_t v10 = *(void *)(v9 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v10 + 48))(v7, 1, v9) != 1)
  {
    Class isa = sub_1007F2AE0().super.isa;
    (*(void (**)(char *, uint64_t))(v10 + 8))(v7, v9);
  }

  return isa;
}

void sub_10023DBC4(void *a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v7 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)&v14 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a3)
  {
    sub_1007F2B50();
    uint64_t v10 = sub_1007F2BA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 0, 1, v10);
  }
  else
  {
    uint64_t v11 = sub_1007F2BA0();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v11 - 8) + 56))(v9, 1, 1, v11);
  }
  uint64_t v12 = (uint64_t)a1 + *a4;
  swift_beginAccess();
  id v13 = a1;
  sub_10023E148((uint64_t)v9, v12);
  swift_endAccess();
}

uint64_t sub_10023DD48()
{
  uint64_t v1 = sub_1007F2560();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = *(void *)(v0 + OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationNote + 8);
  if (v5)
  {
    uint64_t v11 = *(void *)(v0 + OBJC_IVAR____TtC5BooksP33_68DD4628432DB32CCFA3947CA529962B17AnnotationWrapper_annotationNote);
    uint64_t v12 = v5;
    swift_bridgeObjectRetain();
    sub_1007F2540();
    sub_10022ED00();
    uint64_t v6 = sub_1007FEE40();
    uint64_t v8 = v7;
    (*(void (**)(char *, uint64_t))(v2 + 8))(v4, v1);
    swift_bridgeObjectRelease();
    uint64_t v11 = v6;
    uint64_t v12 = v8;
    sub_10022DF20();
    char v9 = sub_1007FE2B0();
    swift_bridgeObjectRelease();
  }
  else
  {
    char v9 = 0;
  }
  return v9 & 1;
}

id sub_10023DED0()
{
  return sub_10023DEE8(type metadata accessor for AnnotationWrapper);
}

id sub_10023DEE8(uint64_t (*a1)(void))
{
  v3.receiver = v1;
  v3.super_class = (Class)a1(0);
  [super dealloc];
}

uint64_t sub_10023DFB4()
{
  return type metadata accessor for AnnotationWrapper(0);
}

uint64_t type metadata accessor for AnnotationWrapper(uint64_t a1)
{
  return sub_10003D5C8(a1, qword_100B26848);
}

void sub_10023DFDC()
{
  sub_10023E098(319, (unint64_t *)&qword_100B2A760, (void (*)(uint64_t))&type metadata accessor for Date);
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10023E098(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1007FEDF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

unint64_t sub_10023E0EC()
{
  unint64_t result = qword_100B268D0;
  if (!qword_100B268D0)
  {
    sub_100043378(&qword_100B268C8);
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B268D0);
  }
  return result;
}

uint64_t sub_10023E148(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 40))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023E1B0(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 16))(a2, a1, v4);
  return a2;
}

uint64_t sub_10023E218()
{
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_10023E250()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

double sub_10023E288@<D0>(uint64_t a1@<X2>, _OWORD *a2@<X8>)
{
  return sub_10023BF50(a1, *(void *)(v2 + 16), a2);
}

id sub_10023E290(uint64_t a1, uint64_t a2, void *a3)
{
  void (*v4)(void *__return_ptr, uint64_t, uint64_t, id);
  uint64_t v5;
  uint64_t v6;
  uint64_t v7;
  id v8;
  uint64_t v9;
  void *v10;
  uint64_t v11;
  uint64_t v12;
  char *v13;
  void *v14;
  void v16[3];
  uint64_t v17;
  uint64_t vars8;

  uint64_t v4 = *(void (**)(void *__return_ptr, uint64_t, uint64_t, id))(a1 + 32);
  uint64_t v5 = sub_1007FDC70();
  uint64_t v7 = v6;
  swift_retain();
  uint64_t v8 = a3;
  v4(v16, v5, v7, v8);
  swift_release();
  swift_bridgeObjectRelease();

  char v9 = v17;
  if (v17)
  {
    uint64_t v10 = sub_10005DA74(v16, v17);
    uint64_t v11 = *(void *)(v9 - 8);
    __chkstk_darwin(v10);
    id v13 = (char *)v16 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
    (*(void (**)(char *))(v11 + 16))(v13);
    uint64_t v14 = (void *)sub_1007FF460();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v9);
    _s5Books15CurrentPageViewVwxx_0((uint64_t)v16);
  }
  else
  {
    uint64_t v14 = 0;
  }

  return v14;
}

uint64_t sub_10023E40C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_10023E44C(void *a1)
{
  sub_10023CCE4(a1, *(void *)(v1 + 16), *(dispatch_group_t *)(v1 + 24));
}

uint64_t sub_10023E454(uint64_t a1)
{
  return a1;
}

id NotificationOptInStatusController.__allocating_init(center:status:)(uint64_t a1, uint64_t a2)
{
  uint64_t v5 = (char *)objc_allocWithZone(v2);
  *(void *)&v5[OBJC_IVAR___BKNotificationOptInStatusController_center] = a1;
  *(void *)&v5[OBJC_IVAR___BKNotificationOptInStatusController_status] = a2;
  v7.receiver = v5;
  v7.super_class = v2;
  return [super init];
}

id NotificationOptInStatusController.init(center:status:)(uint64_t a1, uint64_t a2)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v2[OBJC_IVAR___BKNotificationOptInStatusController_center] = a1;
  *(void *)&v2[OBJC_IVAR___BKNotificationOptInStatusController_status] = a2;
  v7.receiver = v2;
  v7.super_class = ObjectType;
  return [super init];
}

Swift::Void __swiftcall NotificationOptInStatusController.checkAndReportOptInStatus()()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___BKNotificationOptInStatusController_center);
  uint64_t v2 = swift_allocObject();
  swift_unknownObjectUnownedInit();
  void v5[4] = sub_10023E7B0;
  void v5[5] = v2;
  v5[0] = _NSConcreteStackBlock;
  v5[1] = 1107296256;
  id v5[2] = sub_10000B4B4;
  v5[3] = &unk_100A4F378;
  objc_super v3 = _Block_copy(v5);
  id v4 = v1;
  swift_release();
  [v4 getNotificationSettingsWithCompletionHandler:v3];
  _Block_release(v3);
}

uint64_t sub_10023E648()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

uint64_t sub_10023E680(void *a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B27720);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)&v12 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007FE150();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
  sub_1007FE100();
  swift_retain();
  id v8 = a1;
  uint64_t v9 = sub_1007FE0F0();
  uint64_t v10 = (void *)swift_allocObject();
  void v10[2] = v9;
  v10[3] = &protocol witness table for MainActor;
  void v10[4] = a2;
  void v10[5] = v8;
  sub_10004BC14((uint64_t)v6, (uint64_t)&unk_100B26988, (uint64_t)v10);
  return swift_release();
}

uint64_t sub_10023E7B0(void *a1)
{
  return sub_10023E680(a1, v1);
}

uint64_t sub_10023E7B8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  id v5[2] = a4;
  v5[3] = a5;
  uint64_t v6 = sub_1007F3CD0();
  void v5[4] = v6;
  uint64_t v7 = *(void *)(v6 - 8);
  void v5[5] = v7;
  void v5[6] = *(void *)(v7 + 64);
  v5[7] = swift_task_alloc();
  v5[8] = swift_task_alloc();
  v5[9] = swift_task_alloc();
  sub_1007FE100();
  v5[10] = sub_1007FE0F0();
  uint64_t v9 = sub_1007FE0A0();
  return _swift_task_switch(sub_10023E8D0, v9, v8);
}

uint64_t sub_10023E8D0()
{
  uint64_t v1 = (void *)v0[3];
  swift_release();
  Strong = (char *)swift_unknownObjectUnownedLoadStrong();
  objc_super v3 = *(char **)&Strong[OBJC_IVAR___BKNotificationOptInStatusController_status];

  uint64_t v4 = (char *)[v1 authorizationStatus];
  if (v3 != v4)
  {
    uint64_t v5 = v4;
    uint64_t v6 = (char *)swift_unknownObjectUnownedLoadStrong();
    *(void *)&v6[OBJC_IVAR___BKNotificationOptInStatusController_status] = v5;

    uint64_t v7 = (void *)swift_unknownObjectUnownedLoadStrong();
    if ((unint64_t)(v3 - 2) >= 2)
    {
      uint64_t v8 = v0[9];
      uint64_t v9 = v0[4];
      uint64_t v10 = v0[5];
      if (v3 == (char *)1) {
        uint64_t v11 = (unsigned int *)&enum case for UserAction.optOut(_:);
      }
      else {
        uint64_t v11 = (unsigned int *)&enum case for UserAction.unknown(_:);
      }
    }
    else
    {
      uint64_t v8 = v0[9];
      uint64_t v9 = v0[4];
      uint64_t v10 = v0[5];
      uint64_t v11 = (unsigned int *)&enum case for UserAction.optIn(_:);
    }
    uint64_t v12 = *(void (**)(uint64_t, void, uint64_t))(v10 + 104);
    v12(v8, *v11, v9);

    id v13 = (void *)swift_unknownObjectUnownedLoadStrong();
    if ((unint64_t)(v5 - 1) >= 3) {
      uint64_t v14 = (unsigned int *)&enum case for UserAction.unknown(_:);
    }
    else {
      uint64_t v14 = (unsigned int *)*(&off_100A4F3F0 + (void)(v5 - 1));
    }
    v12(v0[8], *v14, v0[4]);

    sub_10023F6F4(&qword_100B26990, (void (*)(uint64_t))&type metadata accessor for UserAction);
    if ((sub_1007FDB40() & 1) == 0)
    {
      id v15 = [self delegate];
      id v16 = [v15 primaryAnalyticsController];

      uint64_t v17 = (void *)sub_1007F3C90();
      id v18 = [v16 newSessionAssertion];
      if (v17)
      {
        uint64_t v19 = v0[7];
        uint64_t v21 = v0[5];
        uint64_t v20 = v0[6];
        uint64_t v22 = v0[4];
        (*(void (**)(uint64_t, void, uint64_t))(v21 + 16))(v19, v0[8], v22);
        unint64_t v23 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
        unint64_t v24 = (v20 + v23 + 7) & 0xFFFFFFFFFFFFFFF8;
        uint64_t v25 = swift_allocObject();
        (*(void (**)(unint64_t, uint64_t, uint64_t))(v21 + 32))(v25 + v23, v19, v22);
        *(void *)(v25 + v24) = v18;
        id v26 = v17;
        swift_unknownObjectRetain();
        sub_1007F4350();
        swift_release();
      }
      swift_unknownObjectRelease();
    }
    uint64_t v27 = v0[9];
    uint64_t v28 = v0[4];
    uint64_t v29 = *(void (**)(uint64_t, uint64_t))(v0[5] + 8);
    v29(v0[8], v28);
    v29(v27, v28);
  }
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v30 = (uint64_t (*)(void))v0[1];
  return v30();
}

id sub_10023EC30(uint64_t a1, uint64_t a2, void *a3)
{
  id v59 = a3;
  uint64_t v46 = a1;
  uint64_t v4 = sub_1007F4410();
  uint64_t v55 = *(void *)(v4 - 8);
  uint64_t v56 = v4;
  __chkstk_darwin(v4);
  uint64_t v54 = (char *)&v39 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007F4220();
  uint64_t v7 = *(void *)(v6 - 8);
  uint64_t v57 = v6;
  uint64_t v58 = v7;
  __chkstk_darwin(v6);
  uint64_t v53 = (char *)&v39 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_1007F42F0();
  uint64_t v49 = *(void *)(v9 - 8);
  uint64_t v50 = v9;
  __chkstk_darwin(v9);
  uint64_t v48 = (char *)&v39 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1007F4280();
  uint64_t v12 = *(void *)(v11 - 8);
  uint64_t v51 = v11;
  uint64_t v52 = v12;
  __chkstk_darwin(v11);
  uint64_t v47 = (char *)&v39 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_1007F3CD0();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v17 = (char *)&v39 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v18 = sub_1007F4250();
  uint64_t v19 = *(void *)(v18 - 8);
  __chkstk_darwin(v18);
  uint64_t v21 = (char *)&v39 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v15 + 16))(v17, a2, v14);
  sub_1007F4240();
  uint64_t v45 = sub_100058D18(&qword_100B26998);
  uint64_t v22 = sub_1007F3AF0();
  uint64_t v23 = *(void *)(v22 - 8);
  uint64_t v24 = *(unsigned __int8 *)(v23 + 80);
  uint64_t v25 = ((v24 + 32) & ~v24) + *(void *)(v23 + 72);
  uint64_t v26 = (v24 + 32) & ~v24;
  uint64_t v44 = v26;
  uint64_t v60 = v24 | 7;
  uint64_t v42 = v25;
  uint64_t v27 = swift_allocObject();
  long long v61 = xmmword_10085CCE0;
  *(_OWORD *)(v27 + 16) = xmmword_10085CCE0;
  unsigned int v43 = enum case for DataEventTrait.onlyOnce(_:);
  uint64_t v28 = *(void (**)(uint64_t))(v23 + 104);
  uint64_t v40 = v22;
  v28(v27 + v26);
  uint64_t v41 = (void (*)(uint64_t, uint64_t, uint64_t))v28;
  sub_10023F6F4(&qword_100B269A0, (void (*)(uint64_t))&type metadata accessor for NotificationOptInActionData);
  unint64_t v39 = 0x8000000100906D70;
  sub_1007F3AD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v19 + 8))(v21, v18);
  (*(void (**)(char *, void, uint64_t))(v49 + 104))(v48, enum case for Location.deviceSettings(_:), v50);
  uint64_t v29 = v47;
  sub_1007F4270();
  uint64_t v30 = swift_allocObject();
  *(_OWORD *)(v30 + 16) = v61;
  uint64_t v31 = v44;
  uint64_t v32 = v43;
  ((void (*)(uint64_t, void, uint64_t))v28)(v30 + v44, v43, v22);
  sub_10023F6F4(&qword_100B269A8, (void (*)(uint64_t))&type metadata accessor for NotificationOptInLocationData);
  uint64_t v33 = v29;
  uint64_t v34 = v51;
  sub_1007F3AD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v52 + 8))(v33, v34);
  (*(void (**)(char *, void, uint64_t))(v55 + 104))(v54, enum case for ModelType.global(_:), v56);
  id v35 = v53;
  sub_1007F4210();
  uint64_t v36 = swift_allocObject();
  *(_OWORD *)(v36 + 16) = v61;
  v41(v36 + v31, v32, v40);
  sub_10023F6F4(&qword_100B269B0, (void (*)(uint64_t))&type metadata accessor for NotificationOptInTypeData);
  uint64_t v37 = v57;
  sub_1007F3AD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v58 + 8))(v35, v37);
  sub_1007F4260();
  sub_10023F6F4(&qword_100B269B8, (void (*)(uint64_t))&type metadata accessor for NotificationOptInActionEvent);
  memset(v62, 0, 32);
  sub_1007F3AE0();
  sub_10006CA38((uint64_t)v62);
  id result = v59;
  if (v59) {
    return [v59 invalidate];
  }
  return result;
}

id SearchBar.Coordinator.__allocating_init()()
{
  id v1 = objc_allocWithZone(v0);

  return [v1 init];
}

void NotificationOptInStatusController.init()()
{
}

uint64_t type metadata accessor for NotificationOptInStatusController()
{
  return self;
}

uint64_t sub_10023F4AC()
{
  swift_unknownObjectRelease();
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_10023F4F4(uint64_t a1)
{
  uint64_t v4 = v1[2];
  uint64_t v5 = v1[3];
  uint64_t v7 = v1[4];
  uint64_t v6 = v1[5];
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v2 + 16) = v8;
  void *v8 = v2;
  v8[1] = sub_1000366AC;
  return sub_10023E7B8(a1, v4, v5, v7, v6);
}

uint64_t sub_10023F5B4()
{
  uint64_t v1 = sub_1007F3CD0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

id sub_10023F658(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1007F3CD0() - 8);
  unint64_t v4 = (*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80);
  uint64_t v5 = *(void **)(v1 + ((*(void *)(v3 + 64) + v4 + 7) & 0xFFFFFFFFFFFFFFF8));

  return sub_10023EC30(a1, v1 + v4, v5);
}

uint64_t sub_10023F6F4(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

void *sub_10023F73C(unint64_t a1, void *a2)
{
  id v3 = a2;
  unint64_t v4 = sub_100240CC8(a1, v3);

  return v4;
}

UIMenu sub_10023F790()
{
  uint64_t v0 = sub_1007F2CE0();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v31 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1007FDBF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v31 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v31 - v8;
  sub_1007FDB70();
  uint64_t v11 = v4 + 16;
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v6, v9, v3);
  sub_1007F2C80();
  uint64_t v12 = v6;
  uint64_t v13 = sub_1007FDCD0();
  uint64_t v37 = v14;
  uint64_t v38 = v13;
  uint64_t v15 = *(void (**)(char *, uint64_t))(v4 + 8);
  uint64_t v39 = v4 + 8;
  uint64_t v36 = v15;
  v15(v9, v3);
  sub_100058D18((uint64_t *)&unk_100B28F90);
  uint64_t v16 = swift_allocObject();
  *(_OWORD *)(v16 + 16) = xmmword_100861BB0;
  UIMenuElementSize v17 = (UIMenuElementSize)sub_100447D40(1);
  if ((unint64_t)v17 >> 62)
  {
    sub_10004A860(0, (unint64_t *)&qword_100B296B0);
    UIMenuElementSize v18 = sub_1007FF280();
  }
  else
  {
    swift_bridgeObjectRetain();
    sub_1007FF490();
    sub_10004A860(0, (unint64_t *)&qword_100B296B0);
    UIMenuElementSize v18 = v17;
  }
  swift_bridgeObjectRelease();
  uint64_t v35 = sub_10004A860(0, (unint64_t *)&qword_100B2C170);
  v45._countAndFlagsBits = 0;
  v45._object = (void *)0xE000000000000000;
  v48.value._countAndFlagsBits = 0;
  v48.value._object = 0;
  v42.value.super.Class isa = 0;
  v42.is_nil = 0;
  v19.value = (UIMenuIdentifier)1;
  *(UIMenu *)(v16 + 32) = sub_1007FEA70(v45, v48, v42, v19, 0xFFFFFFFFFFFFFFFFLL, v18, v28);
  uint64_t v33 = swift_allocObject();
  *(_OWORD *)(v33 + 16) = xmmword_100861BC0;
  sub_10004A860(0, (unint64_t *)&qword_100B27760);
  sub_1007FDB70();
  v10(v12, v9, v3);
  sub_1007F2C80();
  sub_1007FDCD0();
  uint64_t v34 = (UIMenu *)v16;
  void v31[2] = v11;
  uint64_t v32 = v10;
  v31[1] = v2;
  uint64_t v20 = v36;
  v36(v9, v3);
  long long v40 = 0u;
  long long v41 = 0u;
  uint64_t v21 = sub_1007FEDB0();
  uint64_t v22 = v33;
  *(void *)(v33 + 32) = v21;
  sub_1007FDB70();
  v10(v12, v9, v3);
  sub_1007F2C80();
  sub_1007FDCD0();
  v20(v9, v3);
  long long v40 = 0u;
  long long v41 = 0u;
  *(void *)(v22 + 4sub_1007E6FC4(2, 18, 1, 0) = sub_1007FEDB0();
  sub_1007FDB70();
  v32(v12, v9, v3);
  sub_1007F2C80();
  sub_1007FDCD0();
  v20(v9, v3);
  long long v40 = 0u;
  long long v41 = 0u;
  *(void *)(v22 + 48) = sub_1007FEDB0();
  *(void *)&long long v40 = v22;
  sub_1007FE010();
  v46._countAndFlagsBits = 0;
  v46._object = (void *)0xE000000000000000;
  v49.value._countAndFlagsBits = 0;
  v49.value._object = 0;
  v43.value.super.Class isa = 0;
  v43.is_nil = 0;
  v23.value = (UIMenuIdentifier)1;
  v24.super.super.Class isa = sub_1007FEA70(v46, v49, v43, v23, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v40, v29).super.super.isa;
  uint64_t v25 = v34;
  v34[5].super.super.Class isa = v24.super.super.isa;
  *(void *)&long long v40 = v25;
  sub_1007FE010();
  v47._object = v37;
  v47._countAndFlagsBits = v38;
  v50.value._countAndFlagsBits = 0;
  v50.value._object = 0;
  v44.value.super.Class isa = 0;
  v44.is_nil = 0;
  v26.value = 0;
  return sub_1007FEA70(v47, v50, v44, v26, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v40, v30);
}

UIMenu sub_10023FE34()
{
  uint64_t v0 = sub_1007F2CE0();
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)v26 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_1007FDBF0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v26 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)v26 - v8;
  uint64_t v29 = sub_10004A860(0, (unint64_t *)&qword_100B2C170);
  sub_1007FDB70();
  uint64_t v10 = *(void (**)(char *, char *, uint64_t))(v4 + 16);
  v10(v6, v9, v3);
  uint64_t v32 = v10;
  uint64_t v33 = v4 + 16;
  sub_1007F2C80();
  uint64_t v11 = sub_1007FDCD0();
  uint64_t v27 = v12;
  uint64_t v28 = v11;
  uint64_t v13 = *(void (**)(char *, uint64_t))(v4 + 8);
  v13(v9, v3);
  sub_100058D18((uint64_t *)&unk_100B28F90);
  uint64_t v31 = swift_allocObject();
  *(_OWORD *)(v31 + 16) = xmmword_100861BD0;
  uint64_t v14 = sub_10004A860(0, &qword_100B2C0B0);
  sub_1007FDB70();
  v10(v6, v9, v3);
  Swift::OpaquePointer v30 = v2;
  sub_1007F2C80();
  sub_1007FDCD0();
  v13(v9, v3);
  v26[0] = v4 + 8;
  long long v34 = 0u;
  long long v35 = 0u;
  v26[1] = v14;
  uint64_t v15 = sub_1007FE360();
  uint64_t v16 = v31;
  *(void *)(v31 + 32) = v15;
  sub_1007FDB70();
  UIMenuElementSize v17 = v32;
  v32(v6, v9, v3);
  sub_1007F2C80();
  sub_1007FDCD0();
  v13(v9, v3);
  long long v34 = 0u;
  long long v35 = 0u;
  *(void *)(v16 + 4sub_1007E6FC4(2, 18, 1, 0) = sub_1007FE360();
  sub_10004A860(0, (unint64_t *)&qword_100B27760);
  sub_1007FDB70();
  v17(v6, v9, v3);
  sub_1007F2C80();
  sub_1007FDCD0();
  v13(v9, v3);
  long long v34 = 0u;
  long long v35 = 0u;
  *(void *)(v16 + 48) = sub_1007FEDB0();
  sub_1007FDB70();
  UIMenuElementSize v18 = v6;
  UIMenuIdentifier_optional v19 = v6;
  uint64_t v20 = v3;
  v32(v19, v9, v3);
  sub_1007F2C80();
  sub_1007FDCD0();
  v13(v9, v3);
  long long v34 = 0u;
  long long v35 = 0u;
  uint64_t v21 = sub_1007FE360();
  uint64_t v22 = v31;
  *(void *)(v31 + 56) = v21;
  sub_1007FDB70();
  v32(v18, v9, v20);
  sub_1007F2C80();
  sub_1007FDCD0();
  v13(v9, v20);
  long long v34 = 0u;
  long long v35 = 0u;
  *(void *)(v22 + 64) = sub_1007FE360();
  *(void *)&long long v34 = v22;
  sub_1007FE010();
  v37._object = v27;
  v37._countAndFlagsBits = v28;
  v38.value._countAndFlagsBits = 0;
  v38.value._object = 0;
  v36.value.super.Class isa = 0;
  v36.is_nil = 0;
  v23.value = 0;
  return sub_1007FEA70(v37, v38, v36, v23, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)v34, v25);
}

void sub_1002405E0(void *a1)
{
  id v38 = a1;
  uint64_t v1 = sub_1007F2CE0();
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)&v30 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)&v30 - v6;
  uint64_t v8 = sub_1007FDBF0();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v30 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v12);
  uint64_t v14 = (char *)&v30 - v13;
  sub_10004A860(0, &qword_100B2C0B0);
  sub_1007FDB70();
  sub_1007F2C80();
  long long v34 = *(void (**)(char *, char *, uint64_t))(v9 + 16);
  uint64_t v35 = v9 + 16;
  v34(v11, v14, v8);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v16 = [self bundleForClass:ObjCClassFromMetadata];
  (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
  sub_1007FDCF0();
  (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
  UIMenuElementSize v17 = *(void (**)(char *, uint64_t))(v9 + 8);
  uint64_t v36 = v9 + 8;
  uint64_t v37 = v8;
  uint64_t v31 = v17;
  v17(v14, v8);
  long long aBlock = 0u;
  long long v40 = 0u;
  UIMenuElementSize v18 = (void *)sub_1007FE360();
  uint64_t v19 = swift_allocObject();
  *(void *)(v19 + 16) = v18;
  uint64_t v20 = swift_allocObject();
  *(void *)(v20 + 16) = sub_100240CA8;
  *(void *)(v20 + 24) = v19;
  long long v41 = sub_100240CC0;
  uint64_t v42 = v20;
  *(void *)&long long aBlock = _NSConcreteStackBlock;
  *((void *)&aBlock + 1) = 1107296256;
  *(void *)&long long v40 = sub_1006EDB3C;
  *((void *)&v40 + 1) = &unk_100A4F458;
  uint64_t v21 = _Block_copy(&aBlock);
  id v33 = v18;
  swift_retain();
  swift_release();
  UIMenuIdentifier v32 = UIMenuStandardEdit;
  [v38 replaceChildrenOfMenuForIdentifier:UIMenuStandardEdit fromChildrenBlock:v21];
  _Block_release(v21);
  LOBYTE(v1) = swift_isEscapingClosureAtFileLocation();
  swift_release();
  if (v1)
  {
    __break(1u);
  }
  else
  {
    sub_10004A860(0, (unint64_t *)&qword_100B2C170);
    sub_100058D18((uint64_t *)&unk_100B28F90);
    uint64_t v22 = swift_allocObject();
    *(_OWORD *)(v22 + 16) = xmmword_100861BE0;
    sub_1007FDB70();
    uint64_t v23 = v37;
    v34(v11, v14, v37);
    sub_1007F2C80();
    sub_1007FDCD0();
    v31(v14, v23);
    long long aBlock = 0u;
    long long v40 = 0u;
    *(void *)(v22 + 32) = sub_1007FE360();
    *(void *)&long long aBlock = v22;
    sub_1007FE010();
    v44._countAndFlagsBits = 0;
    v44._object = (void *)0xE000000000000000;
    v45.value._countAndFlagsBits = 0;
    v45.value._object = 0;
    v43.value.super.Class isa = 0;
    v43.is_nil = 0;
    v24.value = (UIMenuIdentifier)1;
    Class isa = sub_1007FEA70(v44, v45, v43, v24, 0xFFFFFFFFFFFFFFFFLL, (UIMenuElementSize)aBlock, v29).super.super.isa;
    id v26 = v38;
    [v38 insertSiblingMenu:isa afterMenuForIdentifier:v32];

    Class v27 = sub_10023F790().super.super.isa;
    [v26 insertSiblingMenu:v27 afterMenuForIdentifier:UIMenuEdit];

    [v26 removeMenuForIdentifier:UIMenuSpelling];
    [v26 removeMenuForIdentifier:UIMenuSubstitutions];
    [v26 removeMenuForIdentifier:UIMenuTransformations];
    Class v28 = sub_10023FE34().super.super.isa;
    [v26 insertSiblingMenu:v28 beforeMenuForIdentifier:UIMenuFind];

    [v26 removeMenuForIdentifier:UIMenuFind];
    swift_release();
  }
}

uint64_t sub_100240C70()
{
  return swift_deallocObject();
}

void *sub_100240CA8(unint64_t a1)
{
  return sub_10023F73C(a1, *(void **)(v1 + 16));
}

uint64_t sub_100240CB0()
{
  return swift_deallocObject();
}

uint64_t sub_100240CC0(uint64_t a1)
{
  return sub_1006EDB14(a1, *(uint64_t (**)(void))(v1 + 16));
}

void *sub_100240CC8(unint64_t a1, void *a2)
{
  if (a1 >> 62)
  {
LABEL_20:
    swift_bridgeObjectRetain();
    uint64_t v20 = sub_1007FF290();
    if (v20) {
      goto LABEL_3;
    }
  }
  else
  {
    uint64_t v3 = *(void *)((a1 & 0xFFFFFFFFFFFFFF8) + 0x10);
    swift_bridgeObjectRetain();
    uint64_t v20 = v3;
    if (v3)
    {
LABEL_3:
      uint64_t v4 = 4;
      uint64_t v5 = &selRef__reportProgressWithItems_;
      uint64_t v6 = v20;
      while (1)
      {
        if ((a1 & 0xC000000000000001) != 0) {
          id v7 = (id)sub_1007FF120();
        }
        else {
          id v7 = *(id *)(a1 + 8 * v4);
        }
        uint64_t v8 = v7;
        uint64_t v9 = v4 - 3;
        if (__OFADD__(v4 - 4, 1))
        {
          __break(1u);
          goto LABEL_20;
        }
        uint64_t v10 = v5;
        self;
        uint64_t v11 = swift_dynamicCastObjCClass();
        if (!v11) {
          goto LABEL_15;
        }
        uint64_t v12 = (void *)v11;
        id v13 = v8;
        [v12 v10[253]];
        char v14 = sub_1007F2E60();

        if (v14) {
          break;
        }
        id v16 = v13;
        [v12 v10[253]];
        char v17 = sub_1007F2E60();

        if ((v17 & 1) == 0) {
          goto LABEL_14;
        }
        uint64_t v5 = v10;

        uint64_t v6 = v20;
LABEL_5:
        ++v4;
        if (v9 == v6) {
          goto LABEL_21;
        }
      }
      id v15 = a2;

LABEL_14:
      uint64_t v6 = v20;
LABEL_15:
      sub_1007FDFD0();
      if (*(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x10) >= *(void *)(((unint64_t)_swiftEmptyArrayStorage & 0xFFFFFFFFFFFFFF8) + 0x18) >> 1) {
        sub_1007FE030();
      }
      sub_1007FE060();
      sub_1007FE010();
      uint64_t v5 = v10;
      goto LABEL_5;
    }
  }
LABEL_21:
  swift_bridgeObjectRelease();
  return _swiftEmptyArrayStorage;
}

uint64_t sub_100240EE4()
{
  uint64_t v0 = sub_1007F6BC0();
  sub_10002A6A8(v0, qword_100B269D0);
  sub_10005B838(v0, (uint64_t)qword_100B269D0);
  return sub_1007F6BB0();
}

uint64_t sub_100240F68(uint64_t result)
{
  uint64_t v2 = *(void **)(v1 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (!result)
  {
    if (!v2) {
      return result;
    }
LABEL_9:
    swift_allocObject();
    swift_unknownObjectUnownedInit();
    id v4 = v2;
    swift_retain();
    sub_1007FA350();

    swift_release();
LABEL_10:
    return sub_100241034();
  }
  if (v2) {
    BOOL v3 = result == (void)v2;
  }
  else {
    BOOL v3 = 0;
  }
  if (!v3)
  {
    if (!v2) {
      goto LABEL_10;
    }
    goto LABEL_9;
  }
  return result;
}

uint64_t sub_100241034()
{
  uint64_t v1 = v0;
  uint64_t v2 = *(void **)&v0[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker];
  if (v2)
  {
    id v3 = v2;
    char v4 = sub_1007FA340();
  }
  else
  {
    char v4 = 0;
  }
  if (qword_100B224E0 != -1) {
    swift_once();
  }
  uint64_t v5 = sub_1007F6BC0();
  sub_10005B838(v5, (uint64_t)qword_100B269D0);
  uint64_t v6 = v1;
  id v7 = sub_1007F6BA0();
  os_log_type_t v8 = sub_1007FE3E0();
  if (os_log_type_enabled(v7, v8))
  {
    uint64_t v9 = swift_slowAlloc();
    uint64_t v10 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v9 = 138412546;
    uint64_t v11 = v6;
    sub_1007FEE10();
    *uint64_t v10 = v6;

    *(_WORD *)(v9 + 12) = 1024;
    sub_1007FEE10();
    _os_log_impl((void *)&_mh_execute_header, v7, v8, "%@: window is frontmost => %{BOOL}d", (uint8_t *)v9, 0x12u);
    sub_100058D18((uint64_t *)&unk_100B2AAC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v12 = &v6[OBJC_IVAR___BKFrontmostAssetTracker_state];
  unsigned int v13 = v6[OBJC_IVAR___BKFrontmostAssetTracker_state];
  int v14 = v6[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];
  *uint64_t v12 = v13;
  v12[1] = v4 & 1;
  if (v14) {
    int v15 = 256;
  }
  else {
    int v15 = 0;
  }
  return sub_10024137C(v15 | v13);
}

void sub_100241258(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker;
  id v12 = *(id *)(v1 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (!v12)
  {
    os_log_type_t v8 = 0;
    goto LABEL_9;
  }
  if (!a1)
  {
    id v9 = v12;
    os_log_type_t v8 = v12;
LABEL_8:
    id v10 = v8;
    sub_1007FA350();

    os_log_type_t v8 = *(void **)(v2 + v4);
    goto LABEL_9;
  }
  sub_1007FA380();
  id v5 = v12;
  id v6 = a1;
  char v7 = sub_1007FEB20();

  os_log_type_t v8 = *(void **)(v2 + v4);
  if ((v7 & 1) == 0 && v8) {
    goto LABEL_8;
  }
LABEL_9:
  *(void *)(v2 + v4) = a1;
  id v11 = a1;

  sub_100240F68((uint64_t)v12);
}

BOOL sub_100241354(unsigned __int8 *a1, unsigned __int8 *a2)
{
  return ((*a1 ^ *a2 | a2[1] ^ a1[1]) & 1) == 0;
}

uint64_t sub_10024137C(uint64_t result)
{
  char v2 = v1[OBJC_IVAR___BKFrontmostAssetTracker_state] & v1[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];
  if (result)
  {
    if ((v2 & 1) == (unsigned __int16)(result & 0x100) >> 8) {
      return result;
    }
  }
  else if ((v1[OBJC_IVAR___BKFrontmostAssetTracker_state] & v1[OBJC_IVAR___BKFrontmostAssetTracker_state + 1] & 1) == 0)
  {
    return result;
  }
  if (qword_100B224E0 != -1) {
    swift_once();
  }
  uint64_t v3 = sub_1007F6BC0();
  sub_10005B838(v3, (uint64_t)qword_100B269D0);
  uint64_t v4 = v1;
  id v5 = sub_1007F6BA0();
  os_log_type_t v6 = sub_1007FE3E0();
  if (os_log_type_enabled(v5, v6))
  {
    uint64_t v7 = swift_slowAlloc();
    os_log_type_t v8 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v7 = 138412546;
    id v9 = v4;
    sub_1007FEE10();
    void *v8 = v4;

    *(_WORD *)(v7 + 12) = 1024;
    sub_1007FEE10();
    _os_log_impl((void *)&_mh_execute_header, v5, v6, "%@: is frontmost => %{BOOL}d", (uint8_t *)v7, 0x12u);
    sub_100058D18((uint64_t *)&unk_100B2AAC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  id v10 = &v4[OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged];
  uint64_t result = swift_beginAccess();
  id v11 = *(void (**)(void))v10;
  if (*(void *)v10)
  {
    swift_retain();
    v11(v2 & 1);
    return sub_10003E138((uint64_t)v11);
  }
  return result;
}

uint64_t FrontmostAssetTracker.isFrontmost.getter()
{
  return *(unsigned char *)(v0 + OBJC_IVAR___BKFrontmostAssetTracker_state) & *(unsigned char *)(v0
                                                                               + OBJC_IVAR___BKFrontmostAssetTracker_state
                                                                               + 1) & 1;
}

uint64_t FrontmostAssetTracker.onFrontmostChanged.getter()
{
  uint64_t v1 = (uint64_t *)(v0 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged);
  swift_beginAccess();
  uint64_t v2 = *v1;
  sub_10003E148(*v1);
  return v2;
}

uint64_t FrontmostAssetTracker.onFrontmostChanged.setter(uint64_t a1, uint64_t a2)
{
  id v5 = (uint64_t *)(v2 + OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged);
  swift_beginAccess();
  uint64_t v6 = *v5;
  uint64_t *v5 = a1;
  v5[1] = a2;
  return sub_10003E138(v6);
}

uint64_t (*FrontmostAssetTracker.onFrontmostChanged.modify())()
{
  return j__swift_endAccess;
}

char *FrontmostAssetTracker.__allocating_init(assetID:window:onFrontmostChanged:)(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  id v11 = objc_allocWithZone(v5);
  return FrontmostAssetTracker.init(assetID:window:onFrontmostChanged:)(a1, a2, a3, a4, a5);
}

char *FrontmostAssetTracker.init(assetID:window:onFrontmostChanged:)(uint64_t a1, unint64_t a2, void *a3, uint64_t a4, uint64_t a5)
{
  ObjectType = (objc_class *)swift_getObjectType();
  id v10 = [self sharedApplication];
  if ([self appKitBundleClass]) {
    uint64_t ObjCClassMetadata = swift_getObjCClassMetadata();
  }
  else {
    uint64_t ObjCClassMetadata = 0;
  }
  id v12 = [self delegate];
  id v13 = [v12 appLaunchCoordinator];

  id v14 = objc_allocWithZone(ObjectType);
  int v15 = sub_100241AF8(a1, a2, a3, v10, ObjCClassMetadata, v13, a4, a5);
  swift_getObjectType();
  swift_deallocPartialClassInstance();
  return v15;
}

char *sub_100241AF8(uint64_t a1, unint64_t a2, void *a3, void *a4, uint64_t a5, void *a6, uint64_t a7, uint64_t a8)
{
  ObjectType = (objc_class *)swift_getObjectType();
  *(void *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker] = 0;
  *(_WORD *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_state] = 0;
  id v16 = &v8[OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged];
  *(void *)id v16 = 0;
  *((void *)v16 + 1) = 0;
  char v17 = (uint64_t *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_assetID];
  uint64_t *v17 = a1;
  v17[1] = a2;
  *(void *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_uiApplication] = a4;
  *(void *)&v8[OBJC_IVAR___BKFrontmostAssetTracker_appKitBundle] = a5;
  v46.receiver = v8;
  v46.super_class = ObjectType;
  swift_bridgeObjectRetain();
  id v42 = a4;
  id v18 = [super init];
  NSString v19 = sub_1007FDC30();
  uint64_t v20 = swift_allocObject();
  swift_unknownObjectWeakInit();
  aBlock[4] = (uint64_t)sub_100242E78;
  aBlock[5] = v20;
  aBlock[0] = (uint64_t)_NSConcreteStackBlock;
  aBlock[1] = 1107296256;
  aBlock[2] = (uint64_t)sub_1000510C0;
  aBlock[3] = (uint64_t)&unk_100A4F5C8;
  uint64_t v21 = _Block_copy(aBlock);
  swift_release();
  [a6 appLaunchCoordinatorOnConditionMask:32 blockID:v19 performBlock:v21];
  _Block_release(v21);

  id v41 = a3;
  FrontmostAssetTracker.window.setter(a3);
  if (qword_100B224E0 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1007F6BC0();
  sub_10005B838(v22, (uint64_t)qword_100B269D0);
  id v23 = v18;
  swift_bridgeObjectRetain();
  id v24 = v23;
  Swift::OpaquePointer v25 = sub_1007F6BA0();
  os_log_type_t v26 = sub_1007FE3E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    Class v28 = (void *)swift_slowAlloc();
    aBlock[0] = swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138412803;
    id v29 = v24;
    sub_1007FEE10();
    *Class v28 = v18;

    *(_WORD *)(v27 + 12) = 2160;
    sub_1007FEE10();
    *(_WORD *)(v27 + 22) = 2081;
    swift_bridgeObjectRetain();
    sub_10005B0A8(a1, a2, aBlock);
    sub_1007FEE10();
    swift_bridgeObjectRelease_n();
    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%@: assetID: %{private,mask.hash}s", (uint8_t *)v27, 0x20u);
    sub_100058D18((uint64_t *)&unk_100B2AAC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {

    swift_bridgeObjectRelease_n();
  }
  uint64_t v30 = (char *)v24;
  uint64_t v31 = sub_1007F6BA0();
  os_log_type_t v32 = sub_1007FE3E0();
  if (os_log_type_enabled(v31, v32))
  {
    uint64_t v33 = swift_slowAlloc();
    long long v34 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v33 = 138412546;
    aBlock[0] = (uint64_t)v30;
    uint64_t v35 = v30;
    sub_1007FEE10();
    *long long v34 = v18;

    *(_WORD *)(v33 + 12) = 1024;
    unsigned __int8 v36 = v35[OBJC_IVAR___BKFrontmostAssetTracker_state];
    unsigned __int8 v37 = v35[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];

    LODWORD(aBlock[0]) = v36 & v37 & 1;
    sub_1007FEE10();

    _os_log_impl((void *)&_mh_execute_header, v31, v32, "%@: initial is frontmost: %{BOOL}d", (uint8_t *)v33, 0x12u);
    sub_100058D18((uint64_t *)&unk_100B2AAC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();

    swift_unknownObjectRelease();
  }
  else
  {

    swift_unknownObjectRelease();
  }

  id v38 = (uint64_t *)&v30[OBJC_IVAR___BKFrontmostAssetTracker_onFrontmostChanged];
  swift_beginAccess();
  uint64_t v39 = *v38;
  *id v38 = a7;
  v38[1] = a8;
  sub_10003E138(v39);
  return v30;
}

void sub_1002420C8()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    sub_10024211C();
  }
}

uint64_t sub_10024211C()
{
  if (qword_100B224E0 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1007F6BC0();
  sub_10005B838(v1, (uint64_t)qword_100B269D0);
  uint64_t v2 = v0;
  uint64_t v3 = sub_1007F6BA0();
  os_log_type_t v4 = sub_1007FE3E0();
  if (os_log_type_enabled(v3, v4))
  {
    id v5 = (uint8_t *)swift_slowAlloc();
    uint64_t v6 = (void *)swift_slowAlloc();
    *(_DWORD *)id v5 = 138412290;
    uint64_t v7 = v2;
    sub_1007FEE10();
    *uint64_t v6 = v2;

    _os_log_impl((void *)&_mh_execute_header, v3, v4, "%@: app launch completed", v5, 0xCu);
    sub_100058D18((uint64_t *)&unk_100B2AAC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  os_log_type_t v8 = &v2[OBJC_IVAR___BKFrontmostAssetTracker_state];
  int v9 = v2[OBJC_IVAR___BKFrontmostAssetTracker_state + 1];
  unsigned int v10 = v2[OBJC_IVAR___BKFrontmostAssetTracker_state];
  char *v8 = 1;
  v8[1] = v9;
  if (v9) {
    int v11 = 256;
  }
  else {
    int v11 = 0;
  }
  return sub_10024137C(v11 | v10);
}

void FrontmostAssetTracker.window.setter(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v3 = OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker;
  os_log_type_t v4 = *(void **)&v1[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker];
  if (!v4)
  {
    if (!a1) {
      return;
    }
    goto LABEL_15;
  }
  id v35 = a1;
  id v5 = v4;
  uint64_t v6 = (void *)sub_1007FA370();

  if (!v35)
  {

    if (qword_100B224E0 != -1) {
      swift_once();
    }
    uint64_t v9 = sub_1007F6BC0();
    sub_10005B838(v9, (uint64_t)qword_100B269D0);
    unsigned int v10 = v2;
    int v11 = sub_1007F6BA0();
    os_log_type_t v12 = sub_1007FE3E0();
    if (os_log_type_enabled(v11, v12))
    {
      id v13 = (uint8_t *)swift_slowAlloc();
      unsigned __int8 v37 = (void *)swift_slowAlloc();
      *(_DWORD *)id v13 = 138412290;
      id v14 = v10;
      sub_1007FEE10();
      *unsigned __int8 v37 = v10;

      _os_log_impl((void *)&_mh_execute_header, v11, v12, "%@: window => nil", v13, 0xCu);
      sub_100058D18((uint64_t *)&unk_100B2AAC0);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      int v15 = *(void **)&v2[v3];
      if (v15)
      {
LABEL_13:
        id v16 = v15;
        sub_1007FA350();
        char v17 = *(void **)&v2[v3];
LABEL_23:
        *(void *)&v2[v3] = 0;

        sub_100240F68((uint64_t)v15);
        return;
      }
    }
    else
    {

      int v15 = *(void **)&v2[v3];
      if (v15) {
        goto LABEL_13;
      }
    }
    char v17 = 0;
    goto LABEL_23;
  }
  sub_100242B64();
  id v7 = v6;
  id v36 = v35;
  char v8 = sub_1007FEB20();

  if (v8)
  {

    return;
  }
  a1 = v36;
LABEL_15:
  uint64_t v18 = qword_100B224E0;
  id v19 = a1;
  if (v18 != -1) {
    swift_once();
  }
  uint64_t v20 = sub_1007F6BC0();
  sub_10005B838(v20, (uint64_t)qword_100B269D0);
  id v21 = v19;
  uint64_t v22 = v2;
  id v23 = v21;
  id v24 = v22;
  Swift::OpaquePointer v25 = sub_1007F6BA0();
  os_log_type_t v26 = sub_1007FE3E0();
  if (os_log_type_enabled(v25, v26))
  {
    uint64_t v27 = swift_slowAlloc();
    Class v28 = (void *)swift_slowAlloc();
    *(_DWORD *)uint64_t v27 = 138412546;
    id v29 = v24;
    sub_1007FEE10();
    *Class v28 = v24;

    *(_WORD *)(v27 + 12) = 2112;
    id v30 = v23;
    sub_1007FEE10();
    v28[1] = v23;

    _os_log_impl((void *)&_mh_execute_header, v25, v26, "%@: window => %@", (uint8_t *)v27, 0x16u);
    sub_100058D18((uint64_t *)&unk_100B2AAC0);
    swift_arrayDestroy();
    swift_slowDealloc();
    swift_slowDealloc();
  }
  else
  {
  }
  uint64_t v31 = *(void **)&v24[OBJC_IVAR___BKFrontmostAssetTracker_uiApplication];
  objc_allocWithZone((Class)sub_1007FA380());
  id v32 = v23;
  id v33 = v31;
  long long v34 = (void *)sub_1007FA360();
  sub_100241258(v34);
}

id FrontmostAssetTracker.__deallocating_deinit()
{
  uint64_t v1 = v0;
  ObjectType = (objc_class *)swift_getObjectType();
  uint64_t v3 = *(void **)&v0[OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker];
  if (v3)
  {
    id v4 = v3;
    sub_1007FA350();
  }
  v6.receiver = v1;
  v6.super_class = ObjectType;
  return [super dealloc];
}

uint64_t FrontmostAssetTracker.window.getter()
{
  uint64_t v1 = *(void **)(v0 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (!v1) {
    return 0;
  }
  id v2 = v1;
  uint64_t v3 = sub_1007FA370();

  return v3;
}

void (*FrontmostAssetTracker.window.modify(uint64_t *a1))(void **a1, char a2)
{
  a1[1] = v1;
  uint64_t v3 = *(void **)(v1 + OBJC_IVAR___BKFrontmostAssetTracker_frontmostTracker);
  if (v3)
  {
    id v4 = v3;
    uint64_t v5 = sub_1007FA370();
  }
  else
  {
    uint64_t v5 = 0;
  }
  *a1 = v5;
  return sub_100242A9C;
}

void sub_100242A9C(void **a1, char a2)
{
  id v2 = *a1;
  if (a2)
  {
    id v3 = v2;
    FrontmostAssetTracker.window.setter(v2);
  }
  else
  {
    FrontmostAssetTracker.window.setter(*a1);
  }
}

void FrontmostAssetTracker.init()()
{
}

unint64_t sub_100242B64()
{
  unint64_t result = qword_100B26A00;
  if (!qword_100B26A00)
  {
    self;
    unint64_t result = swift_getObjCClassMetadata();
    atomic_store(result, (unint64_t *)&qword_100B26A00);
  }
  return result;
}

uint64_t type metadata accessor for FrontmostAssetTracker()
{
  return self;
}

_WORD *initializeBufferWithCopyOfBuffer for FrontmostAssetTracker.State(_WORD *result, _WORD *a2)
{
  *unint64_t result = *a2;
  return result;
}

uint64_t getEnumTagSinglePayload for FrontmostAssetTracker.State(unsigned __int16 *a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0xFF) {
    goto LABEL_17;
  }
  if (a2 + 65281 <= 0xFFFEFFFF) {
    int v2 = 2;
  }
  else {
    int v2 = 4;
  }
  if (a2 + 65281 < 0xFF0000) {
    int v3 = 1;
  }
  else {
    int v3 = v2;
  }
  if (v3 == 4)
  {
    int v4 = *(_DWORD *)(a1 + 1);
    if (v4) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
  else
  {
    if (v3 == 2)
    {
      int v4 = a1[1];
      if (!a1[1]) {
        goto LABEL_17;
      }
      return (*a1 | (v4 << 16)) - 65281;
    }
    int v4 = *((unsigned __int8 *)a1 + 2);
    if (*((unsigned char *)a1 + 2)) {
      return (*a1 | (v4 << 16)) - 65281;
    }
  }
LABEL_17:
  unsigned int v6 = *(unsigned __int8 *)a1;
  BOOL v7 = v6 >= 2;
  int v8 = (v6 + 2147483646) & 0x7FFFFFFF;
  if (!v7) {
    int v8 = -1;
  }
  return (v8 + 1);
}

uint64_t storeEnumTagSinglePayload for FrontmostAssetTracker.State(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a3 + 65281 <= 0xFFFEFFFF) {
    int v3 = 2;
  }
  else {
    int v3 = 4;
  }
  if (a3 + 65281 < 0xFF0000) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xFF) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xFE)
  {
    unsigned int v6 = ((a2 - 255) >> 16) + 1;
    *(_WORD *)unint64_t result = a2 - 255;
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = v6;
        break;
      case 2:
        *(_WORD *)(result + 2) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100242D44);
      case 4:
        *(_DWORD *)(result + 2) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        *(unsigned char *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 2) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 2) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *(unsigned char *)unint64_t result = a2 + 1;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for FrontmostAssetTracker.State()
{
  return &type metadata for FrontmostAssetTracker.State;
}

uint64_t sub_100242D7C()
{
  _Block_release(*(const void **)(v0 + 16));

  return swift_deallocObject();
}

uint64_t sub_100242DB4(char a1)
{
  return sub_10078D394(a1, *(void *)(v1 + 16));
}

uint64_t sub_100242DBC()
{
  swift_unknownObjectUnownedDestroy();

  return swift_deallocObject();
}

void sub_100242DF4()
{
  id Strong = (id)swift_unknownObjectUnownedLoadStrong();
  sub_100241034();
}

uint64_t sub_100242E40()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

void sub_100242E78()
{
}

uint64_t sub_100242E90()
{
  uint64_t v0 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v0 - 8);
  int v2 = (char *)v12 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  v12[0] = sub_1007F2820();
  uint64_t v3 = *(void *)(v12[0] - 8);
  __chkstk_darwin(v12[0]);
  uint64_t v5 = (char *)v12 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007F2CE0();
  __chkstk_darwin(v6 - 8);
  uint64_t v7 = sub_1007FDBF0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1007F2840();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v10 = sub_1007F2390();
  sub_10002A6A8(v10, qword_100B755A8);
  sub_10005B838(v10, (uint64_t)qword_100B755A8);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, void))(v3 + 104))(v5, enum case for LocalizedStringResource.BundleDescription.main(_:), v12[0]);
  sub_1007F2860();
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(v9 + 56))(v2, 1, 1, v8);
  return sub_1007F2380();
}

unint64_t sub_100243170()
{
  uint64_t v0 = sub_100058D18(&qword_100B258D8);
  __chkstk_darwin(v0 - 8);
  long long v91 = (char *)&v64 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v2 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v2 - 8);
  long long v90 = (char *)&v64 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v72 = sub_1007F2820();
  uint64_t v4 = *(void *)(v72 - 8);
  __chkstk_darwin(v72);
  uint64_t v6 = (char *)&v64 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007F2CE0();
  __chkstk_darwin(v7 - 8);
  uint64_t v8 = sub_1007FDBF0();
  __chkstk_darwin(v8 - 8);
  uint64_t v9 = sub_1007F2840();
  uint64_t v82 = v9;
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  long long v89 = (char *)&v64 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_100058D18((uint64_t *)&unk_100B26BA0);
  uint64_t v12 = sub_100058D18(&qword_100B24E18);
  uint64_t v13 = *(void *)(v12 - 8);
  uint64_t v85 = *(unsigned char **)(v13 + 72);
  uint64_t v14 = v12 - 8;
  uint64_t v80 = v12 - 8;
  unint64_t v15 = (*(unsigned __int8 *)(v13 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v13 + 80);
  uint64_t v67 = 8 * (void)v85;
  uint64_t v16 = swift_allocObject();
  uint64_t v68 = v16;
  *(_OWORD *)(v16 + 16) = xmmword_100861C80;
  unint64_t v77 = v16 + v15;
  unint64_t v69 = v16 + v15 + *(int *)(v14 + 56);
  *(unsigned char *)(v16 + v15) = 0;
  sub_1007FDB70();
  sub_1007F2C80();
  unsigned int v73 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  char v17 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 104);
  uint64_t v71 = v4 + 104;
  long long v70 = v17;
  uint64_t v18 = v72;
  ((void (*)(char *))v17)(v6);
  sub_1007F2860();
  uint64_t v83 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v10 + 56);
  v83(v90, 1, 1, v9);
  uint64_t v76 = sub_1007F21A0();
  uint64_t v19 = *(void *)(v76 - 8);
  uint64_t v81 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v19 + 56);
  uint64_t v75 = v19 + 56;
  v81(v91, 1, 1, v76);
  uint64_t v86 = sub_100058D18(&qword_100B26BB0);
  uint64_t v79 = v10 + 56;
  uint64_t v20 = *(void *)(v10 + 72);
  uint64_t v21 = *(unsigned __int8 *)(v10 + 80);
  uint64_t v84 = ((v21 + 32) & ~v21) + 2 * v20;
  uint64_t v74 = (v21 + 32) & ~v21;
  uint64_t v78 = v20;
  uint64_t v87 = v21 | 7;
  uint64_t v22 = swift_allocObject();
  long long v88 = xmmword_10085FEF0;
  *(_OWORD *)(v22 + 16) = xmmword_10085FEF0;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v23 = v73;
  id v24 = v70;
  v70(v6, v73, v18);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v24(v6, v23, v18);
  Swift::OpaquePointer v25 = v24;
  sub_1007F2860();
  os_log_type_t v26 = v90;
  uint64_t v27 = v91;
  sub_1007F21B0();
  uint64_t v66 = (uint64_t)&v85[v77 + *(int *)(v80 + 56)];
  v85[v77] = 1;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v28 = v72;
  v25(v6, v23, v72);
  sub_1007F2860();
  v83(v26, 1, 1, v82);
  v81(v27, 1, 1, v76);
  *(_OWORD *)(swift_allocObject() + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  v25(v6, v23, v28);
  sub_1007F2860();
  unint64_t v69 = 0xEA0000000000656DLL;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v29 = v23;
  uint64_t v30 = v28;
  v25(v6, v29, v28);
  sub_1007F2860();
  uint64_t v31 = v90;
  id v32 = v91;
  sub_1007F21B0();
  uint64_t v66 = 2 * (void)v85;
  id v33 = (unsigned char *)(v77 + 2 * (void)v85);
  uint64_t v65 = (uint64_t)&v33[*(int *)(v80 + 56)];
  *id v33 = 2;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v34 = v73;
  v25(v6, v73, v30);
  sub_1007F2860();
  v83(v31, 1, 1, v82);
  v81(v32, 1, 1, v76);
  uint64_t v64 = swift_allocObject();
  *(_OWORD *)(v64 + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  id v35 = v25;
  v25(v6, v34, v30);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v25(v6, v34, v30);
  sub_1007F2860();
  id v36 = v90;
  unsigned __int8 v37 = v91;
  sub_1007F21B0();
  id v38 = &v85[v66 + v77];
  uint64_t v66 = (uint64_t)&v38[*(int *)(v80 + 56)];
  *id v38 = 3;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v39 = v73;
  v35(v6, v73, v30);
  sub_1007F2860();
  v83(v36, 1, 1, v82);
  v81(v37, 1, 1, v76);
  uint64_t v65 = swift_allocObject();
  *(_OWORD *)(v65 + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v40 = v30;
  id v41 = v70;
  v70(v6, v39, v40);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v41(v6, v39, v40);
  id v42 = v41;
  sub_1007F2860();
  UIImage_optional v43 = v90;
  Swift::String v44 = v91;
  sub_1007F21B0();
  uint64_t v66 = 4 * (void)v85;
  Swift::String_optional v45 = (unsigned char *)(v77 + 4 * (void)v85);
  uint64_t v65 = (uint64_t)&v45[*(int *)(v80 + 56)];
  *Swift::String_optional v45 = 4;
  sub_1007FDB70();
  sub_1007F2C80();
  v42(v6, v39, v40);
  sub_1007F2860();
  v83(v43, 1, 1, v82);
  v81(v44, 1, 1, v76);
  *(_OWORD *)(swift_allocObject() + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v46 = v73;
  uint64_t v47 = v40;
  v42(v6, v73, v40);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v42(v6, v46, v40);
  sub_1007F2860();
  Swift::String_optional v48 = v90;
  Swift::String_optional v49 = v91;
  sub_1007F21B0();
  Swift::String_optional v50 = &v85[v66 + v77];
  uint64_t v66 = (uint64_t)&v50[*(int *)(v80 + 56)];
  unsigned char *v50 = 5;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v51 = v73;
  uint64_t v52 = v47;
  uint64_t v53 = v70;
  v70(v6, v73, v52);
  sub_1007F2860();
  v83(v48, 1, 1, v82);
  v81(v49, 1, 1, v76);
  *(_OWORD *)(swift_allocObject() + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v54 = v51;
  uint64_t v55 = v51;
  uint64_t v56 = v72;
  v53(v6, v55, v72);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v53(v6, v54, v56);
  sub_1007F2860();
  uint64_t v57 = v90;
  sub_1007F21B0();
  uint64_t v58 = (unsigned char *)(v77 + 6 * (void)v85);
  uint64_t v66 = (uint64_t)&v58[*(int *)(v80 + 56)];
  *uint64_t v58 = 6;
  sub_1007FDB70();
  sub_1007F2C80();
  v53(v6, v54, v56);
  sub_1007F2860();
  v83(v57, 1, 1, v82);
  id v59 = v91;
  v81(v91, 1, 1, v76);
  *(_OWORD *)(swift_allocObject() + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  v53(v6, v54, v56);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v53(v6, v54, v56);
  sub_1007F2860();
  uint64_t v60 = v90;
  sub_1007F21B0();
  long long v61 = (unsigned char *)(v77 + v67 - (void)v85);
  uint64_t v85 = &v61[*(int *)(v80 + 56)];
  *long long v61 = 7;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v62 = v72;
  v53(v6, v54, v72);
  sub_1007F2860();
  v83(v60, 1, 1, v82);
  v81(v59, 1, 1, v76);
  *(_OWORD *)(swift_allocObject() + 16) = v88;
  sub_1007FDB70();
  sub_1007F2C80();
  v53(v6, v54, v62);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v53(v6, v54, v62);
  sub_1007F2860();
  sub_1007F21B0();
  unint64_t result = sub_100210000(v68);
  qword_100B755C0 = result;
  return result;
}

uint64_t sub_100244614(unsigned __int8 *a1, char *a2)
{
  return sub_1007B1390(*a1, *a2);
}

unint64_t sub_100244624()
{
  unint64_t result = qword_100B26A50;
  if (!qword_100B26A50)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A50);
  }
  return result;
}

Swift::Int sub_100244678()
{
  return sub_1007B3478();
}

uint64_t sub_100244684()
{
  return sub_1007B2A9C();
}

Swift::Int sub_10024468C()
{
  return sub_1007B3478();
}

uint64_t sub_100244694@<X0>(uint64_t a1@<X0>, unsigned char *a2@<X8>)
{
  uint64_t result = sub_100245D94(*(void *)a1, *(void **)(a1 + 8));
  *a2 = result;
  return result;
}

void sub_1002446C4(uint64_t *a1@<X8>)
{
  unint64_t v2 = 0xE900000000000065;
  uint64_t v3 = 0x646F4D746867696CLL;
  switch(*v1)
  {
    case 1:
      unint64_t v2 = 0xE800000000000000;
      uint64_t v3 = 0x65646F4D6B726164;
      goto LABEL_3;
    case 2:
      *a1 = 0x31656D656874;
      a1[1] = 0xE600000000000000;
      break;
    case 3:
      *a1 = 0x32656D656874;
      a1[1] = 0xE600000000000000;
      break;
    case 4:
      *a1 = 0x33656D656874;
      a1[1] = 0xE600000000000000;
      break;
    case 5:
      *a1 = 0x34656D656874;
      a1[1] = 0xE600000000000000;
      break;
    case 6:
      *a1 = 0x35656D656874;
      a1[1] = 0xE600000000000000;
      break;
    case 7:
      *a1 = 0x36656D656874;
      a1[1] = 0xE600000000000000;
      break;
    default:
LABEL_3:
      *a1 = v3;
      a1[1] = v2;
      break;
  }
}

unint64_t sub_1002447D0()
{
  unint64_t result = qword_100B26A58;
  if (!qword_100B26A58)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A58);
  }
  return result;
}

unint64_t sub_100244828()
{
  unint64_t result = qword_100B26A60;
  if (!qword_100B26A60)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A60);
  }
  return result;
}

unint64_t sub_100244880()
{
  unint64_t result = qword_100B26A68;
  if (!qword_100B26A68)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A68);
  }
  return result;
}

unint64_t sub_1002448D8()
{
  unint64_t result = qword_100B26A70;
  if (!qword_100B26A70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A70);
  }
  return result;
}

unint64_t sub_100244930()
{
  unint64_t result = qword_100B26A78;
  if (!qword_100B26A78)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A78);
  }
  return result;
}

unint64_t sub_100244988()
{
  unint64_t result = qword_100B26A80;
  if (!qword_100B26A80)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A80);
  }
  return result;
}

unint64_t sub_1002449E0()
{
  unint64_t result = qword_100B26A88;
  if (!qword_100B26A88)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A88);
  }
  return result;
}

uint64_t sub_100244A34@<X0>(uint64_t a1@<X8>)
{
  return sub_1002242B8(&qword_100B224E8, (uint64_t (*)(void))&type metadata accessor for TypeDisplayRepresentation, (uint64_t)qword_100B755A8, a1);
}

uint64_t sub_100244A6C()
{
  return swift_getOpaqueTypeConformance2();
}

unint64_t sub_100244ABC()
{
  unint64_t result = qword_100B26A90;
  if (!qword_100B26A90)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A90);
  }
  return result;
}

uint64_t sub_100244B10(uint64_t a1)
{
  unint64_t v2 = sub_100244ABC();

  return static AppEnum.defaultResolverSpecification.getter(a1, v2);
}

unint64_t sub_100244B60()
{
  unint64_t result = qword_100B26A98;
  if (!qword_100B26A98)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26A98);
  }
  return result;
}

unint64_t sub_100244BB8()
{
  unint64_t result = qword_100B26AA0;
  if (!qword_100B26AA0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26AA0);
  }
  return result;
}

unint64_t sub_100244C10()
{
  unint64_t result = qword_100B26AA8;
  if (!qword_100B26AA8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26AA8);
  }
  return result;
}

uint64_t sub_100244C64()
{
  if (qword_100B224F0 != -1) {
    swift_once();
  }

  return swift_bridgeObjectRetain();
}

uint64_t sub_100244CC0(uint64_t a1)
{
  unint64_t v2 = sub_1002449E0();

  return CaseDisplayRepresentable.localizedStringResource.getter(a1, v2);
}

uint64_t sub_100244D0C()
{
  return sub_100043334(&qword_100B26AB0, &qword_100B26AB8);
}

void sub_100244D48(void *a1@<X8>)
{
  *a1 = &off_100A4C838;
}

unint64_t sub_100244D5C()
{
  unint64_t result = qword_100B26AC0;
  if (!qword_100B26AC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26AC0);
  }
  return result;
}

uint64_t sub_100244DB4()
{
  uint64_t v0 = sub_1007F2820();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1007F2CE0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1007FDBF0();
  __chkstk_darwin(v5 - 8);
  uint64_t v6 = sub_1007F2840();
  sub_10002A6A8(v6, qword_100B755C8);
  sub_10005B838(v6, (uint64_t)qword_100B755C8);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1007F2860();
}

uint64_t sub_100244F94()
{
  return sub_1007F1E90();
}

uint64_t sub_100244FB8()
{
  sub_1007F1E90();
  return v1;
}

uint64_t sub_100244FEC()
{
  uint64_t v0 = sub_100058D18(&qword_100B26B78);
  __chkstk_darwin(v0 - 8);
  uint64_t v1 = sub_100058D18(&qword_100B26B80);
  __chkstk_darwin(v1);
  sub_100245418();
  sub_1007F2270();
  v3._object = (void *)0x80000001009074C0;
  v3._countAndFlagsBits = 0xD00000000000001ALL;
  sub_1007F2260(v3);
  swift_getKeyPath();
  sub_100058D18(&qword_100B26B88);
  sub_1007F2250();
  swift_release();
  v4._countAndFlagsBits = 32;
  v4._object = (void *)0xE100000000000000;
  sub_1007F2260(v4);
  swift_getKeyPath();
  sub_100058D18((uint64_t *)&unk_100B26B90);
  sub_1007F2250();
  swift_release();
  v5._countAndFlagsBits = 0;
  v5._object = (void *)0xE000000000000000;
  sub_1007F2260(v5);
  sub_1007F2290();
  return sub_1007F2240();
}

uint64_t sub_1002451D0()
{
  return sub_1007F1E90();
}

uint64_t sub_1002451F4(uint64_t a1)
{
  uint64_t v2 = sub_1007F1E70();
  uint64_t v3 = *(void *)(v2 - 8);
  __chkstk_darwin(v2);
  (*(void (**)(char *, uint64_t, uint64_t))(v3 + 16))((char *)&v6 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0), a1, v2);
  sub_1007F1EA0();
  return (*(uint64_t (**)(uint64_t, uint64_t))(v3 + 8))(a1, v2);
}

void (*sub_1002452E4(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = sub_1007F1E80();
  return sub_100245340;
}

uint64_t sub_100245344@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1007F1E90();
  *a1 = v3;
  return result;
}

uint64_t sub_100245380()
{
  return sub_1007F1EA0();
}

void (*sub_1002453B8(void *a1))(void *)
{
  uint64_t v2 = malloc(0x28uLL);
  *a1 = v2;
  void v2[4] = sub_1007F1E80();
  return sub_100245340;
}

unint64_t sub_100245418()
{
  unint64_t result = qword_100B47EB0;
  if (!qword_100B47EB0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B47EB0);
  }
  return result;
}

unint64_t sub_100245470()
{
  unint64_t result = qword_100B26AD0;
  if (!qword_100B26AD0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26AD0);
  }
  return result;
}

unint64_t sub_1002454C8()
{
  unint64_t result = qword_100B26AD8;
  if (!qword_100B26AD8)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26AD8);
  }
  return result;
}

uint64_t sub_10024551C()
{
  return sub_100043334((unint64_t *)&qword_100B26AE0, &qword_100B25888);
}

uint64_t sub_100245558()
{
  return swift_getOpaqueTypeConformance2();
}

uint64_t sub_100245574@<X0>(uint64_t a1@<X8>)
{
  return sub_1002242B8(&qword_100B224F8, (uint64_t (*)(void))&type metadata accessor for LocalizedStringResource, (uint64_t)qword_100B755C8, a1);
}

uint64_t sub_1002455B0()
{
  return _swift_task_switch(sub_1002455CC, 0, 0);
}

uint64_t sub_1002455CC()
{
  sub_100246614();
  swift_allocError();
  swift_willThrow();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

char *sub_100245654@<X0>(char **a1@<X8>)
{
  unint64_t result = sub_100245DE0();
  *a1 = result;
  a1[1] = v3;
  return result;
}

uint64_t sub_10024567C(uint64_t a1)
{
  unint64_t v2 = sub_100245418();

  return static AppIntent.persistentIdentifier.getter(a1, v2);
}

const char *sub_1002456B8()
{
  uint64_t v0 = sub_100058D18(&qword_100B26BB8);
  uint64_t v1 = v0 - 8;
  __chkstk_darwin(v0);
  uint64_t v3 = &v13[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v4 = sub_1007F1E70();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = &v13[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_1007F1E90();
  uint64_t v8 = v13[15];
  sub_1007F1E90();
  uint64_t v9 = &v3[*(int *)(v1 + 56)];
  unsigned char *v3 = v8;
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v5 + 32))(v9, v7, v4);
  switch(v8)
  {
    case 1:
      int v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v9, v4);
      if (v12 == enum case for ChangeOperation.disable(_:)) {
        goto LABEL_12;
      }
      if (v12 != enum case for ChangeOperation.enable(_:)) {
        goto LABEL_15;
      }
      goto LABEL_14;
    case 2:
    case 3:
    case 4:
    case 5:
    case 6:
    case 7:
      int v10 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v9, v4);
      if (v10 == enum case for ChangeOperation.disable(_:)) {
        return "books_disableTheme:";
      }
      if (v10 == enum case for ChangeOperation.enable(_:)) {
        return "books_enableTheme:";
      }
      if (v10 != enum case for ChangeOperation.toggle(_:)) {
        goto LABEL_17;
      }
      unint64_t result = "books_toggleTheme:";
      break;
    default:
      int v12 = (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 88))(v9, v4);
      if (v12 == enum case for ChangeOperation.disable(_:))
      {
LABEL_14:
        unint64_t result = "books_enableDarkAppearance:";
      }
      else if (v12 == enum case for ChangeOperation.enable(_:))
      {
LABEL_12:
        unint64_t result = "books_disableDarkAppearance:";
      }
      else
      {
LABEL_15:
        if (v12 == enum case for ChangeOperation.toggle(_:))
        {
          unint64_t result = "books_toggleDarkAppearance:";
        }
        else
        {
LABEL_17:
          sub_1002466C0((uint64_t)v3);
          unint64_t result = 0;
        }
      }
      break;
  }
  return result;
}

uint64_t sub_1002459E0()
{
  return qword_100862230[*(char *)(v0 + OBJC_IVAR____TtC5Books15ThemeIDProvider_setting)];
}

id sub_100245A3C()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for ThemeIDProvider();
  return [super dealloc];
}

uint64_t type metadata accessor for ThemeIDProvider()
{
  return self;
}

ValueMetadata *type metadata accessor for BookReaderChangeThemeIntent()
{
  return &type metadata for BookReaderChangeThemeIntent;
}

unsigned char *storeEnumTagSinglePayload for BookThemeSetting(unsigned char *result, unsigned int a2, unsigned int a3)
{
  if (a3 + 7 >= 0xFFFF00) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 7) >> 8 < 0xFF) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3 >= 0xF9) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2 > 0xF8)
  {
    unsigned int v6 = ((a2 - 249) >> 8) + 1;
    *unint64_t result = a2 + 7;
    switch(v5)
    {
      case 1:
        result[1] = v6;
        break;
      case 2:
        *(_WORD *)(result + 1) = v6;
        break;
      case 3:
LABEL_23:
        __break(1u);
        JUMPOUT(0x100245B70);
      case 4:
        *(_DWORD *)(result + 1) = v6;
        break;
      default:
        return result;
    }
  }
  else
  {
    switch(v5)
    {
      case 1:
        result[1] = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      case 2:
        *(_WORD *)(result + 1) = 0;
        goto LABEL_17;
      case 3:
        goto LABEL_23;
      case 4:
        *(_DWORD *)(result + 1) = 0;
        if (!a2) {
          return result;
        }
        goto LABEL_18;
      default:
LABEL_17:
        if (a2) {
LABEL_18:
        }
          *unint64_t result = a2 + 7;
        break;
    }
  }
  return result;
}

ValueMetadata *type metadata accessor for BookThemeSetting()
{
  return &type metadata for BookThemeSetting;
}

uint64_t sub_100245BA8()
{
  return sub_100043334(&qword_100B26B28, (uint64_t *)&unk_100B26B30);
}

uint64_t sub_100245BE4()
{
  uint64_t v0 = sub_1007F2820();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  int v3 = (char *)&v7 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1007F2CE0();
  __chkstk_darwin(v4 - 8);
  uint64_t v5 = sub_1007FDBF0();
  __chkstk_darwin(v5 - 8);
  sub_1007FDB70();
  sub_1007F2C80();
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, enum case for LocalizedStringResource.BundleDescription.main(_:), v0);
  return sub_1007F2860();
}

uint64_t sub_100245D94(uint64_t a1, void *a2)
{
  v6._countAndFlagsBits = a1;
  v3._rawValue = &off_100A4C758;
  v6._object = a2;
  unint64_t v4 = sub_1007FF320(v3, v6);
  swift_bridgeObjectRelease();
  if (v4 >= 8) {
    return 8;
  }
  else {
    return v4;
  }
}

char *sub_100245DE0()
{
  uint64_t v0 = sub_1007F22A0();
  uint64_t v1 = *(void *)(v0 - 8);
  uint64_t v55 = v0;
  uint64_t v56 = v1;
  __chkstk_darwin(v0);
  uint64_t v54 = (char *)v38 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100058D18(&qword_100B25890);
  uint64_t v4 = __chkstk_darwin(v3 - 8);
  uint64_t v53 = (char *)v38 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v4);
  uint64_t v52 = (char *)v38 - v6;
  uint64_t v7 = sub_100058D18((uint64_t *)&unk_100B26B40);
  __chkstk_darwin(v7 - 8);
  uint64_t v51 = (char *)v38 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v9 = sub_100058D18(&qword_100B25898);
  __chkstk_darwin(v9 - 8);
  Swift::String_optional v50 = (char *)v38 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1007F2820();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)v38 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1007F2CE0();
  __chkstk_darwin(v15 - 8);
  uint64_t v16 = sub_1007FDBF0();
  __chkstk_darwin(v16 - 8);
  uint64_t v17 = sub_1007F2840();
  uint64_t v47 = v17;
  uint64_t v18 = *(void *)(v17 - 8);
  __chkstk_darwin(v17);
  id v41 = (char *)v38 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v49 = sub_100058D18(&qword_100B26B50);
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v20 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v21 = *(void (**)(char *, uint64_t, uint64_t))(v12 + 104);
  unsigned int v42 = enum case for LocalizedStringResource.BundleDescription.main(_:);
  uint64_t v43 = v11;
  v21(v14, enum case for LocalizedStringResource.BundleDescription.main(_:), v11);
  Swift::String v44 = v21;
  uint64_t v45 = v12 + 104;
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v21(v14, v20, v11);
  uint64_t v22 = v50;
  sub_1007F2860();
  uint64_t v23 = *(void (**)(char *, void, uint64_t, uint64_t))(v18 + 56);
  uint64_t v46 = v18 + 56;
  Swift::String_optional v48 = v23;
  v23(v22, 0, 1, v17);
  uint64_t v24 = enum case for ChangeOperation.enable(_:);
  uint64_t v25 = sub_1007F1E70();
  uint64_t v26 = *(void *)(v25 - 8);
  uint64_t v27 = v51;
  (*(void (**)(char *, uint64_t, uint64_t))(v26 + 104))(v51, v24, v25);
  (*(void (**)(char *, void, uint64_t, uint64_t))(v26 + 56))(v27, 0, 1, v25);
  uint64_t v28 = sub_1007F1DA0();
  uint64_t v29 = *(void *)(v28 - 8);
  uint64_t v30 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(v29 + 56);
  v38[0] = v30;
  v38[1] = v29 + 56;
  v30(v52, 1, 1, v28);
  v30(v53, 1, 1, v28);
  unsigned int v39 = enum case for InputConnectionBehavior.default(_:);
  uint64_t v31 = *(void (**)(void))(v56 + 104);
  v56 += 104;
  uint64_t v40 = (void (*)(char *, void, uint64_t))v31;
  v31(v54);
  sub_1002465D0(&qword_100B26B58);
  sub_1007FF0F0();
  sub_1002465D0(&qword_100B26B60);
  id v32 = v50;
  uint64_t v51 = (char *)sub_1007F1EF0();
  uint64_t v49 = sub_100058D18(&qword_100B26B68);
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v33 = v42;
  uint64_t v34 = v43;
  id v35 = v44;
  v44(v14, v42, v43);
  sub_1007F2860();
  sub_1007FDB70();
  sub_1007F2C80();
  v35(v14, v33, v34);
  sub_1007F2860();
  v48(v32, 0, 1, v47);
  char v57 = 0;
  id v36 = (void (*)(char *, uint64_t, uint64_t, uint64_t))v38[0];
  ((void (*)(char *, uint64_t, uint64_t, uint64_t))v38[0])(v52, 1, 1, v28);
  v36(v53, 1, 1, v28);
  v40(v54, v39, v55);
  sub_100244ABC();
  sub_1007F1EF0();
  return v51;
}

uint64_t sub_1002465D0(unint64_t *a1)
{
  uint64_t result = *a1;
  if (!result)
  {
    sub_1007F1E70();
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

unint64_t sub_100246614()
{
  unint64_t result = qword_100B26B70;
  if (!qword_100B26B70)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26B70);
  }
  return result;
}

uint64_t sub_100246668@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007F1EB0();
  *a1 = result;
  return result;
}

uint64_t sub_100246694@<X0>(uint64_t *a1@<X8>)
{
  uint64_t result = sub_1007F1EB0();
  *a1 = result;
  return result;
}

uint64_t sub_1002466C0(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B26BB8);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

unsigned char *storeEnumTagSinglePayload for BookReaderChangeThemeError(unsigned char *result, int a2, int a3)
{
  if ((a3 + 1) >= 0x10000) {
    int v3 = 4;
  }
  else {
    int v3 = 2;
  }
  if ((a3 + 1) < 0x100) {
    unsigned int v4 = 1;
  }
  else {
    unsigned int v4 = v3;
  }
  if (a3) {
    uint64_t v5 = v4;
  }
  else {
    uint64_t v5 = 0;
  }
  if (a2)
  {
    switch(v5)
    {
      case 1:
        *uint64_t result = a2;
        return result;
      case 2:
        *(_WORD *)uint64_t result = a2;
        return result;
      case 3:
        goto LABEL_19;
      case 4:
        *(_DWORD *)uint64_t result = a2;
        return result;
      default:
        return result;
    }
  }
  switch(v5)
  {
    case 1:
      *uint64_t result = 0;
      break;
    case 2:
      *(_WORD *)uint64_t result = 0;
      break;
    case 3:
LABEL_19:
      __break(1u);
      JUMPOUT(0x1002467BCLL);
    case 4:
      *(_DWORD *)uint64_t result = 0;
      break;
    default:
      return result;
  }
  return result;
}

ValueMetadata *type metadata accessor for BookReaderChangeThemeError()
{
  return &type metadata for BookReaderChangeThemeError;
}

unint64_t sub_1002467F8()
{
  unint64_t result = qword_100B26BC0;
  if (!qword_100B26BC0)
  {
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B26BC0);
  }
  return result;
}

uint64_t LibraryAnalyticsDataProvider.seriesType(for:)@<X0>(uint64_t a1@<X8>)
{
  id v2 = (id)BSUIGetLibraryItemStateProvider();
  NSString v3 = sub_1007FDC30();
  id v4 = [v2 itemStateWithIdentifier:v3];

  swift_unknownObjectRelease();
  id v5 = [v4 seriesType];
  swift_unknownObjectRelease();
  switch((unint64_t)v5)
  {
    case 1uLL:
      uint64_t v11 = (unsigned int *)&enum case for SeriesType.nonSeries(_:);
      goto LABEL_6;
    case 2uLL:
      uint64_t v11 = (unsigned int *)&enum case for SeriesType.ordered(_:);
      goto LABEL_6;
    case 3uLL:
      uint64_t v11 = (unsigned int *)&enum case for SeriesType.unOrdered(_:);
LABEL_6:
      uint64_t v12 = *v11;
      uint64_t v13 = sub_1007F3CB0();
      uint64_t v15 = *(void *)(v13 - 8);
      (*(void (**)(uint64_t, uint64_t, uint64_t))(v15 + 104))(a1, v12, v13);
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v15 + 56);
      uint64_t v9 = a1;
      uint64_t v10 = 0;
      uint64_t v8 = v13;
      break;
    default:
      uint64_t v6 = sub_1007F3CB0();
      uint64_t v7 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56);
      uint64_t v8 = v6;
      uint64_t v9 = a1;
      uint64_t v10 = 1;
      break;
  }

  return v7(v9, v10, 1, v8);
}

ValueMetadata *type metadata accessor for LibraryAnalyticsDataProvider()
{
  return &type metadata for LibraryAnalyticsDataProvider;
}

uint64_t sub_100246A34()
{
  uint64_t v1 = v0;
  uint64_t ObjectType = swift_getObjectType();
  uint64_t v3 = sub_100058D18((uint64_t *)&unk_100B2CCB0);
  __chkstk_darwin(v3 - 8);
  id v5 = (uint64_t *)((char *)&v23 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v6 = sub_100058D18((uint64_t *)&unk_100B2CCA0);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = (uint64_t *)((char *)&v23 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v9 = sub_100058D18(&qword_100B26C10);
  __chkstk_darwin(v9 - 8);
  uint64_t v11 = (uint64_t *)((char *)&v23 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0));
  uint64_t v12 = (int *)type metadata accessor for BuyButtonView(0);
  __chkstk_darwin(v12);
  uint64_t v14 = (uint64_t *)((char *)&v23 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0));
  _OWORD v29[3] = ObjectType;
  uint64_t v29[4] = &off_100A4F7C8;
  v29[0] = v1;
  *uint64_t v11 = swift_getKeyPath();
  sub_100058D18(&qword_100B26C18);
  swift_storeEnumTagMultiPayload();
  uint64_t *v8 = swift_getKeyPath();
  sub_100058D18((uint64_t *)&unk_100B2CDB0);
  swift_storeEnumTagMultiPayload();
  uint64_t *v5 = swift_getKeyPath();
  sub_100058D18((uint64_t *)&unk_100B2CC70);
  swift_storeEnumTagMultiPayload();
  uint64_t KeyPath = swift_getKeyPath();
  uint64_t v15 = swift_getKeyPath();
  type metadata accessor for BuyButtonViewModel();
  sub_100248BDC(&qword_100B26C20, (void (*)(uint64_t))type metadata accessor for BuyButtonViewModel);
  swift_retain();
  id v16 = v1;
  *uint64_t v14 = sub_1007F7E60();
  v14[1] = v17;
  sub_100058CB4((uint64_t)v29, (uint64_t)(v14 + 2), &qword_100B26C28);
  sub_100058CB4((uint64_t)v11, (uint64_t)v14 + v12[6], &qword_100B26C10);
  uint64_t v18 = (char *)v14 + v12[7];
  type metadata accessor for CGSize(0);
  uint64_t v25 = 0;
  uint64_t v26 = 0;
  sub_1007F9B20();
  uint64_t v19 = v28;
  *(_OWORD *)uint64_t v18 = v27;
  *((void *)v18 + 2) = v19;
  sub_100058CB4((uint64_t)v8, (uint64_t)v14 + v12[8], (uint64_t *)&unk_100B2CCA0);
  sub_100058CB4((uint64_t)v5, (uint64_t)v14 + v12[9], (uint64_t *)&unk_100B2CCB0);
  uint64_t v20 = (char *)v14 + v12[10];
  *(void *)uint64_t v20 = KeyPath;
  v20[8] = 0;
  uint64_t v21 = (char *)v14 + v12[11];
  *(void *)uint64_t v21 = v15;
  v21[8] = 0;
  sub_100248BDC((unint64_t *)&unk_100B26C30, (void (*)(uint64_t))type metadata accessor for BuyButtonView);
  return sub_1007F9CC0();
}

uint64_t sub_100246DC8(char a1, char a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18)
{
  sub_10007A6D0();
  uint64_t v21 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v22 = swift_allocObject();
  *(void *)(v22 + 16) = v21;
  *(void *)(v22 + 24) = a3;
  *(void *)(v22 + 32) = a4;
  *(void *)(v22 + 4sub_1007E6FC4(2, 18, 1, 0) = a5;
  *(void *)(v22 + 48) = a6;
  *(unsigned char *)(v22 + 56) = a2;
  *(void *)(v22 + 64) = a15;
  *(void *)(v22 + 72) = a16;
  *(void *)(v22 + 8sub_1007E6FC4(2, 18, 1, 0) = a17;
  *(void *)(v22 + 88) = a18;
  *(unsigned char *)(v22 + 96) = a1;
  *(void *)(v22 + 104) = a7;
  *(void *)(v22 + 112) = a11;
  *(void *)(v22 + 12sub_1007E6FC4(2, 18, 1, 0) = a8;
  *(void *)(v22 + 128) = a10;
  *(void *)(v22 + 136) = a12;
  *(void *)(v22 + 144) = a9;
  *(void *)(v22 + 152) = a13;
  *(void *)(v22 + 16sub_1007E6FC4(2, 18, 1, 0) = a14;
  swift_bridgeObjectRetain();
  swift_retain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  sub_1007FE6C0();
  swift_release();

  return swift_release();
}

void sub_100246F98(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, uint64_t a12, uint64_t a13, uint64_t a14, uint64_t a15, uint64_t a16, uint64_t a17, uint64_t a18, uint64_t a19)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v20 = (char *)Strong;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_bridgeObjectRetain();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_bridgeObjectRetain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    swift_retain();
    sub_1007F7860();
    if (a17 && *(double *)(*(void *)&v20[OBJC_IVAR____TtC5Books18BuyButtonPresenter_style] + 56) > 0.0)
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      swift_retain();
      sub_1007F7860();
      swift_getKeyPath();
      swift_getKeyPath();
    }
    else
    {
      swift_getKeyPath();
      swift_getKeyPath();
      swift_retain();
      sub_1007F7860();
      swift_getKeyPath();
      swift_getKeyPath();
    }
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    if (a19) {
      swift_bridgeObjectRetain();
    }
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1007F7860();
  }
}

uint64_t sub_1002475B0(char a1)
{
  id v2 = *(void **)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  uint64_t v3 = v2[12];
  uint64_t v4 = v2[8];
  uint64_t v5 = v2[9];
  uint64_t v14 = v2[11];
  uint64_t v17 = v2[10];
  uint64_t v18 = v2[5];
  uint64_t v19 = v2[3];
  uint64_t v20 = v2[28];
  uint64_t v6 = *(void **)(*(void *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                  + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  uint64_t v7 = v6[4];
  uint64_t v8 = v6[5];
  if (v6[7])
  {
    uint64_t v13 = v6[6];
    uint64_t v15 = v6[7];
  }
  else if (v8)
  {
    swift_bridgeObjectRetain();
    uint64_t v13 = v7;
    uint64_t v15 = v8;
  }
  else
  {
    uint64_t v13 = 0;
    uint64_t v15 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v9 = sub_1003D58A8();
  uint64_t v11 = v10;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100246DC8(a1 & 1, 0, v14, v3, 0, 0, v4, v5, v17, v18, v19, v20, 0, 0, v13, v15, v9, v11);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_1002477F4(char a1)
{
  uint64_t v2 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_style;
  uint64_t v3 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor;
  uint64_t v4 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style) + 136);
  uint64_t v5 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  uint64_t v6 = *(void *)(v5 + 40);
  if (v6)
  {
    uint64_t v7 = *(void *)(v5 + 32);
    sub_10022DF20();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1007FE2B0())
    {
      swift_bridgeObjectRelease();
      uint64_t v27 = v7;
      uint64_t v19 = v6;
    }
    else
    {
      uint64_t v19 = v4;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v19 = *(void *)(*(void *)(v1 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style) + 136);
    swift_bridgeObjectRetain();
  }
  uint64_t v8 = *(void **)(v28 + v2);
  uint64_t v10 = v8[13];
  uint64_t v9 = v8[14];
  uint64_t v11 = v8[15];
  uint64_t v23 = v8[5];
  uint64_t v24 = v8[3];
  uint64_t v25 = v8[28];
  uint64_t v12 = *(void **)(*(void *)(v28 + v3) + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  uint64_t v13 = v12[4];
  uint64_t v14 = v12[5];
  if (v12[7])
  {
    uint64_t v21 = v12[6];
    uint64_t v22 = v12[7];
  }
  else if (v14)
  {
    swift_bridgeObjectRetain();
    uint64_t v21 = v13;
    uint64_t v22 = v14;
  }
  else
  {
    uint64_t v21 = 0;
    uint64_t v22 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_retain();
  swift_retain();
  uint64_t v20 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v15 = sub_1003D58A8();
  uint64_t v17 = v16;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100246DC8(a1 & 1, 1, v27, v19, 0, 0, v10, v9, v20, v23, v24, v25, 0, 0, v21, v22, v15, v17);
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100247A98()
{
  uint64_t v1 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_style;
  uint64_t v2 = *(void *)(v0 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  uint64_t v3 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor;
  uint64_t v5 = *(void *)(v2 + 128);
  uint64_t v4 = *(void *)(v2 + 136);
  uint64_t v6 = *(void *)(*(void *)(v0 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                 + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  uint64_t v7 = *(void *)(v6 + 40);
  if (v7)
  {
    uint64_t v8 = *(void *)(v6 + 32);
    sub_10022DF20();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (sub_1007FE2B0())
    {
      swift_bridgeObjectRelease();
      uint64_t v20 = v8;
      uint64_t v21 = v7;
    }
    else
    {
      uint64_t v20 = v5;
      uint64_t v21 = v4;
      swift_bridgeObjectRelease();
    }
  }
  else
  {
    uint64_t v20 = v5;
    uint64_t v21 = v4;
    swift_bridgeObjectRetain();
  }
  uint64_t v9 = *(void **)(v29 + v1);
  uint64_t v10 = v9[22];
  uint64_t v24 = v9[21];
  uint64_t v12 = v9[18];
  uint64_t v11 = v9[19];
  uint64_t v26 = v9[5];
  uint64_t v27 = v9[3];
  uint64_t v28 = v9[28];
  uint64_t v13 = *(void **)(*(void *)(v29 + v3) + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
  uint64_t v14 = v13[4];
  uint64_t v15 = v13[5];
  if (v13[7])
  {
    uint64_t v23 = v13[6];
    uint64_t v25 = v13[7];
  }
  else if (v15)
  {
    swift_bridgeObjectRetain();
    uint64_t v23 = v14;
    uint64_t v25 = v15;
  }
  else
  {
    uint64_t v23 = 0;
    uint64_t v25 = 0xE000000000000000;
  }
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  uint64_t v22 = v11;
  swift_retain();
  swift_retain();
  swift_retain();
  swift_retain();
  swift_bridgeObjectRetain_n();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  uint64_t v16 = sub_1003D58A8();
  uint64_t v18 = v17;
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100246DC8(0, 2, v24, v10, v20, v21, v12, v22, 0, v26, v27, v28, 0x72616D6B63656863, 0xE90000000000006BLL, v23, v25, v16, v18);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  return swift_bridgeObjectRelease();
}

uint64_t sub_100247D54(char a1, char a2)
{
  uint64_t v3 = OBJC_IVAR____TtC5Books18BuyButtonPresenter_style;
  uint64_t v4 = *(void *)(v2 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_style);
  uint64_t v5 = *(void *)(v4 + 88);
  uint64_t v6 = *(void *)(v4 + 96);
  uint64_t v7 = v2;
  switch(a1)
  {
    case 3:
      goto LABEL_3;
    default:
      char v8 = sub_1007FF470();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_3:
        swift_bridgeObjectRelease();
        uint64_t v9 = *(void **)(v7 + v3);
        if ((*(unsigned char *)(*(void *)(*(void *)(v7 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                                   + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager)
                       + 81) & 1) != 0)
        {
          uint64_t v5 = v9[25];
          uint64_t v10 = v9[26];
        }
        else
        {
          uint64_t v5 = v9[23];
          uint64_t v10 = v9[24];
        }
        uint64_t v24 = v10;
        swift_bridgeObjectRetain();
      }
      else
      {
        uint64_t v11 = *(void *)(*(void *)(v7 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                        + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
        uint64_t v12 = *(void *)(v11 + 40);
        if (v12)
        {
          uint64_t v32 = v5;
          uint64_t v5 = *(void *)(v11 + 32);
          sub_10022DF20();
          swift_bridgeObjectRetain();
          if (sub_1007FE2B0())
          {
            swift_bridgeObjectRelease();
            uint64_t v24 = v12;
          }
          else
          {
            uint64_t v24 = v6;
            swift_bridgeObjectRelease();
            uint64_t v5 = v32;
          }
        }
        else
        {
          uint64_t v24 = v6;
        }
      }
      uint64_t v13 = *(void **)(v7 + v3);
      uint64_t v14 = v13[6];
      uint64_t v15 = v13[2];
      uint64_t v16 = v13[4];
      uint64_t v28 = v13[5];
      uint64_t v29 = v13[3];
      uint64_t v30 = v13[28];
      uint64_t v17 = *(void **)(*(void *)(v7 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                       + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager);
      uint64_t v18 = v17[4];
      uint64_t v19 = v17[5];
      if (v17[7])
      {
        uint64_t v26 = v17[6];
        uint64_t v27 = v17[7];
      }
      else if (v19)
      {
        swift_bridgeObjectRetain();
        uint64_t v26 = v18;
        uint64_t v27 = v19;
      }
      else
      {
        uint64_t v26 = 0;
        uint64_t v27 = 0xE000000000000000;
      }
      swift_bridgeObjectRetain();
      swift_retain();
      swift_retain();
      uint64_t v25 = v14;
      swift_retain();
      swift_retain();
      swift_retain();
      swift_retain();
      swift_bridgeObjectRetain_n();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v20 = sub_1003D58A8();
      uint64_t v22 = v21;
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      sub_100246DC8(a2 & 1, 0, v5, v24, 0, 0, v15, v16, v25, v28, v29, v30, 0, 0, v26, v27, v20, v22);
      swift_bridgeObjectRelease();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_release();
      swift_bridgeObjectRelease();
      return swift_bridgeObjectRelease();
  }
}

uint64_t type metadata accessor for BuyButtonPresenter()
{
  return self;
}

uint64_t sub_100248200(char a1, char a2)
{
  uint64_t v3 = v2;
  sub_10007A6D0();
  uint64_t v6 = swift_allocObject();
  swift_unknownObjectWeakInit();
  uint64_t v7 = swift_allocObject();
  *(void *)(v7 + 16) = v6;
  *(unsigned char *)(v7 + 24) = a1;
  swift_retain();
  sub_1007FE6C0();
  swift_release();
  swift_release();
  switch(a1)
  {
    case 2:
      swift_bridgeObjectRelease();
      goto LABEL_4;
    default:
      char v8 = sub_1007FF470();
      swift_bridgeObjectRelease();
      if (v8)
      {
LABEL_4:
        return sub_1002475B0(a2 & 1);
      }
      else
      {
        switch(a1)
        {
          case 0:
          case 1:
          case 2:
          case 3:
          case 5:
          case 6:
          case 7:
            char v10 = sub_1007FF470();
            swift_bridgeObjectRelease();
            if (v10) {
              goto LABEL_10;
            }
            switch(a1)
            {
              case 0:
              case 1:
              case 2:
              case 3:
              case 4:
              case 6:
              case 7:
                char v11 = sub_1007FF470();
                swift_bridgeObjectRelease();
                if (v11) {
                  goto LABEL_16;
                }
                if ((*(unsigned char *)(*(void *)(*(void *)(v3 + OBJC_IVAR____TtC5Books18BuyButtonPresenter_interactor)
                                           + OBJC_IVAR____TtC5Books19BuyButtonInteractor_dataManager)
                               + 80) & 1) != 0)
                  goto LABEL_10;
                uint64_t result = sub_100247D54(a1, a2 & 1);
                break;
              case 5:
                swift_bridgeObjectRelease();
LABEL_16:
                return sub_100247A98();
              default:
                goto LABEL_23;
            }
            break;
          case 4:
            swift_bridgeObjectRelease();
LABEL_10:
            uint64_t result = sub_1002477F4(a2 & 1);
            break;
          default:
LABEL_23:
            JUMPOUT(0);
        }
      }
      return result;
  }
}

void sub_1002486C0(uint64_t a1, char a2)
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    swift_getKeyPath();
    swift_getKeyPath();
    if (a2 == 6)
    {
      swift_retain_n();
      sub_1007F7860();
      swift_release();
    }
    else
    {
      swift_retain();
      sub_1007F7860();
    }
  }
}

void sub_100248814()
{
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v1 = (void *)Strong;
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1007F7860();
    swift_getKeyPath();
    swift_getKeyPath();
    swift_retain();
    sub_1007F7860();
  }
}

uint64_t sub_100248914@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1007F84A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100248954()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_10024898C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_1002489C4()
{
  sub_1002486C0(*(void *)(v0 + 16), *(unsigned char *)(v0 + 24));
}

uint64_t sub_1002489D0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();

  return swift_deallocObject();
}

void sub_100248A60()
{
  LOBYTE(v1) = *(unsigned char *)(v0 + 96);
  sub_100246F98(*(void *)(v0 + 16), *(void *)(v0 + 24), *(void *)(v0 + 32), *(void *)(v0 + 40), *(void *)(v0 + 48), *(unsigned __int8 *)(v0 + 56), *(void *)(v0 + 64), *(void *)(v0 + 72), *(void *)(v0 + 80), *(void *)(v0 + 88), v1, *(void *)(v0 + 104), *(void *)(v0 + 112), *(void *)(v0 + 120), *(void *)(v0 + 128), *(void *)(v0 + 136), *(void *)(v0 + 144), *(void *)(v0 + 152), *(void *)(v0 + 160));
}

uint64_t sub_100248B54@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1007F8540();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100248B84()
{
  return sub_1007F8550();
}

uint64_t sub_100248BAC@<X0>(unsigned char *a1@<X8>)
{
  uint64_t result = sub_1007F84A0();
  *a1 = result & 1;
  return result;
}

uint64_t sub_100248BDC(unint64_t *a1, void (*a2)(uint64_t))
{
  uint64_t result = *a1;
  if (!result)
  {
    a2(255);
    uint64_t result = swift_getWitnessTable();
    atomic_store(result, a1);
  }
  return result;
}

uint64_t sub_100248C24()
{
  swift_unknownObjectRelease();

  return swift_deallocClassInstance();
}

uint64_t sub_100248C5C(uint64_t a1, uint64_t a2, uint64_t a3)
{
  return _swift_getEnumTagSinglePayloadGeneric(a1, a2, a3, sub_100248C70);
}

uint64_t sub_100248C70(uint64_t a1, uint64_t a2, uint64_t a3)
{
  if (a2 == 0x7FFFFFFF)
  {
    unint64_t v4 = *(void *)(a1 + 24);
    if (v4 >= 0xFFFFFFFF) {
      LODWORD(v4) = -1;
    }
    return (v4 + 1);
  }
  else
  {
    uint64_t v8 = sub_1007F3110();
    uint64_t v9 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 48);
    uint64_t v10 = v8;
    uint64_t v11 = a1 + *(int *)(a3 + 32);
    return v9(v11, a2, v10);
  }
}

uint64_t sub_100248D20(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  return _swift_storeEnumTagSinglePayloadGeneric(a1, a2, a3, a4, sub_100248D34);
}

uint64_t sub_100248D34(uint64_t result, uint64_t a2, int a3, uint64_t a4)
{
  uint64_t v5 = result;
  if (a3 == 0x7FFFFFFF)
  {
    *(void *)(result + 24) = (a2 - 1);
  }
  else
  {
    uint64_t v7 = sub_1007F3110();
    uint64_t v8 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56);
    uint64_t v9 = v7;
    uint64_t v10 = v5 + *(int *)(a4 + 32);
    return v8(v10, a2, a2, v9);
  }
  return result;
}

uint64_t sub_100248DDC()
{
  sub_10005DA74(v0, v0[3]);
  uint64_t result = sub_1007F3760();
  if ((v29 & 1) == 0)
  {
    sub_1000419B0(&v28, (uint64_t)&v25);
    sub_10005DA74(&v25, v26);
    sub_1007F3670();
    char v18 = sub_1007F3290();
    sub_10005DAB8((uint64_t)&v25, (uint64_t)v22);
    if (v18)
    {
      char v19 = 0;
    }
    else
    {
      sub_10005DA74(v22, v23);
      sub_1007F3670();
      char v19 = sub_1007F3290() ^ 1;
    }
    _s5Books15CurrentPageViewVwxx_0((uint64_t)v22);
    _s5Books15CurrentPageViewVwxx_0((uint64_t)&v25);
    return v19 & 1;
  }
  uint64_t v2 = v28;
  uint64_t v3 = _swiftEmptyArrayStorage;
  uint64_t v27 = _swiftEmptyArrayStorage;
  uint64_t v4 = *(void *)(v28 + 16);
  if (!v4)
  {
LABEL_18:
    swift_bridgeObjectRelease();
    uint64_t v20 = v3[2];
    swift_release();
    char v19 = v20 == 0;
    return v19 & 1;
  }
  unint64_t v5 = 0;
  uint64_t v6 = v28 + 32;
  while (v5 < *(void *)(v2 + 16))
  {
    sub_10005DAB8(v6, (uint64_t)&v25);
    sub_10005DA74(&v25, v26);
    sub_1007F3670();
    char v7 = sub_1007F3290();
    sub_10005DAB8((uint64_t)&v25, (uint64_t)v22);
    if (v7)
    {
      _s5Books15CurrentPageViewVwxx_0((uint64_t)v22);
LABEL_10:
      sub_1000419B0(&v25, (uint64_t)v22);
      uint64_t v9 = v27;
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0)
      {
        sub_100404C40(0, v9[2] + 1, 1);
        uint64_t v9 = v27;
      }
      unint64_t v11 = v9[2];
      unint64_t v10 = v9[3];
      if (v11 >= v10 >> 1) {
        sub_100404C40(v10 > 1, v11 + 1, 1);
      }
      uint64_t v12 = v23;
      uint64_t v13 = v24;
      uint64_t v14 = sub_1000782E4((uint64_t)v22, v23);
      __chkstk_darwin(v14);
      uint64_t v16 = (char *)&v22[-1] - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
      (*(void (**)(char *))(v17 + 16))(v16);
      sub_100249A7C(v11, (uint64_t)v16, (uint64_t *)&v27, v12, v13);
      uint64_t result = _s5Books15CurrentPageViewVwxx_0((uint64_t)v22);
      goto LABEL_5;
    }
    sub_10005DA74(v22, v23);
    sub_1007F3670();
    char v8 = sub_1007F3290();
    _s5Books15CurrentPageViewVwxx_0((uint64_t)v22);
    if (v8) {
      goto LABEL_10;
    }
    uint64_t result = _s5Books15CurrentPageViewVwxx_0((uint64_t)&v25);
LABEL_5:
    ++v5;
    v6 += 40;
    if (v4 == v5)
    {
      uint64_t v3 = v27;
      goto LABEL_18;
    }
  }
  __break(1u);
  return result;
}

uint64_t sub_100249100()
{
  v1[42] = v0;
  uint64_t v2 = sub_1007F6BC0();
  v1[43] = v2;
  v1[44] = *(void *)(v2 - 8);
  v1[45] = swift_task_alloc();
  sub_1007FE100();
  v1[46] = sub_1007FE0F0();
  uint64_t v4 = sub_1007FE0A0();
  return _swift_task_switch(sub_1002491F4, v4, v3);
}

uint64_t sub_1002491F4()
{
  uint64_t v1 = *(void *)(v0 + 336);
  swift_release();
  sub_10005DAB8(v1 + 40, v0 + 96);
  sub_100058D18(&qword_100B26E00);
  sub_100058D18(&qword_100B26E08);
  if ((swift_dynamicCast() & 1) == 0)
  {
    *(void *)(v0 + 88) = 0;
    *(_OWORD *)(v0 + 56) = 0u;
    *(_OWORD *)(v0 + 72) = 0u;
    goto LABEL_13;
  }
  if (!*(void *)(v0 + 80))
  {
LABEL_13:
    sub_100249A1C(v0 + 56);
    sub_1007F6B30();
    uint64_t v14 = sub_1007F6BA0();
    os_log_type_t v15 = sub_1007FE3C0();
    if (os_log_type_enabled(v14, v15))
    {
      uint64_t v16 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v16 = 0;
      _os_log_impl((void *)&_mh_execute_header, v14, v15, "Action doesn't have sufficient information to handle action.", v16, 2u);
      swift_slowDealloc();
    }
    uint64_t v18 = *(void *)(v0 + 352);
    uint64_t v17 = *(void *)(v0 + 360);
    uint64_t v19 = *(void *)(v0 + 344);

    (*(void (**)(uint64_t, uint64_t))(v18 + 8))(v17, v19);
    goto LABEL_45;
  }
  uint64_t v2 = *(void **)(v0 + 336);
  uint64_t v45 = (void *)(v0 + 16);
  sub_1000419B0((long long *)(v0 + 56), v0 + 16);
  id v3 = [self hashTableWithOptions:512];
  sub_10005DA74(v2, v2[3]);
  uint64_t v4 = sub_1007F36C0();
  uint64_t v5 = *(void *)(v4 + 16);
  Swift::String v44 = v2;
  if (v5)
  {
    uint64_t v6 = v4 + 32;
    char v7 = _swiftEmptyArrayStorage;
    do
    {
      sub_10005DAB8(v6, v0 + 136);
      sub_10005DA74((void *)(v0 + 136), *(void *)(v0 + 160));
      uint64_t v9 = sub_1007F3660();
      uint64_t v11 = v10;
      _s5Books15CurrentPageViewVwxx_0(v0 + 136);
      if (v11)
      {
        if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
          char v7 = sub_1000577E0(0, v7[2] + 1, 1, v7);
        }
        unint64_t v13 = v7[2];
        unint64_t v12 = v7[3];
        if (v13 >= v12 >> 1) {
          char v7 = sub_1000577E0((void *)(v12 > 1), v13 + 1, 1, v7);
        }
        void v7[2] = v13 + 1;
        char v8 = &v7[2 * v13];
        void v8[4] = v9;
        void v8[5] = v11;
      }
      v6 += 40;
      --v5;
    }
    while (v5);
    swift_bridgeObjectRelease();
    uint64_t v2 = v44;
    uint64_t v20 = v7[2];
    if (!v20) {
      goto LABEL_22;
    }
    goto LABEL_19;
  }
  swift_bridgeObjectRelease();
  char v7 = _swiftEmptyArrayStorage;
  uint64_t v20 = _swiftEmptyArrayStorage[2];
  if (v20)
  {
LABEL_19:
    swift_bridgeObjectRetain();
    uint64_t v21 = v7 + 5;
    do
    {
      swift_bridgeObjectRetain();
      NSString v22 = sub_1007FDC30();
      [v3 addObject:v22];

      swift_bridgeObjectRelease();
      v21 += 2;
      --v20;
    }
    while (v20);
    swift_bridgeObjectRelease();
  }
LABEL_22:
  uint64_t v23 = *(void **)(v0 + 336);
  swift_bridgeObjectRelease();
  sub_10005DA74(v45, *(void *)(v0 + 40));
  sub_10005DA74(v23, v2[3]);
  uint64_t v24 = sub_1007F36C0();
  int64_t v25 = *(void *)(v24 + 16);
  if (v25)
  {
    sub_100057B2C(0, v25, 0);
    uint64_t v26 = v24 + 32;
    do
    {
      sub_10005DAB8(v26, v0 + 176);
      sub_10005DA74((void *)(v0 + 176), *(void *)(v0 + 200));
      uint64_t v27 = sub_1007F3630();
      uint64_t v29 = v28;
      _s5Books15CurrentPageViewVwxx_0(v0 + 176);
      if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
        sub_100057B2C(0, _swiftEmptyArrayStorage[2] + 1, 1);
      }
      unint64_t v31 = _swiftEmptyArrayStorage[2];
      unint64_t v30 = _swiftEmptyArrayStorage[3];
      if (v31 >= v30 >> 1) {
        sub_100057B2C(v30 > 1, v31 + 1, 1);
      }
      _swiftEmptyArrayStorage[2] = v31 + 1;
      uint64_t v32 = &_swiftEmptyArrayStorage[2 * v31];
      void v32[4] = v27;
      void v32[5] = v29;
      v26 += 40;
      --v25;
    }
    while (v25);
    swift_bridgeObjectRelease();
    uint64_t v2 = v44;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10005DA74(*(void **)(v0 + 336), v2[3]);
  uint64_t v33 = sub_1007F36C0();
  uint64_t v34 = *(void *)(v33 + 16);
  if (v34)
  {
    sub_1007FF190();
    uint64_t v35 = v33 + 32;
    do
    {
      sub_10005DAB8(v35, v0 + 216);
      sub_10005DA74((void *)(v0 + 216), *(void *)(v0 + 240));
      [objc_allocWithZone((Class)NSNumber) initWithShort:word_100862AA0[(char)sub_1007F3670()]];
      _s5Books15CurrentPageViewVwxx_0(v0 + 216);
      sub_1007FF170();
      sub_1007FF1A0();
      sub_1007FF1B0();
      sub_1007FF180();
      v35 += 40;
      --v34;
    }
    while (v34);
    swift_bridgeObjectRelease();
    uint64_t v2 = v44;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  sub_10005DA74(*(void **)(v0 + 336), v2[3]);
  uint64_t v36 = sub_1007F36C0();
  uint64_t v37 = *(void *)(v36 + 16);
  if (v37)
  {
    uint64_t v38 = v36 + 32;
    while (1)
    {
      sub_10005DAB8(v38, v0 + 256);
      sub_10005DA74((void *)(v0 + 256), *(void *)(v0 + 280));
      sub_1007F3670();
      char v39 = sub_1007F3290();
      sub_10005DAB8(v0 + 256, v0 + 296);
      if (v39) {
        break;
      }
      sub_10005DA74((void *)(v0 + 296), *(void *)(v0 + 320));
      sub_1007F3670();
      char v40 = sub_1007F3290();
      _s5Books15CurrentPageViewVwxx_0(v0 + 296);
      _s5Books15CurrentPageViewVwxx_0(v0 + 256);
      if (v40) {
        goto LABEL_43;
      }
      v38 += 40;
      if (!--v37) {
        goto LABEL_41;
      }
    }
    _s5Books15CurrentPageViewVwxx_0(v0 + 296);
    _s5Books15CurrentPageViewVwxx_0(v0 + 256);
LABEL_43:
    swift_bridgeObjectRelease();
    int v41 = 1;
  }
  else
  {
LABEL_41:
    swift_bridgeObjectRelease();
    int v41 = 0;
  }
  sub_100513BF8((uint64_t)_swiftEmptyArrayStorage, (uint64_t)_swiftEmptyArrayStorage, (uint64_t)v3, v41);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();

  _s5Books15CurrentPageViewVwxx_0((uint64_t)v45);
LABEL_45:
  swift_task_dealloc();
  unsigned int v42 = *(uint64_t (**)(void))(v0 + 8);
  return v42();
}

uint64_t sub_1002498D0()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 16) = v1;
  void *v1 = v0;
  v1[1] = sub_1000366AC;
  return sub_100249100();
}

uint64_t sub_10024995C@<X0>(long long *a1@<X0>, long long *a2@<X1>, uint64_t a3@<X2>, long long *a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X8>)
{
  sub_1000419B0(a1, a6);
  sub_1000419B0(a2, a6 + 40);
  *(void *)(a6 + 8sub_1007E6FC4(2, 18, 1, 0) = a3;
  sub_1000419B0(a4, a6 + 88);
  uint64_t v11 = a6 + *(int *)(a5 + 32);
  uint64_t v12 = enum case for ContextActionType.addToCollection(_:);
  uint64_t v13 = sub_1007F3110();
  uint64_t v14 = *(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v13 - 8) + 104);

  return v14(v11, v12, v13);
}

uint64_t sub_100249A1C(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(qword_100B26E10);
  (*(void (**)(uint64_t, uint64_t))(*(void *)(v2 - 8) + 8))(a1, v2);
  return a1;
}

uint64_t sub_100249A7C(uint64_t a1, uint64_t a2, uint64_t *a3, uint64_t a4, uint64_t a5)
{
  uint64_t v13 = a4;
  uint64_t v14 = a5;
  uint64_t v9 = sub_100078348((uint64_t *)&v12);
  (*(void (**)(uint64_t *, uint64_t, uint64_t))(*(void *)(a4 - 8) + 32))(v9, a2, a4);
  uint64_t v10 = *a3;
  *(void *)(v10 + 16) = a1 + 1;
  return sub_1000419B0(&v12, v10 + 40 * a1 + 32);
}

uint64_t sub_100249B14()
{
  swift_release();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_100249B44()
{
  sub_100249B14();

  return swift_deallocClassInstance();
}

uint64_t sub_100249B78(char a1)
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v3 = (void *)(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess();
    BOOL v4 = (char *)objc_msgSend(*(id *)(*sub_10005DA74(v3, v3[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player), "state")- 4 < (char *)0xFFFFFFFFFFFFFFFELL;
    sub_10030C458(a1 & 1, v4, 0);
    return swift_unknownObjectRelease();
  }
  return result;
}

void sub_100249C28(char a1)
{
  if (swift_unknownObjectWeakLoadStrong())
  {
    id Strong = (id)swift_unknownObjectWeakLoadStrong();
    if (Strong)
    {
      uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
      if (v2)
      {
        [v2 assetViewController:Strong requestClose:a1 & 1 error:0];
        swift_unknownObjectRelease();
      }
      swift_unknownObjectRelease();
    }
    else
    {
      __break(1u);
    }
  }
}

uint64_t sub_100249D0C()
{
  uint64_t result = swift_unknownObjectWeakLoadStrong();
  if (result)
  {
    uint64_t v1 = (void *)(result + OBJC_IVAR____TtC5Books29AudiobookNowPlayingInteractor_dataManager);
    swift_beginAccess();
    [*(id *)(*sub_10005DA74(v1, v1[3]) + OBJC_IVAR____TtC5Books30AudiobookNowPlayingDataManager_player) removeObserver:];
    return swift_unknownObjectRelease();
  }
  return result;
}

id sub_100249E04()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AudiobookNowPlayingNavigationHandler();
  return [super dealloc];
}

uint64_t type metadata accessor for AudiobookNowPlayingNavigationHandler()
{
  return self;
}

uint64_t sub_100249EA8()
{
  uint64_t v0 = sub_1007F6BC0();
  sub_10002A6A8(v0, qword_100B26EE0);
  sub_10005B838(v0, (uint64_t)qword_100B26EE0);
  return sub_1007F6BB0();
}

void sub_100249F28(uint64_t a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1007FAE10();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  char v7 = (char *)&v20 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)&v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100058D18(&qword_100B27100);
  uint64_t v12 = v11 - 8;
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
  swift_beginAccess();
  uint64_t v16 = (uint64_t)&v14[*(int *)(v12 + 56)];
  sub_10005B044(a1, (uint64_t)v14, &qword_100B270F8);
  sub_10005B044(v15, v16, &qword_100B270F8);
  uint64_t v17 = *(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48);
  if (v17((uint64_t)v14, 1, v4) == 1)
  {
    if (v17(v16, 1, v4) == 1)
    {
      sub_10005AFE8((uint64_t)v14, &qword_100B270F8);
      return;
    }
  }
  else
  {
    sub_10005B044((uint64_t)v14, (uint64_t)v10, &qword_100B270F8);
    if (v17(v16, 1, v4) != 1)
    {
      (*(void (**)(char *, uint64_t, uint64_t))(v5 + 32))(v7, v16, v4);
      sub_100256A44();
      char v18 = sub_1007FDB40();
      uint64_t v19 = *(void (**)(char *, uint64_t))(v5 + 8);
      v19(v7, v4);
      v19(v10, v4);
      sub_10005AFE8((uint64_t)v14, &qword_100B270F8);
      if (v18) {
        return;
      }
      goto LABEL_8;
    }
    (*(void (**)(char *, uint64_t))(v5 + 8))(v10, v4);
  }
  sub_10005AFE8((uint64_t)v14, &qword_100B27100);
LABEL_8:
  sub_10024A20C();
}

void sub_10024A20C()
{
  uint64_t v1 = v0;
  uint64_t v2 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v41 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  char v7 = (char *)&v41 - v6;
  uint64_t v8 = sub_1007FAE10();
  uint64_t v9 = *(void *)(v8 - 8);
  __chkstk_darwin(v8);
  uint64_t v11 = (char *)&v41 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v13 = Strong;
    uint64_t v14 = v1[9];
    uint64_t v15 = (uint64_t)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
    swift_beginAccess();
    uint64_t v47 = v15;
    sub_10005B044(v15, (uint64_t)v7, &qword_100B270F8);
    int v16 = (*(uint64_t (**)(char *, uint64_t, uint64_t))(v9 + 48))(v7, 1, v8);
    os_log_t v48 = v14;
    if (v16 == 1)
    {
      sub_10005AFE8((uint64_t)v7, &qword_100B270F8);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v9 + 32))(v11, v7, v8);
      v50[0] = sub_1007FADD0();
      v50[1] = v21;
      sub_10022DF20();
      char v22 = sub_1007FE2B0();
      swift_bridgeObjectRelease();
      if (v22)
      {
        sub_1007FADF0();
        if (v23 && (swift_getObjectType(), uint64_t v24 = sub_1007FC330(), swift_bridgeObjectRelease(), v24))
        {
          uint64_t v25 = v1[6];
          uint64_t v46 = v1[7];
          uint64_t ObjectType = swift_getObjectType();
          sub_100058D18((uint64_t *)&unk_100B328C0);
          uint64_t v26 = swift_allocObject();
          *(_OWORD *)(v26 + 16) = xmmword_10085CCE0;
          swift_retain();
          uint64_t v45 = v24;
          uint64_t v27 = sub_1007FBDA0();
          uint64_t v42 = v28;
          uint64_t v43 = v27;
          swift_release();
          uint64_t v29 = v42;
          *(void *)(v26 + 32) = v43;
          *(void *)(v26 + 4sub_1007E6FC4(2, 18, 1, 0) = v29;
          *(void *)(v26 + 48) = sub_1007FD4A0();
          *(void *)(v26 + 56) = v30;
          *(void *)(v26 + 64) = sub_1007FD4C0();
          *(void *)(v26 + 72) = v31;
          sub_1007FD190();
          swift_release();
        }
        else
        {
          uint64_t v25 = v1[6];
          uint64_t v46 = v1[7];
          uint64_t v45 = swift_getObjectType();
          uint64_t v43 = sub_1007FADD0();
          uint64_t ObjectType = (uint64_t)v4;
          sub_1007FADC0();
          sub_1007FD1A0();
          uint64_t v4 = (char *)ObjectType;
          swift_bridgeObjectRelease();
        }
        swift_bridgeObjectRelease();
        (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
        uint64_t v32 = v46;
LABEL_19:
        if (qword_100B22500 != -1) {
          swift_once();
        }
        uint64_t v33 = sub_1007F6BC0();
        sub_10005B838(v33, (uint64_t)qword_100B26EE0);
        uint64_t v34 = sub_1007F6BA0();
        os_log_type_t v35 = sub_1007FE3B0();
        if (os_log_type_enabled(v34, v35))
        {
          uint64_t v36 = (uint8_t *)swift_slowAlloc();
          *(_WORD *)uint64_t v36 = 0;
          _os_log_impl((void *)&_mh_execute_header, v34, v35, "Creating state", v36, 2u);
          swift_slowDealloc();
        }

        uint64_t v37 = swift_getObjectType();
        uint64_t v38 = swift_getObjectType();
        sub_10005B044(v47, (uint64_t)v4, &qword_100B270F8);
        char v39 = (void *)v1[5];
        swift_unknownObjectRetain();
        id v40 = v39;
        sub_100255C78((uint64_t)v4, v40, v25, v13, v37, v38, v32, (uint64_t)v48, (uint64_t)v50);

        swift_unknownObjectRelease();
        memcpy(v49, (char *)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state, 0x120uLL);
        memcpy((char *)v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state, v50, 0x120uLL);
        sub_100256A9C((uint64_t)v49);
        return;
      }
      (*(void (**)(char *, uint64_t))(v9 + 8))(v11, v8);
    }
    uint64_t v25 = v1[6];
    uint64_t v32 = v1[7];
    swift_getObjectType();
    sub_1007FD180();
    goto LABEL_19;
  }
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v17 = sub_1007F6BC0();
  sub_10005B838(v17, (uint64_t)qword_100B26EE0);
  os_log_t v48 = (os_log_t)sub_1007F6BA0();
  os_log_type_t v18 = sub_1007FE3C0();
  if (os_log_type_enabled(v48, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v48, v18, "Missing annotation provider service!", v19, 2u);
    swift_slowDealloc();
  }
  os_log_t v20 = v48;
}

uint64_t sub_10024A7E4()
{
  uint64_t v0 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v10 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v3);
  uint64_t v5 = (char *)&v10 - v4;
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    uint64_t v7 = result;
    uint64_t v8 = sub_1007FAE10();
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v5, 1, 1, v8);
    uint64_t v9 = v7 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
    swift_beginAccess();
    sub_10005B044(v9, (uint64_t)v2, &qword_100B270F8);
    swift_beginAccess();
    sub_1002569DC((uint64_t)v5, v9);
    swift_endAccess();
    sub_100249F28((uint64_t)v2);
    sub_10005AFE8((uint64_t)v5, &qword_100B270F8);
    sub_10005AFE8((uint64_t)v2, &qword_100B270F8);
    return swift_release();
  }
  return result;
}

uint64_t sub_10024A974()
{
  sub_10023E454(v0 + 16);
  swift_weakDestroy();

  swift_unknownObjectRelease();
  sub_10023E454(v0 + 64);
  swift_release();
  swift_unknownObjectRelease();
  sub_10005AFE8(v0 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection, &qword_100B270F8);
  memcpy(v2, (const void *)(v0 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state), sizeof(v2));
  sub_100256A9C((uint64_t)v2);
  return v0;
}

uint64_t sub_10024AA0C()
{
  sub_10024A974();

  return swift_deallocClassInstance();
}

uint64_t sub_10024AA64()
{
  return _s26ContentSelectionInteractorCMa();
}

uint64_t _s26ContentSelectionInteractorCMa()
{
  uint64_t result = qword_100B26F30;
  if (!qword_100B26F30) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10024AAB8()
{
  sub_10024AB8C();
  if (v0 <= 0x3F) {
    swift_updateClassMetadata2();
  }
}

void sub_10024AB8C()
{
  if (!qword_100B26F40)
  {
    sub_1007FAE10();
    unint64_t v0 = sub_1007FEDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100B26F40);
    }
  }
}

uint64_t sub_10024ABE4()
{
  return swift_bridgeObjectRetain();
}

uint64_t _s26ContentSelectionInteractorC5StateVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 112))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
  }
  if (*(void *)(a1 + 152))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_release();
  }
  if (*(void *)(a1 + 192))
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    if (*(unsigned __int8 *)(a1 + 256) != 255) {
      sub_10024ACE8();
    }
  }
  swift_bridgeObjectRelease();

  return swift_bridgeObjectRelease();
}

uint64_t sub_10024ACE8()
{
  return swift_bridgeObjectRelease();
}

uint64_t _s26ContentSelectionInteractorC5StateVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 64);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v6)
  {
    uint64_t v7 = *(void *)(a2 + 40);
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v7;
    uint64_t v8 = *(void *)(a2 + 56);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = v8;
    *(void *)(a1 + 64) = v6;
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    uint64_t v9 = *(void *)(a2 + 112);
    if (v9) {
      goto LABEL_3;
    }
  }
  else
  {
    long long v20 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
    *(_OWORD *)(a1 + 48) = v20;
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    uint64_t v9 = *(void *)(a2 + 112);
    if (v9)
    {
LABEL_3:
      uint64_t v10 = *(void *)(a2 + 88);
      *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v10;
      uint64_t v11 = *(void *)(a2 + 104);
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      *(void *)(a1 + 104) = v11;
      *(void *)(a1 + 112) = v9;
      *(unsigned char *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 120);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      swift_bridgeObjectRetain();
      uint64_t v12 = *(void *)(a2 + 152);
      if (v12) {
        goto LABEL_4;
      }
      goto LABEL_9;
    }
  }
  long long v21 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v21;
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
  uint64_t v12 = *(void *)(a2 + 152);
  if (v12)
  {
LABEL_4:
    uint64_t v13 = *(void *)(a2 + 136);
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = v13;
    uint64_t v14 = *(void *)(a2 + 160);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    *(void *)(a1 + 152) = v12;
    *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = v14;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
    uint64_t v15 = *(void *)(a2 + 192);
    if (v15) {
      goto LABEL_5;
    }
LABEL_10:
    long long v23 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v23;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
    long long v24 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v24;
    goto LABEL_12;
  }
LABEL_9:
  long long v22 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v22;
  *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 160);
  uint64_t v15 = *(void *)(a2 + 192);
  if (!v15) {
    goto LABEL_10;
  }
LABEL_5:
  uint64_t v16 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v16;
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  uint64_t v17 = *(void *)(a2 + 208);
  *(void *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v17;
  uint64_t v18 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v18;
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  int v19 = *(unsigned __int8 *)(a2 + 256);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v19 == 255)
  {
    *(_OWORD *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 240);
    *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
  }
  else
  {
    uint64_t v25 = *(void *)(a2 + 240);
    uint64_t v26 = *(void *)(a2 + 248);
    sub_10024ABE4();
    *(void *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = v25;
    *(void *)(a1 + 248) = v26;
    *(unsigned char *)(a1 + 256) = v19 & 1;
  }
LABEL_12:
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 28sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = (_OWORD *)(a1 + 32);
  uint64_t v5 = (_OWORD *)(a2 + 32);
  uint64_t v6 = *(void *)(a2 + 64);
  if (*(void *)(a1 + 64))
  {
    if (v6)
    {
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 40);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = *(void *)(a2 + 64);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    }
    else
    {
      sub_10024B4EC(a1 + 32);
      long long v7 = *(_OWORD *)(a2 + 57);
      long long v8 = *(_OWORD *)(a2 + 48);
      _OWORD *v4 = *v5;
      *(_OWORD *)(a1 + 48) = v8;
      *(_OWORD *)(a1 + 57) = v7;
    }
  }
  else if (v6)
  {
    *(void *)(a1 + 32) = *(void *)(a2 + 32);
    *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 40);
    *(void *)(a1 + 48) = *(void *)(a2 + 48);
    *(void *)(a1 + 56) = *(void *)(a2 + 56);
    *(void *)(a1 + 64) = *(void *)(a2 + 64);
    *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v9 = *v5;
    long long v10 = *(_OWORD *)(a2 + 48);
    *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
    _OWORD *v4 = v9;
    *(_OWORD *)(a1 + 48) = v10;
  }
  uint64_t v11 = (_OWORD *)(a1 + 80);
  uint64_t v12 = (_OWORD *)(a2 + 80);
  uint64_t v13 = *(void *)(a2 + 112);
  if (*(void *)(a1 + 112))
  {
    if (v13)
    {
      *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = *(void *)(a2 + 88);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = *(void *)(a2 + 112);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 120);
    }
    else
    {
      sub_10024B51C(a1 + 80);
      long long v14 = *(_OWORD *)(a2 + 105);
      long long v15 = *(_OWORD *)(a2 + 96);
      *uint64_t v11 = *v12;
      *(_OWORD *)(a1 + 96) = v15;
      *(_OWORD *)(a1 + 105) = v14;
    }
  }
  else if (v13)
  {
    *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 80);
    *(void *)(a1 + 88) = *(void *)(a2 + 88);
    *(void *)(a1 + 96) = *(void *)(a2 + 96);
    *(void *)(a1 + 104) = *(void *)(a2 + 104);
    *(void *)(a1 + 112) = *(void *)(a2 + 112);
    *(unsigned char *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 120);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
  }
  else
  {
    long long v16 = *v12;
    long long v17 = *(_OWORD *)(a2 + 96);
    *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
    *uint64_t v11 = v16;
    *(_OWORD *)(a1 + 96) = v17;
  }
  uint64_t v18 = (_OWORD *)(a1 + 128);
  int v19 = (_OWORD *)(a2 + 128);
  uint64_t v20 = *(void *)(a2 + 152);
  if (*(void *)(a1 + 152))
  {
    if (v20)
    {
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = *(void *)(a2 + 136);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      uint64_t v21 = *(void *)(a2 + 160);
      *(void *)(a1 + 152) = *(void *)(a2 + 152);
      *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = v21;
      swift_retain();
      swift_release();
    }
    else
    {
      sub_10024B54C(a1 + 128);
      uint64_t v23 = *(void *)(a2 + 160);
      long long v24 = *(_OWORD *)(a2 + 144);
      _OWORD *v18 = *v19;
      *(_OWORD *)(a1 + 144) = v24;
      *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = v23;
    }
  }
  else if (v20)
  {
    *(void *)(a1 + 128) = *(void *)(a2 + 128);
    *(void *)(a1 + 136) = *(void *)(a2 + 136);
    *(void *)(a1 + 144) = *(void *)(a2 + 144);
    uint64_t v22 = *(void *)(a2 + 160);
    *(void *)(a1 + 152) = *(void *)(a2 + 152);
    *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = v22;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_retain();
  }
  else
  {
    long long v25 = *v19;
    long long v26 = *(_OWORD *)(a2 + 144);
    *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 160);
    _OWORD *v18 = v25;
    *(_OWORD *)(a1 + 144) = v26;
  }
  uint64_t v27 = (_OWORD *)(a1 + 168);
  uint64_t v28 = (_OWORD *)(a2 + 168);
  uint64_t v29 = *(void *)(a2 + 192);
  if (*(void *)(a1 + 192))
  {
    if (v29)
    {
      *(void *)(a1 + 168) = *(void *)(a2 + 168);
      *(void *)(a1 + 176) = *(void *)(a2 + 176);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 184) = *(void *)(a2 + 184);
      *(void *)(a1 + 192) = *(void *)(a2 + 192);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 200);
      *(void *)(a1 + 208) = *(void *)(a2 + 208);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(void *)(a1 + 216) = *(void *)(a2 + 216);
      *(void *)(a1 + 224) = *(void *)(a2 + 224);
      swift_bridgeObjectRetain();
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
      uint64_t v30 = (long long *)(a1 + 240);
      uint64_t v31 = (long long *)(a2 + 240);
      uint64_t v32 = (unsigned char *)(a1 + 256);
      int v33 = *(unsigned __int8 *)(a2 + 256);
      if (*(unsigned __int8 *)(a1 + 256) == 255)
      {
        if (v33 == 255)
        {
          long long v41 = *v31;
          *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
          *uint64_t v30 = v41;
        }
        else
        {
          char v51 = v33 & 1;
          uint64_t v52 = *(void *)(a2 + 240);
          uint64_t v53 = *(void *)(a2 + 248);
          sub_10024ABE4();
          *(void *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = v52;
          *(void *)(a1 + 248) = v53;
          *uint64_t v32 = v51;
        }
      }
      else if (v33 == 255)
      {
        sub_10024B57C(a1 + 240);
        char v34 = *(unsigned char *)(a2 + 256);
        *uint64_t v30 = *v31;
        *(unsigned char *)(a1 + 256) = v34;
      }
      else
      {
        char v46 = v33 & 1;
        uint64_t v47 = *(void *)(a2 + 240);
        uint64_t v48 = *(void *)(a2 + 248);
        sub_10024ABE4();
        *(void *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = v47;
        *(void *)(a1 + 248) = v48;
        *uint64_t v32 = v46;
        sub_10024ACE8();
      }
    }
    else
    {
      sub_10024B5B0(a1 + 168);
      long long v37 = *(_OWORD *)(a2 + 184);
      _OWORD *v27 = *v28;
      *(_OWORD *)(a1 + 184) = v37;
      long long v39 = *(_OWORD *)(a2 + 216);
      long long v38 = *(_OWORD *)(a2 + 232);
      long long v40 = *(_OWORD *)(a2 + 200);
      *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
      *(_OWORD *)(a1 + 216) = v39;
      *(_OWORD *)(a1 + 232) = v38;
      *(_OWORD *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = v40;
    }
  }
  else if (v29)
  {
    *(void *)(a1 + 168) = *(void *)(a2 + 168);
    *(void *)(a1 + 176) = *(void *)(a2 + 176);
    *(void *)(a1 + 184) = *(void *)(a2 + 184);
    *(void *)(a1 + 192) = *(void *)(a2 + 192);
    *(void *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 200);
    *(void *)(a1 + 208) = *(void *)(a2 + 208);
    *(void *)(a1 + 216) = *(void *)(a2 + 216);
    *(void *)(a1 + 224) = *(void *)(a2 + 224);
    *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
    int v35 = *(unsigned __int8 *)(a2 + 256);
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    if (v35 == 255)
    {
      long long v36 = *(_OWORD *)(a2 + 240);
      *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
      *(_OWORD *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = v36;
    }
    else
    {
      uint64_t v49 = *(void *)(a2 + 240);
      uint64_t v50 = *(void *)(a2 + 248);
      sub_10024ABE4();
      *(void *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = v49;
      *(void *)(a1 + 248) = v50;
      *(unsigned char *)(a1 + 256) = v35 & 1;
    }
  }
  else
  {
    long long v42 = *(_OWORD *)(a2 + 184);
    _OWORD *v27 = *v28;
    *(_OWORD *)(a1 + 184) = v42;
    long long v43 = *(_OWORD *)(a2 + 200);
    long long v44 = *(_OWORD *)(a2 + 216);
    long long v45 = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
    *(_OWORD *)(a1 + 216) = v44;
    *(_OWORD *)(a1 + 232) = v45;
    *(_OWORD *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = v43;
  }
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 28sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 280);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_10024B4EC(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024B51C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024B54C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024B57C(uint64_t a1)
{
  return a1;
}

uint64_t sub_10024B5B0(uint64_t a1)
{
  return a1;
}

void *_s26ContentSelectionInteractorC5StateVwtk(void *a1, const void *a2)
{
  return memcpy(a1, a2, 0x120uLL);
}

uint64_t _s26ContentSelectionInteractorC5StateVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  if (*(void *)(a1 + 64))
  {
    if (*(void *)(a2 + 64))
    {
      uint64_t v6 = *(void *)(a2 + 40);
      *(void *)(a1 + 32) = *(void *)(a2 + 32);
      *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v6;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 48) = *(void *)(a2 + 48);
      swift_bridgeObjectRelease();
      uint64_t v7 = *(void *)(a2 + 64);
      *(void *)(a1 + 56) = *(void *)(a2 + 56);
      *(void *)(a1 + 64) = v7;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 72) = *(unsigned char *)(a2 + 72);
      goto LABEL_6;
    }
    sub_10024B4EC(a1 + 32);
  }
  long long v8 = *(_OWORD *)(a2 + 48);
  *(_OWORD *)(a1 + 32) = *(_OWORD *)(a2 + 32);
  *(_OWORD *)(a1 + 48) = v8;
  *(_OWORD *)(a1 + 57) = *(_OWORD *)(a2 + 57);
LABEL_6:
  if (*(void *)(a1 + 112))
  {
    if (*(void *)(a2 + 112))
    {
      uint64_t v9 = *(void *)(a2 + 88);
      *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 80);
      *(void *)(a1 + 88) = v9;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 96) = *(void *)(a2 + 96);
      swift_bridgeObjectRelease();
      uint64_t v10 = *(void *)(a2 + 112);
      *(void *)(a1 + 104) = *(void *)(a2 + 104);
      *(void *)(a1 + 112) = v10;
      swift_bridgeObjectRelease();
      *(unsigned char *)(a1 + 12sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 120);
      goto LABEL_11;
    }
    sub_10024B51C(a1 + 80);
  }
  long long v11 = *(_OWORD *)(a2 + 96);
  *(_OWORD *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 80);
  *(_OWORD *)(a1 + 96) = v11;
  *(_OWORD *)(a1 + 105) = *(_OWORD *)(a2 + 105);
LABEL_11:
  if (*(void *)(a1 + 152))
  {
    if (*(void *)(a2 + 152))
    {
      uint64_t v12 = *(void *)(a2 + 136);
      *(void *)(a1 + 128) = *(void *)(a2 + 128);
      *(void *)(a1 + 136) = v12;
      swift_bridgeObjectRelease();
      *(void *)(a1 + 144) = *(void *)(a2 + 144);
      swift_bridgeObjectRelease();
      *(_OWORD *)(a1 + 152) = *(_OWORD *)(a2 + 152);
      swift_release();
      goto LABEL_16;
    }
    sub_10024B54C(a1 + 128);
  }
  long long v13 = *(_OWORD *)(a2 + 144);
  *(_OWORD *)(a1 + 128) = *(_OWORD *)(a2 + 128);
  *(_OWORD *)(a1 + 144) = v13;
  *(void *)(a1 + 16sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 160);
LABEL_16:
  if (!*(void *)(a1 + 192))
  {
LABEL_23:
    long long v20 = *(_OWORD *)(a2 + 216);
    *(_OWORD *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(a2 + 200);
    *(_OWORD *)(a1 + 216) = v20;
    *(_OWORD *)(a1 + 232) = *(_OWORD *)(a2 + 232);
    *(_OWORD *)(a1 + 241) = *(_OWORD *)(a2 + 241);
    long long v21 = *(_OWORD *)(a2 + 184);
    *(_OWORD *)(a1 + 168) = *(_OWORD *)(a2 + 168);
    *(_OWORD *)(a1 + 184) = v21;
    goto LABEL_24;
  }
  if (!*(void *)(a2 + 192))
  {
    sub_10024B5B0(a1 + 168);
    goto LABEL_23;
  }
  uint64_t v14 = *(void *)(a2 + 176);
  *(void *)(a1 + 168) = *(void *)(a2 + 168);
  *(void *)(a1 + 176) = v14;
  swift_bridgeObjectRelease();
  uint64_t v15 = *(void *)(a2 + 192);
  *(void *)(a1 + 184) = *(void *)(a2 + 184);
  *(void *)(a1 + 192) = v15;
  swift_bridgeObjectRelease();
  uint64_t v16 = *(void *)(a2 + 208);
  *(void *)(a1 + 20sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 200);
  *(void *)(a1 + 208) = v16;
  swift_bridgeObjectRelease();
  uint64_t v17 = *(void *)(a2 + 224);
  *(void *)(a1 + 216) = *(void *)(a2 + 216);
  *(void *)(a1 + 224) = v17;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 232) = *(unsigned char *)(a2 + 232);
  uint64_t v18 = (_OWORD *)(a2 + 240);
  if (*(unsigned __int8 *)(a1 + 256) != 255)
  {
    int v19 = *(unsigned __int8 *)(a2 + 256);
    if (v19 != 255)
    {
      *(_OWORD *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = *v18;
      *(unsigned char *)(a1 + 256) = v19 & 1;
      sub_10024ACE8();
      goto LABEL_24;
    }
    sub_10024B57C(a1 + 240);
  }
  *(_OWORD *)(a1 + 24sub_1007E6FC4(2, 18, 1, 0) = *v18;
  *(unsigned char *)(a1 + 256) = *(unsigned char *)(a2 + 256);
LABEL_24:
  *(void *)(a1 + 264) = *(void *)(a2 + 264);
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 272) = *(unsigned char *)(a2 + 272);
  *(void *)(a1 + 28sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 280);
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateVwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0x7FFFFFFF && *(unsigned char *)(a1 + 288)) {
    return (*(_DWORD *)a1 + 0x7FFFFFFF);
  }
  unint64_t v3 = *(void *)(a1 + 8);
  if (v3 >= 0xFFFFFFFF) {
    LODWORD(v3) = -1;
  }
  int v4 = v3 - 1;
  if (v4 < 0) {
    int v4 = -1;
  }
  return (v4 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateVwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0x7FFFFFFE)
  {
    *(void *)(result + 28sub_1007E6FC4(2, 18, 1, 0) = 0;
    *(_OWORD *)(result + 248) = 0u;
    *(_OWORD *)(result + 232) = 0u;
    *(_OWORD *)(result + 216) = 0u;
    *(_OWORD *)(result + 20sub_1007E6FC4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 184) = 0u;
    *(_OWORD *)(result + 168) = 0u;
    *(_OWORD *)(result + 152) = 0u;
    *(_OWORD *)(result + 136) = 0u;
    *(_OWORD *)(result + 12sub_1007E6FC4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 104) = 0u;
    *(_OWORD *)(result + 88) = 0u;
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 264) = 0u;
    *(void *)uint64_t result = a2 - 0x7FFFFFFF;
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 288) = 1;
    }
  }
  else
  {
    if (a3 >= 0x7FFFFFFF) {
      *(unsigned char *)(result + 288) = 0;
    }
    if (a2) {
      *(void *)(result + 8) = a2;
    }
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateVMa()
{
  return &_s26ContentSelectionInteractorC5StateVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwxx(uint64_t a1)
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t result = swift_bridgeObjectRelease();
  if (*(unsigned __int8 *)(a1 + 88) != 255)
  {
    return sub_10024ACE8();
  }
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v6;
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  int v8 = *(unsigned __int8 *)(a2 + 88);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  if (v8 == 255)
  {
    *(_OWORD *)(a1 + 72) = *(_OWORD *)(a2 + 72);
    *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  }
  else
  {
    uint64_t v10 = *(void *)(a2 + 72);
    uint64_t v9 = *(void *)(a2 + 80);
    sub_10024ABE4();
    *(void *)(a1 + 72) = v10;
    *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v9;
    *(unsigned char *)(a1 + 88) = v8 & 1;
  }
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(void *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = *(void *)(a2 + 56);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  uint64_t v4 = (long long *)(a1 + 72);
  uint64_t v5 = (long long *)(a2 + 72);
  int v6 = *(unsigned __int8 *)(a2 + 88);
  if (*(unsigned __int8 *)(a1 + 88) == 255)
  {
    if (v6 == 255)
    {
      long long v8 = *v5;
      *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
      long long *v4 = v8;
    }
    else
    {
      char v12 = v6 & 1;
      uint64_t v14 = *(void *)(a2 + 72);
      uint64_t v13 = *(void *)(a2 + 80);
      sub_10024ABE4();
      *(void *)(a1 + 72) = v14;
      *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v13;
      *(unsigned char *)(a1 + 88) = v12;
    }
  }
  else if (v6 == 255)
  {
    sub_10024B57C(a1 + 72);
    char v7 = *(unsigned char *)(a2 + 88);
    long long *v4 = *v5;
    *(unsigned char *)(a1 + 88) = v7;
  }
  else
  {
    char v9 = v6 & 1;
    uint64_t v11 = *(void *)(a2 + 72);
    uint64_t v10 = *(void *)(a2 + 80);
    sub_10024ABE4();
    *(void *)(a1 + 72) = v11;
    *(void *)(a1 + 8sub_1007E6FC4(2, 18, 1, 0) = v10;
    *(unsigned char *)(a1 + 88) = v9;
    sub_10024ACE8();
  }
  return a1;
}

__n128 _s26ContentSelectionInteractorC5StateV12AddHighlightVwtk(uint64_t a1, uint64_t a2)
{
  long long v2 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(_OWORD *)(a1 + 16) = v2;
  __n128 result = *(__n128 *)(a2 + 32);
  long long v4 = *(_OWORD *)(a2 + 48);
  long long v5 = *(_OWORD *)(a2 + 64);
  *(_OWORD *)(a1 + 73) = *(_OWORD *)(a2 + 73);
  *(_OWORD *)(a1 + 48) = v4;
  *(_OWORD *)(a1 + 64) = v5;
  *(__n128 *)(a1 + 32) = result;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwta(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v4;
  swift_bridgeObjectRelease();
  uint64_t v5 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v5;
  swift_bridgeObjectRelease();
  uint64_t v6 = *(void *)(a2 + 40);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(void *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = v6;
  swift_bridgeObjectRelease();
  uint64_t v7 = *(void *)(a2 + 56);
  *(void *)(a1 + 48) = *(void *)(a2 + 48);
  *(void *)(a1 + 56) = v7;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 64) = *(unsigned char *)(a2 + 64);
  long long v8 = (_OWORD *)(a2 + 72);
  if (*(unsigned __int8 *)(a1 + 88) != 255)
  {
    int v9 = *(unsigned __int8 *)(a2 + 88);
    if (v9 != 255)
    {
      *(_OWORD *)(a1 + 72) = *v8;
      *(unsigned char *)(a1 + 88) = v9 & 1;
      sub_10024ACE8();
      return a1;
    }
    sub_10024B57C(a1 + 72);
  }
  *(_OWORD *)(a1 + 72) = *v8;
  *(unsigned char *)(a1 + 88) = *(unsigned char *)(a2 + 88);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 89)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 72) = 0u;
    *(_OWORD *)(result + 56) = 0u;
    *(_OWORD *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 88) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 89) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 89) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV12AddHighlightVMa()
{
  return &_s26ContentSelectionInteractorC5StateV12AddHighlightVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwxx()
{
  return sub_10024ACE8();
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwCP_0(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10024ABE4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwca(uint64_t a1, uint64_t *a2)
{
  uint64_t v3 = *a2;
  uint64_t v4 = a2[1];
  char v5 = *((unsigned char *)a2 + 16);
  sub_10024ABE4();
  *(void *)a1 = v3;
  *(void *)(a1 + 8) = v4;
  *(unsigned char *)(a1 + 16) = v5;
  sub_10024ACE8();
  return a1;
}

__n128 _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwtk(__n128 *a1, __n128 *a2)
{
  __n128 result = *a2;
  a1[1].n128_u8[0] = a2[1].n128_u8[0];
  *a1 = result;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwta(uint64_t a1, uint64_t a2)
{
  char v3 = *(unsigned char *)(a2 + 16);
  *(_OWORD *)a1 = *(_OWORD *)a2;
  *(unsigned char *)(a1 + 16) = v3;
  sub_10024ACE8();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwet(uint64_t a1, unsigned int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 >= 0xFF && *(unsigned char *)(a1 + 17)) {
    return (*(_DWORD *)a1 + 255);
  }
  unsigned int v3 = *(unsigned __int8 *)(a1 + 16);
  if (v3 <= 1) {
    int v4 = -1;
  }
  else {
    int v4 = v3 ^ 0xFF;
  }
  return (v4 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOwst(uint64_t result, unsigned int a2, unsigned int a3)
{
  if (a2 > 0xFE)
  {
    *(unsigned char *)(result + 16) = 0;
    *(void *)__n128 result = a2 - 255;
    *(void *)(result + 8) = 0;
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 1;
    }
  }
  else
  {
    if (a3 >= 0xFF) {
      *(unsigned char *)(result + 17) = 0;
    }
    if (a2) {
      *(unsigned char *)(result + 16) = -(char)a2;
    }
  }
  return result;
}

uint64_t sub_10024BF6C(uint64_t a1)
{
  return *(unsigned __int8 *)(a1 + 16);
}

uint64_t sub_10024BF74(uint64_t result, char a2)
{
  *(unsigned char *)(result + 16) = a2 & 1;
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionOMa()
{
  return &_s26ContentSelectionInteractorC5StateV12AddHighlightV17RequiredSelectionON;
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwxx(uint64_t a1, uint64_t a2)
{
  return sub_10024C1E4(a1, a2, (uint64_t (*)(uint64_t))&_swift_release);
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwcp(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 32);
  *(_OWORD *)(a1 + 16) = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_retain();
  return a1;
}

void *_s26ContentSelectionInteractorC5StateV5ShareVwca(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  a1[2] = a2[2];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  uint64_t v4 = a2[4];
  a1[3] = a2[3];
  a1[4] = v4;
  swift_retain();
  swift_release();
  return a1;
}

__n128 initializeWithTake for BooksAssetAppIntentsPerformer(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 24) = *(_OWORD *)(a2 + 24);
  swift_release();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwet(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 40)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 24);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV5ShareVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 8) = 0u;
    *(_OWORD *)(result + 24) = 0u;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 24) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV5ShareVMa()
{
  return &_s26ContentSelectionInteractorC5StateV5ShareVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwxx(uint64_t a1, uint64_t a2)
{
  return sub_10024C1E4(a1, a2, (uint64_t (*)(uint64_t))&_swift_bridgeObjectRelease);
}

__n128 _s26ContentSelectionInteractorC5StateV6LookupVwtk(uint64_t a1, uint64_t a2)
{
  __n128 result = *(__n128 *)a2;
  long long v3 = *(_OWORD *)(a2 + 16);
  *(_OWORD *)(a1 + 25) = *(_OWORD *)(a2 + 25);
  *(__n128 *)a1 = result;
  *(_OWORD *)(a1 + 16) = v3;
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV9TranslateVMa()
{
  return &_s26ContentSelectionInteractorC5StateV9TranslateVN;
}

uint64_t sub_10024C1E4(uint64_t a1, uint64_t a2, uint64_t (*a3)(uint64_t))
{
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a1 + 32);

  return a3(v4);
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwcp_0(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *(void *)(a2 + 8);
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = v3;
  uint64_t v4 = *(void *)(a2 + 24);
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  *(void *)(a1 + 24) = v4;
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwca_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(void *)(a1 + 8) = *(void *)(a2 + 8);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 16) = *(void *)(a2 + 16);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = *(void *)(a2 + 32);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwta_0(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(_OWORD *)(a1 + 8) = *(_OWORD *)(a2 + 8);
  swift_bridgeObjectRelease();
  uint64_t v4 = *(void *)(a2 + 32);
  *(void *)(a1 + 24) = *(void *)(a2 + 24);
  *(void *)(a1 + 32) = v4;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 4sub_1007E6FC4(2, 18, 1, 0) = *(unsigned char *)(a2 + 40);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV6LookupVwet_0(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 41)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 32);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t sub_10024C3D4(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(_OWORD *)(result + 24) = 0u;
    *(_OWORD *)(result + 8) = 0u;
    *(unsigned char *)(result + 4sub_1007E6FC4(2, 18, 1, 0) = 0;
    *(void *)__n128 result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 41) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 32) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 41) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV6LookupVMa()
{
  return &_s26ContentSelectionInteractorC5StateV6LookupVN;
}

uint64_t sub_10024C430()
{
  v1[10] = v0;
  sub_100058D18((uint64_t *)&unk_100B38D00);
  v1[11] = swift_task_alloc();
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B27070);
  v1[12] = v2;
  v1[13] = *(void *)(v2 - 8);
  v1[14] = swift_task_alloc();
  sub_100058D18((uint64_t *)&unk_100B27090);
  v1[15] = swift_task_alloc();
  uint64_t v3 = sub_100058D18(&qword_100B38D10);
  v1[16] = v3;
  v1[17] = *(void *)(v3 - 8);
  v1[18] = swift_task_alloc();
  sub_100058D18(&qword_100B270F8);
  v1[19] = swift_task_alloc();
  sub_1007FE100();
  v1[20] = sub_1007FE0F0();
  uint64_t v5 = sub_1007FE0A0();
  v1[21] = v5;
  v1[22] = v4;
  return _swift_task_switch(sub_10024C618, v5, v4);
}

uint64_t sub_10024C618()
{
  uint64_t Strong = swift_weakLoadStrong();
  v0[23] = Strong;
  if (!Strong) {
    goto LABEL_10;
  }
  uint64_t v2 = v0[19];
  sub_1007FABE0();
  uint64_t v3 = sub_1007FAE10();
  uint64_t v4 = *(void *)(v3 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) == 1)
  {
    uint64_t v5 = v0[19];
    swift_release();
    swift_release();
    sub_10005AFE8(v5, &qword_100B270F8);
LABEL_11:
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v11 = (uint64_t (*)(__n128, __n128))v0[1];
    v12.n128_u64[0] = 0;
    v13.n128_u64[0] = 0;
    return v11(v12, v13);
  }
  uint64_t v6 = v0[19];
  uint64_t v7 = sub_1007FADC0();
  uint64_t v9 = v8;
  v0[24] = v8;
  (*(void (**)(uint64_t, uint64_t))(v4 + 8))(v6, v3);
  if (!v9)
  {
    swift_release();
LABEL_10:
    swift_release();
    goto LABEL_11;
  }
  uint64_t v10 = (void *)swift_task_alloc();
  v0[25] = v10;
  *uint64_t v10 = v0;
  v10[1] = sub_10024C830;
  return BookContentModule.rects(forCFI:clippedToBounds:)(v7, v9, 1);
}

uint64_t sub_10024C830(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 208) = a1;
  swift_task_dealloc();
  swift_bridgeObjectRelease();
  uint64_t v3 = *(void *)(v2 + 176);
  uint64_t v4 = *(void *)(v2 + 168);
  return _swift_task_switch(sub_10024C97C, v4, v3);
}

uint64_t sub_10024C97C()
{
  uint64_t v1 = v0[26];
  swift_release();
  if (!v1)
  {
    swift_release();
LABEL_11:
    unint64_t v18 = 0;
    unint64_t v19 = 0;
    goto LABEL_12;
  }
  uint64_t v2 = v0[26];
  if (*(void *)(v2 + 16))
  {
    (*(void (**)(void, unint64_t, void))(v0[17] + 16))(v0[15], v2 + ((*(unsigned __int8 *)(v0[17] + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v0[17] + 80)), v0[16]);
    uint64_t v3 = 0;
  }
  else
  {
    uint64_t v3 = 1;
  }
  uint64_t v4 = v0[16];
  uint64_t v5 = v0[17];
  uint64_t v6 = v0[15];
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v5 + 56))(v6, v3, 1, v4);
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v5 + 48))(v6, 1, v4) == 1)
  {
    uint64_t v7 = v0[15];
    swift_release();
    uint64_t v8 = (uint64_t *)&unk_100B27090;
    uint64_t v9 = v7;
LABEL_10:
    sub_10005AFE8(v9, v8);
    goto LABEL_11;
  }
  uint64_t v10 = v0[12];
  uint64_t v11 = v0[13];
  uint64_t v12 = v0[11];
  (*(void (**)(void, void, void))(v0[17] + 32))(v0[18], v0[15], v0[16]);
  sub_1007FAA60();
  int v13 = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(v11 + 48))(v12, 1, v10);
  uint64_t v15 = v0[17];
  uint64_t v14 = v0[18];
  uint64_t v16 = v0[16];
  if (v13 == 1)
  {
    uint64_t v17 = v0[11];
    (*(void (**)(void, void))(v15 + 8))(v0[18], v0[16]);
    swift_release();
    uint64_t v8 = (uint64_t *)&unk_100B38D00;
    uint64_t v9 = v17;
    goto LABEL_10;
  }
  uint64_t v25 = v0[13];
  uint64_t v24 = v0[14];
  uint64_t v26 = v0[12];
  (*(void (**)(uint64_t, void, uint64_t))(v25 + 32))(v24, v0[11], v26);
  sub_1007FB960();
  unint64_t v18 = v0[2];
  sub_1007FB960();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v25 + 8))(v24, v26);
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  unint64_t v19 = v0[7];
LABEL_12:
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  long long v20 = (uint64_t (*)(__n128, __n128))v0[1];
  v21.n128_u64[0] = v18;
  v22.n128_u64[0] = v19;
  return v20(v21, v22);
}

void sub_10024CC2C()
{
  uint64_t v0 = sub_1007F6A10();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = &v12[-((v2 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10025608C(v12);
  sub_100058CB4((uint64_t)&v13, (uint64_t)v14, &qword_100B27000);
  sub_100058CB4((uint64_t)v14, (uint64_t)v15, &qword_100B27000);
  if (v15[1])
  {
    if (swift_unknownObjectWeakLoadStrong())
    {
      uint64_t v4 = self;
      sub_10006B114((uint64_t)v14);
      id v5 = [v4 generalPasteboard];
      NSString v6 = sub_1007FDC30();
      sub_1007F69E0();
      sub_1007F69D0();
      (*(void (**)(unsigned char *, uint64_t))(v1 + 8))(v3, v0);
      NSString v7 = sub_1007FDC30();
      swift_bridgeObjectRelease();
      [v5 setValue:v6 forPasteboardType:v7];
      swift_unknownObjectRelease();

      sub_100069708((uint64_t)v14);
    }
  }
  else
  {
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1007F6BC0();
    sub_10005B838(v8, (uint64_t)qword_100B26EE0);
    uint64_t v9 = sub_1007F6BA0();
    os_log_type_t v10 = sub_1007FE3C0();
    if (os_log_type_enabled(v9, v10))
    {
      uint64_t v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unable to perform copy. Missing state", v11, 2u);
      swift_slowDealloc();
    }
  }
}

uint64_t sub_10024CEB4()
{
  v1[68] = v0;
  uint64_t v2 = sub_1007FBA40();
  v1[69] = v2;
  v1[70] = *(void *)(v2 - 8);
  v1[71] = swift_task_alloc();
  uint64_t v3 = *(void *)(sub_100058D18((uint64_t *)&unk_100B27060) - 8);
  v1[72] = v3;
  v1[73] = *(void *)(v3 + 64);
  v1[74] = swift_task_alloc();
  v1[75] = swift_task_alloc();
  sub_100058D18((uint64_t *)&unk_100B38D00);
  v1[76] = swift_task_alloc();
  uint64_t v4 = sub_100058D18((uint64_t *)&unk_100B27070);
  v1[77] = v4;
  v1[78] = *(void *)(v4 - 8);
  v1[79] = swift_task_alloc();
  v1[80] = sub_1007FE100();
  v1[81] = sub_1007FE0F0();
  uint64_t v6 = sub_1007FE0A0();
  v1[82] = v6;
  v1[83] = v5;
  return _swift_task_switch(sub_10024D0B4, v6, v5);
}

uint64_t sub_10024D0B4()
{
  sub_10025608C((void *)(v0 + 16));
  sub_100058CB4(v0 + 48, v0 + 304, (uint64_t *)&unk_100B45190);
  sub_100058CB4(v0 + 304, v0 + 352, (uint64_t *)&unk_100B45190);
  if (*(void *)(v0 + 384))
  {
    long long v1 = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 40sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 416) = v1;
    *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 377);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 672) = Strong;
    if (Strong)
    {
      uint64_t v3 = swift_weakLoadStrong();
      *(void *)(v0 + 68sub_1007E6FC4(2, 18, 1, 0) = v3;
      if (v3)
      {
        uint64_t v4 = *(void *)(v0 + 408);
        uint64_t v5 = *(void *)(v0 + 416);
        *(void *)(v0 + 688) = v5;
        uint64_t v6 = *(void *)(v0 + 400);
        *(void *)(v0 + 696) = v6;
        *(void *)(v0 + 704) = v4;
        sub_1002565FC((uint64_t *)(v0 + 304));
        NSString v7 = (void *)swift_task_alloc();
        *(void *)(v0 + 712) = v7;
        void *v7 = v0;
        v7[1] = sub_10024D424;
        uint64_t v8 = *(void *)(v0 + 608);
        return sub_10024DB30(v8, v5, v6, v4);
      }
      sub_1002565FC((uint64_t *)(v0 + 304));
      swift_release();
      swift_unknownObjectRelease();
      sub_100058CB4(v0 + 400, v0 + 464, &qword_100B25D60);
      sub_100069708(v0 + 464);
      sub_100058CB4(v0 + 416, v0 + 528, &qword_100B27080);
      sub_100071814(v0 + 528);
      *(_OWORD *)(v0 + 496) = *(_OWORD *)(v0 + 424);
      uint64_t v10 = v0 + 496;
    }
    else
    {
      sub_1002565FC((uint64_t *)(v0 + 304));
      swift_release();
      sub_100058CB4(v0 + 400, v0 + 512, &qword_100B25D60);
      sub_100069708(v0 + 512);
      sub_100058CB4(v0 + 416, v0 + 536, &qword_100B27080);
      sub_100071814(v0 + 536);
      *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 424);
      uint64_t v10 = v0 + 448;
    }
    sub_100069708(v10);
  }
  else
  {
    swift_release();
  }
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v11 = sub_1007F6BC0();
  sub_10005B838(v11, (uint64_t)qword_100B26EE0);
  uint64_t v12 = sub_1007F6BA0();
  os_log_type_t v13 = sub_1007FE3C0();
  if (os_log_type_enabled(v12, v13))
  {
    uint64_t v14 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v14 = 0;
    _os_log_impl((void *)&_mh_execute_header, v12, v13, "Unable to perform lookup. Missing state, router, and/or source rect", v14, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v15 = *(uint64_t (**)(void))(v0 + 8);
  return v15();
}

uint64_t sub_10024D424()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 664);
  uint64_t v3 = *(void *)(v1 + 656);
  return _swift_task_switch(sub_10024D544, v3, v2);
}

uint64_t sub_10024D544()
{
  uint64_t v1 = *(void *)(v0 + 624);
  uint64_t v2 = *(void *)(v0 + 616);
  uint64_t v3 = *(void *)(v0 + 608);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    swift_release();
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 48sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(v0 + 424);
    sub_100069708(v0 + 480);
    sub_10005AFE8(v3, (uint64_t *)&unk_100B38D00);
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1007F6BC0();
    sub_10005B838(v4, (uint64_t)qword_100B26EE0);
    uint64_t v5 = sub_1007F6BA0();
    os_log_type_t v6 = sub_1007FE3C0();
    if (os_log_type_enabled(v5, v6))
    {
      NSString v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to perform lookup. Missing state, router, and/or source rect", v7, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v1 + 32))(*(void *)(v0 + 632), v3, v2);
    *(unsigned char *)(v0 + 345) = *(unsigned char *)(v0 + 440);
    *(void *)(v0 + 72sub_1007E6FC4(2, 18, 1, 0) = sub_1007FE0F0();
    uint64_t v11 = sub_1007FE0A0();
    return _swift_task_switch(sub_10024D7BC, v11, v10);
  }
}

uint64_t sub_10024D7BC()
{
  uint64_t v1 = *(void *)(v0 + 704);
  swift_release();
  BOOL v2 = *(unsigned char *)(v0 + 345) != 1 || v1 == 0;
  if (v2 || !swift_weakLoadStrong())
  {
    uint64_t v3 = *(void *)(v0 + 704);
    uint64_t v7 = *(void *)(v0 + 600);
    uint64_t v8 = sub_1007FBA50();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 704);
    uint64_t v4 = *(void *)(v0 + 568);
    uint64_t v5 = *(void *)(v0 + 560);
    uint64_t v6 = *(void *)(v0 + 552);
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SelectionInfo.PresentationLifecycle.removeAfterDisplay(_:), v6);
    sub_1007FAAA0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  *(void *)(v0 + 728) = v3;
  uint64_t v9 = *(void *)(v0 + 664);
  uint64_t v10 = *(void *)(v0 + 656);
  return _swift_task_switch(sub_10024D928, v10, v9);
}

uint64_t sub_10024D928()
{
  uint64_t v12 = v0[79];
  uint64_t v1 = v0[78];
  uint64_t v13 = v0[77];
  uint64_t v2 = v0[75];
  uint64_t v3 = v0[74];
  uint64_t v4 = v0[72];
  swift_release();
  sub_1007FAA70();
  uint64_t v5 = v0[53];
  uint64_t v6 = v0[54];
  uint64_t v7 = swift_allocObject();
  swift_weakInit();
  sub_10005B044(v2, v3, (uint64_t *)&unk_100B27060);
  unint64_t v8 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v9 = swift_allocObject();
  *(void *)(v9 + 16) = v7;
  sub_100058CB4(v3, v9 + v8, (uint64_t *)&unk_100B27060);
  swift_retain();
  sub_1005B6AEC(v5, v6, v12, (uint64_t)sub_1002565D4, v9);
  swift_release();
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10005AFE8(v2, (uint64_t *)&unk_100B27060);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v10 = (uint64_t (*)(void))v0[1];
  return v10();
}

uint64_t sub_10024DB30(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  void v5[6] = a4;
  v5[7] = v4;
  void v5[4] = a2;
  void v5[5] = a3;
  v5[3] = a1;
  sub_100058D18((uint64_t *)&unk_100B27090);
  v5[8] = swift_task_alloc();
  uint64_t v6 = sub_100058D18(&qword_100B38D10);
  v5[9] = v6;
  v5[10] = *(void *)(v6 - 8);
  v5[11] = swift_task_alloc();
  sub_100058D18((uint64_t *)&unk_100B38D00);
  v5[12] = swift_task_alloc();
  v5[13] = swift_task_alloc();
  sub_1007FE100();
  v5[14] = sub_1007FE0F0();
  uint64_t v8 = sub_1007FE0A0();
  v5[15] = v8;
  uint8_t v5[16] = v7;
  return _swift_task_switch(sub_10024DCA0, v8, v7);
}

uint64_t sub_10024DCA0()
{
  if (!swift_weakLoadStrong()) {
    goto LABEL_6;
  }
  uint64_t v1 = v0[4];
  if (!v1)
  {
    swift_release();
    goto LABEL_6;
  }
  uint64_t v2 = v0[9];
  uint64_t v3 = v0[10];
  uint64_t v4 = v0[8];
  v0[2] = v1;
  sub_100058D18(&qword_100B270A8);
  sub_100043334(&qword_100B270B0, &qword_100B270A8);
  sub_1007FB970();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    uint64_t v5 = v0[8];
    swift_release();
    sub_10005AFE8(v5, (uint64_t *)&unk_100B27090);
LABEL_6:
    uint64_t v6 = v0[13];
    uint64_t v7 = sub_100058D18((uint64_t *)&unk_100B27070);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
LABEL_7:
    sub_10005AFE8(v0[13], (uint64_t *)&unk_100B38D00);
    uint64_t v8 = (void *)swift_task_alloc();
    v0[17] = v8;
    void *v8 = v0;
    v8[1] = sub_10024DFD8;
    uint64_t v9 = v0[12];
    uint64_t v10 = v0[6];
    uint64_t v11 = v0[5];
    return sub_100253898(v9, v11, v10);
  }
  uint64_t v13 = v0[13];
  uint64_t v15 = v0[10];
  uint64_t v14 = v0[11];
  uint64_t v16 = v0[9];
  (*(void (**)(uint64_t, void, uint64_t))(v15 + 32))(v14, v0[8], v16);
  sub_1007FAA60();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v15 + 8))(v14, v16);
  uint64_t v17 = sub_100058D18((uint64_t *)&unk_100B27070);
  uint64_t v18 = *(void *)(v17 - 8);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v18 + 48))(v13, 1, v17) == 1) {
    goto LABEL_7;
  }
  uint64_t v19 = v0[13];
  uint64_t v20 = v0[3];
  swift_release();
  (*(void (**)(uint64_t, uint64_t, uint64_t))(v18 + 32))(v20, v19, v17);
  (*(void (**)(uint64_t, void, uint64_t, uint64_t))(v18 + 56))(v20, 0, 1, v17);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  __n128 v21 = (uint64_t (*)(void))v0[1];
  return v21();
}

uint64_t sub_10024DFD8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 128);
  uint64_t v3 = *(void *)(v1 + 120);
  return _swift_task_switch(sub_10024E0F8, v3, v2);
}

uint64_t sub_10024E0F8()
{
  uint64_t v1 = v0[12];
  uint64_t v2 = v0[3];
  swift_release();
  sub_100058CB4(v1, v2, (uint64_t *)&unk_100B38D00);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v3 = (uint64_t (*)(void))v0[1];
  return v3();
}

id sub_10024E1A4()
{
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (!Strong)
  {
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1007F6BC0();
    sub_10005B838(v4, (uint64_t)qword_100B26EE0);
    uint64_t v5 = sub_1007F6BA0();
    os_log_type_t v6 = sub_1007FE3C0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to perform translate. Missing state or router", v7, 2u);
      swift_slowDealloc();
    }

    return 0;
  }
  uint64_t v1 = Strong;
  uint64_t v2 = (void *)swift_unknownObjectWeakLoadStrong();
  if (!v2)
  {
    uint64_t v8 = sub_1007F6BA0();
    os_log_type_t v9 = sub_1007FE3C0();
    if (os_log_type_enabled(v8, v9))
    {
      uint64_t v10 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v10 = 0;
      _os_log_impl((void *)&_mh_execute_header, v8, v9, "Unable to present translate without a delegate", v10, 2u);
      swift_slowDealloc();
    }
    swift_unknownObjectRelease();

    return 0;
  }
  id v3 = [v2 isTranslateAvailableForAssetViewController:v1];
  swift_unknownObjectRelease();
  swift_unknownObjectRelease();
  return v3;
}

uint64_t sub_10024E35C()
{
  v1[63] = v0;
  uint64_t v2 = sub_1007FBA40();
  v1[64] = v2;
  v1[65] = *(void *)(v2 - 8);
  v1[66] = swift_task_alloc();
  uint64_t v3 = *(void *)(sub_100058D18((uint64_t *)&unk_100B27060) - 8);
  v1[67] = v3;
  v1[68] = *(void *)(v3 + 64);
  v1[69] = swift_task_alloc();
  v1[70] = swift_task_alloc();
  sub_100058D18((uint64_t *)&unk_100B38D00);
  v1[71] = swift_task_alloc();
  uint64_t v4 = sub_100058D18((uint64_t *)&unk_100B27070);
  v1[72] = v4;
  v1[73] = *(void *)(v4 - 8);
  v1[74] = swift_task_alloc();
  v1[75] = sub_1007FE100();
  v1[76] = sub_1007FE0F0();
  uint64_t v6 = sub_1007FE0A0();
  v1[77] = v6;
  v1[78] = v5;
  return _swift_task_switch(sub_10024E55C, v6, v5);
}

uint64_t sub_10024E55C()
{
  sub_10025608C((void *)(v0 + 16));
  sub_100058CB4(v0 + 96, v0 + 304, &qword_100B270C0);
  sub_100058CB4(v0 + 304, v0 + 352, &qword_100B270C0);
  if (*(void *)(v0 + 384))
  {
    long long v1 = *(_OWORD *)(v0 + 368);
    *(_OWORD *)(v0 + 40sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(v0 + 352);
    *(_OWORD *)(v0 + 416) = v1;
    *(_OWORD *)(v0 + 425) = *(_OWORD *)(v0 + 377);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 632) = Strong;
    if (Strong)
    {
      uint64_t v3 = *(void *)(v0 + 408);
      uint64_t v4 = *(void *)(v0 + 416);
      *(void *)(v0 + 64sub_1007E6FC4(2, 18, 1, 0) = v4;
      uint64_t v5 = *(void *)(v0 + 400);
      *(void *)(v0 + 648) = v5;
      *(void *)(v0 + 656) = v3;
      sub_1002565FC((uint64_t *)(v0 + 304));
      uint64_t v6 = (void *)swift_task_alloc();
      *(void *)(v0 + 664) = v6;
      *uint64_t v6 = v0;
      v6[1] = sub_10024E834;
      uint64_t v7 = *(void *)(v0 + 568);
      return sub_10024DB30(v7, v4, v5, v3);
    }
    sub_1002565FC((uint64_t *)(v0 + 304));
    swift_release();
    sub_100058CB4(v0 + 400, v0 + 464, &qword_100B25D60);
    sub_100069708(v0 + 464);
    sub_100058CB4(v0 + 416, v0 + 496, &qword_100B27080);
    sub_100071814(v0 + 496);
    *(_OWORD *)(v0 + 48sub_1007E6FC4(2, 18, 1, 0) = *(_OWORD *)(v0 + 424);
    sub_100069708(v0 + 480);
  }
  else
  {
    swift_release();
  }
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v9 = sub_1007F6BC0();
  sub_10005B838(v9, (uint64_t)qword_100B26EE0);
  uint64_t v10 = sub_1007F6BA0();
  os_log_type_t v11 = sub_1007FE3C0();
  if (os_log_type_enabled(v10, v11))
  {
    uint64_t v12 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v12 = 0;
    _os_log_impl((void *)&_mh_execute_header, v10, v11, "Unable to perform translate. Missing state or router", v12, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v13 = *(uint64_t (**)(void))(v0 + 8);
  return v13();
}

uint64_t sub_10024E834()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 624);
  uint64_t v3 = *(void *)(v1 + 616);
  return _swift_task_switch(sub_10024E954, v3, v2);
}

uint64_t sub_10024E954()
{
  uint64_t v1 = *(void *)(v0 + 584);
  uint64_t v2 = *(void *)(v0 + 576);
  uint64_t v3 = *(void *)(v0 + 568);
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v1 + 48))(v3, 1, v2) == 1)
  {
    swift_release();
    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    *(_OWORD *)(v0 + 448) = *(_OWORD *)(v0 + 424);
    sub_100069708(v0 + 448);
    sub_10005AFE8(v3, (uint64_t *)&unk_100B38D00);
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v4 = sub_1007F6BC0();
    sub_10005B838(v4, (uint64_t)qword_100B26EE0);
    uint64_t v5 = sub_1007F6BA0();
    os_log_type_t v6 = sub_1007FE3C0();
    if (os_log_type_enabled(v5, v6))
    {
      uint64_t v7 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v7 = 0;
      _os_log_impl((void *)&_mh_execute_header, v5, v6, "Unable to perform translate. Missing state or router", v7, 2u);
      swift_slowDealloc();
    }

    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v8 = *(uint64_t (**)(void))(v0 + 8);
    return v8();
  }
  else
  {
    (*(void (**)(void, uint64_t, uint64_t))(v1 + 32))(*(void *)(v0 + 592), v3, v2);
    *(unsigned char *)(v0 + 345) = *(unsigned char *)(v0 + 440);
    *(void *)(v0 + 672) = sub_1007FE0F0();
    uint64_t v11 = sub_1007FE0A0();
    return _swift_task_switch(sub_10024EBC0, v11, v10);
  }
}

uint64_t sub_10024EBC0()
{
  uint64_t v1 = *(void *)(v0 + 656);
  swift_release();
  BOOL v2 = *(unsigned char *)(v0 + 345) != 1 || v1 == 0;
  if (v2 || !swift_weakLoadStrong())
  {
    uint64_t v3 = *(void *)(v0 + 656);
    uint64_t v7 = *(void *)(v0 + 560);
    uint64_t v8 = sub_1007FBA50();
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  }
  else
  {
    uint64_t v3 = *(void *)(v0 + 656);
    uint64_t v4 = *(void *)(v0 + 528);
    uint64_t v5 = *(void *)(v0 + 520);
    uint64_t v6 = *(void *)(v0 + 512);
    (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for SelectionInfo.PresentationLifecycle.removeAfterDisplay(_:), v6);
    sub_1007FAAA0();
    swift_release();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
  }
  *(void *)(v0 + 68sub_1007E6FC4(2, 18, 1, 0) = v3;
  uint64_t v9 = *(void *)(v0 + 624);
  uint64_t v10 = *(void *)(v0 + 616);
  return _swift_task_switch(sub_10024ED2C, v10, v9);
}

uint64_t sub_10024ED2C()
{
  uint64_t v12 = v0[74];
  uint64_t v1 = v0[73];
  uint64_t v13 = v0[72];
  uint64_t v2 = v0[70];
  uint64_t v3 = v0[69];
  uint64_t v4 = v0[67];
  swift_release();
  uint64_t v5 = v0[54];
  uint64_t v11 = v0[53];
  uint64_t v6 = swift_allocObject();
  swift_weakInit();
  sub_10005B044(v2, v3, (uint64_t *)&unk_100B27060);
  unint64_t v7 = (*(unsigned __int8 *)(v4 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v4 + 80);
  uint64_t v8 = swift_allocObject();
  v8[2].Class isa = (Class)v6;
  sub_100058CB4(v3, (uint64_t)v8 + v7, (uint64_t *)&unk_100B27060);
  swift_retain();
  sub_1005B6728(v11, v5, v12, (uint64_t)sub_100256688, v8);
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  sub_10005AFE8(v2, (uint64_t *)&unk_100B27060);
  (*(void (**)(uint64_t, uint64_t))(v1 + 8))(v12, v13);
  swift_release();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v9 = (uint64_t (*)(void))v0[1];
  return v9();
}

uint64_t sub_10024EF1C(uint64_t a1, uint64_t a2, uint64_t a3, void (*a4)(uint64_t))
{
  uint64_t v7 = sub_100058D18((uint64_t *)&unk_100B27060);
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = *(void *)(v8 + 64);
  __chkstk_darwin(v7 - 8);
  sub_10005B044(a2, (uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), (uint64_t *)&unk_100B27060);
  unint64_t v10 = (*(unsigned __int8 *)(v8 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v8 + 80);
  uint64_t v11 = swift_allocObject();
  *(void *)(v11 + 16) = a1;
  sub_100058CB4((uint64_t)&v13 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0), v11 + v10, (uint64_t *)&unk_100B27060);
  swift_retain();
  sub_1007810A8(a4);
  return swift_release();
}

uint64_t sub_10024F03C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_100058D18((uint64_t *)&unk_100B27060);
  __chkstk_darwin(v3 - 8);
  uint64_t v5 = (char *)&v11 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_1007FBA50();
  uint64_t v7 = *(void *)(v6 - 8);
  __chkstk_darwin(v6);
  uint64_t v9 = (char *)&v11 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t result = swift_weakLoadStrong();
  if (result)
  {
    sub_10005B044(a2, (uint64_t)v5, (uint64_t *)&unk_100B27060);
    if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v5, 1, v6) == 1)
    {
      sub_10005AFE8((uint64_t)v5, (uint64_t *)&unk_100B27060);
    }
    else
    {
      (*(void (**)(char *, char *, uint64_t))(v7 + 32))(v9, v5, v6);
      if (swift_weakLoadStrong())
      {
        sub_1007FAAD0();
        swift_release();
      }
      (*(void (**)(char *, uint64_t))(v7 + 8))(v9, v6);
    }
    return swift_release();
  }
  return result;
}

uint64_t sub_10024F210()
{
  v1[99] = v0;
  sub_100058D18((uint64_t *)&unk_100B38D00);
  v1[100] = swift_task_alloc();
  v1[101] = type metadata accessor for QuoteSharingView();
  v1[102] = swift_task_alloc();
  uint64_t v2 = sub_1007F3990();
  v1[103] = v2;
  v1[104] = *(void *)(v2 - 8);
  v1[105] = swift_task_alloc();
  uint64_t v3 = sub_1007F2560();
  v1[106] = v3;
  v1[107] = *(void *)(v3 - 8);
  v1[108] = swift_task_alloc();
  uint64_t v4 = sub_1007FAE10();
  v1[109] = v4;
  v1[110] = *(void *)(v4 - 8);
  v1[111] = swift_task_alloc();
  uint64_t v5 = sub_1007F4F90();
  v1[112] = v5;
  v1[113] = *(void *)(v5 - 8);
  v1[114] = swift_task_alloc();
  sub_1007FE100();
  v1[115] = sub_1007FE0F0();
  uint64_t v7 = sub_1007FE0A0();
  v1[116] = v7;
  v1[117] = v6;
  return _swift_task_switch(sub_10024F47C, v7, v6);
}

uint64_t sub_10024F47C()
{
  sub_10025608C((void *)(v0 + 80));
  sub_100058CB4(v0 + 208, v0 + 536, (uint64_t *)&unk_100B270D0);
  sub_100058CB4(v0 + 536, v0 + 496, (uint64_t *)&unk_100B270D0);
  if (*(void *)(v0 + 520))
  {
    uint64_t v1 = *(void *)(v0 + 792);
    long long v2 = *(_OWORD *)(v0 + 512);
    *(_OWORD *)(v0 + 456) = *(_OWORD *)(v0 + 496);
    *(_OWORD *)(v0 + 472) = v2;
    *(void *)(v0 + 488) = *(void *)(v0 + 528);
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 944) = Strong;
    *(void *)(v0 + 952) = *(void *)(v1 + 24);
    if (Strong)
    {
      uint64_t v4 = *(void *)(v0 + 912);
      uint64_t v5 = *(void *)(v0 + 904);
      uint64_t v6 = *(void *)(v0 + 896);
      (*(void (**)(uint64_t, void, uint64_t))(v5 + 104))(v4, enum case for BooksFeatureFlag.quoteSharing(_:), v6);
      sub_1002568BC((uint64_t *)(v0 + 536));
      char v7 = sub_1007F50E0();
      (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
      if (v7)
      {
        uint64_t v8 = *(void *)(*(void *)(v0 + 792) + 40);
        *(void *)(v0 + 96sub_1007E6FC4(2, 18, 1, 0) = v8;
        uint64_t v9 = v8 + OBJC_IVAR___REBookProviderService_bookEntity;
        swift_beginAccess();
        sub_10005DAB8(v9, v0 + 576);
        sub_10005DA74((void *)(v0 + 576), *(void *)(v0 + 600));
        sub_1007FA750();
        _s5Books15CurrentPageViewVwxx_0(v0 + 576);
        id v10 = objc_allocWithZone((Class)BICDescribedImage);
        NSString v11 = sub_1007FDC30();
        swift_bridgeObjectRelease();
        id v12 = [v10 initWithIdentifier:v11];
        *(void *)(v0 + 968) = v12;

        [v12 setProcessingOptions:0];
        CGSizeScaleToScreen();
        [v12 setImageSize:];
        [v12 setPriority:4];
        id v13 = [self defaultCacheManager];
        *(void *)(v0 + 976) = v13;
        *(void *)(v0 + 16) = v0;
        *(void *)(v0 + 56) = v0 + 768;
        *(void *)(v0 + 24) = sub_10024F9D4;
        uint64_t v14 = swift_continuation_init();
        *(void *)(v0 + 416) = _NSConcreteStackBlock;
        *(void *)(v0 + 424) = 0x40000000;
        *(void *)(v0 + 432) = sub_100250F68;
        *(void *)(v0 + 44sub_1007E6FC4(2, 18, 1, 0) = &unk_100A4FF10;
        *(void *)(v0 + 448) = v14;
        id v15 = v12;
        [v13 fetchCGImageFor:v15 forRequest:v15 completion:v0 + 416];
        return _swift_continuation_await(v0 + 16);
      }
      else
      {
        uint64_t v21 = *(void *)(v0 + 464);
        uint64_t v22 = *(void *)(v0 + 472);
        *(void *)(v0 + 1088) = v22;
        uint64_t v23 = *(void *)(v0 + 456);
        *(void *)(v0 + 1096) = v21;
        uint64_t v24 = (void *)swift_task_alloc();
        *(void *)(v0 + 1104) = v24;
        *uint64_t v24 = v0;
        v24[1] = sub_100250D28;
        uint64_t v25 = *(void *)(v0 + 800);
        return sub_10024DB30(v25, v22, v23, v21);
      }
    }
    sub_1002568BC((uint64_t *)(v0 + 536));
    swift_release();
    sub_100058CB4(v0 + 456, v0 + 664, &qword_100B25D60);
    sub_100069708(v0 + 664);
    sub_100058CB4(v0 + 472, v0 + 776, &qword_100B27080);
    sub_100071814(v0 + 776);
  }
  swift_release();
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v16 = sub_1007F6BC0();
  sub_10005B838(v16, (uint64_t)qword_100B26EE0);
  uint64_t v17 = sub_1007F6BA0();
  os_log_type_t v18 = sub_1007FE3C0();
  if (os_log_type_enabled(v17, v18))
  {
    uint64_t v19 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v19 = 0;
    _os_log_impl((void *)&_mh_execute_header, v17, v18, "Unable to perform share. Missing state and/or router", v19, 2u);
    swift_slowDealloc();
  }

  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v20 = *(uint64_t (**)(void))(v0 + 8);
  return v20();
}

uint64_t sub_10024F9D4()
{
  uint64_t v1 = *(void *)(*(void *)v0 + 936);
  uint64_t v2 = *(void *)(*(void *)v0 + 928);
  return _swift_task_switch(sub_10024FADC, v2, v1);
}

uint64_t sub_10024FADC()
{
  uint64_t v1 = (void *)v0[122];
  uint64_t v2 = (void *)v0[121];
  uint64_t v3 = v0[110];
  uint64_t v4 = v0[109];
  uint64_t v5 = v0[99];
  uint64_t v6 = (void *)v0[96];
  v0[123] = v6;

  uint64_t v7 = v5 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
  swift_beginAccess();
  if (!(*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v7, 1, v4))
  {
    uint64_t v45 = v0[120];
    uint64_t v8 = v0[111];
    uint64_t v9 = v0[110];
    uint64_t v10 = v0[109];
    uint64_t v11 = v0[108];
    uint64_t v12 = v0[107];
    uint64_t v13 = v0[106];
    (*(void (**)(uint64_t, uint64_t, uint64_t))(v9 + 16))(v8, v7, v10);
    v0[91] = sub_1007FADD0();
    v0[92] = v14;
    sub_1007F2540();
    sub_10022ED00();
    v0[124] = sub_1007FEE40();
    v0[125] = v15;
    (*(void (**)(uint64_t, uint64_t))(v12 + 8))(v11, v13);
    swift_bridgeObjectRelease();
    (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
    uint64_t v16 = OBJC_IVAR___REBookProviderService_bookInfo;
    uint64_t v17 = *(void **)(v45 + OBJC_IVAR___REBookProviderService_bookInfo);
    if (v17)
    {
      id v18 = [v17 bookTitle];
      if (v18)
      {
        uint64_t v19 = v18;
        uint64_t v20 = sub_1007FDC70();
        uint64_t v22 = v21;

        v0[126] = v20;
        v0[127] = v22;
        uint64_t v23 = *(void **)(v45 + v16);
        if (v23)
        {
          id v24 = [v23 bookAuthor];
          if (v24)
          {
            uint64_t v25 = v24;
            uint64_t v26 = sub_1007FDC70();
            uint64_t v28 = v27;

            v0[128] = v26;
            v0[129] = v28;
            if (v6)
            {
              id v29 = [v6 image];
              if (v29)
              {
                uint64_t v30 = v29;
                id v31 = [v29 CGImage];
                v0[130] = v31;

                if (v31)
                {
                  sub_1007F3970();
                  [objc_allocWithZone((Class)UIImage) initWithCGImage:v31];
                  id v32 = [self traitCollectionWithUserInterfaceStyle:2];
                  sub_1007F3980();
                  int v33 = (void *)swift_task_alloc();
                  v0[131] = v33;
                  *int v33 = v0;
                  v33[1] = sub_10024FF80;
                  uint64_t v34 = v0[105];
                  return static Backdrop.CompositeRenderer.snapshot(configuration:)(v34);
                }
              }
            }
            swift_bridgeObjectRelease();
          }
        }
        swift_bridgeObjectRelease();
      }
    }
    swift_bridgeObjectRelease();
  }
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v35 = sub_1007F6BC0();
  sub_10005B838(v35, (uint64_t)qword_100B26EE0);
  long long v36 = sub_1007F6BA0();
  os_log_type_t v37 = sub_1007FE3C0();
  if (os_log_type_enabled(v36, v37))
  {
    long long v38 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)long long v38 = 0;
    _os_log_impl((void *)&_mh_execute_header, v36, v37, "Missing quote sharing data to render the template view", v38, 2u);
    swift_slowDealloc();
  }

  uint64_t v39 = v0[58];
  uint64_t v40 = v0[59];
  v0[133] = v40;
  uint64_t v41 = v0[57];
  v0[134] = v39;
  long long v42 = (void *)swift_task_alloc();
  v0[135] = v42;
  *long long v42 = v0;
  v42[1] = sub_100250ACC;
  uint64_t v43 = v0[100];
  return sub_10024DB30(v43, v40, v41, v39);
}

uint64_t sub_10024FF80(uint64_t a1)
{
  uint64_t v3 = *(void **)v2;
  *(void *)(*(void *)v2 + 1056) = a1;
  swift_task_dealloc();
  if (v1)
  {
    uint64_t v4 = v3[105];
    uint64_t v5 = v3[104];
    uint64_t v6 = v3[103];
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_errorRelease();
    (*(void (**)(uint64_t, uint64_t))(v5 + 8))(v4, v6);
    uint64_t v7 = v3[117];
    uint64_t v8 = v3[116];
    uint64_t v9 = sub_10025011C;
  }
  else
  {
    (*(void (**)(void, void))(v3[104] + 8))(v3[105], v3[103]);
    uint64_t v7 = v3[117];
    uint64_t v8 = v3[116];
    uint64_t v9 = sub_100250294;
  }
  return _swift_task_switch(v9, v8, v7);
}

uint64_t sub_10025011C()
{
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1007F6BC0();
  sub_10005B838(v1, (uint64_t)qword_100B26EE0);
  uint64_t v2 = sub_1007F6BA0();
  os_log_type_t v3 = sub_1007FE3C0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "Missing quote sharing data to render the template view", v4, 2u);
    swift_slowDealloc();
  }

  uint64_t v5 = *(void *)(v0 + 464);
  uint64_t v6 = *(void *)(v0 + 472);
  *(void *)(v0 + 1064) = v6;
  uint64_t v7 = *(void *)(v0 + 456);
  *(void *)(v0 + 1072) = v5;
  uint64_t v8 = (void *)swift_task_alloc();
  *(void *)(v0 + 108sub_1007E6FC4(2, 18, 1, 0) = v8;
  void *v8 = v0;
  v8[1] = sub_100250ACC;
  uint64_t v9 = *(void *)(v0 + 800);
  return sub_10024DB30(v9, v6, v7, v5);
}

uint64_t sub_100250294()
{
  id v1 = [(id)v0[132] CIImage];
  if (v1)
  {
    uint64_t v2 = v1;
    id v3 = [objc_allocWithZone((Class)CIContext) init];
    [v2 extent];
    id v4 = [v3 createCGImage:v2];

    if (v4)
    {
      uint64_t v5 = v0[130];
      uint64_t v6 = v0[99];
      swift_release();
      id v63 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v5];
      uint64_t v7 = self;
      id v8 = v4;
      id v9 = [v7 mainScreen];
      [v9 scale];
      double v11 = v10;

      id v12 = [objc_allocWithZone((Class)UIImage) initWithCGImage:v8 scale:0 orientation:v11];
      uint64_t v66 = v8;

      uint64_t v13 = *(void *)(v6 + 96);
      uint64_t ObjectType = swift_getObjectType();
      uint64_t v15 = *(uint64_t (**)(uint64_t, uint64_t))(v13 + 16);
      char v16 = v15(ObjectType, v13);
      if ((v15(ObjectType, v13) & 1) == 0) {
        (*(void (**)(uint64_t))(*(void *)(v13 + 8) + 8))(ObjectType);
      }
      uint64_t v61 = v0[128];
      uint64_t v62 = v0[129];
      long long v59 = *((_OWORD *)v0 + 62);
      long long v60 = *((_OWORD *)v0 + 63);
      uint64_t v17 = (uint64_t *)v0[102];
      id v18 = (int *)v0[101];
      uint64_t v19 = v0[99];
      uint64_t v20 = swift_allocObject();
      *(unsigned char *)(v20 + 16) = v16 & 1;
      *(void *)(v20 + 24) = v19;
      long long v67 = *((_OWORD *)v0 + 59);
      uint64_t *v17 = swift_getKeyPath();
      sub_100058D18(&qword_100B270E0);
      swift_storeEnumTagMultiPayload();
      uint64_t v21 = (char *)v17 + v18[5];
      *((unsigned char *)v0 + 1113) = 0;
      id v22 = v63;
      id v23 = v12;
      swift_retain();
      sub_1007F9B20();
      uint64_t v24 = v0[94];
      char *v21 = *((unsigned char *)v0 + 744);
      *((void *)v21 + 1) = v24;
      uint64_t v25 = (char *)v17 + v18[6];
      *((unsigned char *)v0 + 1112) = 0;
      sub_1007F9B20();
      uint64_t v26 = v0[88];
      char *v25 = *((unsigned char *)v0 + 696);
      *((void *)v25 + 1) = v26;
      uint64_t v27 = v18[7];
      v0[98] = 0;
      sub_1007F9B20();
      *(_OWORD *)((char *)v17 + v27) = *(_OWORD *)(v0 + 85);
      uint64_t v28 = (char *)v17 + v18[8];
      *(_OWORD *)uint64_t v28 = v59;
      *((_OWORD *)v28 + 1) = v60;
      *((void *)v28 + 4) = v61;
      *((void *)v28 + 5) = v62;
      uint64_t v64 = v23;
      uint64_t v65 = v22;
      *((void *)v28 + 6) = v22;
      *((void *)v28 + 7) = v23;
      *((void *)v28 + 8) = sub_100256940;
      *((void *)v28 + 9) = v20;
      id v29 = objc_allocWithZone((Class)sub_100058D18(&qword_100B270E8));
      uint64_t v30 = (void *)sub_1007F8950();
      NSString v31 = sub_1007FDC30();
      NSString v32 = sub_1007FDC30();
      id v33 = [self alertControllerWithTitle:v31 message:v32 preferredStyle:1];

      NSString v34 = sub_1007FDC30();
      uint64_t v35 = self;
      id v36 = [v35 actionWithTitle:v34 style:1 handler:0];

      [v33 addAction:v36];
      uint64_t v37 = swift_allocObject();
      *(_OWORD *)(v37 + 16) = v67;
      *(void *)(v37 + 32) = v30;
      id v38 = v30;
      swift_unknownObjectRetain();
      NSString v39 = sub_1007FDC30();
      v0[50] = sub_1002569D0;
      v0[51] = v37;
      v0[46] = _NSConcreteStackBlock;
      v0[47] = 1107296256;
      v0[48] = sub_10000B4B4;
      v0[49] = &unk_100A4FF78;
      uint64_t v40 = _Block_copy(v0 + 46);
      swift_release();
      id v41 = [v35 actionWithTitle:v39 style:0 handler:v40];
      _Block_release(v40);

      [v33 addAction:v41];
      uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
      if (Strong)
      {
        [Strong assetViewController:v0[118] presentViewController:v33 animated:1 completion:0];
        swift_unknownObjectRelease();
      }

      uint64_t v43 = (void *)v0[132];
      long long v44 = (void *)v0[130];
      uint64_t v45 = (void *)v0[121];

      swift_unknownObjectRelease();
      swift_unknownObjectRelease();
      sub_100058CB4((uint64_t)(v0 + 57), (uint64_t)(v0 + 89), &qword_100B25D60);
      sub_100069708((uint64_t)(v0 + 89));
      sub_100058CB4((uint64_t)(v0 + 59), (uint64_t)(v0 + 95), &qword_100B27080);
      sub_100071814((uint64_t)(v0 + 95));
      swift_release();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      swift_task_dealloc();
      uint64_t v46 = (uint64_t (*)(void))v0[1];
      return v46();
    }
    uint64_t v48 = (void *)v0[132];
    uint64_t v49 = (void *)v0[130];
  }
  else
  {
    uint64_t v48 = (void *)v0[132];
    uint64_t v49 = (void *)v0[130];
  }

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v50 = sub_1007F6BC0();
  sub_10005B838(v50, (uint64_t)qword_100B26EE0);
  char v51 = sub_1007F6BA0();
  os_log_type_t v52 = sub_1007FE3C0();
  if (os_log_type_enabled(v51, v52))
  {
    uint64_t v53 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v53 = 0;
    _os_log_impl((void *)&_mh_execute_header, v51, v52, "Missing quote sharing data to render the template view", v53, 2u);
    swift_slowDealloc();
  }

  uint64_t v54 = v0[58];
  uint64_t v55 = v0[59];
  v0[133] = v55;
  uint64_t v56 = v0[57];
  v0[134] = v54;
  char v57 = (void *)swift_task_alloc();
  v0[135] = v57;
  *char v57 = v0;
  v57[1] = sub_100250ACC;
  uint64_t v58 = v0[100];
  return sub_10024DB30(v58, v55, v56, v54);
}

uint64_t sub_100250ACC()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 936);
  uint64_t v3 = *(void *)(v1 + 928);
  return _swift_task_switch(sub_100250BEC, v3, v2);
}

uint64_t sub_100250BEC()
{
  uint64_t v1 = *(void **)(v0 + 968);
  uint64_t v2 = *(void *)(v0 + 800);
  uint64_t v3 = swift_release();
  id v4 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 480))(v3);
  sub_1005B70F0(v4);

  swift_release();
  swift_unknownObjectRelease();

  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_unknownObjectRelease();
  sub_10005AFE8(v2, (uint64_t *)&unk_100B38D00);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100250D28()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 936);
  uint64_t v3 = *(void *)(v1 + 928);
  return _swift_task_switch(sub_100250E48, v3, v2);
}

uint64_t sub_100250E48()
{
  uint64_t v1 = *(void *)(v0 + 800);
  uint64_t v2 = swift_release();
  uint64_t v3 = (void *)(*(uint64_t (**)(uint64_t))(v0 + 480))(v2);
  sub_1005B70F0(v3);

  swift_release();
  swift_unknownObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_10005AFE8(v1, (uint64_t *)&unk_100B38D00);
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  swift_task_dealloc();
  id v4 = *(uint64_t (**)(void))(v0 + 8);
  return v4();
}

uint64_t sub_100250F68(uint64_t a1, uint64_t a2)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v5 = a2;
  uint64_t v3 = *(void *)(*(void *)(v2 + 64) + 40);
  swift_unknownObjectRetain();
  sub_100058CB4((uint64_t)&v5, v3, &qword_100B270F0);
  return swift_continuation_resume();
}

uint64_t sub_100250FD0(uint64_t a1, uint64_t a2, uint64_t a3, void *a4)
{
  uint64_t v5 = sub_100058D18((uint64_t *)&unk_100B38D00);
  __chkstk_darwin(v5 - 8);
  uint64_t v7 = (char *)&v10 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100058D18((uint64_t *)&unk_100B27070);
  (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(v7, 1, 1, v8);
  sub_1005B70F0(a4);
  return sub_10005AFE8((uint64_t)v7, (uint64_t *)&unk_100B38D00);
}

uint64_t sub_1002510A8(char a1)
{
  *(void *)(v2 + 1248) = v1;
  *(unsigned char *)(v2 + 681) = a1;
  sub_1007FE100();
  *(void *)(v2 + 1256) = sub_1007FE0F0();
  uint64_t v4 = sub_1007FE0A0();
  *(void *)(v2 + 1264) = v4;
  *(void *)(v2 + 1272) = v3;
  return _swift_task_switch(sub_100251148, v4, v3);
}

uint64_t sub_100251148()
{
  sub_10025608C((void *)(v0 + 16));
  sub_100058CB4(v0 + 184, v0 + 1072, &qword_100B27038);
  sub_100058CB4(v0 + 1072, v0 + 688, &qword_100B27038);
  if (!*(void *)(v0 + 712)) {
    goto LABEL_7;
  }
  long long v1 = *(_OWORD *)(v0 + 736);
  *(_OWORD *)(v0 + 624) = *(_OWORD *)(v0 + 720);
  *(_OWORD *)(v0 + 64sub_1007E6FC4(2, 18, 1, 0) = v1;
  *(_OWORD *)(v0 + 656) = *(_OWORD *)(v0 + 752);
  *(_OWORD *)(v0 + 665) = *(_OWORD *)(v0 + 761);
  long long v2 = *(_OWORD *)(v0 + 704);
  *(_OWORD *)(v0 + 592) = *(_OWORD *)(v0 + 688);
  *(_OWORD *)(v0 + 608) = v2;
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 128sub_1007E6FC4(2, 18, 1, 0) = Strong;
  if (!Strong)
  {
LABEL_7:
    swift_release();
LABEL_8:
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v8 = sub_1007F6BC0();
    sub_10005B838(v8, (uint64_t)qword_100B26EE0);
    id v9 = sub_1007F6BA0();
    os_log_type_t v10 = sub_1007FE3C0();
    if (os_log_type_enabled(v9, v10))
    {
      double v11 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)double v11 = 0;
      _os_log_impl((void *)&_mh_execute_header, v9, v10, "Unable to perform add highlight. Missing state and/or annotation provider", v11, 2u);
      swift_slowDealloc();
    }

    goto LABEL_13;
  }
  uint64_t v4 = *(void *)(v0 + 1248);
  uint64_t v5 = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 1288) = v5;
  *(void *)(v0 + 1296) = *(void *)(v4 + 72);
  if (!v5)
  {
    sub_100256430(v0 + 1072, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_100256394);
    swift_release();
    swift_release();
    sub_100256430(v0 + 1072, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_100256494);
    goto LABEL_8;
  }
  if (*(unsigned char *)(v0 + 681) == 6)
  {
    uint64_t v6 = *(void *)(v0 + 648);
    if (v6)
    {
      uint64_t v7 = *(void *)(v0 + 640);
      swift_bridgeObjectRetain();
      swift_release();
      sub_1007FAA70();
      swift_unknownObjectRelease();
      swift_release();
LABEL_14:
      id v12 = *(uint64_t (**)(uint64_t, uint64_t))(v0 + 8);
      return v12(v7, v6);
    }
  }
  sub_100058CB4(v0 + 664, v0 + 1192, (uint64_t *)&unk_100B27040);
  sub_100058CB4(v0 + 1192, v0 + 1168, (uint64_t *)&unk_100B27040);
  int v14 = *(unsigned __int8 *)(v0 + 1184);
  if (v14 != 255)
  {
    char v15 = v14 & 1;
    uint64_t v16 = *(void *)(v0 + 1168);
    uint64_t v17 = *(void *)(v0 + 1176);
    sub_100256530(v0 + 1192);
    id v18 = (void *)swift_task_alloc();
    *(void *)(v0 + 1304) = v18;
    void *v18 = v0;
    v18[1] = sub_100251708;
    return sub_100251D10(v16, v17, v15);
  }
  sub_10025608C((void *)(v0 + 304));
  sub_100058CB4(v0 + 472, v0 + 976, &qword_100B27038);
  sub_100058CB4(v0 + 976, v0 + 880, &qword_100B27038);
  if (!*(void *)(v0 + 904)) {
    goto LABEL_27;
  }
  long long v19 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 912);
  *(_OWORD *)(v0 + 832) = v19;
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 944);
  *(_OWORD *)(v0 + 857) = *(_OWORD *)(v0 + 953);
  long long v20 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 80sub_1007E6FC4(2, 18, 1, 0) = v20;
  sub_100058CB4(v0 + 784, v0 + 1216, &qword_100B25D60);
  sub_100058CB4(v0 + 1216, v0 + 1232, &qword_100B25D60);
  uint64_t v21 = *(void *)(v0 + 1240);
  if (!v21)
  {
LABEL_27:
    swift_release();
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v28 = sub_1007F6BC0();
    sub_10005B838(v28, (uint64_t)qword_100B26EE0);
    id v29 = sub_1007F6BA0();
    os_log_type_t v30 = sub_1007FE3C0();
    if (os_log_type_enabled(v29, v30))
    {
      NSString v31 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)NSString v31 = 0;
      _os_log_impl((void *)&_mh_execute_header, v29, v30, "Unable to perform add highlight. Missing updated state or state CFI", v31, 2u);
      swift_slowDealloc();
    }

    sub_1007FAA70();
    swift_unknownObjectRelease();
    swift_release();
LABEL_13:
    uint64_t v7 = 0;
    uint64_t v6 = 0;
    goto LABEL_14;
  }
  uint64_t v33 = *(void *)(v0 + 1232);
  swift_getObjectType();
  uint64_t v22 = *(void *)(v0 + 800);
  uint64_t v23 = *(void *)(v0 + 808);
  uint64_t v24 = *(void *)(v0 + 816);
  uint64_t v25 = *(void *)(v0 + 824);
  sub_100256430(v0 + 976, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_100256394);
  sub_10006B114(v0 + 1216);
  uint64_t v26 = (void *)swift_task_alloc();
  *(void *)(v0 + 1312) = v26;
  *uint64_t v26 = v0;
  v26[1] = sub_100251B2C;
  uint64_t v27 = *(unsigned __int8 *)(v0 + 681);
  return dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(v33, v21, v22, v23, v24, v25, v27, 1);
}

uint64_t sub_100251708()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 1192;
  swift_task_dealloc();
  sub_100256564(v2);
  uint64_t v3 = *(void *)(v1 + 1272);
  uint64_t v4 = *(void *)(v1 + 1264);
  return _swift_task_switch(sub_10025183C, v4, v3);
}

uint64_t sub_10025183C()
{
  sub_10025608C((void *)(v0 + 304));
  sub_100058CB4(v0 + 472, v0 + 976, &qword_100B27038);
  sub_100058CB4(v0 + 976, v0 + 880, &qword_100B27038);
  if (!*(void *)(v0 + 904)) {
    goto LABEL_6;
  }
  long long v1 = *(_OWORD *)(v0 + 928);
  *(_OWORD *)(v0 + 816) = *(_OWORD *)(v0 + 912);
  *(_OWORD *)(v0 + 832) = v1;
  *(_OWORD *)(v0 + 848) = *(_OWORD *)(v0 + 944);
  *(_OWORD *)(v0 + 857) = *(_OWORD *)(v0 + 953);
  long long v2 = *(_OWORD *)(v0 + 896);
  *(_OWORD *)(v0 + 784) = *(_OWORD *)(v0 + 880);
  *(_OWORD *)(v0 + 80sub_1007E6FC4(2, 18, 1, 0) = v2;
  sub_100058CB4(v0 + 784, v0 + 1216, &qword_100B25D60);
  sub_100058CB4(v0 + 1216, v0 + 1232, &qword_100B25D60);
  uint64_t v3 = *(void *)(v0 + 1240);
  if (v3)
  {
    uint64_t v17 = *(void *)(v0 + 1232);
    swift_getObjectType();
    uint64_t v4 = *(void *)(v0 + 800);
    uint64_t v5 = *(void *)(v0 + 808);
    uint64_t v6 = *(void *)(v0 + 816);
    uint64_t v7 = *(void *)(v0 + 824);
    sub_100256430(v0 + 976, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_100256394);
    sub_10006B114(v0 + 1216);
    uint64_t v8 = (void *)swift_task_alloc();
    *(void *)(v0 + 1312) = v8;
    void *v8 = v0;
    v8[1] = sub_100251B2C;
    uint64_t v9 = *(unsigned __int8 *)(v0 + 681);
    return dispatch thunk of AnnotationProviding.highlight(location:selectedText:representativeText:style:mergeWithExisting:updateCurrentHighlightStyle:)(v17, v3, v4, v5, v6, v7, v9, 1);
  }
  else
  {
LABEL_6:
    swift_release();
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v10 = sub_1007F6BC0();
    sub_10005B838(v10, (uint64_t)qword_100B26EE0);
    double v11 = sub_1007F6BA0();
    os_log_type_t v12 = sub_1007FE3C0();
    if (os_log_type_enabled(v11, v12))
    {
      uint64_t v13 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v13 = 0;
      _os_log_impl((void *)&_mh_execute_header, v11, v12, "Unable to perform add highlight. Missing updated state or state CFI", v13, 2u);
      swift_slowDealloc();
    }

    sub_1007FAA70();
    swift_unknownObjectRelease();
    swift_release();
    int v14 = *(uint64_t (**)(void, void))(v0 + 8);
    return v14(0, 0);
  }
}

uint64_t sub_100251B2C(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = *v2;
  uint64_t v4 = *v2;
  uint64_t v5 = *v2 + 976;
  uint64_t v6 = *v2 + 1216;
  *(void *)(v4 + 132sub_1007E6FC4(2, 18, 1, 0) = a1;
  *(void *)(v4 + 1328) = a2;
  swift_task_dealloc();
  sub_100069708(v6);
  sub_100256430(v5, (void (*)(void, void, void, void, void, void, void, void, void, void, void, char))sub_100256494);
  uint64_t v7 = *(void *)(v3 + 1272);
  uint64_t v8 = *(void *)(v3 + 1264);
  return _swift_task_switch(sub_100251C8C, v8, v7);
}

uint64_t sub_100251C8C()
{
  swift_release();
  sub_1007FAA70();
  swift_unknownObjectRelease();
  swift_release();
  uint64_t v1 = v0[166];
  uint64_t v2 = v0[165];
  uint64_t v3 = (uint64_t (*)(uint64_t, uint64_t))v0[1];
  return v3(v2, v1);
}

uint64_t sub_100251D10(uint64_t a1, uint64_t a2, char a3)
{
  *(void *)(v4 + 24) = a2;
  *(void *)(v4 + 32) = v3;
  *(unsigned char *)(v4 + 88) = a3;
  *(void *)(v4 + 16) = a1;
  sub_1007FE100();
  *(void *)(v4 + 4sub_1007E6FC4(2, 18, 1, 0) = sub_1007FE0F0();
  uint64_t v6 = sub_1007FE0A0();
  *(void *)(v4 + 48) = v6;
  *(void *)(v4 + 56) = v5;
  return _swift_task_switch(sub_100251DB0, v6, v5);
}

uint64_t sub_100251DB0()
{
  char v1 = *(unsigned char *)(v0 + 88);
  uint64_t Strong = swift_weakLoadStrong();
  *(void *)(v0 + 64) = Strong;
  if ((v1 & 1) == 0)
  {
    if (Strong)
    {
      uint64_t v3 = *(void *)(v0 + 24);
      uint64_t v4 = (void *)swift_task_alloc();
      *(void *)(v0 + 72) = v4;
      void *v4 = v0;
      v4[1] = sub_100251F24;
      uint64_t v5 = *(void *)(v0 + 16);
      return BookContentModule.select(cfi:)(v5, v3);
    }
    goto LABEL_10;
  }
  if (!Strong)
  {
LABEL_10:
    swift_release();
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
  uint64_t v6 = *(void *)(v0 + 24);
  uint64_t v7 = (void *)swift_task_alloc();
  *(void *)(v0 + 8sub_1007E6FC4(2, 18, 1, 0) = v7;
  void *v7 = v0;
  v7[1] = sub_1002520C8;
  uint64_t v8 = *(void *)(v0 + 16);
  return BookContentModule.select(annotationID:)(v8, v6);
}

uint64_t sub_100251F24()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_100252068, v3, v2);
}

uint64_t sub_100252068()
{
  swift_release();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_1002520C8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  uint64_t v2 = *(void *)(v1 + 56);
  uint64_t v3 = *(void *)(v1 + 48);
  return _swift_task_switch(sub_1002570B0, v3, v2);
}

uint64_t sub_10025220C()
{
  v1[42] = v0;
  v1[43] = sub_1007FE100();
  v1[44] = sub_1007FE0F0();
  uint64_t v3 = sub_1007FE0A0();
  v1[45] = v3;
  v1[46] = v2;
  return _swift_task_switch(sub_1002522A8, v3, v2);
}

uint64_t sub_1002522A8()
{
  sub_10025608C((void *)(v0 + 16));
  sub_100058CB4(v0 + 280, v0 + 320, (uint64_t *)&unk_100B27010);
  sub_100058CB4(v0 + 320, v0 + 304, (uint64_t *)&unk_100B27010);
  uint64_t v1 = *(void *)(v0 + 304);
  *(void *)(v0 + 376) = v1;
  if (v1
    && (uint64_t v2 = *(void *)(v0 + 336),
        *(unsigned char *)(v0 + 314) = *(unsigned char *)(v0 + 312),
        uint64_t Strong = swift_unknownObjectWeakLoadStrong(),
        *(void *)(v0 + 384) = Strong,
        *(void *)(v0 + 392) = *(void *)(v2 + 72),
        Strong))
  {
    sub_100071840(v0 + 320);
    *(void *)(v0 + 40sub_1007E6FC4(2, 18, 1, 0) = sub_1007FE0F0();
    uint64_t v5 = sub_1007FE0A0();
    *(void *)(v0 + 408) = v5;
    *(void *)(v0 + 416) = v4;
    return _swift_task_switch(sub_1002524A0, v5, v4);
  }
  else
  {
    swift_release();
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1007F6BC0();
    sub_10005B838(v6, (uint64_t)qword_100B26EE0);
    uint64_t v7 = sub_1007F6BA0();
    os_log_type_t v8 = sub_1007FE3C0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to perform remove highlights. Missing state and/or annotation provider", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = *(uint64_t (**)(void))(v0 + 8);
    return v10();
  }
}

uint64_t sub_1002524A0()
{
  uint64_t v13 = v0;
  if (*(unsigned char *)(v0 + 314))
  {
    uint64_t Strong = swift_unknownObjectWeakLoadStrong();
    *(void *)(v0 + 424) = Strong;
    if (Strong)
    {
      sub_10056B0A8((uint64_t *)&v9);
      *(_OWORD *)(v0 + 432) = v9;
      *(void *)(v0 + 448) = v10;
      *(_OWORD *)(v0 + 456) = v11;
      *(void *)(v0 + 472) = v12;
      *(void *)(v0 + 48sub_1007E6FC4(2, 18, 1, 0) = sub_1007FE0F0();
      uint64_t v5 = sub_1007FE0A0();
      uint64_t v2 = v6;
      *(void *)(v0 + 488) = v5;
      *(void *)(v0 + 496) = v6;
      uint64_t v7 = sub_1002525B8;
      uint64_t v1 = v5;
      goto LABEL_7;
    }
    swift_release();
    uint64_t v1 = *(void *)(v0 + 360);
    uint64_t v2 = *(void *)(v0 + 368);
    uint64_t v3 = sub_100252B7C;
  }
  else
  {
    swift_release();
    uint64_t v1 = *(void *)(v0 + 360);
    uint64_t v2 = *(void *)(v0 + 368);
    uint64_t v3 = sub_100252AE0;
  }
  uint64_t v7 = v3;
LABEL_7:
  return _swift_task_switch(v7, v1, v2);
}

uint64_t sub_1002525B8()
{
  long long v7 = *(_OWORD *)(v0 + 448);
  long long v8 = *(_OWORD *)(v0 + 464);
  long long v6 = *(_OWORD *)(v0 + 432);
  uint64_t v1 = *(void *)(v0 + 424);
  uint64_t v2 = sub_1007FE0F0();
  *(void *)(v0 + 504) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 512) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = v8;
  *(void *)(v3 + 64) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 52sub_1007E6FC4(2, 18, 1, 0) = v4;
  void *v4 = v0;
  v4[1] = sub_1002526F8;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 313, v2, &protocol witness table for MainActor, 0xD000000000000037, 0x8000000100907E90, sub_10025622C, v3, &type metadata for Bool);
}

uint64_t sub_1002526F8()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 496);
  uint64_t v3 = *(void *)(v1 + 488);
  return _swift_task_switch(sub_100252858, v3, v2);
}

uint64_t sub_100252858()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 315) = *(unsigned char *)(v0 + 313);
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = *(void *)(v0 + 416);
  return _swift_task_switch(sub_1002528EC, v1, v2);
}

uint64_t sub_1002528EC()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 360);
  uint64_t v2 = *(void *)(v0 + 368);
  return _swift_task_switch(sub_10025295C, v1, v2);
}

uint64_t sub_10025295C()
{
  int v1 = *(unsigned __int8 *)(v0 + 315);
  swift_release();
  if (v1 == 1)
  {
    swift_getObjectType();
    sub_1007FC370();
    sub_100071814(v0 + 320);
    swift_unknownObjectRelease();
  }
  else
  {
    sub_100071814(v0 + 320);
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v2 = sub_1007F6BC0();
    sub_10005B838(v2, (uint64_t)qword_100B26EE0);
    uint64_t v3 = sub_1007F6BA0();
    os_log_type_t v4 = sub_1007FE3E0();
    if (os_log_type_enabled(v3, v4))
    {
      uint64_t v5 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v5 = 0;
      _os_log_impl((void *)&_mh_execute_header, v3, v4, "User cancelled remove highlights", v5, 2u);
      swift_slowDealloc();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
  }
  long long v6 = *(uint64_t (**)(void))(v0 + 8);
  return v6();
}

uint64_t sub_100252AE0()
{
  swift_release();
  swift_getObjectType();
  sub_1007FC370();
  sub_100071814(v0 + 320);
  swift_unknownObjectRelease();
  int v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100252B7C()
{
  swift_release();
  sub_100071814(v0 + 320);
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1007F6BC0();
  sub_10005B838(v1, (uint64_t)qword_100B26EE0);
  uint64_t v2 = sub_1007F6BA0();
  os_log_type_t v3 = sub_1007FE3E0();
  if (os_log_type_enabled(v2, v3))
  {
    os_log_type_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)os_log_type_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "User cancelled remove highlights", v4, 2u);
    swift_slowDealloc();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_100252CC0()
{
  v1[40] = v0;
  v1[41] = sub_1007FE100();
  v1[42] = sub_1007FE0F0();
  uint64_t v3 = sub_1007FE0A0();
  v1[43] = v3;
  v1[44] = v2;
  return _swift_task_switch(sub_100252D5C, v3, v2);
}

uint64_t sub_100252D5C()
{
  sub_10025608C(v0 + 2);
  sub_100058CB4((uint64_t)(v0 + 37), (uint64_t)(v0 + 39), (uint64_t *)&unk_100B39E50);
  sub_100058CB4((uint64_t)(v0 + 39), (uint64_t)(v0 + 38), (uint64_t *)&unk_100B39E50);
  uint64_t v1 = v0[38];
  v0[45] = v1;
  if (v1
    && (uint64_t v2 = v0[40], Strong = swift_unknownObjectWeakLoadStrong(),
                     v0[46] = Strong,
                     v0[47] = *(void *)(v2 + 72),
                     Strong))
  {
    sub_100071840((uint64_t)(v0 + 39));
    v0[48] = sub_1007FE0F0();
    uint64_t v5 = sub_1007FE0A0();
    v0[49] = v5;
    v0[50] = v4;
    return _swift_task_switch(sub_100252F4C, v5, v4);
  }
  else
  {
    swift_release();
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1007F6BC0();
    sub_10005B838(v6, (uint64_t)qword_100B26EE0);
    uint64_t v7 = sub_1007F6BA0();
    os_log_type_t v8 = sub_1007FE3C0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v9 = 0;
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "Unable to perform remove notes. Missing state and/or annotation provider", v9, 2u);
      swift_slowDealloc();
    }

    uint64_t v10 = (uint64_t (*)(void))v0[1];
    return v10();
  }
}

uint64_t sub_100252F4C()
{
  uint64_t v12 = v0;
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  *(void *)(v0 + 408) = Strong;
  if (Strong)
  {
    sub_10056B3C0((uint64_t *)&v8);
    *(_OWORD *)(v0 + 416) = v8;
    *(void *)(v0 + 432) = v9;
    *(_OWORD *)(v0 + 44sub_1007E6FC4(2, 18, 1, 0) = v10;
    *(void *)(v0 + 456) = v11;
    *(void *)(v0 + 464) = sub_1007FE0F0();
    uint64_t v2 = sub_1007FE0A0();
    uint64_t v4 = v3;
    *(void *)(v0 + 472) = v2;
    *(void *)(v0 + 48sub_1007E6FC4(2, 18, 1, 0) = v3;
    uint64_t v5 = sub_100253040;
    uint64_t v6 = v2;
  }
  else
  {
    swift_release();
    uint64_t v6 = *(void *)(v0 + 344);
    uint64_t v4 = *(void *)(v0 + 352);
    uint64_t v5 = sub_1002535B4;
  }
  return _swift_task_switch(v5, v6, v4);
}

uint64_t sub_100253040()
{
  long long v7 = *(_OWORD *)(v0 + 432);
  long long v8 = *(_OWORD *)(v0 + 448);
  long long v6 = *(_OWORD *)(v0 + 416);
  uint64_t v1 = *(void *)(v0 + 408);
  uint64_t v2 = sub_1007FE0F0();
  *(void *)(v0 + 488) = v2;
  uint64_t v3 = swift_task_alloc();
  *(void *)(v0 + 496) = v3;
  *(_OWORD *)(v3 + 16) = v6;
  *(_OWORD *)(v3 + 32) = v7;
  *(_OWORD *)(v3 + 48) = v8;
  *(void *)(v3 + 64) = v1;
  uint64_t v4 = (void *)swift_task_alloc();
  *(void *)(v0 + 504) = v4;
  void *v4 = v0;
  v4[1] = sub_100253180;
  return withCheckedContinuation<A>(isolation:function:_:)(v0 + 520, v2, &protocol witness table for MainActor, 0xD000000000000037, 0x8000000100907E90, sub_10025622C, v3, &type metadata for Bool);
}

uint64_t sub_100253180()
{
  uint64_t v1 = *v0;
  swift_task_dealloc();
  swift_release();
  swift_task_dealloc();
  uint64_t v2 = *(void *)(v1 + 480);
  uint64_t v3 = *(void *)(v1 + 472);
  return _swift_task_switch(sub_1002532E0, v3, v2);
}

uint64_t sub_1002532E0()
{
  swift_release();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  *(unsigned char *)(v0 + 521) = *(unsigned char *)(v0 + 520);
  uint64_t v1 = *(void *)(v0 + 392);
  uint64_t v2 = *(void *)(v0 + 400);
  return _swift_task_switch(sub_100253374, v1, v2);
}

uint64_t sub_100253374()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(void *)(v0 + 344);
  uint64_t v2 = *(void *)(v0 + 352);
  return _swift_task_switch(sub_1002533E4, v1, v2);
}

uint64_t sub_1002533E4()
{
  if (*(unsigned char *)(v0 + 521))
  {
    uint64_t v1 = *(void *)(v0 + 360);
    uint64_t ObjectType = swift_getObjectType();
    uint64_t v3 = (void *)swift_task_alloc();
    *(void *)(v0 + 512) = v3;
    void *v3 = v0;
    v3[1] = sub_1002536F8;
    uint64_t v4 = *(void *)(v0 + 376);
    return dispatch thunk of AnnotationProviding.deleteAssociatedNotesFromAnnotationsWithUUIDs(_:)(v1, ObjectType, v4);
  }
  else
  {
    swift_release();
    sub_100071814(v0 + 312);
    if (qword_100B22500 != -1) {
      swift_once();
    }
    uint64_t v5 = sub_1007F6BC0();
    sub_10005B838(v5, (uint64_t)qword_100B26EE0);
    long long v6 = sub_1007F6BA0();
    os_log_type_t v7 = sub_1007FE3E0();
    if (os_log_type_enabled(v6, v7))
    {
      long long v8 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v8 = 0;
      _os_log_impl((void *)&_mh_execute_header, v6, v7, "User cancelled remove notes", v8, 2u);
      swift_slowDealloc();

      swift_unknownObjectRelease();
    }
    else
    {
      swift_unknownObjectRelease();
    }
    uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
    return v9();
  }
}

uint64_t sub_1002535B4()
{
  swift_release();
  sub_100071814(v0 + 312);
  if (qword_100B22500 != -1) {
    swift_once();
  }
  uint64_t v1 = sub_1007F6BC0();
  sub_10005B838(v1, (uint64_t)qword_100B26EE0);
  uint64_t v2 = sub_1007F6BA0();
  os_log_type_t v3 = sub_1007FE3E0();
  if (os_log_type_enabled(v2, v3))
  {
    uint64_t v4 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v4 = 0;
    _os_log_impl((void *)&_mh_execute_header, v2, v3, "User cancelled remove notes", v4, 2u);
    swift_slowDealloc();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_unknownObjectRelease();
  }
  uint64_t v5 = *(uint64_t (**)(void))(v0 + 8);
  return v5();
}

uint64_t sub_1002536F8()
{
  uint64_t v1 = *v0;
  uint64_t v2 = *v0 + 312;
  swift_task_dealloc();
  sub_100071814(v2);
  uint64_t v3 = *(void *)(v1 + 352);
  uint64_t v4 = *(void *)(v1 + 344);
  return _swift_task_switch(sub_10025382C, v4, v3);
}

uint64_t sub_10025382C()
{
  swift_release();
  swift_unknownObjectRelease();
  uint64_t v1 = *(uint64_t (**)(void))(v0 + 8);
  return v1();
}

uint64_t sub_100253898(uint64_t a1, uint64_t a2, uint64_t a3)
{
  void v4[5] = a3;
  v4[6] = v3;
  void v4[3] = a1;
  void v4[4] = a2;
  sub_100058D18((uint64_t *)&unk_100B27090);
  v4[7] = swift_task_alloc();
  uint64_t v5 = sub_100058D18(&qword_100B38D10);
  v4[8] = v5;
  v4[9] = *(void *)(v5 - 8);
  v4[10] = swift_task_alloc();
  sub_1007FE100();
  v4[11] = sub_1007FE0F0();
  uint64_t v7 = sub_1007FE0A0();
  v4[12] = v7;
  v4[13] = v6;
  return _swift_task_switch(sub_1002539C4, v7, v6);
}

uint64_t sub_1002539C4()
{
  if (v0[5] && (uint64_t Strong = swift_weakLoadStrong(), (v0[14] = Strong) != 0))
  {
    uint64_t v2 = v0[5];
    uint64_t v3 = (void *)swift_task_alloc();
    v0[15] = v3;
    void *v3 = v0;
    v3[1] = sub_100253B1C;
    uint64_t v4 = v0[4];
    return BookContentModule.rects(forCFI:clippedToBounds:)(v4, v2, 1);
  }
  else
  {
    swift_release();
    uint64_t v5 = v0[3];
    uint64_t v6 = sub_100058D18((uint64_t *)&unk_100B27070);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v6 - 8) + 56))(v5, 1, 1, v6);
    swift_task_dealloc();
    swift_task_dealloc();
    uint64_t v7 = (uint64_t (*)(void))v0[1];
    return v7();
  }
}

uint64_t sub_100253B1C(uint64_t a1)
{
  uint64_t v2 = *v1;
  *(void *)(*v1 + 128) = a1;
  swift_task_dealloc();
  uint64_t v3 = *(void *)(v2 + 104);
  uint64_t v4 = *(void *)(v2 + 96);
  return _swift_task_switch(sub_100253C44, v4, v3);
}

uint64_t sub_100253C44()
{
  uint64_t v1 = v0[16];
  swift_release();
  if (!v1)
  {
    swift_release();
    goto LABEL_5;
  }
  v0[2] = v0[16];
  uint64_t v2 = v0[8];
  uint64_t v3 = v0[9];
  uint64_t v4 = v0[7];
  sub_100058D18(&qword_100B270A8);
  sub_100043334(&qword_100B270B0, &qword_100B270A8);
  sub_1007FB970();
  swift_bridgeObjectRelease();
  if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v3 + 48))(v4, 1, v2) == 1)
  {
    uint64_t v5 = v0[7];
    swift_release();
    sub_10005AFE8(v5, (uint64_t *)&unk_100B27090);
LABEL_5:
    uint64_t v6 = v0[3];
    uint64_t v7 = sub_100058D18((uint64_t *)&unk_100B27070);
    (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v7 - 8) + 56))(v6, 1, 1, v7);
    goto LABEL_7;
  }
  uint64_t v9 = v0[9];
  uint64_t v8 = v0[10];
  uint64_t v10 = v0[8];
  (*(void (**)(uint64_t, void, uint64_t))(v9 + 32))(v8, v0[7], v10);
  sub_1007FAA60();
  swift_release();
  (*(void (**)(uint64_t, uint64_t))(v9 + 8))(v8, v10);
LABEL_7:
  swift_task_dealloc();
  swift_task_dealloc();
  uint64_t v11 = (uint64_t (*)(void))v0[1];
  return v11();
}

uint64_t sub_100253E30()
{
  uint64_t v0 = sub_1007FD170();
  if (v1)
  {
    uint64_t v2 = v0;
    sub_10022DF20();
    swift_bridgeObjectRetain();
    char v3 = sub_1007FE2B0();
    swift_bridgeObjectRelease();
    swift_unknownObjectRelease();
    if ((v3 & 1) == 0)
    {
      swift_bridgeObjectRelease();
      return 0;
    }
  }
  else
  {
    swift_unknownObjectRelease();
    return 0;
  }
  return v2;
}

uint64_t sub_100253EEC@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X8>)
{
  v25[1] = a3;
  uint64_t v7 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v25 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007FAE10();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)v25 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B044(a1, (uint64_t)v9, &qword_100B270F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v9, 1, v10) == 1)
  {

    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    uint64_t result = sub_10005AFE8((uint64_t)v9, &qword_100B270F8);
LABEL_8:
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v18 = 0;
    uint64_t v17 = 0;
    goto LABEL_10;
  }
  v25[0] = a1;
  (*(void (**)(char *, char *, uint64_t))(v11 + 32))(v13, v9, v10);
  uint64_t v15 = sub_1007FD170();
  uint64_t v17 = v16;
  if (!v16)
  {

    swift_unknownObjectRelease();
    sub_10005AFE8(v25[0], &qword_100B270F8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v21 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t v18 = 0;
    goto LABEL_10;
  }
  uint64_t v18 = v15;
  void v25[2] = sub_1007FADD0();
  _OWORD v25[3] = v19;
  sub_10022DF20();
  char v20 = sub_1007FE2B0();
  swift_bridgeObjectRelease();
  if ((v20 & 1) == 0 || (BookProviderService.areCitationsAllowed.getter() & 1) == 0)
  {

    swift_unknownObjectRelease();
    swift_bridgeObjectRelease();
    sub_10005AFE8(v25[0], &qword_100B270F8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    goto LABEL_8;
  }
  uint64_t v21 = sub_1007FADC0();
  uint64_t v23 = v22;
  uint64_t v24 = sub_1007FADE0();

  swift_unknownObjectRelease();
  sub_10005AFE8(v25[0], &qword_100B270F8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v11 + 8))(v13, v10);
LABEL_10:
  *(void *)a4 = v21;
  *(void *)(a4 + 8) = v23;
  *(void *)(a4 + 16) = v24;
  *(void *)(a4 + 24) = v18;
  *(void *)(a4 + 32) = v17;
  *(unsigned char *)(a4 + 4sub_1007E6FC4(2, 18, 1, 0) = 0;
  return result;
}

void *sub_1002541F0@<X0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t *a6@<X8>)
{
  uint64_t v12 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v12 - 8);
  uint64_t v14 = (char *)&v32 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v32 - v16;
  if (sub_1007FD150() & 1) != 0 && (BookProviderService.areCitationsAllowed.getter())
  {
    uint64_t v36 = a4;
    uint64_t v37 = a5;
    uint64_t v35 = a1;
    sub_10005B044(a1, (uint64_t)v17, &qword_100B270F8);
    uint64_t v18 = sub_1007FAE10();
    uint64_t v19 = *(void *)(v18 - 8);
    NSString v34 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v19 + 48);
    int v20 = v34(v17, 1, v18);
    uint64_t v33 = v19;
    if (v20 == 1)
    {
      sub_10005AFE8((uint64_t)v17, &qword_100B270F8);
      uint64_t v21 = 0;
      uint64_t v22 = 0;
    }
    else
    {
      uint64_t v21 = sub_1007FADC0();
      uint64_t v22 = v26;
      (*(void (**)(char *, uint64_t))(v19 + 8))(v17, v18);
    }
    uint64_t v27 = v35;
    sub_10005B044(v35, (uint64_t)v14, &qword_100B270F8);
    int v28 = v34(v14, 1, v18);
    uint64_t v29 = v27;
    uint64_t v30 = v37;
    if (v28 == 1)
    {

      sub_10005AFE8(v29, &qword_100B270F8);
      sub_10005AFE8((uint64_t)v14, &qword_100B270F8);
      uint64_t v23 = 0;
    }
    else
    {
      uint64_t v31 = v18;
      uint64_t v23 = sub_1007FADE0();

      sub_10005AFE8(v29, &qword_100B270F8);
      (*(void (**)(char *, uint64_t))(v33 + 8))(v14, v31);
    }
    uint64_t result = (void *)swift_allocObject();
    result[2] = v36;
    result[3] = v30;
    result[4] = a3;
    uint64_t v24 = sub_100256D14;
  }
  else
  {

    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    uint64_t v24 = 0;
    uint64_t result = 0;
  }
  *a6 = v21;
  a6[1] = v22;
  a6[2] = v23;
  a6[3] = (uint64_t)v24;
  a6[4] = (uint64_t)result;
  return result;
}

uint64_t sub_1002544C4@<X0>(uint64_t a1@<X0>, uint64_t a2@<X1>, uint64_t a3@<X8>)
{
  uint64_t v6 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v6 - 8);
  uint64_t v8 = &v47[-((v7 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v9 = sub_1007FAE10();
  uint64_t v10 = *(void *)(v9 - 8);
  __chkstk_darwin(v9);
  uint64_t v12 = &v47[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  sub_10005B044(a1, (uint64_t)v8, &qword_100B270F8);
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v10 + 48))(v8, 1, v9) == 1)
  {
    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    uint64_t result = sub_10005AFE8((uint64_t)v8, &qword_100B270F8);
LABEL_8:
    uint64_t v19 = 0;
    uint64_t v20 = 0;
    uint64_t v21 = 0;
    uint64_t v22 = 0;
    uint64_t v23 = 0;
    unint64_t v24 = 0;
    uint64_t v25 = 0;
    uint64_t v26 = 0;
    uint64_t v27 = 0;
    uint64_t v28 = 0;
    uint64_t v29 = 0;
    char v30 = 0;
    goto LABEL_32;
  }
  (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v10 + 32))(v12, v8, v9);
  uint64_t v56 = sub_1007FADD0();
  uint64_t v57 = v14;
  sub_10022DF20();
  char v15 = sub_1007FE2B0();
  swift_bridgeObjectRelease();
  if ((v15 & 1) == 0)
  {
    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v10 + 8))(v12, v9);
    goto LABEL_8;
  }
  sub_1007FADF0();
  if (v16 && (uint64_t v17 = sub_1007FC330(), swift_bridgeObjectRelease(), v17))
  {
    char v18 = sub_1007FD4B0();
    swift_release();
    uint64_t v50 = v18 & 1;
  }
  else
  {
    uint64_t v50 = 0;
  }
  uint64_t v31 = sub_1007FADF0();
  uint64_t v53 = a2;
  uint64_t v54 = a1;
  uint64_t v51 = v10;
  uint64_t v52 = v9;
  if (v32)
  {
    uint64_t v55 = v31;
    uint64_t v49 = v32;
    int v33 = 1;
LABEL_24:
    int v48 = v33;
    goto LABEL_25;
  }
  uint64_t v34 = sub_1007FADA0();
  if (!v35)
  {
LABEL_23:
    uint64_t v55 = 0;
    uint64_t v49 = 0;
    int v33 = 255;
    goto LABEL_24;
  }
  uint64_t v55 = v34;
  uint64_t v36 = v35;
  swift_bridgeObjectRetain();
  uint64_t v37 = sub_1007FADC0();
  if (v38)
  {
    if (v55 == v37 && v36 == v38)
    {
      swift_bridgeObjectRelease_n();
    }
    else
    {
      uint64_t v40 = v36;
      char v41 = sub_1007FF470();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      if ((v41 & 1) == 0)
      {
        int v48 = 0;
        uint64_t v49 = v40;
        goto LABEL_25;
      }
    }
    swift_bridgeObjectRelease();
    goto LABEL_23;
  }
  uint64_t v49 = v36;
  swift_bridgeObjectRelease();
  int v48 = 0;
LABEL_25:
  uint64_t v19 = sub_1007FADC0();
  uint64_t v20 = v42;
  uint64_t v21 = sub_1007FADD0();
  uint64_t v22 = v43;
  uint64_t v44 = sub_1007FAD90();
  if (v45) {
    uint64_t v23 = v44;
  }
  else {
    uint64_t v23 = 0;
  }
  if (v45) {
    unint64_t v24 = v45;
  }
  else {
    unint64_t v24 = 0xE000000000000000;
  }
  uint64_t v25 = sub_1007FADF0();
  uint64_t v26 = v46;
  swift_unknownObjectRelease();
  sub_10005AFE8(v54, &qword_100B270F8);
  uint64_t result = (*(uint64_t (**)(unsigned char *, uint64_t))(v51 + 8))(v12, v52);
  uint64_t v29 = v49;
  uint64_t v27 = v50;
  uint64_t v28 = v55;
  char v30 = v48;
LABEL_32:
  *(void *)a3 = v19;
  *(void *)(a3 + 8) = v20;
  *(void *)(a3 + 16) = v21;
  *(void *)(a3 + 24) = v22;
  *(void *)(a3 + 32) = v23;
  *(void *)(a3 + 4sub_1007E6FC4(2, 18, 1, 0) = v24;
  *(void *)(a3 + 48) = v25;
  *(void *)(a3 + 56) = v26;
  *(void *)(a3 + 64) = v27;
  *(void *)(a3 + 72) = v28;
  *(void *)(a3 + 8sub_1007E6FC4(2, 18, 1, 0) = v29;
  *(unsigned char *)(a3 + 88) = v30;
  return result;
}

uint64_t sub_1002548BC(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)&v17 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1007FAE10();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)&v17 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B044(a1, (uint64_t)v4, &qword_100B270F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    sub_10005AFE8((uint64_t)v4, &qword_100B270F8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  uint64_t v20 = sub_1007FAE00();
  sub_100058D18((uint64_t *)&unk_100B27110);
  sub_100043334((unint64_t *)&qword_100B27750, (uint64_t *)&unk_100B27110);
  char v9 = sub_1007FE2B0();
  swift_bridgeObjectRelease();
  if ((v9 & 1) == 0)
  {
    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  uint64_t v10 = sub_1007FAE00();
  uint64_t v11 = *(void *)(v10 + 16);
  if (v11)
  {
    uint64_t v18 = v5;
    uint64_t v19 = a1;
    uint64_t v17 = v10;
    uint64_t v12 = (uint64_t *)(v10 + 40);
    do
    {
      uint64_t v13 = *v12;
      uint64_t v20 = *(v12 - 1);
      uint64_t v21 = v13;
      swift_bridgeObjectRetain();
      char v14 = sub_100255070();
      swift_bridgeObjectRelease();
      if (v14) {
        break;
      }
      v12 += 2;
      --v11;
    }
    while (v11);
    swift_bridgeObjectRelease();
    uint64_t v5 = v18;
    a1 = v19;
  }
  else
  {
    swift_bridgeObjectRelease();
  }
  uint64_t v15 = sub_1007FAE00();
  swift_unknownObjectRelease();
  sub_10005AFE8(a1, &qword_100B270F8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v15;
}

uint64_t sub_100254BC4(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  uint64_t v8 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v8 - 8);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1007FAE10();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)v20 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B044(a1, (uint64_t)v10, &qword_100B270F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    swift_unknownObjectRelease();
    sub_10005AFE8(a1, &qword_100B270F8);
    sub_10005AFE8((uint64_t)v10, &qword_100B270F8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  uint64_t v15 = sub_1007FAE00();
  __chkstk_darwin(v15);
  v20[-4] = a3;
  v20[-3] = a4;
  v20[-2] = a2;
  uint64_t v17 = sub_100414358((uint64_t)sub_100256CB8, (uint64_t)&v20[-6], v16);
  v20[0] = v17;
  swift_bridgeObjectRetain();
  sub_100058D18((uint64_t *)&unk_100B27110);
  sub_100043334((unint64_t *)&qword_100B27750, (uint64_t *)&unk_100B27110);
  char v18 = sub_1007FE2B0();
  swift_unknownObjectRelease();
  sub_10005AFE8(a1, &qword_100B270F8);
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  if ((v18 & 1) == 0)
  {
    swift_bridgeObjectRelease();
    return 0;
  }
  return v17;
}

BOOL sub_100254E5C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = swift_allocObject();
  *(void *)(v4 + 16) = 0;
  uint64_t v5 = (void *)swift_allocObject();
  id v5[2] = v4;
  v5[3] = a1;
  void v5[4] = a2;
  swift_retain();
  sub_100058D18((uint64_t *)&unk_100B27120);
  sub_10022ED00();
  sub_100043334((unint64_t *)&unk_100B3C790, (uint64_t *)&unk_100B27120);
  sub_1007FEE50();
  swift_release();
  swift_beginAccess();
  uint64_t v6 = *(void *)(v4 + 16);
  swift_release();
  return v6 >= a1 && v6 <= a2;
}

uint64_t sub_100254FD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7, uint64_t a8, uint64_t a9, uint64_t a10)
{
  if (a2)
  {
    sub_10022DF20();
    uint64_t result = sub_1007FE2B0();
    if (result)
    {
      uint64_t result = swift_beginAccess();
      uint64_t v13 = *(void *)(a8 + 16) + 1;
      if (__OFADD__(*(void *)(a8 + 16), 1))
      {
        __break(1u);
      }
      else
      {
        *(void *)(a8 + 16) = v13;
        if (v13 > a10) {
          *a7 = 1;
        }
      }
    }
  }
  return result;
}

uint64_t sub_100255070()
{
  uint64_t result = sub_1007FC330();
  if (result)
  {
    char v1 = sub_1007FD4B0();
    swift_release();
    return v1 & 1;
  }
  return result;
}

void sub_1002550C8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8)
{
  uint64_t v54 = a6;
  uint64_t v55 = a8;
  uint64_t v52 = a4;
  uint64_t v53 = a7;
  uint64_t v49 = a5;
  uint64_t v50 = a3;
  uint64_t v51 = a2;
  uint64_t v48 = sub_1007F2CE0();
  uint64_t v9 = *(void *)(v48 - 8);
  uint64_t v10 = __chkstk_darwin(v48);
  uint64_t v47 = (char *)&v46 - ((v11 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v13 = (char *)&v46 - v12;
  uint64_t v46 = sub_1007FDBF0();
  uint64_t v14 = *(void *)(v46 - 8);
  uint64_t v15 = __chkstk_darwin(v46);
  uint64_t v17 = (char *)&v46 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v19 = (char *)&v46 - v18;
  uint64_t v20 = sub_100058D18(&qword_100B3B1A0);
  uint64_t v21 = *(void *)(v20 - 8);
  uint64_t v22 = *(void *)(v21 + 64);
  __chkstk_darwin(v20);
  uint64_t v23 = (char *)&v46 - ((v22 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v21 + 16))(v23, a1, v20);
  unint64_t v24 = (*(unsigned __int8 *)(v21 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80);
  uint64_t v25 = swift_allocObject();
  (*(void (**)(unint64_t, char *, uint64_t))(v21 + 32))(v25 + v24, v23, v20);
  uint64_t v26 = v25;
  sub_1007FDB70();
  sub_1007F2C80();
  uint64_t v27 = v46;
  (*(void (**)(char *, char *, uint64_t))(v14 + 16))(v17, v19, v46);
  type metadata accessor for BundleFinder();
  uint64_t ObjCClassFromMetadata = swift_getObjCClassFromMetadata();
  id v29 = [self bundleForClass:ObjCClassFromMetadata];
  uint64_t v30 = v48;
  (*(void (**)(char *, char *, uint64_t))(v9 + 16))(v47, v13, v48);
  sub_1007FDCF0();
  (*(void (**)(char *, uint64_t))(v9 + 8))(v13, v30);
  (*(void (**)(char *, uint64_t))(v14 + 8))(v19, v27);
  swift_bridgeObjectRetain();
  swift_bridgeObjectRetain();
  NSString v31 = sub_1007FDC30();
  swift_bridgeObjectRelease();
  NSString v32 = sub_1007FDC30();
  swift_bridgeObjectRelease();
  id v33 = [self alertControllerWithTitle:v31 message:v32 preferredStyle:1];

  uint64_t v34 = swift_allocObject();
  *(void *)(v34 + 16) = sub_1002562C4;
  *(void *)(v34 + 24) = v26;
  swift_retain();
  NSString v35 = sub_1007FDC30();
  swift_bridgeObjectRelease();
  long long v60 = sub_100256338;
  uint64_t v61 = v34;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v57 = 1107296256;
  uint64_t v58 = sub_10000B4B4;
  long long v59 = &unk_100A4FDD0;
  uint64_t v36 = _Block_copy(&aBlock);
  swift_release();
  uint64_t v37 = self;
  id v38 = [v37 actionWithTitle:v35 style:1 handler:v36];
  _Block_release(v36);

  [v33 addAction:v38];
  uint64_t v39 = swift_allocObject();
  *(void *)(v39 + 16) = sub_1002562C4;
  *(void *)(v39 + 24) = v26;
  swift_retain();
  swift_bridgeObjectRetain();
  NSString v40 = sub_1007FDC30();
  swift_bridgeObjectRelease();
  long long v60 = sub_100256378;
  uint64_t v61 = v39;
  long long aBlock = _NSConcreteStackBlock;
  uint64_t v57 = 1107296256;
  uint64_t v58 = sub_10000B4B4;
  long long v59 = &unk_100A4FE20;
  char v41 = _Block_copy(&aBlock);
  swift_release();
  id v42 = [v37 actionWithTitle:v40 style:2 handler:v41];
  uint64_t v43 = v41;
  uint64_t v44 = v55;
  _Block_release(v43);

  [v33 addAction:v42];
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    [Strong assetViewController:v44 presentViewController:v33 animated:1 completion:0];
    swift_release();

    swift_unknownObjectRelease();
  }
  else
  {
    swift_release();
  }
}

uint64_t sub_10025571C(uint64_t a1)
{
  uint64_t v2 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v2 - 8);
  uint64_t v4 = (char *)v13 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1007FAE10();
  uint64_t v6 = *(void *)(v5 - 8);
  __chkstk_darwin(v5);
  uint64_t v8 = (char *)v13 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B044(a1, (uint64_t)v4, &qword_100B270F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v6 + 48))(v4, 1, v5) == 1)
  {
    sub_10005AFE8(a1, &qword_100B270F8);
    sub_10005AFE8((uint64_t)v4, &qword_100B270F8);
    return 0;
  }
  (*(void (**)(char *, char *, uint64_t))(v6 + 32))(v8, v4, v5);
  v13[0] = sub_1007FADD0();
  v13[1] = v9;
  sub_10022DF20();
  char v10 = sub_1007FE2B0();
  swift_bridgeObjectRelease();
  if ((v10 & 1) == 0)
  {
    sub_10005AFE8(a1, &qword_100B270F8);
    (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
    return 0;
  }
  uint64_t v11 = sub_1007FADD0();
  sub_10005AFE8(a1, &qword_100B270F8);
  (*(void (**)(char *, uint64_t))(v6 + 8))(v8, v5);
  return v11;
}

uint64_t sub_100255940@<X0>(uint64_t a1@<X0>, uint64_t a2@<X8>)
{
  uint64_t v4 = sub_1007F2560();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v30 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v8 - 8);
  char v10 = (char *)&v30 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_1007FAE10();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v30 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B044(a1, (uint64_t)v10, &qword_100B270F8);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v12 + 48))(v10, 1, v11) == 1)
  {
    sub_10005AFE8(a1, &qword_100B270F8);
    uint64_t result = sub_10005AFE8((uint64_t)v10, &qword_100B270F8);
LABEL_6:
    uint64_t v28 = 0;
    uint64_t v19 = 0;
    uint64_t v21 = 0;
    uint64_t v24 = 0;
    uint64_t v26 = 0;
    BOOL v29 = 0;
    goto LABEL_7;
  }
  (*(void (**)(char *, char *, uint64_t))(v12 + 32))(v14, v10, v11);
  sub_1007FADD0();
  BOOL v16 = sub_100254E5C(1, 3);
  swift_bridgeObjectRelease();
  if (!v16)
  {
    sub_10005AFE8(a1, &qword_100B270F8);
    uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
    goto LABEL_6;
  }
  uint64_t v17 = sub_1007FADC0();
  uint64_t v32 = v4;
  uint64_t v33 = v17;
  uint64_t v31 = v5;
  uint64_t v19 = v18;
  uint64_t v20 = v7;
  uint64_t v21 = sub_1007FADE0();
  uint64_t v34 = sub_1007FADD0();
  uint64_t v35 = v22;
  sub_1007F2540();
  sub_10022ED00();
  uint64_t v23 = sub_1007FEE40();
  uint64_t v30 = a1;
  uint64_t v24 = v23;
  uint64_t v26 = v25;
  (*(void (**)(char *, uint64_t))(v31 + 8))(v20, v32);
  swift_bridgeObjectRelease();
  char v27 = sub_1007FADB0();
  sub_10005AFE8(v30, &qword_100B270F8);
  uint64_t result = (*(uint64_t (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  uint64_t v28 = v33;
  BOOL v29 = (v27 & 1) == 0;
LABEL_7:
  *(void *)a2 = v28;
  *(void *)(a2 + 8) = v19;
  *(void *)(a2 + 16) = v21;
  *(void *)(a2 + 24) = v24;
  *(void *)(a2 + 32) = v26;
  *(unsigned char *)(a2 + 4sub_1007E6FC4(2, 18, 1, 0) = v29;
  return result;
}

double sub_100255C78@<D0>(uint64_t a1@<X0>, void *a2@<X1>, uint64_t a3@<X2>, uint64_t a4@<X3>, uint64_t a5@<X4>, uint64_t a6@<X5>, uint64_t a7@<X6>, uint64_t a8@<X7>, uint64_t a9@<X8>)
{
  uint64_t v54 = a8;
  uint64_t v17 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v17 - 8);
  uint64_t v19 = (char *)&v34 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  uint64_t v56 = sub_10025571C((uint64_t)v19);
  uint64_t v55 = v20;
  swift_unknownObjectRetain();
  uint64_t v53 = sub_100253E30();
  uint64_t v52 = v21;
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  sub_100255940((uint64_t)v19, (uint64_t)v57);
  long long v51 = v57[0];
  long long v50 = v57[1];
  uint64_t v49 = v58;
  int v48 = v59;
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  swift_unknownObjectRetain();
  id v22 = a2;
  sub_100253EEC((uint64_t)v19, v22, a3, (uint64_t)v60);
  long long v47 = v60[0];
  long long v46 = v60[1];
  uint64_t v45 = v61;
  int v44 = v62;
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  swift_unknownObjectRetain();
  sub_1002541F0((uint64_t)v19, v22, a3, a5, a7, (uint64_t *)v63);
  long long v43 = v63[0];
  long long v42 = v63[1];
  uint64_t v41 = v64;
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  swift_unknownObjectRetain();
  uint64_t v23 = v54;
  sub_1002544C4((uint64_t)v19, a4, (uint64_t)v65);
  long long v40 = v65[0];
  long long v39 = v65[1];
  long long v38 = v65[2];
  long long v37 = v65[3];
  long long v36 = v65[4];
  uint64_t v24 = v66;
  int v35 = v67;
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  swift_unknownObjectRetain();
  uint64_t v25 = sub_1002548BC((uint64_t)v19);
  LOBYTE(a5) = v26;
  sub_10005B044(a1, (uint64_t)v19, &qword_100B270F8);
  uint64_t v27 = sub_100254BC4((uint64_t)v19, a4, a6, v23);
  sub_10005AFE8(a1, &qword_100B270F8);
  uint64_t v28 = v55;
  *(void *)a9 = v56;
  *(void *)(a9 + 8) = v28;
  uint64_t v29 = v52;
  *(void *)(a9 + 16) = v53;
  *(void *)(a9 + 24) = v29;
  long long v30 = v50;
  *(_OWORD *)(a9 + 32) = v51;
  *(_OWORD *)(a9 + 48) = v30;
  *(void *)(a9 + 64) = v49;
  *(unsigned char *)(a9 + 72) = v48;
  long long v31 = v46;
  *(_OWORD *)(a9 + 8sub_1007E6FC4(2, 18, 1, 0) = v47;
  *(_OWORD *)(a9 + 96) = v31;
  *(void *)(a9 + 112) = v45;
  *(unsigned char *)(a9 + 12sub_1007E6FC4(2, 18, 1, 0) = v44;
  long long v32 = v42;
  *(_OWORD *)(a9 + 128) = v43;
  *(_OWORD *)(a9 + 144) = v32;
  *(void *)(a9 + 16sub_1007E6FC4(2, 18, 1, 0) = v41;
  *(_OWORD *)(a9 + 168) = v40;
  *(_OWORD *)(a9 + 184) = v39;
  *(_OWORD *)(a9 + 20sub_1007E6FC4(2, 18, 1, 0) = v38;
  *(_OWORD *)(a9 + 216) = v37;
  double result = *(double *)&v36;
  *(_OWORD *)(a9 + 232) = v36;
  *(void *)(a9 + 248) = v24;
  *(unsigned char *)(a9 + 256) = v35;
  *(void *)(a9 + 264) = v25;
  *(unsigned char *)(a9 + 272) = a5;
  *(void *)(a9 + 28sub_1007E6FC4(2, 18, 1, 0) = v27;
  return result;
}

void *sub_10025608C@<X0>(void *a1@<X8>)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100058D18(&qword_100B270F8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = &v13[-((v5 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v7);
  uint64_t v9 = &v13[-v8];
  if (swift_weakLoadStrong())
  {
    sub_1007FABE0();
    swift_release();
  }
  else
  {
    uint64_t v10 = sub_1007FAE10();
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(*(void *)(v10 - 8) + 56))(v9, 1, 1, v10);
  }
  uint64_t v11 = v1 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor_contentSelection;
  swift_beginAccess();
  sub_10005B044(v11, (uint64_t)v6, &qword_100B270F8);
  swift_beginAccess();
  sub_1002569DC((uint64_t)v9, v11);
  swift_endAccess();
  sub_100249F28((uint64_t)v6);
  sub_10005AFE8((uint64_t)v9, &qword_100B270F8);
  sub_10005AFE8((uint64_t)v6, &qword_100B270F8);
  return memcpy(a1, (const void *)(v2 + OBJC_IVAR____TtCC5Books19BookReaderPresenter26ContentSelectionInteractor__state), 0x120uLL);
}

uint64_t sub_100256230()
{
  uint64_t v1 = sub_100058D18(&qword_100B3B1A0);
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_1002562C4()
{
  sub_100058D18(&qword_100B3B1A0);

  return sub_10031E558();
}

uint64_t sub_100256338(uint64_t a1)
{
  return sub_10031E59C(a1, *(uint64_t (**)(void))(v1 + 16));
}

uint64_t sub_100256340()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100256378(uint64_t a1)
{
  return sub_10031E5C8(a1, *(uint64_t (**)(uint64_t))(v1 + 16));
}

void sub_100256380(uint64_t a1)
{
  sub_1002550C8(a1, v1[2], v1[3], v1[4], v1[5], v1[6], v1[7], v1[8]);
}

void sub_100256394(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    sub_100256418(a10, a11, a12);
  }
}

uint64_t sub_100256418(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10024ABE4();
  }
  return result;
}

uint64_t sub_100256430(uint64_t a1, void (*a2)(void, void, void, void, void, void, void, void, void, void, void, char))
{
  char v4 = *(unsigned char *)(a1 + 88);
  a2(*(void *)a1, *(void *)(a1 + 8), *(void *)(a1 + 16), *(void *)(a1 + 24), *(void *)(a1 + 32), *(void *)(a1 + 40), *(void *)(a1 + 48), *(void *)(a1 + 56), *(void *)(a1 + 64), *(void *)(a1 + 72), *(void *)(a1 + 80), v4);
  return a1;
}

void sub_100256494(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, uint64_t a7, uint64_t a8, uint64_t a9, uint64_t a10, uint64_t a11, unsigned __int8 a12)
{
  if (a4)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    sub_100256518(a10, a11, a12);
  }
}

uint64_t sub_100256518(uint64_t a1, uint64_t a2, unsigned __int8 a3)
{
  if (a3 != 255) {
    return sub_10024ACE8();
  }
  return result;
}

uint64_t sub_100256530(uint64_t a1)
{
  return a1;
}

uint64_t sub_100256564(uint64_t a1)
{
  return a1;
}

uint64_t sub_100256598()
{
  swift_weakDestroy();

  return swift_deallocObject();
}

uint64_t sub_1002565D4()
{
  return sub_1002566A8((uint64_t)&unk_100A4FEA8, (void (*)(uint64_t))sub_1002565F8);
}

uint64_t *sub_1002565FC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_100256634(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

uint64_t sub_100256688()
{
  return sub_1002566A8((uint64_t)&unk_100A4FEF8, (void (*)(uint64_t))sub_1002565F8);
}

uint64_t sub_1002566A8(uint64_t a1, void (*a2)(uint64_t))
{
  uint64_t v5 = *(void *)(sub_100058D18((uint64_t *)&unk_100B27060) - 8);
  return sub_10024EF1C(*(void *)(v2 + 16), v2 + ((*(unsigned __int8 *)(v5 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v5 + 80)), a1, a2);
}

uint64_t sub_100256728()
{
  uint64_t v1 = *(void *)(sub_100058D18((uint64_t *)&unk_100B27060) - 8);
  unint64_t v2 = (*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80);
  swift_release();
  uint64_t v3 = sub_1007FBA50();
  uint64_t v4 = *(void *)(v3 - 8);
  if (!(*(unsigned int (**)(unint64_t, uint64_t, uint64_t))(v4 + 48))(v0 + v2, 1, v3)) {
    (*(void (**)(unint64_t, uint64_t))(v4 + 8))(v0 + v2, v3);
  }

  return swift_deallocObject();
}

uint64_t sub_100256850()
{
  uint64_t v1 = *(void *)(sub_100058D18((uint64_t *)&unk_100B27060) - 8);
  return sub_10024F03C(*(void *)(v0 + 16), v0 + ((*(unsigned __int8 *)(v1 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v1 + 80)));
}

uint64_t *sub_1002568BC(uint64_t *a1)
{
  return a1;
}

uint64_t sub_1002568F0(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_bridgeObjectRetain();
    swift_retain();
    return swift_bridgeObjectRetain();
  }
  return result;
}

void sub_100256940()
{
  if ((*(unsigned char *)(v0 + 16) & 1) == 0)
  {
    uint64_t v1 = *(void *)(*(void *)(v0 + 24) + 96);
    uint64_t ObjectType = swift_getObjectType();
    (*(void (**)(uint64_t))(*(void *)(v1 + 8) + 8))(ObjectType);
  }
}

uint64_t sub_100256990()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_1002569D0(uint64_t a1)
{
  return sub_100250FD0(a1, *(void *)(v1 + 16), *(void *)(v1 + 24), *(void **)(v1 + 32));
}

uint64_t sub_1002569DC(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B270F8);
  (*(void (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v4 - 8) + 24))(a2, a1, v4);
  return a2;
}

unint64_t sub_100256A44()
{
  unint64_t result = qword_100B27108;
  if (!qword_100B27108)
  {
    sub_1007FAE10();
    unint64_t result = swift_getWitnessTable();
    atomic_store(result, (unint64_t *)&qword_100B27108);
  }
  return result;
}

uint64_t sub_100256A9C(uint64_t a1)
{
  uint64_t v2 = *(void *)(a1 + 32);
  uint64_t v3 = *(void *)(a1 + 40);
  uint64_t v4 = *(void *)(a1 + 48);
  uint64_t v5 = *(void *)(a1 + 56);
  uint64_t v6 = *(void *)(a1 + 64);
  uint64_t v13 = *(void *)(a1 + 88);
  uint64_t v14 = *(void *)(a1 + 80);
  uint64_t v11 = *(void *)(a1 + 104);
  uint64_t v12 = *(void *)(a1 + 96);
  uint64_t v10 = *(void *)(a1 + 112);
  uint64_t v18 = *(void *)(a1 + 136);
  uint64_t v19 = *(void *)(a1 + 128);
  uint64_t v16 = *(void *)(a1 + 152);
  uint64_t v17 = *(void *)(a1 + 144);
  uint64_t v26 = *(void *)(a1 + 176);
  uint64_t v27 = *(void *)(a1 + 168);
  uint64_t v24 = *(void *)(a1 + 192);
  uint64_t v25 = *(void *)(a1 + 184);
  uint64_t v22 = *(void *)(a1 + 208);
  uint64_t v23 = *(void *)(a1 + 200);
  uint64_t v20 = *(void *)(a1 + 224);
  uint64_t v21 = *(void *)(a1 + 216);
  long long v15 = *(_OWORD *)(a1 + 232);
  uint64_t v9 = *(void *)(a1 + 248);
  unsigned __int8 v7 = *(unsigned char *)(a1 + 256);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  sub_100256C18(v2, v3, v4, v5, v6);
  sub_100256C18(v14, v13, v12, v11, v10);
  sub_100256C68(v19, v18, v17, v16);
  sub_100256494(v27, v26, v25, v24, v23, v22, v21, v20, v15, *((uint64_t *)&v15 + 1), v9, v7);
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t sub_100256C18(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5)
{
  if (a5)
  {
    swift_bridgeObjectRelease();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100256C68(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4)
{
  if (a4)
  {
    swift_release();
    swift_bridgeObjectRelease();
    return swift_bridgeObjectRelease();
  }
  return result;
}

uint64_t sub_100256CB8()
{
  return sub_100255070() & 1;
}

uint64_t sub_100256CDC()
{
  swift_unknownObjectRelease();

  return swift_deallocObject();
}

uint64_t sub_100256D14()
{
  return sub_1007FD140();
}

uint64_t sub_100256D3C()
{
  return swift_deallocObject();
}

uint64_t sub_100256D4C()
{
  swift_release();

  return swift_deallocObject();
}

uint64_t sub_100256D84(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t a4, uint64_t a5, uint64_t a6, unsigned char *a7)
{
  return sub_100254FD8(a1, a2, a3, a4, a5, a6, a7, v7[2], v7[3], v7[4]);
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV11RemoveNotesVMa()
{
  return &_s26ContentSelectionInteractorC5StateV11RemoveNotesVN;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwCP(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwca(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwtk(uint64_t result, uint64_t *a2)
{
  uint64_t v2 = *a2;
  *(unsigned char *)(result + 8) = *((unsigned char *)a2 + 8);
  *(void *)uint64_t result = v2;
  return result;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwta(uint64_t a1, uint64_t a2)
{
  *(void *)a1 = *(void *)a2;
  swift_bridgeObjectRelease();
  *(unsigned char *)(a1 + 8) = *(unsigned char *)(a2 + 8);
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwet(uint64_t *a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *((unsigned char *)a1 + 9)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  uint64_t v2 = *a1;
  if ((unint64_t)*a1 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t _s26ContentSelectionInteractorC5StateV16RemoveHighlightsVwst(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(unsigned char *)(result + 8) = 0;
    *(void *)uint64_t result = a2 ^ 0x80000000;
    if (a3 < 0) {
      *(unsigned char *)(result + 9) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)uint64_t result = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 9) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV16RemoveHighlightsVMa()
{
  return &_s26ContentSelectionInteractorC5StateV16RemoveHighlightsVN;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV4CopyVMa()
{
  return &_s26ContentSelectionInteractorC5StateV4CopyVN;
}

void *_s26ContentSelectionInteractorC5StateV13FindSelectionVwCP(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRetain();
  return a1;
}

uint64_t _s26ContentSelectionInteractorC5StateV13FindSelectionVwxx()
{
  return swift_bridgeObjectRelease();
}

void *assignWithCopy for OpenTabBarItemError(void *a1, void *a2)
{
  *a1 = *a2;
  a1[1] = a2[1];
  swift_bridgeObjectRetain();
  swift_bridgeObjectRelease();
  return a1;
}

void *_s26ContentSelectionInteractorC5StateV13FindSelectionVwta(void *a1, void *a2)
{
  uint64_t v3 = a2[1];
  *a1 = *a2;
  a1[1] = v3;
  swift_bridgeObjectRelease();
  return a1;
}

uint64_t getEnumTagSinglePayload for OpenTabBarItemError(uint64_t a1, int a2)
{
  if (!a2) {
    return 0;
  }
  if (a2 < 0 && *(unsigned char *)(a1 + 16)) {
    return *(_DWORD *)a1 + 0x80000000;
  }
  unint64_t v2 = *(void *)(a1 + 8);
  if (v2 >= 0xFFFFFFFF) {
    LODWORD(v2) = -1;
  }
  return (v2 + 1);
}

uint64_t storeEnumTagSinglePayload for OpenTabBarItemError(uint64_t result, int a2, int a3)
{
  if (a2 < 0)
  {
    *(void *)uint64_t result = a2 ^ 0x80000000;
    *(void *)(result + 8) = 0;
    if (a3 < 0) {
      *(unsigned char *)(result + 16) = 1;
    }
  }
  else
  {
    if ((a3 & 0x80000000) == 0)
    {
      if (!a2) {
        return result;
      }
LABEL_8:
      *(void *)(result + 8) = (a2 - 1);
      return result;
    }
    *(unsigned char *)(result + 16) = 0;
    if (a2) {
      goto LABEL_8;
    }
  }
  return result;
}

ValueMetadata *_s26ContentSelectionInteractorC5StateV13FindSelectionVMa()
{
  return &_s26ContentSelectionInteractorC5StateV13FindSelectionVN;
}

uint64_t sub_1002570C0()
{
  uint64_t v0 = sub_1007F6BC0();
  sub_10002A6A8(v0, qword_100B27140);
  sub_10005B838(v0, (uint64_t)qword_100B27140);
  return sub_1007F6BB0();
}

uint64_t sub_100257144@<X0>(uint64_t a1@<X8>)
{
  id v2 = [self standardUserDefaults];
  NSString v3 = sub_1007FDC30();
  id v4 = [v2 objectForKey:v3];

  if (v4)
  {
    sub_1007FEEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    memset(v9, 0, sizeof(v9));
  }
  sub_1000513B8((uint64_t)v9, (uint64_t)v10);
  if (v11)
  {
    uint64_t v5 = sub_1007F2BA0();
    int v6 = swift_dynamicCast();
    return (*(uint64_t (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(a1, v6 ^ 1u, 1, v5);
  }
  else
  {
    sub_10005AFE8((uint64_t)v10, (uint64_t *)&unk_100B269C0);
    uint64_t v8 = sub_1007F2BA0();
    return (*(uint64_t (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v8 - 8) + 56))(a1, 1, 1, v8);
  }
}

uint64_t sub_1002572BC(uint64_t a1)
{
  uint64_t v2 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  __chkstk_darwin(v2 - 8);
  id v4 = (char *)&v11 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v5 = [self standardUserDefaults];
  sub_10005B044(a1, (uint64_t)v4, (uint64_t *)&unk_100B2BD50);
  uint64_t v6 = sub_1007F2BA0();
  uint64_t v7 = *(void *)(v6 - 8);
  Class isa = 0;
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v7 + 48))(v4, 1, v6) != 1)
  {
    Class isa = sub_1007F2AE0().super.isa;
    (*(void (**)(char *, uint64_t))(v7 + 8))(v4, v6);
  }
  NSString v9 = sub_1007FDC30();
  [v5 setObject:isa forKey:v9];

  swift_unknownObjectRelease();
  return sub_10005AFE8(a1, (uint64_t *)&unk_100B2BD50);
}

uint64_t sub_10025744C()
{
  uint64_t v1 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  uint64_t v2 = __chkstk_darwin(v1 - 8);
  id v4 = &v50[-((v3 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v2);
  uint64_t v6 = &v50[-v5];
  uint64_t v7 = sub_1007F2BA0();
  uint64_t v8 = *(void *)(v7 - 8);
  uint64_t v9 = __chkstk_darwin(v7);
  uint64_t v11 = &v50[-((v10 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v12 = __chkstk_darwin(v9);
  uint64_t v57 = &v50[-v13];
  uint64_t v14 = __chkstk_darwin(v12);
  uint64_t v16 = &v50[-v15];
  __chkstk_darwin(v14);
  uint64_t v18 = &v50[-v17];
  uint64_t v19 = *(void *)&v0[OBJC_IVAR___BKAppStoreReviewManager_remoteConfig];
  if ((sub_10001E8C4(0xD00000000000001DLL, 0x80000001009080C0, v19) & 1) == 0) {
    goto LABEL_4;
  }
  uint64_t v55 = v11;
  uint64_t v56 = v18;
  sub_100257144((uint64_t)v6);
  uint64_t v20 = *(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v8 + 48);
  if (v20(v6, 1, v7) == 1)
  {
    sub_10005AFE8((uint64_t)v6, (uint64_t *)&unk_100B2BD50);
LABEL_4:
    if (qword_100B22508 != -1) {
      swift_once();
    }
    uint64_t v21 = sub_1007F6BC0();
    sub_10005B838(v21, (uint64_t)qword_100B27140);
    uint64_t v22 = v0;
    uint64_t v23 = sub_1007F6BA0();
    os_log_type_t v24 = sub_1007FE3E0();
    if (os_log_type_enabled(v23, v24))
    {
      uint64_t v25 = (uint8_t *)swift_slowAlloc();
      *(_DWORD *)uint64_t v25 = 67109120;
      LOBYTE(v59) = sub_10001E8C4(0xD00000000000001DLL, 0x80000001009080C0, v19) & 1;
      LODWORD(v59) = v59;
      sub_1007FEE10();

      _os_log_impl((void *)&_mh_execute_header, v23, v24, "feature disabled %{BOOL}d", v25, 8u);
      swift_slowDealloc();
    }
    else
    {
    }
    char v26 = 0;
    return v26 & 1;
  }
  uint64_t v54 = v8;
  uint64_t v28 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v8 + 32);
  v28(v56, v6, v7);
  sub_100257144((uint64_t)v4);
  if (v20(v4, 1, v7) == 1)
  {
    sub_10005AFE8((uint64_t)v4, (uint64_t *)&unk_100B2BD50);
    if (qword_100B22508 != -1) {
      swift_once();
    }
    uint64_t v29 = sub_1007F6BC0();
    sub_10005B838(v29, (uint64_t)qword_100B27140);
    long long v30 = sub_1007F6BA0();
    os_log_type_t v31 = sub_1007FE3E0();
    if (os_log_type_enabled(v30, v31))
    {
      long long v32 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)long long v32 = 0;
      _os_log_impl((void *)&_mh_execute_header, v30, v31, "AppStore review never shown before", v32, 2u);
      swift_slowDealloc();
    }

    (*(void (**)(unsigned char *, uint64_t))(v54 + 8))(v56, v7);
    char v26 = 1;
  }
  else
  {
    v28(v16, v4, v7);
    swift_unknownObjectWeakInit();
    int v53 = sub_100257B70();
    swift_unknownObjectWeakDestroy();
    if (qword_100B22508 != -1) {
      swift_once();
    }
    uint64_t v33 = sub_1007F6BC0();
    sub_10005B838(v33, (uint64_t)qword_100B27140);
    uint64_t v34 = v0;
    int v35 = sub_1007F6BA0();
    os_log_type_t v36 = sub_1007FE3E0();
    int v37 = v36;
    BOOL v38 = os_log_type_enabled(v35, v36);
    uint64_t v39 = v54;
    long long v40 = v56;
    if (v38)
    {
      uint64_t v41 = swift_slowAlloc();
      uint64_t v52 = swift_slowAlloc();
      uint64_t v59 = v52;
      *(_DWORD *)uint64_t v41 = 136315394;
      uint64_t v42 = sub_100259E60();
      if (v43)
      {
        unint64_t v44 = v43;
      }
      else
      {
        uint64_t v42 = 0x6E776F6E6B6E753CLL;
        unint64_t v44 = 0xE90000000000003ELL;
      }
      int v51 = v37;
      uint64_t v58 = sub_10005B0A8(v42, v44, &v59);
      sub_1007FEE10();

      swift_bridgeObjectRelease();
      *(_WORD *)(v41 + 12) = 1024;
      char v45 = v53;
      LODWORD(v58) = v53 & 1;
      sub_1007FEE10();
      _os_log_impl((void *)&_mh_execute_header, v35, (os_log_type_t)v51, "should attempt to present store view for location %s -- %{BOOL}d", (uint8_t *)v41, 0x12u);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();

      long long v46 = v57;
    }
    else
    {

      long long v46 = v57;
      char v45 = v53;
    }
    long long v47 = *(void (**)(unsigned char *, unsigned char *, uint64_t))(v39 + 16);
    v47(v46, v40, v7);
    int v48 = v55;
    v47(v55, v16, v7);
    if (v45) {
      char v26 = sub_1007F2AF0();
    }
    else {
      char v26 = 0;
    }
    uint64_t v49 = *(void (**)(unsigned char *, uint64_t))(v39 + 8);
    v49(v48, v7);
    v49(v46, v7);
    v49(v16, v7);
    v49(v40, v7);
  }
  return v26 & 1;
}

uint64_t sub_100257B70()
{
  uint64_t v0 = sub_100058D18(&qword_100B271A8);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = &v30[-((v1 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v3 = sub_1007F3DC0();
  uint64_t v4 = *(void *)(v3 - 8);
  uint64_t v5 = __chkstk_darwin(v3);
  uint64_t v7 = &v30[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v9 = &v30[-v8];
  swift_beginAccess();
  uint64_t Strong = (void *)swift_unknownObjectWeakLoadStrong();
  if (!Strong) {
    goto LABEL_5;
  }

  sub_100259E60();
  if (!v11) {
    goto LABEL_5;
  }
  sub_1007F3DA0();
  if ((*(unsigned int (**)(unsigned char *, uint64_t, uint64_t))(v4 + 48))(v2, 1, v3) != 1)
  {
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 32))(v9, v2, v3);
    (*(void (**)(unsigned char *, unsigned char *, uint64_t))(v4 + 16))(v7, v9, v3);
    int v14 = (*(uint64_t (**)(unsigned char *, uint64_t))(v4 + 88))(v7, v3);
    if (v14 == enum case for LocationType.postReading(_:)
      || v14 == enum case for LocationType.fromContextualActionSheet(_:)
      || v14 == enum case for LocationType.fromReadingNowFinish(_:)
      || v14 == enum case for LocationType.fromAddToFinishCollection(_:)
      || v14 == enum case for LocationType.fromLibraryFinish(_:))
    {
      swift_beginAccess();
      uint64_t v19 = swift_unknownObjectWeakLoadStrong();
      uint64_t v12 = (void *)v19;
      if (v19)
      {
        id v20 = *(id *)(v19 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

        uint64_t v21 = 0xD00000000000002ALL;
        uint64_t v22 = "appStoreReview.markedBookAsFinishedEnabled";
LABEL_26:
        unint64_t v24 = (unint64_t)(v22 - 32) | 0x8000000000000000;
LABEL_27:
        LOBYTE(v12) = sub_10001E8C4(v21, v24, (uint64_t)v20);
      }
    }
    else
    {
      if (v14 != enum case for LocationType.postPurchase(_:))
      {
        if (v14 == enum case for LocationType.postWTR(_:))
        {
          swift_beginAccess();
          uint64_t v25 = swift_unknownObjectWeakLoadStrong();
          uint64_t v12 = (void *)v25;
          if (!v25) {
            goto LABEL_28;
          }
          id v20 = *(id *)(v25 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

          char v26 = "appStoreReview.addingToWTREnabled";
        }
        else
        {
          if (v14 == enum case for LocationType.postReadingGoalChange(_:))
          {
            swift_beginAccess();
            uint64_t v27 = swift_unknownObjectWeakLoadStrong();
            uint64_t v12 = (void *)v27;
            if (!v27) {
              goto LABEL_28;
            }
            id v20 = *(id *)(v27 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

            uint64_t v21 = 0xD00000000000002DLL;
            uint64_t v22 = "appStoreReview.customizingReadingGoalsEnabled";
            goto LABEL_26;
          }
          if (v14 != enum case for LocationType.postRatingAContent(_:))
          {
            uint64_t v29 = *(void (**)(unsigned char *, uint64_t))(v4 + 8);
            v29(v9, v3);
            v29(v7, v3);
            LOBYTE(v12) = 0;
            return v12 & 1;
          }
          swift_beginAccess();
          uint64_t v28 = swift_unknownObjectWeakLoadStrong();
          uint64_t v12 = (void *)v28;
          if (!v28) {
            goto LABEL_28;
          }
          id v20 = *(id *)(v28 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

          char v26 = "appStoreReview.rateContentEnabled";
        }
        unint64_t v24 = (unint64_t)(v26 - 32) | 0x8000000000000000;
        uint64_t v21 = 0xD000000000000021;
        goto LABEL_27;
      }
      swift_beginAccess();
      uint64_t v23 = swift_unknownObjectWeakLoadStrong();
      uint64_t v12 = (void *)v23;
      if (v23)
      {
        id v20 = *(id *)(v23 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig);

        uint64_t v21 = 0xD00000000000001ELL;
        uint64_t v22 = "appStoreReview.purchaseEnabled";
        goto LABEL_26;
      }
    }
LABEL_28:
    (*(void (**)(unsigned char *, uint64_t))(v4 + 8))(v9, v3);
    return v12 & 1;
  }
  sub_10005AFE8((uint64_t)v2, &qword_100B271A8);
LABEL_5:
  LOBYTE(v12) = 1;
  return v12 & 1;
}

void sub_100257FFC(void *a1, void *a2)
{
  if (sub_10025744C())
  {
    id v5 = objc_retainAutoreleasedReturnValue(objc_msgSend(*(id *)(v2
                                                               + OBJC_IVAR___BKAppStoreReviewManager_sharedStoreReview), "shouldAttemptReview"));
    uint64_t v6 = swift_allocObject();
    swift_unknownObjectWeakInit();
    uint64_t v7 = (void *)swift_allocObject();
    void v7[2] = v6;
    void v7[3] = a1;
    void v7[4] = a2;
    void v11[4] = sub_100259DD4;
    void v11[5] = v7;
    v11[0] = _NSConcreteStackBlock;
    v11[1] = 1107296256;
    void v11[2] = sub_100258C08;
    void v11[3] = &unk_100A502A8;
    uint64_t v8 = _Block_copy(v11);
    id v9 = a2;
    id v10 = a1;
    swift_release();
    [v5 addFinishBlock:v8];
    _Block_release(v8);
  }
}

void sub_10025813C(void *a1, uint64_t a2, uint64_t a3, void *a4, void *a5)
{
  uint64_t v56 = a5;
  id v63 = a4;
  uint64_t v6 = sub_100058D18(&qword_100B271A8);
  __chkstk_darwin(v6 - 8);
  uint64_t v57 = (char *)&v51 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v8 = sub_1007F3DC0();
  uint64_t v58 = *(void *)(v8 - 8);
  uint64_t v59 = v8;
  uint64_t v9 = *(void *)(v58 + 64);
  uint64_t v10 = __chkstk_darwin(v8);
  uint64_t v54 = (char *)&v51 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v55 = (char *)&v51 - v11;
  uint64_t v12 = sub_1007FD690();
  uint64_t v64 = *(void *)(v12 - 8);
  __chkstk_darwin(v12);
  int v14 = (char *)&v51 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_1007FD6E0();
  uint64_t v61 = *(void *)(v15 - 8);
  uint64_t v62 = v15;
  __chkstk_darwin(v15);
  uint64_t v17 = (char *)&v51 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v65 = sub_1007FD700();
  uint64_t v60 = *(void *)(v65 - 8);
  uint64_t v18 = __chkstk_darwin(v65);
  id v20 = (char *)&v51 - ((v19 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v18);
  uint64_t v22 = (char *)&v51 - v21;
  uint64_t v23 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  __chkstk_darwin(v23 - 8);
  uint64_t v25 = (char *)&v51 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v27 = (void *)Strong;
    sub_1007F2B90();
    uint64_t v28 = sub_1007F2BA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v25, 0, 1, v28);
    sub_1002572BC((uint64_t)v25);
  }
  if (a1)
  {
    id v29 = a1;
    if (![v29 BOOLValue])
    {

      return;
    }
    uint64_t v53 = v12;
    id v51 = v29;
    swift_beginAccess();
    uint64_t v30 = swift_unknownObjectWeakLoadStrong();
    if (v30)
    {
      os_log_type_t v31 = (void *)v30;
      id v32 = *(id *)(v30 + OBJC_IVAR___BKAppStoreReviewManager_sharedStoreReview);

      [v32 didAttemptPromptReview];
    }
    sub_10007A6D0();
    uint64_t v52 = sub_1007FE750();
    sub_1007FD6F0();
    [self noticeTotalDuration];
    sub_1007FD760();
    uint64_t v60 = *(void *)(v60 + 8);
    ((void (*)(char *, uint64_t))v60)(v20, v65);
    uint64_t v33 = swift_allocObject();
    uint64_t v34 = v63;
    *(void *)(v33 + 16) = v63;
    aBlock[4] = sub_100259E18;
    aBlock[5] = v33;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100023798;
    aBlock[3] = &unk_100A502F8;
    int v35 = _Block_copy(aBlock);
    id v36 = v34;
    swift_release();
    sub_1007FD6B0();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10007B1AC((unint64_t *)&qword_100B29120, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100058D18((uint64_t *)&unk_100B30050);
    sub_10007AE34();
    uint64_t v37 = v53;
    sub_1007FEF40();
    BOOL v38 = (void *)v52;
    sub_1007FE6E0();
    _Block_release(v35);

    (*(void (**)(char *, uint64_t))(v64 + 8))(v14, v37);
    (*(void (**)(char *, uint64_t))(v61 + 8))(v17, v62);
    ((void (*)(char *, uint64_t))v60)(v22, v65);
    swift_beginAccess();
    uint64_t v39 = (void *)swift_unknownObjectWeakLoadStrong();
    if (v39)
    {

      sub_100259E60();
      if (v40)
      {
        uint64_t v41 = (uint64_t)v57;
        sub_1007F3DA0();
        uint64_t v43 = v58;
        uint64_t v42 = v59;
        if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v58 + 48))(v41, 1, v59) == 1)
        {

          sub_10005AFE8(v41, &qword_100B271A8);
          return;
        }
        unint64_t v44 = *(void (**)(char *, uint64_t, uint64_t))(v43 + 32);
        char v45 = v55;
        v44(v55, v41, v42);
        long long v46 = v56;
        if (v56)
        {
          long long v47 = v54;
          (*(void (**)(char *, char *, uint64_t))(v43 + 16))(v54, v45, v42);
          unint64_t v48 = (*(unsigned __int8 *)(v43 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
          uint64_t v49 = swift_allocObject();
          v44((char *)(v49 + v48), (uint64_t)v47, v42);
          id v50 = v46;
          sub_1007F4350();

          swift_release();
          (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
          return;
        }
        (*(void (**)(char *, uint64_t))(v43 + 8))(v45, v42);
      }
    }
  }
}

uint64_t sub_100258900(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = sub_1007F3DC0();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)v16 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007F3D90();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v16 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  (*(void (**)(char *, uint64_t, uint64_t))(v4 + 16))(v6, a2, v3);
  sub_1007F3D80();
  sub_100058D18(&qword_100B26998);
  uint64_t v11 = sub_1007F3AF0();
  uint64_t v12 = *(void *)(v11 - 8);
  unint64_t v13 = (*(unsigned __int8 *)(v12 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v12 + 80);
  uint64_t v14 = swift_allocObject();
  *(_OWORD *)(v14 + 16) = xmmword_10085CCE0;
  (*(void (**)(unint64_t, void, uint64_t))(v12 + 104))(v14 + v13, enum case for DataEventTrait.onlyOnce(_:), v11);
  sub_10007B1AC(&qword_100B271B0, (void (*)(uint64_t))&type metadata accessor for LocationData);
  sub_1007F3AD0();
  swift_bridgeObjectRelease();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_1007F4230();
  sub_10007B1AC(&qword_100B271B8, (void (*)(uint64_t))&type metadata accessor for AppReviewPromptRequestEvent);
  memset(v16, 0, sizeof(v16));
  sub_1007F3AE0();
  return sub_10005AFE8((uint64_t)v16, (uint64_t *)&unk_100B269C0);
}

void sub_100258C08(uint64_t a1, void *a2, void *a3)
{
  uint64_t v5 = *(void (**)(void *, void *))(a1 + 32);
  swift_retain();
  id v7 = a2;
  id v6 = a3;
  v5(a2, a3);
  swift_release();
}

uint64_t sub_100258D34(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_1007F3DC0();
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  id v7 = &v18[-((v6 + 15) & 0xFFFFFFFFFFFFFFF0) - 8];
  id v8 = [a1 userInfo];
  if (!v8)
  {
    long long v19 = 0u;
    long long v20 = 0u;
    return sub_10005AFE8((uint64_t)&v19, (uint64_t *)&unk_100B269C0);
  }
  uint64_t v9 = v8;
  uint64_t v10 = sub_1007FDA70();

  uint64_t v11 = (void *)BLDownloadQueuePropertyIsPurchase;
  uint64_t v17 = BLDownloadQueuePropertyIsPurchase;
  type metadata accessor for BLDownloadQueueProperty(0);
  sub_10007B1AC(&qword_100B251C0, type metadata accessor for BLDownloadQueueProperty);
  id v12 = v11;
  sub_1007FF050();
  if (*(void *)(v10 + 16) && (unint64_t v13 = sub_100073DE8((uint64_t)v18), (v14 & 1) != 0))
  {
    sub_10005E20C(*(void *)(v10 + 56) + 32 * v13, (uint64_t)&v19);
  }
  else
  {
    long long v19 = 0u;
    long long v20 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100073EF4((uint64_t)v18);
  if (!*((void *)&v20 + 1)) {
    return sub_10005AFE8((uint64_t)&v19, (uint64_t *)&unk_100B269C0);
  }
  uint64_t result = swift_dynamicCast();
  if (result)
  {
    if (v18[0])
    {
      char v16 = sub_10001E8C4(0xD00000000000001ELL, 0x8000000100908170, *(void *)(v2 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig));
      (*(void (**)(unsigned char *, void, uint64_t))(v5 + 104))(v7, enum case for LocationType.postPurchase(_:), v4);
      sub_1002594DC(v16 & 1, (uint64_t)v7);
      return (*(uint64_t (**)(unsigned char *, uint64_t))(v5 + 8))(v7, v4);
    }
  }
  return result;
}

void sub_100259064(char *a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, unsigned int *a6)
{
  uint64_t v11 = sub_1007F3DC0();
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  char v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = *(void *)&a1[OBJC_IVAR___BKAppStoreReviewManager_remoteConfig];
  id v16 = a3;
  uint64_t v17 = a1;
  LOBYTE(a5) = sub_10001E8C4(a4, a5, v15);
  (*(void (**)(char *, void, uint64_t))(v12 + 104))(v14, *a6, v11);
  sub_1002594DC(a5 & 1, (uint64_t)v14);
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
}

uint64_t sub_1002591B0(void *a1)
{
  uint64_t v2 = v1;
  uint64_t v4 = sub_100058D18(&qword_100B271A8);
  __chkstk_darwin(v4 - 8);
  uint64_t v6 = (char *)v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007F3DC0();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  uint64_t v10 = (char *)v20 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v11 = [a1 userInfo];
  if (!v11)
  {
    long long v22 = 0u;
    long long v23 = 0u;
LABEL_11:
    uint64_t v17 = (uint64_t *)&unk_100B269C0;
    uint64_t v18 = (char *)&v22;
    return sub_10005AFE8((uint64_t)v18, v17);
  }
  uint64_t v12 = v11;
  uint64_t v13 = sub_1007FDA70();

  v20[1] = 0xD00000000000001CLL;
  void v20[2] = 0x8000000100908070;
  sub_1007FF050();
  if (*(void *)(v13 + 16) && (unint64_t v14 = sub_100073DE8((uint64_t)&v21), (v15 & 1) != 0))
  {
    sub_10005E20C(*(void *)(v13 + 56) + 32 * v14, (uint64_t)&v22);
  }
  else
  {
    long long v22 = 0u;
    long long v23 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100073EF4((uint64_t)&v21);
  if (!*((void *)&v23 + 1)) {
    goto LABEL_11;
  }
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    return result;
  }
  sub_1007F3DA0();
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v8 + 48))(v6, 1, v7) != 1)
  {
    (*(void (**)(char *, char *, uint64_t))(v8 + 32))(v10, v6, v7);
    char v19 = sub_10001E8C4(0xD00000000000002ALL, 0x8000000100908090, *(void *)(v2 + OBJC_IVAR___BKAppStoreReviewManager_remoteConfig));
    sub_1002594DC(v19 & 1, (uint64_t)v10);
    return (*(uint64_t (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  }
  uint64_t v17 = &qword_100B271A8;
  uint64_t v18 = v6;
  return sub_10005AFE8((uint64_t)v18, v17);
}

uint64_t sub_1002594DC(char a1, uint64_t a2)
{
  uint64_t v4 = sub_1007FD690();
  uint64_t v23 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_1007FD6E0();
  uint64_t v21 = *(void *)(v7 - 8);
  uint64_t v22 = v7;
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007F3DC0();
  uint64_t v11 = *(void *)(v10 - 8);
  uint64_t v12 = *(void *)(v11 + 64);
  uint64_t result = __chkstk_darwin(v10);
  unint64_t v14 = (char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  if (a1)
  {
    sub_10007A6D0();
    uint64_t v20 = sub_1007FE750();
    uint64_t v15 = swift_allocObject();
    swift_unknownObjectWeakInit();
    (*(void (**)(char *, uint64_t, uint64_t))(v11 + 16))((char *)&v20 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0), a2, v10);
    unint64_t v16 = (*(unsigned __int8 *)(v11 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v11 + 80);
    uint64_t v17 = swift_allocObject();
    *(void *)(v17 + 16) = v15;
    (*(void (**)(unint64_t, char *, uint64_t))(v11 + 32))(v17 + v16, v14, v10);
    aBlock[4] = sub_100259D28;
    aBlock[5] = v17;
    aBlock[0] = _NSConcreteStackBlock;
    aBlock[1] = 1107296256;
    aBlock[2] = sub_100023798;
    aBlock[3] = &unk_100A50258;
    uint64_t v18 = _Block_copy(aBlock);
    swift_release();
    sub_1007FD6B0();
    aBlock[0] = _swiftEmptyArrayStorage;
    sub_10007B1AC((unint64_t *)&qword_100B29120, (void (*)(uint64_t))&type metadata accessor for DispatchWorkItemFlags);
    sub_100058D18((uint64_t *)&unk_100B30050);
    sub_10007AE34();
    sub_1007FEF40();
    char v19 = (void *)v20;
    sub_1007FE760();
    _Block_release(v18);

    (*(void (**)(char *, uint64_t))(v23 + 8))(v6, v4);
    return (*(uint64_t (**)(char *, uint64_t))(v21 + 8))(v9, v22);
  }
  return result;
}

void sub_100259874()
{
  uint64_t v0 = sub_100058D18((uint64_t *)&unk_100B2BD50);
  __chkstk_darwin(v0 - 8);
  uint64_t v2 = (char *)&v15 - ((v1 + 15) & 0xFFFFFFFFFFFFFFF0);
  swift_beginAccess();
  uint64_t Strong = swift_unknownObjectWeakLoadStrong();
  if (Strong)
  {
    uint64_t v4 = (void *)Strong;
    sub_1007F2B90();
    uint64_t v5 = sub_1007F2BA0();
    (*(void (**)(char *, void, uint64_t, uint64_t))(*(void *)(v5 - 8) + 56))(v2, 0, 1, v5);
    sub_1002572BC((uint64_t)v2);
    sub_1007F3DB0();
    id v6 = [self standardUserDefaults];
    NSString v7 = sub_1007FDC30();
    swift_bridgeObjectRelease();
    NSString v8 = sub_1007FDC30();
    [v6 setObject:v7 forKey:v8];

    sub_100058D18(&qword_100B27198);
    uint64_t v9 = sub_1007F3DC0();
    uint64_t v10 = *(void *)(v9 - 8);
    unint64_t v11 = (*(unsigned __int8 *)(v10 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v10 + 80);
    uint64_t v12 = swift_allocObject();
    *(_OWORD *)(v12 + 16) = xmmword_10085CCE0;
    (*(void (**)(unint64_t, void, uint64_t))(v10 + 104))(v12 + v11, enum case for LocationType.postReading(_:), v9);
    sub_10007B1AC(&qword_100B271A0, (void (*)(uint64_t))&type metadata accessor for LocationType);
    char v13 = sub_1007FDB40();
    swift_setDeallocating();
    swift_arrayDestroy();
    swift_deallocClassInstance();
    if ((v13 & 1) == 0)
    {
      id v14 = [self sceneManager];
      [v14 attemptToPresentStoreReview];

      uint64_t v4 = v14;
    }
  }
}

id AppStoreReviewManager.__deallocating_deinit()
{
  v2.receiver = v0;
  v2.super_class = (Class)type metadata accessor for AppStoreReviewManager();
  [super dealloc];
}

ValueMetadata *type metadata accessor for AppStoreReviewRemoteConfig()
{
  return &type metadata for AppStoreReviewRemoteConfig;
}

ValueMetadata *type metadata accessor for AppStoreReviewDataStorage()
{
  return &type metadata for AppStoreReviewDataStorage;
}

uint64_t sub_100259C24()
{
  swift_unknownObjectWeakDestroy();

  return swift_deallocObject();
}

uint64_t sub_100259C5C()
{
  uint64_t v1 = sub_1007F3DC0();
  uint64_t v2 = *(void *)(v1 - 8);
  unint64_t v3 = (*(unsigned __int8 *)(v2 + 80) + 24) & ~(unint64_t)*(unsigned __int8 *)(v2 + 80);
  swift_release();
  (*(void (**)(unint64_t, uint64_t))(v2 + 8))(v0 + v3, v1);

  return swift_deallocObject();
}

void sub_100259D28()
{
  sub_1007F3DC0();

  sub_100259874();
}

uint64_t sub_100259D8C()
{
  swift_release();

  return swift_deallocObject();
}

void sub_100259DD4(void *a1, uint64_t a2)
{
  sub_10025813C(a1, a2, *(void *)(v2 + 16), *(void **)(v2 + 24), *(void **)(v2 + 32));
}

uint64_t sub_100259DE0()
{
  return swift_deallocObject();
}

id sub_100259E18()
{
  uint64_t v1 = *(void *)(v0 + 16);
  uint64_t v2 = self;

  return [v2 requestReviewInScene:v1];
}

uint64_t sub_100259E60()
{
  uint64_t v0 = sub_1007F3DC0();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  unint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v4 = [self standardUserDefaults];
  NSString v5 = sub_1007FDC30();
  id v6 = [v4 objectForKey:v5];

  if (v6)
  {
    sub_1007FEEC0();
    swift_unknownObjectRelease();
  }
  else
  {
    long long v12 = 0u;
    long long v13 = 0u;
  }
  sub_1000513B8((uint64_t)&v12, (uint64_t)v14);
  sub_10005B044((uint64_t)v14, (uint64_t)&v12, (uint64_t *)&unk_100B269C0);
  if (!*((void *)&v13 + 1))
  {
    sub_10005AFE8((uint64_t)&v12, (uint64_t *)&unk_100B269C0);
LABEL_9:
    sub_1000513B8((uint64_t)v14, (uint64_t)&v12);
    if (*((void *)&v13 + 1))
    {
      if (swift_dynamicCast()) {
        return v11;
      }
      else {
        return 0;
      }
    }
    else
    {
      uint64_t v9 = &v12;
LABEL_14:
      sub_10005AFE8((uint64_t)v9, (uint64_t *)&unk_100B269C0);
      return 0;
    }
  }
  if ((swift_dynamicCast() & 1) == 0) {
    goto LABEL_9;
  }
  switch(v11)
  {
    case 0:
      NSString v7 = (unsigned int *)&enum case for LocationType.postReading(_:);
      break;
    case 1:
      NSString v7 = (unsigned int *)&enum case for LocationType.fromContextualActionSheet(_:);
      break;
    case 2:
      NSString v7 = (unsigned int *)&enum case for LocationType.fromReadingNowFinish(_:);
      break;
    case 3:
      NSString v7 = (unsigned int *)&enum case for LocationType.fromLibraryFinish(_:);
      break;
    case 4:
      NSString v7 = (unsigned int *)&enum case for LocationType.fromAddToFinishCollection(_:);
      break;
    case 5:
      NSString v7 = (unsigned int *)&enum case for LocationType.postPurchase(_:);
      break;
    case 6:
      NSString v7 = (unsigned int *)&enum case for LocationType.postWTR(_:);
      break;
    case 7:
      NSString v7 = (unsigned int *)&enum case for LocationType.postReadingGoalChange(_:);
      break;
    case 8:
      NSString v7 = (unsigned int *)&enum case for LocationType.postRatingAContent(_:);
      break;
    default:
      uint64_t v9 = (long long *)v14;
      goto LABEL_14;
  }
  (*(void (**)(char *, void, uint64_t))(v1 + 104))(v3, *v7, v0);
  uint64_t v8 = sub_1007F3DB0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_10005AFE8((uint64_t)v14, (uint64_t *)&unk_100B269C0);
  return v8;
}

uint64_t sub_10025A180()
{
  uint64_t v1 = sub_1007F3DC0();
  (*(void (**)(unint64_t, uint64_t))(*(void *)(v1 - 8) + 8))(v0+ ((*(unsigned __int8 *)(*(void *)(v1 - 8) + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(*(void *)(v1 - 8) + 80)), v1);

  return swift_deallocObject();
}

uint64_t sub_10025A210(uint64_t a1)
{
  uint64_t v3 = *(void *)(sub_1007F3DC0() - 8);
  uint64_t v4 = v1 + ((*(unsigned __int8 *)(v3 + 80) + 16) & ~(unint64_t)*(unsigned __int8 *)(v3 + 80));

  return sub_100258900(a1, v4);
}

NSString sub_10025A3D0()
{
  NSString result = sub_1007FDC30();
  qword_100B271C0 = (uint64_t)result;
  return result;
}

NSString sub_10025A408()
{
  NSString result = sub_1007FDC30();
  qword_100B271C8 = (uint64_t)result;
  return result;
}

NSString sub_10025A440()
{
  NSString result = sub_1007FDC30();
  qword_100B271D0 = (uint64_t)result;
  return result;
}

NSString sub_10025A478()
{
  NSString result = sub_1007FDC30();
  qword_100B271D8 = (uint64_t)result;
  return result;
}

NSString sub_10025A4B0()
{
  NSString result = sub_1007FDC30();
  qword_100B271E0 = (uint64_t)result;
  return result;
}

void *sub_10025A4E8()
{
  uint64_t v1 = sub_1007FD660();
  uint64_t v50 = *(void *)(v1 - 8);
  id v51 = (char *)v1;
  __chkstk_darwin(v1);
  uint64_t v49 = (char *)v40 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v45 = sub_1007FB7F0();
  uint64_t v41 = *(void (***)(char *, uint64_t))(v45 - 8);
  __chkstk_darwin(v45);
  unint64_t v44 = (char *)v40 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_1007FC9C0();
  uint64_t v46 = *(void *)(v4 - 8);
  uint64_t v5 = __chkstk_darwin(v4);
  NSString v7 = (char *)v40 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v9 = (char *)v40 - v8;
  uint64_t v10 = sub_1007FC9F0();
  uint64_t v11 = *(void *)(v10 - 8);
  __chkstk_darwin(v10);
  long long v13 = (char *)v40 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v14 = sub_100058D18((uint64_t *)&unk_100B3DF30);
  __chkstk_darwin(v14 - 8);
  unint64_t v16 = (char *)v40 - ((v15 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v17 = v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread;
  swift_beginAccess();
  sub_10005B044(v17, (uint64_t)v16, (uint64_t *)&unk_100B3DF30);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v11 + 48))(v16, 1, v10))
  {
    sub_10005AFE8((uint64_t)v16, (uint64_t *)&unk_100B3DF30);
    sub_100058D18(&qword_100B32780);
    uint64_t v18 = (void *)swift_allocObject();
    *((_OWORD *)v18 + 1) = xmmword_10085CCE0;
    char v19 = v49;
    sub_1007F77C0();
    uint64_t v20 = sub_1007FD5E0();
    (*(void (**)(char *, char *))(v50 + 8))(v19, v51);
    double v18[4] = v20;
  }
  else
  {
    id v51 = v9;
    uint64_t v21 = v46;
    (*(void (**)(char *, char *, uint64_t))(v11 + 16))(v13, v16, v10);
    sub_10005AFE8((uint64_t)v16, (uint64_t *)&unk_100B3DF30);
    uint64_t v22 = sub_1007FC9D0();
    (*(void (**)(char *, uint64_t))(v11 + 8))(v13, v10);
    uint64_t v23 = *(void *)(v22 + 16);
    if (v23)
    {
      uint64_t v25 = v21 + 16;
      uint64_t v24 = *(void *)(v21 + 16);
      unint64_t v26 = v22 + ((*(unsigned __int8 *)(v21 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v21 + 80));
      uint64_t v49 = *(char **)(v21 + 72);
      uint64_t v50 = v24;
      unint64_t v48 = (uint64_t (**)(char *, uint64_t))(v21 + 88);
      int v47 = enum case for SpreadPaginationEntity.Column.location(_:);
      uint64_t v27 = (void (**)(char *, uint64_t))(v21 + 8);
      uint64_t v42 = (void (**)(char *, char *, uint64_t))(v41 + 4);
      uint64_t v43 = (void (**)(char *, uint64_t))(v25 + 80);
      v40[1] = v22;
      ++v41;
      swift_bridgeObjectRetain();
      uint64_t v18 = _swiftEmptyArrayStorage;
      uint64_t v28 = v45;
      uint64_t v46 = v25;
      do
      {
        id v32 = (void (*)(char *, char *, uint64_t))v50;
        os_log_type_t v31 = v51;
        ((void (*)(char *, unint64_t, uint64_t))v50)(v51, v26, v4);
        v32(v7, v31, v4);
        int v33 = (*v48)(v7, v4);
        if (v33 == v47)
        {
          (*v43)(v7, v4);
          uint64_t v34 = v44;
          (*v42)(v44, v7, v28);
          uint64_t v35 = v28;
          uint64_t v36 = sub_1007FB7A0();
          (*v41)(v34, v35);
          (*v27)(v31, v4);
          if ((swift_isUniquelyReferenced_nonNull_native() & 1) == 0) {
            uint64_t v18 = sub_1006BB9D4(0, v18[2] + 1, 1, v18);
          }
          unint64_t v38 = v18[2];
          unint64_t v37 = v18[3];
          if (v38 >= v37 >> 1) {
            uint64_t v18 = sub_1006BB9D4((void *)(v37 > 1), v38 + 1, 1, v18);
          }
          void v18[2] = v38 + 1;
          v18[v38 + 4] = v36;
          uint64_t v28 = v45;
        }
        else
        {
          uint64_t v29 = v28;
          uint64_t v30 = *v27;
          (*v27)(v7, v4);
          v30(v31, v4);
          uint64_t v28 = v29;
        }
        v26 += (unint64_t)v49;
        --v23;
      }
      while (v23);
      swift_bridgeObjectRelease_n();
    }
    else
    {
      swift_bridgeObjectRelease();
      return _swiftEmptyArrayStorage;
    }
  }
  return v18;
}

uint64_t sub_10025AADC(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  uint64_t v99 = a2;
  uint64_t v5 = sub_100058D18((uint64_t *)&unk_100B455E0);
  __chkstk_darwin(v5 - 8);
  char v110 = (char *)&v91 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  unsigned __int8 v108 = (char *)&v91 - v8;
  uint64_t v9 = sub_1007FBC10();
  __chkstk_darwin(v9 - 8);
  char v109 = (char *)&v91 - ((v10 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100058D18((uint64_t *)&unk_100B27090);
  __chkstk_darwin(v11 - 8);
  uint64_t v104 = (char *)&v91 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v13 = sub_100058D18((uint64_t *)&unk_100B43B60);
  __chkstk_darwin(v13 - 8);
  uint64_t v103 = (char *)&v91 - ((v14 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v15 = sub_100058D18((uint64_t *)&unk_100B27500);
  __chkstk_darwin(v15 - 8);
  uint64_t v100 = (char *)&v91 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v17);
  char v98 = (char *)&v91 - v18;
  uint64_t v19 = sub_100058D18(&qword_100B47000);
  __chkstk_darwin(v19 - 8);
  uint64_t v101 = (char *)&v91 - ((v20 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v21);
  uint64_t v102 = (char *)&v91 - v22;
  uint64_t v23 = sub_100058D18((uint64_t *)&unk_100B26900);
  __chkstk_darwin(v23 - 8);
  uint64_t v106 = (char *)&v91 - ((v24 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v25);
  uint64_t v27 = (char *)&v91 - v26;
  uint64_t v28 = sub_1007FD660();
  uint64_t v29 = *(void *)(v28 - 8);
  __chkstk_darwin(v28);
  long long v113 = (char *)&v91 - ((v30 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v31);
  uint64_t v105 = (char *)&v91 - v32;
  __chkstk_darwin(v33);
  long long v111 = (char *)&v91 - v34;
  __chkstk_darwin(v35);
  unint64_t v37 = (char *)&v91 - v36;
  __chkstk_darwin(v38);
  unsigned __int8 v107 = (char *)&v91 - v39;
  uint64_t v40 = sub_1007FD580();
  __chkstk_darwin(v40 - 8);
  uint64_t v41 = sub_1007F2BA0();
  __chkstk_darwin(v41 - 8);
  uint64_t v42 = sub_100058D18(&qword_100B274C0);
  __chkstk_darwin(v42 - 8);
  uint64_t v43 = v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread;
  uint64_t v44 = sub_1007FC9F0();
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v44 - 8) + 56))(v43, 1, 1, v44);
  uint64_t v45 = v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation;
  uint64_t v46 = sub_100058D18(&qword_100B27268);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v45, 1, 1, v46);
  (*(void (**)(uint64_t, uint64_t, uint64_t, uint64_t))(v29 + 56))(v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, 1, 1, v28);
  uint64_t v47 = OBJC_IVAR____TtC5Books23CurrentLocationProvider_readingLocationDatedCFISubject;
  long long v114 = 0;
  unint64_t v115 = 0xE000000000000000;
  sub_1007F2AA0();
  sub_1007FB8B0();
  sub_100058D18(&qword_100B27498);
  swift_allocObject();
  *(void *)(v2 + v47) = sub_1007F77E0();
  unint64_t v48 = (void *)(v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI);
  *unint64_t v48 = 0;
  v48[1] = 0;
  uint64_t v49 = OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIRangeSubject;
  sub_1007FD560();
  sub_100058D18(&qword_100B27488);
  swift_allocObject();
  *(void *)(v2 + v49) = sub_1007F77E0();
  uint64_t v50 = OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIUpdatesSubject;
  long long v114 = _swiftEmptyArrayStorage;
  sub_100058D18(&qword_100B27478);
  swift_allocObject();
  *(void *)(v2 + v5sub_1007E6FC4(2, 18, 1, 0) = sub_1007F77E0();
  sub_10005B044(a1, (uint64_t)v27, (uint64_t *)&unk_100B26900);
  id v51 = *(uint64_t (**)(char *, uint64_t, uint64_t))(v29 + 48);
  int v52 = v51(v27, 1, v28);
  uint64_t v112 = a1;
  if (v52 != 1)
  {
    uint64_t v61 = *(void (**)(char *, char *, uint64_t))(v29 + 32);
    uint64_t v93 = v29 + 32;
    uint64_t v92 = v61;
    v61(v37, v27, v28);
    uint64_t v62 = (uint64_t)v102;
    sub_1007FD640();
    uint64_t v63 = sub_1007FD610();
    uint64_t v64 = *(void *)(v63 - 8);
    uint64_t v95 = *(uint64_t (**)(uint64_t, uint64_t))(v64 + 48);
    uint64_t v96 = v63;
    uint64_t v94 = v64 + 48;
    int v65 = v95(v62, 1);
    sub_10005AFE8(v62, &qword_100B47000);
    uint64_t v66 = *(void (**)(char *, char *, uint64_t))(v29 + 16);
    uint64_t v102 = v37;
    unsigned __int8 v97 = v66;
    v66(v111, v37, v28);
    if (v65 == 1)
    {
      uint64_t v67 = (uint64_t)v98;
      uint64_t v68 = v111;
      sub_1007FD5F0();
      uint64_t v91 = v29;
      unint64_t v69 = *(void (**)(char *, uint64_t))(v29 + 8);
      v69(v68, v28);
      uint64_t v70 = sub_1007FD5D0();
      LODWORD(v68) = (*(uint64_t (**)(uint64_t, uint64_t, uint64_t))(*(void *)(v70 - 8) + 48))(v67, 1, v70);
      sub_10005AFE8(v67, (uint64_t *)&unk_100B27500);
      if (v68 == 1)
      {
        v69(v102, v28);
        uint64_t v53 = a1;
        uint64_t v54 = v108;
        uint64_t v55 = (uint64_t)v106;
        uint64_t v29 = v91;
        goto LABEL_3;
      }
      uint64_t v76 = (uint64_t)v101;
      uint64_t v75 = v102;
      uint64_t v77 = (uint64_t)v100;
      uint64_t v74 = v69;
      uint64_t v29 = v91;
    }
    else
    {
      uint64_t v74 = *(void (**)(char *, uint64_t))(v29 + 8);
      v74(v111, v28);
      uint64_t v76 = (uint64_t)v101;
      uint64_t v75 = v102;
      uint64_t v77 = (uint64_t)v100;
    }
    sub_1007FD5F0();
    uint64_t v78 = sub_1007FD5D0();
    uint64_t v79 = *(void *)(v78 - 8);
    if ((*(unsigned int (**)(uint64_t, uint64_t, uint64_t))(v79 + 48))(v77, 1, v78) == 1)
    {
      sub_10005AFE8(v77, (uint64_t *)&unk_100B27500);
      uint64_t v72 = v110;
    }
    else
    {
      sub_1007FD5C0();
      (*(void (**)(uint64_t, uint64_t))(v79 + 8))(v77, v78);
      sub_1007FDE00();
      if ((v80 & 1) == 0)
      {
        uint64_t v81 = sub_100058D18(&qword_100B274E8);
        uint64_t v82 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v81 - 8) + 56);
        long long v111 = (char *)v74;
        v82(v103, 1, 1, v81);
        uint64_t v83 = sub_100058D18(&qword_100B38D10);
        (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v83 - 8) + 56))(v104, 1, 1, v83);
        unsigned int v73 = v107;
        sub_1007FD620();
        ((void (*)(char *, uint64_t))v111)(v102, v28);
        uint64_t v72 = v110;
LABEL_20:
        uint64_t v54 = v108;
        v97(v113, v73, v28);
        goto LABEL_21;
      }
      swift_bridgeObjectRelease();
      uint64_t v72 = v110;
      uint64_t v75 = v102;
    }
    sub_1007FD640();
    int v84 = ((uint64_t (*)(uint64_t, uint64_t, uint64_t))v95)(v76, 1, v96);
    sub_10005AFE8(v76, &qword_100B47000);
    if (v84 == 1)
    {
      sub_1007FD630();
      long long v111 = (char *)v74;
      uint64_t v85 = sub_100058D18(&qword_100B274E8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v85 - 8) + 56))(v103, 1, 1, v85);
      uint64_t v86 = sub_100058D18(&qword_100B38D10);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v86 - 8) + 56))(v104, 1, 1, v86);
      unsigned int v73 = v107;
      sub_1007FD620();
      ((void (*)(char *, uint64_t))v111)(v75, v28);
    }
    else
    {
      unsigned int v73 = v107;
      v92(v107, v75, v28);
    }
    goto LABEL_20;
  }
  sub_10005AFE8((uint64_t)v27, (uint64_t *)&unk_100B26900);
  uint64_t v53 = a1;
  uint64_t v54 = v108;
  uint64_t v55 = (uint64_t)v106;
LABEL_3:
  sub_10005B044(v53, v55, (uint64_t *)&unk_100B26900);
  if (v51((char *)v55, 1, v28) == 1)
  {
    uint64_t v56 = sub_100058D18(&qword_100B274E8);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v56 - 8) + 56))(v103, 1, 1, v56);
    uint64_t v57 = sub_100058D18(&qword_100B38D10);
    (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v57 - 8) + 56))(v104, 1, 1, v57);
    uint64_t v58 = v105;
    sub_1007FD620();
    sub_10005AFE8(v55, (uint64_t *)&unk_100B26900);
    uint64_t v59 = v58;
    uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
  }
  else
  {
    uint64_t v60 = *(void (**)(char *, uint64_t, uint64_t))(v29 + 32);
    uint64_t v71 = v105;
    v60(v105, v55, v28);
    uint64_t v59 = v71;
  }
  uint64_t v72 = v110;
  unsigned int v73 = v107;
  v60(v107, (uint64_t)v59, v28);
  (*(void (**)(char *, char *, uint64_t))(v29 + 16))(v113, v73, v28);
LABEL_21:
  sub_100058D18(&qword_100B274A8);
  swift_allocObject();
  *(void *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject) = sub_1007F77E0();
  uint64_t v87 = sub_1007FBBD0();
  long long v88 = *(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v87 - 8) + 56);
  v88(v54, 1, 1, v87);
  v88(v72, 1, 1, v87);
  sub_1007FBBE0();
  sub_100058D18(&qword_100B27468);
  swift_allocObject();
  uint64_t v89 = sub_1007F77E0();
  sub_10005AFE8(v112, (uint64_t *)&unk_100B26900);
  (*(void (**)(char *, uint64_t))(v29 + 8))(v73, v28);
  *(void *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject) = v89;
  return v3;
}

uint64_t sub_10025B92C@<X0>(uint64_t a1@<X8>)
{
  uint64_t v2 = sub_1007F25E0();
  if (!v2)
  {
    long long v9 = 0u;
    long long v10 = 0u;
LABEL_11:
    uint64_t result = sub_10005AFE8((uint64_t)&v9, (uint64_t *)&unk_100B269C0);
    *(void *)a1 = 0;
    char v7 = 1;
    goto LABEL_12;
  }
  uint64_t v3 = v2;
  sub_1007FF050();
  if (*(void *)(v3 + 16) && (unint64_t v4 = sub_100073DE8((uint64_t)v8), (v5 & 1) != 0))
  {
    sub_10005E20C(*(void *)(v3 + 56) + 32 * v4, (uint64_t)&v9);
  }
  else
  {
    long long v9 = 0u;
    long long v10 = 0u;
  }
  swift_bridgeObjectRelease();
  sub_100073EF4((uint64_t)v8);
  if (!*((void *)&v10 + 1)) {
    goto LABEL_11;
  }
  type metadata accessor for NavigationDirection(0);
  uint64_t result = swift_dynamicCast();
  if ((result & 1) == 0) {
    *(void *)a1 = 0;
  }
  char v7 = result ^ 1;
LABEL_12:
  *(unsigned char *)(a1 + 8) = v7;
  return result;
}

uint64_t sub_10025BA40()
{
  sub_10005AFE8(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread, (uint64_t *)&unk_100B3DF30);
  swift_release();
  swift_release();
  sub_10005AFE8(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation, &qword_100B274B8);
  sub_10005AFE8(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation, (uint64_t *)&unk_100B26900);
  swift_release();
  swift_bridgeObjectRelease();
  swift_release();
  swift_release();
  return v0;
}

uint64_t sub_10025BB04()
{
  sub_10025BA40();

  return swift_deallocClassInstance();
}

uint64_t sub_10025BB5C()
{
  return type metadata accessor for CurrentLocationProvider();
}

uint64_t type metadata accessor for CurrentLocationProvider()
{
  uint64_t result = qword_100B27248;
  if (!qword_100B27248) {
    return swift_getSingletonMetadata();
  }
  return result;
}

void sub_10025BBB0()
{
  sub_10025BD6C(319, &qword_100B27258, (void (*)(uint64_t))&type metadata accessor for SpreadPaginationEntity);
  if (v0 <= 0x3F)
  {
    sub_10025BD10();
    if (v1 <= 0x3F)
    {
      sub_10025BD6C(319, (unint64_t *)&unk_100B27270, (void (*)(uint64_t))&type metadata accessor for Location);
      if (v2 <= 0x3F) {
        swift_updateClassMetadata2();
      }
    }
  }
}

void sub_10025BD10()
{
  if (!qword_100B27260)
  {
    sub_100043378(&qword_100B27268);
    unint64_t v0 = sub_1007FEDF0();
    if (!v1) {
      atomic_store(v0, (unint64_t *)&qword_100B27260);
    }
  }
}

void sub_10025BD6C(uint64_t a1, unint64_t *a2, void (*a3)(uint64_t))
{
  if (!*a2)
  {
    a3(255);
    unint64_t v4 = sub_1007FEDF0();
    if (!v5) {
      atomic_store(v4, a2);
    }
  }
}

BOOL sub_10025BDC0()
{
  uint64_t v1 = sub_100058D18((uint64_t *)&unk_100B26900);
  __chkstk_darwin(v1 - 8);
  uint64_t v3 = (char *)&v8 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
  swift_beginAccess();
  sub_10005B044(v4, (uint64_t)v3, (uint64_t *)&unk_100B26900);
  uint64_t v5 = sub_1007FD660();
  BOOL v6 = (*(unsigned int (**)(char *, uint64_t, uint64_t))(*(void *)(v5 - 8) + 48))(v3, 1, v5) != 1;
  sub_10005AFE8((uint64_t)v3, (uint64_t *)&unk_100B26900);
  return v6;
}

uint64_t sub_10025BEBC()
{
  return sub_1007F77C0();
}

uint64_t sub_10025BEE8@<X0>(uint64_t a1@<X8>)
{
  return sub_10025BF14(&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation, &qword_100B274B8, a1);
}

uint64_t sub_10025BF00@<X0>(uint64_t a1@<X8>)
{
  return sub_10025BF14(&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentSpread, (uint64_t *)&unk_100B3DF30, a1);
}

uint64_t sub_10025BF14@<X0>(void *a1@<X2>, uint64_t *a2@<X3>, uint64_t a3@<X8>)
{
  uint64_t v6 = v3 + *a1;
  swift_beginAccess();
  return sub_10005B044(v6, a3, a2);
}

uint64_t sub_10025BF74(uint64_t a1, uint64_t a2)
{
  return sub_10025BFD8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject, &qword_100B274A8, &qword_100B274B0);
}

uint64_t sub_10025BF90()
{
  return sub_1007F77C0();
}

uint64_t sub_10025BFBC(uint64_t a1, uint64_t a2)
{
  return sub_10025BFD8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_readingLocationDatedCFISubject, &qword_100B27498, &qword_100B274A0);
}

uint64_t sub_10025BFD8(uint64_t a1, uint64_t a2, uint64_t a3, uint64_t *a4, unint64_t *a5)
{
  return sub_1007F78C0();
}

uint64_t sub_10025C054()
{
  return sub_1007F77C0();
}

uint64_t sub_10025C080(uint64_t a1, uint64_t a2)
{
  return sub_10025BFD8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIRangeSubject, &qword_100B27488, &qword_100B27490);
}

uint64_t sub_10025C09C()
{
  sub_1007F77C0();
  return v1;
}

uint64_t sub_10025C0D8(uint64_t a1, uint64_t a2)
{
  return sub_10025BFD8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_approximateVisibleCFIUpdatesSubject, &qword_100B27478, &qword_100B27480);
}

uint64_t sub_10025C0F4()
{
  return sub_1007F77C0();
}

uint64_t sub_10025C120(uint64_t a1, uint64_t a2)
{
  return sub_10025BFD8(a1, a2, (uint64_t)&OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject, &qword_100B27468, &qword_100B27470);
}

uint64_t sub_10025C13C(uint64_t a1, uint64_t a2)
{
  return sub_10025C1AC(a1, a2, &qword_100B22518, (uint64_t)&qword_100B271C8, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_10025A408);
}

uint64_t sub_10025C174(uint64_t a1, uint64_t a2)
{
  return sub_10025C1AC(a1, a2, &qword_100B22510, (uint64_t)&qword_100B271C0, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_10025A3D0);
}

uint64_t sub_10025C1AC(uint64_t a1, uint64_t a2, void *a3, uint64_t a4, uint64_t a5, uint64_t a6)
{
  uint64_t v18 = a6;
  uint64_t v19 = a5;
  uint64_t v7 = sub_1007FE840();
  uint64_t v8 = *(void *)(v7 - 8);
  __chkstk_darwin(v7);
  long long v10 = (char *)&v18 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v11 = sub_100058D18(&qword_100B27458);
  uint64_t v12 = *(void *)(v11 - 8);
  __chkstk_darwin(v11);
  uint64_t v14 = (char *)&v18 - ((v13 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v15 = [self defaultCenter:v18, v19];
  if (*a3 != -1) {
    swift_once();
  }
  sub_1007FE850();

  sub_10007A3A0((unint64_t *)&qword_100B3D960, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1007F7920();
  (*(void (**)(char *, uint64_t))(v8 + 8))(v10, v7);
  sub_100043334(&qword_100B27460, &qword_100B27458);
  uint64_t v16 = sub_1007F78C0();
  (*(void (**)(char *, uint64_t))(v12 + 8))(v14, v11);
  return v16;
}

uint64_t sub_10025C414(uint64_t a1, uint64_t a2)
{
  return sub_10025C1AC(a1, a2, &qword_100B22520, (uint64_t)&qword_100B271D0, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_10025A440);
}

uint64_t sub_10025C44C(uint64_t a1, uint64_t a2)
{
  return sub_10025C1AC(a1, a2, &qword_100B22528, (uint64_t)&qword_100B271D8, (uint64_t)BKAppDelegate.enableMetricsInspectorOnDebugMode(), (uint64_t)sub_10025A478);
}

uint64_t sub_10025C484()
{
  uint64_t v0 = sub_1007FE840();
  uint64_t v1 = *(void *)(v0 - 8);
  __chkstk_darwin(v0);
  uint64_t v3 = (char *)&v11 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v4 = sub_100058D18(&qword_100B27448);
  uint64_t v5 = *(void *)(v4 - 8);
  __chkstk_darwin(v4);
  uint64_t v7 = (char *)&v11 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  id v8 = [self defaultCenter];
  if (qword_100B22530 != -1) {
    swift_once();
  }
  sub_1007FE850();

  type metadata accessor for NavigationDirection(0);
  sub_10007A3A0((unint64_t *)&qword_100B3D960, (void (*)(uint64_t))&type metadata accessor for NSNotificationCenter.Publisher);
  sub_1007F78D0();
  (*(void (**)(char *, uint64_t))(v1 + 8))(v3, v0);
  sub_100043334(&qword_100B27450, &qword_100B27448);
  uint64_t v9 = sub_1007F78C0();
  (*(void (**)(char *, uint64_t))(v5 + 8))(v7, v4);
  return v9;
}

uint64_t sub_10025C700(uint64_t a1, uint8_t *a2)
{
  uint64_t v105 = a1;
  uint64_t v106 = a2;
  uint64_t v3 = sub_100058D18((uint64_t *)&unk_100B26900);
  __chkstk_darwin(v3 - 8);
  uint64_t v82 = &v77[-((v4 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v5);
  uint64_t v96 = &v77[-v6];
  uint64_t v7 = sub_1007F2BA0();
  __chkstk_darwin(v7 - 8);
  uint64_t v86 = &v77[-((v8 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v85 = sub_1007FB7F0();
  __chkstk_darwin(v85);
  uint64_t v83 = &v77[-((v9 + 15) & 0xFFFFFFFFFFFFFFF0)];
  uint64_t v10 = sub_100058D18(&qword_100B274B8);
  __chkstk_darwin(v10 - 8);
  uint64_t v87 = &v77[-((v11 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v12);
  int v84 = &v77[-v13];
  uint64_t v14 = sub_1007FB840();
  uint64_t v15 = *(void *)(v14 - 8);
  __chkstk_darwin(v14);
  uint64_t v81 = &v77[-((v16 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v17);
  unsigned __int8 v97 = &v77[-v18];
  __chkstk_darwin(v19);
  uint64_t v21 = &v77[-v20];
  __chkstk_darwin(v22);
  uint64_t v92 = &v77[-v23];
  __chkstk_darwin(v24);
  uint64_t v26 = &v77[-v25];
  __chkstk_darwin(v27);
  uint64_t v29 = &v77[-v28];
  uint64_t v30 = sub_1007FD660();
  uint64_t v31 = *(void *)(v30 - 8);
  __chkstk_darwin(v30);
  uint64_t v91 = &v77[-((v32 + 15) & 0xFFFFFFFFFFFFFFF0)];
  __chkstk_darwin(v33);
  uint64_t v35 = &v77[-v34];
  uint64_t v36 = v2;
  uint64_t v93 = *(void *)(v2 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentLocationSubject);
  sub_1007F77C0();
  sub_10007A3A0(&qword_100B274C8, (void (*)(uint64_t))&type metadata accessor for Location);
  char v37 = sub_1007FDB40();
  uint64_t v104 = v31;
  uint64_t v38 = *(void (**)(unsigned char *, uint64_t))(v31 + 8);
  uint64_t v94 = v35;
  long long v90 = v38;
  v38(v35, v30);
  uint64_t v102 = *(void (**)(unsigned char *, uint8_t *, uint64_t))(v15 + 16);
  uint64_t v103 = v15 + 16;
  v102(v29, v106, v14);
  uint64_t v100 = v15;
  char v98 = v21;
  uint64_t v95 = v36;
  if (v37)
  {
    (*(void (**)(unsigned char *, void, uint64_t))(v15 + 104))(v26, enum case for UpdateReason.locationFulfillment(_:), v14);
    sub_10007A3A0(&qword_100B274D0, (void (*)(uint64_t))&type metadata accessor for UpdateReason);
    sub_1007FDF80();
    sub_1007FDF80();
    if (v111[0] == v107 && v111[1] == v108)
    {
      swift_bridgeObjectRelease_n();
      uint64_t v39 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
      v39(v26, v14);
      uint64_t v101 = v39;
      v39(v29, v14);
    }
    else
    {
      char v66 = sub_1007FF470();
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      uint64_t v67 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
      v67(v26, v14);
      uint64_t v101 = v67;
      uint64_t result = ((uint64_t (*)(unsigned char *, uint64_t))v67)(v29, v14);
      if ((v66 & 1) == 0) {
        return result;
      }
    }
  }
  else
  {
    uint64_t v101 = *(void (**)(unsigned char *, uint64_t))(v15 + 8);
    v101(v29, v14);
  }
  if (qword_100B23348 != -1) {
    swift_once();
  }
  uint64_t v40 = sub_1007F6BC0();
  uint64_t v41 = sub_10005B838(v40, (uint64_t)qword_100B46E50);
  uint64_t v42 = v105;
  uint64_t v43 = *(void (**)(unsigned char *, uint64_t, uint64_t))(v104 + 16);
  uint64_t v44 = v91;
  uint64_t v89 = v104 + 16;
  long long v88 = v43;
  v43(v91, v105, v30);
  uint64_t v45 = v92;
  v102(v92, v106, v14);
  uint64_t v80 = v41;
  uint64_t v46 = sub_1007F6BA0();
  os_log_type_t v47 = sub_1007FE3A0();
  int v48 = v47;
  BOOL v49 = os_log_type_enabled(v46, v47);
  uint64_t v99 = v30;
  if (v49)
  {
    uint64_t v50 = swift_slowAlloc();
    uint64_t v79 = swift_slowAlloc();
    v111[0] = v79;
    *(_DWORD *)uint64_t v50 = 136315394;
    sub_10007A3A0(&qword_100B274E0, (void (*)(uint64_t))&type metadata accessor for Location);
    int v78 = v48;
    uint64_t v51 = sub_1007FF430();
    uint64_t v107 = sub_10005B0A8(v51, v52, v111);
    uint64_t v30 = v99;
    sub_1007FEE10();
    swift_bridgeObjectRelease();
    v90(v44, v30);
    *(_WORD *)(v50 + 12) = 2080;
    sub_10007A3A0(&qword_100B274D8, (void (*)(uint64_t))&type metadata accessor for UpdateReason);
    uint64_t v53 = sub_1007FF430();
    uint64_t v107 = sub_10005B0A8(v53, v54, v111);
    sub_1007FEE10();
    swift_bridgeObjectRelease();
    v101(v45, v14);
    _os_log_impl((void *)&_mh_execute_header, v46, (os_log_type_t)v78, "CurrentLocationProvider Updating #currentLoc to: %s  reason:%s", (uint8_t *)v50, 0x16u);
    swift_arrayDestroy();
    swift_slowDealloc();
    uint64_t v42 = v105;
    swift_slowDealloc();
  }
  else
  {
    v90(v44, v30);
    v101(v45, v14);
  }

  uint64_t v55 = v98;
  uint64_t v56 = v95;
  if ((sub_1007FD590() & 1) == 0)
  {
    sub_1007FD5B0();
    sub_1007F2B90();
    uint64_t v57 = (uint64_t)v84;
    sub_1007FB8B0();
    uint64_t v58 = sub_100058D18(&qword_100B27268);
    (*(void (**)(uint64_t, void, uint64_t, uint64_t))(*(void *)(v58 - 8) + 56))(v57, 0, 1, v58);
    uint64_t v59 = v87;
    sub_100058CB4(v57, (uint64_t)v87, &qword_100B274B8);
    uint64_t v60 = v56 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentDatedPageLocation;
    swift_beginAccess();
    sub_100058D5C((uint64_t)v59, v60, &qword_100B274B8);
    swift_endAccess();
  }
  v88(v94, v42, v30);
  sub_1007F77D0();
  uint64_t v61 = v56 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
  swift_beginAccess();
  uint64_t v62 = v96;
  sub_10005B044(v61, (uint64_t)v96, (uint64_t *)&unk_100B26900);
  int v63 = (*(uint64_t (**)(unsigned char *, uint64_t, uint64_t))(v104 + 48))(v62, 1, v30);
  sub_10005AFE8((uint64_t)v62, (uint64_t *)&unk_100B26900);
  v102(v55, v106, v14);
  if (v63 == 1) {
    return ((uint64_t (*)(unsigned char *, uint64_t))v101)(v55, v14);
  }
  (*(void (**)(unsigned char *, void, uint64_t))(v100 + 104))(v97, enum case for UpdateReason.userInteraction(_:), v14);
  sub_10007A3A0(&qword_100B274D0, (void (*)(uint64_t))&type metadata accessor for UpdateReason);
  sub_1007FDF80();
  sub_1007FDF80();
  if (v107 == v109 && v108 == v110) {
    char v65 = 1;
  }
  else {
    char v65 = sub_1007FF470();
  }
  swift_bridgeObjectRelease();
  swift_bridgeObjectRelease();
  uint64_t v68 = (uint64_t (*)(unsigned char *, uint64_t))v101;
  v101(v97, v14);
  uint64_t result = v68(v55, v14);
  if (v65)
  {
    unint64_t v69 = v81;
    v102(v81, v106, v14);
    uint64_t v70 = sub_1007F6BA0();
    os_log_type_t v71 = sub_1007FE3E0();
    if (os_log_type_enabled(v70, v71))
    {
      uint64_t v72 = (uint8_t *)swift_slowAlloc();
      uint64_t v73 = swift_slowAlloc();
      *(_DWORD *)uint64_t v72 = 136315138;
      uint64_t v106 = v72 + 4;
      uint64_t v107 = v73;
      sub_10007A3A0(&qword_100B274D8, (void (*)(uint64_t))&type metadata accessor for UpdateReason);
      uint64_t v74 = sub_1007FF430();
      uint64_t v109 = sub_10005B0A8(v74, v75, &v107);
      sub_1007FEE10();
      swift_bridgeObjectRelease();
      v101(v69, v14);
      _os_log_impl((void *)&_mh_execute_header, v70, v71, "CurrentLocationProvider #currentLoc cleared configurationChangeResumeLocation reason:%s", v72, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v101(v69, v14);
    }

    uint64_t v76 = (uint64_t)v82;
    (*(void (**)(unsigned char *, uint64_t, uint64_t, uint64_t))(v104 + 56))(v82, 1, 1, v99);
    swift_beginAccess();
    sub_100058D5C(v76, v61, (uint64_t *)&unk_100B26900);
    return swift_endAccess();
  }
  return result;
}

uint64_t sub_10025D48C(uint64_t a1)
{
  uint64_t v3 = sub_1007FBC10();
  uint64_t v4 = *(void *)(v3 - 8);
  __chkstk_darwin(v3);
  uint64_t v6 = (char *)&v20 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v7);
  uint64_t v9 = (char *)&v20 - v8;
  uint64_t v10 = *(void *)(v1 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_currentHistorySubject);
  sub_1007F77C0();
  sub_10007A3A0(&qword_100B274F0, (void (*)(uint64_t))&type metadata accessor for HistorySnapshot);
  char v11 = sub_1007FDB40();
  uint64_t v12 = *(uint64_t (**)(char *, uint64_t))(v4 + 8);
  uint64_t result = v12(v9, v3);
  if ((v11 & 1) == 0)
  {
    uint64_t v25 = v10;
    if (qword_100B23348 != -1) {
      swift_once();
    }
    uint64_t v14 = sub_1007F6BC0();
    sub_10005B838(v14, (uint64_t)qword_100B46E50);
    uint64_t v24 = *(void (**)(char *, uint64_t, uint64_t))(v4 + 16);
    v24(v6, a1, v3);
    uint64_t v15 = sub_1007F6BA0();
    os_log_type_t v16 = sub_1007FE3A0();
    if (os_log_type_enabled(v15, v16))
    {
      uint64_t v17 = (uint8_t *)swift_slowAlloc();
      uint64_t v22 = swift_slowAlloc();
      uint64_t v27 = v22;
      uint64_t v23 = a1;
      *(_DWORD *)uint64_t v17 = 136315138;
      uint64_t v20 = v17 + 4;
      uint64_t v21 = v17;
      sub_10007A3A0(&qword_100B274F8, (void (*)(uint64_t))&type metadata accessor for HistorySnapshot);
      uint64_t v18 = sub_1007FF430();
      uint64_t v26 = sub_10005B0A8(v18, v19, &v27);
      a1 = v23;
      sub_1007FEE10();
      swift_bridgeObjectRelease();
      v12(v6, v3);
      _os_log_impl((void *)&_mh_execute_header, v15, v16, "CurrentLocationProvider updating currentHistory %s", v21, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {
      v12(v6, v3);
    }

    v24(v9, a1, v3);
    return sub_1007F77D0();
  }
  return result;
}

void sub_10025D7F8()
{
  uint64_t v1 = sub_100058D18((uint64_t *)&unk_100B27090);
  __chkstk_darwin(v1 - 8);
  uint64_t v56 = (char *)v51 - ((v2 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v3 = sub_100058D18((uint64_t *)&unk_100B43B60);
  __chkstk_darwin(v3 - 8);
  uint64_t v55 = (char *)v51 - ((v4 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v5 = sub_1007FB840();
  uint64_t v59 = *(void *)(v5 - 8);
  uint64_t v60 = v5;
  __chkstk_darwin(v5);
  uint64_t v58 = (char *)v51 - ((v6 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v7 = sub_100058D18((uint64_t *)&unk_100B26900);
  __chkstk_darwin(v7 - 8);
  uint64_t v9 = (char *)v51 - ((v8 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v10);
  uint64_t v12 = (char *)v51 - v11;
  __chkstk_darwin(v13);
  uint64_t v15 = (char *)v51 - v14;
  uint64_t v16 = sub_1007FD660();
  uint64_t v17 = *(void *)(v16 - 8);
  __chkstk_darwin(v16);
  unint64_t v19 = (char *)v51 - ((v18 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v20);
  uint64_t v57 = (uint64_t)v51 - v21;
  __chkstk_darwin(v22);
  uint64_t v24 = (char *)v51 - v23;
  uint64_t v25 = v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_configurationChangeResumeLocation;
  swift_beginAccess();
  sub_10005B044(v25, (uint64_t)v15, (uint64_t *)&unk_100B26900);
  if ((*(unsigned int (**)(char *, uint64_t, uint64_t))(v17 + 48))(v15, 1, v16) == 1)
  {
    uint64_t v54 = v16;
    sub_10005AFE8((uint64_t)v15, (uint64_t *)&unk_100B26900);
    type metadata accessor for CurrentLocationProvider();
    sub_10007A3A0((unint64_t *)&unk_100B47030, (void (*)(uint64_t))type metadata accessor for CurrentLocationProvider);
    sub_1007FC080();
    if (sub_1007FDE20())
    {
      v51[1] = v0;
      sub_1007F77C0();
      v51[0] = sub_1007FD630();
      uint64_t v26 = v54;
      unint64_t v52 = *(void (**)(char *, uint64_t))(v17 + 8);
      uint64_t v53 = v17 + 8;
      v52(v19, v54);
      uint64_t v27 = sub_100058D18(&qword_100B274E8);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v27 - 8) + 56))(v55, 1, 1, v27);
      uint64_t v28 = sub_100058D18(&qword_100B38D10);
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v28 - 8) + 56))(v56, 1, 1, v28);
      swift_bridgeObjectRetain();
      uint64_t v29 = v57;
      sub_1007FD620();
      (*(void (**)(char *, uint64_t, uint64_t))(v17 + 16))(v12, v29, v26);
      (*(void (**)(char *, void, uint64_t, uint64_t))(v17 + 56))(v12, 0, 1, v26);
      sub_100058CB4((uint64_t)v12, (uint64_t)v9, (uint64_t *)&unk_100B26900);
      swift_beginAccess();
      sub_100058D5C((uint64_t)v9, v25, (uint64_t *)&unk_100B26900);
      swift_endAccess();
      if (qword_100B23348 != -1) {
        swift_once();
      }
      uint64_t v30 = sub_1007F6BC0();
      sub_10005B838(v30, (uint64_t)qword_100B46E50);
      swift_bridgeObjectRetain();
      uint64_t v31 = sub_1007F6BA0();
      os_log_type_t v32 = sub_1007FE3E0();
      if (os_log_type_enabled(v31, v32))
      {
        uint64_t v33 = (uint8_t *)swift_slowAlloc();
        v62[0] = swift_slowAlloc();
        *(_DWORD *)uint64_t v33 = 136446210;
        uint64_t v34 = sub_1007FDDF0();
        uint64_t v61 = sub_10005B0A8(v34, v35, v62);
        uint64_t v26 = v54;
        sub_1007FEE10();
        swift_bridgeObjectRelease_n();
        swift_bridgeObjectRelease();
        _os_log_impl((void *)&_mh_execute_header, v31, v32, "CurrentLocationProvider captured #currentLoc configurationChangeResumeLocation: %{public}s", v33, 0xCu);
        swift_arrayDestroy();
        swift_slowDealloc();
        swift_slowDealloc();
      }
      else
      {

        swift_bridgeObjectRelease_n();
      }
      int v48 = (uint8_t *)v58;
      uint64_t v47 = v59;
      uint64_t v49 = v60;
      (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, enum case for UpdateReason.configurationChange(_:), v60);
      uint64_t v50 = v57;
      sub_10025C700(v57, v48);
      (*(void (**)(uint8_t *, uint64_t))(v47 + 8))(v48, v49);
      v52((char *)v50, v26);
    }
    else
    {
      swift_bridgeObjectRelease();
      if (qword_100B23348 != -1) {
        swift_once();
      }
      uint64_t v43 = sub_1007F6BC0();
      sub_10005B838(v43, (uint64_t)qword_100B46E50);
      uint64_t v44 = sub_1007F6BA0();
      os_log_type_t v45 = sub_1007FE3A0();
      if (os_log_type_enabled(v44, v45))
      {
        uint64_t v46 = (uint8_t *)swift_slowAlloc();
        *(_WORD *)uint64_t v46 = 0;
        _os_log_impl((void *)&_mh_execute_header, v44, v45, "#currentLoc readingLocationCFI is invalid -- Skipping capture of configurationChangeResumeLocation", v46, 2u);
        swift_slowDealloc();
      }
    }
  }
  else
  {
    (*(void (**)(char *, char *, uint64_t))(v17 + 32))(v24, v15, v16);
    if (qword_100B23348 != -1) {
      swift_once();
    }
    uint64_t v36 = sub_1007F6BC0();
    sub_10005B838(v36, (uint64_t)qword_100B46E50);
    char v37 = sub_1007F6BA0();
    os_log_type_t v38 = sub_1007FE3A0();
    if (os_log_type_enabled(v37, v38))
    {
      uint64_t v39 = (uint8_t *)swift_slowAlloc();
      *(_WORD *)uint64_t v39 = 0;
      _os_log_impl((void *)&_mh_execute_header, v37, v38, "#currentLoc configurationChangeResumeLocation is set -- Skipping capture of configurationChangeResumeLocation", v39, 2u);
      swift_slowDealloc();
    }

    uint64_t v41 = (uint8_t *)v58;
    uint64_t v40 = v59;
    uint64_t v42 = v60;
    (*(void (**)(char *, void, uint64_t))(v59 + 104))(v58, enum case for UpdateReason.configurationChange(_:), v60);
    sub_10025C700((uint64_t)v24, v41);
    (*(void (**)(uint8_t *, uint64_t))(v40 + 8))(v41, v42);
    (*(void (**)(char *, uint64_t))(v17 + 8))(v24, v16);
  }
}

void sub_10025E0F8(uint64_t a1, uint64_t a2)
{
  uint64_t v3 = v2;
  if (sub_1007FDE20())
  {
    if (qword_100B23348 != -1) {
      swift_once();
    }
    uint64_t v6 = sub_1007F6BC0();
    sub_10005B838(v6, (uint64_t)qword_100B46E50);
    swift_bridgeObjectRetain_n();
    uint64_t v7 = sub_1007F6BA0();
    os_log_type_t v8 = sub_1007FE3A0();
    if (os_log_type_enabled(v7, v8))
    {
      uint64_t v9 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v9 = 136446210;
      uint64_t v10 = sub_1007FDDF0();
      sub_10005B0A8(v10, v11, &v19);
      sub_1007FEE10();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v7, v8, "#visibleCFI CurrentLocationProvider: staging readingLocationCFI: %{public}s", v9, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    uint64_t v18 = (void *)(v3 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI);
    void *v18 = a1;
    v18[1] = a2;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRelease();
  }
  else
  {
    if (qword_100B23348 != -1) {
      swift_once();
    }
    uint64_t v12 = sub_1007F6BC0();
    sub_10005B838(v12, (uint64_t)qword_100B46E50);
    swift_bridgeObjectRetain_n();
    uint64_t v13 = sub_1007F6BA0();
    os_log_type_t v14 = sub_1007FE3C0();
    if (os_log_type_enabled(v13, v14))
    {
      uint64_t v15 = (uint8_t *)swift_slowAlloc();
      uint64_t v19 = swift_slowAlloc();
      *(_DWORD *)uint64_t v15 = 136446210;
      uint64_t v16 = sub_1007FDDF0();
      sub_10005B0A8(v16, v17, &v19);
      sub_1007FEE10();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      _os_log_impl((void *)&_mh_execute_header, v13, v14, "#visibleCFI CurrentLocationProvider: Attempt to stage invalid CFI: %{public}s", v15, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
  }
}

void sub_10025E444()
{
  uint64_t v1 = sub_100058D18(&qword_100B274C0);
  uint64_t v2 = *(void *)(v1 - 8);
  __chkstk_darwin(v1);
  uint64_t v4 = (char *)v24 - ((v3 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v5);
  uint64_t v7 = (char *)v24 - v6;
  os_log_type_t v8 = (uint64_t *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI);
  uint64_t v9 = *(void *)(v0 + OBJC_IVAR____TtC5Books23CurrentLocationProvider_pendingReadingLocationCFI + 8);
  if (!v9)
  {
    if (qword_100B23348 != -1) {
      swift_once();
    }
    uint64_t v18 = sub_1007F6BC0();
    sub_10005B838(v18, (uint64_t)qword_100B46E50);
    os_log_t v27 = (os_log_t)sub_1007F6BA0();
    os_log_type_t v19 = sub_1007FE3C0();
    if (!os_log_type_enabled(v27, v19)) {
      goto LABEL_16;
    }
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "#visibleCFI CurrentLocationProvider: Attempt to commit without a CFI.";
    goto LABEL_15;
  }
  uint64_t v10 = *v8;
  uint64_t *v8 = 0;
  v8[1] = 0;
  if (sub_1007FDE20())
  {
    if (qword_100B23348 != -1) {
      swift_once();
    }
    uint64_t v11 = sub_1007F6BC0();
    sub_10005B838(v11, (uint64_t)qword_100B46E50);
    swift_bridgeObjectRetain_n();
    uint64_t v12 = sub_1007F6BA0();
    os_log_type_t v13 = sub_1007FE3A0();
    if (os_log_type_enabled(v12, v13))
    {
      os_log_type_t v14 = (uint8_t *)swift_slowAlloc();
      os_log_t v27 = (os_log_t)swift_slowAlloc();
      v29[0] = (uint64_t)v27;
      uint64_t v25 = v14;
      os_log_t v26 = v12;
      *(_DWORD *)os_log_type_t v14 = 136446210;
      v24[1] = v14 + 4;
      uint64_t v15 = sub_1007FDDF0();
      uint64_t v28 = sub_10005B0A8(v15, v16, v29);
      sub_1007FEE10();
      swift_bridgeObjectRelease_n();
      swift_bridgeObjectRelease();
      os_log_t v17 = v26;
      _os_log_impl((void *)&_mh_execute_header, v26, v13, "#visibleCFI CurrentLocationProvider: adopting readingLocationCFI: %{public}s", v25, 0xCu);
      swift_arrayDestroy();
      swift_slowDealloc();
      swift_slowDealloc();
    }
    else
    {

      swift_bridgeObjectRelease_n();
    }
    v29[0] = v10;
    v29[1] = v9;
    sub_1007F77C0();
    sub_1007FB890();
    (*(void (**)(char *, char *, uint64_t))(v2 + 16))(v4, v7, v1);
    sub_1007F77D0();
    (*(void (**)(char *, uint64_t))(v2 + 8))(v7, v1);
    swift_bridgeObjectRelease();
    return;
  }
  swift_bridgeObjectRelease();
  if (qword_100B23348 != -1) {
    swift_once();
  }
  uint64_t v22 = sub_1007F6BC0();
  sub_10005B838(v22, (uint64_t)qword_100B46E50);
  os_log_t v27 = (os_log_t)sub_1007F6BA0();
  os_log_type_t v19 = sub_1007FE3C0();
  if (os_log_type_enabled(v27, v19))
  {
    uint64_t v20 = (uint8_t *)swift_slowAlloc();
    *(_WORD *)uint64_t v20 = 0;
    uint64_t v21 = "#visibleCFI CurrentLocationProvider: Attempt to commit an invalid CFI.";
LABEL_15:
    _os_log_impl((void *)&_mh_execute_header, v27, v19, v21, v20, 2u);
    swift_slowDealloc();
  }
LABEL_16:
  os_log_t v23 = v27;
}

void sub_10025E8CC(uint64_t a1)
{
  id v3 = [self defaultCenter];
  if (qword_100B22530 != -1) {
    swift_once();
  }
  uint64_t v4 = qword_100B271E0;
  sub_100058D18(&qword_100B39180);
  uint64_t inited = swift_initStackObject();
  *(_OWORD *)(inited + 16) = xmmword_10085CCE0;
  sub_1007FF050();
  type metadata accessor for NavigationDirection(0);
  *(void *)(inited + 96) = v6;
  *(void *)(inited + 72) = a1;
  sub_100073CA4(inited);
  Class isa = sub_1007FDA50().super.isa;
  swift_bridgeObjectRelease();
  [v3 postNotificationName:v4 object:v1 userInfo:isa];
}

uint64_t sub_10025EB98(uint64_t a1)
{
  *(void *)(v2 + 304) = a1;
  *(void *)(v2 + 312) = v1;
  return _swift_task_switch(sub_10025EBB8, 0, 0);
}

uint64_t sub_10025EBB8()
{
  uint64_t v1 = (void *)swift_task_alloc();
  *(void *)(v0 + 32sub_1007E6FC4(2, 18, 1, 0) = v1;
  void *v1 = v0;
  v1[1] = sub_10025EC5C;
  uint64_t v2 = *(void *)(v0 + 304);
  return sub_1003B7ED0(v0 + 16, v2);
}

uint64_t sub_10025EC5C()
{
  *(void *)(*(void *)v1 + 328) = v0;
  swift_task_dealloc();
  if (v0) {
    uint64_t v2 = sub_10025F154;
  }
  else {
    uint64_t v2 = sub_10025ED70;
  }
  return _swift_task_switch(v2, 0, 0);
}

uint64_t sub_10025ED70()
{
  sub_10005E20C(v0 + 16, v0 + 48);
  sub_100058D18(&qword_100B23730);
  if (swift_dynamicCast())
  {
    uint64_t v1 = *(void *)(v0 + 280);
    if (*(void *)(v1 + 16))
    {
      unint64_t v2 = sub_10005E0B0(0x7365726F6373, 0xE600000000000000);
      if (v3)
      {
        sub_10005E20C(*(void *)(v1 + 56) + 32 * v2, v0 + 144);
        sub_10005E614((_OWORD *)(v0 + 144), (_OWORD *)(v0 + 112));
        sub_10005E20C(v0 + 112, v0 + 176);
        sub_100058D18((uint64_t *)&unk_100B27670);
        if (swift_dynamicCast())
        {
          uint64_t v4 = *(void *)(v0 + 272);
          if (*(void *)(v1 + 16) && (unint64_t v5 = sub_10005E0B0(0x7364496D616461, 0xE700000000000000), (v6 & 1) != 0))
          {
            sub_10005E20C(*(void *)(v1 + 56) + 32 * v5, v0 + 208);
          }
          else
          {
            *(_OWORD *)(v0 + 208) = 0u;
            *(_OWORD *)(v0 + 224) = 0u;
          }
          swift_bridgeObjectRelease();
          if (*(void *)(v0 + 232))
          {
            sub_10005E614((_OWORD *)(v0 + 208), (_OWORD *)(v0 + 240));
            sub_10005E20C(v0 + 240, v0 + 80);
            sub_100058D18(&qword_100B27680);
            if (swift_dynamicCast())
            {
              if (*(void *)(v4 + 16) == *(void *)(*(void *)(v0 + 288) + 16))
              {
                uint64_t v13 = sub_10025F16C(*(void *)(v0 + 288), v4);
                swift_bridgeObjectRelease();
                swift_bridgeObjectRelease();
                _s5Books15CurrentPageViewVwxx_0(v0 + 240);
                _s5Books15CurrentPageViewVwxx_0(v0 + 112);
                _s5Books15CurrentPageViewVwxx_0(v0 + 16);
                os_log_type_t v14 = *(uint64_t (**)(uint64_t))(v0 + 8);
                return v14(v13);
              }
              swift_bridgeObjectRelease();
              swift_bridgeObjectRelease();
              sub_10025FFB0();
              swift_allocError();
              char v16 = 5;
            }
            else
            {
              swift_bridgeObjectRelease();
              sub_10025FFB0();
              swift_allocError();
              char v16 = 4;
            }
            char *v15 = v16;
            swift_willThrow();
            _s5Books15CurrentPageViewVwxx_0(v0 + 240);
            goto LABEL_27;
          }
          swift_bridgeObjectRelease();
          sub_10006CA38(v0 + 208);
          sub_10025FFB0();
          swift_allocError();
          char v12 = 3;
        }
        else
        {
          swift_bridgeObjectRelease();
          sub_10025FFB0();
          swift_allocError();
          char v12 = 2;
        }
        *uint64_t v11 = v12;
        swift_willThrow();
LABEL_27:
        _s5Books15CurrentPageViewVwxx_0(v0 + 112);
        goto LABEL_11;
      }
    }
    swift_bridgeObjectRelease();
    sub_10025FFB0();
    swift_allocError();
    unsigned char *v8 = 1;
  }
  else
  {
    sub_10025FFB0();
    swift_allocError();
    unsigned char *v7 = 0;
  }
  swift_willThrow();
LABEL_11:
  _s5Books15CurrentPageViewVwxx_0(v0 + 16);
  uint64_t v9 = *(uint64_t (**)(void))(v0 + 8);
  return v9();
}

uint64_t sub_10025F154()
{
  return (*(uint64_t (**)(void))(v0 + 8))();
}

uint64_t sub_10025F16C(uint64_t a1, uint64_t a2)
{
  uint64_t v4 = sub_100058D18(&qword_100B27688);
  __chkstk_darwin(v4 - 8);
  uint64_t v72 = (char *)v52 - ((v5 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v6 = sub_100058D18(&qword_100B27690);
  __chkstk_darwin(v6 - 8);
  os_log_type_t v71 = (char *)v52 - ((v7 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v70 = sub_1007F6640();
  uint64_t v8 = *(void *)(v70 - 8);
  __chkstk_darwin(v70);
  unint64_t v69 = (char *)v52 - ((v9 + 15) & 0xFFFFFFFFFFFFFFF0);
  uint64_t v10 = sub_1007F66B0();
  uint64_t v11 = __chkstk_darwin(v10 - 8);
  char v66 = (char *)v52 - ((v12 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v11);
  uint64_t v58 = (char *)v52 - v13;
  uint64_t v68 = sub_1007F5A60();
  uint64_t v14 = *(void *)(v68 - 8);
  uint64_t v15 = __chkstk_darwin(v68);
  uint64_t v17 = (char *)v52 - ((v16 + 15) & 0xFFFFFFFFFFFFFFF0);
  __chkstk_darwin(v15);
  uint64_t v57 = (char *)v52 - v18;
  unint64_t v19 = *(void *)(a1 + 16);
  unint64_t v20 = *(void *)(a2 + 16);
  if (v20 >= v19) {
    int64_t v21 = *(void *)(a1 + 16);
  }
  else {
    int64_t v21 = *(void *)(a2 + 16);
  }
  uint64_t v76 = _swiftEmptyArrayStorage;
  sub_100404C70(0, v21, 0);
  uint64_t v22 = v76;
  os_log_t v23 = &off_10085C000;
  uint64_t v67 = v14;
  uint64_t v56 = a1;
  uint64_t v55 = a2;
  v52[0] = v8;
  unint64_t v54 = v19;
  int64_t v53 = v20;
  if (v21)
  {
    uint64_t v64 = v17;
    uint64_t v24 = (void *)(a1 + 32);
    uint64_t v25 = a2 + 32;
    LODWORD(v63) = enum case for Book.MediaType.ebook(_:);
    uint64_t v62 = (void (**)(char *, void, uint64_t))(v8 + 104);
    LODWORD(v61) = enum case for RecommendationSource.siri(_:);
    *(void *)&long long v60 = v14 + 32;
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
    long long v59 = xmmword_10085CCE0;
    int64_t v26 = v21;
    unint64_t v27 = v19;
    int64_t v65 = v21;
    while (v27)
    {
      if (!v20) {
        goto LABEL_28;
      }
      int64_t v73 = v26;
      uint64_t v74 = v22;
      unint64_t v75 = v24;
      if ((*v24 & 0x8000000000000000) != 0) {
        goto LABEL_31;
      }
      (*v62)(v69, v63, v70);
      sub_100058D18(&qword_100B27698);
      uint64_t v28 = sub_1007F60F0();
      uint64_t v29 = *(void *)(v28 - 8);
      unint64_t v30 = (*(unsigned __int8 *)(v29 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v29 + 80);
      uint64_t v31 = swift_allocObject();
      *(_OWORD *)(v31 + 16) = v59;
      (*(void (**)(unint64_t, void, uint64_t))(v29 + 104))(v31 + v30, v61, v28);
      uint64_t v32 = sub_1007F6680();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v32 - 8) + 56))(v71, 1, 1, v32);
      uint64_t v33 = sub_1007F64B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v33 - 8) + 56))(v72, 1, 1, v33);
      sub_1007F64E0();
      uint64_t v34 = v25;
      unint64_t v35 = v64;
      sub_1007F5A20();
      uint64_t v22 = v74;
      uint64_t v76 = v74;
      unint64_t v37 = v74[2];
      unint64_t v36 = v74[3];
      if (v37 >= v36 >> 1)
      {
        sub_100404C70(v36 > 1, v37 + 1, 1);
        uint64_t v22 = v76;
      }
      void v22[2] = v37 + 1;
      uint64_t v14 = v67;
      (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v14 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v14 + 80))+ *(void *)(v14 + 72) * v37, v35, v68);
      --v20;
      --v27;
      uint64_t v25 = v34 + 8;
      uint64_t v24 = v75 + 1;
      int64_t v26 = v73 - 1;
      int64_t v21 = v65;
      os_log_t v23 = &off_10085C000;
      if (v73 == 1) {
        goto LABEL_14;
      }
    }
    __break(1u);
LABEL_28:
    __break(1u);
  }
  else
  {
    swift_bridgeObjectRetain();
    swift_bridgeObjectRetain();
LABEL_14:
    if (v54 <= v53)
    {
LABEL_26:
      swift_bridgeObjectRelease();
      swift_bridgeObjectRelease();
      return (uint64_t)v22;
    }
    os_log_type_t v38 = 0;
    LODWORD(v73) = enum case for Book.MediaType.ebook(_:);
    char v66 = (char *)(v52[0] + 104);
    LODWORD(v64) = enum case for RecommendationSource.siri(_:);
    uint64_t v63 = v14 + 32;
    if (v21 <= v53) {
      int64_t v39 = v53;
    }
    else {
      int64_t v39 = v21;
    }
    uint64_t v74 = (void *)(v39 - v21);
    uint64_t v40 = (void (**)(char *, void, uint64_t))(v54 - v21);
    unint64_t v75 = (void *)(v53 - v21);
    uint64_t v41 = 8 * v21 + 32;
    int64_t v65 = v56 + v41;
    uint64_t v61 = v55 + v41;
    long long v60 = *((_OWORD *)v23 + 206);
    uint64_t v62 = (void (**)(char *, void, uint64_t))(v54 - v21);
    while (v40 != v38)
    {
      if (v75 == v38) {
        goto LABEL_26;
      }
      if (v74 == v38) {
        goto LABEL_30;
      }
      if ((*(void *)(v65 + 8 * (void)v38) & 0x8000000000000000) != 0) {
        goto LABEL_31;
      }
      (*(void (**)(char *, void, uint64_t))v66)(v69, v73, v70);
      sub_100058D18(&qword_100B27698);
      uint64_t v42 = sub_1007F60F0();
      uint64_t v43 = *(void *)(v42 - 8);
      unint64_t v44 = (*(unsigned __int8 *)(v43 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v43 + 80);
      uint64_t v45 = swift_allocObject();
      *(_OWORD *)(v45 + 16) = v60;
      (*(void (**)(unint64_t, void, uint64_t))(v43 + 104))(v45 + v44, v64, v42);
      uint64_t v46 = sub_1007F6680();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v46 - 8) + 56))(v71, 1, 1, v46);
      uint64_t v47 = sub_1007F64B0();
      (*(void (**)(char *, uint64_t, uint64_t, uint64_t))(*(void *)(v47 - 8) + 56))(v72, 1, 1, v47);
      sub_1007F64E0();
      int v48 = v57;
      sub_1007F5A20();
      uint64_t v76 = v22;
      unint64_t v50 = v22[2];
      unint64_t v49 = v22[3];
      if (v50 >= v49 >> 1)
      {
        sub_100404C70(v49 > 1, v50 + 1, 1);
        uint64_t v22 = v76;
      }
      void v22[2] = v50 + 1;
      (*(void (**)(unint64_t, char *, uint64_t))(v67 + 32))((unint64_t)v22+ ((*(unsigned __int8 *)(v67 + 80) + 32) & ~(unint64_t)*(unsigned __int8 *)(v67 + 80))+ *(void *)(v67 + 72) * v50, v48, v68);
      os_log_type_t v38 = (void *)((char *)v38 + 1);
      uint64_t v40 = v62;
      if (v62 == v38) {
        goto LABEL_26;
      }
    }
  }
  __break(1u);
LABEL_30:
  __break(1u);
LABEL_31:
  uint64_t result = sub_1007FF250();
  __break(1u);
  return result;
}